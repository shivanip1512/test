<?xml version="1.0" encoding="UTF-8"?>

<!-- build.xml - builds the selenium framework and runs the test classes.
It also has tags for subversion checkout and updates and svn*.jar libs are in used.
Author: anuradha.uduwage
-->
<project name="Yukon-Selenium-Framework" default="compile" basedir=".">
	
	<!-- The directory containing source code -->
	<property name="src.dir" value="src"/>
	
	<!-- Temporary build directories -->
	<property name="build.dir" value="/YukonSelenium"/>
	<property name="build.classes" value="${build.dir}/classes"/>
	<property name="build.jar" value="${build.dir}/jar"/>
	<property name="testng.output" value="${build.dir}/testng"/>
	<property name="copy.src" value="/yukonSelenium.src"/>
	<property name="java.docs" value="${build.dir}/docs"/>
	<property name="checkout" value="/svncheckout"/>
	<property name="reportRepo" value="/SeleniumReports"/>
	
	<!-- depended jar files -->
	<property name="src.lib" value="lib"/>
	
	<!-- test report location -->
	<property name="test.reports" value="${build.dir}/reports"/>
	<property name="test.reports.html" value="${test.reports}/html"/>
	<!-- <property name="syspropfile" value="C:\DevWorkSpace\Selenium\Yukon-Selenium-Framework"/> -->

	
	<path id="classpath">
		<fileset dir="${src.lib}" includes="**/*.jar"></fileset>
		<!-- <fileset dir="${build.classes}" includes="**/*.class"></fileset> -->
	</path>
	
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="classpath"/> 
	
	<!-- Target to creat the build directories pripr to the compile target -->
	<target name="prepare" description="Creating necessary file structure for build process.">
		<echo message="Creating necessary directory structure" />
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.jar}"/>
		<mkdir dir="${test.reports}"/>
		<mkdir dir="${testng.output}" />
		<mkdir dir="${copy.src}"/>
		<mkdir dir="${build.dir}/docs" />
		<mkdir dir="${test.reports.html}" />
		<mkdir dir="${checkout}"/>
	</target>
	
	<target name="clean" description="Remoes all generated files.">
		<echo message="Clean up process in action..." />
		<delete dir="${build.dir}"/>
		<delete dir="${copy.src}" />
	</target>
	
	<target name="compile" depends="prepare" description="Compiles all source code.">
		<javac srcdir="${src.dir}" destdir="${build.classes}" classpathref="classpath"/>
		<copy todir="${build.classes}">
			<fileset dir="${src.dir}" excludes="**/*.java"/>
		</copy>
	</target>
	
	<!-- Compile the project and build jar file -->
	<target name="jar" depends="compile" 
			description="Generates final jar">
		<echo message="Generating necessary jar files" />
		<copy todir="${build.jar}">
			<fileset dir="lib" excludes="**/*.java"/>
		</copy>
		<jar jarfile="${build.jar}/yukonSelenium.jar"
				basedir="${build.classes}">
		
			<manifest>
				<attribute name="Main-Class" value="com.cannontech.selenium.test.TestMainSel"/>
				<attribute name="Class-Path" 
					value="${build.jar}/log4j-1.2.15.jar ${build.jar}/junit-4.6.jar ${build.jar}/selenium-java-client-driver.jar ${build.jar}/dom4j-1.6.1.jar ${build.jar}/testng-5.10-jdk15.jar"/>
			</manifest>
		</jar>
	</target>
	
	<target name="build-all" depends="clean, jar" 
		description="Cleans, Compiles, then builds the JAR file">
	</target>
	
	<target name="run" depends="jar">
		<java jar="${build.jar}/yukonSelenium.jar" fork="true">
			<classpath>
				<path refid="classpath"/>
				<path id="application" location="${build.jar}/yukonSelenium.jar"/>
			</classpath>
		</java>	
	</target>
	
	<!-- Run all the test classes  -->
	<target name="run-tests" depends="jar" description="target to execute all the selenium tests.">
		<echo message="Getting ready to run selenium tests" />
		<junit printsummary="withOutAndErr" fork="yes">
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>
			<batchtest fork="yes">
				<fileset dir="${src.dir}" includes="**/Test*Selenium.java"/>
			</batchtest>
			<sysproperty key="default.browser" value="${default.browser}"/>
		</junit>
	</target>
	
	<!-- Run all the test in the root module which is test -->
	<target name="run-tests-test" depends="jar" description="target to execute all the selenium tests.">
		<echo message="Getting ready to run selenium tests" />
		<junit printsummary="withOutAndErr" fork="yes">
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>
			<batchtest fork="yes">
				<fileset dir="${src.dir}" includes="/com/cannontech/selenium/test/Test*Selenium.java"/>
			</batchtest>
		</junit>
	</target>	

	<!-- Run all the tests in asetup module -->
	<target name="run-tests-asetup" depends="jar" description="target to execute all the selenium tests.">
		<echo message="Getting ready to run selenium tests" />
		<junit printsummary="true" failureproperty="junit.failure" >
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>		
			<batchtest todir="${test.reports}">
				<fileset dir="${build.classes}" includes="/com/cannontech/selenium/test/asetup/Test*Selenium.class"/>
				<formatter type="xml" />
			</batchtest>
		</junit>
		
		<!-- Create html reports -->
		<echo message="running JUnit Report" />
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}" />
			<report todir="${test.reports.html}" />
		</junitreport>
		<tstamp>
			<format property="start.timestamp" pattern="yyyyMMdd-HHmmss" />
		</tstamp>
		<mkdir dir="${reportRepo}/report-Asetup-${start.timestamp}"/>
		<copy todir="${reportRepo}/report-${start.timestamp}">
			<fileset dir="${test.reports}" />
		</copy>			
		<fail if = "junit.failure" message = "Unit test(s) failed. See Reports!"/>		

	</target>	
	
	<!-- Run all the tests in cap control module -->
	<target name="run-tests-cc" depends="jar" description="target to execute all the selenium tests under Cap Control module.">
		
		<junit printsummary="true" failureproperty="junit.failure" >
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>		
			<batchtest todir="${test.reports}">
				<fileset dir="${build.classes}" includes="/com/cannontech/selenium/test/capcontrol/Test*Selenium.class"/>
				<formatter type="xml" />
			</batchtest>
		</junit>
		
		<!-- Create html reports -->
		<echo message="running JUnit Report" />
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}" />
			<report todir="${test.reports.html}" />
		</junitreport>
		<tstamp>
			<format property="start.timestamp" pattern="yyyyMMdd-HHmmss" />
		</tstamp>
		<mkdir dir="${reportRepo}/report-CC-${start.timestamp}"/>
		<copy todir="${reportRepo}/report-${start.timestamp}">
			<fileset dir="${test.reports}" />
		</copy>			
		<fail if = "junit.failure" message = "Unit test(s) failed. See Reports!"/>

	</target>	
	
	<!-- Run all the tests in demand response module -->
	<target name="run-tests-dr" depends="build-all" description="target to execute all the selenium tests.">
		<echo message="Getting ready to run selenium tests" />
		<junit printsummary="true" failureproperty="junit.failure" >
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>		
			<batchtest todir="${test.reports}">
				<fileset dir="${build.classes}" includes="/com/cannontech/selenium/test/demandresponse/Test*Selenium.class"/>
				<formatter type="xml" />
			</batchtest>
		</junit>
		
		<!-- Create html reports -->
		<echo message="running JUnit Report" />
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}" />
			<report todir="${test.reports.html}" />
		</junitreport>
		<tstamp>
			<format property="start.timestamp" pattern="yyyyMMdd-HHmmss" />
		</tstamp>
		<mkdir dir="${reportRepo}/report-DR-${start.timestamp}"/>
		<copy todir="${reportRepo}/report-${start.timestamp}">
			<fileset dir="${test.reports}" />
		</copy>			
		<fail if = "junit.failure" message = "Unit test(s) failed. See Reports!"/>
		
	</target>
	
	<!-- Run all the tests in metering module -->
	<target name="run-tests-meter" depends="build-all" description="target to execute all the selenium tests.">
		<echo message="Getting ready to run selenium tests" />
		<junit printsummary="true" failureproperty="junit.failure" >
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>		
			<batchtest todir="${test.reports}">
				<fileset dir="${build.classes}" includes="/com/cannontech/selenium/test/metering/Test*Selenium.java"/>
				<formatter type="xml" />
			</batchtest>
		</junit>
		
		<!-- Create html reports -->
		<echo message="running JUnit Report" />
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}" />
			<report todir="${test.reports.html}" />
		</junitreport>
		<tstamp>
			<format property="start.timestamp" pattern="yyyyMMdd-HHmmss" />
		</tstamp>
		<mkdir dir="${reportRepo}/report-Meter-${start.timestamp}"/>
		<copy todir="${reportRepo}/report-${start.timestamp}">
			<fileset dir="${test.reports}" />
		</copy>			
		<fail if = "junit.failure" message = "Unit test(s) failed. See Reports!"/>
	
	</target>	
	
	<!-- Run all the tests in navigation module -->
	<target name="run-tests-navigation" depends="jar" description="target to execute all the selenium tests.">
		<echo message="Getting ready to run selenium tests" />
		<junit printsummary="true" failureproperty="junit.failure" >
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>		
			<batchtest todir="${test.reports}">
				<fileset dir="${build.classes}" includes="/com/cannontech/selenium/test/navigation/Test*Selenium.class"/>
				<formatter type="xml" />
			</batchtest>
		</junit>
		
		<!-- Create html reports -->
		<echo message="running JUnit Report" />
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}" />
			<report todir="${test.reports.html}" />
		</junitreport>
		<tstamp>
			<format property="start.timestamp" pattern="yyyyMMdd-HHmmss" />
		</tstamp>
		<mkdir dir="${reportRepo}/report-Nav-${start.timestamp}"/>
		<copy todir="${reportRepo}/report-${start.timestamp}">
			<fileset dir="${test.reports}" />
		</copy>			
		<fail if = "junit.failure" message = "Unit test(s) failed. See Reports!"/>		
	
	</target>

	<!-- Run all the tests in stars module -->
	<target name="run-tests-stars" depends="jar" description="target to execute all the selenium tests.">
		<echo message="Getting ready to run selenium tests" />
		<junit printsummary="true" failureproperty="junit.failure" >
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>		
			<batchtest todir="${test.reports}">
				<fileset dir="${build.classes}" includes="/com/cannontech/selenium/test/stars/Test*Selenium.class"/>
				<formatter type="xml" />
			</batchtest>
		</junit>
		
		<!-- Create html reports -->
		<echo message="running JUnit Report" />
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}" />
			<report todir="${test.reports.html}" />
		</junitreport>
		<tstamp>
			<format property="start.timestamp" pattern="yyyyMMdd-HHmmss" />
		</tstamp>
		<mkdir dir="${reportRepo}/report-Stars-${start.timestamp}"/>
		<copy todir="${reportRepo}/report-${start.timestamp}">
			<fileset dir="${test.reports}" />
		</copy>			
		<fail if = "junit.failure" message = "Unit test(s) failed. See Reports!"/>		

	</target>
	
	<!-- Run all the tests in authentication module -->
	<target name="run-tests-authentication" depends="jar" description="target to execute all the selenium tests.">
		<echo message="Getting ready to run selenium tests" />
		<junit printsummary="true" failureproperty="junit.failure" >
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>		
			<batchtest todir="${test.reports}">
				<fileset dir="${build.classes}" includes="/com/cannontech/selenium/test/authentication/Test*Selenium.class"/>
				<formatter type="xml" />
			</batchtest>
		</junit>
		
		<!-- Create html reports -->
		<echo message="running JUnit Report" />
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}" />
			<report todir="${test.reports.html}" />
		</junitreport>
		<tstamp>
			<format property="start.timestamp" pattern="yyyyMMdd-HHmmss" />
		</tstamp>
		<mkdir dir="${reportRepo}/report-Authentication-${start.timestamp}"/>
		<copy todir="${reportRepo}/report-${start.timestamp}">
			<fileset dir="${test.reports}" />
		</copy>			
		<fail if = "junit.failure" message = "Unit test(s) failed. See Reports!"/>		

	</target>	

	<target name="ensure-test-name" unless="test">
		<fail message="You must run this target with -Dtest=TestName"/>
	</target>
	
	<!-- Run all the tests in system admin stars module -->
	<target name="run-tests-sysadminstars" depends="jar" description="target to execute all the selenium tests.">
		<echo message="Getting ready to run selenium tests" />
		<junit printsummary="true" failureproperty="junit.failure" >
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>		
			<batchtest todir="${test.reports}">
				<fileset dir="${build.classes}" includes="/com/cannontech/selenium/test/sysadminstars/Test*Selenium.class"/>
				<formatter type="xml" />
			</batchtest>
		</junit>
		
		<!-- Create html reports -->
		<echo message="running JUnit Report" />
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}" />
			<report todir="${test.reports.html}" />
		</junitreport>
		<tstamp>
			<format property="start.timestamp" pattern="yyyyMMdd-HHmmss" />
		</tstamp>
		<mkdir dir="${reportRepo}/report-SysadminStars-${start.timestamp}"/>
		<copy todir="${reportRepo}/report-${start.timestamp}">
			<fileset dir="${test.reports}" />
		</copy>			
		<fail if = "junit.failure" message = "Unit test(s) failed. See Reports!"/>		

	</target>
	
	<!--Run a single Test Class -->
	<target name="run-test" description="Runs single selenium test with -Dtest=" depends="ensure-test-name, jar">
		<junit printsummary="withOutAndErr" fork="yes">
			<!-- <sysproperty key="tests" value="${tests}"/> -->
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>
			<formatter type="brief" usefile="false"/>
			<batchtest>
				<fileset dir="${src.dir}">
					<include name="**/${test}Selenium.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<!-- JUnit Reporting -->
	<target name="test-report" depends="jar" description="Generate Test Results as HTML">
		
		<junit printsummary="true" failureproperty="junit.failure" >
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>		
			<batchtest todir="${test.reports}">
				<fileset dir="${build.classes}" includes="**/Test*Selenium.class"/>
				<formatter type="xml" />
			</batchtest>
			<sysproperty key="default.browser" value="${default.browser}"/>
		</junit>
		
		<!-- Create html reports -->
		<echo message="running JUnit Report" />
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}" />
			<report todir="${test.reports.html}" />
		</junitreport>
		<tstamp>
			<format property="start.timestamp" pattern="yyyyMMdd-HHmmss" />
		</tstamp>
		<mkdir dir="${reportRepo}/report-${start.timestamp}"/>
		<copy todir="${reportRepo}/report-${start.timestamp}">
			<fileset dir="${test.reports}" />
		</copy>			
		<fail if = "junit.failure" message = "Unit test(s) failed. See Reports!"/>
	
	</target>
	
	<!-- JUnit Reporting -->
	<target name="test-report-ie" depends="build-all" description="Generate Test Results as HTML">

		<junit printsummary="true" failureproperty="junit.failure" fork="true">
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>		
			<batchtest todir="${test.reports}">
				<sysproperty key="browser.value" value="${browser}"/>
				<fileset dir="${build.classes}" includes="**/Test*Selenium.class"/>
				<formatter type="xml" />
			</batchtest>
		</junit>
	
		<!-- Create html reports -->
		<echo message="running JUnit Report" />
		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}" />
			<report todir="${test.reports.html}" />
		</junitreport>
		<tstamp>
			<format property="start.timestamp" pattern="yyyyMMdd-HHmmss" />
		</tstamp>
		<mkdir dir="${reportRepo}/report-${start.timestamp}"/>
		<copy todir="${reportRepo}/report-${start.timestamp}">
			<fileset dir="${test.reports}" />
		</copy>			
		<fail if = "junit.failure" message = "Unit test(s) failed. See Reports!"/>
	
	</target>	

	<!-- Copy selenium results to dated folder -->
	<target name="store-junit-report" description="Saves away the generated JUnit test report.">
		<tstamp>
			<format property="start.timestamp" pattern="yyyyMMdd-HHmmss" />
		</tstamp>
		<mkdir dir="${reportRepo}/report-${start.timestamp}"/>
		<copy todir="${reportRepo}/report-${start.timestamp}">
			<fileset dir="${test.reports}" />
		</copy>
	</target>
	
	<!-- JUnit Reporting Hudson -->
	<target name="execute-hudson" description="Generate Test Results as HTML">
		
		<property name="hudson.selenium.reports" value="report" />
		<property name="hudson.code.base" value="codebase"/>
		
		<delete dir="${hudson.selenium.reports}"/>
		<delete dir="${hudson.code.base}" />
		<mkdir dir="${hudson.selenium.reports}"/>
		<mkdir dir="${hudson.code.base}"/>
		
		<path id="classpath.base">
			<path refid="classpath" />
			<pathelement location="${src.lib}"/>
			<pathelement location="${hudson.code.base}"/>
		</path>	
		
		<javac srcdir="${src.dir}" destdir="${hudson.code.base}" classpathref="classpath.base"/>
		<copy todir="${hudson.code.base}">
			<fileset dir="${src.dir}" excludes="**/*.java"/>
		</copy>		
		
		<!-- <taskdef name="junitreport" classname="org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator"/> -->
		<junit printsummary="yes" haltonfailure="false" haltonerror="false" fork="yes">
			<classpath>
				<path refid="classpath.base"/>
			</classpath>			
			<formatter type="xml" />
			<batchtest fork="yes" todir="${hudson.selenium.reports}" filtertrace="on">
				<fileset dir="${hudson.code.base}" includes="**/Test*Selenium.class"/>
			</batchtest>
		</junit>
		
		<!-- Create html reports -->
		<echo message="running JUnit Report" />
		<junitreport todir="${hudson.selenium.reports}">
			<fileset dir="${hudson.selenium.reports}">
				<include name="Test-*.xml" />
			</fileset>
			<report format="frames" todir="${hudson.selenium.reports}" />
		</junitreport>
	</target>
	
	<!--Generate java docs -->
	<target name="java-docs" depends="compile" description="Generate JavaDocs">
		<javadoc destdir="${java.docs}" author="true" version="true" windowtitle="${ant.project.name}">
			<package name="com.cannontech.selenium.*"/>
			<sourcepath location="${src.dir}"/>
			<classpath>
				<path refid="classpath"/>
				<path refid="application"/>
			</classpath>
			<bottom>
				<![CDATA[<em>Copyright &#169; 2009, Cooper Power Systems</em> <br>All Rights Reserved]]>
			</bottom>
		</javadoc>
	</target>
	
	<target name="copy-src" depends="prepare">
		<copy todir="${copy.src}">
			<fileset dir="${basedir}" excludes="*.csv"/>
		</copy>		
	</target>

	<!-- Deletes the existing sub version checkout build, docs and dist directory-->
	<target name="deleteCheckout">
		<delete dir="${checkout}" />
	</target>

	<!-- Creates the  build dir to checkout from subversion -->
	<target name="createCheckout">
		<mkdir dir="${checkout}" />
	</target>

	<!-- Delete the entire folder -->
	<target name="delete-old-checkout">
		<delete dir="${checkout}/Yukon-Selenium-Framework/" />
		<mkdir dir="${checkout}/Yukon-Selenium-Framework/"/>
	</target>
	
	<!-- Checkout the latest source code of svnant itself-->
	<target name="svn" depends="delete-old-checkout">
		<svn svnkit="true" javahl="false" username="pspl-subversion" password="P4ssw0rd">
			<checkout url="https://svn.cannontech.com/QA/selenium/trunk/Yukon-Selenium-Framework" revision="HEAD" destPath="${checkout}/Yukon-Selenium-Framework" />
		</svn>
	</target>
	
	<!-- Check current working copy -->
	<target name="testSVNAnt">
	     <svn svnkit="true" javahl="false">
	         <wcVersion path= "${checkout}" />
	     </svn>

	     <echo message= "Subversion repository url: ${repository.url}" />
	</target>	
	
	<!-- target to update working copy -->
	<target name="svn-checkout-head" depends="delete-old-checkout">
	     <svn svnkit="true" javahl="false" username="pspl-subversion" password="P4ssw0rd">
	     	<!-- <cleanup dir="${checkout}/Yukon-Selenium-Framework"/> -->
	     	<checkout url="https://svn.cannontech.com/QA/selenium/trunk/Yukon-Selenium-Framework" revision="HEAD" destPath="${checkout}/Yukon-Selenium-Framework" />
	     </svn>
	</target>
	
	<target name="svn-checkout-tag" depends="delete-old-checkout" >
		<!-- prompt for tag name if not given with -Dtag.name -->
	    <svn svnkit="true" javahl="false" username="pspl-subversion" password="P4ssw0rd">
	     	<checkout url="https://svn.cannontech.com/QA/selenium/tags/${tag.name}/" destpath="${checkout}/Yukon-Selenium-Framework" />
	    </svn>
	</target>
	
	<target name="svn-checkout-branch" depends="delete-old-checkout" >
		<!-- prompt for tag name if not given with -Dtag.name -->
	    <svn svnkit="true" javahl="false" username="pspl-subversion" password="P4ssw0rd">
	     	<checkout url="https://svn.cannontech.com/QA/selenium/branches/${branch.name}" destpath="${checkout}/Yukon-Selenium-Framework" />
	    </svn>
	</target>	
	
	<!-- Checkout from head, Build, and Run this is the target that get executed from QC -->
	<target name="run-from-head" depends="build-all, test-report">
	</target>
	
	<!-- Checkout from specific tag and build -->
	<target name="run-from-tag" depends="build-all, test-report">
		<echo message="Checkout and build was successful."></echo>
	</target>
	
	<!-- checkout from specific branch -->
	<target name="run-from-branch" depends="build-all, test-report">
		<echo message="Checkout and build was successful."></echo>
	</target>
	
	<!-- executing tests in package level -->
	<target name="run-from-head-pkgAsetup" depends="run-tests-asetup">
		<echo message="Running Asetup Tests"/>
	</target>	
	
	<target name="run-from-head-pkgAuth" depends="run-tests-authentication">
		<echo message="Running Authentication Tests"/>
	</target>	
	
	<target name="run-from-head-pkgCC" depends="run-tests-cc">
		<echo message="Running Cap Control Test"/>
	</target>

	<target name="run-from-head-pkgDR" depends="run-tests-dr">
		<echo message="Running Demand Response Test"/>
	</target>
	
	<target name="run-from-head-pkgMeter" depends="run-tests-meter">
		<echo message="Running Meter Test"/>
	</target>
	
	<target name="run-from-head-pkgStars" depends="run-tests-stars">
		<echo message="Running Stars Test"/>
	</target>
	
	<target name="run-from-head-pkgNav" depends="run-tests-navigation">
		<echo message="Running Navigation Tests"/>
	</target>	
	
	<target name="run-from-head-pkgSys" depends="run-tests-sysadminstars">
		<echo message="Running System Admin Stars Tests"/>
	</target>	
	
</project>
