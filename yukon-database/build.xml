<?xml version="1.0" ?>
<project name="WriteToFiles" default="build">

    <target name="build" >
        <antcall target="version_db_files"/>
    </target>

    <target name="init">
        <!-- Get todays date since we need it in the insert -->
        <tstamp>
            <format property="today" pattern="dd-MMM-yyyy" />
        </tstamp>

    </target>

    <target name="version_db_files" depends="init">
        
        <!-- set up some local variables -->
        <property name="sql.sqlserver.insert" value="insert into CTIDatabase values('${version.major}.${version.minor}', '${today}', 'Latest Update', ${version.revision}, GETDATE() );"/>
        <property name="sql.oracle.insert" value="insert into CTIDatabase values('${version.major}.${version.minor}', '${today}', 'Latest Update', ${version.revision}, SYSDATE );"/>

        <property name="sql.filename" value="${version.major}.${version.minor}_${version.revision}.sql"/>

        <!-- DBUpdates are no longer doing automated updates
        <replace file="DBUpdates/sqlserver/${sql.filename}" token="/* __YUKON_VERSION__ */" value="${sql.sqlserver.insert}"/>
        <replace file="DBUpdates/oracle/${sql.filename}" token="/* __YUKON_VERSION__ */" value="${sql.oracle.insert}"/> -->

        <!-- Automatically add the version and current date to the creation scripts -->
        <replace file="CreationScripts/SqlServerTableCreation.sql" token="/* __YUKON_VERSION__ */" value="${sql.sqlserver.insert}"/>
        <replace file="CreationScripts/OracleTableCreation.sql" token="/* __YUKON_VERSION__ */" value="${sql.oracle.insert}"/>
    </target>

    <!-- macrodef to execute any git command-->
    <macrodef name="git">
        <attribute name="command" />
        <attribute name="dir" default="" />
        <element name="args" optional="true" />
            <sequential>
                <echo message="git @{command}" />
                <exec executable="git" dir="@{dir}">
                    <arg value="@{command}" />
                    <args/>
                </exec>
            </sequential>
     </macrodef>

    <target name="config-git-credential">
        <git command="config">
            <args>
                <arg value="--global" />
                <arg value="user.name" />
                <arg value="${git.username}" />
            </args>
        </git>
        <git command="config">
            <args>
                <arg value="--global" />
                <arg value="user.password" />
                <arg value="${git.password}" />
            </args>
        </git>
    </target>

    <target name="git-checkout">
            <git command="init" />
            <git command="config" >
                <args>
                    <arg value="core.sparsecheckout" />
                    <arg value="true" />
                </args>
            </git>
            <git command="remote" >
                        <args>
                            <arg value="add" />
                            <arg value="origin" />
                            <arg value="${env.GIT_URL}" />
                        </args>
            </git>
            <exec executable="cmd" >
                          <arg value="/c"/>
                          <arg value="echo"/>
                          <arg value="${dbSnapshot}/*" />
                          <arg value=">>"/>
                          <arg value=".git/info/sparse-checkout"/>
            </exec>
            <git command="pull" >
                        <args>
                            <arg value="--depth=1" />
                            <arg value="origin" />
                            <arg value="master" />
                        </args>
            </git>
        </target>

        <target name="git-commit">
                <git command="add">
                    <args>
                        <arg value="." />
                    </args>
                </git>
                <git command="commit">
                    <args>
                        <arg value="-m Checking in the latest database snapshot" />
                    </args>
                </git>
                <git command="push" />
        </target>

    <target name="sqlServerCreationScriptXMLFile" depends="version_db_files">
        <property name="databaseName" value="TempDBCreation_${version.major}_${version.minor}_${version.revision}" />
        <property environment="env" />
        
    	<copy file="Custom Scripts/SQL Server/CreateDatabase.sql" tofile="tempCreateDatabase.sql" overwrite="true" />
        <replace file="tempCreateDatabase.sql" token="tempDatabase" value="${databaseName}"/>

    	<copy file="Custom Scripts/SQL Server/DropDatabase.sql" tofile="tempDropDatabase.sql" overwrite="true" />
        <replace file="tempDropDatabase.sql" token="tempDatabase" value="${databaseName}"/>
        <echo message="${databaseName}"/>

        <echo message="Checking out database snapshot folder ${dbSnapshot}" />
    	
    	<exec executable="svn">
        	<arg value="checkout" />
            <arg value="${env.SVN_BASE_URL}${dbSnapshot}"/>
    		<arg value="${dbSnapshotTempDir}" />
        	<arg value="--username" />
        	<arg value="${svn.username}" />
        	<arg value="--password" />
        	<arg value="${svn.password}" />
        </exec>

        <!-- Create sql server databse and user-->
        <sql
            driver="net.sourceforge.jtds.jdbc.Driver"
            url="jdbc:jtds:sqlserver://${dbSqlServer}:${dbSqlServerPort}"
            userid="sa"
            password="cannontech123">
            <transaction src="tempCreateDatabase.sql" />
            <classpath>
                <pathelement location="../yukon-client/third-party/jtds-1.3.1.jar"/>
            </classpath>
        </sql>
        
        <sql
             driver="net.sourceforge.jtds.jdbc.Driver"
             url="jdbc:jtds:sqlserver://${dbSqlServer}:${dbSqlServerPort}"
             userid="sa"
             password="cannontech123">
            <classpath>
                <pathelement location="../yukon-client/third-party/jtds-1.3.1.jar"/>
            </classpath>
        	sp_addsrvrolemember '${databaseName}' , 'sysadmin';
        </sql>
        
        <!-- Run the sql server creation scripts -->
        <echo message="Importing Creation Scripts" />
        <sql
            driver="net.sourceforge.jtds.jdbc.Driver"
            url="jdbc:jtds:sqlserver://${dbSqlServer}:${dbSqlServerPort}"
            userid="${databaseName}"
            password="${databaseName}"
            delimiter='go'>
            <classpath>
                <pathelement location="../yukon-client/third-party/jtds-1.3.1.jar"/>
            </classpath>
            <transaction src="CreationScripts/SqlServerTableCreation.sql" />
        </sql>

        <!-- Build xml file -->
        <echo message="Building Database Snapshot" />
        <java jar="../yukon-client/third-party/SchemaDumpToXML.jar" fork="true">
            <arg value="--dbDriver=net.sourceforge.jtds.jdbc.Driver"/>
            <arg value="--dbUrl=jdbc:jtds:sqlserver://${dbSqlServer}:${dbSqlServerPort}"/>
            <arg value="--user=${databaseName}"/>
            <arg value="--password=${databaseName}"/>
            <arg value="--schema=dbo"/>
            <arg value="--outputXmlFile=${dbSnapshotTempDir}/mssql.xml"/>
            <classpath>
               <pathelement location="../yukon-client/third-party/jtds-1.3.1.jar"/>
            </classpath>
        </java>
        
        <!-- Drop sql server databse and user -->
        <echo message="Deleting database" />
        <sql
            driver="net.sourceforge.jtds.jdbc.Driver"
            url="jdbc:jtds:sqlserver://${dbSqlServer}:${dbSqlServerPort}"
            userid="sa"
            password="cannontech123">
            <classpath>
                <pathelement location="../yukon-client/third-party/jtds-1.3.1.jar"/>
            </classpath>
            <transaction src="tempDropDatabase.sql" />
        </sql>

        <echo message="Latest diff" />
        <exec executable="svn" dir="${dbSnapshotTempDir}">
            <arg value="diff"/>
        </exec>
    	
        <echo message="Checking in sql server database snapshot" />
        <exec executable="svn" dir="${dbSnapshotTempDir}">
        	<arg value="commit"/>
        	<arg value="mssql.xml"/>
            <arg value="-m" />
        	<arg value="Checking in the latest database snapshot"/>
        	<arg value="--username" />
        	<arg value="${svn.username}" />
        	<arg value="--password" />
        	<arg value="${svn.password}" />
        </exec>
    	
    	<echo message="Snapshot complete and checked in" />
    </target>
    
    <target name="oracleCreationScriptXMLFile" depends="version_db_files">
        <property name="databaseName" value="tempDBCreation_${version.major}_${version.minor}_${version.revision}" />
        <property environment="env" />
    	
        <copy file="Custom Scripts/Oracle/CreateDatabase.sql" tofile="tempCreateDatabase.sql" overwrite="true" />
        <replace file="tempCreateDatabase.sql" token="tempDatabase" value="${databaseName}"/>

        <copy file="Custom Scripts/Oracle/DropDatabase.sql" tofile="tempDropDatabase.sql" overwrite="true" />
        <replace file="tempDropDatabase.sql" token="tempDatabase" value="${databaseName}"/>
        <echo message="${databaseName}"/>
        
        <echo message="Checking out database snapshot folder ${dbSnapshot}" />
        <exec executable="svn">
            <arg value="checkout" />
            <arg value="${env.SVN_BASE_URL}${dbSnapshot}"/>
            <arg value="${dbSnapshotTempDir}" />
            <arg value="--username" />
            <arg value="${svn.username}" />
            <arg value="--password" />
            <arg value="${svn.password}" />
        </exec>    	
        
    	<!-- Create oracle databse and user-->
        <sql
            driver="oracle.jdbc.OracleDriver"
            url="jdbc:oracle:thin:@${dbOracleServer}:${dbOracleServerPort}:${dbOracleServerAlias}"
            userid="sys as sysdba"
            password="cti">
            <classpath>
                <pathelement location="../yukon-client/third-party/ojdbc6.jar"/>
            </classpath>
            <transaction src="tempCreateDatabase.sql" /> 
        </sql>

        <!-- Run the oracle creation scripts -->
        <echo message="Importing Creation Scripts" />
        <exec executable="sqlplus" output="db-init-lookup-identity.log">
            <arg value="${databaseName}/${databaseName}@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=${dbOracleServer})(PORT=${dbOracleServerPort})))(CONNECT_DATA=(SERVICE_NAME=${dbOracleServerAlias}.eatoneaseng.net)))"/>
            <arg value="@CreationScripts/OracleTableCreation.sql"/>
        </exec>

        <!-- Build xml file -->
        <echo message="Building Database Snapshot" />
        <java jar="../yukon-client/third-party/SchemaDumpToXML.jar" fork="true">
            <arg value="--dbDriver=oracle.jdbc.OracleDriver"/>
            <arg value="--dbUrl=jdbc:oracle:thin:@${dbOracleServer}:${dbOracleServerPort}:${dbOracleServerAlias}"/>
            <arg value="--user=${databaseName}"/>
            <arg value="--password=${databaseName}"/>
            <arg value="--schema=${databaseName}"/>
            <arg value="--outputXmlFile=${dbSnapshotTempDir}/oracle.xml"/>
            <classpath>
                <pathelement location="../yukon-client/third-party/ojdbc6.jar"/>
            </classpath>
        </java>
        
        <!-- Drop oracle databse and user -->
        <echo message="Deleting database" />
        <sql
            driver="oracle.jdbc.OracleDriver"
            url="jdbc:oracle:thin:@${dbOracleServer}:${dbOracleServerPort}:${dbOracleServerAlias}"
            userid="sys as sysdba"
            password="cti">
            <classpath>
                <pathelement location="../yukon-client/third-party/ojdbc6.jar"/>
            </classpath>
            <transaction src="tempDropDatabase.sql" />
        </sql>
        
        <echo message="Cleaning remaining temporary .ora files" />
        <delete performGCOnFailedDelete="true" failonerror="false">
            <fileset dir="C:\app\Administrator\product\11.2.0\dbhome_2\database" includes="tempDbCreation*.ora"/>
        </delete>
        
        <echo message="Latest diff" />
        <exec executable="svn" dir="${dbSnapshotTempDir}">
            <arg value="diff"/>
        </exec>
        
        <echo message="Checking in oracle database snapshot" />
        <exec executable="svn" dir="${dbSnapshotTempDir}">
            <arg value="commit"/>
            <arg value="oracle.xml"/>
            <arg value="-m" />
            <arg value="Checking in the latest database snapshot"/>
            <arg value="--username" />
            <arg value="${svn.username}" />
            <arg value="--password" />
            <arg value="${svn.password}" />
        </exec>

    	<echo message="Snapshot complete and checked in" />
    </target>

</project>
