<?xml version="1.0" encoding="UTF-8"?>
<?PowerDesigner AppLocale="UTF16" Code="DB2 UDB 5.2" Family="DB2;DB2CS" Name="IBM DB2 UDB 5.x Common Server" signature="XDB_XML" version="12.0.0.1642"?>
<!-- do not edit this file -->

<DBMS xmlns:a="attribute" xmlns:c="collection" xmlns:o="object">

<o:DBMS Id="o1">
<a:ObjectID>BDACE677-0BF4-4DAB-BD34-259A4AE92B80</a:ObjectID>
<a:Name>IBM DB2 UDB 5.x Common Server</a:Name>
<a:Code>DB2 UDB 5.2</a:Code>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1031817991</a:ModificationDate>
<a:Modifier>psitja</a:Modifier>
<a:Family>DB2;DB2CS</a:Family>
<a:CheckGlobalScript>&#39;******************************************************************************
&#39;* Purpose:  This VB-Script holds global definitions shared by all the custom-
&#39;*            checks scripts of the model extension.
&#39;******************************************************************************

Option Explicit &#39; This is to ensure all used variables are defined

</a:CheckGlobalScript>
<c:Categories>
<o:TargetCategory Id="o2">
<a:Name>General</a:Name>
<a:Comment>Target DBMS identification</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o3">
<a:Name>SqlSupport</a:Name>
<a:Comment>SQL syntax allowed. This does not impact the script generation, but it impacts the SQL Preview</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o4">
<a:Name>EnableCheck</a:Name>
<a:Comment>Determines if the generation of check parameters is authorized or not</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o5">
<a:Name>Enableconstname</a:Name>
<a:Comment>Determines if constraint names are used during the generation</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o6">
<a:Name>UniqConstName</a:Name>
<a:Comment>Determines if unique constraint names for objects are authorized or not</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o7">
<a:Name>Script</a:Name>
<a:Comment>DBMS characteristics, command definition, and data type translations for the Script generation and reverse engineering</a:Comment>
<c:Categories>
<o:TargetCategory Id="o8">
<a:Name>Sql</a:Name>
<a:Comment>Contains sub-categories Syntax, Format, File and Keywords. Each sub-category contains entries whose values define general syntax for the database</a:Comment>
<c:Categories>
<o:TargetCategory Id="o9">
<a:Name>Syntax</a:Name>
<a:Comment>Contains general parameters for SQL syntax</a:Comment>
<c:Categories>
<o:CharacterTargetItem Id="o10">
<a:Name>Terminator</a:Name>
<a:Comment>End of command character</a:Comment>
<a:CharacterTargetItem.Value>;</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:StringTargetItem Id="o11">
<a:Name>BlockTerminator</a:Name>
<a:Comment>End of block character</a:Comment>
<a:StringTargetItem.Value>/</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:CharacterTargetItem Id="o12">
<a:Name>Delimiter</a:Name>
<a:Comment>Field separation character. Example: col1, col2, col3</a:Comment>
<a:CharacterTargetItem.Value>,</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:CharacterTargetItem Id="o13">
<a:Name>Quote</a:Name>
<a:Comment>Character used to enclose string values</a:Comment>
<a:CharacterTargetItem.Value>&#39;</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:CharacterTargetItem Id="o14">
<a:Name>SqlContinue</a:Name>
<a:Comment>Continuation character</a:Comment>
</o:CharacterTargetItem>
<o:StringTargetItem Id="o15">
<a:Name>LineComment</a:Name>
<a:Comment>Characters used to enclose a single line comment</a:Comment>
<a:StringTargetItem.Value>--</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o16">
<a:Name>BlockComment</a:Name>
<a:Comment>Characters used to enclose a multi-line comment</a:Comment>
</o:StringTargetItem>
<o:TextTargetItem Id="o17">
<a:Name>UsingBlockTerm</a:Name>
<a:TextTargetItem.Value>create trigger, end, 1
{
   begin, , 2
   {
      begin, end, 3
      case, end case, 4
      if, end if, 4
      for, end for, 4
      loop, end loop, 4
      repeat, end repeat, 4
      while, end while, 4
   }
}
create procedure, , 1
{
   begin, end, 2
   case, end case, 4
   if, end if, 4
   for, end for, 4
   loop, end loop, 4
   repeat, end repeat, 4
   while, end while, 4
}</a:TextTargetItem.Value>
<a:Comment>List of objects using block definition during reverse.</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o18">
<a:Name>Format</a:Name>
<a:Comment>Contains entries that define script formatting</a:Comment>
<c:Categories>
<o:StringTargetItem Id="o19">
<a:Name>IllegalChar</a:Name>
<a:Comment>Invalid characters for names</a:Comment>
<a:StringTargetItem.Value>&quot; +-*/!=&lt;&gt;&#39;&quot;()&quot;.</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:BooleanTargetItem Id="o20">
<a:Name>UpperCaseOnly</a:Name>
<a:Comment>Uppercase only</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o21">
<a:Name>LowerCaseOnly</a:Name>
<a:Comment>Lowercase only</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o22">
<a:Name>EnableOwnerPrefix</a:Name>
<a:Comment>Object codes can have a prefix made of the object owner code</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o23">
<a:Name>CaseSensitivityUsingQuote</a:Name>
<a:Comment>Determines if the case sensitivity for identifiers is managed using double quotes</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o24">
<a:Name>File</a:Name>
<a:Comment>Contains header, footer and usage text entries used during the generation</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o25">
<a:Name>Header</a:Name>
<a:Comment>Header text for a database generation script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o26">
<a:Name>Footer</a:Name>
<a:Comment>Footer text for a database generation script</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o27">
<a:Name>EnableMultiFile</a:Name>
<a:Comment>Multi-script allowed</a:Comment>
</o:BooleanTargetItem>
<o:StringTargetItem Id="o28">
<a:Name>ScriptExt</a:Name>
<a:Comment>Main script extension in database generation</a:Comment>
<a:StringTargetItem.Value>sql</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o29">
<a:Name>TableExt</a:Name>
<a:Comment>Other scripts extension in database generation</a:Comment>
<a:StringTargetItem.Value>tab</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o30">
<a:Name>StartCommand</a:Name>
<a:Comment>Command for executing a script</a:Comment>
</o:StringTargetItem>
<o:TextTargetItem Id="o31">
<a:Name>Usage1</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%
  (2) Start the SQL interpreter
  (3) Run the script &quot;%NAMESCRIPT%&quot;</a:TextTargetItem.Value>
<a:Comment>Usage for a single script in database generation</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o32">
<a:Name>Usage2</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%
  (2) Start the SQL interpreter
  (3) Run the generated scripts</a:TextTargetItem.Value>
<a:Comment>Usage for multiple scripts in database generation</a:Comment>
</o:TextTargetItem>
<o:StringTargetItem Id="o33">
<a:Name>TriggerExt</a:Name>
<a:Comment>Script file extension in triggers and procedures generation</a:Comment>
<a:StringTargetItem.Value>trg</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:TextTargetItem Id="o34">
<a:Name>TrgUsage1</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%
  (2) Start SQL interpreter:
        sqlplus &lt;username&gt;/&lt;password&gt;
  (3) Execute the trigger creation script:
        start %NAMESCRIPT%</a:TextTargetItem.Value>
<a:Comment>Usage for a single script in triggers and procedures generation</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o35">
<a:Name>TrgUsage2</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%
  (2) Start SQL interpreter:
        sqlplus &lt;username&gt;/&lt;password&gt;
  (3) Execute the triggers creation scripts:
        start &lt;script_name&gt;</a:TextTargetItem.Value>
<a:Comment>Usage for multiple scripts in triggers and procedures generation</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o36">
<a:Name>Keywords</a:Name>
<a:Comment>Contains the list of reserved words and functions available in SQL</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o37">
<a:Name>GroupFunc</a:Name>
<a:TextTargetItem.Value>avg()
count()
count_big()
max()
min()
sum()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions to use with group keywords.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o38">
<a:Name>NumberFunc</a:Name>
<a:Comment>List of SQL functions used on numbers</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o39">
<a:Name>CharFunc</a:Name>
<a:TextTargetItem.Value>char()
length()
substr()
value()
blob()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions for characters and strings</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o40">
<a:Name>DateFunc</a:Name>
<a:TextTargetItem.Value>current date
current time
current timestamp
current timezone
date()
day()
days()
hour()
microsecond()
minute()
month()
posstr()
second()
time()
year()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions for dates</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o41">
<a:Name>ConvertFunc</a:Name>
<a:TextTargetItem.Value>decimal()
digits()
double()
float()
hex()
integer()
timestamp()
vargraphic()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions used to convert values between hex and integer and handling strings</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o42">
<a:Name>OtherFunc</a:Name>
<a:TextTargetItem.Value>coalesce()
event_mon_state()
generate_unique()
nullif()
raise_error()
table_name()
table_schema()
user</a:TextTargetItem.Value>
<a:Comment>List of other SQL functions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o43">
<a:Name>ListOperators</a:Name>
<a:TextTargetItem.Value>=
&lt;&gt;
&gt;
&lt;
&gt;=
&lt;=
*=
=*
not
in
not in
between
not between
exists
not exists
like
not like
is
is not
= any
&lt;&gt; any
&gt; any
&lt; any
&gt;= any
&lt;= any
= all
&lt;&gt; all
&gt; all
&lt; all
&gt;= all
&lt;= all</a:TextTargetItem.Value>
<a:Comment>List of operators for comparing values, boolean, and various semantic operators</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o44">
<a:Name>Commit</a:Name>
<a:TextTargetItem.Value>commit</a:TextTargetItem.Value>
<a:Comment>Command for validating the transaction by OBDC</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o45">
<a:Name>ReservedDefault</a:Name>
<a:TextTargetItem.Value>NULL
USER
CURRENT DATE
CURRENT DEGREE
CURRENT PACKAGESET
CURRENT RULES
CURRENT SERVER
CURRENT SQLID
CURRENT TIME
CURRENT TIMESTAMP
CURRENT TIMEZONE</a:TextTargetItem.Value>
<a:Comment>Reserved default values</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o46">
<a:Name>ReservedWord</a:Name>
<a:TextTargetItem.Value>ACQUIRE
ADD
ALL
ALLOCATE
ALTER
AND
ANY
AS
ASC
AUDIT
AUTHORIZATION
AVG
BETWEEN
BUFFERPOOL
BY
CALL
CAPTURE
CASE
CAST
CCSID
CHAR
CHARACTER
CHECK
CLUSTER
COLLECTION
COLUMN
COMMENT
COMMIT
CONCAT
CONNECT
CONNECTION
CONSTRAINT
COUNT
CREATE
CROSS
CURRENT
CURRENT_DATE
CURRENT_SERVER
CURRENT_TIME
CURRENT_TIMESTAMP
CURRENT_TIMEZONE
CURRENT_USER
CURSOR
DATABASE
DATE
DAY
DAYS
DBA
DBSPACE
DEFAULT
DELETE
DESC
DESCRIPTOR
DISTINCT
DOUBLE
DROP
EDITPROC
ELSE
END-EXEC
ERASE
ESCAPE
EXCEPT
EXCEPTION
EXCLUSIVE
EXECUTE
EXISTS
EXPLAIN
EXTERNAL
FETCH
FIELDPROC
FOR
FOREIGN
FROM
FULL
GO
GOTO
GRANT
GRAPHIC
GROUP
HAVING
HOUR
HOURS
IDENTIFIED
IMMEDIATE
IN
INDEX
INDICATOR
INNER
INOUT
INSERT
INTERSECT
INTO
IS
ISOLATION
JOIN
KEY
LABEL
LEFT
LIKE
LOCK
LOCKSIZE
LONG
MAX
MICROSECOND
MICROSECONDS
MIN
MINUTE
MINUTES
MODE
MONTH
MONTHS
NAMED
NHEADER
NOT
NULL
NUMPARTS
OBID
OF
ON
ONLY
OPTIMIZE
OPTION
OR
ORDER
OUT
OUTER
PACKAGE
PAGE
PAGES
PART
PCTFREE
PCTINDEX
PLAN
PRECISION
PRIMARY
PRIQTY
PRIVATE
PRIVILEGES
PROCEDURE
PROGRAM
PUBLIC
REFERENCES
RELEASE
RESET
RESOURCE
REVOKE
RIGHT
ROLLBACK
ROW
ROWS
RRN
RUN
SCHEDULE
SCHEMA
SECOND
SECONDS
SECQTY
SELECT
SET
SHARE
SIMPLE
SOME
STATISTICS
STOGROUP
STORPOOL
SUBPAGES
SUBSTRING
SUM
SYNONYM
TABLE
TABLESPACE
TO
TRANSACTION
TRIM
UNION
UNIQUE
UPDATE
USER
USING
VALIDPROC
VALUES
VARIABLE
VCAT
VIEW
VOLUMES
WHERE
WITH
WORK
YEAR
YEARS
</a:TextTargetItem.Value>
<a:Comment>Reserved words</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o47">
<a:Name>Objects</a:Name>
<a:Comment>Contains sub-categories for each type of object in the database, for example: Table, or Reference. Each sub-category contains entries whose values define database commands and object-related characteristics</a:Comment>
<c:Categories>
<o:TargetCategory Id="o48">
<a:Name>Table</a:Name>
<a:Code>TABL</a:Code>
<a:Comment>The following system variables are available:
   &quot;TABLE&quot;        // generated code of the table
   &quot;TNAME&quot;        // name of the table
   &quot;TCODE&quot;        // code of the table
   &quot;TLABL&quot;        // comment of the table
   &quot;PKEYCOLUMNS&quot;  // list of primary key columns. Eg: A, B
   &quot;TABLDEFN&quot;     // complete body of the table definition. Contains definition of columns, checks and keys
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o49">
<a:Name>Enable</a:Name>
<a:Comment>Table allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o50">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>18</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o51">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>T_%.16:TABLE%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for check of table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o52">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>[%CLASS% ?
create table [%QUALIFIER%]%TABLE% of [%CLASSQUALIFIER%]%CLASS%
(
     REF IS Oid USER GENERATED[%TABLDEFN% ?,]
   %TABLDEFN%
)
[%OPTIONS%]
:
create table [%QUALIFIER%]%TABLE%
[%TABLDEFN% ?(
   %TABLDEFN%
)
[%OPTIONS%]]
]</a:TextTargetItem.Value>
<a:Comment>Command for creating a table. Example: create table %TABLE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o53">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value>like %s : composite=yes
{
&lt;inclusion&gt; %s : list=including|excluding, default=including
&lt;object&gt; %s : list=identity column attributes|column defaults|defaults, default=defaults
}
data capture %s : list=none|changes, default=none
in %s : category=tablespace, composite=yes
{
index in %s : category=tablespace
long in %s : category=tablespace
}
partitioning key : composite=yes
{
&lt;column_list&gt; : composite=yes, separator=yes, parenthesis=yes
{
&lt;column&gt; %s : multiple=yes, squoted=no
}
using hashing
}
replicated
not logged initially</a:TextTargetItem.Value>
<a:Comment>Available options for creating a table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o54">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for table options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o55">
<a:Name>TableComment</a:Name>
<a:TextTargetItem.Value>comment on table [%QUALIFIER%]%TABLE% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>Command for adding a table comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o56">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop table [%QUALIFIER%]%TABLE%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a table. Example: drop table %TABLE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o57">
<a:Name>Rename</a:Name>
<a:TextTargetItem.Value>rename table [%QUALIFIER%]%OLDTABL% to %NEWTABL%</a:TextTargetItem.Value>
<a:Comment>Command for renaming a table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o58">
<a:Name>AlterTableHeader</a:Name>
<a:Comment>Alter table header</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o59">
<a:Name>AlterTableFooter</a:Name>
<a:Comment>Alter table footer</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o60">
<a:Name>DefineTableCheck</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME% ]check (%.A:CONSTRAINT%)</a:TextTargetItem.Value>
<a:Comment>Allows to customize the script of table check constraints</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o61">
<a:Name>AddTableCheck</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   [add ][constraint %CONSTNAME% ]check (%.A:CONSTRAINT%)</a:TextTargetItem.Value>
<a:Comment>Allows to customize the script for modifying table constraints within an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o62">
<a:Name>AllowedADT</a:Name>
<a:TextTargetItem.Value>STRUCTURED</a:TextTargetItem.Value>
<a:Comment>List of ADT on which a table can be based</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TextTargetItem>
<o:TextTargetItem Id="o63">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TABLE, CLASS}
SELECT t.definer, t.tabname, t.rowtypename
FROM objcat.tables t, syscat.datatypes d
WHERE t.rowtypename = d.typename
[AND t.definer=%.q:SCHEMA%]
[AND t.tabname=%.q:TABLE%]</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o64">
<a:Name>SqlOptsQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TABLE, OPTIONS}

select 
   tabschema,
   tabname,
   &#39;in &#39; || tbspace
from 
   syscat.tables
where 1=1
[  and tabschema=%.q:OWNER%]
[  and tabname=%.q:TABLE%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object physical options</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o65">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a table.
The first column is the SQL name of permission (eg: SELECT)
The second column is a shortname to display in a grid</a:Comment>
<a:MapTargetItem.Value>ALTER=Alter
CONTROL=Control
DELETE=Delete
INDEX=Index
INSERT=Insert
REFERENCES=Refr.
SELECT=Select
UPDATE=Update</a:MapTargetItem.Value>
<a:List>ALTER
CONTROL
DELETE
INDEX
INSERT
REFERENCES
SELECT
UPDATE
</a:List>
</o:MapTargetItem>
<o:TextTargetItem Id="o66">
<a:Name>SqlPermQuery</a:Name>
<a:TextTargetItem.Value>{ GRANTEE ID, PERMISSION ...}

select 
s.grantee grantee, 
case s.controlauth when &#39;Y&#39; then &#39;CONTROL&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.alterauth when &#39;Y&#39; then &#39;ALTER&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.alterauth when &#39;G&#39; then &#39;ALTER+&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.deleteauth when &#39;Y&#39; then &#39;DELETE&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.deleteauth when &#39;G&#39; then &#39;DELETE+&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.indexauth when &#39;Y&#39; then &#39;INDEX&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.indexauth when &#39;G&#39; then &#39;INDEX+&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.insertauth when &#39;Y&#39; then &#39;INSERT&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.insertauth when &#39;G&#39; then &#39;INSERT+&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.selectauth when &#39;Y&#39; then &#39;SELECT&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.selectauth when &#39;G&#39; then &#39;SELECT+&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.refauth when &#39;Y&#39; then &#39;REFERENCES&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.refauth when &#39;G&#39; then &#39;REFERENCES+&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.updateauth when &#39;Y&#39; then &#39;UPDATE&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.updateauth when &#39;G&#39; then &#39;UPDATE+&#39; else &#39;&#39; end
from syscat.tabauth s
where s.tabschema &lt;&gt; s.grantee
[and s.tabname = %.q:TABLE%]
[and s.tabschema = %.q:OWNER%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o67">
<a:Name>DropTableCheck</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   drop check %CONSTNAME%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a table check in an alter table statement</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o68">
<a:Name>Index</a:Name>
<a:Code>INDX</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for indexes)
   &quot;INDEX&quot;        // generated code of the index
   &quot;INDEXNAME&quot;    // index name
   &quot;INDEXCODE&quot;    // index code
   &quot;UNIQUE&quot;       // keyword &quot;unique&quot; when the index is unique
   &quot;INDEXTYPE&quot;    // index type (available only for a few DBMS)
   &quot;INDEXKEY&quot;     // keywords &quot;primary&quot;, &quot;unique&quot; or &quot;foreign&quot; depending on the index origin
   &quot;CIDXLIST&quot;     // list of index columns. Eg: A asc, B desc, C asc
   &quot;CLUSTER&quot;      // keyword &quot;cluster&quot; when the index is cluster
For index columns, the following system variables are available:
   &quot;ASC&quot;          // keywords &quot;ASC&quot; or &quot;DESC&quot; depending on sort order
   &quot;ISASC&quot;        // TRUE if the index column sort is ascending
</a:Comment>
<c:Categories>
<o:IntegerTargetItem Id="o69">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>18</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:IntegerTargetItem Id="o70">
<a:Name>MaxColIndex</a:Name>
<a:Comment>Maximum number of columns in an index</a:Comment>
<a:IntegerTargetItem.Value>16</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:BooleanTargetItem Id="o71">
<a:Name>Enable</a:Name>
<a:Comment>Index allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o72">
<a:Name>EnableAscDesc</a:Name>
<a:Comment>ASC, DESC keywords allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o73">
<a:Name>UniqName</a:Name>
<a:Comment>Unique index name in the database</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o74">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create [%UNIQUE%] index [%QUALIFIER%]%INDEX% on [%TABLQUALIFIER%]%TABLE% (
%CIDXLIST%
)
[%OPTIONS%]</a:TextTargetItem.Value>
<a:Comment>Command for creating an index. Example: create index %INDEX%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o75">
<a:Name>AddColIndex</a:Name>
<a:TextTargetItem.Value>   %20:COLUMN% [%ASC%]</a:TextTargetItem.Value>
<a:Comment>Command for defining an index column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o76">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value>include : composite=yes
{
&lt;column_list&gt; : composite=yes, separator=yes, parenthesis=yes
{
&lt;column&gt; %s : multiple=yes, squoted=no
}
}
cluster
pctfree %d : default=10</a:TextTargetItem.Value>
<a:Comment>Default options for creating an index</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o77">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for index options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o78">
<a:Name>SqlSysIndexQuery</a:Name>
<a:TextTargetItem.Value>{OWNER,TABLE,INDEX}

select 
   tbcreator,
   tbname,
   name
from 
   sysibm.sysindexes
where
   creator=&#39;SYSIBM&#39;
   and tbname=%.q:TABLE%
   and tbcreator=%.q:OWNER%
</a:TextTargetItem.Value>
<a:Comment>SQL query to list system indexes created by the database</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o79">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop index [%QUALIFIER%]%INDEX%</a:TextTargetItem.Value>
<a:Comment>Command for dropping an index. Example: drop index %INDEX%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o80">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o81">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o82">
<a:Name>DefineIndexColumn</a:Name>
<a:Comment>Defines the column of an index</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o83">
<a:Name>EnableCluster</a:Name>
<a:Comment>Cluster option available for indexes</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o84">
<a:Name>Column</a:Name>
<a:Code>COLN</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for columns)
   &quot;COLUMN&quot;       // generated code of the column
   &quot;COLNNO&quot;       // position of the column in the list of columns of the table
   &quot;COLNNAME&quot;     // name of the column
   &quot;COLNCODE&quot;     // code of the column
   &quot;PRIMARY&quot;      // keyword &quot;primary&quot; if the column is primary
   &quot;ISPKEY&quot;       // TRUE if the column is part of the primary key
   &quot;FOREIGN&quot;      // TRUE if the column is part of one foreign key
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o85">
<a:Name>Enable</a:Name>
<a:Comment>Column allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o86">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>18</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:BooleanTargetItem Id="o87">
<a:Name>EnableNotNullWithDflt</a:Name>
<a:Comment>Enables not null with default</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o88">
<a:Name>EnableDefault</a:Name>
<a:Comment>Default values allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o89">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>C_%.16:COLUMN%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for a column check parameter</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o90">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[%CLASS%?[%NOTNULL%?%20:COLUMN% WITH OPTIONS %NOTNULL%:[%CONSTRAINT%?%20:COLUMN% WITH OPTIONS]]:
%20:COLUMN% %30:DATATYPE%[%ExtForBitData%? for bit data][.Z:[ %ExtLobOption%][ %NOTNULL%][%WITHDEFAULT%? %WITHDEFAULT%[ %DEFAULT%]:[ default %DEFAULT%]]
   [[constraint %CONSTNAME% ]check (%.A:CONSTRAINT%)]]][   %OPTIONS%]</a:TextTargetItem.Value>
<a:Comment>Command for defining a table column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o91">
<a:Name>ColumnComment</a:Name>
<a:TextTargetItem.Value>comment on column [%QUALIFIER%]%TABLE%.%COLUMN% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>Command for adding a column comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o92">
<a:Name>Rename</a:Name>
<a:Comment>Command for renaming a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o93">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   add column %COLUMN% %DATATYPE%[%ExtForBitData%? for bit data][%R%? %NOTNULL%][ %ExtLobOption%][ %NOTNULL%][%WITHDEFAULT%? %WITHDEFAULT%[ %DEFAULT%]:[ default %DEFAULT%]]
   [[constraint %CONSTNAME% ]check (%.A:CONSTRAINT%)][ %OPTIONS%]</a:TextTargetItem.Value>
<a:Comment>Command for adding a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o94">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TABLE, COLUMN, ExtForBitData}

select 
   c.tabschema,
   c.tabname, 
   c.colname, 
   &#39;TRUE&#39;
from 
   syscat.columns c,
   syscat.datatypes d
where
   d.typename=c.typename
   and c.codepage=0
   and d.codepage &lt;&gt; 0
[  and c.tabschema=%.q:OWNER%]
[  and c.tabname=%.q:TABLE%]
[  and c.colname=%.q:COLUMN%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o95">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value>linktype url : composite=yes
{
no link control
file link control : composite=yes
{
mode db2options
integrity %s : default=all
read permission %s : list=fs|db, default=fs
write permission %s : list=fs|blocked, default=fs
recovery %s : list=yes|no, default=no
on unlink %s : list=restore|delete, default=restore
}
}</a:TextTargetItem.Value>
<a:Comment>Available options for creating a column</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TextTargetItem>
<o:MapTargetItem Id="o96">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a column.
The first column is the SQL name of permission (eg: SELECT)
The second column is a shortname to display in a grid</a:Comment>
<a:MapTargetItem.Value>UPDATE=Upd
REFERENCES=Ref</a:MapTargetItem.Value>
<a:List>UPDATE
REFERENCES
</a:List>
</o:MapTargetItem>
<o:TextTargetItem Id="o97">
<a:Name>SqlPermQuery</a:Name>
<a:TextTargetItem.Value>{GRANTEE ID, COLNPERMISSION ID, COLUMN ...}
select 
  s.grantee, 
  (case s.privtype 
    when &#39;U&#39; then &#39;UPDATE&#39;
    when &#39;R&#39; then &#39;REFERENCES&#39;
    end) || 
  (case s.grantable
    when &#39;G&#39; then &#39;+&#39;
    when &#39;N&#39; then &#39;&#39;
    end),
  s.colname || &#39;,&#39;
from SYSCAT.COLAUTH s
where s.tabschema &lt;&gt; s.grantee
[and s.tabname = %.q:TABLE%]
[and s.tabschema = %.q:OWNER%]
order by 2</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o98">
<a:Name>SqlOptsQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TABLE, COLUMN, ExtLobOption}

select
   c.tabschema,
   c.tabname,
   c.colname,
   case (c.logged || c.compact) 
      when &#39;YY&#39; then &#39;logged compact&#39; when &#39;NY&#39; then &#39;not logged compact&#39;
      when &#39;YN&#39; then &#39;logged not compact&#39; when &#39;NN&#39; then &#39;not logged not compact&#39;
   else &#39;&#39; end
from
   syscat.columns c
where 1=1
[  and c.tabschema=%.q:OWNER%]
[  and c.tabname=%.q:TABLE%]
[  and c.colname=%.q:COLUMN%]</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse column physical options</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o99">
<a:Name>User</a:Name>
<a:Code>USER</a:Code>
<a:Comment>The following system variables are available:
   &quot;USER&quot;         // generated code of the user
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o100">
<a:Name>Enable</a:Name>
<a:Comment>User allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o101">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>8</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o102">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{USER}

select distinct grantee from syscat.dbauth
where granteetype = &#39;U&#39;
[and UPPER(grantee) = %.qU:SCHEMA%]
union select schemaname from syscat.schemata
[where UPPER(schemaname) = %.qU:SCHEMA%]
order by 1</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o103">
<a:Name>SqlPermQuery</a:Name>
<a:TextTargetItem.Value>{USER ID, PRIVILEGE ...}

select 
s.grantee,
case s.dbadmauth when &#39;Y&#39; then &#39;DBADM&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.createtabauth when &#39;Y&#39; then &#39;CREATETAB&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.bindaddauth  when &#39;Y&#39; then &#39;BINDADD&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.connectauth  when &#39;Y&#39; then &#39;CONNECT&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.nofenceauth  when &#39;Y&#39; then &#39;CREATE_NOT_FENCED&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.implschemaauth  when &#39;Y&#39; then &#39;IMPLICIT_SCHEMA&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.loadauth  when &#39;Y&#39; then &#39;LOAD&#39; else &#39;&#39; end
from syscat.dbauth s
where granteetype = &#39;U&#39;
</a:TextTargetItem.Value>
<a:Comment>Query to reverse privileges</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:BooleanTargetItem Id="o104">
<a:Name>EnableOption</a:Name>
<a:Comment>Physical options allowed  YES/NO</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TargetCategory Id="o105">
<a:Name>Reference</a:Name>
<a:Code>REFR</a:Code>
<a:Comment>The following system variables are available:
   &quot;REFR&quot;         // generated code of the reference
   &quot;REFNAME&quot;      // reference name
   &quot;PARENT&quot;       // generated code of the parent table
   &quot;PNAME&quot;        // name of the parent table
   &quot;PCODE&quot;        // code of the parent table
   &quot;CHILD&quot;        // generated code of the reference
   &quot;CNAME&quot;        // name of the child table
   &quot;CCODE&quot;        // code of the child table
   &quot;PQUALIFIER&quot;   // qualifier of the parent table. See QUALIFIER
   &quot;CQUALIFIER&quot;   // qualifier of the child table. See QUALIFIER
   &quot;REFRNAME&quot;     // Reference name
   &quot;REFRCODE&quot;     // Reference code
   &quot;FKCONSTRAINT&quot; // Reference constraint name (foreign key)
   &quot;PKCONSTRAINT&quot; // constraint name of the parent key used to reference object
   &quot;CKEYCOLUMNS&quot;  // list of parent key columns. Eg: C1, C2, C3
   &quot;FKEYCOLUMNS&quot;  // list of child foreign key columns. Eg:
   &quot;UPDCONST&quot;     // Update declarative constraint. Keywords &quot;restrict&quot;, &quot;cascade&quot;, &quot;set null&quot; or &quot;set default&quot;
   &quot;DELCONST&quot;     // Delete declarative constraint. Keywords &quot;restrict&quot;, &quot;cascade&quot;, &quot;set null&quot; or &quot;set default&quot;
   &quot;MINCARD&quot;      // Min cardinality
   &quot;MAXCARD&quot;      // Max cardinality
   &quot;POWNER&quot;       // Parent table owner
   &quot;COWNER&quot;       // child table owner
   &quot;CHCKONCMMT&quot;   // TRUE when check on commit is selected on the reference (ASA 6.0 specific)

For reference joins (couple of column in a reference),
the following system variables are available:
   &quot;CKEYCOLUMN&quot;   // generated code of the parent table column (primary key)
   &quot;FKEYCOLUMN&quot;   // generated code of the child table column (foreign key)
   &quot;PK&quot;           // primary key column generated code
   &quot;PKNAME&quot;       // primary key column name
   &quot;FK&quot;           // foreign key column generated code
   &quot;FKNAME&quot;       // foreign key column name
   &quot;AK&quot;           // alternate key column code (same as PK)
   &quot;AKNAME&quot;       // alternate key column name (same as PKNAME)
   &quot;COLTYPE&quot;      // primary column column datatype
   &quot;DEFAULT&quot;      // foreign key column default value
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o106">
<a:Name>Enable</a:Name>
<a:Comment>Foreign key allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o107">
<a:Name>FKAutoIndex</a:Name>
<a:Comment>Foreign key is auto-indexed</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o108">
<a:Name>EnablefKeyName</a:Name>
<a:Comment>Foreign key role allowed in database generation</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o109">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>F_%.16:REFR%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for foreign keys</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o110">
<a:Name>CheckOnCommit</a:Name>
<a:Comment>Referential integrity test differed after the COMMIT</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o111">
<a:Name>DclDelIntegrity</a:Name>
<a:TextTargetItem.Value>NO ACTION
RESTRICT
CASCADE
SET NULL</a:TextTargetItem.Value>
<a:Comment>Declarative referential integrity constraint allowed for delete</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o112">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME% ]foreign key (%FKEYCOLUMNS%)
      references [%PQUALIFIER%]%PARENT%[ (%CKEYCOLUMNS%)]
     [%DELCONST%? on delete %DELCONST%: on delete no action][%UPDCONST%? on update %UPDCONST%: on update no action]</a:TextTargetItem.Value>
<a:Comment>Command for defining a foreign key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o113">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   [add ][constraint %CONSTNAME% ]foreign key (%FKEYCOLUMNS%)
      references [%PQUALIFIER%]%PARENT%[ (%CKEYCOLUMNS%)]
     [%DELCONST%? on delete %DELCONST%: on delete no action][%UPDCONST%? on update %UPDCONST%: on update no action]</a:TextTargetItem.Value>
<a:Comment>Command for adding a foreign key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o114">
<a:Name>DclUpdIntegrity</a:Name>
<a:TextTargetItem.Value>NO ACTION
RESTRICT
</a:TextTargetItem.Value>
<a:Comment>Declarative referential integrity constraint allowed for update</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o115">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{COWNER, CHILD, FKCONSTRAINT, POWNER, PARENT, PKCONSTRAINT, DELCONST, UPDCONST, CKEYCOLUMNS, FKEYCOLUMNS}

select
   r.tabschema,
   r.tabname,
   r.constname,
   r.reftabschema,
   r.reftabname,
   r.refkeyname,
   case r.deleterule when &#39;A&#39; then &#39;&lt;None&gt;&#39; when &#39;C&#39; then &#39;CASCADE&#39; when &#39;R&#39; then &#39;RESTRICT&#39; when &#39;N&#39; then &#39;SET NULL&#39; else &#39;&#39; end,
   case r.updaterule when &#39;A&#39; then &#39;&lt;None&gt;&#39; when &#39;R&#39; then &#39;RESTRICT&#39; else &#39;&#39; end,
   replace(rtrim(r.pk_colnames), &#39; &#39;, &#39;,&#39;),
   replace(rtrim(r.fk_colnames), &#39; &#39;, &#39;,&#39;)
from
   syscat.references r
where 1=1
   [and r.tabschema=%.q:OWNER%]
   [and r.tabname=%.q:TABLE%]</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o116">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   drop foreign key %CONSTNAME%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a foreign key</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o117">
<a:Name>PKey</a:Name>
<a:Code>PKEY</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for keys)
   &quot;PKEYCOLUMNS&quot;  // list of primary key columns. Eg: A, B
   &quot;ISPKEY&quot;       // TRUE when the key is the primary key of the table
   &quot;KEY&quot;          // constraint name
   &quot;PKEY&quot;         // constraint name for primary key
   &quot;AKEY&quot;         // constraint name for alternate key
   &quot;ISMULTICOLN&quot;  // TRUE if key has more than one column
   &quot;CLUSTER&quot;      // keyword cluster</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o118">
<a:Name>Enable</a:Name>
<a:Comment>Primary key allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o119">
<a:Name>PkAutoIndex</a:Name>
<a:Comment>Primary key is auto-indexed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o120">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>P_%.16:PKEY%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for primary keys</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o121">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME% ]primary key (%PKEYCOLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for defining a primary key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o122">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   [add ][constraint %CONSTNAME% ]primary key (%PKEYCOLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for adding a primary key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o123">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   drop primary key</a:TextTargetItem.Value>
<a:Comment>Command for dropping a primary key</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o124">
<a:Name>Key</a:Name>
<a:Code>KEY</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for keys)
   &quot;COLUMNS&quot;      // List of columns of the key. Eg: &quot;A, B, C&quot;
   &quot;ISPKEY&quot;       // TRUE when the key is the primary key of the table
   &quot;KEY&quot;          // constraint name
   &quot;PKEY&quot;         // constraint name for primary key
   &quot;AKEY&quot;         // constraint name for alternate key
   &quot;ISMULTICOLN&quot;  // TRUE if key has more than one column
   &quot;CLUSTER&quot;      // keyword cluster
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o125">
<a:Name>Enable</a:Name>
<a:Comment>UNIQUE constraint allowed for tables</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o126">
<a:Name>UniqConstAutoIndex</a:Name>
<a:Comment>UNIQUE constraint is auto-indexed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o127">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>A_%.16:AKEY%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for alternate keys</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o128">
<a:Name>SqlAkeyIndex</a:Name>
<a:Comment>SQL query to obtain the alternate key indexes of a table by ODBC</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o129">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   drop unique %CONSTNAME%</a:TextTargetItem.Value>
<a:Comment>Command for dropping an alternate key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o130">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME% ]unique (%COLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for defining an alternate key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o131">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   [add ][constraint %CONSTNAME% ]unique (%COLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for adding an alternate key</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:IntegerTargetItem Id="o132">
<a:Name>MaxConstLen</a:Name>
<a:Comment>Maximum constraint name length</a:Comment>
<a:IntegerTargetItem.Value>18</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TargetCategory Id="o133">
<a:Name>Domain</a:Name>
<a:Code>PDMDOMN</a:Code>
<a:Comment>The following system variables are available:
   &quot;DOMAIN&quot;       // generated code of the domain (also available for columns)
SQL Server specific domain system variables:
   &quot;RULENAME&quot;     // name of the rule object associated with the domain
   &quot;DEFAULTNAME&quot;  // name of the default object associated with the domain
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o134">
<a:Name>Enable</a:Name>
<a:Comment>User defined data types allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o135">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>18</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o136">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create distinct type %DOMAIN% as %DATATYPE% with comparisons
</a:TextTargetItem.Value>
<a:Comment>Command for creating a user defined data type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o137">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop distinct type %DOMAIN%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a user defined data type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o138">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, DOMAIN, DTTPCODE, LENGTH, PREC}

select
   typeschema,
   typename,
   sourcename,
   length,
   scale
from
   syscat.datatypes
where
   metatype=&#39;T&#39;
   [and typeschema=%.q:SCHEMA%]
order by
   typename</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o139">
<a:Name>EnableCheck</a:Name>
<a:Comment>Allows the creation of checks on the domain</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o140">
<a:Name>EnableDefault</a:Name>
<a:Comment>Allows default value creation on domain</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o141">
<a:Name>Abstract Data Type</a:Name>
<a:Code>ADT</a:Code>
<a:Comment>The following system variables are available:
   &quot;ADT&quot;          // generated code of the abstract data type
   &quot;TYPE&quot;         // ADT type
   &quot;SIZE&quot;         // ADT size
   &quot;FILE&quot;         // ADT: Java file
   &quot;ISARRAY&quot;      // ADT: is an array?
   &quot;ISLIST&quot;       // ADT: is a list?
   &quot;ISSTRUCT&quot;     // ADT: is a structure?
   &quot;ISOBJECT&quot;     // ADT: is an object?
   &quot;ISJAVA&quot;       // ADT: is a JAVA class?
   &quot;ADTDEF&quot;       // ADT definition
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o142">
<a:Name>Enable</a:Name>
<a:Comment>Abstract Data Types allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o143">
<a:Name>EnableAdtOnDomn</a:Name>
<a:Comment>Abstract Data Types allowed on domain</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o144">
<a:Name>EnableAdtOnColn</a:Name>
<a:Comment>Abstract Data Types allowed on column</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o145">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{ADT, OWNER , TYPE (R=STRUCTURED) , SIZE,  DTTPCODE, LENGTH, PREC}
SELECT typename, definer, metatype, 0, &#39;&#39;, 0, 0
FROM syscat.datatypes
WHERE metatype=&#39;R&#39;
ORDER BY typename</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o146">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>[%ISSTRUCT% ? create type [%QUALIFIER%]%ADT% as
(
    %ADTDEF%
)
without comparisons
not final
mode db2sql
]</a:TextTargetItem.Value>
<a:Comment>Command for adding an abstract data type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o147">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop type [%QUALIFIER%]%ADT%</a:TextTargetItem.Value>
<a:Comment>Command for dropping an abstract data type</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o148">
<a:Name>Database</a:Name>
<a:Code>DTBS</a:Code>
<a:Comment>The following system variables are available:
   &quot;DATABASE&quot;     // generated code of the database
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o149">
<a:Name>Enable</a:Name>
<a:Comment>Database allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o150">
<a:Name>BeforeCreateDatabase</a:Name>
<a:Comment>Creates tablespaces and storages before database</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o151">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create database %DATABASE%
[%OPTIONS%]</a:TextTargetItem.Value>
<a:Comment>Command for creating a database. Example: create database %DATABASE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o152">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value>at node
on %s
alias %s
using codeset %s
territory %s
collate using %s : list=system | identity | compatibility
numsegs %d
dft_extent_sz %d
catalog tablespace : composite=yes
{
   managed by system using : composite=yes, separator=yes, parenthesis=yes
   {
      &lt;container_string&gt; %s : multiple=yes
   }
   managed by database using : composite=yes, separator=yes, parenthesis=yes
   {
      &lt;list&gt; : composite=yes, multiple=yes
      {
         &lt;device type&gt; %s : list=file | device, default=file 
         &lt;container string&gt; %s
         &lt;number_of_pages&gt; %d
      }
   }
   extentsize %d
   prefetchsize %d
   overhead %s : default=&#39;24.1&#39;
   transferrate %s : default=&#39;0.9&#39;
}
user tablespace : composite=yes
{
   managed by system using : composite=yes, separator=yes, parenthesis=yes
   {
      &lt;container_string&gt; %s : multiple=yes
   }
   managed by database using : composite=yes, separator=yes, parenthesis=yes
   {
      &lt;list&gt; : composite=yes, multiple=yes
      {
         &lt;device type&gt; %s : list=file | device, default=file 
         &lt;container string&gt; %s
         &lt;number_of_pages&gt; %d
      }
   }
   extentsize %d
   prefetchsize %d
   overhead %s : default=&#39;24.1&#39;
   transferrate %s : default=&#39;0.9&#39;
}
temporary tablespace : composite=yes
{
   managed by system using : composite=yes, separator=yes, parenthesis=yes
   {
      &lt;container_string&gt; %s : multiple=yes
   }
   managed by database using : composite=yes, separator=yes, parenthesis=yes
   {
      &lt;list&gt; : composite=yes, multiple=yes
      {
         &lt;device type&gt; %s : list=file | device, default=file 
         &lt;container string&gt; %s
         &lt;number_of_pages&gt; %d
      }
   }
   extentsize %d
   prefetchsize %d
   overhead %s : default=&#39;24.1&#39;
   transferrate %s : default=&#39;0.9&#39;
}
with %s</a:TextTargetItem.Value>
<a:Comment>Available options for creating a database</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o153">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for database options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o154">
<a:Name>OpenDatabase</a:Name>
<a:TextTargetItem.Value>activate database %DATABASE%</a:TextTargetItem.Value>
<a:Comment>Command for opening a database. Example: open database %DATABASE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o155">
<a:Name>CloseDatabase</a:Name>
<a:TextTargetItem.Value>deactivate database %DATABASE%</a:TextTargetItem.Value>
<a:Comment>Command for closing a database. Example: close database</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o156">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop database %DATABASE%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a database. Example: drop database %DATABASE%</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o157">
<a:Name>Tablespace</a:Name>
<a:Code>TSPC</a:Code>
<a:Comment>The following system variables are available:
   &quot;TABLESPACE&quot;   // generated code of the tablespace
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o158">
<a:Name>Enable</a:Name>
<a:Comment>Tablespace allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o159">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create [%ExtTablespaceType% ]tablespace %TABLESPACE%
[%OPTIONS%]</a:TextTargetItem.Value>
<a:Comment>Command for creating a tablespace. Example: create tablespace %TABLESPACE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o160">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop tablespace %TABLESPACE%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a tablespace. Example: drop tablespace %TABLESPACE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o161">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value>in %s
in nodegroup %s
pagesize %d
managed by : composite=yes
{
system : composite=yes
{
using : composite=yes
{
&lt;container_list&gt; : composite=yes, separator=yes, parenthesis=yes
{
&lt;container&gt; %s : multiple=yes, squoted=yes
}
&lt;on_node_clause&gt; : composite=yes
{
on %s : composite=yes, parenthesis=yes, separator=yes, list = node|nodes, default=node
{
&lt;node_list&gt; : composite=yes, multiple=yes
{
&lt;node_number&gt; %s
to %s
}
}
}
}
}
database : composite=yes
{
using : composite=yes, multiple=yes
{
&lt;container_clause&gt; : composite=yes, parenthesis=yes, separator=yes
{
&lt;list&gt; : composite=yes, multiple=yes
{
file %s : squoted=yes
device %s : squoted=yes
&lt;number_of_pages&gt; %d
}
}
&lt;on_node_clause&gt; : composite=yes
{
on %s : composite=yes, parenthesis=yes, separator=yes, list = node|nodes, default=node
{
&lt;node_list&gt; : composite=yes, multiple=yes
{
&lt;node_number&gt; %s
to %s
}
}
}
}
}
}
extentsize %d
prefetchsize %d
bufferpool %s : category=storage
overhead %s : default=24.1
transferrate %s : default=0.9
dropped table recovery %s : list=on |off</a:TextTargetItem.Value>
<a:Comment>Default options for creating a tablespace.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o162">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for tablespace options.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o163">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{SCHEMA, TABLESPACE, ExtTablespaceType, @OBJTLABL}

select
   definer,
   tbspace,
   case (datatype) when &#39;L&#39; then &#39;long&#39; when &#39;T&#39; then &#39;temporary&#39; when &#39;U&#39; then &#39;user temporary&#39; when &#39;A&#39; then &#39;regular&#39; else &#39;&#39; end,
   remarks
from
   syscat.tablespaces
[where
   definer = %.q:SCHEMA%]
order by
   definer,
   tbspace
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o164">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{TABLESPACE, OPTIONS}

select
   t.tbspace,
   &#39; in nodegroup &#39; concat t.ngname 
   concat &#39; pagesize &#39; concat rtrim(char(integer(t.pagesize))) 
   concat &#39; extentsize &#39; concat rtrim(char(integer(t.extentsize))) 
   concat &#39; overhead &#39; concat rtrim(char(decimal(t.overhead, 5, 2))) 
   concat &#39; prefetchsize &#39; concat rtrim(char(integer(t.prefetchsize))) 
   concat &#39; transferrate &#39; concat rtrim(char(decimal(t.transferrate, 5, 3))) 
   concat &#39; bufferpool &#39; concat b.bpname
from 
   syscat.tablespaces t 
   join syscat.bufferpools b on (b.bufferpoolid=t.bufferpoolid)
[where
   t.tbspace = %.q:TABLESPACE%]</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o165">
<a:Name>TablespaceComment</a:Name>
<a:TextTargetItem.Value>comment on tablespace [%QUALIFIER%]%TABLESPACE% is 
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding a tablespace comment</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o166">
<a:Name>Synonym</a:Name>
<a:Code>SYNM</a:Code>
<a:Comment>Manages the synonym object.</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o167">
<a:Name>Enable</a:Name>
<a:Comment>Synonym allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o168">
<a:Name>EnableAlias</a:Name>
<a:Comment>Enable synonym of alias type.</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o169">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create %SYNMTYPE% [%QUALIFIER%]%SYNONYM% for [%BASEQUALIFIER%]%BASEOBJECT%</a:TextTargetItem.Value>
<a:Comment>Command for creating a synonym.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o170">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop %SYNMTYPE% [%QUALIFIER%]%SYNONYM%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a synonym.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o171">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, SYNONYM, SYNMTYPE }

select 
   tabschema,
   tabname,
   &#39;ALIAS&#39;
from
   syscat.tables t
where
  t.type = &#39;A&#39;
[and tabschema=%.q:SCHEMA%]
order by
   tabschema,
   tabname
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o172">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, SYNONYM, BASEOWNER, BASEOBJECT }

select 
   tabschema,
   tabname,
   base_tabschema,
   base_tabname
from
   syscat.tables t
where
  t.type = &#39;A&#39;
[and tabschema=%.q:SCHEMA%]
order by
   tabschema,
   tabname
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:IntegerTargetItem Id="o173">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>18</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o174">
<a:Name>Storage</a:Name>
<a:Code>STOR</a:Code>
<a:Comment>The following system variables are available:
   &quot;STORAGE&quot;      // generated code of the storage
</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o175">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create bufferpool %STORAGE%
[%OPTIONS%]</a:TextTargetItem.Value>
<a:Comment>Command for creating a storage. Example: create storage %STORAGE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o176">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop bufferpool %STORAGE%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a storage. Example: drop storage %STORAGE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o177">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value>&lt;nodegroup&gt; : composite=yes
{
all nodes
nodegroup : composite=yes, separator=yes, childmand=yes
{
&lt;nodegroup_name&gt; %s : multiple=yes
}
}
size %d : composite=yes
{
except on %s : composite=yes, parenthesis=yes, separator=yes, list=node|nodes
{
&lt;node_list&gt; : composite=yes, multiple=yes
{
&lt;node_number&gt; %d
to %d
size %d
}
}
}
pagesize %d
&lt;extended storage&gt; %s : list=extended storage|not extended storage, default=not extended storage</a:TextTargetItem.Value>
<a:Comment>Default options for creating a storage</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o178">
<a:Name>Enable</a:Name>
<a:Comment>Storage allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o179">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{STORAGE, OPTIONS EX}

select distinct
   b.bpname,
   case coalesce(b.ngname, &#39;&#39;) when &#39;&#39; then &#39;all nodes&#39; else &#39;nodegroup %SqlNodeGroupList.&#39; concat b.bpname concat &#39;%&#39; end
   concat &#39; size &#39; concat rtrim(char(integer(b.npages)))
   concat &#39; pagesize &#39; concat  rtrim(char(integer(b.pagesize)))
   concat case b.estore when &#39;Y&#39; then &#39; extended storage&#39; when &#39;N&#39; then &#39; not extended storage&#39; end 
from 
   syscat.bufferpools b
order by b.bpname
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o180">
<a:Name>SqlNodeGroupList</a:Name>
<a:TextTargetItem.Value>{VAR ID, VAL ...}

select 
   b.bpname,
   b.ngname concat case ngname when (select max(c.ngname) from syscat.bufferpools c where c.bpname = %.q:STORAGE%) then &#39;&#39; else &#39;, &#39; end
from 
   syscat.bufferpools b
where
   b.bpname = %.q:STORAGE%
order by b.bpname
</a:TextTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o181">
<a:Name>View</a:Name>
<a:Code>VIEW</a:Code>
<a:Comment>The following system variables are available:
   &quot;VIEW&quot;         // generated code of the view
   &quot;VIEWNAME&quot;     // view name
   &quot;VIEWCODE&quot;     // view code
   &quot;VIEWCOLN&quot;     // List of columns of the view. Eg: &quot;A, B, C&quot;
   &quot;SQL&quot;          // SQL text of the view. Eg: Select * from T1
   &quot;VIEWCHECK&quot;    // Keyword &quot;with check option&quot; if selected on the view
   &quot;SCRIPT&quot;       // complete view creation order. Eg: create view V1 as select * from T1
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o182">
<a:Name>Enable</a:Name>
<a:Comment>View allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o183">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create view [%QUALIFIER%]%VIEW% [(%VIEWCOLN%) ]as
%SQL%
[%VIEWCHECK%]</a:TextTargetItem.Value>
<a:Comment>Command for creating a view. Example: create view %VIEW%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o184">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop view [%QUALIFIER%]%VIEW%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a view. Example: drop view %VIEW%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o185">
<a:Name>ViewComment</a:Name>
<a:TextTargetItem.Value>comment on table [%QUALIFIER%]%VIEW% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>Command for adding a view comment.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o186">
<a:Name>ViewCheck</a:Name>
<a:TextTargetItem.Value>with check option</a:TextTargetItem.Value>
<a:Comment>Option for checking a view</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o187">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, VIEW}

select
   v.viewschema,
   v.viewname
from 
   syscat.views v
where 
   1=1
   [and v.viewschema=%.q:SCHEMA%]
order by 
   v.viewschema,
   v.viewname
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o188">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, VIEW, SCRIPT, COMMENT}

select
   v.viewschema,
   v.viewname,
   cast(v.text as long varchar),
   t.remarks
from 
   syscat.views v,
   syscat.tables t
where (t.tabschema = v.viewschema and t.tabname = v.viewname and t.type = &#39;V&#39;)
   [and viewschema=%.q:SCHEMA%]
   [and viewname=%.q:VIEW%]</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o189">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a view.
The first column is the SQL name of permission (eg: SELECT)
The second column is a shortname to display in a grid</a:Comment>
<a:MapTargetItem.Value>CONTROL=Control
DELETE=Delete
SELECT=Select
UPDATE=Update</a:MapTargetItem.Value>
<a:List>CONTROL
DELETE
SELECT
UPDATE
</a:List>
</o:MapTargetItem>
<o:TextTargetItem Id="o190">
<a:Name>SqlPermQuery</a:Name>
<a:TextTargetItem.Value>{ GRANTEE ID, PERMISSION ...}

select 
s.grantee, 
case s.controlauth when &#39;Y&#39; then &#39;CONTROL&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.deleteauth when &#39;Y&#39; then &#39;DELETE&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.deleteauth when &#39;G&#39; then &#39;DELETE+&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.selectauth when &#39;Y&#39; then &#39;SELECT&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.selectauth when &#39;G&#39; then &#39;SELECT+&#39; else &#39;&#39; end  ||&#39;,&#39;||
case s.updateauth when &#39;Y&#39; then &#39;UPDATE&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.updateauth when &#39;G&#39; then &#39;UPDATE+&#39; else &#39;&#39; end
from syscat.tabauth s
where s.tabschema &lt;&gt; s.grantee
[and s.tabname = %.q:VIEW%]
[and s.tabschema = %.q:OWNER%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o191">
<a:Name>Trigger</a:Name>
<a:Code>TRGR</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for indexes)
 trigger object specific items
   &quot;ORDER&quot;        // order number of the trigger (to sort the triggers when the DBMS supports more than one trigger of one type)
   &quot;TRIGGER&quot;      // generated code of trigger
   &quot;TRGTYPE&quot;      // trigger type (keywords &quot;beforeinsert&quot;, &quot;afterupdate&quot;, ...)
   &quot;TRGEVENT&quot;     // trigger event (keywords &quot;insert&quot;, &quot;update&quot;, &quot;delete&quot;)
   &quot;TRGTIME&quot;      // trigger time (keywords NULL, &quot;before&quot;, &quot;after&quot;)
 inside the body of the trigger, macros redefine variables on objects
   &quot;REFNO&quot;        // reference position in the list of references of the table
 customized error messages management
   &quot;ERRNO&quot;        // error number for standard error
   &quot;ERRMSG&quot;       // error message for standard error
   &quot;MSGTAB&quot;       // name of the table containing user-defined error messages
   &quot;MSGNO&quot;        // in the user-defined error table, name of the column containing the error numbers
   &quot;MSGTXT&quot;       // in the user-defined error table, name of the column containing the error messages
   &quot;SCRIPT&quot;       // body of trigger or procedure
   &quot;TRGDEFN&quot;      // complete body of the trigger definition. Contains variable declarations and body of trigger or procedure
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o192">
<a:Name>Enable</a:Name>
<a:Comment>Trigger allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o193">
<a:Name>EnableMultiTrigger</a:Name>
<a:Comment>Multi trigger allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o194">
<a:Name>DefaultTriggerName</a:Name>
<a:TextTargetItem.Value>%TEMPLATE%_%.L:TABLE%</a:TextTargetItem.Value>
<a:Comment>Default trigger name</a:Comment>
</o:TextTargetItem>
<o:IntegerTargetItem Id="o195">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>18</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o196">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop trigger [%QUALIFIER%]%TRIGGER%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a trigger. Example: drop trigger %TRIGGER%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o197">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{TABLOWNER, TABLE, OWNER, TRIGGER, TRGTIME (A=After, *=Before), TRGEVENT (U=Update, D=Delete, *=Insert)}

select
   tabschema,
   tabname,
   trigschema,
   trigname,
   trigtime,
   trigevent
from 
   syscat.triggers
where 1=1
[  and tabschema=%.q:SCHEMA%]
[  and tabname = %.q:TABLE%]
order by 
   1, 2, 3
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o198">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{TABLOWNER, TABLE, OWNER, TRIGGER, SCRIPT}

select
   tabschema,
   tabname,
   trigschema,
   trigname,
   cast(text as long varchar)
from 
   syscat.triggers
where 1=1
[  and tabschema=%.q:TABLOWNER%]
[  and tabname=%.q:TABLE%]
[  and trigname=%.q:TRIGGER%]
[  and trigschema=%.q:OWNER%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o199">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create trigger [%QUALIFIER%]%TRIGGER%[%TRGTIME%=before? no cascade][ %TRGTIME%][ %TRGEVENT%[ of %COLUMNS%]] on [%TABLQUALIFIER%]%TABLE%
%TRGDEFN%</a:TextTargetItem.Value>
<a:Comment>Command for creating a trigger. Example: create trigger on [%QUALIFIER%]%TABLE% %TRGDEFN%</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o200">
<a:Name>EnableOwner</a:Name>
<a:Comment>Owner allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o201">
<a:Name>Procedure</a:Name>
<a:Code>PROC</a:Code>
<a:Comment>The following system variables are available:
   &quot;PROC&quot;         // generated code of the procedure (also available for trigger when the trigger is implemented with a procedure)
   &quot;FUNC&quot;         // generated code of the procedure if the procedure is a function (with return value)
   &quot;PROCPRMS&quot;     // list of parameters of the procedure (also available for function)
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o202">
<a:Name>Enable</a:Name>
<a:Comment>Procedure allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o203">
<a:Name>EnableFunc</a:Name>
<a:Comment>Function allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o204">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>18</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:IntegerTargetItem Id="o205">
<a:Name>MaxFuncLen</a:Name>
<a:Comment>Function name length</a:Comment>
<a:IntegerTargetItem.Value>18</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o206">
<a:Name>DropFunc</a:Name>
<a:TextTargetItem.Value>drop function [%QUALIFIER%]%FUNC%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a function. Example: drop function %FUNC%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o207">
<a:Name>CustomFunc</a:Name>
<a:TextTargetItem.Value>create function [%QUALIFIER%]%FUNC% (&lt;type&gt;) 
RETURNS &lt;type&gt;
EXTERNAL NAME %.q:FUNC%
LANGUAGE C
PARAMETER STYLE DB2SQL
DETERMINISTIC
NO SQL
NO EXTERNAL ACTION</a:TextTargetItem.Value>
<a:Comment>Command for creating a function</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o208">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, PROC}

select 
   procschema,
   procname
from
   syscat.procedures
[where procschema=%.q:SCHEMA%]
order by
   procschema,
   procname

   </a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o209">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o210">
<a:Name>CreateFunc</a:Name>
<a:TextTargetItem.Value>create function [%QUALIFIER%]%FUNC%[%PROCPRMS%?([%PROCPRMS%])]
%TRGDEFN%</a:TextTargetItem.Value>
<a:Comment>Command for creating a function. Example: create function %FUNC% %TRGDEFN%</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o211">
<a:Name>EnableOwner</a:Name>
<a:Comment>Owner allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o212">
<a:Name>Abstract Data Type Attribute</a:Name>
<a:Code>ATTR</a:Code>
<a:Comment>The following system variables are available:
   &quot;ADTATTR&quot;      // generated code of the abstract data type attribute
</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o213">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>%ADTATTR% %DATATYPE%</a:TextTargetItem.Value>
<a:Comment>Command for defining an abstract data type attribute</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o214">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{ ADT, ADTATTR , DTTPCODE, LENGTH, PREC }
SELECT typename, attr_name, attr_typename, length, scale
FROM syscat.attributes</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o215">
<a:Name>Permission</a:Name>
<a:Code>PERM</a:Code>
<a:Comment>Manages the permissions on database objects</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o216">
<a:Name>Enable</a:Name>
<a:Comment>Permission allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o217">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>grant %PERMLIST% on [%QUALIFIER%]%OBJECT% to %GRANTEE% [%GRANTOPTION%]</a:TextTargetItem.Value>
<a:Comment>Command for granting permissions.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o218">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>revoke %REVPERMLIST% on [%QUALIFIER%]%OBJECT% from %GRANTEE%</a:TextTargetItem.Value>
<a:Comment>Command for revoking permissions.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o219">
<a:Name>GrantOption</a:Name>
<a:TextTargetItem.Value>with grant option</a:TextTargetItem.Value>
<a:Comment>Option for the grant statement.</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o220">
<a:Name>Privilege</a:Name>
<a:Comment>Manages the system privileges for a user, role or group</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o221">
<a:Name>Enable</a:Name>
<a:Comment>Privilege allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o222">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>grant %PRIVLIST% on database to %USER%</a:TextTargetItem.Value>
<a:Comment>Command for granting privileges.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o223">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>revoke %REVPRIVLIST% on database from %USER%</a:TextTargetItem.Value>
<a:Comment>Command for revoking privileges.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o224">
<a:Name>System</a:Name>
<a:TextTargetItem.Value>BINDADD
CONNECT
CREATETAB
CREATE_NOT_FENCED
IMPLICIT_SCHEMA
DBADM
LOAD</a:TextTargetItem.Value>
<a:Comment>List of system privileges</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o225">
<a:Name>Group</a:Name>
<a:Code>GRPE</a:Code>
<a:Comment>Manages the group object.</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o226">
<a:Name>Enable</a:Name>
<a:Comment>Group allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o227">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{ GROUP }

select distinct grantee from syscat.dbauth
where granteetype = &#39;G&#39;
[and UPPER(grantee) = %.qU:SCHEMA%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:IntegerTargetItem Id="o228">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>8</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o229">
<a:Name>SqlPermQuery</a:Name>
<a:TextTargetItem.Value>{GROUP ID, PRIVILEGE ...}

select 
s.grantee,
case s.dbadmauth when &#39;Y&#39; then &#39;DBADM&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.createtabauth when &#39;Y&#39; then &#39;CREATETAB&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.bindaddauth  when &#39;Y&#39; then &#39;BINDADD&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.connectauth  when &#39;Y&#39; then &#39;CONNECT&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.nofenceauth  when &#39;Y&#39; then &#39;CREATE_NOT_FENCED&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.implschemaauth  when &#39;Y&#39; then &#39;IMPLICIT_SCHEMA&#39; else &#39;&#39; end ||&#39;,&#39;||
case s.loadauth  when &#39;Y&#39; then &#39;LOAD&#39; else &#39;&#39; end
from syscat.dbauth s
where granteetype = &#39;G&#39;
</a:TextTargetItem.Value>
<a:Comment>Query to reverse privileges</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o230">
<a:Name>DataType</a:Name>
<a:Comment>Contains data type translation entries. These entries list the correspondence between internal data types and the target database data types</a:Comment>
<c:Categories>
<o:MapTargetItem Id="o231">
<a:Name>AmcdDataType</a:Name>
<a:Comment>Data types translation table from internal data types to target database data types.
        %n is the length of the data type
        %s is the size of the data type
        %p is the precision of the data type</a:Comment>
<a:MapTargetItem.Value>&lt;UNDEF&gt;=&lt;Undefined&gt;
A%n=CHAR(%n)
VA%n=VARCHAR(%n)
LA=LONG VARCHAR
LA%n=LONG VARCHAR
LVA=LONG VARCHAR
LVA%n=LONG VARCHAR
BT=SMALLINT
BT%n=NUMERIC(3, 0)
SI=SMALLINT
LI=BIGINT
I=INTEGER
N=NUMERIC
N%n=NUMERIC(%n)
N%s,%p=NUMERIC(%s,%p)
DC=DECIMAL
DC%n=DECIMAL(%n)
DC%s,%p=DECIMAL(%s,%p)
SF=REAL
F=FLOAT
F%n=FLOAT(%n)
LF=DOUBLE PRECISION
MN=NUMERIC(8, 2)
MN%n=NUMERIC(%n, 0)
MN%s,%p=NUMERIC(%s,%p)
D=DATE
T=TIME
DT=DATE
TS=TIMESTAMP
BL=SMALLINT
NO=NUMERIC(6, 0)
NO%n=NUMERIC(%n, 0)
BIN%n=BLOB(%n)
LBIN=LONG VARGRAPHIC
LBIN%n=BLOB(%n)
TXT=LONG VARCHAR
TXT%n=CLOB(%n)
MBT=CHAR
MBT%n=CHAR(%n)
VMBT=VARCHAR(%n)
VMBT%n=VARCHAR(%n)
PIC=LONG VARGRAPHIC
PIC%n=LONG VARGRAPHIC
BMP=LONG VARGRAPHIC
BMP%n=LONG VARGRAPHIC
OLE=LONG VARGRAPHIC
OLE%n=BLOB(%n)
*=CHAR(10)
DATALINK=DATALINK</a:MapTargetItem.Value>
<a:List>&lt;UNDEF&gt;
A%n
VA%n
LA
LA%n
LVA
LVA%n
BT
BT%n
SI
LI
I
N
N%n
N%s,%p
DC
DC%n
DC%s,%p
SF
F
F%n
LF
MN
MN%n
MN%s,%p
D
T
DT
TS
BL
NO
NO%n
BIN%n
LBIN
LBIN%n
TXT
TXT%n
MBT
MBT%n
VMBT
VMBT%n
PIC
PIC%n
BMP
BMP%n
OLE
OLE%n
DATALINK
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o232">
<a:Name>PhysDataType</a:Name>
<a:Comment>Data types translation table from target database data types to internal data types.</a:Comment>
<a:MapTargetItem.Value>&lt;Undefined&gt;=&lt;UNDEF&gt;
CHAR=A1
CHAR(%n)=A%n
CHARACTER=A1
CHARACTER(%n)=A%n
VARCHAR(%n)=VA%n
LONG VARCHAR=LVA
SMALLINT=SI
INT=I
INTEGER=I
NUM=N
NUM(%n)=N%n
NUM(%s,%p)=N%s,%p
NUMERIC=N
NUMERIC(%n)=N%n
NUMERIC(%s,%p)=N%s,%p
DEC=DC
DEC(%n)=DC%n
DEC(%s,%p)=DC%s,%p
DECIMAL=DC
DECIMAL(%n)=DC%n
DECIMAL(%s,%p)=DC%s,%p
REAL=SF
FLOAT=F
FLOAT(%n)=F%n
DOUBLE=LF
DOUBLE PRECISION=LF
DATE=D
TIME=T
TIMESTAMP=TS
GRAPHIC=PIC
GRAPHIC(%n)=PIC%n
VARGRAPHIC(%n)=PIC%n
LONG VARGRAPHIC=PIC
BLOB(%n)=BIN(%n)
CLOB(%n)=TXT(%n)
DBCLOB(%n)=BIN(%n)
*=A10
BIGINT=LI
DATALINK=DATALINK</a:MapTargetItem.Value>
<a:List>&lt;Undefined&gt;
CHAR
CHAR(%n)
CHARACTER
CHARACTER(%n)
VARCHAR(%n)
LONG VARCHAR
SMALLINT
INT
INTEGER
NUM
NUM(%n)
NUM(%s,%p)
NUMERIC
NUMERIC(%n)
NUMERIC(%s,%p)
DEC
DEC(%n)
DEC(%s,%p)
DECIMAL
DECIMAL(%n)
DECIMAL(%s,%p)
REAL
FLOAT
FLOAT(%n)
DOUBLE
DOUBLE PRECISION
DATE
TIME
TIMESTAMP
GRAPHIC
GRAPHIC(%n)
VARGRAPHIC(%n)
LONG VARGRAPHIC
BLOB(%n)
CLOB(%n)
DBCLOB(%n)
BIGINT
DATALINK
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o233">
<a:Name>PhysDttpSize</a:Name>
<a:Comment>Table of storage sizes of target database data type</a:Comment>
<a:MapTargetItem.Value>TIME=3</a:MapTargetItem.Value>
<a:List>TIME
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o234">
<a:Name>HostDataType</a:Name>
<a:Comment>Data types translation from database data type to procedure data type</a:Comment>
<a:MapTargetItem.Value>CHAR=char
CHARACTER=char
CHAR(%n)=varchar
CHARACTER(%n)=varchar
CHARACTER VARYING(%n)=varchar
CHAR VARYING(%n)=varchar
DATALINK=datalink
BIGINT=li
VARCHAR(%n)=varchar
VARCHAR2(%n)=varchar
LONG=long
LONG VARCHAR=long
SMALLINT=integer
INT=integer
INTEGER=integer
REAL=number
DOUBLE PRECISION=number
DEC=number
DEC(%n)=number
DEC(%s,%p)=number
DECIMAL=number
DECIMAL(%n)=number
DECIMAL(%s,%p)=number
NUMBER=number
NUMBER(%n)=number
NUMBER(%s,%p)=number
FLOAT=float
FLOAT(%n)=number
DATE=date
RAW(%n)=raw
LONG RAW=raw</a:MapTargetItem.Value>
<a:List>CHAR
CHARACTER
CHAR(%n)
CHARACTER(%n)
CHARACTER VARYING(%n)
CHAR VARYING(%n)
DATALINK
BIGINT
VARCHAR(%n)
VARCHAR2(%n)
LONG
LONG VARCHAR
SMALLINT
INT
INTEGER
REAL
DOUBLE PRECISION
DEC
DEC(%n)
DEC(%s,%p)
DECIMAL
DECIMAL(%n)
DECIMAL(%s,%p)
NUMBER
NUMBER(%n)
NUMBER(%s,%p)
FLOAT
FLOAT(%n)
DATE
RAW(%n)
LONG RAW
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o235">
<a:Name>PhysLogADTType</a:Name>
<a:Comment>Abstract Data types translation table from target database abstract data types to internal abstract data types.</a:Comment>
<a:MapTargetItem.Value>STRUCTURED=Structured</a:MapTargetItem.Value>
<a:List>STRUCTURED
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o236">
<a:Name>LogPhysADTType</a:Name>
<a:Comment>Abstract Data types translation table from internal abstract data types to target database abstract data types.</a:Comment>
<a:MapTargetItem.Value>Array=&lt;Undefined&gt;
List=&lt;Undefined&gt;
Structured=STRUCTURED
Object=&lt;Undefined&gt;
Java=&lt;Undefined&gt;</a:MapTargetItem.Value>
<a:List>Array
List
Structured
Object
Java
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o237">
<a:Name>PhysOdbcDataType</a:Name>
<a:Comment>Data types translation table from target database data types to ODBC data types.</a:Comment>
<a:MapTargetItem.Value>INT=INTEGER
DEC=DECIMAL
DEC(%n)=DECIMAL(%n)
DEC(%s,%p)=DECIMAL(%s,%p)</a:MapTargetItem.Value>
<a:List>INT
DEC
DEC(%n)
DEC(%s,%p)
</a:List>
</o:MapTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:ProfileTargetItem Id="o238">
<a:Name>Profile</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:MetaClassTargetItem Id="o239">
<a:Name>Column</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TypedCategoryTargetItem Id="o240">
<a:TypePublicName>ExtendedAttributeTargetItem</a:TypePublicName>
<a:Name>Extended Attributes</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:ExtendedAttributeTargetItem Id="o241">
<a:ObjectID>C2598BA4-647B-421E-AF09-0D5DC797E8BD</a:ObjectID>
<a:Name>ExtForBitData</a:Name>
<a:Comment>This extended attribute specifies that the contents of the column are to be treated as bit (binary) data.
This is only applicable on column with a datatype of character.</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTargetItem.Value>FALSE</a:ExtendedAttributeTargetItem.Value>
</o:ExtendedAttributeTargetItem>
<o:ExtendedAttributeTargetItem Id="o242">
<a:ObjectID>E3EC4B79-9018-4DF3-A518-EB8F5FDB3FD3</a:ObjectID>
<a:Name>ExtLobOption</a:Name>
<a:Comment>Specifies options for LOB data type columns.</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTargetItem.DataType>-1</a:ExtendedAttributeTargetItem.DataType>
<c:ExtendedAttributeType>
<o:ExtendedAttributeTypeTargetItem Ref="o243"/>
</c:ExtendedAttributeType>
</o:ExtendedAttributeTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o244">
<a:TypePublicName>CustomCheckTargetItem</a:TypePublicName>
<a:Name>Custom Checks</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:CustomCheckTargetItem Id="o245">
<a:Name>Lob Option Check</a:Name>
<a:Comment>Check that the ExtLobOption extended attribute is correctly applied.</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:HelpMessage>This check ensures that the ExtLobOption extended attribute is correctly applied.</a:HelpMessage>
<a:OutputMessage>The following columns have incorrect value in the ExtLobOption extended attribute</a:OutputMessage>
<a:CheckScript>Function %Check%(obj)
   if not (obj.IsKindOf(cls_column)) then exit function
   if (Instr(lcase(obj.Datatype), &quot;lob&quot;) = 0) and (obj.GetExtendedAttribute(&quot;ExtLobOption&quot;) &lt;&gt; &quot;&quot;) then
      %Check% = False
      exit function
   end if
   %Check% = True
End Function</a:CheckScript>
<a:AutoFixScrpt>Function %Fix%(obj, outmsg)
   &#39; Implement your automatic correction on &lt;obj&gt; here
   &#39; filling &lt;outmsg&gt; as you wish
   &#39; and return True if successful.

   outmsg = &quot;Automatic correction not implemented&quot;

   %Fix% = False
End Function</a:AutoFixScrpt>
</o:CustomCheckTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o246">
<a:TypePublicName>FormTargetItem</a:TypePublicName>
<a:Name>Forms</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:FormTargetItem Id="o247">
<a:Name>DB2</a:Name>
<a:FormTargetItem.Value>&lt;Form  &gt;
   &lt;ExtendedAttribute Attribute=&quot;ExtLobOption&quot; AttributeID=&quot;{E3EC4B79-9018-4DF3-A518-EB8F5FDB3FD3}&quot; Name=&quot;ExtLobOption&quot; Caption=&quot;Lob option&quot; GrayHiddenAttributes=&quot;Yes&quot; /&gt;
   &lt;ExtendedAttribute Attribute=&quot;ExtForBitData&quot; AttributeID=&quot;{C2598BA4-647B-421E-AF09-0D5DC797E8BD}&quot; Name=&quot;ExtForBitData&quot; Caption=&quot;For bit data&quot; GrayHiddenAttributes=&quot;Yes&quot; /&gt;
&lt;/Form&gt;
</a:FormTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:FormTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:MetaClassTargetItem>
<o:MetaClassTargetItem Id="o248">
<a:Name>Tablespace</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TypedCategoryTargetItem Id="o249">
<a:TypePublicName>ExtendedAttributeTargetItem</a:TypePublicName>
<a:Name>Extended Attributes</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:ExtendedAttributeTargetItem Id="o250">
<a:ObjectID>DE906270-9690-4657-9EB7-04F1AEF97E66</a:ObjectID>
<a:Name>ExtTablespaceType</a:Name>
<a:Comment>Specifies the type of data that will be stored in the tablespace. See ExtTablespaceTypeList extended type for detail.</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTargetItem.DataType>-1</a:ExtendedAttributeTargetItem.DataType>
<c:ExtendedAttributeType>
<o:ExtendedAttributeTypeTargetItem Ref="o251"/>
</c:ExtendedAttributeType>
</o:ExtendedAttributeTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o252">
<a:TypePublicName>FormTargetItem</a:TypePublicName>
<a:Name>Forms</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:FormTargetItem Id="o253">
<a:Name>DB2</a:Name>
<a:FormTargetItem.Value>&lt;Form  &gt;
   &lt;ExtendedAttribute Attribute=&quot;ExtTablespaceType&quot; AttributeID=&quot;{DE906270-9690-4657-9EB7-04F1AEF97E66}&quot; Name=&quot;ExtTablespaceType&quot; Caption=&quot;Type&quot; GrayHiddenAttributes=&quot;Yes&quot; /&gt;
&lt;/Form&gt;
</a:FormTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:FormTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:MetaClassTargetItem>
<o:TargetCategory Id="o254">
<a:Name>Shared</a:Name>
<a:Code>Shared</a:Code>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TypedCategoryTargetItem Id="o255">
<a:TypePublicName>ExtendedAttributeTypeTargetItem</a:TypePublicName>
<a:Name>Extended Attribute Types</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:ExtendedAttributeTypeTargetItem Id="o243">
<a:ObjectID>9FE68473-CD14-4577-95AA-A32703509A6A</a:ObjectID>
<a:Name>ExtLobOptionList</a:Name>
<a:Comment>Option list for LOB data type columns.</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTypeTargetItem.ListOfValues>not logged not compact
logged not compact
not logged compact
logged compact
not compact
not logged
compact
logged</a:ExtendedAttributeTypeTargetItem.ListOfValues>
</o:ExtendedAttributeTypeTargetItem>
<o:ExtendedAttributeTypeTargetItem Id="o251">
<a:ObjectID>DA85F35B-7882-4E8C-A4E3-E6FA246CD429</a:ObjectID>
<a:Name>ExtTablespaceTypeList</a:Name>
<a:Comment>List of available tablespace type.
REGULAR Stores all data except for temporary tables. 
LONG Stores long or LOB table columns. The table space must be a DMS table space. 
TEMPORARY Stores temporary tables</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTypeTargetItem.ListOfValues>regular
long
temporary</a:ExtendedAttributeTypeTargetItem.ListOfValues>
</o:ExtendedAttributeTypeTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:ProfileTargetItem>
</c:Categories>
<c:TriggerItems>
<o:TriggerItem Id="o256">
<a:ObjectID>252338DC-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>InsertChildParentExist</a:Name>
<a:Code>InsertChildParentExist</a:Code>
<a:Text>.FOREACH_PARENT()
   signal sqlstate &#39;70001&#39; (&#39;Parent does not exist. Cannot create child in &quot;[%CQUALIFIER%]%CHILD%&quot;.&#39;);
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>937215924</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Parent must exist when inserting child constraint</a:Comment>
<a:Declaration>.FOREACH_PARENT()
--  Parent &quot;[%PQUALIFIER%]%PARENT%&quot; must exist when inserting a child in &quot;[%CQUALIFIER%]%CHILD%&quot;
      (.JOIN(&quot;new_ins.%FK% is not null&quot;, &quot;&quot;, &quot; and&quot;, &quot; and&quot;)
      not exists (select 1
                   from  [%PQUALIFIER%]%PARENT%
                   where  .JOIN(&quot;[%PQUALIFIER%]%PARENT%.%PK% = new_ins.%FK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;)) or&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o257">
<a:ObjectID>252338DD-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>InsertTooManyChildren</a:Name>
<a:Code>InsertTooManyChildren</a:Code>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>937215924</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Cannot exceed the maximum cardinality constraint when inserting the child</a:Comment>
</o:TriggerItem>
<o:TriggerItem Id="o258">
<a:ObjectID>252338E0-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>UpdateChangeColumn</a:Name>
<a:Code>UpdateChangeColumn</a:Code>
<a:Text>   signal sqlstate &#39;70003&#39; (&#39;Non modifiable column cannot be modified.&#39;);</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>937215964</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Cannot modify non modifiable column constraint</a:Comment>
<a:Declaration>.FOREACH_COLUMN(&quot;NMFCOL&quot;)
--  Non modifiable column &quot;%COLUMN%&quot; cannot be modified
      (.JOIN(&quot;new_upd.%COLUMN% &lt;&gt; old_upd.%COLUMN%&quot;, &quot;&quot;, &quot; or&quot;, &quot; ) or&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o259">
<a:ObjectID>252338E1-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>UpdateChildParentExist</a:Name>
<a:Code>UpdateChildParentExist</a:Code>
<a:Text>.FOREACH_PARENT()
   signal sqlstate &#39;70004&#39; (&#39;Parent does not exist. Cannot update child in &quot;[%CQUALIFIER%]%CHILD%&quot;.&#39;);
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>937215964</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Parent must exist when updating a child constraint</a:Comment>
<a:Declaration>.FOREACH_PARENT()
--  Parent &quot;[%PQUALIFIER%]%PARENT%&quot; must exist when updating a child in &quot;[%CQUALIFIER%]%CHILD%&quot;
      (.JOIN(&quot;new_upd.%FK% is not null&quot;, &quot;&quot;, &quot; and&quot;, &quot; and&quot;)
       not exists (select 1
                   from  [%PQUALIFIER%]%PARENT%
                  where  .JOIN(&quot;[%PQUALIFIER%]%PARENT%.%PK% = new_upd.%FK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;)) or&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o260">
<a:ObjectID>252338E2-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>UpdateTooManyChildren</a:Name>
<a:Code>UpdateTooManyChildren</a:Code>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>937215964</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Cannot exceed the maximum cardinality constraint when updating the child</a:Comment>
</o:TriggerItem>
<o:TriggerItem Id="o261">
<a:ObjectID>252338E3-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>UpdateChildChangeParent</a:Name>
<a:Code>UpdateChildChangeParent</a:Code>
<a:Text>   signal sqlstate &#39;70005&#39; (&#39;Cannot modify parent code in child &quot;[%CQUALIFIER%]%CHILD%&quot;.&#39;);</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>937215964</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Cannot change parent constraint</a:Comment>
<a:Declaration>.FOREACH_PARENT(&quot;FKCANTCHG&quot;)
--  Cannot modify parent code of &quot;[%PQUALIFIER%]%PARENT%&quot; in child &quot;[%CQUALIFIER%]%CHILD%&quot;
      (.JOIN(&quot;new_upd.%FK% &lt;&gt; old_upd.%FK%&quot;, &quot;&quot;, &quot; or&quot;, &quot; ) or&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o262">
<a:ObjectID>252338E4-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>UpdateParentRestrict</a:Name>
<a:Code>UpdateParentRestrict</a:Code>
<a:Text>   signal sqlstate &#39;70006&#39; (&#39;Children still exist. Cannot modify parent code in &quot;[%PQUALIFIER%]%PARENT%&quot;.&#39;);</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>937215964</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Update restrict constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;UPDATE RESTRICT&quot;)
--  Cannot modify parent code in &quot;[%PQUALIFIER%]%PARENT%&quot; if children still exist in &quot;[%CQUALIFIER%]%CHILD%&quot;
      (.JOIN(&quot;new_upd.%PK% &lt;&gt; old_upd.%PK%&quot;, &quot;&quot;, &quot; or&quot;, &quot; and&quot;)
       exists (select 1
               from  [%CQUALIFIER%]%CHILD%
              where  .JOIN(&quot;[%CQUALIFIER%]%CHILD%.%FK% = old_upd.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;)) or&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o263">
<a:ObjectID>252338E5-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>UpdateParentCascade</a:Name>
<a:Code>UpdateParentCascade</a:Code>
<a:Text>.FOREACH_CHILD(&quot;UPDATE CASCADE&quot;)
--  Modify parent code of &quot;[%PQUALIFIER%]%PARENT%&quot; for all children in &quot;[%CQUALIFIER%]%CHILD%&quot;
   update [%CQUALIFIER%]%CHILD%
    set   .JOIN(&quot;[%CQUALIFIER%]%CHILD%.%FK% = new_upd.%PK%&quot;, &quot;&quot;, &quot;,&quot;)
    where  (.JOIN(&quot;[%CQUALIFIER%]%CHILD%.%FK% = old_upd.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;) and&quot;)
           (.JOIN(&quot;new_upd.%PK% &lt;&gt; old_upd.%PK%&quot;, &quot;&quot;, &quot; or&quot;, &quot;);&quot;)
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:Comment>Update cascade constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;UPDATE CASCADE&quot;)
--  Modify parent code of &quot;[%PQUALIFIER%]%PARENT%&quot; for all children in &quot;[%CQUALIFIER%]%CHILD%&quot;
      (.JOIN(&quot;new_upd.%PK% &lt;&gt; old_upd.%PK%&quot;, &quot;&quot;, &quot; or&quot;, &quot;) or&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o264">
<a:ObjectID>252338E6-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>UpdateParentSetNull</a:Name>
<a:Code>UpdateParentSetNull</a:Code>
<a:Text>.FOREACH_CHILD(&quot;UPDATE SETNULL&quot;)
--  Set parent code of &quot;[%PQUALIFIER%]%PARENT%&quot; to NULL in &quot;[%CQUALIFIER%]%CHILD%&quot;
   update [%CQUALIFIER%]%CHILD%
    set   .JOIN(&quot;[%CQUALIFIER%]%CHILD%.%FK% = NULL&quot;, &quot;&quot;, &quot;,&quot;)
    where  (.JOIN(&quot;[%CQUALIFIER%]%CHILD%.%FK% = old_upd.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;) and&quot;)
           (.JOIN(&quot;new_upd.%PK% &lt;&gt; old_upd.%PK%&quot;, &quot;&quot;, &quot; or&quot;, &quot; );&quot;)
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:Comment>Update set null constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;UPDATE SETNULL&quot;)
      (.JOIN(&quot;new_upd.%PK% &lt;&gt; old_upd.%PK%&quot;, &quot;&quot;, &quot; or&quot;, &quot; ) or&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o265">
<a:ObjectID>252338E7-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>UpdateParentSetDefault</a:Name>
<a:Code>UpdateParentSetDefault</a:Code>
<a:Text>.DEFINE &quot;_DEFAULT&quot; &quot;NULL&quot; 
.FOREACH_CHILD(&quot;UPDATE SETDEFAULT&quot;)
--  Set parent code of &quot;[%PQUALIFIER%]%PARENT%&quot; to default in &quot;[%CQUALIFIER%]%CHILD%&quot;
    update [%CQUALIFIER%]%CHILD%
    set   .JOIN(&quot;[%CQUALIFIER%]%CHILD%.%FK% = %DEFAULT%&quot;, &quot;&quot;, &quot;,&quot;)
    where  (.JOIN(&quot;[%CQUALIFIER%]%CHILD%.%FK% = old_upd.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;) and&quot;)
           (.JOIN(&quot;new_upd.%PK% &lt;&gt; old_upd.%PK%&quot;, &quot;&quot;, &quot; or&quot;, &quot;);&quot;)

.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126621693</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Update set default constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;UPDATE SETDEFAULT&quot;)
     (.JOIN(&quot;new_upd.%PK% &lt;&gt; old_upd.%PK%&quot;, &quot;&quot;, &quot; or&quot;, &quot;) or&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o266">
<a:ObjectID>252338EA-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>DeleteParentRestrict</a:Name>
<a:Code>DeleteParentRestrict</a:Code>
<a:Text>   signal sqlstate &#39;70007&#39; (&#39;Children still exist. Cannot delete parent &quot;[%PQUALIFIER%]%PARENT%&quot;.&#39;);</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>933609149</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Delete restrict constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;DELETE RESTRICT&quot;)
--  Cannot delete parent &quot;[%PQUALIFIER%]%PARENT%&quot; if children still exist in &quot;[%CQUALIFIER%]%CHILD%&quot;
       exists (select 1
               from  [%CQUALIFIER%]%CHILD%
              where  (.JOIN(&quot;[%CQUALIFIER%]%CHILD%.%FK% = old_del.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;)) or&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o267">
<a:ObjectID>252338EB-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>DeleteParentCascade</a:Name>
<a:Code>DeleteParentCascade</a:Code>
<a:Text>.FOREACH_CHILD(&quot;DELETE CASCADE&quot;)
--  Delete all children in &quot;[%CQUALIFIER%]%CHILD%&quot;
delete from [%CQUALIFIER%]%CHILD%
where  .JOIN(&quot;[%CQUALIFIER%]%CHILD%.%FK% = old_del.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;;&quot;)
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:Comment>Delete cascade constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;DELETE CASCADE&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o268">
<a:ObjectID>252338EC-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>DeleteParentSetNull</a:Name>
<a:Code>DeleteParentSetNull</a:Code>
<a:Text>.FOREACH_CHILD(&quot;DELETE SETNULL&quot;)
--  Set parent code of &quot;[%PQUALIFIER%]%PARENT%&quot; to NULL in child &quot;[%CQUALIFIER%]%CHILD%&quot;
update [%CQUALIFIER%]%CHILD%
 set   .JOIN(&quot;%FK% = NULL&quot;, &quot;&quot;, &quot;,&quot;)
 where  .JOIN(&quot;[%CQUALIFIER%]%CHILD%.%FK% = old_del.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;;&quot;)

.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:Comment>Delete set null constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;DELETE SETNULL&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o269">
<a:ObjectID>252338ED-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>DeleteParentSetDefault</a:Name>
<a:Code>DeleteParentSetDefault</a:Code>
<a:Text>.DEFINE &quot;_DEFAULT&quot; &quot;NULL&quot; 
.FOREACH_CHILD(&quot;DELETE SETDEFAULT&quot;)
--  Set parent code &quot;[%PQUALIFIER%]%PARENT%&quot; to default in &quot;[%CQUALIFIER%]%CHILD%&quot;
update [%CQUALIFIER%]%CHILD%
 set   .JOIN(&quot;%FK% = %DEFAULT%&quot;, &quot;&quot;, &quot;,&quot;)
 where  .JOIN(&quot;[%CQUALIFIER%]%CHILD%.%FK% = old_del.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;;&quot;)

.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126621693</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Delete set default constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;DELETE SETDEFAULT&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o270">
<a:ObjectID>252338EE-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>UseErrorMsgTable</a:Name>
<a:Code>UseErrorMsgTable</a:Code>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:Comment>Errors handling using an error messages table</a:Comment>
</o:TriggerItem>
<o:TriggerItem Id="o271">
<a:ObjectID>252338EF-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>UseErrorMsgText</a:Name>
<a:Code>UseErrorMsgText</a:Code>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:Comment>Errors handling using fixed error messages</a:Comment>
</o:TriggerItem>
</c:TriggerItems>
<c:TriggerTemplates>
<o:TriggerTemplate Id="o272">
<a:ObjectID>252338DA-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>BeforeInsertTrigger</a:Name>
<a:Code>BeforeInsertTrigger</a:Code>
<a:Text>create trigger [%QUALIFIER%]%TRIGGER% no cascade before insert
on [%TABLQUALIFIER%]%TABLE% referencing new as new_ins for each row mode db2sql
when (
     .DeclInsertChildParentExist
     .DeclInsertTooManyChildren
     (0=1)
     )
begin atomic
   signal sqlstate &#39;70001&#39; (&#39;Cannot create child in &quot;[%CQUALIFIER%]%CHILD%&quot;.&#39;);
end
</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>937215924</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Before insert trigger</a:Comment>
<a:TriggerName>tib_%.L:TABLE%</a:TriggerName>
<c:TriggerTemplate.TriggerItems>
<o:TriggerItem Ref="o256"/>
<o:TriggerItem Ref="o257"/>
</c:TriggerTemplate.TriggerItems>
</o:TriggerTemplate>
<o:TriggerTemplate Id="o273">
<a:ObjectID>252338DB-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>AfterInsertTrigger</a:Name>
<a:Code>AfterInsertTrigger</a:Code>
<a:Text>create trigger [%QUALIFIER%]%TRIGGER% after insert
on [%TABLQUALIFIER%]%TABLE% referencing old as old_ins for each row mode db2sql

begin atomic
end  
</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:Comment>After insert trigger</a:Comment>
<a:TriggerName>tia_%.L:TABLE%</a:TriggerName>
</o:TriggerTemplate>
<o:TriggerTemplate Id="o274">
<a:ObjectID>252338DE-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>BeforeUpdateTrigger</a:Name>
<a:Code>BeforeUpdateTrigger</a:Code>
<a:Text>create trigger [%QUALIFIER%]%TRIGGER% no cascade before update
of .INCOLN(&quot;%COLUMN%&quot;, &quot;&quot;, &quot;,&quot;)
on [%TABLQUALIFIER%]%TABLE%
referencing new as new_upd old as old_upd for each row mode db2sql
when (
     .DeclUpdateChangeColumn
     .DeclUpdateChildParentExist
     .DeclUpdateTooManyChildren
     .DeclUpdateChildChangeParent
     .DeclUpdateParentRestrict
     (0=1)
     )
begin atomic
   signal sqlstate &#39;70002&#39; (&#39;Inexistant Parent or non updatable child. Cannot update [%TABLQUALIFIER%]%TABLE%&#39;);
end
</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>937215964</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Before update trigger</a:Comment>
<a:TriggerName>tub_%.L:TABLE%</a:TriggerName>
<c:TriggerTemplate.TriggerItems>
<o:TriggerItem Ref="o258"/>
<o:TriggerItem Ref="o259"/>
<o:TriggerItem Ref="o260"/>
<o:TriggerItem Ref="o261"/>
<o:TriggerItem Ref="o262"/>
</c:TriggerTemplate.TriggerItems>
</o:TriggerTemplate>
<o:TriggerTemplate Id="o275">
<a:ObjectID>252338DF-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>AfterUpdateTrigger</a:Name>
<a:Code>AfterUpdateTrigger</a:Code>
<a:Text>create trigger [%QUALIFIER%]%TRIGGER% after update
of .INCOLN(&quot;%COLUMN%&quot;, &quot;&quot;, &quot;,&quot;)
on [%TABLQUALIFIER%]%TABLE%
referencing new as new_upd old as old_upd for each row mode db2sql
when (
     .DeclUpdateParentCascade
     .DeclUpdateParentSetNull
     .DeclUpdateParentSetDefault
     (0=1)
     )

begin atomic
    .UpdateParentCascade
    .UpdateParentSetNull
    .UpdateParentSetDefault
end
</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:Comment>After update trigger</a:Comment>
<a:TriggerName>tua_%.L:TABLE%</a:TriggerName>
<c:TriggerTemplate.TriggerItems>
<o:TriggerItem Ref="o263"/>
<o:TriggerItem Ref="o264"/>
<o:TriggerItem Ref="o265"/>
</c:TriggerTemplate.TriggerItems>
</o:TriggerTemplate>
<o:TriggerTemplate Id="o276">
<a:ObjectID>252338E8-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>BeforeDeleteTrigger</a:Name>
<a:Code>BeforeDeleteTrigger</a:Code>
<a:Text>create trigger [%QUALIFIER%]%TRIGGER% no cascade before delete 
on [%TABLQUALIFIER%]%TABLE%
referencing old as old_del for each row mode db2sql
when (
      .DeclDeleteParentRestrict
     (0=1)
     )

begin atomic
    .DeleteParentRestrict
end
</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126621693</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Before delete trigger</a:Comment>
<a:TriggerName>tdb_%.L:TABLE%</a:TriggerName>
<c:TriggerTemplate.TriggerItems>
<o:TriggerItem Ref="o266"/>
</c:TriggerTemplate.TriggerItems>
</o:TriggerTemplate>
<o:TriggerTemplate Id="o277">
<a:ObjectID>252338E9-2A3D-11D3-A992-006097355E2B</a:ObjectID>
<a:Name>AfterDeleteTrigger</a:Name>
<a:Code>AfterDeleteTrigger</a:Code>
<a:Text>create trigger [%QUALIFIER%]%TRIGGER% after delete 
on [%TABLQUALIFIER%]%TABLE%
referencing old as old_del for each row mode db2sql

begin atomic
    .DeleteParentCascade
    .DeleteParentSetNull
    .DeleteParentSetDefault
end
</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>0</a:ModificationDate>
<a:Modifier/>
<a:Comment>After delete trigger</a:Comment>
<a:TriggerName>tda_%.L:TABLE%</a:TriggerName>
<c:TriggerTemplate.TriggerItems>
<o:TriggerItem Ref="o267"/>
<o:TriggerItem Ref="o268"/>
<o:TriggerItem Ref="o269"/>
</c:TriggerTemplate.TriggerItems>
</o:TriggerTemplate>
</c:TriggerTemplates>
</o:DBMS>

</DBMS>