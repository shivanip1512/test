<?xml version="1.0" encoding="UTF-8"?>
<?PowerDesigner AppLocale="UTF16" Code="AS/400" Family="AS/400" Name="AS/400 (Not Certified)" signature="XDB_XML" version="11.1.0.1408"?>
<!-- do not edit this file -->

<DBMS xmlns:a="attribute" xmlns:c="collection" xmlns:o="object">

<o:DBMS Id="o1">
<a:ObjectID>3E946AA2-1C0B-4F16-AD4D-C32ADD4E4C76</a:ObjectID>
<a:Name>AS/400 (Not Certified)</a:Name>
<a:Code>AS/400</a:Code>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1026305069</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Family>AS/400</a:Family>
<a:CheckGlobalScript>&#39;******************************************************************************
&#39;* Purpose:  This VB-Script holds global definitions shared by all the custom-
&#39;*            checks scripts of the model extension.
&#39;******************************************************************************

Option Explicit &#39; This is to ensure all used variables are defined

</a:CheckGlobalScript>
<c:Categories>
<o:TargetCategory Id="o2">
<a:Name>General</a:Name>
<a:Comment>Target DBMS identification</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o3">
<a:Name>SqlSupport</a:Name>
<a:Comment>SQL syntax allowed. This does not impact the script generation, but it impacts the SQL Preview</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o4">
<a:Name>EnableCheck</a:Name>
<a:Comment>Determines if the generation of check parameters is authorized or not</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o5">
<a:Name>UniqConstName</a:Name>
<a:Comment>Determines if unique constraint names for objects are authorized or not</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o6">
<a:Name>Enableconstname</a:Name>
<a:Comment>Determines if constraint names are used during the generation</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o7">
<a:Name>EnableMultiCheck</a:Name>
<a:Comment>Determines if the generation of multiple check parameters is authorized or not</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o8">
<a:Name>Script</a:Name>
<a:Comment>DBMS characteristics, command definition, and data type translations for the Script generation and reverse engineering</a:Comment>
<c:Categories>
<o:TargetCategory Id="o9">
<a:Name>Sql</a:Name>
<a:Comment>Contains sub-categories Syntax, Format, File and Keywords. Each sub-category contains entries whose values define general syntax for the database</a:Comment>
<c:Categories>
<o:TargetCategory Id="o10">
<a:Name>Syntax</a:Name>
<a:Comment>Contains general parameters for SQL syntax</a:Comment>
<c:Categories>
<o:CharacterTargetItem Id="o11">
<a:Name>Terminator</a:Name>
<a:Comment>End of command character</a:Comment>
<a:CharacterTargetItem.Value>;</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:StringTargetItem Id="o12">
<a:Name>BlockTerminator</a:Name>
<a:Comment>End of block character</a:Comment>
</o:StringTargetItem>
<o:CharacterTargetItem Id="o13">
<a:Name>Delimiter</a:Name>
<a:Comment>Field separation character. Example: col1, col2, col3</a:Comment>
<a:CharacterTargetItem.Value>,</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:CharacterTargetItem Id="o14">
<a:Name>Quote</a:Name>
<a:Comment>Character used to enclose string values</a:Comment>
<a:CharacterTargetItem.Value>&#39;</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:CharacterTargetItem Id="o15">
<a:Name>SqlContinue</a:Name>
<a:Comment>Continuation character</a:Comment>
</o:CharacterTargetItem>
<o:StringTargetItem Id="o16">
<a:Name>LineComment</a:Name>
<a:Comment>Characters used to enclose a single line comment</a:Comment>
</o:StringTargetItem>
<o:BooleanTargetItem Id="o17">
<a:Name>UseBlockTerm</a:Name>
<a:Comment>Use end of block character by default</a:Comment>
</o:BooleanTargetItem>
<o:StringTargetItem Id="o18">
<a:Name>BlockComment</a:Name>
<a:Comment>Characters used to enclose a multi-line comment</a:Comment>
<a:StringTargetItem.Value>/*   */</a:StringTargetItem.Value>
</o:StringTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o19">
<a:Name>Format</a:Name>
<a:Comment>Contains entries that define script formatting</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o20">
<a:Name>EnableDtbsPrefix</a:Name>
<a:Comment>Object codes can have a prefix made of the object database code</a:Comment>
</o:BooleanTargetItem>
<o:StringTargetItem Id="o21">
<a:Name>IllegalChar</a:Name>
<a:Comment>Invalid characters for names</a:Comment>
<a:StringTargetItem.Value>&quot; +-*/!=&lt;&gt;&#39;&quot;()&quot;.</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:BooleanTargetItem Id="o22">
<a:Name>UpperCaseOnly</a:Name>
<a:Comment>Uppercase only</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o23">
<a:Name>LowerCaseOnly</a:Name>
<a:Comment>Lowercase only</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o24">
<a:Name>EnableOwnerPrefix</a:Name>
<a:Comment>Object codes can have a prefix made of the object owner code</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o25">
<a:Name>AddQuote</a:Name>
<a:Comment>Determines if object codes are systematically quoted during the generation</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o26">
<a:Name>CaseSensitivityUsingQuote</a:Name>
<a:Comment>Determines if the case sensitivity for identifiers is managed using double quotes</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o27">
<a:Name>File</a:Name>
<a:Comment>Contains header, footer and usage text entries used during the generation</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o28">
<a:Name>Header</a:Name>
<a:Comment>Header text for a database generation script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o29">
<a:Name>Footer</a:Name>
<a:Comment>Footer text for a database generation script</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o30">
<a:Name>EnableMultiFile</a:Name>
<a:Comment>Multi-script allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:StringTargetItem Id="o31">
<a:Name>ScriptExt</a:Name>
<a:Comment>Main script extension in database generation</a:Comment>
<a:StringTargetItem.Value>sql</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o32">
<a:Name>TableExt</a:Name>
<a:Comment>Other scripts extension in database generation</a:Comment>
<a:StringTargetItem.Value>sql</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o33">
<a:Name>StartCommand</a:Name>
<a:Comment>Command for executing a script</a:Comment>
</o:StringTargetItem>
<o:TextTargetItem Id="o34">
<a:Name>Usage1</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%
  (2) Transfer the script file to your AS/400
  (3) Create the Physical File</a:TextTargetItem.Value>
<a:Comment>Usage for a single script in database generation</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o35">
<a:Name>Usage2</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%\%AS400_LIBNAME%
  (2) Transfer the script file %AS400_CRTORG% to your AS/400.
  (3) Compile the %AS400_CRTORG% source file member using CLP as type member.
  (4) Execute the %AS400_CRTORG% program in order to create the library: %AS400_LIBNAME%
      with its two %AS400_QDDSSRC%, %AS400_QCLSRC% PF-SRC on your AS400.
  (5) Transfert the CL script file %NAMESCRIPT% from 
      %PATHSCRIPT%\%AS400_LIBNAME%\%AS400_QCLSRC% directory
      to your %AS400_LIBNAME%/%AS400_QCLSRC% AS400 PF-SRC.
  (6) Transfer the DDS scripts files *.* from 
      %PATHSCRIPT%\%AS400_LIBNAME%\%AS400_QDDSSRC% directory to your
      %AS400_LIBNAME%/%AS400_QDDSSRC% AS400 PF-SRC.
      Note: the %AS400_LIBNAME%\%AS400_QDDSSRC% includes the %AS400_REFDIC% in case of
      domain generation.
  (7) Compile and run the CL script %NAMESCRIPT% from your AS400 using CLP as type member.</a:TextTargetItem.Value>
<a:Comment>Usage for multiple scripts in database generation</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o36">
<a:Name>Keywords</a:Name>
<a:Comment>Contains the list of reserved words and functions available in SQL</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o37">
<a:Name>ListOperators</a:Name>
<a:TextTargetItem.Value>=
&lt;&gt;
&gt;
&lt;
&gt;=
&lt;=
*=
=*
in
not in
between
not between
join</a:TextTargetItem.Value>
<a:Comment>List of operators for comparing values, boolean, and various semantic operators</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o38">
<a:Name>ReservedWord</a:Name>
<a:TextTargetItem.Value>ADD
ALL
ALTER
AND
ANY
AS
ASC
BETWEEN
BY
CHAR
CHECK
CONNECT
CREATE
CURRENT
DATE
DECIMAL
DEFAULT
DELETE
DESC
DISTINCT
DROP
ELSE
FLOAT
FOR
FROM
GRANT
GROUP
HAVING
IMMEDIATE
IN
INSERT
INTEGER
INTERSECT
INTO
IS
LEVEL
LIKE
NOT
NULL
OF
ON
OPTION
OR
ORDER
PRIOR
PRIVILEGES
PUBLIC
REVOKE
ROWS
SELECT
SESSION
SET
SIZE
SMALLINT
TABLE
THEN
TO
UNION
UNIQUE
UPDATE
USER
VALUES
VARCHAR
VIEW
WHENEVER
WITH</a:TextTargetItem.Value>
<a:Comment>Reserved words</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o39">
<a:Name>ReservedDefault</a:Name>
<a:TextTargetItem.Value>NULL
CURRENT_DATE
CURRENT_TIME
CURRENT_TIMESTAMP
</a:TextTargetItem.Value>
<a:Comment>Reserved default values</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o40">
<a:Name>GroupFunc</a:Name>
<a:TextTargetItem.Value>avg()
count()
list()
max()
min()
sum()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions to use with group keywords.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o41">
<a:Name>NumberFunc</a:Name>
<a:TextTargetItem.Value>abs()
acos()
asin()
atan()
atan2()
ceiling()
cos()
cot()
degrees()
exp()
floor()
log()
log10()
mod()
pi(*)
power()
radians()
rand()
remainder()
round()
sign()
sin()
sqrt()
tan()
&quot;truncate&quot;()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions used on numbers</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o42">
<a:Name>CharFunc</a:Name>
<a:TextTargetItem.Value>ascii()
byte_length()
byte_substr()
char()
charindex()
difference()
insertstr()
lcase()
left()
length()
locate()
ltrim()
patindex()
repeat()
right()
rtrim()
similar()
soundex()
space()
string()
substr()
textptr()
trim()
ucase()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions for characters and strings</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o43">
<a:Name>DateFunc</a:Name>
<a:TextTargetItem.Value>current date
current time
current timestamp
date()
dateadd()
datediff()
dateformat()
datename()
datepart()
datetime()
day()
dayname()
days()
dow()
getdate()
hour()
hours()
minute()
minutes()
month()
monthname()
months()
now(*)
quarter()
second()
seconds()
today(*)
weeks()
year()
years()
ymd()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions for dates</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o44">
<a:Name>ConvertFunc</a:Name>
<a:TextTargetItem.Value>cast()
convert()
hextoint()
inttohex()
string()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions used to convert values between hex and integer and handling strings</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o45">
<a:Name>OtherFunc</a:Name>
<a:TextTargetItem.Value>argn()
coalesce()
connection_property()
datalength()
db_id()
db_name()
db_property()
estimate()
estimate_source()
experience_estimate()
ifnull()
index_estimate()
isnull()
next_connection()
next_database()
number(*)
plan()
property()
property_name()
property_number()
property_description()
sqlcode
sqlstate
traceback(*)
user</a:TextTargetItem.Value>
<a:Comment>List of other SQL functions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o46">
<a:Name>Commit</a:Name>
<a:TextTargetItem.Value>commit</a:TextTargetItem.Value>
<a:Comment>Command for validating the transaction by OBDC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o47">
<a:Name>Objects</a:Name>
<a:Comment>Contains sub-categories for each type of object in the database, for example: Table, or Reference. Each sub-category contains entries whose values define database commands and object-related characteristics</a:Comment>
<c:Categories>
<o:TargetCategory Id="o48">
<a:Name>Table</a:Name>
<a:Code>TABL</a:Code>
<a:Comment>The following system variables are available:
   &quot;TABLE&quot;        // generated code of the table
   &quot;TNAME&quot;        // name of the table
   &quot;TCODE&quot;        // code of the table
   &quot;TLABL&quot;        // comment of the table
   &quot;PKEYCOLUMNS&quot;  // list of primary key columns. Eg: A, B
   &quot;TABLDEFN&quot;     // complete body of the table definition. Contains definition of columns, checks and keys
</a:Comment>
<c:Categories>
<o:IntegerTargetItem Id="o49">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>10</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o50">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create table [%QUALIFIER%]%TABLE% (
   %TABLDEFN%
)</a:TextTargetItem.Value>
<a:Comment>Command for creating a table. Example: create table %TABLE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o51">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value>in %s : category=storage
partitioning key : composite=yes, parenthesis=yes, separator=yes
{
   &lt;column&gt; %s : multiple=yes
}
using hashing</a:TextTargetItem.Value>
<a:Comment>Available options for creating a table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o52">
<a:Name>TableComment</a:Name>
<a:TextTargetItem.Value>comment on table %TABLE% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>Command for adding a table comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o53">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop table [%QUALIFIER%]%TABLE%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a table. Example: drop table %TABLE%</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o54">
<a:Name>Enable</a:Name>
<a:Comment>Table allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o55">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>CKT_%.U26:TABLE%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for check of table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o56">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for table options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o57">
<a:Name>Rename</a:Name>
<a:TextTargetItem.Value>alter table [%OLDQUALIFIER%]%OLDTABL% rename %NEWTABL%</a:TextTargetItem.Value>
<a:Comment>Command for renaming a table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o58">
<a:Name>AlterTableHeader</a:Name>
<a:Comment>Alter table header</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o59">
<a:Name>AlterTableFooter</a:Name>
<a:Comment>Alter table footer</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o60">
<a:Name>DefineTableCheck</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME% ]check (%.A:CONSTRAINT%)</a:TextTargetItem.Value>
<a:Comment>Allows to customize the script of table check constraints</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o61">
<a:Name>AddTableCheck</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   add check (%.A:CONSTRAINT%)</a:TextTargetItem.Value>
<a:Comment>Allows to customize the script for modifying table constraints within an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o62">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TNAME, TABLE, COMMENT}

select
   table_owner,
   table_name,
   system_table_name,
   long_comment
from
   qsys2.systables
where 
   table_type=&#39;T&#39;
[  and table_owner=%.q:SCHEMA%]
[  and system_table_schema=%.q:CATALOG%]
order by 1, 2</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o63">
<a:Name>DropTableCheck</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   delete check</a:TextTargetItem.Value>
<a:Comment>Command for dropping a table check in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o64">
<a:Name>SqlChckQuery</a:Name>
<a:TextTargetItem.Value>{TABLE, CONSTNAME, CONSTRAINT}

select
   c.system_table_name,
   c.constraint_name,
   k.check_clause
from
   qsys2.syscst c,
   qsys2.syschkcst k
where
   c.constraint_type = &#39;CHECK&#39;
   and k.constraint_schema = c.table_schema
   and k.constraint_name = c.constraint_name
[  and c.system_table_name=%.q:TABLE%]
[  and c.system_table_schema=%.q:CATALOG%]
order by c.system_table_name, c.constraint_name
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object check constraints</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o65">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a table.
The first column is the SQL name of permission (eg: SELECT)
The second column is a shortname to display in a grid</a:Comment>
<a:MapTargetItem.Value>ALTER=Alter
DELETE=Delete
INDEX=Index
INSERT=Insert
REFERENCES=References
SELECT=Select
UPDATE=Update</a:MapTargetItem.Value>
<a:List>ALTER
DELETE
INDEX
INSERT
REFERENCES
SELECT
UPDATE
</a:List>
</o:MapTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o66">
<a:Name>Index</a:Name>
<a:Code>INDX</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for indexes)
   &quot;INDEX&quot;        // generated code of the index
   &quot;INDEXNAME&quot;    // index name
   &quot;INDEXCODE&quot;    // index code
   &quot;UNIQUE&quot;       // keyword &quot;unique&quot; when the index is unique
   &quot;INDEXTYPE&quot;    // index type (available only for a few DBMS)
   &quot;INDEXKEY&quot;     // keywords &quot;primary&quot;, &quot;unique&quot; or &quot;foreign&quot; depending on the index origin
   &quot;CIDXLIST&quot;     // list of index columns. Eg: A asc, B desc, C asc
   &quot;CLUSTER&quot;      // keyword &quot;cluster&quot; when the index is cluster
For index columns, the following system variables are available:
   &quot;ASC&quot;          // keywords &quot;ASC&quot; or &quot;DESC&quot; depending on sort order
   &quot;ISASC&quot;        // TRUE if the index column sort is ascending
</a:Comment>
<c:Categories>
<o:IntegerTargetItem Id="o67">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>18</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:IntegerTargetItem Id="o68">
<a:Name>MaxColIndex</a:Name>
<a:Comment>Maximum number of columns in an index</a:Comment>
<a:IntegerTargetItem.Value>16</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:BooleanTargetItem Id="o69">
<a:Name>Enable</a:Name>
<a:Comment>Index allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o70">
<a:Name>EnableAscDesc</a:Name>
<a:Comment>ASC, DESC keywords allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o71">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create [%UNIQUE% ]index [%QUALIFIER%]%INDEX% on [%TABLQUALIFIER%]%TABLE%
(
%CIDXLIST%
)</a:TextTargetItem.Value>
<a:Comment>Command for creating an index. Example: create index %INDEX%</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o72">
<a:Name>EnableOwner</a:Name>
<a:Comment>Owner allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o73">
<a:Name>IndexComment</a:Name>
<a:TextTargetItem.Value>comment on index %INDEX% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding an index comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o74">
<a:Name>AddColIndex</a:Name>
<a:TextTargetItem.Value>   %20:COLUMN% %ASC%</a:TextTargetItem.Value>
<a:Comment>Command for defining an index column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o75">
<a:Name>Options</a:Name>
<a:Comment>Default options for creating an index</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o76">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop index [%QUALIFIER%]%INDEX%</a:TextTargetItem.Value>
<a:Comment>Command for dropping an index. Example: drop index %INDEX%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o77">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{TABLOWNER ID, TABLE ID, OWNER ID, INDEX ID, CIDXLIST ...}

select 
   i.table_owner,
   i.system_table_name,
   i.index_owner,
   i.system_index_name,
   k.system_column_name concat &#39; ASC,&#39;,
   k.ordinal_position
from
   qsys2.sysindexes i,
   qsys2.syskeys k
where
   k.ordering = &#39;A&#39;
   and k.system_index_name=i.system_index_name
   and k.system_index_schema=i.system_index_schema
[  and i.system_table_name=%.q:TABLE%]
[  and i.table_owner=%.q:TABLOWNER%]
[  and i.system_table_schema=%.q:CATALOG%]
union select 
   i.table_owner,
   i.system_table_name,
   i.index_owner,
   i.system_index_name,
   k.system_column_name concat &#39; DESC,&#39;,
   k.ordinal_position
from
   qsys2.sysindexes i,
   qsys2.syskeys k
where
   k.ordering = &#39;D&#39;
   and k.system_index_name=i.system_index_name
   and k.system_index_schema=i.system_index_schema
[  and i.system_table_name=%.q:TABLE%]
[  and i.table_owner=%.q:TABLOWNER%]
[  and i.system_table_schema=%.q:CATALOG%]
order by
   1, 2, 3, 5
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o78">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{TABLOWNER, TABLE, OWNER, @OBJTNAME, INDEX, UNIQUE, COMMENT}

select 
   i.table_owner,
   i.system_table_name,
   i.index_owner,
   i.index_name,
   i.system_index_name,
   case(i.is_unique) when &#39;D&#39; then &#39;&#39; else &#39;unique&#39; end,
   i.long_comment
from
   qsys2.sysindexes i
where
   i.system_table_name=%.q:TABLE%
[  and i.index_owner=%.q:OWNER%]
[  and i.system_table_schema=%.q:CATALOG%]
order by
   1, 2, 3, 5
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o79">
<a:Name>Column</a:Name>
<a:Code>COLN</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for columns)
   &quot;COLUMN&quot;       // generated code of the column
   &quot;COLNNO&quot;       // position of the column in the list of columns of the table
   &quot;COLNNAME&quot;     // name of the column
   &quot;COLNCODE&quot;     // code of the column
   &quot;PRIMARY&quot;      // keyword &quot;primary&quot; if the column is primary
   &quot;ISPKEY&quot;       // TRUE if the column is part of the primary key
   &quot;FOREIGN&quot;      // TRUE if the column is part of one foreign key
</a:Comment>
<c:Categories>
<o:IntegerTargetItem Id="o80">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>10</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:BooleanTargetItem Id="o81">
<a:Name>EnableDefault</a:Name>
<a:Comment>Default values allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o82">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[%NAMEISCODE%=No?%.Q:COLNNAME% for column ]%COLUMN% %DATATYPE%[ %NOTNULL%][%WITHDEFAULT%? with default[ %DEFAULT%]:[ default %DEFAULT%]]
[   [constraint %CONSTNAME% ]check %CONSTRAINT%]
</a:TextTargetItem.Value>
<a:Comment>Command for defining a table column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o83">
<a:Name>ColumnComment</a:Name>
<a:TextTargetItem.Value>comment on [%R%?column ][.O:[%TABLE% (%COLUMN% is
%.q:COMMENT%)][%TABLE%.%COLUMN% is
%.q:COMMENT%]]

</a:TextTargetItem.Value>
<a:Comment>Command for adding a column comment</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o84">
<a:Name>Enable</a:Name>
<a:Comment>Column allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o85">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>CKC_%.U17:COLUMN%_%.U8:TABLE%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for a column check parameter</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o86">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   add column %.Q:COLNNAME%[%NAMEISCODE%=No? for column %COLUMN%] %DATATYPE%[ %NOTNULL%][%WITHDEFAULT%? %WITHDEFAULT% %DEFAULT%:[ default %DEFAULT%]]
[      [constraint %CONSTNAME% ]check %CONSTRAINT%]</a:TextTargetItem.Value>
<a:Comment>Command for adding a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o87">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   drop column %COLUMN%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o88">
<a:Name>Rename</a:Name>
<a:Comment>Command for renaming a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o89">
<a:Name>ModifyColumn</a:Name>
<a:Comment>Command for modifying a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o90">
<a:Name>ModifyColnDflt</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   alter column %COLUMN%
      set data type %DATATYPE% 
      with default %DEFAULT%
</a:TextTargetItem.Value>
<a:Comment>Command for modifying a column default in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o91">
<a:Name>ModifyColnChck</a:Name>
<a:Comment>Command for modifying a column check in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o92">
<a:Name>DropColnChck</a:Name>
<a:Comment>Command for dropping a column check in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o93">
<a:Name>AltEnableAddColnChk</a:Name>
<a:Comment>Column check constraint allowed in an alter table statement</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o94">
<a:Name>EnableBindRule</a:Name>
<a:Comment>Allows the binding of business rule to a column for check parameters</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o95">
<a:Name>EnableNotNullWithDflt</a:Name>
<a:Comment>Enables not null with default</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o96">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TABLE, COLNNAME, COLUMN, COLNNO, DTTPCODE, LENGTH, PREC, NOTNULL, DEFAULT, COMMENT}

select
   table_owner,
   system_table_name,
   column_name,
   system_column_name,
   ordinal_position,
   data_type,
   length,
   numeric_scale,
   case(is_nullable) when &#39;N&#39; then &#39;NOT NULL&#39; else &#39;&#39; end,
   column_default,
   long_comment
from
   qsys2.syscolumns
where
  system_table_name=%.q:TABLE%
[  and table_owner=%.q:OWNER%]
[  and system_table_schema=%.q:CATALOG%]
order by
   1, 2, 5
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o97">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a column.
The first column is the SQL name of permission (eg: SELECT)
The second column is a shortname to display in a grid</a:Comment>
<a:MapTargetItem.Value>REFERENCES=References
UPDATE=Update</a:MapTargetItem.Value>
<a:List>REFERENCES
UPDATE
</a:List>
</o:MapTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o98">
<a:Name>PKey</a:Name>
<a:Code>PKEY</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for keys)
   &quot;PKEYCOLUMNS&quot;  // list of primary key columns. Eg: A, B
   &quot;ISPKEY&quot;       // TRUE when the key is the primary key of the table
   &quot;KEY&quot;          // constraint name
   &quot;PKEY&quot;         // constraint name for primary key
   &quot;AKEY&quot;         // constraint name for alternate key
   &quot;ISMULTICOLN&quot;  // TRUE if key has more than one column
   &quot;CLUSTER&quot;      // keyword cluster</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o99">
<a:Name>Enable</a:Name>
<a:Comment>Primary key allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o100">
<a:Name>PkAutoIndex</a:Name>
<a:Comment>Primary key is auto-indexed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o101">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME% ]primary key (%PKEYCOLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for defining a primary key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o102">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>PK_%.U27:TABLE%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for primary keys</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o103">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   add[ constraint %CONSTNAME%] primary key (%COLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for adding a primary key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o104">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a primary key</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o105">
<a:Name>Reference</a:Name>
<a:Code>REFR</a:Code>
<a:Comment>The following system variables are available:
   &quot;REFR&quot;         // generated code of the reference
   &quot;REFNAME&quot;      // reference name
   &quot;PARENT&quot;       // generated code of the parent table
   &quot;PNAME&quot;        // name of the parent table
   &quot;PCODE&quot;        // code of the parent table
   &quot;CHILD&quot;        // generated code of the reference
   &quot;CNAME&quot;        // name of the child table
   &quot;CCODE&quot;        // code of the child table
   &quot;PQUALIFIER&quot;   // qualifier of the parent table. See QUALIFIER
   &quot;CQUALIFIER&quot;   // qualifier of the child table. See QUALIFIER
   &quot;REFRNAME&quot;     // Reference name
   &quot;REFRCODE&quot;     // Reference code
   &quot;FKCONSTRAINT&quot; // Reference constraint name (foreign key)
   &quot;PKCONSTRAINT&quot; // constraint name of the parent key used to reference object
   &quot;CKEYCOLUMNS&quot;  // list of parent key columns. Eg: C1, C2, C3
   &quot;FKEYCOLUMNS&quot;  // list of child foreign key columns. Eg:
   &quot;UPDCONST&quot;     // Update declarative constraint. Keywords &quot;restrict&quot;, &quot;cascade&quot;, &quot;set null&quot; or &quot;set default&quot;
   &quot;DELCONST&quot;     // Delete declarative constraint. Keywords &quot;restrict&quot;, &quot;cascade&quot;, &quot;set null&quot; or &quot;set default&quot;
   &quot;MINCARD&quot;      // Min cardinality
   &quot;MAXCARD&quot;      // Max cardinality
   &quot;POWNER&quot;       // Parent table owner
   &quot;COWNER&quot;       // child table owner
   &quot;CHCKONCMMT&quot;   // TRUE when check on commit is selected on the reference (ASA 6.0 specific)

For reference joins (couple of column in a reference),
the following system variables are available:
   &quot;CKEYCOLUMN&quot;   // generated code of the parent table column (primary key)
   &quot;FKEYCOLUMN&quot;   // generated code of the child table column (foreign key)
   &quot;PK&quot;           // primary key column generated code
   &quot;PKNAME&quot;       // primary key column name
   &quot;FK&quot;           // foreign key column generated code
   &quot;FKNAME&quot;       // foreign key column name
   &quot;AK&quot;           // alternate key column code (same as PK)
   &quot;AKNAME&quot;       // alternate key column name (same as PKNAME)
   &quot;COLTYPE&quot;      // primary column column datatype
   &quot;DEFAULT&quot;      // foreign key column default value
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o106">
<a:Name>FKAutoIndex</a:Name>
<a:Comment>Foreign key is auto-indexed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o107">
<a:Name>CheckOnCommit</a:Name>
<a:Comment>Referential integrity test differed after the COMMIT</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o108">
<a:Name>DclUpdIntegrity</a:Name>
<a:TextTargetItem.Value>RESTRICT</a:TextTargetItem.Value>
<a:Comment>Declarative referential integrity constraint allowed for update</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o109">
<a:Name>DclDelIntegrity</a:Name>
<a:TextTargetItem.Value>RESTRICT
CASCADE
SET NULL
SET DEFAULT</a:TextTargetItem.Value>
<a:Comment>Declarative referential integrity constraint allowed for delete</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o110">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME% ]foreign key (%FKEYCOLUMNS%)
      references %PARENT% [(%CKEYCOLUMNS%)]
      [on update %UPDCONST%]
      [on delete %DELCONST%]
</a:TextTargetItem.Value>
<a:Comment>Command for defining a foreign key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o111">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>FK_%.U8:CHILD%_%.U9:REFR%_%.U8:PARENT%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for foreign keys</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o112">
<a:Name>Enable</a:Name>
<a:Comment>Foreign key allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o113">
<a:Name>EnablefKeyName</a:Name>
<a:Comment>Foreign key role allowed in database generation</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o114">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   [add ][.O:[[constraint %CONSTNAME%] foreign key (%FKEYCOLUMNS%)][foreign key[ %CONSTNAME%] (%FKEYCOLUMNS%)]]
      references %PARENT% [(%CKEYCOLUMNS%)]
      [on update %UPDCONST%]
      [on delete %DELCONST%]
</a:TextTargetItem.Value>
<a:Comment>Command for adding a foreign key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o115">
<a:Name>SqlListChildrenQuery</a:Name>
<a:TextTargetItem.Value>{CKEYCOLUMN, FKEYCOLUMN}

select
   pk.system_column_name,
   fk.system_column_name
from
   qsys2.syskeycst fk,
   qsys2.syskeycst pk,
   qsys2.sysrefcst r
where
   pk.constraint_schema=r.unique_constraint_schema
   and pk.constraint_name=r.unique_constraint_name
   and fk.constraint_schema=r.constraint_schema
   and fk.constraint_name=r.constraint_name
   and pk.ordinal_position=fk.ordinal_position
[  and fk.system_table_name=%.q:CHILD%]
[  and fk.constraint_name=%.q:FKCONSTRAINT%]
[  and pk.system_table_name=%.q:PARENT%]
[  and pk.constraint_name=%.q:PKCONSTRAINT%]
[  and fk.system_table_schema=%.q:CATALOG%]

</a:TextTargetItem.Value>
<a:Comment>SQL query to list reference joins</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o116">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{COWNER, CHILD, FKCONSTRAINT, POWNER, PARENT, PKCONSTRAINT, DELCONST, UPDCONST}

select
   t1.table_owner,
   t1.system_table_name,
   c1.constraint_name,
   t2.table_owner,
   t2.system_table_name,
   c2.constraint_name,
   rc.delete_rule,
   rc.update_rule
from
   qsys2.sysrefcst rc,
   qsys2.systables t1,
   qsys2.systables t2,
   qsys2.syscst c1,
   qsys2.syscst c2
where
   c1.constraint_type=&#39;FOREIGN KEY&#39;
   and c1.constraint_name=rc.constraint_name
   and c1.constraint_schema=rc.constraint_schema
   and c1.system_table_name=t1.system_table_name
   and c1.system_table_schema=t1.system_table_schema
   and c2.constraint_name=rc.unique_constraint_name
   and c2.constraint_schema=rc.unique_constraint_schema
   and c2.system_table_name=t2.system_table_name
   and c2.system_table_schema=t2.system_table_schema
[  and c1.system_table_name=%.q:TABLE%]
[  and t1.system_table_schema=%.q:CATALOG%]
[  and c1.system_table_schema=%.q:CATALOG%]


</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o117">
<a:Name>Domain</a:Name>
<a:Code>PDMDOMN</a:Code>
<a:Comment>The following system variables are available:
   &quot;DOMAIN&quot;       // generated code of the domain (also available for columns)
SQL Server specific domain system variables:
   &quot;RULENAME&quot;     // name of the rule object associated with the domain
   &quot;DEFAULTNAME&quot;  // name of the default object associated with the domain
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o118">
<a:Name>Enable</a:Name>
<a:Comment>User defined data types allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o119">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a user defined data type</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o120">
<a:Name>Database</a:Name>
<a:Code>DTBS</a:Code>
<a:Comment>The following system variables are available:
   &quot;DATABASE&quot;     // generated code of the database
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o121">
<a:Name>BeforeCreateDatabase</a:Name>
<a:Comment>Creates tablespaces and storages before database</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o122">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create database &#39;%DATABASE%.db&#39;
[%OPTIONS%]</a:TextTargetItem.Value>
<a:Comment>Command for creating a database. Example: create database %DATABASE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o123">
<a:Name>Options</a:Name>
<a:Comment>Available options for creating a database</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o124">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for database options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o125">
<a:Name>OpenDatabase</a:Name>
<a:Comment>Command for opening a database. Example: open database %DATABASE%</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o126">
<a:Name>Enable</a:Name>
<a:Comment>Database allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o127">
<a:Name>CloseDatabase</a:Name>
<a:Comment>Command for closing a database. Example: close database</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o128">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a database. Example: drop database %DATABASE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o129">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o130">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{@OBJTCODE}

select distinct system_table_schema from qsys2.systables</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o131">
<a:Name>Key</a:Name>
<a:Code>KEY</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for keys)
   &quot;COLUMNS&quot;      // List of columns of the key. Eg: &quot;A, B, C&quot;
   &quot;ISPKEY&quot;       // TRUE when the key is the primary key of the table
   &quot;KEY&quot;          // constraint name
   &quot;PKEY&quot;         // constraint name for primary key
   &quot;AKEY&quot;         // constraint name for alternate key
   &quot;ISMULTICOLN&quot;  // TRUE if key has more than one column
   &quot;CLUSTER&quot;      // keyword cluster
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o132">
<a:Name>Enable</a:Name>
<a:Comment>UNIQUE constraint allowed for tables</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o133">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>AK_%.U18:AKEY%_%.U8:TABLE%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for alternate keys</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o134">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   add[ constraint %CONSTNAME%] unique (%COLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for adding an alternate key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o135">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{TABLE ID, CONSTNAME ID, COLUMNS ...}

select
   cd.system_table_name,
   cd.constraint_name,
   cc.system_column_name || &#39;,&#39;
from 
   qsys2.syscst cs, 
   qsys2.syscstdep cd,
   qsys2.syscstcol cc
where 
   cs.constraint_type in (&#39;PRIMARY KEY&#39;, &#39;UNIQUE&#39;)
   and cs.constraint_name=cd.constraint_name
   and cs.constraint_schema=cd.constraint_schema
   and cc.constraint_name=cd.constraint_name
   and cc.constraint_schema=cd.constraint_schema
[  and cd.system_table_name=%.q:TABLE%]
[  and cd.system_table_schema=%.q:CATALOG%]
[  and cc.system_table_schema=%.q:CATALOG%]
[  and cs.system_table_schema=%.q:CATALOG%]


</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o136">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{TABLE, CONSTNAME, ISPKEY, UNIQUE}

select
   cd.system_table_name,
   cd.constraint_name,
   case (cs.constraint_type) when &#39;PRIMARY KEY&#39; then 1 else null end,
   case (cs.constraint_type) when &#39;UNIQUE&#39; then 1 else null end
from 
   qsys2.syscst cs, 
   qsys2.syscstdep cd
where 
   cs.constraint_type in (&#39;PRIMARY KEY&#39;, &#39;UNIQUE&#39;)
   and cs.constraint_name=cd.constraint_name
   and cs.constraint_schema=cd.constraint_schema
[  and cd.system_table_name=%.q:TABLE%]
[  and cd.system_table_schema=%.q:CATALOG%]
[  and cs.system_table_schema=%.q:CATALOG%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o137">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME% ]unique (%PKEYCOLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for defining an alternate key</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o138">
<a:Name>View</a:Name>
<a:Code>VIEW</a:Code>
<a:Comment>The following system variables are available:
   &quot;VIEW&quot;         // generated code of the view
   &quot;VIEWNAME&quot;     // view name
   &quot;VIEWCODE&quot;     // view code
   &quot;VIEWCOLN&quot;     // List of columns of the view. Eg: &quot;A, B, C&quot;
   &quot;SQL&quot;          // SQL text of the view. Eg: Select * from T1
   &quot;VIEWCHECK&quot;    // Keyword &quot;with check option&quot; if selected on the view
   &quot;SCRIPT&quot;       // complete view creation order. Eg: create view V1 as select * from T1
</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o139">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create view [%QUALIFIER%]%VIEW% [(%VIEWCOLN%)] as
%SQL%
[%VIEWCHECK%]</a:TextTargetItem.Value>
<a:Comment>Command for creating a view. Example: create view %VIEW%</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o140">
<a:Name>Enable</a:Name>
<a:Comment>View allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o141">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop view [%QUALIFIER%]%VIEW%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a view. Example: drop view %VIEW%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o142">
<a:Name>ReversedQueries</a:Name>
<a:TextTargetItem.Value>SqlColnListQuery</a:TextTargetItem.Value>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o143">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{OWNER ID, VIEW ID, SCRIPT ...}

select
   view_owner,
   system_view_name,
   view_definition,
   seqno
from
   qsys2.sysviews
where
   1=1
[  and system_view_name=%.q:VIEW%]
[  and view_owner=%.q:OWNER%]
[  and system_view_schema=%.q:CATALOG%]
order by 1, 2, 4</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o144">
<a:Name>SqlColnListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER ID, VIEW ID, VIEWCOLN ...}

select distinct
   v.view_owner,
   v.system_view_name,
   c.column_name concat &#39;,&#39;,
   c.ordinal_position
from
   qsys2.sysviews v,
   qsys2.syscolumns c
where
   c.system_table_schema=v.system_view_schema
   and c.system_table_name=v.system_view_name
[  and v.view_owner=%.q:OWNER%]
[  and v.system_view_schema=%.q:CATALOG%]
order by 1, 2, 4</a:TextTargetItem.Value>
<a:Comment>SQL query to list view columns</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TextTargetItem>
<o:TextTargetItem Id="o145">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, VIEW, @OBJTNAME}

select distinct
   v.view_owner,
   v.system_view_name,
   v.table_name
from
   qsys2.sysviews v
where 1=1
[  and v.view_owner=%.q:SCHEMA%]
[  and v.system_view_schema=%.q:CATALOG%]
[  and v.system_view_name=%.q:VIEW%]
order by 1, 2</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o146">
<a:Name>ViewComment</a:Name>
<a:TextTargetItem.Value>comment on table %TABLE% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>Command for adding a view comment.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o147">
<a:Name>ViewCheck</a:Name>
<a:TextTargetItem.Value>with check option
</a:TextTargetItem.Value>
<a:Comment>Option for checking a view</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o148">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a view.
The first column is the SQL name of permission (eg: SELECT)
The second column is a shortname to display in a grid</a:Comment>
<a:MapTargetItem.Value>ALTER=Alter
DELETE=Delete
INDEX=Index
INSERT=Insert
SELECT=Select
UPDATE=Update</a:MapTargetItem.Value>
<a:List>ALTER
DELETE
INDEX
INSERT
SELECT
UPDATE
</a:List>
</o:MapTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o149">
<a:Name>User</a:Name>
<a:Code>USER</a:Code>
<a:Comment>The following system variables are available:
   &quot;USER&quot;         // generated code of the user
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o150">
<a:Name>Enable</a:Name>
<a:Comment>User allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o151">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>128</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o152">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{USER}

select distinct table_owner from qsys2.systables
where 1=1 
[ and system_table_schema=%.q:CATALOG%]
[ and UPPER(table_owner) = %.qU:SCHEMA%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:BooleanTargetItem Id="o153">
<a:Name>EnableOption</a:Name>
<a:Comment>Physical options allowed  YES/NO</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o154">
<a:Name>MaxConstLen</a:Name>
<a:Comment>Maximum constraint name length</a:Comment>
<a:IntegerTargetItem.Value>254</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TargetCategory Id="o155">
<a:Name>Permission</a:Name>
<a:Code>PERM</a:Code>
<a:Comment>Manages the permissions on database objects</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o156">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>grant %PERMLIST% on [%QUALIFIER%]%OBJECT% to %GRANTEE% [%GRANTOPTION%]
</a:TextTargetItem.Value>
<a:Comment>Command for granting permissions.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o157">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>revoke %REVPERMLIST% on [%QUALIFIER%]%OBJECT% from %GRANTEE%</a:TextTargetItem.Value>
<a:Comment>Command for revoking permissions.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o158">
<a:Name>GrantOption</a:Name>
<a:TextTargetItem.Value>with grant option</a:TextTargetItem.Value>
<a:Comment>Option for the grant statement.</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o159">
<a:Name>DataType</a:Name>
<a:Comment>Contains data type translation entries. These entries list the correspondence between internal data types and the target database data types</a:Comment>
<c:Categories>
<o:MapTargetItem Id="o160">
<a:Name>AmcdDataType</a:Name>
<a:Comment>Data types translation table from internal data types to target database data types.
        %n is the length of the data type
        %s is the size of the data type
        %p is the precision of the data type</a:Comment>
<a:MapTargetItem.Value>&lt;UNDEF&gt;=&lt;Undefined&gt;
A%n=CHAR(%n)
VA%n=VARCHAR(%n)
LA=CHAR(1)
LA%n=CHAR(%n)
LVA=VARCHAR(1)
LVA%n=VARCHAR(%n)
BT=SMALLINT
BT%n=SMALLINT
SI=SMALLINT
I=INTEGER
LI=INTEGER
N=NUMERIC
N%n=NUMERIC(%n)
N%s,%p=NUMERIC(%s,%p)
DC=DECIMAL
DC%n=DECIMAL(%n)
DC%s,%p=DECIMAL(%s,%p)
SF=FLOAT
F=FLOAT
F%n=FLOAT(%n)
LF=FLOAT
MN=DECIMAL(8,2)
MN%n=DECIMAL(%n,2)
MN%s,%p=DECIMAL(%s,%p)
D=DATE
T=TIME
DT=DATE
TS=TIMESTAMP
BL=SMALLINT
NO=DECIMAL(6)
NO%n=DECIMAL(%n)
BIN%n=GRAPHIC(%n)
LBIN=GRAPHIC(4096)
LBIN%n=GRAPHIC(%n)
TXT=CHAR(4096)
TXT%n=CHAR(%n)
MBT=CHAR(1)
MBT%n=CHAR(%n)
VMBT=VARCHAR(1)
VMBT%n=VARCHAR(%n)
PIC=VARGRAPHIC
PIC%n=VARGRAPHIC(%n)
BMP=GRAPHIC
BMP%n=GRAPHIC(%n)
OLE=GRAPHIC
OLE%n=GRAPHIC(%n)
*=CHAR(10)</a:MapTargetItem.Value>
<a:List>&lt;UNDEF&gt;
A%n
VA%n
LA
LA%n
LVA
LVA%n
BT
BT%n
SI
I
LI
N
N%n
N%s,%p
DC
DC%n
DC%s,%p
SF
F
F%n
LF
MN
MN%n
MN%s,%p
D
T
DT
TS
BL
NO
NO%n
BIN%n
LBIN
LBIN%n
TXT
TXT%n
MBT
MBT%n
VMBT
VMBT%n
PIC
PIC%n
BMP
BMP%n
OLE
OLE%n
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o161">
<a:Name>PhysDataType</a:Name>
<a:Comment>Data types translation table from target database data types to internal data types.</a:Comment>
<a:MapTargetItem.Value>&lt;Undefined&gt;=&lt;UNDEF&gt;
TIMESTAMP=TS
TIME=T
DATE=D
VARGRAPHIC=PIC
VARGRAPHIC(%n)=PIC%n
GRAPHIC=BMP
GRAPHIC(%n)=BMP%n
VARCHAR=VA
VARCHAR(%n)=VA%n
CHAR=A
CHAR(%n)=A%n
FLOAT=F
FLOAT(%n)=F%n
NUMERIC=N
NUMERIC(%n)=N%n
NUMERIC(%s,%p)=N%s,%p
DECIMAL=DC
DECIMAL(%n)=DC%n
DECIMAL(%s,%p)=DC%s,%p
SMALLINT=SI
INTEGER=I
*=A10</a:MapTargetItem.Value>
<a:List>&lt;Undefined&gt;
TIMESTAMP
TIME
DATE
VARGRAPHIC
VARGRAPHIC(%n)
GRAPHIC
GRAPHIC(%n)
VARCHAR
VARCHAR(%n)
CHAR
CHAR(%n)
FLOAT
FLOAT(%n)
NUMERIC
NUMERIC(%n)
NUMERIC(%s,%p)
DECIMAL
DECIMAL(%n)
DECIMAL(%s,%p)
SMALLINT
INTEGER
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o162">
<a:Name>PhysDttpSize</a:Name>
<a:Comment>Table of storage sizes of target database data type</a:Comment>
</o:MapTargetItem>
<o:MapTargetItem Id="o163">
<a:Name>OdbcPhysDataType</a:Name>
<a:Comment>Data types translation table from ODBC data types to target database data types.</a:Comment>
<a:MapTargetItem.Value>TIMESTMP(10)=TIMESTAMP
FLOAT(8)=FLOAT
FLOAT(%n)=FLOAT(24)
VARG(%n)=VARGRAPHIC(%n)
NUMERIC(5)=NUMERIC
DECIMAL(5)=DECIMAL
SMALLINT(2)=SMALLINT
INTEGER(4)=INTEGER</a:MapTargetItem.Value>
<a:List>TIMESTMP(10)
FLOAT(8)
FLOAT(%n)
VARG(%n)
NUMERIC(5)
DECIMAL(5)
SMALLINT(2)
INTEGER(4)
</a:List>
</o:MapTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o164">
<a:Name>Odbc</a:Name>
<a:Comment>DBMS characteristics, command definition, and data type translations for the ODBC generation and reverse engineering</a:Comment>
<c:Categories>
<o:TargetCategory Id="o165">
<a:Name>Objects</a:Name>
<a:Comment>Contains sub-categories for each type of object in the database, for example: Table, or Reference. Each sub-category contains entries whose values define database commands and object-related characteristics</a:Comment>
<c:Categories>
<o:TargetCategory Id="o166">
<a:Name>Qualifier</a:Name>
<a:Comment>Manages the use of qualifier in ODBC reverse engineering</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o167">
<a:Name>Enable</a:Name>
<a:Comment>Allows using the qualifier combo box during ODBC reverse engineering</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:StringTargetItem Id="o168">
<a:Name>Label</a:Name>
<a:Comment>Label for &lt;All&gt; in qualifier selection list</a:Comment>
<a:StringTargetItem.Value>All collections</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:TextTargetItem Id="o169">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>select distinct system_table_schema from qsys2.systables</a:TextTargetItem.Value>
<a:Comment>Query to retrieve qualifier during ODBC reverse engineering</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:ProfileTargetItem Id="o170">
<a:Name>Profile</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TargetCategory Id="o171">
<a:Name>Shared</a:Name>
<a:Code>Shared</a:Code>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TargetCategory>
</c:Categories>
</o:ProfileTargetItem>
</c:Categories>
</o:DBMS>

</DBMS>