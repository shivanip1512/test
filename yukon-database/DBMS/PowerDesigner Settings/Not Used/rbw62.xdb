<?xml version="1.0" encoding="UTF-8"?>
<?PowerDesigner AppLocale="UTF16" Code="RBW62" Family="RBW" Name="Red Brick Warehouse 6.2 (Not Certified)" signature="XDB_XML" version="12.0.0.1642"?>
<!-- do not edit this file -->

<DBMS xmlns:a="attribute" xmlns:c="collection" xmlns:o="object">

<o:DBMS Id="o1">
<a:ObjectID>A5D9D5F6-45A4-4E64-B720-54EEE98CC163</a:ObjectID>
<a:Name>Red Brick Warehouse 6.2 (Not Certified)</a:Name>
<a:Code>RBW62</a:Code>
<a:CreationDate>1073338640</a:CreationDate>
<a:Creator>mcreason</a:Creator>
<a:ModificationDate>1078758421</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Family>RBW</a:Family>
<a:CheckGlobalScript>&#39;******************************************************************************
&#39;* Purpose:  This VB-Script holds global definitions shared by all the custom-
&#39;*            checks scripts of the model extension.
&#39;******************************************************************************

Option Explicit &#39; This is to ensure all used variables are defined

</a:CheckGlobalScript>
<c:Categories>
<o:TargetCategory Id="o2">
<a:Name>General</a:Name>
<a:Comment>Target DBMS identification</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o3">
<a:Name>SqlSupport</a:Name>
<a:Comment>SQL syntax allowed. This does not impact the script generation, but it impacts the SQL Preview</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o4">
<a:Name>EnableCheck</a:Name>
<a:Comment>Determines if the generation of check parameters is authorized or not</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o5">
<a:Name>Enableconstname</a:Name>
<a:Comment>Determines if constraint names are used during the generation</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o6">
<a:Name>UniqConstName</a:Name>
<a:Comment>Determines if unique constraint names for objects are authorized or not</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o7">
<a:Name>EnableIntegrity</a:Name>
<a:Comment>Allows integrity constraints in the DBMS. This controls whether generation parameters for primary, foreign, and alternate keys are grayed or available</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o8">
<a:Name>EnableMultiCheck</a:Name>
<a:Comment>Determines if the generation of multiple check parameters is authorized or not</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o9">
<a:Name>Script</a:Name>
<a:Comment>DBMS characteristics, command definition, and data type translations for the Script generation and reverse engineering</a:Comment>
<c:Categories>
<o:TargetCategory Id="o10">
<a:Name>Sql</a:Name>
<a:Comment>Contains sub-categories Syntax, Format, File and Keywords. Each sub-category contains entries whose values define general syntax for the database</a:Comment>
<c:Categories>
<o:TargetCategory Id="o11">
<a:Name>Syntax</a:Name>
<a:Comment>Contains general parameters for SQL syntax</a:Comment>
<c:Categories>
<o:CharacterTargetItem Id="o12">
<a:Name>Terminator</a:Name>
<a:Comment>End of command character</a:Comment>
<a:CharacterTargetItem.Value>;</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:StringTargetItem Id="o13">
<a:Name>BlockTerminator</a:Name>
<a:Comment>End of block character</a:Comment>
</o:StringTargetItem>
<o:BooleanTargetItem Id="o14">
<a:Name>UseBlockTerm</a:Name>
<a:Comment>Use end of block character by default</a:Comment>
</o:BooleanTargetItem>
<o:CharacterTargetItem Id="o15">
<a:Name>Delimiter</a:Name>
<a:Comment>Field separation character. Example: col1, col2, col3</a:Comment>
<a:CharacterTargetItem.Value>,</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:CharacterTargetItem Id="o16">
<a:Name>Quote</a:Name>
<a:Comment>Character used to enclose string values</a:Comment>
<a:CharacterTargetItem.Value>&#39;</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:CharacterTargetItem Id="o17">
<a:Name>SqlContinue</a:Name>
<a:Comment>Continuation character</a:Comment>
</o:CharacterTargetItem>
<o:StringTargetItem Id="o18">
<a:Name>BlockComment</a:Name>
<a:Comment>Characters used to enclose a multi-line comment</a:Comment>
<a:StringTargetItem.Value>/*   */</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o19">
<a:Name>LineComment</a:Name>
<a:Comment>Characters used to enclose a single line comment</a:Comment>
</o:StringTargetItem>
<o:TextTargetItem Id="o20">
<a:Name>UsingBlockTerm</a:Name>
<a:Comment>List of objects using block definition during reverse.</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o21">
<a:Name>Format</a:Name>
<a:Comment>Contains entries that define script formatting</a:Comment>
<c:Categories>
<o:StringTargetItem Id="o22">
<a:Name>IllegalChar</a:Name>
<a:Comment>Invalid characters for names</a:Comment>
<a:StringTargetItem.Value>&quot; +-*/!=&lt;&gt;&#39;&quot;()&quot;</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:BooleanTargetItem Id="o23">
<a:Name>UpperCaseOnly</a:Name>
<a:Comment>Uppercase only</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o24">
<a:Name>LowerCaseOnly</a:Name>
<a:Comment>Lowercase only</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o25">
<a:Name>EnableDtbsPrefix</a:Name>
<a:Comment>Object codes can have a prefix made of the object database code</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o26">
<a:Name>EnableOwnerPrefix</a:Name>
<a:Comment>Object codes can have a prefix made of the object owner code</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o27">
<a:Name>AddQuote</a:Name>
<a:Comment>Determines if object codes are systematically quoted during the generation</a:Comment>
</o:BooleanTargetItem>
<o:StringTargetItem Id="o28">
<a:Name>DateFormat</a:Name>
<a:Comment>Date format for test data generation</a:Comment>
</o:StringTargetItem>
<o:StringTargetItem Id="o29">
<a:Name>TimeFormat</a:Name>
<a:Comment>Time format for test data generation</a:Comment>
</o:StringTargetItem>
<o:StringTargetItem Id="o30">
<a:Name>DateTimeFormat</a:Name>
<a:Comment>Datetime format for test data generation</a:Comment>
</o:StringTargetItem>
<o:StringTargetItem Id="o31">
<a:Name>OdbcDateFormat</a:Name>
<a:Comment>Date format for test data generation using ODBC</a:Comment>
</o:StringTargetItem>
<o:StringTargetItem Id="o32">
<a:Name>OdbcTimeFormat</a:Name>
<a:Comment>Time format for test data generation using ODBC</a:Comment>
</o:StringTargetItem>
<o:StringTargetItem Id="o33">
<a:Name>OdbcDateTimeFormat</a:Name>
<a:Comment>Datetime format for test data generation using ODBC</a:Comment>
</o:StringTargetItem>
<o:BooleanTargetItem Id="o34">
<a:Name>CaseSensitivityUsingQuote</a:Name>
<a:Comment>Determines if the case sensitivity for identifiers is managed using double quotes</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o35">
<a:Name>File</a:Name>
<a:Comment>Contains header, footer and usage text entries used during the generation</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o36">
<a:Name>Header</a:Name>
<a:Comment>Header text for a database generation script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o37">
<a:Name>Footer</a:Name>
<a:Comment>Footer text for a database generation script</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o38">
<a:Name>EnableMultiFile</a:Name>
<a:Comment>Multi-script allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:StringTargetItem Id="o39">
<a:Name>ScriptExt</a:Name>
<a:Comment>Main script extension in database generation</a:Comment>
<a:StringTargetItem.Value>sql</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o40">
<a:Name>TableExt</a:Name>
<a:Comment>Other scripts extension in database generation</a:Comment>
<a:StringTargetItem.Value>tab</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o41">
<a:Name>StartCommand</a:Name>
<a:Comment>Command for executing a script</a:Comment>
</o:StringTargetItem>
<o:TextTargetItem Id="o42">
<a:Name>Usage1</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%
  (2) Start the SQL interpreter:
        risql -d &lt;database&gt; &lt;username&gt; &lt;password&gt;
  (3) Run the database creation script:
        %STARTCMD%</a:TextTargetItem.Value>
<a:Comment>Usage for a single script in database generation</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o43">
<a:Name>Usage2</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%
  (2) Start the SQL interpreter:
        risql -d &lt;database&gt; &lt;username&gt; &lt;password&gt;
  (3) Run the database creation scripts:
        %STARTCMD% &lt;script_name&gt;</a:TextTargetItem.Value>
<a:Comment>Usage for multiple scripts in database generation</a:Comment>
</o:TextTargetItem>
<o:StringTargetItem Id="o44">
<a:Name>TriggerExt</a:Name>
<a:Comment>Script file extension in triggers and procedures generation</a:Comment>
<a:StringTargetItem.Value>trg</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:TextTargetItem Id="o45">
<a:Name>TrgUsage1</a:Name>
<a:TextTargetItem.Value>  (1) Start the SQL interpreter: ISQL
  (2) Select the item &quot;Options&quot; of the menu &quot;Command&quot;
  (3) Change &quot;Command Delimiter&quot; to /
  (4) Open the script %NAMESCRIPT% from the directory %PATHSCRIPT%
  (5) Execute the script
  (6) Restore &quot;Command Delimiter&quot; to ;</a:TextTargetItem.Value>
<a:Comment>Usage for a single script in triggers and procedures generation</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o46">
<a:Name>TrgUsage2</a:Name>
<a:TextTargetItem.Value>  (1) Start the SQL interpreter: ISQL
  (2) Select the item &quot;Options&quot; of the menu &quot;Command&quot;
  (3) Change &quot;Command Delimiter&quot; to /
  (4) Open one script from the directory %PATHSCRIPT%
  (5) Execute the script
  (6) Restore &quot;Command Delimiter&quot; to ;</a:TextTargetItem.Value>
<a:Comment>Usage for multiple scripts in triggers and procedures generation</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o47">
<a:Name>TrgHeader</a:Name>
<a:Comment>Header text for a triggers and procedures generation script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o48">
<a:Name>TrgFooter</a:Name>
<a:Comment>Footer text for a triggers and procedures generation script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o49">
<a:Name>AlterHeader</a:Name>
<a:Comment>Header text for a modify database script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o50">
<a:Name>AlterFooter</a:Name>
<a:Comment>Footer text for a modify database script</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o51">
<a:Name>Keywords</a:Name>
<a:Comment>Contains the list of reserved words and functions available in SQL</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o52">
<a:Name>ReservedWord</a:Name>
<a:TextTargetItem.Value>ADD
ALL
ALTER
AND
ANY
AS
ASC
BETWEEN
BY
CHAR
CHECK
CONNECT
CREATE
CURRENT
DATE
DECIMAL
DEFAULT
DELETE
DESC
DISTINCT
DROP
ELSE
FLOAT
FOR
FROM
GRANT
GROUP
HAVING
IMMEDIATE
IN
INSERT
INTEGER
INTERSECT
INTO
IS
LEVEL
LIKE
NOT
NULL
OF
ON
OPTION
OR
ORDER
PRIOR
PRIVILEGES
PUBLIC
REVOKE
ROWS
SELECT
SESSION
SET
SIZE
SMALLINT
TABLE
THEN
TO
UNION
UNIQUE
UPDATE
USER
VALUES
VARCHAR
VIEW
WHENEVER
WITH</a:TextTargetItem.Value>
<a:Comment>Reserved words</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o53">
<a:Name>ReservedDefault</a:Name>
<a:TextTargetItem.Value>CURRENT_USER
USER
CURRENT_DATE
CURRENT_TIME
CURRENT_TIMESTAMP
NULL</a:TextTargetItem.Value>
<a:Comment>Reserved default values</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o54">
<a:Name>GroupFunc</a:Name>
<a:TextTargetItem.Value>AVG([ALL] nx_exp | DISTINCT col)
COUNT([ALL | DISTINCT] col | *)
MAX([ALL | DISTINCT] x_exp)
MIN([ALL | DISTINCT] x_exp)
SUM([ALL | DISTINCT] nx_exp)</a:TextTargetItem.Value>
<a:Comment>List of SQL functions to use with group keywords.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o55">
<a:Name>NumberFunc</a:Name>
<a:TextTargetItem.Value>ABS(exp)
CEIL(exp)
DEC(exp)
DECIMAL(exp [,prec [, scale]])
FLOAT(exp)
FLOOR(exp)
INT(exp)
INTEGER(exp)
SIGN(exp)</a:TextTargetItem.Value>
<a:Comment>List of SQL functions used on numbers</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o56">
<a:Name>CharFunc</a:Name>
<a:TextTargetItem.Value>CONCAT(c_exp, c_exp [,...])
LOWER(c_exp)
LTRIM(c_exp)
RTRIM(c_exp)
STRING(exp [, length [, scale]])
SUBSTR(c_exp, start [, length])
TRIM(c_exp [,&#39;Both&#39; | ,&#39;Right&#39; | ,&#39;Left&#39;])
UPPER(c_exp)</a:TextTargetItem.Value>
<a:Comment>List of SQL functions for characters and strings</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o57">
<a:Name>DateFunc</a:Name>
<a:TextTargetItem.Value>CURRENT_DATE
CURRENT_TIME[( n )]
CURRENT_TIMESTAMP[( n )]
DATE(c_exp | timestamp_exp)
DATEADD(datepart, interval, datetime_exp)
DATEDIFF(datepart, datetime_exp, datetime_exp)
DATENAME(datepart, datetime_exp)
EXTRACT(datepart FROM datetime_exp)
TIME(c_exp | timestamp_exp)
TIMESTAMP(c_exp | date_exp, time_exp)</a:TextTargetItem.Value>
<a:Comment>List of SQL functions for dates</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o58">
<a:Name>ConvertFunc</a:Name>
<a:Comment>List of SQL functions used to convert values between hex and integer and handling strings</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o59">
<a:Name>OtherFunc</a:Name>
<a:TextTargetItem.Value>CUME([DISTRIBUTED] n_exp)
MOVINGAVG([DISTRIBUTED] n_exp, int)
MOVINGSUM([DISTRIBUTED] n_exp, int)
NTILE(n_exp, int)
RANK(exp)
RATIOTOREPORT(n_exp)
TERTILE(n_exp)
CURRENT_USER
CASE [case_exp] WHEN exp THEN exp [ELSE result] END
COALESC(exp1, exp2...)
DECODE(exp, target, repl [, default])
IFNULL(exp, subst)
NULLIF(exp1, exp2)</a:TextTargetItem.Value>
<a:Comment>List of other SQL functions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o60">
<a:Name>ListOperators</a:Name>
<a:TextTargetItem.Value>+
-
*
/
=
&lt;&gt;
&gt;
&lt;
&gt;=
&lt;=
not
in
not in
between
not between
and
exists
not exists
like
not like
is null
is not null
= some
&lt;&gt; some
&lt; some
&gt; some
&lt;= some
&gt;= some
= any
&lt;&gt; any
&lt; any
&gt; any
&lt;= any
&gt;= any
= all
&lt;&gt; all
&lt; all
&gt; all
&lt;= all
&gt;= all</a:TextTargetItem.Value>
<a:Comment>List of operators for comparing values, boolean, and various semantic operators</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o61">
<a:Name>Commit</a:Name>
<a:TextTargetItem.Value>commit</a:TextTargetItem.Value>
<a:Comment>Command for validating the transaction by OBDC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o62">
<a:Name>Objects</a:Name>
<a:Comment>Contains sub-categories for each type of object in the database, for example: Table, or Reference. Each sub-category contains entries whose values define database commands and object-related characteristics</a:Comment>
<c:Categories>
<o:TargetCategory Id="o63">
<a:Name>Table</a:Name>
<a:Code>TABL</a:Code>
<a:Comment>The following system variables are available:
   &quot;TABLE&quot;        // generated code of the table
   &quot;TNAME&quot;        // name of the table
   &quot;TCODE&quot;        // code of the table
   &quot;TLABL&quot;        // comment of the table
   &quot;PKEYCOLUMNS&quot;  // list of primary key columns. Eg: A, B
   &quot;TABLDEFN&quot;     // complete body of the table definition. Contains definition of columns, checks and keys
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o64">
<a:Name>Enable</a:Name>
<a:Comment>Table allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o65">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>128</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o66">
<a:Name>ConstName</a:Name>
<a:Comment>Constraint name template for check of table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o67">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create table %TABLE% (
%TABLDEFN%
)
[%OPTIONS%]</a:TextTargetItem.Value>
<a:Comment>Command for creating a table. Example: create table %TABLE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o68">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop table %TABLE%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a table. Example: drop table %TABLE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o69">
<a:Name>TableComment</a:Name>
<a:TextTargetItem.Value>alter table %TABLE% comment &#39;%COMMENT%&#39;</a:TextTargetItem.Value>
<a:Comment>Command for adding a table comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o70">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value>data in : composite=yes, separator=no, parenthesis=no
{
    &lt;segment list&gt; : composite=yes, separator=yes, parenthesis=yes
    {
        &lt;segment_name&gt; %s : category=storage, multiple=yes
    }
   segment by values of : composite=yes, parenthesis=yes
   {
      &lt;column_name&gt; %s
   }
   ranges : composite=yes, parenthesis=yes, separator=yes
   {
      &lt;range_part&gt; %s : multiple=yes
   }
   SEGMENT BY HASH
}
primary index in : composite=yes, separator=no, parenthesis=no
{
    &lt;segment list&gt; : composite=yes, separator=yes, parenthesis=yes
    {
        &lt;segment_name&gt; %s : category=storage, multiple=yes
    }
    segment like data
    &lt;segment_range_specification&gt; : composite=yes, separator=no, parenthesis=no
    {
        segment by values of : composite=yes, separator=yes, parenthesis=yes
        {
            &lt;segmenting_column&gt; %s
        }
        ranges : composite=yes, separator=yes, parenthesis=yes
        {
            &lt;range_part&gt; %s : multiple=yes
        } 
    }
    SEGMENT BY HASH
}
maxsegments %d
maxrows per segment %d</a:TextTargetItem.Value>
<a:Comment>Available options for creating a table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o71">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for table options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o72">
<a:Name>Rename</a:Name>
<a:Comment>Command for renaming a table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o73">
<a:Name>AlterTableHeader</a:Name>
<a:Comment>Alter table header</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o74">
<a:Name>AlterTableFooter</a:Name>
<a:Comment>Alter table footer</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o75">
<a:Name>DefineTableCheck</a:Name>
<a:TextTargetItem.Value>check (%.A:CONSTRAINT%)</a:TextTargetItem.Value>
<a:Comment>Allows to customize the script of table check constraints</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o76">
<a:Name>AddTableCheck</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   add check (%.A:CONSTRAINT%)</a:TextTargetItem.Value>
<a:Comment>Allows to customize the script for modifying table constraints within an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o77">
<a:Name>DropTableCheck</a:Name>
<a:Comment>Command for dropping a table check in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o78">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o79">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o80">
<a:Name>SqlOptsQuery</a:Name>
<a:TextTargetItem.Value>{TABLE ID, OPTIONS ...}

select
   trim(t.name),
   concat(case(s.local_id) when 0 then &#39;data in (&#39; else &#39;,&#39; end, trim(s.name)),
   case
       when s.minkey like &#39;%MIN&#39; then s.local_id
       when s.maxkey like &#39;%MAX&#39; then 998
       else s.local_id
    end
from
   rbw_segments s,
   rbw_tables t
where
   s.tname = t.name
   and s.usage=&#39;TABLE&#39;
[  and trim(t.name) = trim(%.q:TABLE%)]
union select
   trim(t.name),
   concat(&#39;) segment by values of (&#39;, trim(c.name), &#39;) ranges (&#39;),
   999
from
   rbw_columns c,
   rbw_segments s,
   rbw_tables t
where
   c.tname = t.name
   and c.segseq = 1
   and s.tname = t.name
   and s.usage=&#39;TABLE&#39;
   and t.segment_by = &#39;RANGE&#39;
[  and trim(t.name) = trim(%.q:TABLE%)]
union select
   trim(t.name),
   concat(case(s.local_id) when 0 then &#39;&#39; else &#39;,&#39; end, trim(substr(s.minkey,1,140)),&#39;:&#39;, trim(substr(s.maxkey,1,140))),
   case
       when s.minkey=&#39;MIN&#39; then 1000 + s.local_id
       when s.maxkey=&#39;MAX&#39; then 2998
       else 1001 + local_id
    end
from
   rbw_segments s,
   rbw_tables t
where
   s.tname = t.name
   and s.usage=&#39;TABLE&#39;
[  and trim(t.name) = trim(%.q:TABLE%)]
union select
   trim(t.name),
   &#39;)&#39;,
   2999
from
   rbw_columns c,
   rbw_segments s,
   rbw_tables t
where
   c.tname = t.name
   and c.segseq = 1
   and s.tname = t.name
   and s.usage=&#39;TABLE&#39;
   and t.segment_by = &#39;RANGE&#39;
[  and trim(t.name) = trim(%.q:TABLE%)]
union select
   trim(t.name),
   &#39;segment by hash&#39;,
   2999
from
   rbw_tables t
where
   t.segment_by = &#39;HASH&#39;
[  and trim(t.name) = trim(%.q:TABLE%)]
union select
   trim(t.name),
   &#39;)&#39;,
   2999
from
   rbw_tables t
where
   t.segment_by IS NULL
[  and trim(t.name) = trim(%.q:TABLE%)]
union select
   trim(t.name),
   &#39; primary index in (&#39;,
   3000
from 
   rbw_tables t,
   rbw_segments s
where 
   s.tname = t.name
   and trim(s.iname) like &#39;%_PK_IDX%&#39;
[  and trim(t.name) = trim(%.q:TABLE%)]
union select 
   trim(t.name),
   concat(trim(s.name),(select case when count(s.id) &gt; 1 then &#39;,&#39; else &#39;&#39; end from rbw_segments s where trim(s.iname) like &#39;%_PK_IDX%&#39; [  and trim(s.tname) = trim(%.q:TABLE%)])),
   3000  + s.id
from 
   rbw_tables t,
   rbw_segments s
where 
   s.tname = t.name
   and trim(s.iname) like &#39;%_PK_IDX%&#39;
[  and trim(t.name) = trim(%.q:TABLE%)]
union select distinct
   trim(t.name),
   concat(&#39;) segment by values of (&#39;, trim(c.name), &#39;) ranges (&#39;),
   5000
from
   rbw_columns c,
   rbw_segments s,
   rbw_tables t,
   rbw_indexes i
where
   c.tname = t.name
   and c.pkseq = 1
   and s.tname = t.name
   and s.usage=&#39;INDEX&#39;
   and trim(s.iname) like &#39;%_PK_IDX%&#39;
   and i.tname = t.name
   and i.type = &#39;BTREE&#39;
[  and trim(t.name) = trim(%.q:TABLE%)]
union select
   trim(t.name),
   concat(trim(substr(s.minkey,1,140)),&#39;:&#39;, trim(substr(s.maxkey,1,140)),case when s.maxkey=&#39;MAX&#39; then &#39;)&#39; else &#39;,&#39; end),
   case
       when s.minkey=&#39;MIN&#39; then 5001
       when s.maxkey=&#39;MAX&#39; then 5998
       else 5002 + S.id
    end
from
   rbw_segments s,
   rbw_tables t
where
   s.tname = t.name
   and s.usage=&#39;INDEX&#39;
   and trim(s.iname) like &#39;%_PK_IDX%&#39;
[  and trim(t.name) = trim(%.q:TABLE%)]
union select
   trim(t.name),
   concat(&#39; maxsegments &#39;, trim(string(t.maxsegments))),
   9998
from
   rbw_tables t
where 
[  trim(t.name) = trim(%.q:TABLE%)]
union select
   trim(t.name),   
   concat(&#39; maxrows per segment &#39;, trim(string(t.maxrows_per_seg))),
   9999
from
   rbw_tables t
where 
[  trim(t.name) = trim(%.q:TABLE%)]
order by 1, 3</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object physical options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o81">
<a:Name>SqlChckQuery</a:Name>
<a:Comment>SQL query to reverse object check constraints</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o82">
<a:Name>UniqConstraintName</a:Name>
<a:Comment>Disallows the same name for index and constraint name in the same table.</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o83">
<a:Name>Header</a:Name>
<a:Comment>Table header</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o84">
<a:Name>Footer</a:Name>
<a:Comment>Table footer</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o85">
<a:Name>AllowedADT</a:Name>
<a:Comment>List of ADT on which a table can be based</a:Comment>
</o:TextTargetItem>
<o:IntegerTargetItem Id="o86">
<a:Name>MaxConstLen</a:Name>
<a:Comment>Maximum table constraint name length</a:Comment>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o87">
<a:Name>SqlExOptsQuery</a:Name>
<a:Comment>SQL query to reverse extra physical option data</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o88">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a table.
The first column is the SQL name of permission (eg: SELECT)
The second column is a shortname to display in a grid</a:Comment>
</o:MapTargetItem>
<o:TextTargetItem Id="o89">
<a:Name>SqlPermQuery</a:Name>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o90">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o91">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o92">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o93">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o94">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o95">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o96">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o97">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o98">
<a:Name>SqlListRefrTables</a:Name>
<a:Comment>SQL query to list the tables referenced by table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o99">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o100">
<a:Name>Column</a:Name>
<a:Code>COLN</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for columns)
   &quot;COLUMN&quot;       // generated code of the column
   &quot;COLNNO&quot;       // position of the column in the list of columns of the table
   &quot;COLNNAME&quot;     // name of the column
   &quot;COLNCODE&quot;     // code of the column
   &quot;PRIMARY&quot;      // keyword &quot;primary&quot; if the column is primary
   &quot;ISPKEY&quot;       // TRUE if the column is part of the primary key
   &quot;FOREIGN&quot;      // TRUE if the column is part of one foreign key
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o101">
<a:Name>Enable</a:Name>
<a:Comment>Column allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o102">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>128</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:BooleanTargetItem Id="o103">
<a:Name>EnableDefault</a:Name>
<a:Comment>Default values allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o104">
<a:Name>CheckNull</a:Name>
<a:Comment>Verifies if a column is NULL</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o105">
<a:Name>ConstName</a:Name>
<a:Comment>Constraint name template for a column check parameter</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o106">
<a:Name>Create</a:Name>
<a:Comment>Command for adding a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o107">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>%COLUMN% %DATATYPE% [%NOTNULL%] [%IsUnique%?unique] [default %DEFAULT%] </a:TextTargetItem.Value>
<a:Comment>Command for defining a table column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o108">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>alter table %TABLE%
   drop column %COLUMN%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o109">
<a:Name>Rename</a:Name>
<a:TextTargetItem.Value>alter table %TABLE%
   alter column %OLDCOLUMN% rename as %NEWCOLUMN%</a:TextTargetItem.Value>
<a:Comment>Command for renaming a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o110">
<a:Name>ColumnComment</a:Name>
<a:TextTargetItem.Value>alter table %TABLE% alter %COLUMN% comment &#39;%COMMENT%&#39;</a:TextTargetItem.Value>
<a:Comment>Command for adding a column comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o111">
<a:Name>ModifyColumn</a:Name>
<a:TextTargetItem.Value>alter table %TABLE%
   alter %COLUMN% %DATATYPE%</a:TextTargetItem.Value>
<a:Comment>Command for modifying a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o112">
<a:Name>ModifyColnDflt</a:Name>
<a:TextTargetItem.Value>alter table %TABLE%
   .DEFINE   &quot;_ORDER_DEFAULT&quot; &quot;drop default&quot;
.DEFINEIF &quot;%?DEFAULT%&quot; &quot;_ORDER_DEFAULT&quot; &quot;set default %DEFAULT%&quot;
alter column %COLUMN% &quot;_ORDER_DEFAULT&quot;</a:TextTargetItem.Value>
<a:Comment>Command for modifying a column default in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o113">
<a:Name>ModifyColnChck</a:Name>
<a:Comment>Command for modifying a column check in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o114">
<a:Name>DropColnChck</a:Name>
<a:Comment>Command for dropping a column check in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o115">
<a:Name>AltEnableAddColnChk</a:Name>
<a:Comment>Column check constraint allowed in an alter table statement</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o116">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o117">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{TABLE, COLUMN, DEFAULT, IsUnique}

select 
   t.tname, 
   t.name,
   case (t.type)
      when &#39;CHAR&#39; then CONCAT(&#39;&#39;&#39;&#39; ,trim(t.defaultvalue), &#39;&#39;&#39;&#39;)
      when &#39;VARCHAR&#39; then CONCAT(&#39;&#39;&#39;&#39; ,trim(t.defaultvalue), &#39;&#39;&#39;&#39;)
      else trim(t.defaultvalue)
   end as defaultvalue,
   TRIM(case t.uniq when &#39;Y&#39; then &#39;TRUE&#39; else &#39;FALSE&#39; end) as IsUnique   
from 
   rbw_columns t
[where 
  t.tname = %.q:TABLE%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o118">
<a:Name>SqlChckQuery</a:Name>
<a:Comment>SQL query to reverse object check constraints</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o119">
<a:Name>EnableBindRule</a:Name>
<a:Comment>Allows the binding of business rule to a column for check parameters</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o120">
<a:Name>EnableIdentity</a:Name>
<a:Comment>Identity keyword entry support. Identity columns are serial counters maintains by the database</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o121">
<a:Name>Bind</a:Name>
<a:Comment>Command for binding a rule to a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o122">
<a:Name>Unbind</a:Name>
<a:Comment>Command for unbinding a rule from a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o123">
<a:Name>ModifyColnNull</a:Name>
<a:Comment>Command for modifying null/not null for a column in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o124">
<a:Name>EnableNotNullWithDflt</a:Name>
<a:Comment>Enables not null with default</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o125">
<a:Name>Options</a:Name>
<a:Comment>Available options for creating a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o126">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for column physical options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o127">
<a:Name>SqlOptsQuery</a:Name>
<a:Comment>SQL query to reverse column physical options</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o128">
<a:Name>EnableComputedColn</a:Name>
<a:Comment>Computed columns allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o129">
<a:Name>ModifyColnComp</a:Name>
<a:Comment>Command for modifying computed expression for a column in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o130">
<a:Name>DropColnComp</a:Name>
<a:Comment>Command for dropping a column computed expression in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:IntegerTargetItem Id="o131">
<a:Name>MaxConstLen</a:Name>
<a:Comment>Maximum column constraint name length</a:Comment>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o132">
<a:Name>SqlExOptsQuery</a:Name>
<a:Comment>SQL query to reverse extra physical option data</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o133">
<a:Name>DefineColnChck</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME%] check (%.A:CONSTRAINT%)</a:TextTargetItem.Value>
<a:Comment>Allows to customize the script of column check constraints</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o134">
<a:Name>AddColnChck</a:Name>
<a:Comment>Allows to customize the script for modifying column constraints within an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o135">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o136">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o137">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o138">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o139">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o140">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o141">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o142">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o143">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a column.
The first column is the SQL name of permission (eg: SELECT)
The second column is a shortname to display in a grid</a:Comment>
</o:MapTargetItem>
<o:TextTargetItem Id="o144">
<a:Name>SqlPermQuery</a:Name>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o145">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o146">
<a:Name>Index</a:Name>
<a:Code>INDX</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for indexes)
   &quot;INDEX&quot;        // generated code of the index
   &quot;INDEXNAME&quot;    // index name
   &quot;INDEXCODE&quot;    // index code
   &quot;UNIQUE&quot;       // keyword &quot;unique&quot; when the index is unique
   &quot;INDEXTYPE&quot;    // index type (available only for a few DBMS)
   &quot;INDEXKEY&quot;     // keywords &quot;primary&quot;, &quot;unique&quot; or &quot;foreign&quot; depending on the index origin
   &quot;CIDXLIST&quot;     // list of index columns. Eg: A asc, B desc, C asc
   &quot;CLUSTER&quot;      // keyword &quot;cluster&quot; when the index is cluster
For index columns, the following system variables are available:
   &quot;ASC&quot;          // keywords &quot;ASC&quot; or &quot;DESC&quot; depending on sort order
   &quot;ISASC&quot;        // TRUE if the index column sort is ascending
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o147">
<a:Name>Enable</a:Name>
<a:Comment>Index allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o148">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>128</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:IntegerTargetItem Id="o149">
<a:Name>MaxColIndex</a:Name>
<a:Comment>Maximum number of columns in an index</a:Comment>
<a:IntegerTargetItem.Value>16</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:BooleanTargetItem Id="o150">
<a:Name>UniqName</a:Name>
<a:Comment>Unique index name in the database</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o151">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create %INDEXTYPE% index %INDEX% on %TABLE% 
( %CIDXLIST% )
[%OPTIONS%]</a:TextTargetItem.Value>
<a:Comment>Command for creating an index. Example: create index %INDEX%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o152">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop index %INDEX%</a:TextTargetItem.Value>
<a:Comment>Command for dropping an index. Example: drop index %INDEX%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o153">
<a:Name>AddColIndex</a:Name>
<a:TextTargetItem.Value>%COLUMN%</a:TextTargetItem.Value>
<a:Comment>Command for defining an index column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o154">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value>in : composite=yes, separator=no, parenthesis=no
{
    &lt;segment list&gt; : composite=yes, separator=yes, parenthesis=yes
    {
        &lt;segment_name&gt; %s : category=storage, multiple=yes
    }
    segment like data
    segment like referenced table
    &lt;segment_range_specification&gt; : composite=yes, separator=no, parenthesis=no
    {
        segment by values of : composite=yes, separator=yes, parenthesis=yes
        {
            &lt;segmenting_column&gt; %s
        }
        ranges : composite=yes, separator=yes, parenthesis=yes
        {
            &lt;range_part&gt; %s : multiple=yes
        } 
        segment by references of : composite=yes, separator=yes, parenthesis=yes
        {
            &lt;segmenting_column&gt; %s : multiple=yes
        }
        ranges : composite=yes, separator=no, parenthesis=yes
        {
            &lt;range_part&gt; %s : multiple=yes
        }
    }
}
with fillfactor %d
domain size %s  : list=SMALL | MEDIUM | LARGE</a:TextTargetItem.Value>
<a:Comment>Default options for creating an index</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o155">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for index options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o156">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o157">
<a:Name>SqlSysIndexQuery</a:Name>
<a:Comment>SQL query to list system indexes created by the database</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o158">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{TABLE, INDEX, INDEXTYPE, INDEXKEY}

select 
   i.tname,
   i.name, 
   case (i.type)
      when &#39;TARGETS&#39; then SUBSTR(i.type,1,6)
      when &#39;TARGETM&#39; then SUBSTR(i.type,1,6)
      when &#39;TARGETL&#39; then SUBSTR(i.type,1,6)
      when &#39;BTREE&#39; then &#39; &#39;
      else TRIM(i.type)
   end as INDEX_TYPE,
   case (c.type)
      when &#39;PRIMARY KEY&#39; then &#39;primary&#39;
      when &#39;FOREIGN KEY&#39; then &#39;foreign&#39;
   end as INDEX_KEY
from 
  rbw_indexes i join rbw_constraints c on i.tname=c.tname 
[where 
  i.tname = %.q:TABLE%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o159">
<a:Name>SqlOptsQuery</a:Name>
<a:TextTargetItem.Value>{INDEX ID, OPTIONS ...}

select
   trim(i.name),
   concat(&#39;in &#39;,&#39;(&#39;),
   0
from
   rbw_indexes i 
[where
  trim(i.tname) = trim(%.q:TABLE%)]
union select
   trim(i.name),
   CONCAT (trim(s.name),(
    CASE
       WHEN (S.MINKEY=&#39;MIN&#39; AND S.MAXKEY=&#39;MAX&#39;) THEN &#39;&#39;
       WHEN (S.MINKEY=&#39;MIN&#39; AND S.MAXKEY&lt;&gt;&#39;MAX&#39;) THEN &#39;,&#39;
       WHEN (S.MINKEY&lt;&gt;&#39;MIN&#39; AND S.MAXKEY&lt;&gt;&#39;MAX&#39;) THEN &#39;,&#39;
       WHEN (S.MINKEY &lt;&gt; &#39;MIN&#39; AND S.MAXKEY = &#39;MAX&#39;) THEN &#39;&#39;
       ELSE &#39;,&#39;
    END)),
    case
       when s.minkey = &#39;MIN&#39; then 1
       when s.maxkey = &#39;MAX&#39; then 9998
       when s.minkey &lt;&gt; &#39;MIN&#39; then int(substr(s.minkey,(length(s.minkey)-3),4))
       else s.id
    end
from
   rbw_segments s,
   rbw_indexes i 
where
   i.name = s.iname
   and s.usage=&#39;INDEX&#39;
[  and trim(i.tname) = trim(%.q:TABLE%)]
union select distinct
   trim(i.name),
   concat((case (i.type) when &#39;STAR&#39; then &#39;) segment by references of (&#39; else &#39;) segment by values of (&#39; end), trim(i.cname), &#39;) ranges (&#39; ),
   10000
from
   rbw_segments s,
   rbw_indexes i,
   rbw_tables t
where
   s.iname = i.name
   and s.usage=&#39;INDEX&#39;
   and t.name = i.tname
[  and trim(i.tname) = trim(%.q:TABLE%)]
union select
   trim(i.name),
   concat(trim(substr(s.minkey,1,140)),&#39;:&#39;, trim(substr(s.maxkey,1,140)),(
   CASE
       WHEN (S.MINKEY=&#39;MIN&#39; AND S.MAXKEY=&#39;MAX&#39;) THEN &#39;&#39;
       WHEN (S.MINKEY=&#39;MIN&#39; AND S.MAXKEY&lt;&gt;&#39;MAX&#39;) THEN &#39;,&#39;
       WHEN (S.MINKEY&lt;&gt;&#39;MIN&#39; AND S.MAXKEY&lt;&gt;&#39;MAX&#39;) THEN &#39;,&#39;
       WHEN (S.MINKEY &lt;&gt; &#39;MIN&#39; AND S.MAXKEY = &#39;MAX&#39;) THEN &#39;&#39;
       ELSE &#39;,&#39;
    END)),
   case
       when s.minkey=&#39;MIN&#39; then 10001 
       when s.maxkey=&#39;MAX&#39; then 49999
       when s.minkey &lt;&gt; &#39;MIN&#39; then (int(substr(s.minkey,(length(s.minkey)-3),4)) + 10001)
       else 10001 + s.id
    end
from
   rbw_segments s,
   rbw_indexes i
where
   s.iname = i.name
   and s.usage=&#39;INDEX&#39;
[  and trim(i.tname) = trim(%.q:TABLE%)]
union select
   trim(i.name),
   concat(&#39;)&#39;,&#39; with fillfactor &#39;, trim(string(i.fillfactor))),
   99998
from
   rbw_segments s,
   rbw_indexes i
where
   i.name = s.iname
   and s.usage =&#39;INDEX&#39;
[  and trim(i.tname) = trim(%.q:TABLE%)]
union select
   trim(i.name),
   concat(case substr(i.type,1,6) when &#39;TARGET&#39; then &#39; domain size &#39; end,
      case (i.type)
        when &#39;TARGETS&#39; then &#39;SMALL&#39;
        when &#39;TARGETM&#39; then &#39;MEDIUM&#39;
        when &#39;TARGETL&#39; then &#39;LARGE&#39;
      end),
   99999
from
   rbw_segments s,
   rbw_indexes i 
where
   i.name = s.iname
   and s.usage =&#39;INDEX&#39;
[  and trim(i.tname) = trim(%.q:TABLE%)]
order by 1, 3</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object physical options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o160">
<a:Name>DefineIndexColumn</a:Name>
<a:Comment>Defines the column of an index</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o161">
<a:Name>MandIndexType</a:Name>
<a:Comment>Determines if the index type is mandatory for an index</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o162">
<a:Name>IndexType</a:Name>
<a:TextTargetItem.Value>STAR
TARGET
</a:TextTargetItem.Value>
<a:Comment>List of types available for an index</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o163">
<a:Name>DefIndexType</a:Name>
<a:Comment>Default type for an index</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o164">
<a:Name>EnableAscDesc</a:Name>
<a:Comment>ASC, DESC keywords allowed</a:Comment>
</o:BooleanTargetItem>
<o:StringTargetItem Id="o165">
<a:Name>Cluster</a:Name>
<a:Comment>Cluster index keyword (default value: cluster)</a:Comment>
</o:StringTargetItem>
<o:TextTargetItem Id="o166">
<a:Name>Footer</a:Name>
<a:Comment>Footer text for an index</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o167">
<a:Name>Header</a:Name>
<a:Comment>Header text for an index</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o168">
<a:Name>EnableCluster</a:Name>
<a:Comment>Cluster option available for indexes</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o169">
<a:Name>SqlExOptsQuery</a:Name>
<a:Comment>SQL query to reverse extra physical option data</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o170">
<a:Name>EnableFunction</a:Name>
<a:Comment>Function-based indexes allowed</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o171">
<a:Name>EnableOwner</a:Name>
<a:Comment>Owner allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o172">
<a:Name>IndexComment</a:Name>
<a:TextTargetItem.Value>comment on index [%QUALIFIER%]%TABLE%.%INDEX% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding an index comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o173">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o174">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o175">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o176">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o177">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o178">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o179">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o180">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o181">
<a:Name>CreateBeforeKey</a:Name>
<a:Comment>Allow to invert generation order of indexes and keys</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o182">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o183">
<a:Name>PKey</a:Name>
<a:Code>PKEY</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for keys)
   &quot;PKEYCOLUMNS&quot;  // list of primary key columns. Eg: A, B
   &quot;ISPKEY&quot;       // TRUE when the key is the primary key of the table
   &quot;KEY&quot;          // constraint name
   &quot;PKEY&quot;         // constraint name for primary key
   &quot;AKEY&quot;         // constraint name for alternate key
   &quot;ISMULTICOLN&quot;  // TRUE if key has more than one column
   &quot;CLUSTER&quot;      // keyword cluster</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o184">
<a:Name>Enable</a:Name>
<a:Comment>Primary key allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o185">
<a:Name>PkAutoIndex</a:Name>
<a:Comment>Primary key is auto-indexed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o186">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>%.U:TABLE%_PK_IDX</a:TextTargetItem.Value>
<a:Comment>Constraint name template for primary keys</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o187">
<a:Name>Create</a:Name>
<a:Comment>Command for adding a primary key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o188">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME%] primary key (%PKEYCOLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for defining a primary key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o189">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a primary key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o190">
<a:Name>Options</a:Name>
<a:Comment>Available options for creating a primary key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o191">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for primary key options</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o192">
<a:Name>UseSpPrimKey</a:Name>
<a:Comment>Use the sp_primarykey command to generate primary key</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o193">
<a:Name>AllowNullableColn</a:Name>
<a:Comment>Allow the inclusion of nullable columns</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o194">
<a:Name>PKeyComment</a:Name>
<a:TextTargetItem.Value>comment on primary key [%QUALIFIER%]%TABLE%.%PKEY% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding a primary key comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o195">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o196">
<a:Name>Key</a:Name>
<a:Code>KEY</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for keys)
   &quot;COLUMNS&quot;      // List of columns of the key. Eg: &quot;A, B, C&quot;
   &quot;ISPKEY&quot;       // TRUE when the key is the primary key of the table
   &quot;KEY&quot;          // constraint name
   &quot;PKEY&quot;         // constraint name for primary key
   &quot;AKEY&quot;         // constraint name for alternate key
   &quot;ISMULTICOLN&quot;  // TRUE if key has more than one column
   &quot;CLUSTER&quot;      // keyword cluster
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o197">
<a:Name>Enable</a:Name>
<a:Comment>UNIQUE constraint allowed for tables</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o198">
<a:Name>UniqConstAutoIndex</a:Name>
<a:Comment>UNIQUE constraint is auto-indexed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o199">
<a:Name>ConstName</a:Name>
<a:Comment>Constraint name template for alternate keys</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o200">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   add unique (%COLNLIST%)</a:TextTargetItem.Value>
<a:Comment>Command for adding an alternate key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o201">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME%] unique (%COLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for defining an alternate key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o202">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping an alternate key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o203">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o204">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o205">
<a:Name>SqlOptsQuery</a:Name>
<a:Comment>SQL query to reverse object physical options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o206">
<a:Name>SqlAkeyIndex</a:Name>
<a:Comment>SQL query to obtain the alternate key indexes of a table by ODBC</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o207">
<a:Name>Options</a:Name>
<a:Comment>Available options for an alternate key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o208">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for alternate key options</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o209">
<a:Name>AllowNullableColn</a:Name>
<a:Comment>Allow the inclusion of nullable columns</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o210">
<a:Name>MaxConstLen</a:Name>
<a:Comment>Maximum key constraint name length</a:Comment>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o211">
<a:Name>SqlExOptsQuery</a:Name>
<a:Comment>SQL query to reverse extra physical option data</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o212">
<a:Name>AKeyComment</a:Name>
<a:TextTargetItem.Value>comment on alternate key [%QUALIFIER%]%TABLE%.%AKEY% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding an alternate key comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o213">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o214">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o215">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o216">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o217">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o218">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o219">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o220">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o221">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o222">
<a:Name>Reference</a:Name>
<a:Code>REFR</a:Code>
<a:Comment>The following system variables are available:
   &quot;REFR&quot;         // generated code of the reference
   &quot;REFNAME&quot;      // reference name
   &quot;PARENT&quot;       // generated code of the parent table
   &quot;PNAME&quot;        // name of the parent table
   &quot;PCODE&quot;        // code of the parent table
   &quot;CHILD&quot;        // generated code of the reference
   &quot;CNAME&quot;        // name of the child table
   &quot;CCODE&quot;        // code of the child table
   &quot;PQUALIFIER&quot;   // qualifier of the parent table. See QUALIFIER
   &quot;CQUALIFIER&quot;   // qualifier of the child table. See QUALIFIER
   &quot;REFRNAME&quot;     // Reference name
   &quot;REFRCODE&quot;     // Reference code
   &quot;FKCONSTRAINT&quot; // Reference constraint name (foreign key)
   &quot;PKCONSTRAINT&quot; // constraint name of the parent key used to reference object
   &quot;CKEYCOLUMNS&quot;  // list of parent key columns. Eg: C1, C2, C3
   &quot;FKEYCOLUMNS&quot;  // list of child foreign key columns. Eg:
   &quot;UPDCONST&quot;     // Update declarative constraint. Keywords &quot;restrict&quot;, &quot;cascade&quot;, &quot;set null&quot; or &quot;set default&quot;
   &quot;DELCONST&quot;     // Delete declarative constraint. Keywords &quot;restrict&quot;, &quot;cascade&quot;, &quot;set null&quot; or &quot;set default&quot;
   &quot;MINCARD&quot;      // Min cardinality
   &quot;MAXCARD&quot;      // Max cardinality
   &quot;POWNER&quot;       // Parent table owner
   &quot;COWNER&quot;       // child table owner
   &quot;CHCKONCMMT&quot;   // TRUE when check on commit is selected on the reference (ASA 6.0 specific)

For reference joins (couple of column in a reference),
the following system variables are available:
   &quot;CKEYCOLUMN&quot;   // generated code of the parent table column (primary key)
   &quot;FKEYCOLUMN&quot;   // generated code of the child table column (foreign key)
   &quot;PK&quot;           // primary key column generated code
   &quot;PKNAME&quot;       // primary key column name
   &quot;FK&quot;           // foreign key column generated code
   &quot;FKNAME&quot;       // foreign key column name
   &quot;AK&quot;           // alternate key column code (same as PK)
   &quot;AKNAME&quot;       // alternate key column name (same as PKNAME)
   &quot;COLTYPE&quot;      // primary column column datatype
   &quot;DEFAULT&quot;      // foreign key column default value
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o223">
<a:Name>Enable</a:Name>
<a:Comment>Foreign key allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o224">
<a:Name>EnablefKeyName</a:Name>
<a:Comment>Foreign key role allowed in database generation</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o225">
<a:Name>FKAutoIndex</a:Name>
<a:Comment>Foreign key is auto-indexed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o226">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>FK_%.U20:CHILD%_%.U:REFR%_%.U20:PARENT%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for foreign keys</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o227">
<a:Name>CheckOnCommit</a:Name>
<a:Comment>Referential integrity test differed after the COMMIT</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o228">
<a:Name>DclUpdIntegrity</a:Name>
<a:TextTargetItem.Value>
RESTRICT</a:TextTargetItem.Value>
<a:Comment>Declarative referential integrity constraint allowed for update</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o229">
<a:Name>DclDelIntegrity</a:Name>
<a:TextTargetItem.Value>CASCADE
</a:TextTargetItem.Value>
<a:Comment>Declarative referential integrity constraint allowed for delete</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o230">
<a:Name>Create</a:Name>
<a:Comment>Command for adding a foreign key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o231">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>constraint %CONSTNAME% foreign key (%FKEYCOLUMNS%) 
   references %PARENT% (%CKEYCOLUMNS%)
</a:TextTargetItem.Value>
<a:Comment>Command for defining a foreign key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o232">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o233">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o234">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a foreign key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o235">
<a:Name>DefineJoin</a:Name>
<a:Comment>Defines a join for a reference</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o236">
<a:Name>SqlListChildrenQuery</a:Name>
<a:Comment>SQL query to list reference joins</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o237">
<a:Name>UseSpFornKey</a:Name>
<a:Comment>Use sp_foreignkey command to create foreign key</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o238">
<a:Name>EnableChangeJoinOrder</a:Name>
<a:Comment>Enable to change join order when a reference is linked to a key</a:Comment>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o239">
<a:Name>MaxConstLen</a:Name>
<a:Comment>Maximum reference constraint name length</a:Comment>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o240">
<a:Name>FKeyComment</a:Name>
<a:TextTargetItem.Value>comment on foreign key [%QUALIFIER%]%TABLE%.%FK% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding a foreign key comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o241">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o242">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o243">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o244">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o245">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o246">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o247">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o248">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o249">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o250">
<a:Name>View</a:Name>
<a:Code>VIEW</a:Code>
<a:Comment>The following system variables are available:
   &quot;VIEW&quot;         // generated code of the view
   &quot;VIEWNAME&quot;     // view name
   &quot;VIEWCODE&quot;     // view code
   &quot;VIEWCOLN&quot;     // List of columns of the view. Eg: &quot;A, B, C&quot;
   &quot;SQL&quot;          // SQL text of the view. Eg: Select * from T1
   &quot;VIEWCHECK&quot;    // Keyword &quot;with check option&quot; if selected on the view
   &quot;SCRIPT&quot;       // complete view creation order. Eg: create view V1 as select * from T1
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o251">
<a:Name>Enable</a:Name>
<a:Comment>View allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o252">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>%SQL%</a:TextTargetItem.Value>
<a:Comment>Command for creating a view. Example: create view %VIEW%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o253">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop view %VIEW%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a view. Example: drop view %VIEW%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o254">
<a:Name>ViewComment</a:Name>
<a:TextTargetItem.Value>alter %VIEW% comment &#39;%COMMENT%&#39;</a:TextTargetItem.Value>
<a:Comment>Command for adding a view comment.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o255">
<a:Name>ViewCheck</a:Name>
<a:Comment>Option for checking a view</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o256">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o257">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{VIEW ID, SQL ...}
 
select
   vw.name,
   concat(substr(txt.text, 1, 1023), &#39;&#39;) 
from
   rbw_views vw,
   rbw_viewtext txt
where
   txt.name=vw.name
   [and vw.name=%.q:VIEW%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o258">
<a:Name>Header</a:Name>
<a:Comment>View header</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o259">
<a:Name>Footer</a:Name>
<a:Comment>View footer</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o260">
<a:Name>Options</a:Name>
<a:Comment>Available options for creating a snapshot (or materialized view)</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o261">
<a:Name>ViewStyle</a:Name>
<a:TextTargetItem.Value>precomputed view
hierarchy</a:TextTargetItem.Value>
<a:Comment>Command for defining a specific view</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o262">
<a:Name>SqlOptsQuery</a:Name>
<a:Comment>SQL query to reverse object physical options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o263">
<a:Name>SqlExOptsQuery</a:Name>
<a:Comment>SQL query to reverse extra physical option data</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o264">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a view.
The first column is the SQL name of permission (eg: SELECT)
The second column is a shortname to display in a grid</a:Comment>
</o:MapTargetItem>
<o:TextTargetItem Id="o265">
<a:Name>SqlPermQuery</a:Name>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o266">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o267">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o268">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o269">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o270">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o271">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o272">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o273">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o274">
<a:Name>ReversedQueries</a:Name>
<a:TextTargetItem.Value>SqlColnListQuery
</a:TextTargetItem.Value>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o275">
<a:Name>SqlColnListQuery</a:Name>
<a:TextTargetItem.Value>{VIEW ID, VIEWCOLN ...}

select
   vw.name,
   concat(Trim(col.name),&#39;, &#39;),
   col.seq
from
   rbw_views vw,
   rbw_columns col
where
   col.tname=vw.name
   [and vw.name=%.q:VIEW%]
order by
   3</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse view columns


</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TextTargetItem>
<o:TextTargetItem Id="o276">
<a:Name>SqlGetViewText</a:Name>
<a:TextTargetItem.Value>{VIEW, SQL}


select
   name,
   TRIM(text),
   seq
from
   rbw_viewtext
where 
   [name=%.q:VIEW%]
order by
   3</a:TextTargetItem.Value>
<a:Comment>This retrieves the SQL statement for the view.</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o277">
<a:Name>Tablespace</a:Name>
<a:Code>TSPC</a:Code>
<a:Comment>The following system variables are available:
   &quot;TABLESPACE&quot;   // generated code of the tablespace
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o278">
<a:Name>Enable</a:Name>
<a:Comment>Tablespace allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o279">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a tablespace. Example: create tablespace %TABLESPACE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o280">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a tablespace. Example: drop tablespace %TABLESPACE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o281">
<a:Name>Options</a:Name>
<a:Comment>Default options for creating a tablespace.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o282">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for tablespace options.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o283">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o284">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o285">
<a:Name>SqlOptsQuery</a:Name>
<a:Comment>SQL query to reverse object physical options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o286">
<a:Name>SqlExOptsQuery</a:Name>
<a:Comment>SQL query to reverse extra physical option data</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o287">
<a:Name>TablespaceComment</a:Name>
<a:TextTargetItem.Value>comment on tablespace [%QUALIFIER%]%TABLESPACE% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding a tablespace comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o288">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o289">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o290">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o291">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o292">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o293">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o294">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o295">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o296">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o297">
<a:Name>Storage</a:Name>
<a:Code>STOR</a:Code>
<a:Comment>The following system variables are available:
   &quot;STORAGE&quot;      // generated code of the storage
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o298">
<a:Name>Enable</a:Name>
<a:Comment>Storage allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o299">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create segment %STORAGE%
[%OPTIONS%]</a:TextTargetItem.Value>
<a:Comment>Command for creating a storage. Example: create storage %STORAGE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o300">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop segment %STORAGE%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a storage. Example: drop storage %STORAGE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o301">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value>&lt;storage_specification&gt;: composite=yes, separator=yes
{
STORAGE : composite=yes, multiple=yes
{
&lt;filename&gt; %s
MAXSIZE %d : default=16
INITSIZE %d : default=16
EXTENDSIZE %d : default=8
}
}
</a:TextTargetItem.Value>
<a:Comment>Default options for creating a storage</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o302">
<a:Name>DefOptions</a:Name>
<a:TextTargetItem.Value>&lt;storage_specification&gt;
{
STORAGE 
{
&lt;filename&gt; &#39;%STORAGE%&#39;
MAXSIZE 16
}
}</a:TextTargetItem.Value>
<a:Comment>Default values for storage options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o303">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{STORAGE}

select
   TRIM(s.name)
from
   rbw_segments s
order by
   1</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o304">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{STORAGE ID, OPTIONS ...}

select
   s.segname,
    CONCAT(&#39;STORAGE &#39;,&#39;&#39;&#39;&#39;,TRIM(substr(s.location, 1, 900)),&#39;&#39;&#39;&#39;,&#39; MAXSIZE &#39;, TRIM(STRING(s.maxsize)), &#39; INITSIZE &#39;, TRIM(STRING(s.initsize)), &#39; EXTENDSIZE &#39;,TRIM(STRING(s.extendsize)),&#39;,&#39;),
    s.pseq
from
   rbw_storage s
[where
   s.segname = %.q:STORAGE%]
order by
   1, 3</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o305">
<a:Name>StorageComment</a:Name>
<a:TextTargetItem.Value>comment on storage [%QUALIFIER%]%STORAGE% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding a storage comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o306">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o307">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o308">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o309">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o310">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o311">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o312">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o313">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o314">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o315">
<a:Name>Database</a:Name>
<a:Code>DTBS</a:Code>
<a:Comment>The following system variables are available:
   &quot;DATABASE&quot;     // generated code of the database
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o316">
<a:Name>Enable</a:Name>
<a:Comment>Database allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o317">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a database. Example: create database %DATABASE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o318">
<a:Name>Options</a:Name>
<a:Comment>Available options for creating a database</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o319">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for database options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o320">
<a:Name>OpenDatabase</a:Name>
<a:Comment>Command for opening a database. Example: open database %DATABASE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o321">
<a:Name>CloseDatabase</a:Name>
<a:Comment>Command for closing a database. Example: close database</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o322">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a database. Example: drop database %DATABASE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o323">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o324">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o325">
<a:Name>BeforeCreateDatabase</a:Name>
<a:Comment>Creates tablespaces and storages before database</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o326">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o327">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o328">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o329">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o330">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o331">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o332">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o333">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o334">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o335">
<a:Name>Domain</a:Name>
<a:Code>PDMDOMN</a:Code>
<a:Comment>The following system variables are available:
   &quot;DOMAIN&quot;       // generated code of the domain (also available for columns)
SQL Server specific domain system variables:
   &quot;RULENAME&quot;     // name of the rule object associated with the domain
   &quot;DEFAULTNAME&quot;  // name of the default object associated with the domain
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o336">
<a:Name>Enable</a:Name>
<a:Comment>User defined data types allowed</a:Comment>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o337">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>30</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o338">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create datatype %DOMAIN% %DATATYPE% [[%NOTNULL%]] [default %DEFAULT%]
      [check (%.A:CONSTRAINT%)]</a:TextTargetItem.Value>
<a:Comment>Command for creating a user defined data type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o339">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>if exists(select 1 from systypes where name=&#39;%DOMAIN%&#39;) then
   drop datatype %DOMAIN%
end if</a:TextTargetItem.Value>
<a:Comment>Command for dropping a user defined data type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o340">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o341">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o342">
<a:Name>EnableBindRule</a:Name>
<a:Comment>Allows the binding of a business rule to a domain</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o343">
<a:Name>SqlListDefaultQuery</a:Name>
<a:Comment>SQL query to list default values</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o344">
<a:Name>Bind</a:Name>
<a:Comment>Command for binding a rule to a domain</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o345">
<a:Name>Unbind</a:Name>
<a:Comment>Command for unbinding a rule from a domain</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o346">
<a:Name>EnableCheck</a:Name>
<a:Comment>Allows the creation of checks on the domain</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o347">
<a:Name>EnableDefault</a:Name>
<a:Comment>Allows default value creation on domain</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o348">
<a:Name>UddtComment</a:Name>
<a:TextTargetItem.Value>comment on user-defined data type [%QUALIFIER%]%DOMAIN% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding a user-defined data type comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o349">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o350">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o351">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o352">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o353">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o354">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o355">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o356">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o357">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o358">
<a:Name>EnableOwner</a:Name>
<a:Comment>Owner allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o359">
<a:Name>Abstract Data Type</a:Name>
<a:Code>ADT</a:Code>
<a:Comment>The following system variables are available:
   &quot;ADT&quot;          // generated code of the abstract data type
   &quot;TYPE&quot;         // ADT type
   &quot;SIZE&quot;         // ADT size
   &quot;FILE&quot;         // ADT: Java file
   &quot;ISARRAY&quot;      // ADT: is an array?
   &quot;ISLIST&quot;       // ADT: is a list?
   &quot;ISSTRUCT&quot;     // ADT: is a structure?
   &quot;ISOBJECT&quot;     // ADT: is an object?
   &quot;ISJAVA&quot;       // ADT: is a JAVA class?
   &quot;ADTDEF&quot;       // ADT definition
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o360">
<a:Name>Enable</a:Name>
<a:Comment>Abstract Data Types allowed</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o361">
<a:Name>EnableAdtOnDomn</a:Name>
<a:Comment>Abstract Data Types allowed on domain</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o362">
<a:Name>EnableAdtOnColn</a:Name>
<a:Comment>Abstract Data Types allowed on column</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o363">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o364">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o365">
<a:Name>Create</a:Name>
<a:Comment>Command for adding an abstract data type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o366">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping an abstract data type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o367">
<a:Name>Install</a:Name>
<a:Comment>Command for installing an abstract data type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o368">
<a:Name>Remove</a:Name>
<a:Comment>Command for uninstalling an abstract data type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o369">
<a:Name>AllowedADT</a:Name>
<a:Comment>List of ADTs which can be used as the datatype of an ADT type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o370">
<a:Name>ADTComment</a:Name>
<a:TextTargetItem.Value>comment on abstract datat type [%QUALIFIER%]%ADT% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding an abstract data type comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o371">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o372">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o373">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o374">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o375">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o376">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o377">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o378">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o379">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for an abstract data type.
The first column is the SQL name of permission (eg: EXECUTE)
The second column is a shortname to display in a grid</a:Comment>
</o:MapTargetItem>
<o:TextTargetItem Id="o380">
<a:Name>SqlPermQuery</a:Name>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o381">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o382">
<a:Name>Abstract Data Type Attribute</a:Name>
<a:Code>ATTR</a:Code>
<a:Comment>The following system variables are available:
   &quot;ADTATTR&quot;      // generated code of the abstract data type attribute
</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o383">
<a:Name>Create</a:Name>
<a:Comment>Command for adding an abstract data type attribute</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o384">
<a:Name>Modify</a:Name>
<a:Comment>Command for modifying an abstract data type attribute</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o385">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping an abstract data type attribute</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o386">
<a:Name>Add</a:Name>
<a:Comment>Command for defining an abstract data type attribute</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o387">
<a:Name>AllowedADT</a:Name>
<a:Comment>List of ADTs which can be used as the datatype of an ADT attribute</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o388">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o389">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o390">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o391">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o392">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o393">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o394">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o395">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o396">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o397">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o398">
<a:Name>User</a:Name>
<a:Code>USER</a:Code>
<a:Comment>The following system variables are available:
   &quot;USER&quot;         // generated code of the user
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o399">
<a:Name>Enable</a:Name>
<a:Comment>User allowed</a:Comment>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o400">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>128</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o401">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o402">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o403">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a user</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o404">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a user</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o405">
<a:Name>SqlPermQuery</a:Name>
<a:Comment>Query to reverse privileges</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o406">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o407">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o408">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o409">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o410">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o411">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o412">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o413">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o414">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o415">
<a:Name>Rule</a:Name>
<a:Code>RULE</a:Code>
<a:Comment>The following system variables are available:
   &quot;RULE&quot;         // generated code of the rule
   &quot;RULENAME&quot;     // rule name
   &quot;RULECODE&quot;     // rule code
   &quot;RULECEXPR&quot;    // rule client expression
   &quot;RULESEXPR&quot;    // rule server expression
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o416">
<a:Name>Enable</a:Name>
<a:Comment>Rule allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o417">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o418">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o419">
<a:Name>Create</a:Name>
<a:Comment>Command for adding a rule</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o420">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a rule</a:Comment>
</o:TextTargetItem>
<o:IntegerTargetItem Id="o421">
<a:Name>MaxDefaultLen</a:Name>
<a:Comment>Length of name of default</a:Comment>
<a:IntegerTargetItem.Value>254</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:StringTargetItem Id="o422">
<a:Name>UddtDefaultName</a:Name>
<a:Comment>Name of default for domain</a:Comment>
</o:StringTargetItem>
<o:StringTargetItem Id="o423">
<a:Name>ColnDefaultName</a:Name>
<a:Comment>Name of default for column</a:Comment>
</o:StringTargetItem>
<o:IntegerTargetItem Id="o424">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>254</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:StringTargetItem Id="o425">
<a:Name>UddtRuleName</a:Name>
<a:Comment>Name of rules for domains</a:Comment>
</o:StringTargetItem>
<o:StringTargetItem Id="o426">
<a:Name>ColnRuleName</a:Name>
<a:Comment>Name of rules for columns</a:Comment>
</o:StringTargetItem>
<o:TextTargetItem Id="o427">
<a:Name>RuleComment</a:Name>
<a:TextTargetItem.Value>comment on rule [%QUALIFIER%]%RULE% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding a rule comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o428">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o429">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o430">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o431">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o432">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o433">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o434">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o435">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o436">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o437">
<a:Name>Procedure</a:Name>
<a:Code>PROC</a:Code>
<a:Comment>The following system variables are available:
   &quot;PROC&quot;         // generated code of the procedure (also available for trigger when the trigger is implemented with a procedure)
   &quot;FUNC&quot;         // generated code of the procedure if the procedure is a function (with return value)
   &quot;PROCPRMS&quot;     // list of parameters of the procedure (also available for function)
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o438">
<a:Name>Enable</a:Name>
<a:Comment>Procedure allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o439">
<a:Name>EnableFunc</a:Name>
<a:Comment>Function allowed</a:Comment>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o440">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>128</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:IntegerTargetItem Id="o441">
<a:Name>MaxFuncLen</a:Name>
<a:Comment>Function name length</a:Comment>
<a:IntegerTargetItem.Value>128</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o442">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create %MacroType% macro %PROC% 
%TRGDEFN%</a:TextTargetItem.Value>
<a:Comment>Command for creating a procedure. Example: create procedure %PROC% %TRGDEFN%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o443">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>if exists(select 1 from sys.sysprocedure where proc_name = &#39;%PROC%&#39;) then
   drop procedure %PROC%
end if</a:TextTargetItem.Value>
<a:Comment>Command for dropping a procedure. Example: drop procedure %PROC%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o444">
<a:Name>CreateFunc</a:Name>
<a:Comment>Command for creating a function. Example: create function %FUNC% %TRGDEFN%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o445">
<a:Name>DropFunc</a:Name>
<a:Comment>Command for dropping a function. Example: drop function %FUNC%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o446">
<a:Name>CustomProc</a:Name>
<a:Comment>Command for creating a stored procedure</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o447">
<a:Name>CustomFunc</a:Name>
<a:TextTargetItem.Value>create %MacroType% macro %PROC% 
%TRGDEFN%</a:TextTargetItem.Value>
<a:Comment>Command for creating a function</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o448">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{PROC, MacroType}

select
   p.name,
   p.type
from 
   rbw_macros p
order by 1</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o449">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{PROC, TRGDEFN}

select
   p.name,
   TRIM(p.text) 
from
   rbw_macros p
[where 
   p.name=%.q:PROC%]</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o450">
<a:Name>ProcedureComment</a:Name>
<a:Comment>command for adding a procedure comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o451">
<a:Name>FunctionComment</a:Name>
<a:Comment>command for adding a procedure comment</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o452">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a procedure.
The first column is the SQL name of permission (eg: EXECUTE)
The second column is a shortname to display in a grid</a:Comment>
</o:MapTargetItem>
<o:TextTargetItem Id="o453">
<a:Name>SqlPermQuery</a:Name>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o454">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o455">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o456">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o457">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o458">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o459">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o460">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o461">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o462">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o463">
<a:Name>EnableOwner</a:Name>
<a:Comment>Owner allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o464">
<a:Name>EnableGrantOption</a:Name>
<a:Comment>Allow to grant with grant option</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o465">
<a:Name>Trigger</a:Name>
<a:Code>TRGR</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for indexes)
 trigger object specific items
   &quot;ORDER&quot;        // order number of the trigger (to sort the triggers when the DBMS supports more than one trigger of one type)
   &quot;TRIGGER&quot;      // generated code of trigger
   &quot;TRGTYPE&quot;      // trigger type (keywords &quot;beforeinsert&quot;, &quot;afterupdate&quot;, ...)
   &quot;TRGEVENT&quot;     // trigger event (keywords &quot;insert&quot;, &quot;update&quot;, &quot;delete&quot;)
   &quot;TRGTIME&quot;      // trigger time (keywords NULL, &quot;before&quot;, &quot;after&quot;)
 inside the body of the trigger, macros redefine variables on objects
   &quot;REFNO&quot;        // reference position in the list of references of the table
 customized error messages management
   &quot;ERRNO&quot;        // error number for standard error
   &quot;ERRMSG&quot;       // error message for standard error
   &quot;MSGTAB&quot;       // name of the table containing user-defined error messages
   &quot;MSGNO&quot;        // in the user-defined error table, name of the column containing the error numbers
   &quot;MSGTXT&quot;       // in the user-defined error table, name of the column containing the error messages
   &quot;SCRIPT&quot;       // body of trigger or procedure
   &quot;TRGDEFN&quot;      // complete body of the trigger definition. Contains variable declarations and body of trigger or procedure
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o466">
<a:Name>Enable</a:Name>
<a:Comment>Trigger allowed</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o467">
<a:Name>EnableMultiTrigger</a:Name>
<a:Comment>Multi trigger allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o468">
<a:Name>DefaultTriggerName</a:Name>
<a:TextTargetItem.Value>%TEMPLATE%_%.L:TABLE%</a:TextTargetItem.Value>
<a:Comment>Default trigger name</a:Comment>
</o:TextTargetItem>
<o:IntegerTargetItem Id="o469">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>30</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o470">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create trigger on [%QUALIFIER%]%TABLE% %TRGDEFN%</a:TextTargetItem.Value>
<a:Comment>Command for creating a trigger. Example: create trigger on [%QUALIFIER%]%TABLE% %TRGDEFN%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o471">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a trigger. Example: drop trigger %TRIGGER%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o472">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o473">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o474">
<a:Name>UseErrorMsgTable</a:Name>
<a:Comment>Errors handling using an error messages table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o475">
<a:Name>UseErrorMsgText</a:Name>
<a:Comment>Errors handling using fixed error messages</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o476">
<a:Name>TriggerComment</a:Name>
<a:TextTargetItem.Value>comment on trigger [%QUALIFIER%]%TRIGGER% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding a trigger comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o477">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o478">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o479">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o480">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o481">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o482">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o483">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o484">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o485">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o486">
<a:Name>Time</a:Name>
<a:Comment>Extended trigger times list.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o487">
<a:Name>Event</a:Name>
<a:Comment>Extended trigger events list.</a:Comment>
</o:TextTargetItem>
<o:StringTargetItem Id="o488">
<a:Name>EventDelimiter</a:Name>
<a:Comment>Events separation character.</a:Comment>
</o:StringTargetItem>
<o:BooleanTargetItem Id="o489">
<a:Name>EnableOwner</a:Name>
<a:Comment>Owner allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o490">
<a:Name>Join Index</a:Name>
<a:Code>JIDX</a:Code>
<a:Comment>The following system variables are available:
   &quot;JIDX&quot;         // generated code for join index
   &quot;JIDXDEFN&quot;     // complete body of join index definition
   &quot;REFRLIST&quot;     // list of references (for ODBC)
   &quot;RFJNLIST&quot;     // list of reference joins (for ODBC)
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o491">
<a:Name>Enable</a:Name>
<a:Comment>Join index allowed</a:Comment>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o492">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>128</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o493">
<a:Name>Options</a:Name>
<a:Comment>Available options for creating a join index</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o494">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for join index options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o495">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a join index</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o496">
<a:Name>Header</a:Name>
<a:Comment>Join index header</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o497">
<a:Name>Add</a:Name>
<a:Comment>Command for adding a join index</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o498">
<a:Name>Footer</a:Name>
<a:Comment>Join index footer</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o499">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a join index</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o500">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o501">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o502">
<a:Name>AddJoin</a:Name>
<a:Comment>SQL command use to define join for join indexes (example: Table1.Col1 = Table2.Col2)</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o503">
<a:Name>JoinIndexComment</a:Name>
<a:TextTargetItem.Value>comment on join [%QUALIFIER%]%JIDX% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding a join index comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o504">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o505">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o506">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o507">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o508">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o509">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o510">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o511">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o512">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o513">
<a:Name>EnableOwner</a:Name>
<a:Comment>Owner allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o514">
<a:Name>Qualifier</a:Name>
<a:Comment>Manages the use of qualifier in ODBC reverse engineering</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o515">
<a:Name>Enable</a:Name>
<a:Comment>Allows using the qualifier combo box during ODBC reverse engineering</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o516">
<a:Name>SqlListQuery</a:Name>
<a:Comment>Query to retrieve qualifier during ODBC reverse engineering</a:Comment>
</o:TextTargetItem>
<o:StringTargetItem Id="o517">
<a:Name>Label</a:Name>
<a:Comment>Label for &lt;All&gt; in qualifier selection list</a:Comment>
<a:StringTargetItem.Value>All qualifiers</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:TextTargetItem Id="o518">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o519">
<a:Name>Sequence</a:Name>
<a:Code>SQNC</a:Code>
<a:Comment>The following system variables are available:
   &quot;SQNC&quot;         // generated code of the sequence
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o520">
<a:Name>Enable</a:Name>
<a:Comment>Sequence allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o521">
<a:Name>Create</a:Name>
<a:Comment>Command to create a sequence</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o522">
<a:Name>Drop</a:Name>
<a:Comment>Command to drop a sequence</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o523">
<a:Name>Options</a:Name>
<a:Comment>Options for creating a sequence</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o524">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for sequence options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o525">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o526">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o527">
<a:Name>Rename</a:Name>
<a:Comment>Command for renaming a sequence</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o528">
<a:Name>EnableOwner</a:Name>
<a:Comment>Owner allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o529">
<a:Name>SequenceComment</a:Name>
<a:TextTargetItem.Value>comment on sequence [%QUALIFIER%]%SQNC% is
%.q:COMMENT%</a:TextTargetItem.Value>
<a:Comment>command for adding a sequence comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o530">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o531">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o532">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o533">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o534">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o535">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o536">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o537">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o538">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a sequence.
The first column is the SQL name of permission
The second column is a shortname to display in a grid</a:Comment>
</o:MapTargetItem>
<o:TextTargetItem Id="o539">
<a:Name>SqlPermQuery</a:Name>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o540">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:IntegerTargetItem Id="o541">
<a:Name>MaxConstLen</a:Name>
<a:Comment>Maximum constraint name length</a:Comment>
<a:IntegerTargetItem.Value>128</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:BooleanTargetItem Id="o542">
<a:Name>EnableOption</a:Name>
<a:Comment>Physical options allowed  YES/NO</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TargetCategory Id="o543">
<a:Name>Synonym</a:Name>
<a:Code>SYNM</a:Code>
<a:Comment>Manages the synonym object.</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o544">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a synonym.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o545">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a synonym.</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o546">
<a:Name>Enable</a:Name>
<a:Comment>Synonym allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o547">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o548">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o549">
<a:Name>EnableAlias</a:Name>
<a:Comment>Enable synonym of alias type.</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o550">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o551">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o552">
<a:Name>PublicOwner</a:Name>
<a:Comment>TRUE when the owner is PUBLIC for a public synonym</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o553">
<a:Name>Group</a:Name>
<a:Code>GRPE</a:Code>
<a:Comment>Manages the group object.</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o554">
<a:Name>Enable</a:Name>
<a:Comment>Group allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o555">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a group.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o556">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a group.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o557">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o558">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o559">
<a:Name>Bind</a:Name>
<a:Comment>Command for adding a member to a group</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o560">
<a:Name>Unbind</a:Name>
<a:Comment>Command for removing a member from a group</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o561">
<a:Name>SqlListChildrenQuery</a:Name>
<a:Comment>SQL query to list members of the group</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o562">
<a:Name>SqlPermQuery</a:Name>
<a:Comment>Query to reverse privileges</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o563">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o564">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o565">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o566">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o567">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o568">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o569">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o570">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:IntegerTargetItem Id="o571">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>254</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o572">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o573">
<a:Name>ObjectOwner</a:Name>
<a:Comment>Allow a group to be an object owner.</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o574">
<a:Name>Role</a:Name>
<a:Code>ROLE</a:Code>
<a:Comment>Manages the role object.</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o575">
<a:Name>Enable</a:Name>
<a:Comment>Role allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o576">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a role.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o577">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a role.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o578">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o579">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o580">
<a:Name>Bind</a:Name>
<a:Comment>Command for assigning a role to a user or another role</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o581">
<a:Name>Unbind</a:Name>
<a:Comment>Command for unassiging a role from a user or another role</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o582">
<a:Name>SqlListChildrenQuery</a:Name>
<a:Comment>SQL query to list assigned ids to the role.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o583">
<a:Name>SqlPermQuery</a:Name>
<a:Comment>Query to reverse privileges</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o584">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o585">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o586">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o587">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o588">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o589">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o590">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o591">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:IntegerTargetItem Id="o592">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>254</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o593">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o594">
<a:Name>DB Package</a:Name>
<a:Code>DBPK</a:Code>
<a:Comment>Manages the database package</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o595">
<a:Name>Enable</a:Name>
<a:Comment>Database package allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o596">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a database package.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o597">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a database package.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o598">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o599">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o600">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o601">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o602">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o603">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o604">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o605">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o606">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o607">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:IntegerTargetItem Id="o608">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o609">
<a:Name>CreateBody</a:Name>
<a:Comment>Command for creating the database package body</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o610">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a database package.
The first column is the SQL name of permission (eg: EXECUTE)
The second column is a shortname to display in a grid</a:Comment>
</o:MapTargetItem>
<o:TextTargetItem Id="o611">
<a:Name>SqlPermQuery</a:Name>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o612">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o613">
<a:Name>DB Package Procedure</a:Name>
<a:Code>PDMPKPR</a:Code>
<a:Comment>Manages the database package procedure</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o614">
<a:Name>Add</a:Name>
<a:Comment>Command for defining a procedure</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o615">
<a:Name>ParameterTypes</a:Name>
<a:Comment>Available types for database package procedure</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o616">
<a:Name>DBProcedureBody</a:Name>
<a:Comment>Template for the body of a database package procedure</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o617">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o618">
<a:Name>DB Package Variable</a:Name>
<a:Code>PDMPKVA</a:Code>
<a:Comment>Manages the database package variable</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o619">
<a:Name>Add</a:Name>
<a:Comment>Command for defining a variable</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o620">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o621">
<a:Name>DB Package Type</a:Name>
<a:Code>PDMPKTY</a:Code>
<a:Comment>Manages the database package type</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o622">
<a:Name>Add</a:Name>
<a:Comment>Command for defining a type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o623">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o624">
<a:Name>DB Package Cursor</a:Name>
<a:Code>PDMPKCU</a:Code>
<a:Comment>Manages the database package cursor</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o625">
<a:Name>Add</a:Name>
<a:Comment>Command for defining a cursor</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o626">
<a:Name>ParameterTypes</a:Name>
<a:Comment>Available types for database package cursor</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o627">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o628">
<a:Name>DB Package Exception</a:Name>
<a:Code>PDMPKEX</a:Code>
<a:Comment>Manages the database package exception</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o629">
<a:Name>Add</a:Name>
<a:Comment>Command for defining an exception</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o630">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o631">
<a:Name>DB Package Pragma</a:Name>
<a:Code>PDMPKPA</a:Code>
<a:Comment>Manages the database package pragma directive</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o632">
<a:Name>Add</a:Name>
<a:Comment>Command for defining a pragma directive</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o633">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o634">
<a:Name>Privilege</a:Name>
<a:Comment>Manages the system privileges for a user, role or group</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o635">
<a:Name>Create</a:Name>
<a:Comment>Command for granting privileges.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o636">
<a:Name>Drop</a:Name>
<a:Comment>Command for revoking privileges.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o637">
<a:Name>System</a:Name>
<a:Comment>List of system privileges</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o638">
<a:Name>GrantOption</a:Name>
<a:Comment>Option for the grant statement.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o639">
<a:Name>RevokeOption</a:Name>
<a:Comment>Option for the revoke statement.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o640">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o641">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o642">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o643">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o644">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o645">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o646">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o647">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o648">
<a:Name>Enable</a:Name>
<a:Comment>Privilege allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o649">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o650">
<a:Name>Exclusive</a:Name>
<a:Comment>TRUE if the system privileges are exclusive.</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o651">
<a:Name>RevokeInherited</a:Name>
<a:Comment>Allows to revoke an inherited privilege from a group or a role.</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o652">
<a:Name>OverloadInherited</a:Name>
<a:Comment>Allows to set the same privilege as the one inherited</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o653">
<a:Name>Permission</a:Name>
<a:Code>PERM</a:Code>
<a:Comment>Manages the permissions on database objects</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o654">
<a:Name>Create</a:Name>
<a:Comment>Command for granting permissions.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o655">
<a:Name>Drop</a:Name>
<a:Comment>Command for revoking permissions.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o656">
<a:Name>GrantOption</a:Name>
<a:Comment>Option for the grant statement.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o657">
<a:Name>RevokeOption</a:Name>
<a:Comment>Option for the revoke statement.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o658">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o659">
<a:Name>Enable</a:Name>
<a:Comment>Permission allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o660">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o661">
<a:Name>RevokeInherited</a:Name>
<a:Comment>Allow to revoke an inherited permission from a group or a role.</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o662">
<a:Name>OverloadInherited</a:Name>
<a:Comment>Allows to set the same privilege as the one inherited</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o663">
<a:Name>Default</a:Name>
<a:Code>DFLT</a:Code>
<a:Comment>The following system variables are available:
   &quot;DEFAULT&quot;      // generated code of the default
   &quot;VALUE&quot;        // value of the default object
   &quot;BOUND_OBJECT&quot; // the generated code (including qualifier and parent) of the object which is bound to the default
   &quot;SCRIPT&quot;       // the create default body
</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o664">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a default.
Example: create default %DEFAULT% as %VALUE%</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o665">
<a:Name>Enable</a:Name>
<a:Comment>Defaults allowed</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o666">
<a:Name>AfterCreate</a:Name>
<a:Comment>Commands executed after create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o667">
<a:Name>AfterDrop</a:Name>
<a:Comment>Commands executed after drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o668">
<a:Name>AfterModify</a:Name>
<a:Comment>Commands executed after modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o669">
<a:Name>BeforeCreate</a:Name>
<a:Comment>Commands executed before create statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o670">
<a:Name>BeforeDrop</a:Name>
<a:Comment>Commands executed before drop statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o671">
<a:Name>BeforeModify</a:Name>
<a:Comment>Commands executed before modify action</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o672">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>if exists(select 1 from systypes where name=&#39;%DOMAIN%&#39;) then
   drop datatype %DOMAIN%
end if</a:TextTargetItem.Value>
<a:Comment>Command for dropping a default</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o673">
<a:Name>ModifiableAttributes</a:Name>
<a:Comment>List of extended attributes which provoke a modify when changed</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o674">
<a:Name>ReversedQueries</a:Name>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o675">
<a:Name>ReversedStatements</a:Name>
<a:Comment>Additional statements to be reversed by script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o676">
<a:Name>SqlAttrQuery</a:Name>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o677">
<a:Name>SqlListQuery</a:Name>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o678">
<a:Name>Bind</a:Name>
<a:Comment>Command for binding a default object to a domain or a column</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o679">
<a:Name>EnableOwner</a:Name>
<a:Comment>Owner allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o680">
<a:Name>Unbind</a:Name>
<a:Comment>Command for unbinding a default value from an object (domain or column)</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o681">
<a:Name>DataType</a:Name>
<a:Comment>Contains data type translation entries. These entries list the correspondence between internal data types and the target database data types</a:Comment>
<c:Categories>
<o:MapTargetItem Id="o682">
<a:Name>AmcdDataType</a:Name>
<a:Comment>Data types translation table from internal data types to target database data types.
        %n is the length of the data type
        %s is the size of the data type
        %p is the precision of the data type</a:Comment>
<a:MapTargetItem.Value>&lt;UNDEF&gt; = &lt;undefined&gt;
A%n     = CHAR(%n)
VA%n    = CHARACTER(%n)
LA      = CHARACTER
LA%n    = CHARACTER(%n)
LVA     = CHARACTER
LVA%n   = CHARACTER(%n)
BT      = TINYINT
BT%n    = SMALLINT
SI      = SMALLINT
I       = INTEGER
LI      = INTEGER
N       = NUMERIC
N%n     = NUMERIC(%n)
N%s,%p  = NUMERIC(%s,%p)
DC      = DECIMAL
DC%n    = DECIMAL(%n)
DC%s,%p = DECIMAL(%s,%p)
SF      = REAL
F       = FLOAT
F%n     = FLOAT
LF      = DOUBLE PRECISION
MN      = NUMERIC(8,2)
MN%n    = NUMERIC(%n)
MN%s,%p = NUMERIC(%s,%p)
D       = DATE
T       = TIME
DT      = DATE
TS      = TIMESTAMP
BL      = SMALLINT
NO      = NUMERIC(6)
NO%n    = NUMERIC(%n)
BIN%n   = CHAR(%n)
LBIN    = CHAR(255)
LBIN%n  = CHAR(255)
TXT     = CHAR(255)
TXT%n   = CHAR(255)
MBT     = CHAR(1)
MBT%n   = CHAR(%n)
VMBT    = CHAR(255)
VMBT%n  = CHAR(%n)
PIC     = CHAR(255)
PIC%n   = CHAR(255)
BMP     = CHAR(255)
BMP%n   = CHAR(255)
OLE     = CHAR(255)
OLE%n   = CHAR(255)
*       = CHAR(10)</a:MapTargetItem.Value>
<a:List>&lt;UNDEF&gt;
A%n
VA%n
LA
LA%n
LVA
LVA%n
BT
BT%n
SI
I
LI
N
N%n
N%s,%p
DC
DC%n
DC%s,%p
SF
F
F%n
LF
MN
MN%n
MN%s,%p
D
T
DT
TS
BL
NO
NO%n
BIN%n
LBIN
LBIN%n
TXT
TXT%n
MBT
MBT%n
VMBT
VMBT%n
PIC
PIC%n
BMP
BMP%n
OLE
OLE%n
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o683">
<a:Name>PhysDataType</a:Name>
<a:Comment>Data types translation table from target database data types to internal data types.</a:Comment>
<a:MapTargetItem.Value>&lt;undefined&gt;   = &lt;UNDEF&gt;
CHAR(%n)      = A%n
CHARACTER(%n) = VA%n
CHARACTER     = LVA
NUMERIC       = N
NUMERIC(%n)   = N%n
NUMERIC(%s,%p)= N%s,%p
DECIMAL       = DC
DECIMAL(%n)   = DC%n
DECIMAL(%s,%p)= DC%s,%p
DEC           = DC
DEC(%n)       = DC%n
DEC(%s,%p)    = DC%s,%p
INTEGER       = I
INT           = I
TINYINT       = BT
SMALLINT      = SI
REAL          = SF
FLOAT         = F
DOUBLE PRECISION = LF
DATE          = D
TIME          = T
TIMESTAMP     = TS
*             = A10</a:MapTargetItem.Value>
<a:List>&lt;undefined&gt;
CHAR(%n)
CHARACTER(%n)
CHARACTER
NUMERIC
NUMERIC(%n)
NUMERIC(%s,%p)
DECIMAL
DECIMAL(%n)
DECIMAL(%s,%p)
DEC
DEC(%n)
DEC(%s,%p)
INTEGER
INT
TINYINT
SMALLINT
REAL
FLOAT
DOUBLE PRECISION
DATE
TIME
TIMESTAMP
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o684">
<a:Name>PhysDttpSize</a:Name>
<a:Comment>Table of storage sizes of target database data type</a:Comment>
<a:MapTargetItem.Value>numeric=18
decimal=18
time=8
timestamp=8</a:MapTargetItem.Value>
<a:List>numeric
decimal
time
timestamp
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o685">
<a:Name>OdbcPhysDataType</a:Name>
<a:Comment>Data types translation table from ODBC data types to target database data types.</a:Comment>
</o:MapTargetItem>
<o:MapTargetItem Id="o686">
<a:Name>PhysOdbcDataType</a:Name>
<a:Comment>Data types translation table from target database data types to ODBC data types.</a:Comment>
</o:MapTargetItem>
<o:MapTargetItem Id="o687">
<a:Name>PhysLogADTType</a:Name>
<a:Comment>Abstract Data types translation table from target database abstract data types to internal abstract data types.</a:Comment>
</o:MapTargetItem>
<o:MapTargetItem Id="o688">
<a:Name>LogPhysADTType</a:Name>
<a:Comment>Abstract Data types translation table from internal abstract data types to target database abstract data types.</a:Comment>
</o:MapTargetItem>
<o:TextTargetItem Id="o689">
<a:Name>AllowedADT</a:Name>
<a:Comment>The list of ADT which can be used as the datatype of a domain or column</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o690">
<a:Name>HostDataType</a:Name>
<a:Comment>Data types translation from database data type to procedure data type</a:Comment>
</o:MapTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o691">
<a:Name>Odbc</a:Name>
<a:Comment>DBMS characteristics, command definition, and data type translations for the ODBC generation and reverse engineering</a:Comment>
</o:TargetCategory>
<o:ProfileTargetItem Id="o692">
<a:Name>Profile</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TargetCategory Id="o693">
<a:Name>Shared</a:Name>
<a:Code>Shared</a:Code>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TypedCategoryTargetItem Id="o694">
<a:TypePublicName>ExtendedAttributeTypeTargetItem</a:TypePublicName>
<a:Name>Extended Attribute Types</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:ExtendedAttributeTypeTargetItem Id="o695">
<a:ObjectID>6BA75089-E0A7-4C49-928F-2C8E3A78D35C</a:ObjectID>
<a:Name>MacroTypeList</a:Name>
<a:Comment>A temporary macro name is created during a user&#39;s session, exists only for the duration of that session, and can be accessed only by its creator. If a client tool disconnects from the database server during an interaction, temporary macros are dropped.
A public macro name is created independently of the user&#39;s session, resides in the RBW_MACROS system table, and exists until removed by a DROP PUBLIC MACRO statement. It is accessible by all users.
A private macro is created independently of the user&#39;s session, resides in the RBW_MACROS system table until dropped by its creator, and can only be accessed by its creator.</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTypeTargetItem.Value>Private</a:ExtendedAttributeTypeTargetItem.Value>
<a:ExtendedAttributeTypeTargetItem.ListOfValues>Public
Temporary</a:ExtendedAttributeTypeTargetItem.ListOfValues>
</o:ExtendedAttributeTypeTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:TargetCategory>
<o:MetaClassTargetItem Id="o696">
<a:Name>Column</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TypedCategoryTargetItem Id="o697">
<a:TypePublicName>ExtendedAttributeTargetItem</a:TypePublicName>
<a:Name>Extended Attributes</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:ExtendedAttributeTargetItem Id="o698">
<a:ObjectID>ABE7B34B-5653-423F-8832-6F5858DB6CCA</a:ObjectID>
<a:Name>IsUnique</a:Name>
<a:Comment>Declares that duplicate values are not allowed in the column.
Declaring a column UNIQUE does not enforce uniqueness on the column; to enforce uniqueness, you must also build a BTREE index on the column.</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTargetItem.Value>false</a:ExtendedAttributeTargetItem.Value>
</o:ExtendedAttributeTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o699">
<a:TypePublicName>FormTargetItem</a:TypePublicName>
<a:Name>Forms</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:FormTargetItem Id="o700">
<a:Name>Red Brick</a:Name>
<a:FormTargetItem.Value>&lt;Form  &gt;
   &lt;ExtendedAttribute Name=&quot;IsUnique&quot; Caption=&quot;Unique&quot; Attribute=&quot;IsUnique&quot; AttributeID=&quot;{ABE7B34B-5653-423F-8832-6F5858DB6CCA}&quot; GrayHiddenAttributes=&quot;Yes&quot; /&gt;
&lt;/Form&gt;
</a:FormTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:FormTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:MetaClassTargetItem>
<o:MetaClassTargetItem Id="o701">
<a:Name>Procedure</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TypedCategoryTargetItem Id="o702">
<a:TypePublicName>ExtendedAttributeTargetItem</a:TypePublicName>
<a:Name>Extended Attributes</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:ExtendedAttributeTargetItem Id="o703">
<a:ObjectID>7B3F7F7D-408C-479C-BAC2-83161AEDA885</a:ObjectID>
<a:Name>MacroType</a:Name>
<a:Comment>A macro can be temporary, public, or private: see MacroTypeList for details.
If neither temporary nor public is specified, a private macro is created by default.</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTargetItem.DataType>-1</a:ExtendedAttributeTargetItem.DataType>
<c:ExtendedAttributeType>
<o:ExtendedAttributeTypeTargetItem Ref="o695"/>
</c:ExtendedAttributeType>
</o:ExtendedAttributeTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o704">
<a:TypePublicName>FormTargetItem</a:TypePublicName>
<a:Name>Forms</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:FormTargetItem Id="o705">
<a:Name>Red Brick</a:Name>
<a:FormTargetItem.Value>&lt;Form  &gt;
   &lt;ExtendedAttribute Name=&quot;MacroType&quot; Caption=&quot;Macro type&quot; Attribute=&quot;MacroType&quot; AttributeID=&quot;{7B3F7F7D-408C-479C-BAC2-83161AEDA885}&quot; GrayHiddenAttributes=&quot;Yes&quot; /&gt;
&lt;/Form&gt;
</a:FormTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:FormTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:MetaClassTargetItem>
</c:Categories>
</o:ProfileTargetItem>
</c:Categories>
</o:DBMS>

</DBMS>