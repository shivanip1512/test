<?xml version="1.0" encoding="UTF-8"?>
<?PowerDesigner AppLocale="UTF16" Code="LOGICAL" Family="LOGICAL" Name="&lt;Logical Model&gt;" signature="XDB_XML" version="12.0.0.1642"?>
<!-- do not edit this file -->

<DBMS xmlns:a="attribute" xmlns:c="collection" xmlns:o="object">

<o:DBMS Id="o1">
<a:ObjectID>96528010-1009-442B-A79D-9056F70E2A73</a:ObjectID>
<a:Name>&lt;Logical Model&gt;</a:Name>
<a:Code>LOGICAL</a:Code>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1084893031</a:ModificationDate>
<a:Modifier>fleysour</a:Modifier>
<a:Family>LOGICAL</a:Family>
<a:CheckGlobalScript>&#39;******************************************************************************
&#39;* Purpose:  This VB-Script holds global definitions shared by all the custom-
&#39;*            checks scripts of the model extension.
&#39;******************************************************************************

Option Explicit &#39; This is to ensure all used variables are defined

</a:CheckGlobalScript>
<c:Categories>
<o:TargetCategory Id="o2">
<a:Name>General</a:Name>
<a:Comment>Target DBMS identification</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o3">
<a:Name>SqlSupport</a:Name>
<a:Comment>SQL syntax allowed. This does not impact the script generation, but it impacts the SQL Preview</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o4">
<a:Name>EnableCheck</a:Name>
<a:Comment>Determines if the generation of check parameters is authorized or not</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o5">
<a:Name>EnableIntegrity</a:Name>
<a:Comment>Allows integrity constraints in the DBMS. This controls whether generation parameters for primary, foreign, and alternate keys are grayed or available</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o6">
<a:Name>Enableconstname</a:Name>
<a:Comment>Determines if constraint names are used during the generation</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o7">
<a:Name>UniqConstName</a:Name>
<a:Comment>Determines if unique constraint names for objects are authorized or not</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o8">
<a:Name>EnableMultiCheck</a:Name>
<a:Comment>Determines if the generation of multiple check parameters is authorized or not</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o9">
<a:Name>Script</a:Name>
<a:Comment>DBMS characteristics, command definition, and data type translations for the Script generation and reverse engineering</a:Comment>
<c:Categories>
<o:TargetCategory Id="o10">
<a:Name>Sql</a:Name>
<a:Comment>Contains sub-categories Syntax, Format, File and Keywords. Each sub-category contains entries whose values define general syntax for the database</a:Comment>
<c:Categories>
<o:TargetCategory Id="o11">
<a:Name>Syntax</a:Name>
<a:Comment>Contains general parameters for SQL syntax</a:Comment>
<c:Categories>
<o:CharacterTargetItem Id="o12">
<a:Name>Terminator</a:Name>
<a:Comment>End of command character</a:Comment>
</o:CharacterTargetItem>
<o:StringTargetItem Id="o13">
<a:Name>BlockTerminator</a:Name>
<a:Comment>End of block character</a:Comment>
</o:StringTargetItem>
<o:CharacterTargetItem Id="o14">
<a:Name>Delimiter</a:Name>
<a:Comment>Field separation character. Example: col1, col2, col3</a:Comment>
<a:CharacterTargetItem.Value>,</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:CharacterTargetItem Id="o15">
<a:Name>Quote</a:Name>
<a:Comment>Character used to enclose string values</a:Comment>
<a:CharacterTargetItem.Value>&#39;</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:CharacterTargetItem Id="o16">
<a:Name>SqlContinue</a:Name>
<a:Comment>Continuation character</a:Comment>
</o:CharacterTargetItem>
<o:StringTargetItem Id="o17">
<a:Name>BlockComment</a:Name>
<a:Comment>Characters used to enclose a multi-line comment</a:Comment>
</o:StringTargetItem>
<o:StringTargetItem Id="o18">
<a:Name>LineComment</a:Name>
<a:Comment>Characters used to enclose a single line comment</a:Comment>
</o:StringTargetItem>
<o:BooleanTargetItem Id="o19">
<a:Name>UseBlockTerm</a:Name>
<a:Comment>Use end of block character by default</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o20">
<a:Name>Format</a:Name>
<a:Comment>Contains entries that define script formatting</a:Comment>
<c:Categories>
<o:StringTargetItem Id="o21">
<a:Name>IllegalChar</a:Name>
<a:Comment>Invalid characters for names</a:Comment>
<a:StringTargetItem.Value>&quot;&quot;</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:BooleanTargetItem Id="o22">
<a:Name>UpperCaseOnly</a:Name>
<a:Comment>Uppercase only</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o23">
<a:Name>LowerCaseOnly</a:Name>
<a:Comment>Lowercase only</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o24">
<a:Name>EnableOwnerPrefix</a:Name>
<a:Comment>Object codes can have a prefix made of the object owner code</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o25">
<a:Name>EnableDtbsPrefix</a:Name>
<a:Comment>Object codes can have a prefix made of the object database code</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o26">
<a:Name>AddQuote</a:Name>
<a:Comment>Determines if object codes are systematically quoted during the generation</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o27">
<a:Name>File</a:Name>
<a:Comment>Contains header, footer and usage text entries used during the generation</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o28">
<a:Name>EnableMultiFile</a:Name>
<a:Comment>Multi-script allowed</a:Comment>
</o:BooleanTargetItem>
<o:StringTargetItem Id="o29">
<a:Name>ScriptExt</a:Name>
<a:Comment>Main script extension in database generation</a:Comment>
</o:StringTargetItem>
<o:StringTargetItem Id="o30">
<a:Name>TableExt</a:Name>
<a:Comment>Other scripts extension in database generation</a:Comment>
</o:StringTargetItem>
<o:StringTargetItem Id="o31">
<a:Name>StartCommand</a:Name>
<a:Comment>Command for executing a script</a:Comment>
</o:StringTargetItem>
<o:TextTargetItem Id="o32">
<a:Name>Usage1</a:Name>
<a:Comment>Usage for a single script in database generation</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o33">
<a:Name>Usage2</a:Name>
<a:Comment>Usage for multiple scripts in database generation</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o34">
<a:Name>Keywords</a:Name>
<a:Comment>Contains the list of reserved words and functions available in SQL</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o35">
<a:Name>ReservedDefault</a:Name>
<a:TextTargetItem.Value>NULL
USER
USERGROUP
DATE
TIME
TIMESTAMP
STAMP
TRUE
FALSE</a:TextTargetItem.Value>
<a:Comment>Reserved default values</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o36">
<a:Name>GroupFunc</a:Name>
<a:TextTargetItem.Value>count()
max()
min()
sum()
avg()
stddev()
variance()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions to use with group keywords.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o37">
<a:Name>NumberFunc</a:Name>
<a:TextTargetItem.Value>cos()
sin()
tan()
cot()
cosh()
sinh()
tanh()
acos()
asin()
atan()
atan2()
radians()
degrees()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions used on numbers</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o38">
<a:Name>CharFunc</a:Name>
<a:TextTargetItem.Value>substr()
lfill()
rfill()
lpad()
rpad()
trim()
ltrim()
rtrim()
expand()
upper()
lower()
initcap()
replace()
translate()
mapchar()
alpha()
ascii()
ebcdic()
soundex()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions for characters and strings</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o39">
<a:Name>DateFunc</a:Name>
<a:TextTargetItem.Value>year()
month()
day()
hour()
minute()
second()
microsecond()
timestamp()
date()
time()
adddate()
subdate()
datediff()
dayofweek()
weekofyear()
dayofmonth()
dayofyear()
makedate()
dayname()
monthname()
addtime()
subtime()
timediff()
maketime()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions for dates</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o40">
<a:Name>ConvertFunc</a:Name>
<a:TextTargetItem.Value>num()
chr()
hex()
char()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions used to convert values between hex and integer and handling strings</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o41">
<a:Name>OtherFunc</a:Name>
<a:TextTargetItem.Value>value()
greatest()
least()
decode()</a:TextTargetItem.Value>
<a:Comment>List of other SQL functions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o42">
<a:Name>ListOperators</a:Name>
<a:TextTargetItem.Value>=
!=
~=
&lt;&gt;
&gt;
&lt;
&gt;=
&lt;=
*=
=*
not
in
not in
between
not between
exists
not exists
like
not like
is
is not
= any
!= any
&gt; any
&lt; any
&gt;= any
&lt;= any
= some
!= some
&gt; some
&lt; some
&gt;= some
&lt;= some
= all
!= all
&gt; all
&lt; all
&gt;= all
&lt;= all</a:TextTargetItem.Value>
<a:Comment>List of operators for comparing values, boolean, and various semantic operators</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o43">
<a:Name>Commit</a:Name>
<a:TextTargetItem.Value>commit</a:TextTargetItem.Value>
<a:Comment>Command for validating the transaction by OBDC</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o44">
<a:Name>ReservedWord</a:Name>
<a:TextTargetItem.Value>ADD
ALL
ALTER
AND
ANY
AS
ASC
BETWEEN
BY
CHAR
CHECK
CONNECT
CREATE
CURRENT
DATE
DECIMAL
DEFAULT
DELETE
DESC
DISTINCT
DROP
ELSE
FLOAT
FOR
FROM
GRANT
GROUP
HAVING
IMMEDIATE
IN
INSERT
INTEGER
INTERSECT
INTO
IS
LEVEL
LIKE
NOT
NULL
OF
ON
OPTION
OR
ORDER
PRIOR
PRIVILEGES
PUBLIC
REVOKE
ROWS
SELECT
SESSION
SET
SIZE
SMALLINT
TABLE
THEN
TO
UNION
UNIQUE
UPDATE
USER
VALUES
VARCHAR
VIEW
WHENEVER
WITH</a:TextTargetItem.Value>
<a:Comment>Reserved words</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o45">
<a:Name>Objects</a:Name>
<a:Comment>Contains sub-categories for each type of object in the database, for example: Table, or Reference. Each sub-category contains entries whose values define database commands and object-related characteristics</a:Comment>
<c:Categories>
<o:TargetCategory Id="o46">
<a:Name>Table</a:Name>
<a:Code>TABL</a:Code>
<a:Comment>The following system variables are available:
   &quot;TABLE&quot;        // generated code of the table
   &quot;TNAME&quot;        // name of the table
   &quot;TCODE&quot;        // code of the table
   &quot;TLABL&quot;        // comment of the table
   &quot;PKEYCOLUMNS&quot;  // list of primary key columns. Eg: A, B
   &quot;TABLDEFN&quot;     // complete body of the table definition. Contains definition of columns, checks and keys
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o47">
<a:Name>Enable</a:Name>
<a:Comment>Table allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o48">
<a:Name>Column</a:Name>
<a:Code>COLN</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for columns)
   &quot;COLUMN&quot;       // generated code of the column
   &quot;COLNNO&quot;       // position of the column in the list of columns of the table
   &quot;COLNNAME&quot;     // name of the column
   &quot;COLNCODE&quot;     // code of the column
   &quot;PRIMARY&quot;      // keyword &quot;primary&quot; if the column is primary
   &quot;ISPKEY&quot;       // TRUE if the column is part of the primary key
   &quot;FOREIGN&quot;      // TRUE if the column is part of one foreign key
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o49">
<a:Name>Enable</a:Name>
<a:Comment>Column allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o50">
<a:Name>Index</a:Name>
<a:Code>INDX</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for indexes)
   &quot;INDEX&quot;        // generated code of the index
   &quot;INDEXNAME&quot;    // index name
   &quot;INDEXCODE&quot;    // index code
   &quot;UNIQUE&quot;       // keyword &quot;unique&quot; when the index is unique
   &quot;INDEXTYPE&quot;    // index type (available only for a few DBMS)
   &quot;INDEXKEY&quot;     // keywords &quot;primary&quot;, &quot;unique&quot; or &quot;foreign&quot; depending on the index origin
   &quot;CIDXLIST&quot;     // list of index columns. Eg: A asc, B desc, C asc
   &quot;CLUSTER&quot;      // keyword &quot;cluster&quot; when the index is cluster
For index columns, the following system variables are available:
   &quot;ASC&quot;          // keywords &quot;ASC&quot; or &quot;DESC&quot; depending on sort order
   &quot;ISASC&quot;        // TRUE if the index column sort is ascending
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o51">
<a:Name>Enable</a:Name>
<a:Comment>Index allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o52">
<a:Name>PKey</a:Name>
<a:Code>PKEY</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for keys)
   &quot;PKEYCOLUMNS&quot;  // list of primary key columns. Eg: A, B
   &quot;ISPKEY&quot;       // TRUE when the key is the primary key of the table
   &quot;KEY&quot;          // constraint name
   &quot;PKEY&quot;         // constraint name for primary key
   &quot;AKEY&quot;         // constraint name for alternate key
   &quot;ISMULTICOLN&quot;  // TRUE if key has more than one column
   &quot;CLUSTER&quot;      // keyword cluster</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o53">
<a:Name>Enable</a:Name>
<a:Comment>Primary key allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o54">
<a:Name>Key</a:Name>
<a:Code>KEY</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for keys)
   &quot;COLUMNS&quot;      // List of columns of the key. Eg: &quot;A, B, C&quot;
   &quot;ISPKEY&quot;       // TRUE when the key is the primary key of the table
   &quot;KEY&quot;          // constraint name
   &quot;PKEY&quot;         // constraint name for primary key
   &quot;AKEY&quot;         // constraint name for alternate key
   &quot;ISMULTICOLN&quot;  // TRUE if key has more than one column
   &quot;CLUSTER&quot;      // keyword cluster
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o55">
<a:Name>Enable</a:Name>
<a:Comment>UNIQUE constraint allowed for tables</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o56">
<a:Name>Reference</a:Name>
<a:Code>REFR</a:Code>
<a:Comment>The following system variables are available:
   &quot;REFR&quot;         // generated code of the reference
   &quot;REFNAME&quot;      // reference name
   &quot;PARENT&quot;       // generated code of the parent table
   &quot;PNAME&quot;        // name of the parent table
   &quot;PCODE&quot;        // code of the parent table
   &quot;CHILD&quot;        // generated code of the reference
   &quot;CNAME&quot;        // name of the child table
   &quot;CCODE&quot;        // code of the child table
   &quot;PQUALIFIER&quot;   // qualifier of the parent table. See QUALIFIER
   &quot;CQUALIFIER&quot;   // qualifier of the child table. See QUALIFIER
   &quot;REFRNAME&quot;     // Reference name
   &quot;REFRCODE&quot;     // Reference code
   &quot;FKCONSTRAINT&quot; // Reference constraint name (foreign key)
   &quot;PKCONSTRAINT&quot; // constraint name of the parent key used to reference object
   &quot;CKEYCOLUMNS&quot;  // list of parent key columns. Eg: C1, C2, C3
   &quot;FKEYCOLUMNS&quot;  // list of child foreign key columns. Eg:
   &quot;UPDCONST&quot;     // Update declarative constraint. Keywords &quot;restrict&quot;, &quot;cascade&quot;, &quot;set null&quot; or &quot;set default&quot;
   &quot;DELCONST&quot;     // Delete declarative constraint. Keywords &quot;restrict&quot;, &quot;cascade&quot;, &quot;set null&quot; or &quot;set default&quot;
   &quot;MINCARD&quot;      // Min cardinality
   &quot;MAXCARD&quot;      // Max cardinality
   &quot;POWNER&quot;       // Parent table owner
   &quot;COWNER&quot;       // child table owner
   &quot;CHCKONCMMT&quot;   // TRUE when check on commit is selected on the reference (ASA 6.0 specific)

For reference joins (couple of column in a reference),
the following system variables are available:
   &quot;CKEYCOLUMN&quot;   // generated code of the parent table column (primary key)
   &quot;FKEYCOLUMN&quot;   // generated code of the child table column (foreign key)
   &quot;PK&quot;           // primary key column generated code
   &quot;PKNAME&quot;       // primary key column name
   &quot;FK&quot;           // foreign key column generated code
   &quot;FKNAME&quot;       // foreign key column name
   &quot;AK&quot;           // alternate key column code (same as PK)
   &quot;AKNAME&quot;       // alternate key column name (same as PKNAME)
   &quot;COLTYPE&quot;      // primary column column datatype
   &quot;DEFAULT&quot;      // foreign key column default value
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o57">
<a:Name>Enable</a:Name>
<a:Comment>Foreign key allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o58">
<a:Name>View</a:Name>
<a:Code>VIEW</a:Code>
<a:Comment>The following system variables are available:
   &quot;VIEW&quot;         // generated code of the view
   &quot;VIEWNAME&quot;     // view name
   &quot;VIEWCODE&quot;     // view code
   &quot;VIEWCOLN&quot;     // List of columns of the view. Eg: &quot;A, B, C&quot;
   &quot;SQL&quot;          // SQL text of the view. Eg: Select * from T1
   &quot;VIEWCHECK&quot;    // Keyword &quot;with check option&quot; if selected on the view
   &quot;SCRIPT&quot;       // complete view creation order. Eg: create view V1 as select * from T1
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o59">
<a:Name>Enable</a:Name>
<a:Comment>View allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o60">
<a:Name>Tablespace</a:Name>
<a:Code>TSPC</a:Code>
<a:Comment>The following system variables are available:
   &quot;TABLESPACE&quot;   // generated code of the tablespace
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o61">
<a:Name>Enable</a:Name>
<a:Comment>Tablespace allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o62">
<a:Name>Storage</a:Name>
<a:Code>STOR</a:Code>
<a:Comment>The following system variables are available:
   &quot;STORAGE&quot;      // generated code of the storage
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o63">
<a:Name>Enable</a:Name>
<a:Comment>Storage allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o64">
<a:Name>Database</a:Name>
<a:Code>DTBS</a:Code>
<a:Comment>The following system variables are available:
   &quot;DATABASE&quot;     // generated code of the database
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o65">
<a:Name>Enable</a:Name>
<a:Comment>Database allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o66">
<a:Name>Domain</a:Name>
<a:Code>PDMDOMN</a:Code>
<a:Comment>The following system variables are available:
   &quot;DOMAIN&quot;       // generated code of the domain (also available for columns)
SQL Server specific domain system variables:
   &quot;RULENAME&quot;     // name of the rule object associated with the domain
   &quot;DEFAULTNAME&quot;  // name of the default object associated with the domain
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o67">
<a:Name>Enable</a:Name>
<a:Comment>User defined data types allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o68">
<a:Name>Abstract Data Type</a:Name>
<a:Code>ADT</a:Code>
<a:Comment>The following system variables are available:
   &quot;ADT&quot;          // generated code of the abstract data type
   &quot;TYPE&quot;         // ADT type
   &quot;SIZE&quot;         // ADT size
   &quot;FILE&quot;         // ADT: Java file
   &quot;ISARRAY&quot;      // ADT: is an array?
   &quot;ISLIST&quot;       // ADT: is a list?
   &quot;ISSTRUCT&quot;     // ADT: is a structure?
   &quot;ISOBJECT&quot;     // ADT: is an object?
   &quot;ISJAVA&quot;       // ADT: is a JAVA class?
   &quot;ADTDEF&quot;       // ADT definition
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o69">
<a:Name>Enable</a:Name>
<a:Comment>Abstract Data Types allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o70">
<a:Name>User</a:Name>
<a:Code>USER</a:Code>
<a:Comment>The following system variables are available:
   &quot;USER&quot;         // generated code of the user
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o71">
<a:Name>Enable</a:Name>
<a:Comment>User allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o72">
<a:Name>Rule</a:Name>
<a:Code>RULE</a:Code>
<a:Comment>The following system variables are available:
   &quot;RULE&quot;         // generated code of the rule
   &quot;RULENAME&quot;     // rule name
   &quot;RULECODE&quot;     // rule code
   &quot;RULECEXPR&quot;    // rule client expression
   &quot;RULESEXPR&quot;    // rule server expression
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o73">
<a:Name>Enable</a:Name>
<a:Comment>Rule allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o74">
<a:Name>Procedure</a:Name>
<a:Code>PROC</a:Code>
<a:Comment>The following system variables are available:
   &quot;PROC&quot;         // generated code of the procedure (also available for trigger when the trigger is implemented with a procedure)
   &quot;FUNC&quot;         // generated code of the procedure if the procedure is a function (with return value)
   &quot;PROCPRMS&quot;     // list of parameters of the procedure (also available for function)
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o75">
<a:Name>Enable</a:Name>
<a:Comment>Procedure allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o76">
<a:Name>Trigger</a:Name>
<a:Code>TRGR</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for indexes)
 trigger object specific items
   &quot;ORDER&quot;        // order number of the trigger (to sort the triggers when the DBMS supports more than one trigger of one type)
   &quot;TRIGGER&quot;      // generated code of trigger
   &quot;TRGTYPE&quot;      // trigger type (keywords &quot;beforeinsert&quot;, &quot;afterupdate&quot;, ...)
   &quot;TRGEVENT&quot;     // trigger event (keywords &quot;insert&quot;, &quot;update&quot;, &quot;delete&quot;)
   &quot;TRGTIME&quot;      // trigger time (keywords NULL, &quot;before&quot;, &quot;after&quot;)
 inside the body of the trigger, macros redefine variables on objects
   &quot;REFNO&quot;        // reference position in the list of references of the table
 customized error messages management
   &quot;ERRNO&quot;        // error number for standard error
   &quot;ERRMSG&quot;       // error message for standard error
   &quot;MSGTAB&quot;       // name of the table containing user-defined error messages
   &quot;MSGNO&quot;        // in the user-defined error table, name of the column containing the error numbers
   &quot;MSGTXT&quot;       // in the user-defined error table, name of the column containing the error messages
   &quot;SCRIPT&quot;       // body of trigger or procedure
   &quot;TRGDEFN&quot;      // complete body of the trigger definition. Contains variable declarations and body of trigger or procedure
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o77">
<a:Name>Enable</a:Name>
<a:Comment>Trigger allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o78">
<a:Name>Join Index</a:Name>
<a:Code>JIDX</a:Code>
<a:Comment>The following system variables are available:
   &quot;JIDX&quot;         // generated code for join index
   &quot;JIDXDEFN&quot;     // complete body of join index definition
   &quot;REFRLIST&quot;     // list of references (for ODBC)
   &quot;RFJNLIST&quot;     // list of reference joins (for ODBC)
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o79">
<a:Name>Enable</a:Name>
<a:Comment>Join index allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o80">
<a:Name>Qualifier</a:Name>
<a:Comment>Manages the use of qualifier in ODBC reverse engineering</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o81">
<a:Name>Enable</a:Name>
<a:Comment>Allows using the qualifier combo box during ODBC reverse engineering</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o82">
<a:Name>Sequence</a:Name>
<a:Code>SQNC</a:Code>
<a:Comment>The following system variables are available:
   &quot;SQNC&quot;         // generated code of the sequence
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o83">
<a:Name>Enable</a:Name>
<a:Comment>Sequence allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o84">
<a:Name>Synonym</a:Name>
<a:Code>SYNM</a:Code>
<a:Comment>Manages the synonym object.</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o85">
<a:Name>Enable</a:Name>
<a:Comment>Synonym allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o86">
<a:Name>Group</a:Name>
<a:Code>GRPE</a:Code>
<a:Comment>Manages the group object.</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o87">
<a:Name>Enable</a:Name>
<a:Comment>Group allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o88">
<a:Name>Role</a:Name>
<a:Code>ROLE</a:Code>
<a:Comment>Manages the role object.</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o89">
<a:Name>Enable</a:Name>
<a:Comment>Role allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o90">
<a:Name>DB Package</a:Name>
<a:Code>DBPK</a:Code>
<a:Comment>Manages the database package</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o91">
<a:Name>Enable</a:Name>
<a:Comment>Database package allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o92">
<a:Name>Privilege</a:Name>
<a:Comment>Manages the system privileges for a user, role or group</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o93">
<a:Name>Enable</a:Name>
<a:Comment>Privilege allowed</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o94">
<a:Name>Permission</a:Name>
<a:Code>PERM</a:Code>
<a:Comment>Manages the permissions on database objects</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o95">
<a:Name>Enable</a:Name>
<a:Comment>Permission allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o96">
<a:Name>DataType</a:Name>
<a:Comment>Contains data type translation entries. These entries list the correspondence between internal data types and the target database data types</a:Comment>
<c:Categories>
<o:MapTargetItem Id="o97">
<a:Name>AmcdDataType</a:Name>
<a:Comment>Data types translation table from internal data types to target database data types.
        %n is the length of the data type
        %s is the size of the data type
        %p is the precision of the data type</a:Comment>
<a:MapTargetItem.Value>I=integer
SI=short integer
LI=long integer
BT=byte
BT%n=byte(%n)
N=number
N%n=number(%n)
N%s,%p=number(%s,%p)
DC=decimal
DC%n=decimal(%n)
DC%s,%p=decimal(%s,%p)
F=float
F%n=float(%n)
SF=short float
LF=long float
MN=money
MN%n=money(%n)
MN%s,%p=money(%s,%p)
NO=serial
NO%n=serial(%n)
BL=boolean
A=character
A%n=character(%n)
VA=variable character
VA%n=variable character(%n)
LA=long character
LA%n=long character(%n)
LVA=long var character
LVA%n=long var character(%n)
TXT=text
TXT%n=text(%n)
MBT=multibyte
MBT%n=multibyte(%n)
VMBT=variable multibyte
VMBT%n=variable multibyte(%n)
D=date
T=time
DT=datetime
TS=timestamp
BIN=binary
BIN%n=binary(%n)
LBIN=long binary
LBIN%n=long binary(%n)
BMP=bitmap
BMP%n=bitmap(%n)
PIC=image
PIC%n=image(%n)
OLE=OLE
OLE%n=OLE%n
*=character(10)</a:MapTargetItem.Value>
<a:List>I
SI
LI
BT
BT%n
N
N%n
N%s,%p
DC
DC%n
DC%s,%p
F
F%n
SF
LF
MN
MN%n
MN%s,%p
NO
NO%n
BL
A
A%n
VA
VA%n
LA
LA%n
LVA
LVA%n
TXT
TXT%n
MBT
MBT%n
VMBT
VMBT%n
D
T
DT
TS
BIN
BIN%n
LBIN
LBIN%n
BMP
BMP%n
PIC
PIC%n
OLE
OLE%n
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o98">
<a:Name>PhysDataType</a:Name>
<a:Comment>Data types translation table from target database data types to internal data types.</a:Comment>
<a:MapTargetItem.Value>integer=I
short integer=SI
long integer=LI
byte=BT
byte(%n)=BT%n
number=N
number(%n)=N%n
number(%s,%p)=N%s,%p
decimal=DC
decimal(%n)=DC%n
decimal(%s,%p)=DC%s,%p
float=F
float(%n)=F%n
short float=SF
long float=LF
money=MN
money(%n)=MN%n
money(%s,%p)=MN%s,%p
serial=NO
serial(%n)=NO%n
boolean=BL
character=A
character(%n)=A%n
variable character=VA
variable character(%n)=VA%n
long character=LA
long character(%n)=LA%n
long var character=LVA
long var character(%n)=LVA%n
text=TXT
text(%n)=TXT%n
multibyte=MBT
multibyte(%n)=MBT%n
variable multibyte=VMBT
variable multibyte(%n)=VMBT%n
date=D
time=T
datetime=DT
timestamp=TS
binary=BIN
binary(%n)=BIN%n
long binary=LBIN
long binary(%n)=LBIN%n
bitmap=BMP
bitmap(%n)=BMP%n
image=PIC
image(%n)=PIC%n
OLE=OLE
OLE%n=OLE%n
character(10)=*   </a:MapTargetItem.Value>
<a:List>integer
short integer
long integer
byte
byte(%n)
number
number(%n)
number(%s,%p)
decimal
decimal(%n)
decimal(%s,%p)
float
float(%n)
short float
long float
money
money(%n)
money(%s,%p)
serial
serial(%n)
boolean
character
character(%n)
variable character
variable character(%n)
long character
long character(%n)
long var character
long var character(%n)
text
text(%n)
multibyte
multibyte(%n)
variable multibyte
variable multibyte(%n)
date
time
datetime
timestamp
binary
binary(%n)
long binary
long binary(%n)
bitmap
bitmap(%n)
image
image(%n)
OLE
OLE%n
character(10)
</a:List>
</o:MapTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:ProfileTargetItem Id="o99">
<a:Name>Profile</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TargetCategory Id="o100">
<a:Name>Shared</a:Name>
<a:Code>Shared</a:Code>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TargetCategory>
<o:MetaClassTargetItem Id="o101">
<a:Name>Reference</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TypedCategoryTargetItem Id="o102">
<a:TypePublicName>CriterionTargetItem</a:TypePublicName>
<a:Name>Criteria</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:CriterionTargetItem Id="o103">
<a:Name>IsConceptualInheritance</a:Name>
<a:CriterionTargetItem.Value>%isConceptualInheritance%</a:CriterionTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:CustomSymbolTargetItem Id="o104">
<a:ObjectID>74958A0A-AD1C-49A8-BED7-C841D5370079</a:ObjectID>
<a:Name>Custom Symbol</a:Name>
<a:ModificationDate>1087561722</a:ModificationDate>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ArrowStyle>2758913</a:ArrowStyle>
<a:DefaultSize>(3600, 2400)</a:DefaultSize>
<a:FontList>DISPNAME 0 Arial,8,N
CARD 0 Arial,8,N</a:FontList>
</o:CustomSymbolTargetItem>
</c:Categories>
</o:CriterionTargetItem>
<o:CriterionTargetItem Id="o105">
<a:Name>IsSubtype</a:Name>
<a:CriterionTargetItem.Value>%isSubType%</a:CriterionTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:CustomSymbolTargetItem Id="o106">
<a:ObjectID>411EA8FA-10B5-443B-833A-422F973A7055</a:ObjectID>
<a:Name>Custom Symbol</a:Name>
<a:ModificationDate>1089105937</a:ModificationDate>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ArrowStyle>2824473</a:ArrowStyle>
<a:DefaultSize>(3600, 2400)</a:DefaultSize>
<a:FontList>DISPNAME 0 Arial,8,N
CARD 0 Arial,8,N</a:FontList>
</o:CustomSymbolTargetItem>
</c:Categories>
</o:CriterionTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o107">
<a:TypePublicName>ExtendedAttributeTargetItem</a:TypePublicName>
<a:Name>Extended Attributes</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:ExtendedAttributeTargetItem Id="o108">
<a:ObjectID>38129298-87DE-4929-88D7-0380C1A0E063</a:ObjectID>
<a:Name>IsInheritance</a:Name>
<a:Comment>True if the reference is an inheritance link</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTargetItem.Value>false</a:ExtendedAttributeTargetItem.Value>
</o:ExtendedAttributeTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o109">
<a:TypePublicName>TemplateTargetItem</a:TypePublicName>
<a:Name>Templates</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TemplateTargetItem Id="o110">
<a:Name>isConceptualInheritance</a:Name>
<a:TemplateTargetItem.Value>.bool ((%IsInheritance%) and (%ModelOptions.Notation% != 3))</a:TemplateTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
<o:TemplateTargetItem Id="o111">
<a:Name>isSubType</a:Name>
<a:TemplateTargetItem.Value>.bool ((%IsInheritance%) and (%ModelOptions.Notation% == 3))
</a:TemplateTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TemplateTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o112">
<a:TypePublicName>TransformationTargetItem</a:TypePublicName>
<a:Name>Transformations</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TransformationTargetItem Id="o113">
<a:Name>ConceptualInheritanceTransformation</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:TransformationScript>Sub %Transformation%(obj, trfm)
   Dim source
   set source = trfm.GetSource(obj)
   if (Not source Is Nothing) then
      if (source.IsKindOf(PdCDM.cls_InheritanceLink)) then
         obj.SetExtendedAttribute &quot;LOGICAL.IsInheritance&quot;, &quot;true&quot;
      end if
   end if
End Sub</a:TransformationScript>
</o:TransformationTargetItem>
<o:TransformationTargetItem Id="o114">
<a:Name>GeneralizationTransformation</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:TransformationScript>Sub %Transformation%(obj, trfm)
   Dim source
   set source = trfm.GetSource(obj)
   if (Not source Is Nothing) then
      if (source.IsKindOf(PdOOM.cls_Generalization)) then
         obj.SetExtendedAttribute &quot;LOGICAL.IsInheritance&quot;, &quot;true&quot;
      end if
   end if
End Sub</a:TransformationScript>
</o:TransformationTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o115">
<a:TypePublicName>FormTargetItem</a:TypePublicName>
<a:Name>Forms</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:FormTargetItem Id="o116">
<a:Name>Detail</a:Name>
<a:FormTargetItem.Value>&lt;Form  &gt;
   &lt;ExtendedAttribute Name=&quot;IsInheritance&quot; Caption=&quot;Inheritance link&quot; Attribute=&quot;IsInheritance&quot; AttributeID=&quot;{38129298-87DE-4929-88D7-0380C1A0E063}&quot; GrayHiddenAttributes=&quot;Yes&quot; /&gt;
&lt;/Form&gt;
</a:FormTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:FormTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:MetaClassTargetItem>
</c:Categories>
</o:ProfileTargetItem>
<o:TypedCategoryTargetItem Id="o117">
<a:TypePublicName>TransformationTargetItemProfile</a:TypePublicName>
<a:Name>Transformation Profiles</a:Name>
<c:Categories>
<o:TransformationTargetItemProfile Id="o118">
<a:Name>Profile_CDM</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:TransformationTargetItemProfile.ModelType>1176FDE1-9351-11D1-AB3C-0020AF71E433</a:TransformationTargetItemProfile.ModelType>
<c:TransformationListToModel>
<o:TransformationTargetItem Ref="o113"/>
</c:TransformationListToModel>
</o:TransformationTargetItemProfile>
<o:TransformationTargetItemProfile Id="o119">
<a:Name>Profile_OOM</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:TransformationTargetItemProfile.ModelType>B537C1A0-D293-11D0-83D9-444553540000</a:TransformationTargetItemProfile.ModelType>
<c:TransformationListToModel>
<o:TransformationTargetItem Ref="o114"/>
</c:TransformationListToModel>
</o:TransformationTargetItemProfile>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:DBMS>

</DBMS>