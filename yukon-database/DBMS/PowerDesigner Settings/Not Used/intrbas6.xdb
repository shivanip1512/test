<?xml version="1.0" encoding="UTF-8"?>
<?PowerDesigner AppLocale="UTF16" Code="InterBase 6.x" Family="INTERBASE" Name="InterBase 6.x" signature="XDB_XML" version="12.0.0.1642"?>
<!-- do not edit this file -->

<DBMS xmlns:a="attribute" xmlns:c="collection" xmlns:o="object">

<o:DBMS Id="o1">
<a:ObjectID>730F40E3-4603-4773-B59C-4DDF1E1AA4C8</a:ObjectID>
<a:Name>InterBase 6.x</a:Name>
<a:Code>InterBase 6.x</a:Code>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1026305125</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Family>INTERBASE</a:Family>
<a:CheckGlobalScript>&#39;******************************************************************************
&#39;* Purpose:  This VB-Script holds global definitions shared by all the custom-
&#39;*            checks scripts of the model extension.
&#39;******************************************************************************

Option Explicit &#39; This is to ensure all used variables are defined

</a:CheckGlobalScript>
<c:Categories>
<o:TargetCategory Id="o2">
<a:Name>General</a:Name>
<a:Comment>Target DBMS identification</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o3">
<a:Name>SqlSupport</a:Name>
<a:Comment>SQL syntax allowed. This does not impact the script generation, but it impacts the SQL Preview</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o4">
<a:Name>EnableCheck</a:Name>
<a:Comment>Determines if the generation of check parameters is authorized or not</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o5">
<a:Name>Enableconstname</a:Name>
<a:Comment>Determines if constraint names are used during the generation</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o6">
<a:Name>UniqConstName</a:Name>
<a:Comment>Determines if unique constraint names for objects are authorized or not</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o7">
<a:Name>Script</a:Name>
<a:Comment>DBMS characteristics, command definition, and data type translations for the Script generation and reverse engineering</a:Comment>
<c:Categories>
<o:TargetCategory Id="o8">
<a:Name>Sql</a:Name>
<a:Comment>Contains sub-categories Syntax, Format, File and Keywords. Each sub-category contains entries whose values define general syntax for the database</a:Comment>
<c:Categories>
<o:TargetCategory Id="o9">
<a:Name>Syntax</a:Name>
<a:Comment>Contains general parameters for SQL syntax</a:Comment>
<c:Categories>
<o:CharacterTargetItem Id="o10">
<a:Name>Terminator</a:Name>
<a:Comment>End of command character</a:Comment>
<a:CharacterTargetItem.Value>;</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:StringTargetItem Id="o11">
<a:Name>BlockTerminator</a:Name>
<a:Comment>End of block character</a:Comment>
</o:StringTargetItem>
<o:CharacterTargetItem Id="o12">
<a:Name>Delimiter</a:Name>
<a:Comment>Field separation character. Example: col1, col2, col3</a:Comment>
<a:CharacterTargetItem.Value>,</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:CharacterTargetItem Id="o13">
<a:Name>Quote</a:Name>
<a:Comment>Character used to enclose string values</a:Comment>
<a:CharacterTargetItem.Value>&#39;</a:CharacterTargetItem.Value>
</o:CharacterTargetItem>
<o:CharacterTargetItem Id="o14">
<a:Name>SqlContinue</a:Name>
<a:Comment>Continuation character</a:Comment>
</o:CharacterTargetItem>
<o:StringTargetItem Id="o15">
<a:Name>BlockComment</a:Name>
<a:Comment>Characters used to enclose a multi-line comment</a:Comment>
<a:StringTargetItem.Value>/*   */</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o16">
<a:Name>LineComment</a:Name>
<a:Comment>Characters used to enclose a single line comment</a:Comment>
</o:StringTargetItem>
<o:BooleanTargetItem Id="o17">
<a:Name>UseBlockTerm</a:Name>
<a:Comment>Use end of block character by default</a:Comment>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o18">
<a:Name>UsingBlockTerm</a:Name>
<a:TextTargetItem.Value>create procedure, end, 1
{
   begin, , 2
   {
      begin, end, 3
   }
}
create trigger, end, 1
{
   begin, , 2
   {
      begin, end, 3
   }
}</a:TextTargetItem.Value>
<a:Comment>List of objects using block definition during reverse.</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o19">
<a:Name>Format</a:Name>
<a:Comment>Contains entries that define script formatting</a:Comment>
<c:Categories>
<o:StringTargetItem Id="o20">
<a:Name>IllegalChar</a:Name>
<a:Comment>Invalid characters for names</a:Comment>
<a:StringTargetItem.Value>&quot; +-*/!=&lt;&gt;&#39;&quot;()&quot;.</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:BooleanTargetItem Id="o21">
<a:Name>UpperCaseOnly</a:Name>
<a:Comment>Uppercase only</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o22">
<a:Name>LowerCaseOnly</a:Name>
<a:Comment>Lowercase only</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o23">
<a:Name>EnableOwnerPrefix</a:Name>
<a:Comment>Object codes can have a prefix made of the object owner code</a:Comment>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o24">
<a:Name>File</a:Name>
<a:Comment>Contains header, footer and usage text entries used during the generation</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o25">
<a:Name>Header</a:Name>
<a:Comment>Header text for a database generation script</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o26">
<a:Name>Footer</a:Name>
<a:Comment>Footer text for a database generation script</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o27">
<a:Name>EnableMultiFile</a:Name>
<a:Comment>Multi-script allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:StringTargetItem Id="o28">
<a:Name>ScriptExt</a:Name>
<a:Comment>Main script extension in database generation</a:Comment>
<a:StringTargetItem.Value>sql</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o29">
<a:Name>TableExt</a:Name>
<a:Comment>Other scripts extension in database generation</a:Comment>
<a:StringTargetItem.Value>sql</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:StringTargetItem Id="o30">
<a:Name>StartCommand</a:Name>
<a:Comment>Command for executing a script</a:Comment>
</o:StringTargetItem>
<o:TextTargetItem Id="o31">
<a:Name>Usage1</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%
  (2) Start the interactive SQL executing the database
        creation script :
        isql -input %NAMESCRIPT%</a:TextTargetItem.Value>
<a:Comment>Usage for a single script in database generation</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o32">
<a:Name>Usage2</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%
  (2) Start the interactive SQL executing the database
        creation script :
        isql -input &lt;script_name&gt;</a:TextTargetItem.Value>
<a:Comment>Usage for multiple scripts in database generation</a:Comment>
</o:TextTargetItem>
<o:StringTargetItem Id="o33">
<a:Name>TriggerExt</a:Name>
<a:Comment>Script file extension in triggers and procedures generation</a:Comment>
<a:StringTargetItem.Value>sql</a:StringTargetItem.Value>
</o:StringTargetItem>
<o:TextTargetItem Id="o34">
<a:Name>TrgUsage1</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%
  (2) Start the interactive SQL executing the triggers
        creation script :
        isql -input %NAMESCRIPT%</a:TextTargetItem.Value>
<a:Comment>Usage for a single script in triggers and procedures generation</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o35">
<a:Name>TrgUsage2</a:Name>
<a:TextTargetItem.Value>  (1) Go to the directory %PATHSCRIPT%
  (2) Start the interactive SQL executing the triggers
        creation script :
        isql -input &lt;script_name&gt;</a:TextTargetItem.Value>
<a:Comment>Usage for multiple scripts in triggers and procedures generation</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o36">
<a:Name>Keywords</a:Name>
<a:Comment>Contains the list of reserved words and functions available in SQL</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o37">
<a:Name>ReservedDefault</a:Name>
<a:TextTargetItem.Value>USER
NULL</a:TextTargetItem.Value>
<a:Comment>Reserved default values</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o38">
<a:Name>GroupFunc</a:Name>
<a:TextTargetItem.Value>avg()
count()
max()
min()
sum()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions to use with group keywords.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o39">
<a:Name>NumberFunc</a:Name>
<a:TextTargetItem.Value>gen_id()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions used on numbers</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o40">
<a:Name>CharFunc</a:Name>
<a:TextTargetItem.Value>upper()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions for characters and strings</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o41">
<a:Name>DateFunc</a:Name>
<a:Comment>List of SQL functions for dates</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o42">
<a:Name>ConvertFunc</a:Name>
<a:TextTargetItem.Value>cast()</a:TextTargetItem.Value>
<a:Comment>List of SQL functions used to convert values between hex and integer and handling strings</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o43">
<a:Name>OtherFunc</a:Name>
<a:Comment>List of other SQL functions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o44">
<a:Name>ListOperators</a:Name>
<a:TextTargetItem.Value>=
!=
&lt;&gt;
&gt;
!&gt;
&lt;
!&lt;
&gt;=
&lt;=
*=
=*
not
in
not in
between
not between
exists
not exists
like
not like
is
is not
containing
not containing
starting with
not starting with
singular
not singular
= any
&lt;&gt; any
&gt; any
&lt; any
&gt;= any
&lt;= any
= all
&lt;&gt; all
&gt; all
&lt; all
&gt;= all
&lt;= all</a:TextTargetItem.Value>
<a:Comment>List of operators for comparing values, boolean, and various semantic operators</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o45">
<a:Name>Commit</a:Name>
<a:TextTargetItem.Value>commit</a:TextTargetItem.Value>
<a:Comment>Command for validating the transaction by OBDC</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o46">
<a:Name>ReservedWord</a:Name>
<a:TextTargetItem.Value>ADD
ALL
ALTER
AND
ANY
AS
ASC
BETWEEN
BY
CHAR
CHECK
CONNECT
CREATE
CURRENT
DATE
DECIMAL
DEFAULT
DELETE
DESC
DISTINCT
DROP
ELSE
FLOAT
FOR
FROM
GRANT
GROUP
HAVING
IMMEDIATE
IN
INSERT
INTEGER
INTERSECT
INTO
IS
LEVEL
LIKE
NOT
NULL
OF
ON
OPTION
OR
ORDER
PRIOR
PRIVILEGES
PUBLIC
REVOKE
ROWS
SELECT
SESSION
SET
SIZE
SMALLINT
TABLE
THEN
TO
UNION
UNIQUE
UPDATE
USER
VALUES
VARCHAR
VIEW
WHENEVER
WITH</a:TextTargetItem.Value>
<a:Comment>Reserved words</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o47">
<a:Name>Objects</a:Name>
<a:Comment>Contains sub-categories for each type of object in the database, for example: Table, or Reference. Each sub-category contains entries whose values define database commands and object-related characteristics</a:Comment>
<c:Categories>
<o:TargetCategory Id="o48">
<a:Name>Table</a:Name>
<a:Code>TABL</a:Code>
<a:Comment>The following system variables are available:
   &quot;TABLE&quot;        // generated code of the table
   &quot;TNAME&quot;        // name of the table
   &quot;TCODE&quot;        // code of the table
   &quot;TLABL&quot;        // comment of the table
   &quot;PKEYCOLUMNS&quot;  // list of primary key columns. Eg: A, B
   &quot;TABLDEFN&quot;     // complete body of the table definition. Contains definition of columns, checks and keys
</a:Comment>
<c:Categories>
<o:IntegerTargetItem Id="o49">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>31</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o50">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>CKT_%.U26:TABLE%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for check of table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o51">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create table %TABLE% (
%TABLDEFN%
)</a:TextTargetItem.Value>
<a:Comment>Command for creating a table. Example: create table %TABLE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o52">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value> </a:TextTargetItem.Value>
<a:Comment>Available options for creating a table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o53">
<a:Name>DefOptions</a:Name>
<a:TextTargetItem.Value> </a:TextTargetItem.Value>
<a:Comment>Default values for table options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o54">
<a:Name>TableComment</a:Name>
<a:Comment>Command for adding a table comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o55">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop table %TABLE%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a table. Example: drop table %TABLE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o56">
<a:Name>Rename</a:Name>
<a:Comment>Command for renaming a table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o57">
<a:Name>AlterTableHeader</a:Name>
<a:Comment>Alter table header</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o58">
<a:Name>AlterTableFooter</a:Name>
<a:Comment>Alter table footer</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o59">
<a:Name>DefineTableCheck</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME%] check (%.A:CONSTRAINT%)</a:TextTargetItem.Value>
<a:Comment>Allows to customize the script of table check constraints</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o60">
<a:Name>Enable</a:Name>
<a:Comment>Table allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:MapTargetItem Id="o61">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a table.
The first column is the SQL name of permission (eg: SELECT)
The second column is a shortname to display in a grid</a:Comment>
<a:MapTargetItem.Value>SELECT=Sel
UPDATE=Upd
INSERT=Ins
DELETE=Del
REFERENCE=Ref</a:MapTargetItem.Value>
<a:List>SELECT
UPDATE
INSERT
DELETE
REFERENCE
</a:List>
</o:MapTargetItem>
<o:TextTargetItem Id="o62">
<a:Name>DropTableCheck</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   delete check</a:TextTargetItem.Value>
<a:Comment>Command for dropping a table check in an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o63">
<a:Name>AddTableCheck</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   add check (%.A:CONSTRAINT%)</a:TextTargetItem.Value>
<a:Comment>Allows to customize the script for modifying table constraints within an alter table statement</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o64">
<a:Name>SqlPermQuery</a:Name>
<a:TextTargetItem.Value>{GRANTEE ID, PERMISSION ...}

select s.rdb$user, cast(&#39;SELECT+, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 1 and s.rdb$privilege = &#39;S&#39;[ and s.rdb$relation_name = %.q:TABLE%][ and s.rdb$user != %.q:OWNER%]
union
select s.rdb$user, cast(&#39;SELECT, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 0 and s.rdb$privilege = &#39;S&#39;[ and s.rdb$relation_name = %.q:TABLE%][ and s.rdb$user != %.q:OWNER%]
union
select s.rdb$user, cast(&#39;UPDATE+, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 1 and s.rdb$privilege = &#39;U&#39;[ and s.rdb$relation_name = %.q:TABLE%][ and s.rdb$user != %.q:OWNER%]
union
select s.rdb$user, cast(&#39;UPDATE, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 0 and s.rdb$privilege = &#39;U&#39;[ and s.rdb$relation_name = %.q:TABLE%][ and s.rdb$user != %.q:OWNER%]
union
select s.rdb$user, cast(&#39;INSERT+, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 1 and s.rdb$privilege = &#39;I&#39;[ and s.rdb$relation_name = %.q:TABLE%][ and s.rdb$user != %.q:OWNER%]
union
select s.rdb$user, cast(&#39;INSERT, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 0 and s.rdb$privilege = &#39;I&#39;[ and s.rdb$relation_name = %.q:TABLE%][ and s.rdb$user != %.q:OWNER%]
union
select s.rdb$user, cast(&#39;DELETE+, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 1 and s.rdb$privilege = &#39;D&#39;[ and s.rdb$relation_name = %.q:TABLE%][ and s.rdb$user != %.q:OWNER%]
union
select s.rdb$user, cast(&#39;DELETE, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 0 and s.rdb$privilege = &#39;D&#39;[ and s.rdb$relation_name = %.q:TABLE%][ and s.rdb$user != %.q:OWNER%]
union
select s.rdb$user, cast(&#39;REFERENCE+, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 1 and s.rdb$privilege = &#39;R&#39;[ and s.rdb$relation_name = %.q:TABLE%][ and s.rdb$user != %.q:OWNER%]
union
select s.rdb$user, cast(&#39;REFERENCE, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 0 and s.rdb$privilege = &#39;R&#39;[ and s.rdb$relation_name = %.q:TABLE%][ and s.rdb$user != %.q:OWNER%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o65">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TABLE, TABLE_TYPE(0=&#39;TABLE&#39;,1=&#39;SYSTEM TABLE&#39;)}

select
   t.rdb$owner_name,
   t.rdb$relation_name,
   t.rdb$system_flag
from
   rdb$relations t
where
   t.rdb$view_source is null
[  and t.rdb$relation_name=%.q:TABLE%]
[  and t.rdb$owner_name=%.q:OWNER%]
order by
   1,2
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o66">
<a:Name>Index</a:Name>
<a:Code>INDX</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for indexes)
   &quot;INDEX&quot;        // generated code of the index
   &quot;INDEXNAME&quot;    // index name
   &quot;INDEXCODE&quot;    // index code
   &quot;UNIQUE&quot;       // keyword &quot;unique&quot; when the index is unique
   &quot;INDEXTYPE&quot;    // index type (available only for a few DBMS)
   &quot;INDEXKEY&quot;     // keywords &quot;primary&quot;, &quot;unique&quot; or &quot;foreign&quot; depending on the index origin
   &quot;CIDXLIST&quot;     // list of index columns. Eg: A asc, B desc, C asc
   &quot;CLUSTER&quot;      // keyword &quot;cluster&quot; when the index is cluster
For index columns, the following system variables are available:
   &quot;ASC&quot;          // keywords &quot;ASC&quot; or &quot;DESC&quot; depending on sort order
   &quot;ISASC&quot;        // TRUE if the index column sort is ascending
</a:Comment>
<c:Categories>
<o:IntegerTargetItem Id="o67">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>31</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:IntegerTargetItem Id="o68">
<a:Name>MaxColIndex</a:Name>
<a:Comment>Maximum number of columns in an index</a:Comment>
<a:IntegerTargetItem.Value>99</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:BooleanTargetItem Id="o69">
<a:Name>Enable</a:Name>
<a:Comment>Index allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o70">
<a:Name>EnableAscDesc</a:Name>
<a:Comment>ASC, DESC keywords allowed</a:Comment>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o71">
<a:Name>UniqName</a:Name>
<a:Comment>Unique index name in the database</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o72">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create [%UNIQUE% ][%ExtAscDesc% ]index %INDEX% on %TABLE% (
%CIDXLIST%
)</a:TextTargetItem.Value>
<a:Comment>Command for creating an index. Example: create index %INDEX%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o73">
<a:Name>AddColIndex</a:Name>
<a:TextTargetItem.Value>%COLUMN%</a:TextTargetItem.Value>
<a:Comment>Command for defining an index column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o74">
<a:Name>Options</a:Name>
<a:Comment>Default options for creating an index</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o75">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for index options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o76">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop index %INDEX%</a:TextTargetItem.Value>
<a:Comment>Command for dropping an index. Example: drop index %INDEX%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o77">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{OWNER ID, TABLE ID, INDEX ID, CIDXLIST ...}

select
   t.rdb$owner_name,
   t.rdb$relation_name,
   i.rdb$index_name,
   c.rdb$field_name||&#39;,&#39;
from
   rdb$relations t,
   rdb$indices i,
   rdb$index_segments c
where
   t.rdb$relation_name = i.rdb$relation_name
   and c.rdb$index_name=i.rdb$index_name
[  and t.rdb$relation_name = %.q:TABLE%]
[  and t.rdb$owner_name = %.q:OWNER%]
[  and i.rdb$index_name = %.q:INDEX%]
order by
   1,2,3, c.rdb$field_position</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o78">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TABLE, INDEX, UNIQUE, ExtAscDesc(1=desc, *=asc)}

select
   t.rdb$owner_name,
   t.rdb$relation_name,
   i.rdb$index_name,
   i.rdb$unique_flag,
   i.rdb$index_type
from
   rdb$relations t,
   rdb$indices i
where
   t.rdb$relation_name = i.rdb$relation_name
[  and t.rdb$relation_name = %.q:TABLE%]
[  and t.rdb$owner_name = %.q:OWNER%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o79">
<a:Name>SqlSysIndexQuery</a:Name>
<a:TextTargetItem.Value>select
   rdb$index_name
from
   rdb$indices
where
   rdb$index_name like &#39;RDB$%&#39;
   and rdb$relation_name=%.q:TABLE%</a:TextTargetItem.Value>
<a:Comment>SQL query to list system indexes created by the database</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o80">
<a:Name>Column</a:Name>
<a:Code>COLN</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for columns)
   &quot;COLUMN&quot;       // generated code of the column
   &quot;COLNNO&quot;       // position of the column in the list of columns of the table
   &quot;COLNNAME&quot;     // name of the column
   &quot;COLNCODE&quot;     // code of the column
   &quot;PRIMARY&quot;      // keyword &quot;primary&quot; if the column is primary
   &quot;ISPKEY&quot;       // TRUE if the column is part of the primary key
   &quot;FOREIGN&quot;      // TRUE if the column is part of one foreign key
</a:Comment>
<c:Categories>
<o:IntegerTargetItem Id="o81">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>31</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:BooleanTargetItem Id="o82">
<a:Name>EnableDefault</a:Name>
<a:Comment>Default values allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o83">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>CKC_%.U17:COLUMN%_%.U8:TABLE%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for a column check parameter</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o84">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>%20:COLUMN% [%COMPUTE%?computed[ by] (%COMPUTE%):%30:DATATYPE%][ default %DEFAULT%][ %NOTNULL%]
      [[constraint %CONSTNAME%] check (%.A:CONSTRAINT%)]</a:TextTargetItem.Value>
<a:Comment>Command for defining a table column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o85">
<a:Name>ColumnComment</a:Name>
<a:Comment>Command for adding a column comment</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o86">
<a:Name>Rename</a:Name>
<a:Comment>Command for renaming a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o87">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>alter table %TABLE%
   add %20:COLUMN% [%COMPUTE%?computed[ by] (%COMPUTE%):%30:DATATYPE%][ default %DEFAULT%][ %NOTNULL%]
      [[constraint %CONSTNAME%] check (%.A:CONSTRAINT%)]</a:TextTargetItem.Value>
<a:Comment>Command for adding a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o88">
<a:Name>ModifyColumn</a:Name>
<a:Comment>Command for modifying a column</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o89">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>alter table %TABLE%
   drop %COLUMN%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a column</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o90">
<a:Name>Enable</a:Name>
<a:Comment>Column allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o91">
<a:Name>EnableComputedColn</a:Name>
<a:Comment>Computed columns allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o92">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TABLE, COLUMN, COMPUTE}

select
   t.rdb$owner_name,
   t.rdb$relation_name,
   c.rdb$field_name,
   f.rdb$computed_source
from
   rdb$relations t,
   rdb$fields f,
   rdb$relation_fields c
where
   c.rdb$relation_name = t.rdb$relation_name
   and f.rdb$field_name = c.rdb$field_source
   and f.rdb$computed_source is not null
[  and t.rdb$owner_name=%.q:OWNER%]
[  and t.rdb$relation_name=%.q:TABLE%]
[  and c.rdb$field_name=%.q:COLUMN%]</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o93">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TABLE, COLUMN, DTTPCODE(14=CHAR,7=SMALLINT,8=DECIMAL,10=FLOAT,27=DOUBLE PRECISION,35=DATE,37=VARCHAR,261=BLOB), LENGTH, PREC, NULL(1=NOTNULL, *=NULL)}

select
   t.rdb$owner_name,
   t.rdb$relation_name,
   c.rdb$field_name,
   f.rdb$field_type,
   f.rdb$field_length,
   -f.rdb$field_scale,
   c.rdb$null_flag
from
   rdb$relations t,
   rdb$fields f,
   rdb$relation_fields c
where
   c.rdb$relation_name = t.rdb$relation_name
   and f.rdb$field_name = c.rdb$field_source
[  and t.rdb$owner_name=%.q:OWNER%]
[  and t.rdb$relation_name=%.q:TABLE%]
order by
   1, 2, rdb$field_position</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:IntegerTargetItem Id="o94">
<a:Name>MaxConstLen</a:Name>
<a:Comment>Maximum constraint name length</a:Comment>
<a:IntegerTargetItem.Value>31</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TargetCategory Id="o95">
<a:Name>User</a:Name>
<a:Code>USER</a:Code>
<a:Comment>The following system variables are available:
   &quot;USER&quot;         // generated code of the user
</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o96">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>grant connect to %USER%</a:TextTargetItem.Value>
<a:Comment>Command for creating a user</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o97">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>revoke all from %USER%
</a:TextTargetItem.Value>
<a:Comment>Command for dropping a user</a:Comment>
</o:TextTargetItem>
<o:IntegerTargetItem Id="o98">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>31</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:BooleanTargetItem Id="o99">
<a:Name>Enable</a:Name>
<a:Comment>User allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o100">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{USER}

select distinct rdb$user from rdb$user_privileges
where rdb$user_type = 8
and     rdb$user &lt;&gt; &#39;PUBLIC&#39;
[ and rdb$user = %.qU:SCHEMA%]</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:BooleanTargetItem Id="o101">
<a:Name>EnableOption</a:Name>
<a:Comment>Physical options allowed  YES/NO</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TargetCategory Id="o102">
<a:Name>Reference</a:Name>
<a:Code>REFR</a:Code>
<a:Comment>The following system variables are available:
   &quot;REFR&quot;         // generated code of the reference
   &quot;REFNAME&quot;      // reference name
   &quot;PARENT&quot;       // generated code of the parent table
   &quot;PNAME&quot;        // name of the parent table
   &quot;PCODE&quot;        // code of the parent table
   &quot;CHILD&quot;        // generated code of the reference
   &quot;CNAME&quot;        // name of the child table
   &quot;CCODE&quot;        // code of the child table
   &quot;PQUALIFIER&quot;   // qualifier of the parent table. See QUALIFIER
   &quot;CQUALIFIER&quot;   // qualifier of the child table. See QUALIFIER
   &quot;REFRNAME&quot;     // Reference name
   &quot;REFRCODE&quot;     // Reference code
   &quot;FKCONSTRAINT&quot; // Reference constraint name (foreign key)
   &quot;PKCONSTRAINT&quot; // constraint name of the parent key used to reference object
   &quot;CKEYCOLUMNS&quot;  // list of parent key columns. Eg: C1, C2, C3
   &quot;FKEYCOLUMNS&quot;  // list of child foreign key columns. Eg:
   &quot;UPDCONST&quot;     // Update declarative constraint. Keywords &quot;restrict&quot;, &quot;cascade&quot;, &quot;set null&quot; or &quot;set default&quot;
   &quot;DELCONST&quot;     // Delete declarative constraint. Keywords &quot;restrict&quot;, &quot;cascade&quot;, &quot;set null&quot; or &quot;set default&quot;
   &quot;MINCARD&quot;      // Min cardinality
   &quot;MAXCARD&quot;      // Max cardinality
   &quot;POWNER&quot;       // Parent table owner
   &quot;COWNER&quot;       // child table owner
   &quot;CHCKONCMMT&quot;   // TRUE when check on commit is selected on the reference (ASA 6.0 specific)

For reference joins (couple of column in a reference),
the following system variables are available:
   &quot;CKEYCOLUMN&quot;   // generated code of the parent table column (primary key)
   &quot;FKEYCOLUMN&quot;   // generated code of the child table column (foreign key)
   &quot;PK&quot;           // primary key column generated code
   &quot;PKNAME&quot;       // primary key column name
   &quot;FK&quot;           // foreign key column generated code
   &quot;FKNAME&quot;       // foreign key column name
   &quot;AK&quot;           // alternate key column code (same as PK)
   &quot;AKNAME&quot;       // alternate key column name (same as PKNAME)
   &quot;COLTYPE&quot;      // primary column column datatype
   &quot;DEFAULT&quot;      // foreign key column default value
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o103">
<a:Name>Enable</a:Name>
<a:Comment>Foreign key allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o104">
<a:Name>FKAutoIndex</a:Name>
<a:Comment>Foreign key is auto-indexed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o105">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>FK_%.U8:CHILD%_%.U9:REFR%_%.U8:PARENT%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for foreign keys</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o106">
<a:Name>CheckOnCommit</a:Name>
<a:Comment>Referential integrity test differed after the COMMIT</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o107">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME%] foreign key (%FKEYCOLUMNS%)
      references [%PQUALIFIER%]%PARENT%[ (%CKEYCOLUMNS%)]
      [%R%?on delete %DELCONST%:[%DELCONST%=RESTRICT? :[on delete %DELCONST%]]]
      [%R%?on update %UPDCONST%:[%UPDCONST%=RESTRICT? :[on update %UPDCONST%]]]
</a:TextTargetItem.Value>
<a:Comment>Command for defining a foreign key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o108">
<a:Name>DclUpdIntegrity</a:Name>
<a:TextTargetItem.Value>NO ACTION
RESTRICT
CASCADE
SET NULL
SET DEFAULT
</a:TextTargetItem.Value>
<a:Comment>Declarative referential integrity constraint allowed for update</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o109">
<a:Name>DclDelIntegrity</a:Name>
<a:TextTargetItem.Value>NO ACTION
RESTRICT
CASCADE
SET NULL
SET DEFAULT
</a:TextTargetItem.Value>
<a:Comment>Declarative referential integrity constraint allowed for delete</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o110">
<a:Name>EnablefKeyName</a:Name>
<a:Comment>Foreign key role allowed in database generation</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o111">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>alter table [%QUALIFIER%]%TABLE%
   add [constraint %CONSTNAME%] foreign key (%FKEYCOLUMNS%)
      references [%PQUALIFIER%]%PARENT%[ (%CKEYCOLUMNS%)]
      [%R%?on delete %DELCONST%:[%DELCONST%=RESTRICT? :[on delete %DELCONST%]]]
      [%R%?on update %UPDCONST%:[%UPDCONST%=RESTRICT? :[on update %UPDCONST%]]]
</a:TextTargetItem.Value>
<a:Comment>Command for adding a foreign key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o112">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a foreign key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o113">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{COWNER, CHILD, FKCONSTRAINT, POWNER, PARENT, PKCONSTRAINT, UPDCONST, DELCONST}

select
   c.rdb$owner_name,
   c.rdb$relation_name,
   k.rdb$constraint_name,
   p.rdb$owner_name,
   p.rdb$relation_name,
   k.rdb$const_name_uq,
   k.rdb$update_rule,
   k.rdb$delete_rule
from
   rdb$relations c,
   rdb$relations p,
   rdb$ref_constraints k,
   rdb$relation_constraints j,
   rdb$relation_constraints i
where
   j.rdb$relation_name=c.rdb$relation_name
   and j.rdb$constraint_type=&#39;FOREIGN KEY&#39;
   and k.rdb$constraint_name=j.rdb$constraint_name
   and i.rdb$constraint_name=k.rdb$const_name_uq
   and p.rdb$relation_name=i.rdb$relation_name
[  and c.rdb$relation_name=%.q:TABLE%]
[  and c.rdb$owner_name=%.q:OWNER%]</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o114">
<a:Name>SqlListChildrenQuery</a:Name>
<a:TextTargetItem.Value>{CKEYCOLUMN, FKEYCOLUMN}

select
   p.rdb$field_name,
   c.rdb$field_name
from
   rdb$index_segments p,
   rdb$relation_constraints r,
   rdb$index_segments c,
   rdb$relation_constraints j,
   rdb$ref_constraints k
where
   k.rdb$constraint_name=%.q:FKCONSTRAINT%
   and p.rdb$index_name=r.rdb$index_name
   and c.rdb$index_name=j.rdb$index_name
   and j.rdb$constraint_name=k.rdb$constraint_name
   and r.rdb$constraint_name=k.rdb$const_name_uq
order by
   p.rdb$field_position</a:TextTargetItem.Value>
<a:Comment>SQL query to list reference joins</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o115">
<a:Name>Permission</a:Name>
<a:Code>PERM</a:Code>
<a:Comment>Manages the permissions on database objects</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o116">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>grant %PERMLIST% on [%@CLSSCODE%=PROC?procedure ]%OBJECT% to %GRANTEE% [%GRANTOPTION%]</a:TextTargetItem.Value>
<a:Comment>Command for granting permissions.</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o117">
<a:Name>Enable</a:Name>
<a:Comment>Permission allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o118">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>revoke [%REVOKEOPTION% ]%REVPERMLIST% on %OBJECT% from %GRANTEE%</a:TextTargetItem.Value>
<a:Comment>Command for revoking permissions.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o119">
<a:Name>GrantOption</a:Name>
<a:TextTargetItem.Value>with grant option</a:TextTargetItem.Value>
<a:Comment>Option for the grant statement.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o120">
<a:Name>RevokeOption</a:Name>
<a:TextTargetItem.Value>grant option for</a:TextTargetItem.Value>
<a:Comment>Option for the revoke statement.</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o121">
<a:Name>PKey</a:Name>
<a:Code>PKEY</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for keys)
   &quot;PKEYCOLUMNS&quot;  // list of primary key columns. Eg: A, B
   &quot;ISPKEY&quot;       // TRUE when the key is the primary key of the table
   &quot;KEY&quot;          // constraint name
   &quot;PKEY&quot;         // constraint name for primary key
   &quot;AKEY&quot;         // constraint name for alternate key
   &quot;ISMULTICOLN&quot;  // TRUE if key has more than one column
   &quot;CLUSTER&quot;      // keyword cluster</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o122">
<a:Name>Enable</a:Name>
<a:Comment>Primary key allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o123">
<a:Name>PkAutoIndex</a:Name>
<a:Comment>Primary key is auto-indexed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o124">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>PK_%.U27:TABLE%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for primary keys</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o125">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME%] primary key (%PKEYCOLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for defining a primary key</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o126">
<a:Name>Key</a:Name>
<a:Code>KEY</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for keys)
   &quot;COLUMNS&quot;      // List of columns of the key. Eg: &quot;A, B, C&quot;
   &quot;ISPKEY&quot;       // TRUE when the key is the primary key of the table
   &quot;KEY&quot;          // constraint name
   &quot;PKEY&quot;         // constraint name for primary key
   &quot;AKEY&quot;         // constraint name for alternate key
   &quot;ISMULTICOLN&quot;  // TRUE if key has more than one column
   &quot;CLUSTER&quot;      // keyword cluster
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o127">
<a:Name>Enable</a:Name>
<a:Comment>UNIQUE constraint allowed for tables</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o128">
<a:Name>UniqConstAutoIndex</a:Name>
<a:Comment>UNIQUE constraint is auto-indexed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o129">
<a:Name>ConstName</a:Name>
<a:TextTargetItem.Value>AK_%.U18:AKEY%_%.U8:TABLE%</a:TextTargetItem.Value>
<a:Comment>Constraint name template for alternate keys</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o130">
<a:Name>SqlAkeyIndex</a:Name>
<a:TextTargetItem.Value>{TABLE, INDEX, CONSTNAME}

select
   k.rdb$relation_name,
   k.rdb$index_name,
   k.rdb$constraint_name
from
   rdb$relation_constraints k
where
   rdb$relation_name=%.q:TABLE%</a:TextTargetItem.Value>
<a:Comment>SQL query to obtain the alternate key indexes of a table by ODBC</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o131">
<a:Name>Add</a:Name>
<a:TextTargetItem.Value>[constraint %CONSTNAME%] unique (%COLUMNS%)</a:TextTargetItem.Value>
<a:Comment>Command for defining an alternate key</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o132">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER ID, TABLE ID, CONSTNAME ID, ISPKEY ID(&#39;PRIMARY KEY&#39;=1, *=0), COLUMNS ...}

select
   t.rdb$owner_name,
   t.rdb$relation_name,
   k.rdb$constraint_name,
   k.rdb$constraint_type,
   c.rdb$field_name||&#39;,&#39;
from
   rdb$relations t,
   rdb$relation_constraints k,
   rdb$index_segments c
where
   k.rdb$relation_name=t.rdb$relation_name
   and rdb$index_name=k.rdb$index_name
[  and t.rdb$owner_name=%.q:OWNER%]
[  and t.rdb$relation_name=%.q:TABLE%]
order by
   1, 2, 3, c.rdb$field_position</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o133">
<a:Name>Domain</a:Name>
<a:Code>PDMDOMN</a:Code>
<a:Comment>The following system variables are available:
   &quot;DOMAIN&quot;       // generated code of the domain (also available for columns)
SQL Server specific domain system variables:
   &quot;RULENAME&quot;     // name of the rule object associated with the domain
   &quot;DEFAULTNAME&quot;  // name of the default object associated with the domain
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o134">
<a:Name>Enable</a:Name>
<a:Comment>User defined data types allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o135">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>31</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o136">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create domain %DOMAIN% as %DATATYPE% [default %DEFAULT%] [%NOTNULL%]
      [check (%.A:CONSTRAINT%)]</a:TextTargetItem.Value>
<a:Comment>Command for creating a user defined data type</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o137">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop domain %DOMAIN%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a user defined data type</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o138">
<a:Name>Role</a:Name>
<a:Code>ROLE</a:Code>
<a:Comment>Manages the role object.</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o139">
<a:Name>Enable</a:Name>
<a:Comment>Role allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o140">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create role %ROLE%</a:TextTargetItem.Value>
<a:Comment>Command for creating a role.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o141">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{ROLE}

select
   rdb$role_name
from
   rdb$roles
order by rdb$role_name</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o142">
<a:Name>Bind</a:Name>
<a:TextTargetItem.Value>grant %ROLE% to %USER%</a:TextTargetItem.Value>
<a:Comment>Command for assigning a role to a user or another role</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o143">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop role %ROLE%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a role.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o144">
<a:Name>SqlListChildrenQuery</a:Name>
<a:TextTargetItem.Value>{ ROLE ID, MEMBER ...}

select
   p.rdb$relation_name,
   p.rdb$user||&#39;,&#39;
from
   rdb$user_privileges p
where
   p.rdb$privilege = &#39;M&#39;
[  and p.rdb$relation_name = %.q:ROLE%]
order by p.rdb$relation_name
</a:TextTargetItem.Value>
<a:Comment>SQL query to list assigned ids to the role.</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o145">
<a:Name>Tablespace</a:Name>
<a:Code>TSPC</a:Code>
<a:Comment>The following system variables are available:
   &quot;TABLESPACE&quot;   // generated code of the tablespace
</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o146">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a tablespace. Example: create tablespace %TABLESPACE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o147">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a tablespace. Example: drop tablespace %TABLESPACE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o148">
<a:Name>Options</a:Name>
<a:Comment>Default options for creating a tablespace.</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o149">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for tablespace options.</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o150">
<a:Name>Storage</a:Name>
<a:Code>STOR</a:Code>
<a:Comment>The following system variables are available:
   &quot;STORAGE&quot;      // generated code of the storage
</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o151">
<a:Name>Create</a:Name>
<a:Comment>Command for creating a storage. Example: create storage %STORAGE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o152">
<a:Name>Drop</a:Name>
<a:Comment>Command for dropping a storage. Example: drop storage %STORAGE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o153">
<a:Name>Options</a:Name>
<a:Comment>Default options for creating a storage</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o154">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for storage options</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o155">
<a:Name>Database</a:Name>
<a:Code>DTBS</a:Code>
<a:Comment>The following system variables are available:
   &quot;DATABASE&quot;     // generated code of the database
</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o156">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create database &quot;%DATABASE%&quot;
[%OPTIONS%]</a:TextTargetItem.Value>
<a:Comment>Command for creating a database. Example: create database %DATABASE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o157">
<a:Name>Options</a:Name>
<a:TextTargetItem.Value>user %s
password %s
page_size = %d : default=1024, list=1024 | 2048 | 4096 | 8192
length = %d
default character set %s
file %s : composite=yes, multiple=yes
{
length = %d
starting at page %d
}</a:TextTargetItem.Value>
<a:Comment>Available options for creating a database</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o158">
<a:Name>DefOptions</a:Name>
<a:Comment>Default values for database options</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o159">
<a:Name>OpenDatabase</a:Name>
<a:TextTargetItem.Value>connect &quot;%DATABASE%&quot;
user &quot;%USER%&quot; password &quot;%USER%&quot;</a:TextTargetItem.Value>
<a:Comment>Command for opening a database. Example: open database %DATABASE%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o160">
<a:Name>CloseDatabase</a:Name>
<a:TextTargetItem.Value>disconnect &quot;%DATABASE%&quot;</a:TextTargetItem.Value>
<a:Comment>Command for closing a database. Example: close database</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o161">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>DROP %DATABASE%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a database. Example: drop database %DATABASE%</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o162">
<a:Name>Enable</a:Name>
<a:Comment>Database allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o163">
<a:Name>View</a:Name>
<a:Code>VIEW</a:Code>
<a:Comment>The following system variables are available:
   &quot;VIEW&quot;         // generated code of the view
   &quot;VIEWNAME&quot;     // view name
   &quot;VIEWCODE&quot;     // view code
   &quot;VIEWCOLN&quot;     // List of columns of the view. Eg: &quot;A, B, C&quot;
   &quot;SQL&quot;          // SQL text of the view. Eg: Select * from T1
   &quot;VIEWCHECK&quot;    // Keyword &quot;with check option&quot; if selected on the view
   &quot;SCRIPT&quot;       // complete view creation order. Eg: create view V1 as select * from T1
</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o164">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create view %VIEW%[ (%VIEWCOLN%)] as
%SQL%
[%VIEWCHECK%]</a:TextTargetItem.Value>
<a:Comment>Command for creating a view. Example: create view %VIEW%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o165">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop view %VIEW%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a view. Example: drop view %VIEW%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o166">
<a:Name>ViewComment</a:Name>
<a:Comment>Command for adding a view comment.</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o167">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a view.
The first column is the SQL name of permission (eg: SELECT)
The second column is a shortname to display in a grid</a:Comment>
<a:MapTargetItem.Value>SELECT=Sel
UPDATE=Upd
INSERT=Ins
DELETE=Del
REFERENCE=Ref</a:MapTargetItem.Value>
<a:List>SELECT
UPDATE
INSERT
DELETE
REFERENCE
</a:List>
</o:MapTargetItem>
<o:TextTargetItem Id="o168">
<a:Name>ReversedQueries</a:Name>
<a:TextTargetItem.Value>SqlColnListQuery</a:TextTargetItem.Value>
<a:Comment>Additional attributes queries to be called by ODBC</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o169">
<a:Name>ViewCheck</a:Name>
<a:TextTargetItem.Value>with check option</a:TextTargetItem.Value>
<a:Comment>Option for checking a view</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o170">
<a:Name>SqlColnListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER ID, VIEW ID, VIEWCOLN ...}

select distinct
   t.rdb$owner_name,
   v.rdb$view_name,
   c.rdb$field_name||&#39;,&#39;
from
   rdb$view_relations v,
   rdb$relations t,
   rdb$relation_fields c
where
   v.rdb$view_name = t.rdb$relation_name
   and c.rdb$relation_name = t.rdb$relation_name
[  and t.rdb$owner_name=%.q:OWNER%]
[  and v.rdb$view_name=%.q:VIEW%]
order by
   1, 2, c.rdb$field_id
</a:TextTargetItem.Value>
<a:Comment>SQL query to list view columns</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o171">
<a:Name>Enable</a:Name>
<a:Comment>View allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:TextTargetItem Id="o172">
<a:Name>SqlPermQuery</a:Name>
<a:TextTargetItem.Value>{GRANTEE ID, PERMISSION ...}

select s.rdb$user, cast(&#39;SELECT+, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 1 and s.rdb$privilege = &#39;S&#39;[ and s.rdb$relation_name = %.q:VIEW%]
union
select s.rdb$user, cast(&#39;SELECT, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 0 and s.rdb$privilege = &#39;S&#39;[ and s.rdb$relation_name = %.q:VIEW%]
union
select s.rdb$user, cast(&#39;UPDATE+, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 1 and s.rdb$privilege = &#39;U&#39;[ and s.rdb$relation_name = %.q:VIEW%]
union
select s.rdb$user, cast(&#39;UPDATE, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 0 and s.rdb$privilege = &#39;U&#39;[ and s.rdb$relation_name = %.q:VIEW%]
union
select s.rdb$user, cast(&#39;INSERT+, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 1 and s.rdb$privilege = &#39;I&#39;[ and s.rdb$relation_name = %.q:VIEW%]
union
select s.rdb$user, cast(&#39;INSERT, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 0 and s.rdb$privilege = &#39;I&#39;[ and s.rdb$relation_name = %.q:VIEW%]
union
select s.rdb$user, cast(&#39;DELETE+, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 1 and s.rdb$privilege = &#39;D&#39;[ and s.rdb$relation_name = %.q:VIEW%]
union
select s.rdb$user, cast(&#39;DELETE, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 0 and s.rdb$privilege = &#39;D&#39;[ and s.rdb$relation_name = %.q:VIEW%]
union
select s.rdb$user, cast(&#39;REFERENCE+, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 1 and s.rdb$privilege = &#39;R&#39;[ and s.rdb$relation_name = %.q:VIEW%]
union
select s.rdb$user, cast(&#39;REFERENCE, &#39; as char(15))
from   rdb$user_privileges s
where  s.rdb$grant_option = 0 and s.rdb$privilege = &#39;R&#39;[ and s.rdb$relation_name = %.q:VIEW%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o173">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, VIEW}

select distinct
   t.rdb$owner_name,
   v.rdb$view_name
from
   rdb$view_relations v,
   rdb$relations t
where
   v.rdb$view_name = t.rdb$relation_name
[  and t.rdb$owner_name=%.q:SCHEMA%]
order by
   1, 2
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o174">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, VIEW, SQL}

select distinct
   t.rdb$owner_name,
   v.rdb$view_name,
   t.rdb$view_source
from
   rdb$view_relations v,
   rdb$relations t
where
   v.rdb$view_name = t.rdb$relation_name
[  and t.rdb$owner_name=%.q:OWNER%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o175">
<a:Name>Trigger</a:Name>
<a:Code>TRGR</a:Code>
<a:Comment>The following system variables are available:
(parent table items are also available for indexes)
 trigger object specific items
   &quot;ORDER&quot;        // order number of the trigger (to sort the triggers when the DBMS supports more than one trigger of one type)
   &quot;TRIGGER&quot;      // generated code of trigger
   &quot;TRGTYPE&quot;      // trigger type (keywords &quot;beforeinsert&quot;, &quot;afterupdate&quot;, ...)
   &quot;TRGEVENT&quot;     // trigger event (keywords &quot;insert&quot;, &quot;update&quot;, &quot;delete&quot;)
   &quot;TRGTIME&quot;      // trigger time (keywords NULL, &quot;before&quot;, &quot;after&quot;)
 inside the body of the trigger, macros redefine variables on objects
   &quot;REFNO&quot;        // reference position in the list of references of the table
 customized error messages management
   &quot;ERRNO&quot;        // error number for standard error
   &quot;ERRMSG&quot;       // error message for standard error
   &quot;MSGTAB&quot;       // name of the table containing user-defined error messages
   &quot;MSGNO&quot;        // in the user-defined error table, name of the column containing the error numbers
   &quot;MSGTXT&quot;       // in the user-defined error table, name of the column containing the error messages
   &quot;SCRIPT&quot;       // body of trigger or procedure
   &quot;TRGDEFN&quot;      // complete body of the trigger definition. Contains variable declarations and body of trigger or procedure
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o176">
<a:Name>Enable</a:Name>
<a:Comment>Trigger allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o177">
<a:Name>EnableMultiTrigger</a:Name>
<a:Comment>Multi trigger allowed</a:Comment>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o178">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>31</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o179">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop trigger %TRIGGER%
</a:TextTargetItem.Value>
<a:Comment>Command for dropping a trigger. Example: drop trigger %TRIGGER%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o180">
<a:Name>UseErrorMsgTable</a:Name>
<a:Comment>Errors handling using an error messages table</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o181">
<a:Name>UseErrorMsgText</a:Name>
<a:Comment>Errors handling using fixed error messages</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o182">
<a:Name>DefaultTriggerName</a:Name>
<a:TextTargetItem.Value>%TEMPLATE%_%.L:TABLE%</a:TextTargetItem.Value>
<a:Comment>Default trigger name</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o183">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TABLE, TRIGGER, TRGEVENT (1=Insert, 2=Insert, 3=Update, 4=Update, 5=Delete, 6=Delete), TRGTIME (1=Before, 2= After, 3= Before, 4= After, 5= Before, 6= After)}

select
   r.rdb$owner_name,
   t.rdb$relation_name,
   t.rdb$trigger_name,
   t.rdb$trigger_type,
   t.rdb$trigger_type
from
  rdb$relations r, rdb$triggers t
where
   r.rdb$relation_name = t.rdb$relation_name
   and not exists (select 1 from rdb$check_constraints c where c.rdb$trigger_name = t.rdb$trigger_name)
[  and r.rdb$owner_name=%.q:OWNER%]
[  and t.rdt$relation_name=%.q:TABLE%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o184">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, TABLE, TRIGGER, TRGDEFN}

select
   r.rdb$owner_name,
   t.rdb$relation_name,
   t.rdb$trigger_name,
   t.rdb$trigger_source
from
   rdb$relations r,
   rdb$triggers t
where
   r.rdb$relation_name=t.rdb$relation_name
[  and r.rdb$owner_name=%.q:OWNER%]
[  and t.rdb$trigger_name=%.q:TRIGGER%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o185">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create trigger %TRIGGER% for %TABLE%[%R%? active][%R%? inactive] %TRGTIME% %TRGEVENT%[%R%? position %ORDER%]
%TRGDEFN%/
</a:TextTargetItem.Value>
<a:Comment>Command for creating a trigger. Example: create trigger on [%QUALIFIER%]%TABLE% %TRGDEFN%</a:Comment>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o186">
<a:Name>Procedure</a:Name>
<a:Code>PROC</a:Code>
<a:Comment>The following system variables are available:
   &quot;PROC&quot;         // generated code of the procedure (also available for trigger when the trigger is implemented with a procedure)
   &quot;FUNC&quot;         // generated code of the procedure if the procedure is a function (with return value)
   &quot;PROCPRMS&quot;     // list of parameters of the procedure (also available for function)
</a:Comment>
<c:Categories>
<o:BooleanTargetItem Id="o187">
<a:Name>Enable</a:Name>
<a:Comment>Procedure allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:BooleanTargetItem Id="o188">
<a:Name>EnableFunc</a:Name>
<a:Comment>Function allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
<o:IntegerTargetItem Id="o189">
<a:Name>Maxlen</a:Name>
<a:Comment>Maximum object code length</a:Comment>
<a:IntegerTargetItem.Value>31</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:IntegerTargetItem Id="o190">
<a:Name>MaxFuncLen</a:Name>
<a:Comment>Function name length</a:Comment>
<a:IntegerTargetItem.Value>31</a:IntegerTargetItem.Value>
</o:IntegerTargetItem>
<o:TextTargetItem Id="o191">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>drop procedure %PROC%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a procedure. Example: drop procedure %PROC%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o192">
<a:Name>DropFunc</a:Name>
<a:TextTargetItem.Value>drop external function %FUNC%</a:TextTargetItem.Value>
<a:Comment>Command for dropping a function. Example: drop function %FUNC%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o193">
<a:Name>CustomProc</a:Name>
<a:TextTargetItem.Value>set term /;
create procedure %PROC% (&lt;arg&gt; &lt;type&gt;)
returns &lt;arg&gt; &lt;type&gt;
as
   declare variable &lt;var&gt; &lt;type&gt;;
begin

end;/
set term ;/</a:TextTargetItem.Value>
<a:Comment>Command for creating a stored procedure</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o194">
<a:Name>CustomFunc</a:Name>
<a:TextTargetItem.Value>declare external function %FUNC% &lt;arg&gt; &lt;type&gt;
returns &lt;type&gt; [by value]
entry_point &quot;&lt;entryname&gt;&quot;
module_name &quot;&lt;modulename&gt;&quot;;</a:TextTargetItem.Value>
<a:Comment>Command for creating a function</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o195">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create procedure %PROC%[%PROCPRMS%?([%PROCPRMS%])]
%TRGDEFN%</a:TextTargetItem.Value>
<a:Comment>Command for creating a procedure. Example: create procedure %PROC% %TRGDEFN%</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o196">
<a:Name>CreateFunc</a:Name>
<a:TextTargetItem.Value>declare external function %FUNC% [%PROCPRMS%]
%TRGDEFN%</a:TextTargetItem.Value>
<a:Comment>Command for creating a function. Example: create function %FUNC% %TRGDEFN%</a:Comment>
</o:TextTargetItem>
<o:MapTargetItem Id="o197">
<a:Name>Permission</a:Name>
<a:Comment>Available permission for a procedure.
The first column is the SQL name of permission (eg: EXECUTE)
The second column is a shortname to display in a grid</a:Comment>
<a:MapTargetItem.Value>EXECUTE=Exec</a:MapTargetItem.Value>
<a:List>EXECUTE
</a:List>
</o:MapTargetItem>
<o:TextTargetItem Id="o198">
<a:Name>SqlAttrQuery</a:Name>
<a:TextTargetItem.Value>{OWNER ID, PROC ID, SCRIPT EX ...}

select
   p.rdb$owner_name,
   p.rdb$procedure_name,
   cast(&#39;create procedure &#39;||p.rdb$procedure_name as varchar(127)),
   1
from
   rdb$procedures p
union select
   p.rdb$owner_name,
   p.rdb$procedure_name,
   cast(&#39; (%SqlProcInParmList.P&#39;||cast(p.rdb$procedure_id as varchar(10))||&#39;%)&#39; as varchar(127)),
   2
from
   rdb$procedures p
where
   p.rdb$procedure_inputs &gt; 0
union select
   p.rdb$owner_name,
   p.rdb$procedure_name,
   cast(&#39; return %SqlProcOutParmList.P&#39;||cast(p.rdb$procedure_id as varchar(10))||&#39;%&#39; as varchar(127)),
   3
from
   rdb$procedures p
where
   p.rdb$procedure_outputs &gt; 0
union select
   p.rdb$owner_name,
   p.rdb$procedure_name,
   cast(&#39; as %SqlProcText.P&#39;||cast(p.rdb$procedure_id as varchar(10))||&#39;%&#39; as varchar(127)),
   4
from
   rdb$procedures p
order by 1, 2, 4</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object attributes</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o199">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{OWNER, PROC}

select
   p.rdb$owner_name,
   p.rdb$procedure_name
from
   rdb$procedures p
order by 1, 2</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o200">
<a:Name>SqlPermQuery</a:Name>
<a:TextTargetItem.Value>{GRANTEE ID, PERMISSION ...}

select 
   s.rdb$user, 
   cast(&#39;EXECUTE+, &#39; as char(15))
from   
   rdb$user_privileges s
where  (s.rdb$grant_option = 1 or s.rdb$grant_option is null) 
   and s.rdb$privilege = &#39;X&#39; 
   and rdb$object_type = 5
[  and s.rdb$relation_name = %.q:PROC%]
[  and s.rdb$user != %.q:OWNER%]
union select 
   s.rdb$user, 
   cast(&#39;EXECUTE, &#39; as char(15))
from   
   rdb$user_privileges s
where  (s.rdb$grant_option = 0) 
   and s.rdb$privilege = &#39;X&#39; 
   and rdb$object_type = 5
[  and s.rdb$relation_name = %.q:PROC%]
[  and s.rdb$user != %.q:OWNER%]
</a:TextTargetItem.Value>
<a:Comment>SQL query to reverse object permissions</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o201">
<a:Name>SqlProcInParmList</a:Name>
<a:TextTargetItem.Value>{VAR ID, VAL ...}

select
   &#39;P&#39;||cast(p.rdb$procedure_id as varchar(10)),
   cast(v.rdb$parameter_name as varchar(32)),
   v.rdb$parameter_number
from
   rdb$procedure_parameters v,
   rdb$procedures p
where
   p.rdb$procedure_name = v.rdb$procedure_name
   and v.rdb$procedure_name = %.q:PROC%
   and v.rdb$parameter_type = 0
   and v.rdb$parameter_number = 0
union select
   &#39;P&#39;||cast(p.rdb$procedure_id as varchar(10)),
   cast(&#39;,&#39;||v.rdb$parameter_name as varchar(32)),
   v.rdb$parameter_number
from
   rdb$procedure_parameters v,
   rdb$procedures p
where
   p.rdb$procedure_name = v.rdb$procedure_name
   and v.rdb$procedure_name = %.q:PROC%
   and v.rdb$parameter_type = 0
   and v.rdb$parameter_number &gt; 0
order by 1, 3</a:TextTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TextTargetItem>
<o:TextTargetItem Id="o202">
<a:Name>SqlProcOutParmList</a:Name>
<a:TextTargetItem.Value>{VAR ID, VAL ...}

select
   &#39;P&#39;||cast(p.rdb$procedure_id as varchar(10)),
   cast(v.rdb$parameter_name as varchar(32)),
   v.rdb$parameter_number
from
   rdb$procedure_parameters v,
   rdb$procedures p
where
   p.rdb$procedure_name = v.rdb$procedure_name
   and v.rdb$procedure_name = %.q:PROC%
   and v.rdb$parameter_type = 1
   and v.rdb$parameter_number = 0
union select
   &#39;P&#39;||cast(p.rdb$procedure_id as varchar(10)),
   cast(&#39;,&#39;||v.rdb$parameter_name as varchar(32)),
   v.rdb$parameter_number
from
   rdb$procedure_parameters v,
   rdb$procedures p
where
   p.rdb$procedure_name = v.rdb$procedure_name
   and v.rdb$procedure_name = %.q:PROC%
   and v.rdb$parameter_type = 1
   and v.rdb$parameter_number &gt; 0
order by 1, 3</a:TextTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TextTargetItem>
<o:TextTargetItem Id="o203">
<a:Name>SqlProcText</a:Name>
<a:TextTargetItem.Value>{VAR, VAL}

select
   &#39;P&#39;||cast(p.rdb$procedure_id as varchar(10)),
   p.rdb$procedure_source
from
   rdb$procedures p</a:TextTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:TextTargetItem>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o204">
<a:Name>Sequence</a:Name>
<a:Code>SQNC</a:Code>
<a:Comment>The following system variables are available:
   &quot;SQNC&quot;         // generated code of the sequence
</a:Comment>
<c:Categories>
<o:TextTargetItem Id="o205">
<a:Name>SqlListQuery</a:Name>
<a:TextTargetItem.Value>{SQNC}

select
   rdb$generator_name
from
   rdb$generators
where
   rdb$system_flag is null</a:TextTargetItem.Value>
<a:Comment>SQL query to list objects</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o206">
<a:Name>Drop</a:Name>
<a:TextTargetItem.Value>delete from rdb$generators where rdb$generator_name=%.q:SQNC%</a:TextTargetItem.Value>
<a:Comment>Command to drop a sequence</a:Comment>
</o:TextTargetItem>
<o:TextTargetItem Id="o207">
<a:Name>Create</a:Name>
<a:TextTargetItem.Value>create generator %SQNC%[%ExtIncrement%? increment by %ExtIncrement%][%ExtStartWith%?;
set senerator %SQNC% to %ExtStartWith%]</a:TextTargetItem.Value>
<a:Comment>Command to create a sequence</a:Comment>
</o:TextTargetItem>
<o:BooleanTargetItem Id="o208">
<a:Name>Enable</a:Name>
<a:Comment>Sequence allowed</a:Comment>
<a:Value>1</a:Value>
</o:BooleanTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:TargetCategory Id="o209">
<a:Name>DataType</a:Name>
<a:Comment>Contains data type translation entries. These entries list the correspondence between internal data types and the target database data types</a:Comment>
<c:Categories>
<o:MapTargetItem Id="o210">
<a:Name>AmcdDataType</a:Name>
<a:Comment>Data types translation table from internal data types to target database data types.
        %n is the length of the data type
        %s is the size of the data type
        %p is the precision of the data type</a:Comment>
<a:MapTargetItem.Value>&lt;UNDEF&gt;=&lt;Undefined&gt;
A%n=CHAR(%n)
VA%n=VARCHAR(%n)
LA=VARCHAR(1)
LA%n=VARCHAR(%n)
LVA=VARCHAR(1)
LVA%n=VARCHAR(%n)
BT=SMALLINT
BT%n=SMALLINT
SI=SMALLINT
I=INTEGER
LI=INTEGER
N=NUMERIC
N%n=NUMERIC(%n)
N%s,%p=NUMERIC(%s,%p)
DC=DECIMAL
DC%n=DECIMAL(%n)
DC%s,%p=DECIMAL(%s,%p)
SF=FLOAT
F=FLOAT
F%n=FLOAT
LF=DOUBLE PRECISION
MN=NUMERIC(8,2)
MN%n=NUMERIC(%n)
MN%s,%p=NUMERIC(%s,%p)
D=DATE
T=DATE
DT=DATE
TS=DATE
BL=SMALLINT
NO=SMALLINT
NO%n=NUMERIC(%n)
BIN%n=BLOB
LBIN=BLOB
LBIN%n=BLOB
TXT=BLOB
TXT%n=BLOB
MBT=NCHAR
MBT%n=NCHAR(%n)
VMBT=NCHAR VARYING(255)
VMBT%n=NCHAR VARYING(%n)
PIC=BLOB
PIC%n=BLOB
BMP=BLOB
BMP%n=BLOB
OLE=BLOB
OLE%n=BLOB
*=CHAR(10)</a:MapTargetItem.Value>
<a:List>&lt;UNDEF&gt;
A%n
VA%n
LA
LA%n
LVA
LVA%n
BT
BT%n
SI
I
LI
N
N%n
N%s,%p
DC
DC%n
DC%s,%p
SF
F
F%n
LF
MN
MN%n
MN%s,%p
D
T
DT
TS
BL
NO
NO%n
BIN%n
LBIN
LBIN%n
TXT
TXT%n
MBT
MBT%n
VMBT
VMBT%n
PIC
PIC%n
BMP
BMP%n
OLE
OLE%n
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o211">
<a:Name>PhysDataType</a:Name>
<a:Comment>Data types translation table from target database data types to internal data types.</a:Comment>
<a:MapTargetItem.Value>&lt;Undefined&gt;=&lt;UNDEF&gt;
CHAR=A1
CHAR(%n)=A%n
CHARACTER=A1
CHARACTER(%n)=A%n
NCHAR=MBT
NCHAR(%n)=MBT%n
NATIONAL CHAR=MBT
NATIONAL CHAR(%n)=MBT%n
NATIONAL CHARACTER=MBT
NATIONAL CHARACTER(%n)=MBT%n
VARCHAR=VA1
VARCHAR(%n)=VA%n
CHARACTER VARYING=VA1
CHARACTER VARYING(%n)=VA%n
NCHAR VARYING=VMBT
NCHAR VARYING(%n)=VMBT%n
NATIONAL CHAR VARYING=VMBT
NATIONAL CHAR VARYING(%n)=VMBT%n
NATIONAL CHARACTER VARYING=VMBT
NATIONAL CHARACTER VARYING(%n)=VMBT%n
NUMERIC=N
NUMERIC(%n)=N%n
NUMERIC(%s,%p)=N%s,%p
DECIMAL=DC
DECIMAL(%n)=DC%n
DECIMAL(%s,%p)=DC%s,%p
INTEGER=I
SMALLINT=SI
FLOAT=F
DOUBLE PRECISION=F
DATE=D
BLOB=LBIN
*=A10</a:MapTargetItem.Value>
<a:List>&lt;Undefined&gt;
CHAR
CHAR(%n)
CHARACTER
CHARACTER(%n)
NCHAR
NCHAR(%n)
NATIONAL CHAR
NATIONAL CHAR(%n)
NATIONAL CHARACTER
NATIONAL CHARACTER(%n)
VARCHAR
VARCHAR(%n)
CHARACTER VARYING
CHARACTER VARYING(%n)
NCHAR VARYING
NCHAR VARYING(%n)
NATIONAL CHAR VARYING
NATIONAL CHAR VARYING(%n)
NATIONAL CHARACTER VARYING
NATIONAL CHARACTER VARYING(%n)
NUMERIC
NUMERIC(%n)
NUMERIC(%s,%p)
DECIMAL
DECIMAL(%n)
DECIMAL(%s,%p)
INTEGER
SMALLINT
FLOAT
DOUBLE PRECISION
DATE
BLOB
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o212">
<a:Name>PhysDttpSize</a:Name>
<a:Comment>Table of storage sizes of target database data type</a:Comment>
<a:MapTargetItem.Value>DATE=8</a:MapTargetItem.Value>
<a:List>DATE
</a:List>
</o:MapTargetItem>
<o:MapTargetItem Id="o213">
<a:Name>OdbcPhysDataType</a:Name>
<a:Comment>Data types translation table from ODBC data types to target database data types.</a:Comment>
<a:MapTargetItem.Value>CHAR(1)=CHAR
DECIMAL(4)=INTEGER
DOUBLE(8)=DOUBLE PRECISION
DECIMAL(8)=DOUBLE PRECISION</a:MapTargetItem.Value>
<a:List>CHAR(1)
DECIMAL(4)
DOUBLE(8)
DECIMAL(8)
</a:List>
</o:MapTargetItem>
</c:Categories>
</o:TargetCategory>
</c:Categories>
</o:TargetCategory>
<o:ProfileTargetItem Id="o214">
<a:Name>Profile</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TargetCategory Id="o215">
<a:Name>Shared</a:Name>
<a:Code>Shared</a:Code>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TypedCategoryTargetItem Id="o216">
<a:TypePublicName>ExtendedAttributeTypeTargetItem</a:TypePublicName>
<a:Name>Extended Attribute Types</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:ExtendedAttributeTypeTargetItem Id="o217">
<a:ObjectID>04E0B71A-8042-448D-9390-437874C79D1D</a:ObjectID>
<a:Name>ExtAscDescList</a:Name>
<a:Comment>List of acceptable values for index AscDesc attribute
</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTypeTargetItem.Value>asc</a:ExtendedAttributeTypeTargetItem.Value>
<a:ExtendedAttributeTypeTargetItem.ListOfValues>ascending
descending
asc
desc</a:ExtendedAttributeTypeTargetItem.ListOfValues>
</o:ExtendedAttributeTypeTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:TargetCategory>
<o:MetaClassTargetItem Id="o218">
<a:Name>Sequence</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TypedCategoryTargetItem Id="o219">
<a:TypePublicName>ExtendedAttributeTargetItem</a:TypePublicName>
<a:Name>Extended Attributes</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:ExtendedAttributeTargetItem Id="o220">
<a:ObjectID>38A235B5-1999-423E-B50A-E839AEB5A1C5</a:ObjectID>
<a:Name>ExtStartWith</a:Name>
<a:Comment>First value for Interbase generator (Sequence)</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTargetItem.DataType>10</a:ExtendedAttributeTargetItem.DataType>
</o:ExtendedAttributeTargetItem>
<o:ExtendedAttributeTargetItem Id="o221">
<a:ObjectID>4C49E7B2-51C8-444F-A67C-FD3C6EF4386B</a:ObjectID>
<a:Name>ExtIncrement</a:Name>
<a:Comment>Increment value for Interbase generator (Sequence)
</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTargetItem.DataType>10</a:ExtendedAttributeTargetItem.DataType>
</o:ExtendedAttributeTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o222">
<a:TypePublicName>FormTargetItem</a:TypePublicName>
<a:Name>Forms</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:FormTargetItem Id="o223">
<a:Name>Interbase</a:Name>
<a:FormTargetItem.Value>&lt;Form  &gt;
   &lt;ExtendedAttribute Name=&quot;ExtStartWith&quot; Caption=&quot;First value&quot; Attribute=&quot;ExtStartWith&quot; AttributeID=&quot;{0DA73E81-9F42-49D8-8567-BADE325494A3}&quot; GrayHiddenAttributes=&quot;Yes&quot; /&gt;
   &lt;ExtendedAttribute Name=&quot;ExtIncrement&quot; Caption=&quot;Increment value&quot; Attribute=&quot;ExtIncrement&quot; AttributeID=&quot;{7F7D2C79-FA1C-4FD2-A029-008AB03FA7D4}&quot; GrayHiddenAttributes=&quot;Yes&quot; /&gt;
&lt;/Form&gt;
</a:FormTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:FormTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:MetaClassTargetItem>
<o:MetaClassTargetItem Id="o224">
<a:Name>Index</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:TypedCategoryTargetItem Id="o225">
<a:TypePublicName>ExtendedAttributeTargetItem</a:TypePublicName>
<a:Name>Extended Attributes</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:ExtendedAttributeTargetItem Id="o226">
<a:ObjectID>B48EF8F5-4475-49F0-A44F-05C98D3C93FF</a:ObjectID>
<a:Name>ExtAscDesc</a:Name>
<a:Comment>Ascending/Descending is defined at Index Level instead of index column
</a:Comment>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<a:ExtendedAttributeTargetItem.DataType>-1</a:ExtendedAttributeTargetItem.DataType>
<a:ExtendedAttributeTargetItem.Value>asc</a:ExtendedAttributeTargetItem.Value>
<c:ExtendedAttributeType>
<o:ExtendedAttributeTypeTargetItem Ref="o217"/>
</c:ExtendedAttributeType>
</o:ExtendedAttributeTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
<o:TypedCategoryTargetItem Id="o227">
<a:TypePublicName>FormTargetItem</a:TypePublicName>
<a:Name>Forms</a:Name>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
<c:Categories>
<o:FormTargetItem Id="o228">
<a:Name>Interbase</a:Name>
<a:FormTargetItem.Value>&lt;Form  &gt;
   &lt;ExtendedAttribute Name=&quot;ExtAscDesc&quot; Caption=&quot;Row sort&quot; Attribute=&quot;ExtAscDesc&quot; AttributeID=&quot;{905D5C3D-EC5B-4864-901E-84600DABD18F}&quot; GrayHiddenAttributes=&quot;Yes&quot; /&gt;
&lt;/Form&gt;
</a:FormTargetItem.Value>
<a:TargetCategory.Type>1</a:TargetCategory.Type>
</o:FormTargetItem>
</c:Categories>
</o:TypedCategoryTargetItem>
</c:Categories>
</o:MetaClassTargetItem>
</c:Categories>
</o:ProfileTargetItem>
</c:Categories>
<c:TriggerItems>
<o:TriggerItem Id="o229">
<a:ObjectID>22FD5692-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>InsertChildParentExist</a:Name>
<a:Code>InsertChildParentExist</a:Code>
<a:Text>.FOREACH_PARENT()
/*  Parent &quot;%PARENT%&quot; must exist when inserting a child in &quot;%CHILD%&quot;  */
if (.JOIN(&quot;new.%FK% is not null&quot;, &quot;&quot;, &quot; and&quot;, &quot;) then&quot;)
begin
   select count(*)
   from   %PARENT%
   where  .JOIN(&quot;%PARENT%.%PK% = new.%FK%&quot;, &quot;and   &quot;)
   into   :numrows;

   if (numrows = 0) then
   begin
      exception sdp_icpe;
   end
end
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Parent must exist when inserting child constraint</a:Comment>
<a:Declaration>.FOREACH_PARENT()
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o230">
<a:ObjectID>22FD5693-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>InsertTooManyChildren</a:Name>
<a:Code>InsertTooManyChildren</a:Code>
<a:Text>.FOREACH_PARENT(&quot;FKMAXCARD&quot;)
/*  The cardinality of Parent &quot;[%PQUALIFIER%]%PARENT%&quot; in child &quot;[%CQUALIFIER%]%CHILD%&quot; cannot exceed %MAXCARD% */
if (.JOIN(&quot;new.%FK% is not null&quot;, &quot;&quot;, &quot; and&quot;, &quot;) then&quot;)
begin
   select count(*)
   from  [%CQUALIFIER%]%CHILD% T
   where  .JOIN(&quot;T.%FK% = new.%FK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;&quot;)
   into  :maxcard;

   if (maxcard &gt;= %MAXCARD%) then
      exception sdp_itmc;
   end
end
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Cannot exceed the maximum cardinality constraint when inserting the child</a:Comment>
<a:Declaration>declare variable maxcard integer;
.FOREACH_PARENT(&quot;FKMAXCARD&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o231">
<a:ObjectID>22FD5695-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>UpdateChangeColumn</a:Name>
<a:Code>UpdateChangeColumn</a:Code>
<a:Text>.FOREACH_COLUMN(&quot;NMFCOL&quot;)
/*  Non modifiable column &quot;%COLUMN%&quot; cannot be modified  */
if (old.%COLUMN% != new.%COLUMN%) then
begin
   exception sdp_ucc;
end
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Cannot modify non modifiable column constraint</a:Comment>
<a:Declaration>.FOREACH_COLUMN(&quot;NMFCOL&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o232">
<a:ObjectID>22FD5696-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>UpdateChildParentExist</a:Name>
<a:Code>UpdateChildParentExist</a:Code>
<a:Text>.FOREACH_PARENT()
/*  Parent &quot;%PARENT%&quot; must exist when updating a child in &quot;%CHILD%&quot;  */
if (.JOIN(&quot;new.%FK% is not null&quot;, &quot;&quot;, &quot; and&quot;, &quot;) then&quot;)
begin
   select count(*)
   from   %PARENT%
   where  .JOIN(&quot;%PARENT%.%PK% = new.%FK%&quot;, &quot;and   &quot;)
   into   :numrows;

   if (numrows = 0) then
   begin
      exception sdp_ucpe;
   end
end
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Parent must exist when updating a child constraint</a:Comment>
<a:Declaration>.FOREACH_PARENT()
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o233">
<a:ObjectID>22FD5697-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>UpdateTooManyChildren</a:Name>
<a:Code>UpdateTooManyChildren</a:Code>
<a:Text>.FOREACH_PARENT(&quot;FKMAXCARD&quot;)
/*  The cardinality of Parent &quot;[%PQUALIFIER%]%PARENT%&quot; in child &quot;[%CQUALIFIER%]%CHILD%&quot; cannot exceed %MAXCARD% */
if (.JOIN(&quot;new.%FK% is not null&quot;, &quot;&quot;, &quot; and&quot;, &quot;) then&quot;)
begin
   select count(*)
   from  [%CQUALIFIER%]%CHILD% T
   where  .JOIN(&quot;T.%FK% = new.%FK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;&quot;)
   into  :maxcard;

   if (maxcard &gt;= %MAXCARD%) then
      exception sdp_utmc;
   end
end
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Cannot exceed the maximum cardinality constraint when updating the child</a:Comment>
<a:Declaration>declare variable maxcard integer;
.FOREACH_PARENT(&quot;FKMAXCARD&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o234">
<a:ObjectID>BDD87BBD-9480-11D4-A4A9-00B40080D29C</a:ObjectID>
<a:Name>InsertSequenceColumn</a:Name>
<a:Code>InsertSequenceColumn</a:Code>
<a:Text>.FOREACH_COLUMN(&quot;SQCOLN&quot;)
/*  Column &quot;%COLUMN%&quot; uses sequence %SQNC%  */
 new.%COLUMN% = GEN_ID(%SQNC%, 1);
.ENDFOR</a:Text>
<a:CreationDate>974901485</a:CreationDate>
<a:Creator>mledier</a:Creator>
<a:ModificationDate>978977201</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Implements sequences for columns</a:Comment>
<a:Declaration>.FOREACH_COLUMN(&quot;SQCOLN&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o235">
<a:ObjectID>22FD5698-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>UpdateChildChangeParent</a:Name>
<a:Code>UpdateChildChangeParent</a:Code>
<a:Text>.FOREACH_PARENT(&quot;FKCANTCHG&quot;)
/*  Cannot modify parent code of &quot;%PARENT%&quot; in child &quot;%CHILD%&quot;  */
if (.JOIN(&quot;old.%FK% != new.%FK%&quot;, &quot;&quot;, &quot; or&quot;, &quot;) then&quot;)
begin
   exception sdp_uccp;
end
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Cannot change parent constraint</a:Comment>
<a:Declaration>.FOREACH_PARENT(&quot;FKCANTCHG&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o236">
<a:ObjectID>22FD5699-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>UpdateParentRestrict</a:Name>
<a:Code>UpdateParentRestrict</a:Code>
<a:Text>.FOREACH_CHILD(&quot;UPDATE RESTRICT&quot;)
/*  Cannot modify parent code in &quot;%PARENT%&quot; if children still exist in &quot;%CHILD%&quot;  */
if (.JOIN(&quot;old.%PK% != new.%PK%&quot;, &quot;&quot;, &quot; or&quot;, &quot;) then&quot;)
begin
   select count(*)
   from   %CHILD%
   where  .JOIN(&quot;%CHILD%.%FK% = old.%PK%&quot;, &quot;and   &quot;)
   into   :numrows;

   if (numrows &gt; 0) then
   begin
      exception sdp_upr;
   end
end
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Update restrict constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;UPDATE RESTRICT&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o237">
<a:ObjectID>22FD569A-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>UpdateParentCascade</a:Name>
<a:Code>UpdateParentCascade</a:Code>
<a:Text>.FOREACH_CHILD(&quot;UPDATE CASCADE&quot;)
/*  Modify parent code of &quot;%PARENT%&quot; for all children in &quot;%CHILD%&quot;  */
if (.JOIN(&quot;old.%PK% != new.%PK%&quot;, &quot;&quot;, &quot; or&quot;, &quot;) then&quot;)
begin
   update %CHILD%
    set   .JOIN(&quot;%CHILD%.%FK% = new.%PK%&quot;, &quot;&quot;, &quot;,&quot;)
   where  .JOIN(&quot;%CHILD%.%FK% = old.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;;&quot;)
end
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Update cascade constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;UPDATE CASCADE&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o238">
<a:ObjectID>22FD569B-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>UpdateParentSetNull</a:Name>
<a:Code>UpdateParentSetNull</a:Code>
<a:Text>.FOREACH_CHILD(&quot;UPDATE SETNULL&quot;)
/*  Set parent code of &quot;%PARENT%&quot; to NULL in &quot;%CHILD%&quot;  */
if (.JOIN(&quot;old.%PK% != new.%PK%&quot;, &quot;&quot;, &quot; or&quot;, &quot;) then&quot;)
begin
   update %CHILD%
    set   .JOIN(&quot;%CHILD%.%FK% = NULL&quot;, &quot;&quot;, &quot;,&quot;)
   where  .JOIN(&quot;%CHILD%.%FK% = old.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;;&quot;)
end
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Update set null constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;UPDATE SETNULL&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o239">
<a:ObjectID>22FD569C-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>UpdateParentSetDefault</a:Name>
<a:Code>UpdateParentSetDefault</a:Code>
<a:Text>.DEFINE &quot;_DEFAULT&quot; &quot;NULL&quot;
.FOREACH_CHILD(&quot;UPDATE SETDEFAULT&quot;)
/*  Set parent code of &quot;%PARENT%&quot; to default in &quot;%CHILD%&quot;  */
if (.JOIN(&quot;old.%PK% != new.%PK%&quot;, &quot;&quot;, &quot; or&quot;, &quot;) then&quot;)
begin
   update %CHILD%
    set   .JOIN(&quot;%CHILD%.%FK% = %DEFAULT%&quot;, &quot;&quot;, &quot;,&quot;)
   where  .JOIN(&quot;%CHILD%.%FK% = old.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;;&quot;)
end
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Update set default constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;UPDATE SETDEFAULT&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o240">
<a:ObjectID>22FD569E-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>DeleteParentRestrict</a:Name>
<a:Code>DeleteParentRestrict</a:Code>
<a:Text>.FOREACH_CHILD(&quot;DELETE RESTRICT&quot;)
/*  Cannot delete parent &quot;%PARENT%&quot; if children still exist in &quot;%CHILD%&quot;  */
select count(*)
from   %CHILD%
where  .JOIN(&quot;%FK% = old.%PK%&quot;, &quot;and   &quot;)
into   :numrows;

if (numrows &gt; 0) then
begin
   exception sdp_dpr;
end
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Delete restrict constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;DELETE RESTRICT&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o241">
<a:ObjectID>22FD569F-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>DeleteParentCascade</a:Name>
<a:Code>DeleteParentCascade</a:Code>
<a:Text>.FOREACH_CHILD(&quot;DELETE CASCADE&quot;)
/*  Delete all children in &quot;%CHILD%&quot;  */
delete from %CHILD%
where  .JOIN(&quot;%FK% = old.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;;&quot;)
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Delete cascade constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;DELETE CASCADE&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o242">
<a:ObjectID>22FD56A0-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>DeleteParentSetNull</a:Name>
<a:Code>DeleteParentSetNull</a:Code>
<a:Text>.FOREACH_CHILD(&quot;DELETE SETNULL&quot;)
/*  Set parent code of &quot;%PARENT%&quot; to NULL in &quot;%CHILD%&quot;  */
update %CHILD%
 set   .JOIN(&quot;%FK% = NULL&quot;, &quot;&quot;, &quot;,&quot;)
where  .JOIN(&quot;%FK% = old.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;;&quot;)
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Delete set null constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;DELETE SETNULL&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
<o:TriggerItem Id="o243">
<a:ObjectID>22FD56A1-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>DeleteParentSetDefault</a:Name>
<a:Code>DeleteParentSetDefault</a:Code>
<a:Text>.DEFINE &quot;_DEFAULT&quot; &quot;NULL&quot;
.FOREACH_CHILD(&quot;DELETE SETDEFAULT&quot;)
/*  Set parent code of &quot;%PARENT%&quot; to default in &quot;%CHILD%&quot;  */
update %CHILD%
 set   .JOIN(&quot;%FK% = %DEFAULT%&quot;, &quot;&quot;, &quot;,&quot;)
where  .JOIN(&quot;%FK% = old.%PK%&quot;, &quot;and   &quot;, &quot;&quot;, &quot;;&quot;)
.ENDFOR</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1126624419</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Delete set default constraint</a:Comment>
<a:Declaration>.FOREACH_CHILD(&quot;DELETE SETDEFAULT&quot;)
.ENDFOR</a:Declaration>
</o:TriggerItem>
</c:TriggerItems>
<c:TriggerTemplates>
<o:TriggerTemplate Id="o244">
<a:ObjectID>22FD5691-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>InsertTrigger</a:Name>
<a:Code>InsertTrigger</a:Code>
<a:Text>drop exception sdp_icpe;
create exception sdp_icpe &quot;Parent does not exist. Cannot create child.&quot;;
drop exception sdp_itmc;
create exception sdp_itmc &quot;Maximum cardinality exceeded. Cannot create child.&quot;;

set term /;
create trigger %TRIGGER% for %TABLE%
before insert as
declare variable numrows integer;
.DeclInsertParentExist
.DeclInsertTooManyChildren
begin
    .InsertChildParentExist
    .InsertTooManyChildren
    .InsertSequenceColumn
end;/
set term ;/</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1106245348</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Insert trigger</a:Comment>
<a:Time/>
<a:TriggerName>ti_%.L:TABLE%</a:TriggerName>
<c:TriggerTemplate.TriggerItems>
<o:TriggerItem Ref="o229"/>
<o:TriggerItem Ref="o230"/>
<o:TriggerItem Ref="o234"/>
</c:TriggerTemplate.TriggerItems>
</o:TriggerTemplate>
<o:TriggerTemplate Id="o245">
<a:ObjectID>22FD5694-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>UpdateTrigger</a:Name>
<a:Code>UpdateTrigger</a:Code>
<a:Text>drop exception sdp_ucc;
drop exception sdp_ucpe;
drop exception sdp_utmc;
drop exception sdp_uccp;
drop exception sdp_upr;
create exception sdp_ucc &quot;Non modifiable column cannot be modified.&quot;;
create exception sdp_ucpe &quot;Parent does not exist. Cannot modify child.&quot;;
create exception sdp_utmc &quot;Maximum cardinality exceeded. Cannot modify child.&quot;;
create exception sdp_uccp &quot;Cannot modify parent code in child table.&quot;;
create exception sdp_upr &quot;Children still exist. Cannot modify parent code.&quot;;

set term /;
create trigger %TRIGGER% for %TABLE%
before update as
declare variable numrows integer;
.DeclUpdateChangeColumn
.DeclUpdateChildParentExist
.DeclUpdateTooManyChildren
.DeclUpdateChildChangeParent
.DeclUpdateParentRestrict
.DeclUpdateParentCascade
.DeclUpdateParentSetNull
.DeclUpdateParentSetDefault
begin
    .UpdateChangeColumn
    .UpdateChildParentExist
    .UpdateTooManyChildren
    .UpdateChildChangeParent
    .UpdateParentRestrict
    .UpdateParentCascade
    .UpdateParentSetNull
    .UpdateParentSetDefault
end;/
set term ;/</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1106245354</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Update trigger</a:Comment>
<a:Time/>
<a:Event>Update</a:Event>
<a:TriggerName>tu_%.L:TABLE%</a:TriggerName>
<c:TriggerTemplate.TriggerItems>
<o:TriggerItem Ref="o231"/>
<o:TriggerItem Ref="o232"/>
<o:TriggerItem Ref="o233"/>
<o:TriggerItem Ref="o235"/>
<o:TriggerItem Ref="o236"/>
<o:TriggerItem Ref="o237"/>
<o:TriggerItem Ref="o238"/>
<o:TriggerItem Ref="o239"/>
</c:TriggerTemplate.TriggerItems>
</o:TriggerTemplate>
<o:TriggerTemplate Id="o246">
<a:ObjectID>22FD569D-661C-11D3-B561-00105A1AA418</a:ObjectID>
<a:Name>DeleteTrigger</a:Name>
<a:Code>DeleteTrigger</a:Code>
<a:Text>drop exception sdp_dpr;
create exception sdp_dpr &quot;Children still exist in child table. Cannot delete parent&quot;;

set term /;
create trigger %TRIGGER% for %TABLE%
before delete as
declare variable numrows integer;
begin
    .DeleteParentRestrict
    .DeleteParentCascade
    .DeleteParentSetNull
    .DeleteParentSetDefault
end;/
set term ;/</a:Text>
<a:CreationDate>0</a:CreationDate>
<a:Creator/>
<a:ModificationDate>1106245360</a:ModificationDate>
<a:Modifier>mledier</a:Modifier>
<a:Comment>Delete trigger</a:Comment>
<a:Time/>
<a:Event>Delete</a:Event>
<a:TriggerName>td_%.L:TABLE%</a:TriggerName>
<c:TriggerTemplate.TriggerItems>
<o:TriggerItem Ref="o240"/>
<o:TriggerItem Ref="o241"/>
<o:TriggerItem Ref="o242"/>
<o:TriggerItem Ref="o243"/>
</c:TriggerTemplate.TriggerItems>
</o:TriggerTemplate>
</c:TriggerTemplates>
</o:DBMS>

</DBMS>