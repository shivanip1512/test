package com.cannontech.billing.mainprograms;

/**
 * Insert the type's description here.
 * Creation date: (3/4/2002 8:36:18 AM)
 * @author: 
 */

public class BillingFileFormatFrame extends javax.swing.JFrame implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.util.Observer {
	private Thread timerThread = null;
	private java.text.SimpleDateFormat startDateFormat = new java.text.SimpleDateFormat("MM/dd/yyyy");
	//private BillingFileFormatPanel billingFileFormatPanel = null;

	private String frameVersion = null;
	private javax.swing.JMenuItem ivjAboutMenuItem = null;
	private javax.swing.JMenu ivjFileMenu = null;
	private javax.swing.JMenu ivjHelpMenu = null;
	private javax.swing.JMenuBar ivjBillingFileFormatFrameJMenuBar = null;
	private javax.swing.JPanel ivjJFrameContentPane = null;
	private javax.swing.JMenuItem ivjExitMenuItem = null;

	private static BillingFileFormatPanel billingPanel = null;
/**
 * BillingFile constructor comment.
 */
public BillingFileFormatFrame() {
	super();
	initialize();
}
/**
 * Insert the method's description here.
 * Creation date: (9/10/2001 3:21:17 PM)
 */
private void about()
{
	javax.swing.JFrame popupFrame = new javax.swing.JFrame();
	popupFrame.setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage("ctismall.gif"));
	javax.swing.JOptionPane.showMessageDialog(popupFrame,
	"This is version " + frameVersion + "\nCopyright (C) 1999-2002 Cannon Technologies.",
	"About Yukon Export Client",javax.swing.JOptionPane.INFORMATION_MESSAGE);
}
/**
 * Insert the method's description here.
 * Creation date: (5/6/2002 9:48:27 AM)
 * @param event java.awt.event.ActionEvent
 */

 
public void actionPerformed(java.awt.event.ActionEvent event)
{
	if ( event.getSource() == getAboutMenuItem())
	{
		about();
	}
	else if (event.getSource() == getExitMenuItem())
	{
		exit();
	}
}
/**
 * Insert the method's description here.
 * Creation date: (5/23/2002 9:51:00 AM)
 */
private void exit()
{
	System.exit(0);
}
public void focusGained(java.awt.event.FocusEvent event)
{
}
	/**
	 * Invoked when a component loses the keyboard focus.
	 */
public void focusLost(java.awt.event.FocusEvent e) {}
/**
 * Return the AboutMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getAboutMenuItem() {
	if (ivjAboutMenuItem == null) {
		try {
			ivjAboutMenuItem = new javax.swing.JMenuItem();
			ivjAboutMenuItem.setName("AboutMenuItem");
			ivjAboutMenuItem.setMnemonic('a');
			ivjAboutMenuItem.setText("About");
			// user code begin {1}
			ivjAboutMenuItem.addActionListener(this);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAboutMenuItem;
}
/**
 * Return the BillingFileFormatFrameJMenuBar property value.
 * @return javax.swing.JMenuBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuBar getBillingFileFormatFrameJMenuBar() {
	if (ivjBillingFileFormatFrameJMenuBar == null) {
		try {
			ivjBillingFileFormatFrameJMenuBar = new javax.swing.JMenuBar();
			ivjBillingFileFormatFrameJMenuBar.setName("BillingFileFormatFrameJMenuBar");
			ivjBillingFileFormatFrameJMenuBar.add(getFileMenu());
			ivjBillingFileFormatFrameJMenuBar.add(getHelpMenu());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjBillingFileFormatFrameJMenuBar;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G30CC6BACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359AEDD0D4579595958DC47CC624935A1A44A6B4E2E3BA2425090DE92B5126BAA5B3B6C3D3BB75876D584419184E5A24690385038695BF9A712389C90C9F51A0A61944D22328E8C5168F01A06292766D6E5B5D27EF77AD3BEF1745AFFA4E3D6F3EFD2C3B907CE0664CFD775C0FF36EB9671EF36EE1392D6F25976597EC65387CA2CE7D7BB21F63B2BF61385FDFFA6A844339BC86A3277BFB9FE093F7EAC3
	A134A1982B1EEEB016F29F6797C3BF917AF9298663B6785E429D4AEFBA889FB1686C03312ED147CA862633391B51F90B749B6BF0418600E4404D41B5B252F75615297825005B20FEA36497F0DCB6193346DE26435748F4DEB234B3G4EFAF14E703ADD6AF8A174F14EAEE8AB3D61BD57926EC6D69DD17B6671695C2A6776942CC7DA3A7D99A42BEB6728EDB97798910411AB71D4C3FB34690A7318CDF6D758F80FC776A8024DD5E195A5C974B8AB5C3C68717AE4270FF77B2B2ACED26C99D1924E48BEB72F1C813C
	303B9B79BEE8AFA6FBF25C8A2013C9F0B36CA8AB97FC478124GD05E172CBF2A72B669CABA376C7B5BE3723E2A1B72DC668B733EB8E9E941FC9F6E7FA851852EEB07FEB2G656555BA46CB091F71F25C06F3EB20EF86D07C0C172F76B2DE5A2F4D628C565A020DB1F8C9742BF27407F949F9FD695A6D44AEFE60C35D2E04312D0A41388F4084A081A4826CA476E86F7E985A93D665146CF64B1E93DE6FC9496E2B176D02845FD5D5B022621A851B6C33F39C3539437603D178E1B0C369EFEFE19B3940B19B49E8FE
	08D3146385C5D14EB66705FD85D96A9E0B14705938G4A2DCCC0392DGBC2EA3970860BFA4781AC098CFF5728851B9765BE1ACBB40645C3E0171E2AACC65CA8F57953C95051714E72A8B4A031407A341B0AFD446A39414319D70F1GA9G19G0B81D686190C9F6B7EECB09957020D7BBC3C549230FAF91FF2B2A0CAF641274AFAF65DC0320E86F45D53C3DEC765B273B33D0EF29FBF97D5AE39B38F951474D0F96C6E894B0552B64424DD53F32BEDEC50F478B839936DBDD407C68D7FB302F76970D43727899E7B
	A1984B8520FAF9BF08BE2BBA84F78BC081C88448G188F109BE23AD95DFD68DB5AFF13CEAFF46D0FFC6FC0AB04949FDF6B71AB3C47A63471BE1137CA021FD3677C5407723076DBB7175CCB9B50781F6091FC3CA24A9E589D7C9698011F4ED9605B04F3FC8299ED955D8290F0FBB9366F925F96E8A55E2FFC6D35730A901EC147FF67C3DD8679B65891B6006F033DA82F3344A73E8167AF6BE532CAA63E498B7D04DEA617D67FE6E86B40A885292A2AC634A19B3C2F1759563B822EC90379193D6CBE3D5C4E6C26E6
	7D035C4197EA235A8D42333D5486F2FBA36DE6BF593770AA782B2BAC3EE55A5B07E84703C11ACA97F927B4965CF59AC635C53FC3657C2689ED558467F281A4DCE5329E67AF27B6F812778B4C6A9AFDE0B002BDACF9BAB7D141D8A084850FD2A3F8850F9DBE7C2A4EA7AAEB43766810B5DB19C67068D7CE014178B57C834AA60A07BD74564D469FA6633C2278C4EBC091DA84C501D09BDEBF0B70626F67327C6AD93986BCEBBA1CB18BE03EF656A301ADBA3BB2497215003795EF0CEA1F9BCD287FDC183FCA537F13
	B64CF74A2E317EBC528F0F57590622BB5CE7683E54BEA49A46A14C5D204973C0B036EEBF8DC6576D11E0F45D9E8B8E2C3BB341E83A23E375C134D9394723330566A07A831B6C718844A035A59C4D5BDEEE45F3089ED139A05A1D0252A2DE95A0AEDEC31DF6911FF3943E1B2EB1DF5173A173953B2FFE171B5B35BBEA9E1072602902192A3E322F05FD8565E9B2493584C9F00320CE49810FC2715309BFD371FEA34135FC09B8CC936B85CF0062382D08BBABC8DE44D13BBD5608FB66822D15G4557195DEEB3ED57
	592DFAB9CF4912C4454131FC7A12204F274B2F53FC3C9DDA89004E19620CB6A79E5A940DDEE1FDA96AC7688E8890D6700254893DEAECF83BFEF344D89BAF8542B1E7CB7D5B50CA3A3BC571EB9A224B2B24816F5395ED7F5206B59C468E3AA755EFA60FFBFAFD229BDC91BA8B753CFBCC7A33E4827F78564801B68F002ECD5E0EF1B2FA268E83B7F01F20162BE3BC2638A402FB98AE60FBC5ACB729AF553FB16C7E23D16D0644209B54DE5AEFC466EC7EA65CB78478049BCC5EE39B74FE69045FAF5BC492FAD55955
	B46AED0A62EA9B57C16B90FDFE485F6CC208493F3191F945582C22D599DEDC0739367636912D6E0AC050DD41DB158A41AEAAD5D567508E5BC4FF00170808B97AF618C8E2A26E11F6033D9D7E64C0DD66C0FF85C061CD764EF85E49666E3A49666E90F1EEAB74A500781BCCAF2BF714B1FEAE73C1BED4616F8185819B3AB7D4B27147F81EB4ED3F37AD04B674D7G947631BBFD61D33DEE66AE2B0C291BDDFDD4A715FD113AF972BC52B3815E5247F473DC63A61DEE609D822916D392B45F94EAB2D27BD57B571B0A
	187DF24CFF27885172D1C5251F50F7EBCC20F96785A71EB52D0F661D799A5EC270B3F5F81A0F7E59415EFFF3E02CAC0E45285FBA23513F9E273E3763E2513F1F68EEC6DCA47D29841F9997C93FDCE47433E12CFC9823BF59047463211FB26CD6DA999138395027F47A282E07C56663E388FE793048FCFC130565632BE02CFDB84BB1E7B523DE33213FE8B8536B26736BF5FAED12C50F22697429736803E41F6894BD8CB70F606095CA82934D97E6113B118BFB2EG20382D8E449920DFBA021D3F5349E9366050FD
	3F62385BF95F2D39C33173DE5220E77E0B1349617391CC8EF5AEA607EACD8E134470593F237B5EA35EFBB99C3F27B46819B3083F3243F993B4B9986B49DB857A199A6ED775CCB6599AAE2F81F14B203FCA1357C88B49BD63D9FF9C699F517A5BAC031D89575E195CAA8725B154FCD38F74EE4DE946FB9C527AD9245F2B6E3D057B250067D6A081B547E3CD52F391ED07461159BD189BB8A0E8C078E8718AB6EED5BC4A7300036586692A8C6628ED8E34F41F719D388F1DEFF53179C7C752F9CDEA6B051672B14F74
	AF542F60608392243C32DFE8742ACFE8404F9F097B3CE4E2B1B0D9DB37239E7B0A281038C1E92F3E94267DD2BD23DDB28A7CA6C0B50085A0EE945B631F44BEC810BE497B8C23F05DBB0D5A99211FB50A723BEC94FD3F50F5CFD8B1FE5128FA8A2B19785C72A09FB4071AEB5167D0552369DABB342151AC367E6612BE3616261697B03F9F294F6451140734516158CAE379F96297F14DE298ABCEA07E5D31D53796795C8FD081C047E7779BC799AEB052F14A57420FD82D720D05B3B96909A3B16B26CD89149FC5ED
	5B3F58491997AEAD203CA53898EF99890C379F3BA2F9FB359FEFF92ED83CD1393FC6E21EAE352938A0FA6CF28F68G2BB50A3F22263625293165F4D7E3C357A993FC50B3257768E5FDE45D97B17318656AD98CEA7B2CF3271A3395B63073D40EE1677934C14FAF727847FC7DF96C8D836BE2CA3FF16475EB23FEFCFEC324BC58FA9A1B695B86F9F281CF69E3D89EB87CBFBB3828F920EA6910E710B3DDA36B17423A15F826314CB6C3FB188DE4BC144A19624EC53501E52D078B4A47D2B9550C8D5BE65E6BCB57D2
	BEDE5D9FA39F455BA2D1399AAC6CEE470DE579E82295794A027EE2003C31AC67F83E9339237E6CAB73C75036711755EA5EE9C838E59FAB361C83F20D564B10D93672189CD03F5B66383D7A694F5FE2721873136FF16093725F0EE1BF5CFD2A9C54F66567BB891E723F378B655184E392C0B240CC00EC001C7BD88EB5420CBC429170C0A794053739488B051D2CCD94FA42E8F44E74ECC92E211E0D72F40E48BF8F6897A6B29EDEB09F08A5DBC0B679E47050CAAF4512172AAA5F358D37D7572EE93C3DF54DC3DEC7
	F35DD7085D6FCE0C7CFF435F897EC8E2647F9B06B5327FB718E0ACB3115963B59E7539B549E02C84B88BE0810883C8CBE232FC3733129B249E5DAAFBCDC2D010F4A5BBFA3EFFD8A24F1719944EBD1ECD0A754660C88DFDE9D2649BE3AD41AFCF0AFCE3CC30B2BF329246DA6FE767FB460A7EA78B7AB9G860012F190CB47313355FF7381BDDB94BBBDEDF78A4CAF33BBDB59953B9E76E5576035776AAEFC1FDBE5C5115D383FD67B6AC2F9A93217A0A92E2E8B6FAEBCB7DC8A1D2A624FF7213DCB02032055773D85
	E527555628C92B735BACA8832C03093CA4DEA509C98BCC74B8290EDEA3F50423A01326F1AC0764C8BD428E7D848DB73A71EE674AC81344E10DC67ADD27212FF9D3F9447331F5F89F9F3D26B91E0FDE531C4A8FDC53FC000FDD53FC085757B455F7A20FF24FGF94C9D475EG9DD676AED82E49E90D8D2F847D5E287BCE315E7BB7536CFBCAC32D2FD8E36BE809F570FB76A21119G772335572B5E11BFD8497B5D61708B5AFDDEEEAD55F0357EA659AF626D783675D91AABD7376BF36562E47AD6BB88EDF5B22B2F
	AE3894EDCEBB34D2B24B498F70481F44774A81600F6672A7F936AE9E6625A5537B3298DAFC6F65A5631CEEEB59G7224F94C5AED78DB0F9879141A9FD6DCE4F9CC65F816472C6BA07F6304FE9CC04AF8D6534BB73339195A5C9CB34E4D03BEB741E0AC83203E79B24FFCF3A560DC93D80E677C60A3EE405AE3C3C012CC2AB854FC6FE132D7BA6C118530F8824B77AEDFE1794D2EC727139CAED64E1FB7014A30E4E2B85F8B5B76E797A363158966D9A646FEAF5338F41348C91998D913CAA078780911B529528ED6
	131A84E306095A3DB6C752B7CFB2983D138623FF3613501994C93F1960A7CD0A247F2219511F81E3451399FDAFFFFBF94C4DA12F237C6DA4F1DB1A9C9967F793FCE8F2E41C7F21E6CB71B016B71945F98B794D10E98A5897C0A2408C00AC0045D3D82C6F3561EF9EE265044D32CC1E40789A66C57049A4747BF82CGD2BFFC0E5C0F65301FE18A734D93892EE42A4138EBAA13E1FC8756A576E97D7BC93FDA6B3F5321771FB86F6E7B68C37DE85CC9ADA69A50337F5B4C64E1194A64411B19BC946D3C8D1DF87EB8
	2D5FCE7AE9DAFF19F920F892F7077221B4D68FC863CE65C3E93CEF65346F0FF55F0F7377BEA6AF3A27B4687D916D31E33257BEF8CC6E35C74FFD7B6C37663E717668396FD83BBE7725F113A7F7506D9160F1A25AE83DADC4F03F86481E4A626BA3977B578BD76336EADD06ABC63FF2BAA4AA9890EB9541DD1C027BBC5D212FDFAC023DB0A7DE85AD25F306587B92002694D6BF5C6F8C6FFB3C99635089AB44B036B174695EE3BAA37746DC5B1242789DF7915B3D0E3DEA8C1FDF04B2089143494EB4B67F2D0345E6
	A50545479BE7743FA54C5EF838A0567BBFA3C57D0DDBCAB8BE6E1A70E6B1652953CCF8F26DD5E94D6DE434CA26317B7CFAC7E4AC28013176E9316FB17561A2291DC9B0AF81A09DA08BE069B4663F3B1D037EE66DF4E8005F2C7D22B312AF836CDD129A1BAF6A53B6DFE2FE2EBC15793936CB4C4FFD1E2A71670AFDBFC22E686F0A1B2E686F0AF857403F03C9F445FAF7D07EF2BB994F559A4F233A984F2D294CFE7FCB4E319040124A6C77434BE8B1F43C689B9C1F073CE863E72E046D3B79923187E12F5A5F758D
	6973FBB97A5B62D7CA6A50267E4A95A9DCA1265250E0762CF05BAF862E481EF275DF706520C1C9341137E9644CC23C168AD7C4EE11DA4F5A5F272F079AC6EE0BD98F0D1FCE751BB2BD727F3AD59B71ECB900DFB9DD7B1F7B06CF3858B53996B7AFC98AAFDDB96131E3FD6EE42FA204F5F6FCA36E6FE7F354C175FD3F91793E2CDB73FFD0CB8788256381A2798FGG58ADGGD0CB818294G94G88G88G30CC6BAC256381A2798FGG58ADGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2
	A0E4E1F4E1D0CB8586GGGG81G81GBAGGGB390GGGG
**end of data**/
}
/**
 * Return the ExitMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getExitMenuItem() {
	if (ivjExitMenuItem == null) {
		try {
			ivjExitMenuItem = new javax.swing.JMenuItem();
			ivjExitMenuItem.setName("ExitMenuItem");
			ivjExitMenuItem.setMnemonic('e');
			ivjExitMenuItem.setText("Exit");
			// user code begin {1}
			ivjExitMenuItem.addActionListener(this);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjExitMenuItem;
}
/**
 * Return the FileMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getFileMenu() {
	if (ivjFileMenu == null) {
		try {
			ivjFileMenu = new javax.swing.JMenu();
			ivjFileMenu.setName("FileMenu");
			ivjFileMenu.setMnemonic('f');
			ivjFileMenu.setText("File");
			ivjFileMenu.add(getExitMenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFileMenu;
}
/**
 * Return the HelpMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getHelpMenu() {
	if (ivjHelpMenu == null) {
		try {
			ivjHelpMenu = new javax.swing.JMenu();
			ivjHelpMenu.setName("HelpMenu");
			ivjHelpMenu.setMnemonic('h');
			ivjHelpMenu.setText("Help");
			ivjHelpMenu.add(getAboutMenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjHelpMenu;
}
/**
 * Return the JFrameContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJFrameContentPane() {
	if (ivjJFrameContentPane == null) {
		try {
			ivjJFrameContentPane = new javax.swing.JPanel();
			ivjJFrameContentPane.setName("JFrameContentPane");
			ivjJFrameContentPane.setLayout(null);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJFrameContentPane;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception)
{
	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	 exception.printStackTrace();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}

		//Get the billing file defaults from the text config file.
		//** Do this before initializing any JComponents. **
		//  This application stores it's own default text config file,
		//	 defined in billingFileDefaults class.

		System.out.println("Yukon Billing File Frame Version: "  + frameVersion);
		// user code end
		setName("BillingFileFormatFrame");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Yukon Billing Application");
		setSize(426, 240);
		setJMenuBar(getBillingFileFormatFrameJMenuBar());
		setContentPane(getJFrameContentPane());
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) 
{
	try
	{
		javax.swing.UIManager.setLookAndFeel( javax.swing.UIManager.getSystemLookAndFeelClassName());		
		final BillingFileFormatFrame aBillingFileFormatFrame = new BillingFileFormatFrame();
		billingPanel = new BillingFileFormatPanel();
		aBillingFileFormatFrame.setContentPane(billingPanel);
		aBillingFileFormatFrame.frameVersion = billingPanel.BILLING_VERSION;
		if( args.length > 0)
		{
			billingPanel.parseCommandLine(args);
		}
		
		aBillingFileFormatFrame.addWindowListener(new java.awt.event.WindowAdapter()
		{
			public void windowClosing(java.awt.event.WindowEvent e)
			{
				aBillingFileFormatFrame.exit();
			};
		});

		aBillingFileFormatFrame.setSize(billingPanel.getSize());
		java.awt.Insets insets = aBillingFileFormatFrame.getInsets();
		aBillingFileFormatFrame.setSize(aBillingFileFormatFrame.getWidth() + insets.left + insets.right, aBillingFileFormatFrame.getHeight() + insets.top + insets.bottom);
			
		java.awt.Dimension d = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
		aBillingFileFormatFrame.setLocation((int)(d.width * .2),(int)(d.height * .1));
		aBillingFileFormatFrame.setVisible(true);
				aBillingFileFormatFrame.show();

	}
	catch (Throwable exception)
	{
		System.err.println("Exception occurred in main() of javax.swing.JFrame");
		exception.printStackTrace(System.out);
	}
}
	/**
	 * This method is called whenever the observed object is changed. An
	 * application calls an <tt>Observable</tt> object's
	 * <code>notifyObservers</code> method to have all the object's
	 * observers notified of the change.
	 *
	 * @param   o     the observable object.
	 * @param   arg   an argument passed to the <code>notifyObservers</code>
	 *                 method.
	 */
public void update(java.util.Observable o, java.lang.Object arg) {}
}
