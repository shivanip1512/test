package com.cannontech.billing.mainprograms;

/**
 * Insert the type's description here.
 * Creation date: (3/4/2002 8:36:18 AM)
 * @author: 
 */
import com.cannontech.billing.*;

public class BillingFileFormatFrame extends javax.swing.JFrame implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.util.Observer
{
	private Thread timerThread = null;
	private java.text.SimpleDateFormat startDateFormat = new java.text.SimpleDateFormat("MM/dd/yyyy");
	//private BillingFileFormatPanel billingFileFormatPanel = null;

	private String frameVersion = null;
	private javax.swing.JMenuItem ivjAboutMenuItem = null;
	private javax.swing.JMenu ivjFileMenu = null;
	private javax.swing.JMenu ivjHelpMenu = null;
	private javax.swing.JMenuBar ivjBillingFileFormatFrameJMenuBar = null;
	private javax.swing.JPanel ivjJFrameContentPane = null;
	private javax.swing.JMenuItem ivjExitMenuItem = null;
/**
 * BillingFile constructor comment.
 */
public BillingFileFormatFrame() {
	super();
	initialize();
}
/**
 * Insert the method's description here.
 * Creation date: (9/10/2001 3:21:17 PM)
 */
private void about()
{
	javax.swing.JFrame popupFrame = new javax.swing.JFrame();
	popupFrame.setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage("ctismall.gif"));
	javax.swing.JOptionPane.showMessageDialog(popupFrame,
	"This is version " + frameVersion + "\nCopyright (C) 1999-2002 Cannon Technologies.",
	"About Yukon Export Client",javax.swing.JOptionPane.INFORMATION_MESSAGE);
}
/**
 * Insert the method's description here.
 * Creation date: (5/6/2002 9:48:27 AM)
 * @param event java.awt.event.ActionEvent
 */

 
public void actionPerformed(java.awt.event.ActionEvent event)
{
	if ( event.getSource() == getAboutMenuItem())
	{
		about();
	}
	else if (event.getSource() == getExitMenuItem())
	{
		exit();
	}
}
/**
 * Insert the method's description here.
 * Creation date: (5/23/2002 9:51:00 AM)
 */
private void exit()
{
	System.exit(0);
}
public void focusGained(java.awt.event.FocusEvent event)
{
}
	/**
	 * Invoked when a component loses the keyboard focus.
	 */
public void focusLost(java.awt.event.FocusEvent e) {}
/**
 * Return the AboutMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getAboutMenuItem() {
	if (ivjAboutMenuItem == null) {
		try {
			ivjAboutMenuItem = new javax.swing.JMenuItem();
			ivjAboutMenuItem.setName("AboutMenuItem");
			ivjAboutMenuItem.setMnemonic('a');
			ivjAboutMenuItem.setText("About");
			// user code begin {1}
			ivjAboutMenuItem.addActionListener(this);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAboutMenuItem;
}
/**
 * Return the BillingFileFormatFrameJMenuBar property value.
 * @return javax.swing.JMenuBar
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuBar getBillingFileFormatFrameJMenuBar() {
	if (ivjBillingFileFormatFrameJMenuBar == null) {
		try {
			ivjBillingFileFormatFrameJMenuBar = new javax.swing.JMenuBar();
			ivjBillingFileFormatFrameJMenuBar.setName("BillingFileFormatFrameJMenuBar");
			ivjBillingFileFormatFrameJMenuBar.add(getFileMenu());
			ivjBillingFileFormatFrameJMenuBar.add(getHelpMenu());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjBillingFileFormatFrameJMenuBar;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G78EA51ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359A8BF0D45595DBF0EC0B233634C60DB6A8A2231911CE51E1AC6D441ADA05B805D61DCC1A8EB062B4EAD4BA501920F47A12ECA4848201509AA4B32082C109E91485124D6EA61BECC2B659E4B77B8D90BFAF591770606D475D9788C827BD675EF75FBE165D4488E4664CFD775C4FB9771CF34FB977EC38DDFBB34A0ACBF6F1DCF199277C9DAF66382FBE61B86B7BE5758CD75018D741E97E5E8758413D62
	53C1DB84E3114F73AA2A3857EC65505F7AE9DE059E7A6F42F7B53756D60B3B2420337EB0470D4F5F72574969BCEEE2F4B611FE0BE1AB345BG2A1096400CCF113E5BD0236087213FCD79C6A8AE61B863E7B867A6D70D861F2D4C2B02317DG4F10B9A1C32DB2BE937AB8A79D5A051F45775CCC381BE5E8D27AC3F7E4F06B176EA829C4DA1A7D99D49D21EB75CA3B0F3B0B8822145B9AEA035668BCB7E69E89879BC678D0A89C120511B38D4322A409213106A0AF06A25170D8148F468C06F60A6D92A521AB9C8D72
	F2976005F9C7106F07DC65E4CF0E13205F28C75CDEB74A2AG7A9C74EBGA86FABAA0D8AEFF34EE5F02B9E502564DD56D31E5374F15E4B1F6D51F59F457D6FA43A40F539C88FF014171586464B6C230C17A786F0EEB6747381569FE53C186A98AF035FBC4A958D6BCB362760E56BB1C50E47623CF0425C525D44AE5ADBD13791981B8330GA0872090E06B713C0ABD449E7FE17A98DA4B305C918E8643A1CBA452AE8522FD6100A0413741GA38A4EA50C0423810E23B617692ACF428F037D472F3437380D78B9E6
	A3192E791CACFFDCD21664EC0BDE28AEE9D276309F0F1FED46F1145BCF088EA57846F5381E626FA378EC8D1E6A64G41E3BF97460CCDCC4E035B98AFF65D5DF0F70E15ECCA42CB5AEF8F17E4B4D19E96B745F921B2FE3B89E53C8670DCB35893C0A30093A0524CE4FC42FCE4AA995B404623A1DEF20F8FC778285CBEAECA81A12A487ADE43E432CE86F45DA353DEC765326008D6C7793FBC1AD4AE798B5EAB195DCC65B12FB9AE97CAFBCDCA5A594DD75B46B6D5078DAE54D5EEB355E1290AEFA278828D1E6AB60B
	5CA16C97415810A12F026A65AE623332201F8F309EE0EBCBDEC5BDC0B740D08B534D0F4D7F7916766F5468052E6DED7DB73442049C65ED21184C07C6849F9F9579E1C908F14A9CCFAB4AE3780AF5A7493D9C819AA704109065E5B19C025D41EF019144681C61569DB8A7AA10D10F989400C0B04231FD4F36D6639D60E332B79260E5A1BE030EC7DBD11767F99F6C889B20AEDBD0DECF911FF8993E53DA182C1EEEC15CDA68179B19DCDEEF5D89EDAF9825A0998CD6F1845960239719ED5D6546B535B03F51486E53
	9B034CEE2C158FF275AF68135A8D99B7D29B98B2A65A4DBC326FCC40AFB03278F658BDB8CDBB1E8AEA953A0DAA8D6BF527D12A3468F7281C75A634559C20D9GD0EEE2325E54340F5AE0BB9F931855B922E0B0C2A0AEF9BAD7570C31C0B8AF04E42B9091C2817808A9BA5F523CB9EE0F23E155D6F690BC7A158EB018180AFF37F98745439EDA6BE663FB49B8AF4BD1F1F8DC965C02ACC3280D2F2FA33C442EF0D9B1652C474CF856FDF046A600EE752C8B1B2BB5F6E58F074F0DC7BCF8E3947BFC1B4449A118AF1B
	18EE74AE4CF752543E19746363CF8FCCC7F7384F74FD694AE951A81D465CED2ABC9FB024566D4306643ADDE8C82E5B478D136B6EB706E43A23E33FB3204D06AF04B4363054007EE0A49C8A8944A055A59C4D5B5E7060B94410A87B454018A03B45CB8244C5936AB40F781CA5703D5C44FC45058F192F58FFE9AE1775657624F9C05A038DA5074CD4DFC6F35CD7D01E1635200D89129084C1F50447C3B2452FA07ECC4147CA894EFD9CF118A6768921F10A63F6A12EDB10A20823F6AB36621EC3C0AB82F00B1959ED
	1FF13746EE154B599116A4AA8E0E6553AF3A3579F4061966633950968250B9BBFC496668DAA1FFE8E5748C26AA540F707538GE185AFC82FF0D1098D96534E04B19FAF0D47E30E4D3485DAC9F337A85EE8CEAE2FF6B35E27F36A7EDD66F7B80C9DF4CF2A5F05BC6E99090AC1F0C568AC14736EEC511E259178473706875AB3GF46D6D3BB1CEA64F54A13E3762BEFFD3F3F50C4794D7CEE2411B40DCE5A94BCD7A2A34EF0CC02CAE295D10BC23155ACBEEEBE24EF6DF9B6EDB847872B6A66FAC3356AFD9E2317008
	C8C22FA23BF02B5626A8CEEE45475928980DC17E9690A6187CAF11580B31D9C1ABB2BCD90139367A369107038D6367038D7C305CA084C459E068C1BB740931F1DEA2A266685BE11B27DC5923360D3D9D3E7022AEBD5017GE63631F7064D4766262BF3FF6A47394FC33F90C0E7E1FA5970DE8D6367ACFF1E1FE808DDG85819B1AB754E5F217508756DA58FE7B7A88ED68CBGB3AD6CCE7BBF536AA6EB551E143AC937D01DAC34A46AE60D856965GFE150569666FA497E23A01F78824DAE3E0552A5FECAB25762B
	749FEAABE3764BB17FDD6DC9160F2ED7681737DF9D93E85E79C7A2675AF61AF7962B78BF937CA18D1E662381AFFB7F69E1AC2D1D4528FEDFB27A9B953AD59D2968EF9E447D76F7A4525FC9700D9D09746F71B37AC6984B68E074EFEAC17ABAEB7258D713002F07BE2573D6BF6E57E6CD4C47F58E44BB2D09797841BE160FFF85E359D616E3663523DE8FF5C2BE504974EA34D4EA746A8C0BA1D95569AB9674C16128B8A606986E8D0203D7A889CCB4DF78185C0DEE58F3900062EEA338G74AFF7327367FAB95596
	D6EB3E4FFA2FF75EF7F56E707D9BCA031ED970B1B9E428F2F85A476410294AE17BE07C6CB51A6F397E9BAF07A7EEA88DFA66B4622F1643F9572BF2F8330549213C0B61C2A64455C33F2D0B4906F3E09C8C287D8A521F29766B7B26629F57DE1B0CBA2724B15D5CD28B749E2DEC47BBBB2176DFA27D0B4A5E10DFF8C8FE8D496602AE2CBF4E33211D5018710B8B18870CC20000D0610E88A3DC5B891467FC8F4B838A9599F0A7945F8EAD5D6777BD0826737F2266C037A8735215F68934140FC7DB7E05B295C679F1
	89525BF0CCF0C41467B260F7F563BECBDBD83C4B07F5F46FF70CEA5D9366C8G3381B281F23A595E33087EC940ED6723D69B2ECBB729E700F9BA9B65275EC65FA2F45DE343980BE8046C404AA4BE1DC298E7E8BE54625066C33315358B214D3631B87907535AB8D9F577169266439375152F70D0E00B47C99A17F3080F43B535BD10EF7590DF6D5925D90BFC7E2004639A20256375DE6DB84A6CA30E0ED33E169DE0F5470D4B96F052E39F262C012677D0FE321476766ABDDCFDF52F0E72D66AE73C95293CFD6A1F
	1C3791FFA2EFCFA93CD1392FA671CB1326B47845D0A0FC81F4001597B956E035391D8EF767170E7EAFBB6C70C14F14F1C1AB6B260A77D366A40D3D74ACD6255DE85D2364DF75C6F61E4B3D6CBC0B0DDAFE114755455A733CEACCBCAF13B59D2FB5E94711D7EF29F63C5F14CAD7B44EE61BD81CDF84BC9576321C6EFB4D6FF1C9F3BA4552611CA407ABA6EF017DF6F813GF86C4CB6A78EB29B481CFFB7E71FF1B4298D2C725416C8F6C5777638ED6E926616D2BE56FD14A237445BA2D139469C6C6E6658D9EE3909
	5473F4FDF99535G7ABE16BF5CE1C76E14BAC76F81E8FD7CD925B2578949F3B84A8AA7BDC04EB1FC9632C48FBF46B13F3AA2E97EB799D0F9BC390949E3519377F30BEFFE29F8CB8A7B3177D1B9C8CAFBE8679E02277C3F5A0772C8073145G79G6B814A7B73AA767533FCE82097F904A36001AC324C0F1CA12F8DF6B21FA8DC082351795233157B27FBB64AD3A5113F9E68BBD59E52FA8F2712ADA01D51B0F8E079A24512D727A25F5B0C5F2DC63D54745D5665CEFB9D4DDB47095DC77A93FFBB18C170B37B93FF
	BB58E4E63F9D24415846FEE60FE6A76A73AB876418GF3GB281F2G8A9CCC162BFB9B39A9EA4B1EF044AE1C97A4CD790D1EEF4211F83E0D0EF8EED165CC75DE78065C1F7D4E447742CC02EFF4A63E97AA875477820CE5B85979E68D207F518D00FD82D88186812481F6362A3E8F68591258E9E7E0CCE0FE195D59F5FD29EBDBEF75CDDDC7AF6D473776F0D81643C15C1F61B777233C64F004A0A9EEDBBF5EDDF8BA1C1169D4853F2B9F6DDD92C6891A62F6BAD0F6EA1D0C1A34B2FF3783E500B5AD111744CBA471
	F0434450985551B7E65C6F9610C97AG4B91EFA6380550FFDE45D51A2FF75E0BB4C99CD6E99C3C6EB43475EB65F7ACE7EA9D76BB1357A7BD4E647549D34E496B13434E5475C951292DCFAAEFBE624B0AC09EDBDDAC47FF4149727EC6177A8E9E00C671A1BF54FCD7CF2B3EBBDDD05E8FB71486154D2D8329F5B4E7E06AFBF66FG29F3417D70DC0CA8F7647E8172969F9D0D896AFDFEE820CA4559E24EF0CC445B71EDEB2DB4D77ED517B6D7763868DBEC825A59AED6AB3576A41BB38F5A45AE16134FF7A0FF92FF
	B1BC8E7C51DC7E57EA9E3E9C66953868FD29F567D560FBCE6F46B9054E1AC964C973184D6F627FED244827147CF0DD974BE3AE3BD99EB32B9B7D6AA26867G2CF1337A5C659EB6F723BA57510BF3751E3C8ABBC0G007A66179D4CB7DF865CA28F4B7146BEB840CDDAC76C9F17A43BA28EA55F7B4009FB95429EBAAF64D6DE166F1DBD47721B5AC76EA1B9DC2A1CDF6F25B29C7446733D38ED97F5A5462BB4181769CD7D9E26F1E98311D316B7313ED4EAC37CF2EFE2FD69C75D2C3E348A462CBE75DE77A452DFG
	E3CBFCD351FF0A48FE39AF117EF3843F4A17C85F5B4B682F05B10F1F51FF6D2AF87D6DFC4206E92F237C7D0C68F331BFB14E7F1C60337D09F17E10135952F298538F32B87FA1793DA28D7A0BGF281568268CE020D1CD46BF4AE7C7F05D4B921AB9CA6CFE0FC8D73A278E4927A23BCD673289F5EFE82ED3E9176331EE43EF9DBB7628621FF66A41361BF3BC95DC16DEF36E1FF365A3F23DB6BBFF15E7577518FDFC163DAEAAD49C029D175B0F9E42A72486FE17248D24F7BECAF1EBFC76D7F09748B547E695E4962
	C94EB54A075210A725F12D7221B4521D1C7A7D20663B41F963E372099BCA035E1FFAF76A18FC44BDF5CCB63A13673E6D6E2BF35F936E6439EF1FDB1B7B5238F9105C4BE0C8004709B8C26BE96B886EB90072D3AC3E9E683E329E384443F12CAE431523DF691C90E58C08B6D988FACE61BE861B36FED183B84C095B2025F41EA4763E82A07D942B8F2E744677EDF5E19C328CC38CE39BC31F6E2D33A76E0D39F6264AEFC5B736F523F5CA8CFF268CE510A206131DE9EC7E5A46E2F356A9969F7F5B257D3F40A55BEB
	CBD23D7F0BCE517BD6F3BA9E9F0BB63DD3CAF94A6DA1BC1D29D3E83558992D41536CBE1F37A546025BE1EC5E695477187A703D24F6369866BD8FD088209B4A2B58BF447CF71DEF4A7FBF6B1C18647F4F5A6C09FCD9E16F412154FCD11FF62B0D79B9E908793995B66667E6447973273E9F8D7E646F8A3DBF793B42601F7CFFDA5A7D295E9D14BF3F1D71BCDB65799EBB63B9E308596F63649C4BF05D90335F97496FA9F4FC86D903B54CA56A780613F17BFE4EC66CC128D37AF75AC91F2F63687F8927FB71F7704C
	5739B21953E1AA8D8DE64FD775706A49DC9939A9CA4D6A237FE9EB1EC533CAD256BC97FDCEF5784C67093F432EA2B5DC5D97707E7F026929517F89173A6E668E7212A47352B9CBA800B538760B3290574B4BFE5CBF4666A803F42C1068722CE64D7F81D0CB8788E13FF12D598FGG08ADGGD0CB818294G94G88G88G78EA51ACE13FF12D598FGG08ADGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG9390GGGG
**end of data**/
}
/**
 * Return the ExitMenuItem property value.
 * @return javax.swing.JMenuItem
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenuItem getExitMenuItem() {
	if (ivjExitMenuItem == null) {
		try {
			ivjExitMenuItem = new javax.swing.JMenuItem();
			ivjExitMenuItem.setName("ExitMenuItem");
			ivjExitMenuItem.setMnemonic('e');
			ivjExitMenuItem.setText("Exit");
			// user code begin {1}
			ivjExitMenuItem.addActionListener(this);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjExitMenuItem;
}
/**
 * Return the FileMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getFileMenu() {
	if (ivjFileMenu == null) {
		try {
			ivjFileMenu = new javax.swing.JMenu();
			ivjFileMenu.setName("FileMenu");
			ivjFileMenu.setMnemonic('f');
			ivjFileMenu.setText("File");
			ivjFileMenu.add(getExitMenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjFileMenu;
}
/**
 * Return the HelpMenu property value.
 * @return javax.swing.JMenu
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JMenu getHelpMenu() {
	if (ivjHelpMenu == null) {
		try {
			ivjHelpMenu = new javax.swing.JMenu();
			ivjHelpMenu.setName("HelpMenu");
			ivjHelpMenu.setMnemonic('h');
			ivjHelpMenu.setText("Help");
			ivjHelpMenu.add(getAboutMenuItem());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjHelpMenu;
}
/**
 * Return the JFrameContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJFrameContentPane() {
	if (ivjJFrameContentPane == null) {
		try {
			ivjJFrameContentPane = new javax.swing.JPanel();
			ivjJFrameContentPane.setName("JFrameContentPane");
			ivjJFrameContentPane.setLayout(null);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJFrameContentPane;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception)
{
	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	 exception.printStackTrace();
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}

		//Get the billing file defaults from the text config file.
		//** Do this before initializing any JComponents. **
		//  This application stores it's own default text config file,
		//	 defined in billingFileDefaults class.

		System.out.println("Yukon Billing File Frame Version: "  + frameVersion);
		// user code end
		setName("BillingFileFormatFrame");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(426, 240);
		setJMenuBar(getBillingFileFormatFrameJMenuBar());
		setContentPane(getJFrameContentPane());
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) 
{
	try
	{
		javax.swing.UIManager.setLookAndFeel( javax.swing.UIManager.getSystemLookAndFeelClassName());		
		final BillingFileFormatFrame aBillingFileFormatFrame = new BillingFileFormatFrame();
		BillingFileFormatPanel billingPanel = new BillingFileFormatPanel();
		aBillingFileFormatFrame.setContentPane(billingPanel);
		aBillingFileFormatFrame.frameVersion = billingPanel.BILLING_VERSION;
		if( args.length > 0)
		{
			billingPanel.parseCommandLine(args);
		}
		
		aBillingFileFormatFrame.addWindowListener(new java.awt.event.WindowAdapter()
		{
			public void windowClosing(java.awt.event.WindowEvent e)
			{
				aBillingFileFormatFrame.exit();
			};
		});

		aBillingFileFormatFrame.setSize(billingPanel.getSize());
		java.awt.Insets insets = aBillingFileFormatFrame.getInsets();
		aBillingFileFormatFrame.setSize(aBillingFileFormatFrame.getWidth() + insets.left + insets.right, aBillingFileFormatFrame.getHeight() + insets.top + insets.bottom);
			
		java.awt.Dimension d = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
		aBillingFileFormatFrame.setLocation((int)(d.width * .2),(int)(d.height * .1));
		aBillingFileFormatFrame.setVisible(true);
				aBillingFileFormatFrame.show();

	}
	catch (Throwable exception)
	{
		System.err.println("Exception occurred in main() of javax.swing.JFrame");
		exception.printStackTrace(System.out);
	}
}
	/**
	 * This method is called whenever the observed object is changed. An
	 * application calls an <tt>Observable</tt> object's
	 * <code>notifyObservers</code> method to have all the object's
	 * observers notified of the change.
	 *
	 * @param   o     the observable object.
	 * @param   arg   an argument passed to the <code>notifyObservers</code>
	 *                 method.
	 */
public void update(java.util.Observable o, java.lang.Object arg) {}
}
