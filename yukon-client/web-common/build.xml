<?xml version="1.0" ?>
<project name="web-common" default="all">

   <property file="../build/build.properties"/>

   <target name="all" depends="clean,build">
    </target>
   
   <target name="build">
       <mkdir dir="build"/>
       
       <javac srcdir="src"
              destdir="build"
              target="${yukon.javac.target}" 
     	      source="${yukon.javac.source}"
              bootclasspath="${yukon.javac.bootclasspath}"
              debug="${yukon.javac.debug}">                               
          <classpath>                        
             <fileset dir="${yukon.lib}">
                <include name="**/*.jar"/>
             </fileset>
	      </classpath> 
     	</javac>

       <jar jarfile="${yukon.lib}/web-common.jar"
            basedir="build/" manifest="resource/manifest.mf">
           <manifest>
               <attribute name="Yukon-Version" value="${yukon.build.version}"/>
               <attribute name="Yukon-Details" value="${yukon.build.details}"/>
           </manifest>
       	   <fileset dir="src">
       	       <exclude name="**/*.java"/>
       	   </fileset>

       </jar>       
   </target>

    <target name="clean">
       <delete dir="build"/>

        <!-- Remove testing files -->
        <delete dir="test/build"/>
        <delete dir="test/testResults"/>
    </target>
   
    <!-- Run unit tests - will stop running if a failure or error occurs during a test -->
    <target name="runUnitTests" description="Run all unit tests, stop on failure" depends="compileUnitTests">
        <antcall target="executeTests">
            <param name="halt" value="yes" />
            <param name="testDir" value="test/build" />
        </antcall>
    </target>

    <!-- Compile unit tests - will compile all unit tests -->
    <target name="compileUnitTests">
        <antcall target="compileTests">
            <param name="srcdir" value="test"/>
            <param name="destdir" value="test/build" />
        </antcall>
    </target>

    <!-- Compile the test classes for testing. This target must be supplied a srcdir and a destdir property -->
    <target name="compileTests">

        <delete dir="${destdir}" />
        <mkdir dir="${destdir}" />
        <javac srcdir="${srcdir}"
               destdir="${destdir}"
               target="${yukon.javac.target}"
               source="${yukon.javac.source}"
               bootclasspath="${yukon.javac.bootclasspath}"
               debug="${yukon.javac.debug}">
            <classpath>
                <fileset dir="${yukon.lib}">
                    <include name="**/*.jar" />
                </fileset>
            </classpath>
        </javac>

    </target>

    <!-- Run tests. This target must be supplied a halt and testDir property -->
    <target name="executeTests" depends="compileUnitTests">

        <property name="test.results.dir" value="test/testResults"/>
        <!-- Clear out any old results -->
        <delete dir="${test.results.dir}" />
        <mkdir dir="${test.results.dir}" />

        <!-- Run all tests (currently looks for all classes whose name ends with 'Test') -->
        <junit printsummary="yes" haltonerror="${halt}" haltonfailure="${halt}">
            <classpath id="junit.class.path">
                <dirset dir="test" />
                <fileset dir="${yukon.lib}">
                    <include name="**/*.jar" />
                </fileset>
            </classpath>
            <formatter type="xml" />
            <batchtest fork="yes" todir="${test.results.dir}">
                <fileset dir="${testDir}">
                    <include name="**/*Test.class" />
                </fileset>
            </batchtest>
        </junit>

        <!-- Create the html reports for test results -->
        <property name="test.results.dir" value="test/unitTestResults" />
        <junitreport todir="${test.results.dir}">
            <fileset dir="${test.results.dir}">
                <include name="TEST-*.xml" />
            </fileset>
            <report todir="${test.results.dir}" />
        </junitreport>
    </target>
	
</project>