package com.cannontech.dbtools.dbsleuth;

/**
 * Insert the type's description here.
 * Creation date: (1/17/2001 10:52:06 AM)
 * @author: 
 */
import java.util.Properties;
import java.util.Vector;


public class DBSleuth extends javax.swing.JFrame implements java.awt.event.ActionListener, java.awt.event.WindowListener {
   private Vector drivers = new Vector();
	private String serverField = null;
	private String driverField = null;
	private String userNameField = null;
	private String passwordField = null;
   TableSorter sorter;
   JDBCAdapter dataBase;
	private javax.swing.JButton ivjJButtonConfig = null;
	private javax.swing.JButton ivjJButtonExecute = null;
	private javax.swing.JPanel ivjJFrameContentPane = null;
	private javax.swing.JLabel ivjJLabelSQLCommand = null;
	private javax.swing.JScrollPane ivjJScrollPaneJTable = null;
	private javax.swing.JScrollPane ivjJScrollPaneJTextArea = null;
	private javax.swing.JTable ivjJTableResults = null;
	private javax.swing.JTextArea ivjJTextArea = null;
	private javax.swing.JLabel ivjJLabelSeconds = null;
	private javax.swing.JPanel ivjJPanelTime = null;
	private java.awt.FlowLayout ivjJPanelTimeFlowLayout = null;
/**
 * DBSleuth constructor comment.
 */
public DBSleuth() {
	super();
	initialize();
}
/**
 * DBSleuth constructor comment.
 * @param title java.lang.String
 */
public DBSleuth(String title) {
	super(title);
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJButtonExecute()) 
		connEtoC1(e);
	if (e.getSource() == getJButtonConfig()) 
		connEtoC2(e);
	// user code begin {2}
	// user code end
}
/**
 * Insert the method's description here.
 * Creation date: (1/29/2001 1:24:00 PM)
 */
private void closeDatabase() 
{
	try
	{
		if( dataBase != null )
			dataBase.close();
	}
	catch( java.sql.SQLException e )
	{
		handleException(e);
	}
	
}
public void connect()
{
   dataBase = new JDBCAdapter(
		 		serverField,
	         driverField,
	         userNameField,
	         passwordField);
   
   sorter.setModel(dataBase);
}
/**
 * connEtoC1:  (JButtonExecute.action.actionPerformed(java.awt.event.ActionEvent) --> DBSleuth.jButtonExecute_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonExecute_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (JButtonConfig.action.actionPerformed(java.awt.event.ActionEvent) --> DBSleuth.jButtonConfig_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonConfig_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Insert the method's description here.
 * Creation date: (1/17/2001 11:09:21 AM)
 */
private boolean getExternalResources() 
{
	  // Log to System.err until we have read the logfile property
	  java.io.InputStream is = getClass().getResourceAsStream("/db.properties");
	  Properties dbProps = new Properties();
	  try
	  {
		 dbProps.load(is);
	  }
	  catch (Exception e)
	  {
		 com.cannontech.clientutils.CTILogger.info("Can't read the properties file. " +
			"Make sure db.properties is in the CLASSPATH" );
		 return false;
	  }
	  
   String driverClasses = dbProps.getProperty("drivers");
   java.util.StringTokenizer st = new java.util.StringTokenizer(driverClasses);   
   while (st.hasMoreElements())
   {
	  driverField = st.nextToken().trim();
   }

   java.util.Enumeration propNames = dbProps.propertyNames();
   while (propNames.hasMoreElements())
   {
	  String name = (String) propNames.nextElement();
	  if (name.endsWith(".url"))
	  {
		 String poolName = name.substring(0, name.lastIndexOf("."));
		 serverField = dbProps.getProperty(poolName + ".url");
		 if (serverField == null)
		 {
			com.cannontech.clientutils.CTILogger.info("No URL specified for " + poolName);
			continue;
		 }

		 userNameField = dbProps.getProperty(poolName + ".user");
		 passwordField = dbProps.getProperty(poolName + ".password");
	  }
	  
   }

   return true; 
}
/**
 * Return the JButtonConfig property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonConfig() {
	if (ivjJButtonConfig == null) {
		try {
			ivjJButtonConfig = new javax.swing.JButton();
			ivjJButtonConfig.setName("JButtonConfig");
			ivjJButtonConfig.setMnemonic('c');
			ivjJButtonConfig.setText("Config");
			ivjJButtonConfig.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonConfig;
}
/**
 * Return the JButtonExecute property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonExecute() {
	if (ivjJButtonExecute == null) {
		try {
			ivjJButtonExecute = new javax.swing.JButton();
			ivjJButtonExecute.setName("JButtonExecute");
			ivjJButtonExecute.setMnemonic('x');
			ivjJButtonExecute.setText("Execute (F5)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonExecute;
}
/**
 * Return the JFrameContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJFrameContentPane() {
	if (ivjJFrameContentPane == null) {
		try {
			ivjJFrameContentPane = new javax.swing.JPanel();
			ivjJFrameContentPane.setName("JFrameContentPane");
			ivjJFrameContentPane.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJButtonExecute = new java.awt.GridBagConstraints();
			constraintsJButtonExecute.gridx = 2; constraintsJButtonExecute.gridy = 2;
			constraintsJButtonExecute.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonExecute.ipadx = 4;
			constraintsJButtonExecute.insets = new java.awt.Insets(2, 12, 3, 28);
			getJFrameContentPane().add(getJButtonExecute(), constraintsJButtonExecute);

			java.awt.GridBagConstraints constraintsJButtonConfig = new java.awt.GridBagConstraints();
			constraintsJButtonConfig.gridx = 2; constraintsJButtonConfig.gridy = 3;
			constraintsJButtonConfig.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonConfig.ipadx = 38;
			constraintsJButtonConfig.insets = new java.awt.Insets(4, 12, 2, 28);
			getJFrameContentPane().add(getJButtonConfig(), constraintsJButtonConfig);

			java.awt.GridBagConstraints constraintsJLabelSQLCommand = new java.awt.GridBagConstraints();
			constraintsJLabelSQLCommand.gridx = 1; constraintsJLabelSQLCommand.gridy = 1;
			constraintsJLabelSQLCommand.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelSQLCommand.ipadx = 6;
			constraintsJLabelSQLCommand.insets = new java.awt.Insets(27, 12, 1, 308);
			getJFrameContentPane().add(getJLabelSQLCommand(), constraintsJLabelSQLCommand);

			java.awt.GridBagConstraints constraintsJScrollPaneJTextArea = new java.awt.GridBagConstraints();
			constraintsJScrollPaneJTextArea.gridx = 1; constraintsJScrollPaneJTextArea.gridy = 2;
constraintsJScrollPaneJTextArea.gridheight = 3;
			constraintsJScrollPaneJTextArea.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJScrollPaneJTextArea.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJScrollPaneJTextArea.weightx = 1.0;
			constraintsJScrollPaneJTextArea.weighty = 1.0;
			constraintsJScrollPaneJTextArea.ipadx = 339;
			constraintsJScrollPaneJTextArea.ipady = 67;
			constraintsJScrollPaneJTextArea.insets = new java.awt.Insets(1, 12, 2, 11);
			getJFrameContentPane().add(getJScrollPaneJTextArea(), constraintsJScrollPaneJTextArea);

			java.awt.GridBagConstraints constraintsJScrollPaneJTable = new java.awt.GridBagConstraints();
			constraintsJScrollPaneJTable.gridx = 1; constraintsJScrollPaneJTable.gridy = 5;
			constraintsJScrollPaneJTable.gridwidth = 2;
			constraintsJScrollPaneJTable.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJScrollPaneJTable.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJScrollPaneJTable.weightx = 1.0;
			constraintsJScrollPaneJTable.weighty = 1.0;
			constraintsJScrollPaneJTable.ipadx = 488;
			constraintsJScrollPaneJTable.ipady = 238;
			constraintsJScrollPaneJTable.insets = new java.awt.Insets(2, 12, 8, 11);
			getJFrameContentPane().add(getJScrollPaneJTable(), constraintsJScrollPaneJTable);

			java.awt.GridBagConstraints constraintsJPanelTime = new java.awt.GridBagConstraints();
			constraintsJPanelTime.gridx = 2; constraintsJPanelTime.gridy = 4;
			constraintsJPanelTime.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJPanelTime.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJPanelTime.weightx = 1.0;
			constraintsJPanelTime.weighty = 1.0;
			constraintsJPanelTime.ipadx = 40;
			constraintsJPanelTime.insets = new java.awt.Insets(3, 12, 4, 14);
			getJFrameContentPane().add(getJPanelTime(), constraintsJPanelTime);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJFrameContentPane;
}
/**
 * Return the JLabelSeconds property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSeconds() {
	if (ivjJLabelSeconds == null) {
		try {
			ivjJLabelSeconds = new javax.swing.JLabel();
			ivjJLabelSeconds.setName("JLabelSeconds");
			ivjJLabelSeconds.setText("(00:00.000)");
			ivjJLabelSeconds.setMaximumSize(new java.awt.Dimension(63, 14));
			ivjJLabelSeconds.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjJLabelSeconds.setMinimumSize(new java.awt.Dimension(63, 14));
			ivjJLabelSeconds.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSeconds;
}
/**
 * Return the JLabelSQLCommand property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSQLCommand() {
	if (ivjJLabelSQLCommand == null) {
		try {
			ivjJLabelSQLCommand = new javax.swing.JLabel();
			ivjJLabelSQLCommand.setName("JLabelSQLCommand");
			ivjJLabelSQLCommand.setFont(new java.awt.Font("Arial", 1, 12));
			ivjJLabelSQLCommand.setText("Command");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSQLCommand;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelTime() {
	if (ivjJPanelTime == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitle("");
			ivjJPanelTime = new javax.swing.JPanel();
			ivjJPanelTime.setName("JPanelTime");
			ivjJPanelTime.setBorder(ivjLocalBorder);
			ivjJPanelTime.setLayout(getJPanelTimeFlowLayout());
			getJPanelTime().add(getJLabelSeconds(), getJLabelSeconds().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelTime;
}
/**
 * Return the JPanelTimeFlowLayout property value.
 * @return java.awt.FlowLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.FlowLayout getJPanelTimeFlowLayout() {
	java.awt.FlowLayout ivjJPanelTimeFlowLayout = null;
	try {
		/* Create part */
		ivjJPanelTimeFlowLayout = new java.awt.FlowLayout();
		ivjJPanelTimeFlowLayout.setVgap(0);
		ivjJPanelTimeFlowLayout.setHgap(0);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjJPanelTimeFlowLayout;
}
/**
 * Return the JScrollPaneJTable property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPaneJTable() {
	if (ivjJScrollPaneJTable == null) {
		try {
			ivjJScrollPaneJTable = new javax.swing.JScrollPane();
			ivjJScrollPaneJTable.setName("JScrollPaneJTable");
			ivjJScrollPaneJTable.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
			ivjJScrollPaneJTable.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
			getJScrollPaneJTable().setViewportView(getJTableResults());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPaneJTable;
}
/**
 * Return the JScrollPaneJTextArea property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPaneJTextArea() {
	if (ivjJScrollPaneJTextArea == null) {
		try {
			ivjJScrollPaneJTextArea = new javax.swing.JScrollPane();
			ivjJScrollPaneJTextArea.setName("JScrollPaneJTextArea");
			getJScrollPaneJTextArea().setViewportView(getJTextArea());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPaneJTextArea;
}
/**
 * Return the JTableResults property value.
 * @return javax.swing.JTable
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTable getJTableResults() {
	if (ivjJTableResults == null) {
		try {
			ivjJTableResults = new javax.swing.JTable();
			ivjJTableResults.setName("JTableResults");
			getJScrollPaneJTable().setColumnHeaderView(ivjJTableResults.getTableHeader());
			getJScrollPaneJTable().getViewport().setBackingStoreEnabled(true);
			ivjJTableResults.setBounds(0, 0, 200, 200);
			// user code begin {1}

			sorter = new TableSorter();
			ivjJTableResults.setModel(sorter);
			// Install a mouse listener in the TableHeader as the sorter UI.
			sorter.addMouseListenerToHeaderInTable(ivjJTableResults);
			ivjJTableResults.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);


			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTableResults;
}
/**
 * Return the JTextArea property value.
 * @return javax.swing.JTextArea
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextArea getJTextArea() {
	if (ivjJTextArea == null) {
		try {
			ivjJTextArea = new javax.swing.JTextArea();
			ivjJTextArea.setName("JTextArea");
			ivjJTextArea.setText("select * from point");
			ivjJTextArea.setBounds(0, 0, 332, 62);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextArea;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	// com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	addKeyListener( new java.awt.event.KeyAdapter()
	{
		public void keyPressed(java.awt.event.KeyEvent e)
		{
			if( e.getKeyCode() == java.awt.event.KeyEvent.VK_F5 )
			{
				DBSleuth.this.jButtonExecute_ActionPerformed( 
						new java.awt.event.ActionEvent(e, e.getID(), "F5 key pressed" ) );
			}
		
		}
			
	});

	addWindowListener(this);
	// user code end
	getJButtonExecute().addActionListener(this);
	getJButtonConfig().addActionListener(this);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("DBSleuth");
		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		setSize(556, 428);
		setTitle("DBSleuth");
		setContentPane(getJFrameContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}

	if( getExternalResources() )
	{
		connect();
		com.cannontech.clientutils.CTILogger.info("Connected to DB!");
	}
		
	// user code end
}
/**
 * Comment
 */
public void jButtonConfig_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	com.cannontech.clientutils.CTILogger.info("Config Button does nothing, sorry sleuth.");
	
	return;
}
/**
 * Comment
 */
public void jButtonExecute_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	if( dataBase != null )
	{
		java.util.Date start = new java.util.Date();
		dataBase.executeQuery( getJTextArea().getText() );
		long totalTime = new java.util.Date().getTime() - start.getTime();

		long mins = totalTime / 60000L; //60000 = 1
		long secs = (totalTime - (mins * 60000L)) / 1000; // 1000 = 1
		long millis = totalTime - ((secs*1000)+(mins * 60000L)); //  1 = 1


		getJLabelSeconds().setText(
			mins + ":" +
			(secs < 10 ? "0": "") + secs + "." + 
			(millis < 10 ? "00": 
				(millis < 100 ? "0" : "") ) + millis );
	
	}
	else
		com.cannontech.clientutils.CTILogger.info("Unable to Execute, Not connected to database.");
	
	return;
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args)
{
   try
   {
	  javax.swing.UIManager.setLookAndFeel(
		 javax.swing.UIManager.getSystemLookAndFeelClassName());

	  DBSleuth aDBSleuth = new DBSleuth();

	  aDBSleuth.show();
	  java.awt.Insets insets = aDBSleuth.getInsets();
	  aDBSleuth.setSize(
		 aDBSleuth.getWidth() + insets.left + insets.right,
		 aDBSleuth.getHeight() + insets.top + insets.bottom);
	  aDBSleuth.setVisible(true);
   }
   catch (Throwable exception)
   {
	  System.err.println("Exception occurred in main() of javax.swing.JFrame");
	  com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
   }

}
/**
 * Insert the method's description here.
 * Creation date: (1/31/2001 9:08:12 AM)
 * @param e java.awt.event.WindowEvent
 */
public void windowActivated(java.awt.event.WindowEvent e) {}
/**
 * Insert the method's description here.
 * Creation date: (1/31/2001 9:08:12 AM)
 * @param e java.awt.event.WindowEvent
 */
public void windowClosed(java.awt.event.WindowEvent e) {}
/**
 * Insert the method's description here.
 * Creation date: (1/31/2001 9:08:12 AM)
 * @param e java.awt.event.WindowEvent
 */
public void windowClosing(java.awt.event.WindowEvent e) 
{
	// THIS IS NOT CALLED IN JRE1.3 WHEN THE JFRAME IS CLOSED?????
	setVisible(false);
	closeDatabase();

	try
	{
		com.cannontech.clientutils.CTILogger.info("SLEEPING");					
		Thread.sleep(2000);
	}
	catch( InterruptedException ex )
	{
	}
			
	System.exit(0);
	
}
/**
 * Insert the method's description here.
 * Creation date: (1/31/2001 9:08:12 AM)
 * @param e java.awt.event.WindowEvent
 */
public void windowDeactivated(java.awt.event.WindowEvent e) {}
/**
 * Insert the method's description here.
 * Creation date: (1/31/2001 9:08:12 AM)
 * @param e java.awt.event.WindowEvent
 */
public void windowDeiconified(java.awt.event.WindowEvent e) {}
/**
 * Insert the method's description here.
 * Creation date: (1/31/2001 9:08:12 AM)
 * @param e java.awt.event.WindowEvent
 */
public void windowIconified(java.awt.event.WindowEvent e) {}
/**
 * Insert the method's description here.
 * Creation date: (1/31/2001 9:08:12 AM)
 * @param e java.awt.event.WindowEvent
 */
public void windowOpened(java.awt.event.WindowEvent e) {}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G87F954ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BD8DD8D5D53614E654B0A3B66410DAE1225108C5C5E506E5C81315B5B64FDE4E8C3D4FE9EC06B7E36FB9B33E22991A3779C745B421918B155494A69E22E2B9574BBFAA8885A328D8B6F2659E606265DE3A77GD765672D3D77D97B1EFB6E8F266257621E3D765F5AEB2F35765AEB6FF3A2595BC3D293133289C9CCA54A3F4F938949B69172D6C1D0BC627C2468B4227A77B1407B04B42640EFA064C53D
	981D3611CC59108169D0C867AD0ACE5B8C4FD9A4FADF6FF9F87052CFAD646DE9EEAB725DCF5DC758CFBACBCFB81C893F6F8104810E7E2E16E87FF79D4ED1700B95BCC2E292A1CBBAE819478F67AA38C310EE8288G8869606567426F9A5673CD3AC3CA393313C2486A6777A42D276D285AC4486964F5754AEF9EF9A0F1C5A76D6BF5C6A72DA3C3BA9C008EBE19BC2C238356B7DD68ACEB377694359BAC962BC5165A3B0A0C67E52B55EC07DF3BD96A133BF43A1A2AE676C4C8DB97ED736F7A8C5686A17910DE49F0
	BDDBE8BF21709C8530D460CBBE2478E2D3F4DAADC01B8947D63AC72F505EFA798112702AA5F9031731B9CCFCCCA1A66758027A7E1C3E054D43AD39145F3110C73A235332818E813482B8GBEE2739F78515F6137723CDCED6D6931DAAAFBFB2B4CC65B97D623E406E71D8EF2945C89295DEAB3924267B86EF02187FAFC812F7756F72E47F992F6G67BB7C44AC927BF0FDD23A871E440695A785F6F3DE04F5BBF9427B5E2B77567722EED7F9F46D7BB4D1773DF202B5B955C35F112F94A445AA6D2CD2751DF7014E
	752F188CEC0467C4C5BEB87E778CEFD46139EC5A991E26E548DBF681E52375BD2425A1E58A59382F41A39F0223AB1374E6CEC30BD9CB4B2D9D34EDBFB36FB3D550F2BB438729701C969D13D31A8E033C4C1E68B4AEDF37ED233A5A8B69G00D000A800D800F800CC8B4A584FBF5AFB05B256E43049D5FDA633D13291DE77365C3F412F6410ED06BA0BDDB6D85A25D3861B49F05EAC5909D2E6EAAE6541F917FAA1CC765B210FE312C53299E41355822D9BFAA4D93259F9197BF25F27E5EC924BEDB175C850C1CFAF
	41F69F4C4D02DF3341AE1F6CB59AE449D90267BF1ECB67245FF08ADA048660197365296D14DF05B07E9A00964107122D343DFA49E6114CBADD0355FA212F37050E0404DAA81F0FB25B51854FFE96647193F9949787E9E245F6AEEC5D24EA274654CE49B758AE220E7DF68B354759D614197FEAC51929D9BF13943EF25C234CD04837F2D92930EAF5678F2CCDCA97CFDF5C527A9D75589BE4DB5DF50F77F15BF56BA359830E7337E0871D2BAE20E1BCC02860712C2DF9DCE62B8CF6892534518682A6991D9C67F486
	F6E4A87CCC9634CFE538A8E8EF0595F9D671E12B2A5C759817BB4F4E30BEE87B29E35087674D34EDF4BD127AA50BDCA375CA96A3BC58153C995B284CA97A5AE195F56EE378DE506FEAD0A83B40BF300D6A20C116ED2673FD3254AC49324952694CFF0C75E56FBB5F6BB48D5857135B68982D83205F227C42EDD4B75A2D960B44A6C9D4D1721FE13AA919259EA03A5A5AE711B97E056DD43EAFC897955B70536D545169B7187B281D61FEC104E19D9D034D5483D3CFCD95B95BCB75769BFD0E0AC71900237ECDB17C
	5674228E8E6CC49D5CF5E9BAD9F06E13A4CFEBC8704C1A2450DE455769F56AA027E9C11EE75AFF42EC040237F3DAAF3CC7F1681DF0D9BF3F1356DF866D2E84C87996E53D6AE31A0F76C49172EA2B594CD9A8F83BF747C6BA975237FD9218E1EA386A853FBE5B31C913F7CA619D4FAF5BC1F9E7D6593C655FD25E3D58017EDEAE24CBGDA3E657C8B7A160F1F171B5409658AED40D71B331C51464B71F13F73A11D8B663BF59B7A8D0EA27BG4813CEF77CA8357D5CC7FB1659D92AAF61B674457617D35E2C00F482
	C0369D676D6575680B85DD88A14BE7FC68554FAC34F3BA1A6C2A75F69C7AE2613BE81F011097E2C73EBF3EC33D9ED45A6D56F693DB0A941EF56DD44FAB47756CDC8B3F9DA61BDD2E8345F3A0FF6DBBA93DF42DD2504A5A7DD6872E5D11506FCA0071B245B7D7E72BE85F85388600DE00E4565EB71D7B29DEB281A862BFCD122D43EA6B110C791433C506813908590022CA16FD04BE9760BCBCEFAA055F6E2ABED906AC07548E4AFD2ED253CE0377068E971CA268FF5D13D5215039787EA9C4BF121564499F765F30
	B5E9312C6CB7E4679C8CBE14163C72DFFFC9677C1857097C286883BF38CF70A35393BFA27AF0CF70F11E5EB91EEA2B254354799D07436D73E266034674F976B717E970ABA14DFD33D9CCBEC93F56FF0CE0780D7DDA7F71D0B97A0FF910B73E9F7D09433B29FE44C1BAE5A0BAAD9720842085C09EC0397C4B4E83E494FF2D8E76C3B60B415C6CE21851EF5A154CED2912FEE4D7AA5AD2026BD4C20756978F9CF09DFB38A64D6B2D6D54565B26C9AF515463733721F90BE73B40E7947238AD7FED395A16478DF0DFAC
	538173G406D472D55E8BF8EB950CE8C9DD55B09288D7B1356F931933D8ECEDF2043A92305E24F76469EEA6716C05ECA00140B50AFC08DC09B40780BB8C7651F140EB6C7CC70DA2C55002B853BDB2DDD9385CF973871744A666225D167A27422EBBD05FF19990AEEC7C1BE77FDFF4DEC72EAC867DCC25C61D20AAB04F40D404DABE3BEB22487AF21DF95DECE57EEFF11FE1425297E72F4D979E8FEA42DFBEDFE5769D17B38961F0F4FF94DEE6FFED77DEE4FFE57BFF7FB763BCE6FFE1F63218D752E8B734F6D766D
	17F56E766417EDE563FC6EEF9BD85BF63BE4E7C2D8E3108DCA5EEF658F08877F6CCBD81C959EE511831DEB14B2C7E4EB75BE02BA7C2782AFEBFB1381D6D0AEDB5BABB21472E117F0ED8F2C2236F0B9246381B6DEC63918D82D155FFC4853DFD656714B6EB241F554DCC0578AA3647B818483C4GAC390C3A796E6ED16D6791078F7B795FFB3C4F73DBFBBC4FF3429E6A17582DFD36F6C9BB174979B9A24FE9856AE42907321D17494C2775E5032DD3F21305ACD61F67F92B1F1B6FCDDE781C3E6DB2277B055ECC4C
	544E41AA60E34AA067FD8E7C968E3A4E83EF6F4FFAAAC7C6294350E78651365A2546DEE51B8F7841C1BA6F9F14623E2CE2905771878728DD6EGE79048EB6E155AC94B90ADFB22946D7E82A83B94E0B5C0B664158C21CF74F299EDC3B649E6AA2B5306E8AC74ECB191B42D5AC2F940BD4DEA9AB1242AE5F12EF93BAA34E3DDBE649C5B6AA1F7F963EBFCC6B5155F0CE13E462F97784D8CDF28427335FFB213F71AEE023C28E1341D33583A15BF82B2BE02387FE638A6C83789DCCB8D5ADD73884A34DC60DDA6AF97
	F816499B8ABC5B1E1B8BFC5B1E09855EE4C999C7A60EA3CA507C3BCC9C4792012BDF0F630895384DEC1DA9740BCE2B7043F9ADAC2571A915C9A9BAED32982D83B007B462A45B0BEA9A4FFD5958D2DB776531F30DDF1E2BEEE8ECBE227826A1836AB87421351FFB5C57D1E87163735B257CC65D3CD3D98F9DC2CEC3A0EF199F452514297DD1CA679978D3843FBC7FB317FC4AAFF03DD579DDAE791456B3A96A7CA9AE79292A7AFCDCAFFC027ECC428BE1447C48BF3C6EFB72EE606329D1FE1BCE6DA43BEE7DCBBAEF
	6727DF2B7933F14A47C909DE5A99D46A7B5F60740B94BF005974A840AF39816771DFD5B8372BEFC0FB7EDEB555611C9BC1E7811AG4CG81G61B7E2192D2C8C5DE752BDE48C60D7GE40C83BBB38E4BCC2BEA73C01F96E87B789C20FA467E056F24506159EFF86C0A7ACAD7BD2F534805BA4E33DE19BFCF3EC796194FF43D47A24122E4EA67B6F2A9437D010EE79C6AC3DA8D751FE4D0E8EE63CED0F3CD7C46517297EAEAFC5019CAF02D665086F5A86CD466DC9E477DE57A4C7B7FA9535BE78196C19E6F6F5683
	4E7E4E2F9F2D3FF49F7DAD0367AF08B36616C50A74343CE421A18823C243EC21FFAB4661BE6973920A0B07F476F83401530BBF055FD306EEE5C5BFE2B449D69BDB528159E433428AA4DF64D8967DD066781725D7F76671F4BA6AE0643CFB485C896FA4FA5BD3140CD7E27D4AEFDC4BCE153FB27DA01579711097829083908B308AA063A69CDBDCB12511FAA6C0FE25AC9B5A3BD854819D16D3A6E94009268BA7EFBB66B3CAA9EF23E85FA75E7883AD9C877B5AF83E9B1C0796C327180F9395B44EE6B6DC34764920
	7BB75179B0D560DA1C8B69920033G3DB77131ADE1E57A2AF2BC7041D55E272D274F47DDE29018C72A56BB7378FEDE54A3F69A67BA5EE0B8AF191B7F59C03DB803454873FE3F055A4D634D6DB62B59CCD77763AD20A715B6494073CF673D2F4DE751AEECFB7AB7B4FE43BDD6FA1EG7342628FBFAFD55B631C89BC7E2007DF3EAF8D4FD20F37C9499F045FC0D1A62A5CD319B0780D92E5A6DD566EEFE91925109FB781757F775574F70FE38F594E79C1B208739F5751D3542CABF27A2BCC14535C59D3C94D2B6FA4
	227EE967055C2C2C91B7BBEDFCDCF7C2BA6F77B7192C5F76BDCA9F29BAA27896DDCAF53D43E036CBC25E74A5348D61A7F015D3722ACBA8BFCD9613ECB218CD1718E3588C85AD1DDCEEDF5151FCFF20A394E091C0AC402A1BD19F1EAD5941754103AE9CB1F6CA689BE0FFBFBE685DBFFA706068E7D8738ED239B8EF85F16C216DA3FE41C1EAC3E4EBAFC3AAB16C03146FB6D3E7174C0BAA78978E52F9B2CB9D8C4DFD41E315F8461D698FEB1EBF7A417B5AE81CC16C25E854CA27BBE6B3992B8C1D8DCC9B39EFB231
	92ED6320BF6E276633B6A3A13D98E005BF46C09C3BD18E42E7CDA18DFE759EFD0665AD7B13927C15793F45A987E1FDFFD6FC066E8BEAF922F95EFC0F33CAFDBFD5BB38AE40FE31434BFE11E9B69F5F46B20C65AC3885F953F9E42B67FACE2DA6984BD81105677D7137A0FFB61532F37DDB2353EA815AEE4538516AF26C4BF1AB160D6D23E5A3A03D88E039A87B5CE5AC9BAF4ABE16445A7D9E348B5076BDDC2B9669699A6900F49040DC00A5GABG92GB686C4276D82B88450845085B0889088908A90893088A0
	B6GE5FF6AA16A8BFADB6794A1E18AE0B318288AA872771A4E3B8E2C500D2E83EF6AD83C9BE43765E22F322F7C230E2E8F560E8E3BA4F46DED5DC6012B33B7D96DA62A5DFC2D7D22726A6EA5FCFD1575023EF3BD3EF75B4776E82B82785EADD160F58C1F2042F3BDDEA874B8637B60CFFE9F675ED8C6E5FC8924D782247CA0BAAD97C08F507A831C4F004345E414F8C40B353781A64E2C5A0E71761FE4EB0A995A728788870881D88630CA347F6F078F78101793D6AB5B86539DB1080BE4D3C98E676187E5EA9E26
	CCD4767E4AEF61C4EF3E73FFE67962FD0507FA1C479318FE36CC54465283995EB8D19BCB4FA995F7B1A0EF59C45CA73CD30E7D6B83C13782DD7BB386FA6B3F291F36678854767F95437B87EA7BFF3D8F7B8F063C04C06C7F254B6A7137CD0ACE13A7B97B741F642D7FCF13E9FB53A6E97BBF48706113347D4FCF427E23A0AF6FB61C77D83DF7FD7F35FEF4FDDF29773C667DD16F3E663D2D773C663D2BD72FF99C1744FC05CE30D32D22DC3A401D91384C52B58A6E3449C82FF0A978CD25EB95FC2DC4BBC4FCCEA9
	25EB0061DA955CD6956E0C025BD1CAED968C394BEA433AFBCA691E2A43E4B67374272C0C4982A6CC70231851E86AB52868BEA8F0E7045CFFDEC544F3056A79394A6BF5DF423B3DFBFDCC7BD04EB84B3C4B15DC66B956F4294CF32C492F4CF79C5B3F4C7B7D0209E56E778B1EAD77CE5BCB65234B7C2B651EE57E35F2F719FF3D5C334C47152BE51E47C38A199FB39EF4B368B60C11682AB0A696A6F0D3C55CA4D260C8B662D2FE0836A50049EB0BC8CFE6E933C8EFAB3D5EF2C07BF215354F2FFB9F6AB398BE760D
	AC3694GFDC77C9079E1E23898C82F9438059548A39204BCB855CFF952A452EDACED9669383EEB251F366DDB9F937B2F358FDF67D2FC6CEFB0DFB490E8898DC2FEC49D2338C5100E9538976A840FEEC79E6CCBE6BC926943ACED966905C957E30EE97B5EF994FBDD7A7046A73EBF2DAEE3769DFC9C9ED3BA4374B1G688A3E9D63DA27AB812544359E2A729557CA5600B62E35885A44BD91EFEFF376E86DE1DC0E72E4A9540F3B1D37C7F18970FCEF92EC4F45F81E4A2136C784B78846A91EF509D3E4CC66715362
	4998BB58D3C16F1577CBB65954EEB0738DD3154156E4B51B5AAFAA7136AA26CB7F87D0A36A79D5D0FF9396CC53A56AA73A5544F861B4D617B2F2BC5465E37FC545E8E3DF279AFF8C54DBB659B97615707CB2BC3C1608E31FECE531A19638B9A1597B4CF409D66E87CC6AD747CF62A77358F16E0F0087BF4231A4DC26EB7BF92B0D9DEA7018D656A0562B05F2EDG41G61GB1225E3F9DF30F057D6E98560B03F2A4B8BAAD9FC09F4C6355FC7C2F570D96A3DD23122596285B954C47CF738661791FC49DA30D7F0A
	0D1F473F24F62B45E89773EFCE564629A89D7E41A863B79DA5221D22AA7AFE00C59A489397E30E4264666F2804C5513C23B0EF9F7C371F6EB5F95D30E3342EFB4CE9D539A79C2F73C2AD91F37B6290DD9FBD6C5B0594733D75DFCB710CF8DAB0727ECC85BDE7D61F8129F67BC5270E1CE8292B2EECB857DCFD223121212A7244394A065315E71A45D89F2EB86023FEED63093A2F9A3FEC715442F79B6FBBF54E71F6DF76925FE0122B44917AB1BE31B49863887FF1097A7319F7C4276D825083F0BF7F70A07A79AD
	008B388363A13F5DDAC0BC3F8F5159E7AA6A13CDE61D2E051E0AD6A9A22F70F95CA0769DF387763DF9086DEFA11DBD85E4E78A46A51F9F5246A5EBA02F8BE0F08A523729967740C100DBBC8569BB305F65EE8F0FE59DB5DB879A94D5D268792A9667BDE5AA5213D3C75B54C33A85408C705D66A3371E0876E7A453FC2ABB6327627A16DC66E90F9AB7152FD789D33D6DEDDF6A7735375DB84D5B5E6E44E5BA1EDD5334F1052F993EF81AB62E30629272D48FF9A153106E4A4151629AA9F7FA3A9354B8EABD6D9DA1
	DE4FFF54FAAEE33D936F45FD0F49D3491D5A7186B1FC451D5A71EE9D4271B6C0DE441DA8FFEF3849DF76DD51E907G9A6E4218DCF78646640CF7217C6CBC4E7652100E84D8FC9772AF27766A62C93B2F325EB91F75D6GDD71F7394E9767D3G137F4C3B357C3B1D61F36E5672EFDB9D72EF9764795F0D638DCB7664E32D3C1B77C9C278EFF64868772C72210C9E20C9D5167B179FB21F4A88F8B984FD4E11B274B97D846E0DFE440506A0FD2D17096015C1757C3BCBE33FE7CE3EBC16FD70FBD58B32285DB1D94C
	A69AE9E3EF3D883E5D4D6C70A260C52C604724A1A78F26281EF78E0DBDBF74E35A8757E7B22C3D139F87E35FB89D563C69284F45A3389E682723BECFA7D43EE5C887G04CEC7FED9B3547A958578A5531D7239E23AB7FB7CA3E69F6227EBE3ED5399BE639EED2C2D60B82E41B910B7F88F4AF4BFDB3B16C3FA1540BD49F0A9B340D64DC0BAEF2BF34E65D455732E3A311F5752B16D030F79F936466643F88F4DC0BE3C4DF0B510BEABF08B5939D5AF240384AEC744BE42846E9043AD06748A01CB5F424E7EA11D93
	0A7E613EB257BB91658D14377C6E5864B21435C2A8DF81508660879082404BA408FD438240AD85D88D10BDB3BA2DE4A6767168207B7D32FB687585655D580F06719D0816197C5DD8B37C7A4D643297BC93657A16C1DC27A2E622DC7FEB184AD59C2449AC9857AC141703A35AF523F816D316EBE6F9136BAD09343D56D95ABBE9798CBFB8CBFBA76DDE02F752C2A0AF73DE6475843626BAA09DA0F005EBA8AE8252B182772735B8F7F177A26DF79EF70DAD5C4B520742B03D7778584796EA2FCB9F3EE38B5F2F2563
	6A6FB47472BD700CDABC13ED8DC359F905156992E5FEAF4AF409B23FCAF61561671B0868633D943AC76EB1B8CCBDFDBD4D26CB12325F5E1D4266875A98AF5A79C5A50DF3BA776AF4FB0527F038CF7F9FF1EE9C81751607D15C5EAB383351D84568B0D9B4F4F4B2BD4D3F8F7465BE24E35B16AC97BAAA4D26CE8BBD29D76A9C5A02B4345D073A91D506B6BF70BE3CEB375A6D2E9DDD900B885E155BDD2E3DEB1768125FDA2E3DEBF7C712BA7F56F26DDDBB2C4FE95AB100F4AE92B4B58DE8E91A1428EE7346815FB4
	C58EE8E9F22D9FFE499BCDDCDFEB06514FA3BF86DB7BE364DF40B06E69FAFF0C3665E5D6B68C528BG1689FC7088BB6304F446EC7057E723DE7E00797A07E6FB562B868D3EEDB67A7ABFE37D483335EBE9AC430F1F2DDDCB0D43381686C1DE7CEC34A58DEC5DBF9B9E1D569B0EB8ABC17B92940EF4EECF9C7DBEE191ABB3976AAC8308874819837E6B9C9E5761E56610B69FF2AF6C4CF539CF38680A7A3ABE77896F4CF00FF3C5E6E863DCEDF334F12E6AB56EF12E2F56E0BDF98E0FF38540EF0842C79E67DA3B6E
	DA62DCF367B863DCBC16356C38B616C57B0A1903F44E2B25E50B45F8136AB04D6D671B34B9A5EFEEA55D573A443AEACCE00B680B61791F9DA84C5BD7D200E5B3D9DCCC9DABEA26FF1D570D2B0FFC59F26484417BD50B3ED15F454D7BB445633D1A78EF76A6AD1B23449566B86F43AC6DCEC8677436B5BB69CD4839F2FA9B37DCA93DDC861FF609F9945F9F1DD6F33F6FFD9F2F37E7606A763E47072F2EDE6BD5561B6435DE2B17F1F2BBF50459C3737DDA7B5548700377EB6D572B42FE85C05E2A7B518EE6B2DF2A
	65816D779BB6B3FC57835A6FB75CB5026FBC8EC25E728750664DE4FEE2CD8468C984625E9DC4BBB8A8F05B184D8F09D03FF335EC58751D2B57D91A466CF83AFBF86C5F399AB7EA9F57724E95177D7691F7DBF5E9C46D47507B2911401BC5916A7B299308AFDF075B1F9709761DD34A3F659178CEEA1B4ED37EEA116F1F2835DFB4BF63C10CE9BD13223D8FCA73F3A13FD814492A76D4261666BF08EB7E4A8C74CF6487B196FB639A748F42A9CE14FDFE8D7A87398F219FD0311649AB244DG639F423302F1AD00D6
	FC208D75349EDD0B26BD04F71B3ACED25A4843C0B3C085C0AB0099E07C43F887C5FFA21FF83FFB4483404E8BC7DC1E17B19FB0985A20FE9A473D46F09100233E9F47058D6377B832C5DC2FFE843F2D4153A7F9DA643FB62ACCDEA9F87FAE46DB572D8FCF7A417B58C45C3FE931156196830FD6BF0C638D9D997BEFDA4C9F994BEFDAF0BD0F9A9C7DFD32D78711A73911382F4F96F163D640198182G428196C7229FF1F0D83D2F67729EB202ED2D0CC4BDF9095969DD0F007F885072886AD4CAA26E674D8277A39D
	3EC39BAAF0CF09F2318277EE8A6AE37623584F648A5ACF83240DG030FE259FA71DEF310A87B2FD4DAF6B124D7GA4BC0A737E070C2BDBBB7D57DCDD3D49D7D96F27BE6BE5BF66AD3E9149ECD67EE35A3878FC06AFF9CC9B97BF3A966DE1856405BE06FC4A2E77242B99F3F93F39F32FFC8DAC0632B5G2D2ABA5C86FEFB527B1DA44749516FA45DF052731D241BCF3A5FC98AB86979CE52EDA755F71278391CE1B76509F2871FDD316378DC47FAA79E2F58A95F79E8A49863B243B8693EEA7CDC9E3BF57D9E486B
	7F40F2B1F3795E8B4B6177C0386E7D5760553C5B4775C1B704BA9ABB977765DDC35AFD79BE177772268CE977652E6F65AD9E526E4BBFF5F9AF6F2FC35AFDB9566772B453ADDEB79AF0392DE23EE17663DAF92EE7783C4735723CF48465399072829FC7F9DE13286DFFB564E54CD364F91E37B5EB1A4EAD4E88E5EB14722D70EB56546575E2DC7A73D34A84A93FE1DE7BCBCA754527A88F75B8BF5632FB56CB66E9FD74EC06DFBECF6B23CF2BC09FFD956435BC01FCEA926F164F855C62A7DC7BDB7E04377EFF466C
	6D6AA75CE29C8C1F92659663C8457E33A14F9105BE7BEF189F968B6915D1C853BC2A668AFF962A1E9B560E7D5900B426FD70B1FF46FCC8B2DFFDB6B01561B682AEFFBE624C993847518BDCG4335C15AA1F0DD6C0EDBG244367235F6BA03817DAG38787938465F7F0F2B7DDE8EEFF71D8E5BADFE9276E3CF621C158FDD5D3A472E45A84F7FD4BD7FE2E46C677ACFE35A871F1BBC666B04G1FA21F9477B699EE51136AF759A7A762DCAF93659E56E15D7C274499128E6BBA5F9F7F74301093D16E2F6CAEE4G24
	C3846E172C0FC8C84788DC5497581E736E6D9BDF88DAC439AD29084BDF00F33E3152756E6D07AC6D907977D40C7D5D5BA72EFB9F6EF7EFBB193F998C630ADA007CB84A6E10AE01F43C400508FB2519CF0B78C32A6B5D5B57D97A2C486FCE9D7B3B37632E398FDFFBA6EED75EDD63FA76133596FD923F275176FCD10F67BABC7DD03D67331C6719AD8C04FA531E46B319F199231F494C4870FCA6738433190B202D25021611E33E4FE46EB8067413E81C2BE1F2F55F9F8AF02B273DDBD49C6D295E7BEE3E48157537
	5D2D1E363FDACDFF1CA71FA73A3FF77FE5A23EF75F96AD6E40A662BC72F8771C44EBF9573EB7DA7B2EFD2C8E5F359F0C4618FA5561EBF93FBEA0DA7BFE7D87036E6F57970AFDF330986B9F93DD6FCBE7A451B26110BFD750167045355C110E0B565E11AECE3D16BB522B231DF724F97C2D3ED2FB971A1E7D1005B846616A516FC25FD10DF72133C53DEF6A2E6CAE7445BA3C8B5D3290F976184F3B40235D058EDA683C8B2D44875334771D6959D688140B94747EFD2D6B39C862E9A2644110F1A5678C3C5E2ED6E7
	3DEF0EDD7979C44431ABBD1F60659FA15A6FCBF1FC2DCE7B0DA20E179269AFFD9F1E53793251C9671FF4ACCF3C333EDAF266D58F2A5FD96779DFF7B973A33E78EE772307CDC4BCCF6F264FFC1FFAE3A51EE9AF96F372D95D355DE78E2C3B5A7B4C1C3EDFDFF052D71F06B12814980CABCDC9E777EEA15D82E00E413560E60F6F530E0FD16E3844F85B6FB52579721343BD54637B2A77B2A89D8BE2347B624D8C3FB8C63BAF8EC947FD71B24853BF03BE4ADDEC8EC21ED15FCDFC21927D1688D12EB38DF1CB1F91B1
	A236EDD1E22C2A67D969E36F2BBFB526FDA87AD6096B9A0F193ED909B6A59EF81079136834C20086G73CFB02EBAAC6CCEG60C2G96GAC87A04FE23CB22B8A65BE6FD90C4F54D7793E4BB1D4657B5E4483D53E6FF27C2A4A77DD0E50B4F1B7C7507433B45FF7B9D252FD5374D93A6F3B9CDD695EE8D26EA2D729F5A390688AFD76CA4EE36F7329D31E004B785EAA77731512AA75798A7FFFCFFC5DB091088DFF13244AA483BFD5AC13CC65D3ADF979C78F9648A40DFF1D45EEA39B04192CE36F4DAE6FBF20CB7E
	750C64A412D2C752F87C320E2450A0E49DC9E5B14ABA12ACDBFB9D3D8A5F296E5238E1127DDB70BAA9A6C905CD11C93A72319768ED3D0BD1FEE67A415FAC7E0FD376E412D6C736D03F25D93231CF0BC8C67AF9C3659B70C7491ADE2B89B2818F245859CF2ADD3EE8169AC8F647897AFDE43BAC99AB7105D43BCCBEE05F0D5DCB5F2358DBEB30F74954F7BA5CC0D2AC74EB75E4934FB69BAC1DFB7997CC8E3371A4D6D69022D01F8874E6B1FAE9ABC522152CA7B6FC72717195F313C952D13256ECB5980F9A5AE52B
	2D0E2C113BEC123D4BEAB6BAFA4BF9C39983F88417824DFDA406CF87DB44DE21C122AFB86E8CD89F377EA8B04FE1A3FBD9C92A5EC52204313A4BE0032EA4DB1DCC0FD12C36DDA26F06ED726E970FEDBE1BC49215C15249D8636805396EB074184C97612186F8EB6DE453349E127C85EBA1831499C5C7E1BC72AF5EFC6E1EDF6AD72D04460E12D4760DD9A0E923335417FDBD67A55B04705B372E8BDA7EBDCAF1AF9DAE363CC63699ACF69A27014673B4E346ACC1FA518F1FAB3E7D3EBFFF45C8F7D61549F6BEC9D0
	F5EF27E46D59DB5951E132C8228118B1E8FE2BE81E16A95214596418744171D77E77BCC8D88DC96EA9AEE6FF77313F7B695FFD8C330FE1766D07E9DBC5FC7E5366BBF04CCCACD9A21B4A1003BE3D6F90AA114805AA3184FEBFF2D3947689AA014DD0E11DCA1522E0193913C916DD221F924F7BFBDE074D5A134794C40685012C4BAFAE5695979795979797GFFB6393BFA15BF78792B6167EA3213C89228F81744F5BAF5009EA6B0AD20DD14330E73DDD2EEE4F8A863DE638AEC8443263B699F452EF3D7A40A5EA0
	441926B651BFFF23FFB633CADB585F5C6FBC193456B64DA46E3F8E13285CB9AA98D1FF37AF7E269C2F5FB5A4AFA96FF63C643CF3444F6F5FEEE46F1F835E7C921E579FEB24FB9DEF5F88EB6EB1184D306339D0E9B1526F05D5DD14A5673B7A890D34FDBB16D1B215EF1CB6D13A3BD5F57E9FD0CB8788D6A44B0360A1GGBCE9GGD0CB818294G94G88G88G87F954ACD6A44B0360A1GGBCE9GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81G
	BAGGG9AA2GGGG
**end of data**/
}
}
