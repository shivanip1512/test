package com.cannontech.tools.gui;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import java.io.File;
import java.util.Vector;

import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.JRadioButton;
import javax.swing.filechooser.FileFilter;

import com.cannontech.clientutils.popup.PopUpMenuShower;
import com.cannontech.dbconverter.converter.DBConverter;
import com.cannontech.dbtools.image.ImageInserter;
import com.cannontech.dbtools.tools.ModifyConstraints;
import com.cannontech.dbtools.updater.DBUpdater;

/**
 * This is just a GUI interface for all tools that need an ouput panel
 * Creation date: (7/11/2001 9:49:29 AM)
 * @author: Eric Schmit
 */
class DBToolsFrame extends javax.swing.JFrame implements IMessageFrame, java.awt.event.ActionListener, javax.swing.event.PopupMenuListener 
{
	private static final String DEF_PATH =
		System.getProperty("user.dir") + IRunnableDBTool.FS;
		//"c:" + FS + "yukon" + FS + "client" + FS + "export" + FS;

	/** 
	 * All the possible tools available for use, do not change the order of this!
	 * Add any new items to the end of the list.
	 */ 
	public static final IRunnableDBTool[] ALL_TOOLS =
	{
		new DBUpdater(),
		new DBConverter(),
		new ModifyConstraints(),
		new ImageInserter()
	};
	
	private TextMsgPanePopUp textMsgPanePopUp = null;
	private ButtonGroup buttGroup = new ButtonGroup();
	private javax.swing.JPanel ivjMainPanel = null;
	private javax.swing.JTextField ivjPathField = null;
	private javax.swing.JButton ivjStartButton = null;
	private javax.swing.JPanel ivjButtonPanel = null;
	//private String thePath = DEF_PATH;
	private javax.swing.JFileChooser chooser = null;
	private Vector ourOutput = null;
	private javax.swing.JScrollPane ivjOutputScrollPane = null;
	private javax.swing.JTextArea ivjMessageArea = null;
	private Vector outputVector = null;
	private boolean gonnaPrint = false;
	private javax.swing.JButton ivjBrowseButton = null;	
	private javax.swing.JLabel ivjJLabelMsgs = null;
	private javax.swing.JLabel ivjJLabelOption = null;
	private javax.swing.JPanel ivjJPanelTools = null;
	private javax.swing.JRadioButton ivjJRadioButton0 = null;
	private javax.swing.JRadioButton ivjJRadioButton1 = null;
	private javax.swing.JRadioButton ivjJRadioButton2 = null;
	private javax.swing.JRadioButton ivjJRadioButton3 = null;
	private javax.swing.JRadioButton ivjJRadioButton4 = null;
	private javax.swing.JRadioButton ivjJRadioButton5 = null;
	private java.awt.FlowLayout ivjJPanelToolsFlowLayout = null;

/**
 * DBToolsFrame constructor comment.
 */
public DBToolsFrame()
{
	super();
	initialize();
}


/**
 * DBToolsFrame constructor comment.
 * @param title java.lang.String
 */
public DBToolsFrame(String title) 
{
	super(title);
	initialize();
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getStartButton()) 
		connEtoC1(e);
	if (e.getSource() == getBrowseButton()) 
		connEtoC2(e);
	// user code begin {2}
	// user code end
}


//=======================================================================================
//Creation date: (7/11/2001 2:17:46 PM)
// @param output java.lang.String
//here, we pass our messages from dbconverter off to the eventqueue thread so they can
//get drawn before the whole damn thing is done
//=======================================================================================
public void addOutput(final String output) 
{
	javax.swing.SwingUtilities.invokeLater(new Runnable()
	{
		public void run()
		{
			getMessageArea().append(output + IRunnableDBTool.LF);
		}
	});

}


/**
 * Comment
 */
public void browseButton_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getChooser();		
	return;
}


/**
 * connEtoC1:  (StartButton.action.actionPerformed(java.awt.event.ActionEvent) --> DBToolsFrame.startButton_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) 
{
	try {
		// user code begin {1}
		// user code end
		this.startButton_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (BrowseButton.action.actionPerformed(java.awt.event.ActionEvent) --> DBToolsFrame.browseButton_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.browseButton_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Insert the method's description here.
 * Creation date: (12/11/2001 12:06:46 PM)
 */
public void finish( final String msg )
{
	javax.swing.JFrame box	= new javax.swing.JFrame("Complete");
	javax.swing.JOptionPane done = new  javax.swing.JOptionPane( );

	box.setResizable(false);
	box.setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage("ctismall.gif"));
		
	javax.swing.JOptionPane.showMessageDialog(
			box, (msg == null ? "Tool Operation Completed" : msg) );
}


/**
 * Return the JButton1 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getBrowseButton() {
	if (ivjBrowseButton == null) {
		try {
			ivjBrowseButton = new javax.swing.JButton();
			ivjBrowseButton.setName("BrowseButton");
			ivjBrowseButton.setText("Browse");
			// user code begin {1}
			
			ivjBrowseButton.setMinimumSize(new java.awt.Dimension(90, 25));
			ivjBrowseButton.setMaximumSize(new java.awt.Dimension(90, 25));
			ivjBrowseButton.setPreferredSize(new java.awt.Dimension(90, 25));
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjBrowseButton;
}

/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GA1084DAEGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E145FD8FDCD44735B0CDB4B109B118E0C2D373CA931B52066651543E12163C1A44365A102F645536FE2DE9E9E2DBDFEBDBDFE3DB1ACAF3E197C5C5450806A41820A1A9AA4202287C95107F3A8A8A8AAA09AC6CE5F7F17FE577820B223EB3B3774C5E3D5C85A5617B7CF938F74E19B3FF4FB9B3F3E66E2C1079EEC4EAF2CA26A0A4278A723F43490230F206A0BC64FE3A89F1B5D9C9BAC171EF9740D661CFD5
	FAF836812DA3A2C917A19C4DCA03309942AB4213F4EF407BB621A94B9782AFC172E9835A4EA75FCE98BF1FE7BE42FC565130A3A59D1E1B812C001B8930B40B64BFBDA5CB46C7C3F8337CCEA0B9C590263DC962449C49D260335FE4713A60E98768F90B4409C8491669F100DB8E108DF843DBACEEB3BC575352CDAFAF1563F54F0E94D67F20ACE59349CB11BEC2244C9BA7BFF30427E9C36804C773774333326D1265C81F4BD150E7F2BADDCEC96C3396C8AE175DDBE09934151757391CC322C792BD0D9E13C3A471
	5FA6657C4511B41A06A068A13C08624ED61336890177F0006837312CAFEC2A144B92F6A9D2C8F8A4BFE8D95333D9998D597E3256CFFBC91F10CD52DFCC5B1E7039A19C89406A712B26FD9357237EE8878930DA30BAEC55E19DF2F7E29D228CA40FEE88CBGB3B95EDBC47073A09C8B30E4A7562D6ADFD8372EAB5F94FC6B9727EE89D23715BBD91DB25F7157ADE668A57D1BD42EECBDC4B65A00A6814CG08820883D88970B61567759777423336D72AF3B99CAEE72D5BFD54EE761CF019C5BB3C171783C5461D96
	7BDC9E33A0B019FD79C83EC6F990746F864AAB81D637CE81E5AC6A746302B5E6F1EA2AC65D667F38A2A5CBCEA37FDDFF5D2C6F12F67B811589A33CA74B69B27CCFA9BECA01E7FD5CCD71A43C88E879B9584EDD1B31ACC67D43C2C651C7A96BB44A927ECCFBCAE88EABC3E40E3FAC2C0D6BFAC99BAF817CAA0034DDC93A9C009A001EDD58466D978FCC5446ADA0DB9E27495EBE586BB6F9242303B63BD97448ED7D4314715ADA8B985F0BB74D475AA57200320F16FD7DC34DF6D996F9B4E5F497EB0F30DD7EF6E1F9
	6F50854BFB7E2E3132311977E18E5509C53BD89F6AB8FEAF45AFD560D95FBEC1F50B04D7G4D38BBC947627F16460F5E4D622772F47ECC718B95F8164E88451370D220D53E1724E37D7B2BBEE2BBA3A09C8B3084E0A5C0FAEE12AE8F20B2977B78490B05B728C7ED0A7EE53C1E1E9D7094FD1247546274CAA6E71FF856643119FA6D22D71063DC69A16D5A9B4097C2753B8F72E8921D2247A459DCCEC89D0C91881317453923E7AB096391A935436690A18307DB40F4E777EC03275D64154E384DA6C97447E0744F
	76901998B21D0594A181F81F19CB5A6BD5EA2B3B615D170BED35D9A438F8882F606D12E9FA9D1E47C138C5BB98CCDB9FA90649B302B29ADF1D814FB590BF7C7DA4DD698750469F20FE7E318B6530FE53D7057C9FF7EB4AA181773F18CC4D7817DA8EDF2469C783BE9EE095C0C69E0E3B3D55DDB2BF4977E674A440BE3C4FF8C99D48F3091C964B638A4FE35DA4535FAC4B65E6D94ED1CF4913357BE8BF11DD83544B88E04F4336EFB565B019BCEA720AA8052D9E90A0516C6F89965758CB4698F1C8F4CA7522DBF4
	1A6145AB4BC0FB6FFA3FFC763B386C1C23F8E22F6AC0003C9CFF31F7AB43C39ACAE9C73A0552CD126431758ECAE23BA8C9B627454F6F22E5718618C22FDC57EB96D257E9D04739GD13C2E093D5B94F2E6F439AE8D3ABB088649723A1F0E4B8BA07ED25E7F9F9411F9589A9EB650301F9EE3403E7B34411F678BD316070E4B609F0AC85D1383F00994173587462ABDD8166BC5DD0AF81FF6F9D89E61B48F1DC226BFCDE032707B3E60327C67BEEDD9CE6C531665FF760DAF2BEB4DDA324AE81B4C240E2EE127C276
	DFB793FB5867F2BAC52A001CC5E0734EBFF610FA581CB62953E63608D23B6DB2CC10C3775039E5B569B3AB3C0F6EC19BB97C9E5A485C4BDF9696DCBC1C22B51F8A7F625914A5FB18DDDA3147EFA3D9193609C427C43B6800062AF38DBAA506FF135AF3996F5531BA6D88A53CF96D922D2FA4391C79A6DA138276E893BD7DAE0FC3B4678D1806CC8526E1290076C4C1ADA5B71077BDB97B779F4989DC8564FB7DA9DE2CD5A5E58C1ED6451E33FB8C2CECE72E5FCB4BF654639A760A1FEA61FA95C95EEC690A183C03
	5D2B1F75E9351DF2657109DA8E4BD65B997A2935DDC061BED14BB11B7FB5AB114F343D30EE85A8590BB6FF0EC868E87365012D4EE537B35582DA54DE2AB7B5198ADDB06EE5EB6CF0F8B27A3D1A74551C3E2DD60B3E1927DF9D144E4AF9CBBF1903F8450F87C5185A11C16938B80273337E57D53433A67B20FF5EB73BFFA3BC6D0A710C6127D934F576CE8B9943AE7174E7D9568AE47E4652E4B6A65AC452F4FBEC8E987E49GAD7B926AF5CADFC25ABED8EFC3BD7261D9338F5745DF6AA4B47582BEAB1F4E510B51
	4F5085715DG21F29A717BD8FB30F82B2BB01E994223GF373D93CE579ACDE6EFE92AF2F9A5752059CD7CDF12FC0255ECE45754A098C255F427EC47BDAAD9BC8403A1F25BF3ADF3D0E7B0D0D24BB9770D17BD13E522C4AB9C52D576B6A3351E9345C875F34AA6DA34345DAB740335F6671421A4EAC7A309F1F31123212F9360C167B6231FDD54258F5C30359A639BCB8E52B9B269A51612A0329FEB308C29D9FBE4E5A44E1817DA74DB558DE8B766378F035D169A7095DD21F32B1C85BA44AED12D560EF1B362117
	74AC6D45BC6D2E8214053F3FC564057AC8089E7B8A3C43B0B616179F23D241789E2773AEB2760796205FA3EBADDD63C1B881A011BC699A2C3D9857E09905C93A66C2543F2F8FA875AB847011GF1G4CF6AD28AA06674D9BAB6C03508B65C487A7EDC5D18E9F5ED6A317B16E7107054A6B6F27E879EDE6ECA9CCC9A8E4ED1CE6703735FE4769354B33DE167DD2BB0FE0DBF4C01C1986EC8B132455968B8D5896530EFC323668E92E0067A7B05A6867A9D66A640204BA4DF9890125F29B2CB428F5725717086C2495
	015DAFC21D2C32EDD56864E950821353E297392D7D3DCD476C1F9C7E13AD956D1F00F35093B5B76397B194617AF6370334FDBD04FBGFCG21G513CEC3387A67473B4784671737C1F1BAAD7FC914E5B3FCEFDAD4B0B34573009AAFCFAB17AC8E6D2BD4CA9D67BDA6E27F8C3315A57724EDA743554GEDDEB166FF31CADD6E348301F9662A42325FFB8C5FBB2AF0330A0F49681676B7356D8E93D881FD6342F665F85683E9CD8308840885E07669F783E9F23ACB8EE0BF7B1CE4FCCAAFC952658154GF48304G4C
	85D8D0027D1DB020E53B837BBB1861762F09D9DB3CB7461FFAE3EDD8B406CF5D0689A501FC2C5E619256BB31846B9D63A2B843C12873C12EEF17B6A9742D4DE5F3CADC57FEF7094CADDC9E1B4566C45C1FA82E4F65210B9E3676B65331238D523473F477BA022F510A9C5AEB34438E6DB5DA15E3FCFFC303A3589A0E156F573CFCA1G8C7783BAEE05C1B80663F66989AE8E424BB9AEA2155A28C3E0238E21BE5C3B164C4172F8F8AE8D9359E3615C356AB5BF09FB23FABF9130BC2A466471E92E69F75274966F58
	C25B5D6B953DD4506BCD12C9267DD65AAEE82CF3CF327D9EB6D65DDF35DE0E53A0396A0A38FE3F32A7483C224D84D248F47B7935EA5DA6FE1B9AE8470EC3285B255BC95F50F957A11CFBA45A681E8B04E3811670BE7A5300166DDDA9770BF0F8EC7F48F3FBE7F0B93E4329AD4777B809CEF9DD031EBED1AD2B77BB33B84DEFADDAA451C11A0E4579BC6507690AC59CA36B0FD2FEC68B467F6F4EE07A407A657C91E53F94F319FAC852EA23CC39ED72023651D3AEB20E78F878E99A9E617DAD56EE66E5EEF01AE5A3
	43667BD728EE7E88982E6B91370662BAA16C50E319FF25A372E6967BCD03F6B08FAE2F586A16DD62A46D4314CF07B62F72B04EE13FB6CC66437DB0E105A6E8F70BFD0231144A0E9E65AB866246812C84C887DAFEA94E353EC9772EA41BC4679FE125E42FB7E6C8606D786AC1520EA7CCB6A795DC81EDEF6ABAAC4752D2144B06CCA21799E5B066G541421DCD6EDD736F997606DE57EF68E0177303240F6E7E338FD002497D9265EA39B217805E56ABD32FF5AF00FAC81E87565E85F5652B9D8A404E3B86E52A534
	038BB9EEBE9DCFB2AB12F4399508FBF3906399AA304D3669C9FD94EADD50E9F31ADD43A02BE467C37296543734373536B7DCECBDF9314E88AFECBE99B12C1CCF16EEE889BA1F8C2910772464E777234EE4566E9F69518F9A87B4FDA59D7F754A79B4A9238B7E9440135133D315F422B7E43D65271F8C201332DECFD552C38268244C7BE4FED62F675E4775591A6722857BB70E875D47B6D6327A386567AA4919AC98DE5633F4FEF8C159BE998F9EC8C98E12CE244CBF3FD23DD732E11DDA3FD7D47AE5EBCD65D87D
	E6B275A4135DAA352CFD0F62732B5432F6BC93E52D99E8D1D5A8AF9D54DEE79C8199BA02389F6DA038E688F7F3DCC5964AD588473DC457627190DEF184F547B3C07716A01CD98DFA8BD0DF4DFD5D14C6FC945D554C87B14AE97A0171FC72A4BD128E37FF55E35BA5DF8397B8BE6F9CB78F1D605F63C13951CAE7BC7EED424ECBE45EA141G44EC533344848B3155243DEE39D4BF8EFF2A00361941DC60A1701EACD351703ED3706F95EC931E1382737A4D08BFAF4360F8F92DD3642315173EA6C907BA41662977DD
	26F282787C9A1CCFA68D913DBAEB9A986BC181E41B47852301B442305443A67743537A496D11BF3D8E75F67E373EA2445C36B128DF45D843E441AEBFE7F81D491BF9DD122E10F1E6AE50E2G16812C86C82BCD526554E25D6A07C99949EA820ADFABC926BEAB75B861A203B8017CE8B2083134F32E12124AFE41617703358F24F08C6CF1EB6FGCC96BACC968167453B56216E1554221EB5EDC55D6B2AC5FD79CEA65125D1880781C483AC6234B8CAA3BE0A8440690F02EE9FC55A294C1B5D7BA269AA4323F2FE98
	8ED33C33BC86EEBA0F752AB06E19E969A2137DCB5B491A27576521933185C729FE7135E7B304FBG42GA20FB2FF8D63ABDDC7786C2691572004FCEBF6A0DFDA9D48GC0B3C0F79D2B97532753D9636993169775D7825E99G6F4A3839F54C9E7BF5776FD6A23B8E134F6698F4508DA7B6DF5ACAFD221190FFFE9D16795CAE92D73103A127D1C84769B613E4ED3409F6B3CF7B8F6F92DB2F5CD5E0782EEE02BFE6B4750A76D6B71926B17F5619F34A71F2F99DEB2F74FA74FF15DED552F36A993D3E1E550F78EB53
	847FBFE60B1E38A68828373FCAC73D4DFE6C91217E279BD3504E285B312BDEBE73D36F9FA7739EFAD94F52B489FE5D8A3FCC68FCBE4D4C0BCC7B7CE5D2DE321FE7B359ED176904349DA2BAADCCC70B1289BD8172D8831053G3A86505C003A7F5E155D8255FD8D3DEFB0DBC41CB7717D4851606B11CD23931FB359B13A014AB2741403240F786CD1A2D3124BCD118C37EB1434A9AC7F2D920BAA637FB5CA7A40AE76D3B4136B53DBD02E4D8DCC2EC761995AA037F1831D1FEDD52E693447B451C1640FC9921BD5B3
	7CAD03444E348ECA6EC1293D4F63325B8915517EF9E083173593DE3250E178EF941134582A126ED849FE23E9B6E5B9D6B5B03FD1F6A34CE39BD18EDF752A651044E986BACBE33FC74B77548DF4F7A37A3B3F329D7DE9B3G37209157A429B944D62B573F854C401417B7C8FDD651FCD4B6B7721A624F5BF1EE1B5808EB0A1C9D540F5784658268E942BD815F872883D10FBEAC98C3BE541CF3A6F45427781AD87F4CED726BC05C901E1D4CFD834FCEAE85FAC6B3163F28A7DBD9FE62AAAEAFEF72584CC7CD96A335
	F62C4C76B7304C4D4DD86687E91AA1908E8708EE56526BD555DAB82617FBF4FE3DB711A9095C57672C3970F40A43B95CFBDDEF83EDA2071A728E949FBEF4B8BF07BE7630BA3C1F97D0873F8F228374071AB8D6071967F0FFE3912F7FAB7DC17C97D482991F6BAA2E810596743F3526923BDE8A618EG9FC0A840BC00D800F80065G09G9947E01D88D0895086E08610GE6G4CBD063663EF5776884167C4F207D08362B1A97DFAE54941EDC8CD7244B624A5196E0B016EF70C38E51F4349E46AAB6C6F770A5CD6
	35A7E7F0DC0B374D6535916B48E44B100132958D75D9F18CFDBA3E8C14191C63A8B30F5238DD90F6834CB80EF2BEF0C9E96B096C86DBDBC59CE7723D7038DF4EF12C578916061D5A7D69B7B4DC8FE36918C96C0A5E08657B4E4724FC15906EG309B31AEC592461D46F1220760C8B9E3B93F340F7A69CFA469CA815ACE607CA9FA7BC4F3D76B89AD1F71FFCE482776A1B33E3FCD48B7A6FF3A8E8C23F6E85A897F3C03619F2278D0851E757D87BB306F6782CDB8097AF1E89D51ABB304C3G428122816281D61EC4
	19DF11EC90A67049F7385CC690EE3B42D54C6A37770D491D33AD1DA45F47B74D475AEDF396E99F21D55D1EEFD0FCFA2B3ABDA3381D4E825AE8AB4A4F6CF34A7C93DA83E5E5B504535A3464C73A2AD56EECB92E21AD189F30AFB538DD99C81D582EF8D33567A6A329E367A657D23567A653D215F39359CFCB7DF8963007DDBC5EAC0EBB47F17751B4892E53E6162C9C7FD9DAAE02EF96C906FC6EC74BB5CCF1DDB2EE1E82F7CE46FDB91558C628325565C15E47D3496055EF335BD978899A476684D3495B03799FED
	EE13225C319CF70E7757210C4949E77DA4792E5EB49F135F373692B92DEFD34B75FB945F5626166BA8BEC6F483EDC19B5A0950B4E2A7F2CFA569EAG4CG23G21G112778595835E42FB65858F85A651208D90741D10221D174A8C6C959EFE0A3F50C057462811683A41E724BFD7A69E03E32839EEA4BCF2B77DC2BA85EF0DA3D677A5D0F791EAB50661DC65DBD44FD71E96D7E3C3265F783BC6B813A5A472C07BD4A75309D68A10AB8E16D5AFE2BC88DFCAC6062D5F8D61715F43CDA5E4E6A3209637FC171E99D
	FEBC2B63E50AA761FC2005F7B05F12CED830ED9315F93B0D7484BD654E6B71A0B197727BA30A777C9DD3F51E565F068DD31A87134F6AF541EDE563BA6DFDA563BA6D7D51536B46BF43FAFEDD70B32C26F54AB32C2C7E19D97E765E29F8FF740D29EF7B6FCCE99E4C4795C967747AB3C93A4CB3687772DA506F1547F1EB697C4DC7429CF7971D57C7C0B81A63D6DDC55E58B3283FB9DB7D6D36C7717EC446543761F3D31A07BCA62685175F083409477AAF27E90F75EB4E0F9D6B33AFE80F753BAFA847FA5697CB69
	7CBC7DEC12AE77AC764FEEFA862494425D9CF705625C908E67381FD0DC940497F05C4B8E6C5B78335837E59EB2F667F4E2380E06CBF978390F317DC91C29696365BC0F29B84B4F6AFE024AFF9754C16A447688256DBB8342619C77979B3651BC0EFB49037BB52BB92E0046CB6BCA5265F4A1EEA60DD78261E60EFB310C76AB04C3B84ED201694D63380CEAACDF8C474DA9463244F15C0307B15F6CF358C7FF5EC78C1B8142C6GAB40B4008800D89EA7B91F44D98A61C4002C7330BE836882701D47B8A17BFA46E9
	C712B6F9CEBB97A887310A30D5FEB7A8F091673466651F9BB7AF74DB2B7D5B1BD46928E5E623AABE7327FC679C1D1F427C08790AFFCCEDE6B854FB9EG73D35FE919E80FC9396F33643CFF5F0750D6C0588404ADBC4F1D9273AB58A4E2AAD83EA5921ECBDDFD9EFD548FDF8D5C0B1A5DAD8868BBDFF7EDA25F7938FBD19712F4384F43727A130D04CD03124BCB1D81DE59F73EEEG4B15F1814BD5B6C03EA1A78727EDFDA6BBF39E9CB5F95ADCF6DB5F084C57C179085FA607735DBBC0663530B830DDA67351B11C
	F83E61F14ACB4E2475F05EBFD05C10CD9CF63BBCD2748592CFCF778567DD40FEFA55B1D11BA87BEAB57025F533B6A1616CEEB61FEBCA41B6F9F2ABE913932257EB3208359E51A41F1317BCCA1FE9DEB75B93EA6B46321AA5A20BEE0F58AFFABC2219FD7AA2576DAA6DE7B344F57378DF328576F36BC77EFECE9F78A47DBC977238A83F337CB7FA69DE886067737C9BE85FBBECCE553E4907540EA5C03C15BC6EA31E31FBC45F62BE622C8F13F486GBBC088C0780748373AEC6C9E5146F2640B05F8CBG56GE4FC
	44EC82ABC3A83507F900AB81E038B2EA8F4D90F6FF04FD9FD5FCD37B4040977D91DBC31170C2F8FF619F2F3D66EF27E729AD0D877C320F308E699D24DF0F1DB619EDAE6639B7F07DD9522E2695F15AAF5DEADAB1279D5F27269D6034B7FA553492CE7BCB331AF6D0406FB88E67AB65B36DA25B2BAC3908BE7F627DDA74E6CEDF2EC96F66747B8B3468EECEEFAE5422CF6374D7B5696170E4727FF22F406BE931103BA6827C5D0DE0BC72F65742C44B3EBBBF27887E9793BB935C173E315F1F5EF1363F6F9994994D
	E971535E99C01A3C9FBAC05ADB39F5217014961CEDB85D51D2D7EB3C58DEF73A55E8BCDAFB7AE2ED7B45138D8D758D750C7F3B83074661EFEEBD5DF23E75E407F68AD82637AE11724977A9084A33B106AB5BD2F402369FB86A223C4FFA51FFF6C8E3DF31C68B475AE589F18B49BA737CD522A7C1769028DDE4BE5F47BCB8D62C64FD79B71B3FFD275B5ED57725FF6F22782081FA32E40F3C67416A4D5E2B6C7EB45E3B09B4FA9CFE3E8C4F0D7031F57CCB9E74D56476005C7760FE48D39B8C0276DD9AFD54C9CBAE
	53A89814EC7672728EF2180EEDED3136596B45FD12309E74074F69A07944C1F8B9401A9E5CF3EBBE235EF34BB4411C8C40E842BD37836568B3B283EE2E894BF820B860CCB95B33EA343B060D3269157B6ACAB9765592931667FBB44D74DE50C7004ADE6C43DB1D7EF654D75F687E9363FD5465673D33F81CBEA8B5C09F9CAA5A23294741F5FB315BAFA7ABBF766755396FC672E2ED366368BB5A722D302E58EE4EFC5CA76B68453D8E5BFE6C5B199C77F6816296F25C739C3706632E97A22E240F6F279890E76FC3
	DF60E7695AEBDE9F7A7D3EE6A17B69417CFE444B44F667F1CE9D6D994F179953B7F67D4678D60C4BC767751AFBB3FF1D10CFFBEF2650CB7862B44A238589FD788D487AB3C4F6D77729FD2E2FD33CE0D67BDCBF57017A138EB43799F52FEF0C6EAD81DAA2C03A087D7314954FE3670A28BB1683A43D99900EG0891799A3AFCF23E6726C972058470450B9337A3EB27728A6A6B94556DD7C7712BC4F57B45F17B3386E8BD7DD8DFEFBE49FFE1FFE03ECB65704A7EE0F2665C2FD5DF41A25F8BE4894617D3204517A7
	472F8C4A77DF1AFCEDF2FCF3D03EE905DAFCBEB97E4C20FC078CDAFC91F27C799AFCCC4F9F2273ED2F2C4BEC1D7FFD8F2E7D97D9F06D5FC84717159056DB913733035E0DG61FCAB764F16B382AFD316627D8B9DD36F2F7B561466417477DA007E12EFFFCB216EBDG12957557FD025BEBAB6A6F872D74BCB90417812C666D750CD5D966F4DB12AE47666F2B925B0D7B3D1AB562B29D7BA5359D5DB675BE439FA9BE44265EE7F09C40FD06F9C04B98407EFE000E692383ACBEABFFCD053F0FDB946F7FD5BE757D7D
	7BA94D035579CEBA9E07C11DA3F9BB7C0862E2A19C47F142FE5419259CB71D6256C0B87D92621E607132B86EB09D37ABA1EC64B8F381BFBF4AF17FCDF123A44CF1BB8AB1DEB847FD0E62E2A19C47F10BF83C259CF7024E8356C0B85D0E384B86DEBE4031EFBCFE41575F1500EB83F0830482C45BF16D7A21170CD7749B8F32FE92F01DBBC86DC6BC44DB466316F40C7D9E64B5324DA230FB78BEFB863FFBCFF730FB78F261D96AE0725D66C0BD7B41B11CABD99D28E77FE6A4329B81619800F8876A596009B1E776
	9D0AB37B0EE03A73A0555B8C277A4C7E17A8BE5F29BE331F5F4A4F6C83AD4A096D3A1C0E6999AE280B8BF19B286F2199425D9C97D6C9F0A1908E67385FD4E11FC43930BE3FBEB0315FF5B50D3386F8325D50E6G5DG23GF35DFCBCBD50B30E8EFC3AFE57D9636675697ADD9FAFA769186CB60B131C856578AFD05D750A646E8B514CE4B4A69F57AA31EE14515F65877A4CF68F92790CF35373A37BA7BEFFB9F7FFA0FF43101FFF718D701FAC8864378E7B792F94CC4CAF9486725F6573736FAF1C187F89957F63
	A3FE7EDF5EG3F5990487F42E5BF7FEC43F87CCC3775DEBC3F1679B1FE03D46CD5FF0374BF02729BA233D77D8DD2F2G7DFE2F7A9B245AE4A5FD11D77D8D927233BAFC1EFEA7406A373563867CC6A544EF446C42B3E7F0BEEB047ACC7B98ED580633DC76BEC69B56FA162EB5A01C6E81FB61C17C0ECEFABE8E429DGF68F6A708F0F915BB64D23BDD788D76123BC3826F97D84C9EF01C7FD46A21B6263BD6AB396730C6837C8GDA3D176FBD5179CEA404E3B9EE75C934D989DEACE7C4EB706F9F3ECAE9FAA9C917
	87E01418EF17510ADB277E7B0763B71D474DFF7F708F6BD85F766B36B13EEDC96D5B5ED5B15637DDDA01FCA19273ED0743B3CAE275E2FC0FD5EAFF2F70AC9DE396C25CF8897D5BC9D5B76A5F267E85604B98747B37F3617D6B32FF1B79E0771628FD3024BE06C17451FEF8D00BDE4F69CD073468DD1CDEF4D80BEE677437CB3568A11C1EDA26C58F9B44B67FE1BE7AEA19EFF451074A6F8FF3766D50BC8B1E78E1EDCA64A06B0338C17F99594C07DE56B3B9DB6F1D5C3AFB511949717DE412FCDB4E86639306463B
	1774D9EA3BB20754B665F90A4F9DD25B14B3E7512614GADFC88ED531D54562D99D25FCBBA0762B306557712E6F762BDB039C01BB14C67CEF40E38924299BE44D59DC75B144BF19F9969DC4C273C1FA06BC4607D843BE91878CAD978AB46293F1F6059B1F9FC1A6794182C371E9FEBDF3EF1826DCB370FFD07A241F306CF799D4A46567146F136DE963B34FC4D91104EFC9F7A44DE89C807FCC7C2624481BD41077A7AD31B7ABB9292A751076368B19B2E3953C750075DD301E3EEBD60C6C7B0EEE4850E3973C7F0
	ECFD0546DD89E17DE510014B681BDEF7DD606D74732AF1FC3E074A8ECC463F7C945DBBE265B21560FA2664B216B56CA07755F25C35C3081B47F1564308DB46F127CB9117F985F115E508B3DEC15F6F8396527E53A09C813090E09940AA0034D174873FFCB5CF886E8FE64EFF7F61CF26D39F50398D39CB1478B819BCAFBE9BF817680FE858CF3FF0F66A6F921526AC8F1C83EC95C2BBF17E6A47FD0E623221CD6BC739CD691C7A3BC4ABBA2772AED1269BC947A63ED7A26BB81765D174ADF49CC75D1F8738980025
	G09GD9D7F1AC9EB4AA7D85CC37DFBC013ADD8A715CD7D13E5FBF096D9EF995F53B7DA4091BG61C4000CEB987721AE54373CEB98776F67C95C9E887BGC2F95CFDED788DCAA40FBB175EAD18G61C4000C6B98F7B33FABA96FBA76F3ABBD875DF37D464687097375D7CCEE7C16A6497755G3E99B7D0DEB6AEDBAAC9DB4C3D2E766F3BA9BE723A5A3F7FF7EE1B6783ADAB0457370464BF9A9218EF289C1E97924C7F7D5903DA750D11634785653B751096DF029CFFF5D0BE47E1AD3E344F3078591F894657D92A
	45E710635787652BAD53626B12635BB57864B324166067CB3FE41978FCE934C57BFC69FFD8461EAF7D36C57BFC6953966579D2F63765731D68638B0132078344FC067952836F40CCE841F809C04F388556903730F8F887A633910547EF763E94262B170F233DF05F02FE064863635FF5723363EABFC360DDA769C6351F61C240DDA7C70CEABF835EF5427A7A65B13E4A9B535D7F19A45F5E13137B8E657B542EC65E225679F80A1FFF0BDA674F1DC41DDFG345CDBD1679F6E8A30B9001FFB2BDF1E23EF9DAB5BAC
	9F47853A27F22B5AB7FB196293EED57BE6DFBB0F3E59B5C06B19466FB3EF23FB0A90DE8A3092C0182E3837E4FA307CB368FD3BF95355EB1D37A83EF43AFA2D73308557BA4DC00B1A0E79EF533CD3AB63B616EF6EEDE373E7732BFE9B6E49155E066B18274A15FBF28C37104EF70D37A977ED9CE4B9AB3F8FA95EDF2B187AFD1B2C4A295F3739CA6752E628330F374D77A8EE66ED4AFD1BFD87F1ADB817470B26388537A977ED369F626757F93C87A9EE75ED4AFD1B57F8BC7D6D081BC66766F937AB77ED7E7BB046
	AB65711CF43E5EFD3BF25F66C725984F4E63F551B9FC686D4AFD1B274AB0DE446D387E79ABDF93AF845C1A5BF1ADF53CCBFDB7AA713B154C4079D6D44BE46FC6E5792EBF0679B6C31AA1B3B05F32EA2DFCE3F83E6EE3134D17495575631333FF4F1F744B7FCF946F97CFCE3DAE7826B48FA69BCF52F9EE9C34F3428C141752736833555F0138EB977837BBF7707D218B416F068A21B4B2F67B6EE0E3F3B867CB3DB075F7C33DB3EE9EC426BE495DD072BDBEF45E9F83750A676DB41B6216C3B86DCE447D0E6232A1
	DC4FF18D2768F7959036F35C4CD3584623F7E2DB6D3086FE8713C343F11C9EE9197A6FE01E66F9CC45BA1455FDAFDD972D3CD3794DCB67G36471ABB717C75BDF4DCB35E15246B3A8BED434FAB34777342CA466E67BDD6027E1D991C7F45925C0FE2FBD0C78FCE3C07757D0301BC7907A666795A21C01E9D07A766795C61C09E21F4E21E692501BC3F3B819ED7D9A04F123271F818DC2C69D45B549B3BEFF7C3171ACFFD9EAF7CAE2D7BF68D4D38F60E3E0B1FA9BAB639B26C9C4327AE438A4DB2382B318C42CC14
	1F782E31FBB73F653E4D52196C6E2AB6F81AE732F10D4569BF0FF1C6819FB6136537C80E4376DE66DC3811FB2A705B028460DDBD537F7DCF5A5DECDE77C58177DE3EF7C1FDB79449AB73EE9C07BD0DEADFAA5DF73B9B6B7AD11B7637BAC3ED28D715BCEEE45B445F6ABC5B065F6A98B9DF72299B7BD6E767A97CD6E7A6676DBEB576DB9D6FA9A25B71F7E31BBEF26AE63E55D986FC2B6E76FF2B231F1524FB91DEDAD230CDCFD9555F6410FD4A0CD9D8265A8154AD163F7393FDD713BB4B7FDD8D73937FF1C09038
	0DA9A7E7F3B5761E4DB6135DE5591D1FA39FB71763BFD392785D4101AE75FD42CCDF8EB6EB7AA6E6493E09D9E3479E16DE63B16DFBF0872BB5FD96F2BAF60D74587CF14BB9DCA705C01C18D968D76BBC07EB75D5335087B71D464D3BA7C9D78350F58F4EFDE71D4735269BF011776079F54BEEFEE794B9E3EF6BF5948C8EB98ACC3DB031B45B2472721303F6BBBF4B4E72F80E2615GE9A482E4045E6CDDCBDB6977852C8EC997384FB1946B7565C634B7BD21A8CFF7378576594F5ABE5937A2A527BE7937A2F71C
	A27538396FBCCA9C7E3A4F30227D888F457D15CEA721333900115A7E78D0659D3AA34D7C9CC1A81FC3D17B2C1F2D3CC37749EA0C17B99B470D6D67A6DA8FE81FADFFEFC2BE6D33655D93720D491F7A8B7ECEE538F4365A0F12C2652EFE365A0FF257B9146DB6204D67758DBBBF39754F43B74D474AD7CD7DACD9772A4B5DCC7139772A4B7D8257C98350426E45F227F4AB73CF3CB730CF526FCB52655C2755CF0FB7EA153BC40E5BFCDFB0DF6A5D56716A5B2D4147643F2F99EDBC5B3B88ED46315D8DBC53G6681
	AC84D8FE9F7F1E31BA10A73E9AF974E1C93AAC00D200AEGDF983647EB64CA9A392CE9677D6F334FCD7DFA74AB7F8F72E838602F53C9457BCF4FCFFD5E2B26B48F79BE6FEEE20B4221BFA34338FF061F610C65B876BB4E8990DE4DF15F25E3C15A9C653D98FFEE64E7F267A0EE1E95F115F3F09C790FE69C9FFB6620AFFBF9335A17CD3E7FAC9050973D23C56D4BBE97C0EFEED17B329F8B20DFEED17B32974BE76AD8197EDA0DE58A67E54A2D993FCC4B9A54E55A99C05F5CB8FE19EA9A55E5AA137D77CCA78D5D
	015F64B7527E0A0772AD1B037B12CB2AD0CF536F877B83D083508390F2BF6A76DFE87F85FEE71F4EFF0BAB0247DB5698E88356B7715FAB07B88B811683689F00716C814C7F5BD60CD38F38AEG9FC0B8C04C83E8A73E2DB9DF1BD8877E21B9AF9B8F58D87DF57AAD1CBC872D3A516FE6199C3CDA05F230748114033CA3634B4179A3634B414CA3EAB97026A8697FF9C4AD878F89CAB9F82F9A67D82C0C05CDD8460CF0AC6307CD6AB28616611EA6F5995F8B20BF5D24AE63C8G7D15A6F5995F94147A73ABAB1629
	1917E90BCDDD2640F33035B6F519824F41FAED6AB2851E037D22CDDDA664174727B13FC7F4E3F2D752B4B93E5F0CBBDEEB419B34FFFFD25E8389C47DC1C81504ED7462DA72F315924CFAF368DD361210C6AFE8AEA8A81004356C6EE52FC75842A53A05DEA317B0F420DC7772A33A94C15FA22CE5DB21AD021E6CE7368829F43B33C550C9AE370F68478656A549E47BD36F7DD838C6BBE82D8CCDG699CCB626216148EF2FEFD6C39225AD97F7727D1976BB3D30494485CAA325CD2074945FAA43F6B2F9110048D75
	B60F58A739BCA3651230055D6F1BA3DFAD610524B7852869F73FF070B7F13FB86B5589EBDB04B709A5EC97BD7462E551CCFE1CC67E956BC6E13D1B7C4888B9BB8AB57652C72AD79A310BC6A1337FB479B5C62FA41AEB714AAC2FA4EC27BFFBD6C8BED3AEECB6F92D54B6D698853D137C5E3670BAA35BCDCECBA17B023402B6DBF2ED0DA0484D118C655DC64BCBD2A96029EC7B761677F79DDB9E2393D29A058DF617495CE8A2D5EE9156CBD60F68353A6CE61F3B1AA514B60C87B674105C5B3C7A2432857443F2AC
	74A55FC3B3B72D585488364367918AE9CCE22C8BF88CF31D5564012CC4CF0BC48E3538BC391C7619F7248F1EEFFA23BBC5C816ABC9FAF7134FADC129BCA627176CDFC089F2D4A5C092CF28603E4506B9DFFE75BCCD484FAA896F32A68356C20B68F2945676775B1CA2CFG5A8F125F4913A7F18AD4F1DE774D5EFE6C472F75C2FF578BBA0741C07F96513F4564EF914594D1CCD1B1B462AAE15CFFEA3A0F4A74D6D023FE1343E69F0117FA6A0CC0BC959E2EDC247B8B9A2187251F7DE17143BF2FDC3592EA5DA824
	525F1F03CE487047BAB9686895BD37C54D5939B1AC61AE52C7EEA2AABCBFF6C5A48D3ECBFA5EC75E32FDDC47743209A45A3719E353E5A06FDBB9B6C54612E78A456286412B81F1B2C0C64977A09BB5620C89B18D6534AA48B4A7A0B582E981B952B8204635C3A61B1DC8FE8E35DE1230A960F290D538C895AED6058F2842A52A70C11ABF3D36273607766AE62A0C843BE52CD69174B6CA5CCE7FE65D344C902E3738241050CE560FA4FB72321B7C492571AAFC4A56C97986EF41F5F28BEE64AD282E019024863AA9
	2E81255679A511D8F914AE5DB8B22714B2F23B41C6C52DD89D527FFF75CB4D18FEB17A587978BD5715F707A4CE5F9B74F70742A3587ABAAA42FFBEDE7EEDD9BA1FDE81F87D97705C6921A37B05603F47516EB0596D1249FE2956E9A63F4DF1F4C4927D77B57E7E88C95F0BF1E4227C7B6674373B8694BC7F8BD0CB8788A6711FCDFFAAGG9409GGD0CB818294G94G88G88GA1084DAEA6711FCDFFAAGG9409GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586G
	GGG81G81GBAGGG39AAGGGG
**end of data**/
}

/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getButtonPanel() {
	if (ivjButtonPanel == null) {
		try {
			ivjButtonPanel = new javax.swing.JPanel();
			ivjButtonPanel.setName("ButtonPanel");
			ivjButtonPanel.setBorder(new javax.swing.border.EtchedBorder());
			ivjButtonPanel.setLayout(new java.awt.GridBagLayout());
			ivjButtonPanel.setMaximumSize(new java.awt.Dimension(32767, 32767));

			java.awt.GridBagConstraints constraintsStartButton = new java.awt.GridBagConstraints();
			constraintsStartButton.gridx = 2; constraintsStartButton.gridy = 2;
			constraintsStartButton.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStartButton.insets = new java.awt.Insets(4, 3, 10, 6);
			constraintsStartButton.weightx = 1.0;
			getButtonPanel().add(getStartButton(), constraintsStartButton);

			java.awt.GridBagConstraints constraintsPathField = new java.awt.GridBagConstraints();
			constraintsPathField.gridx = 2; constraintsPathField.gridy = 1;
			constraintsPathField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsPathField.anchor = java.awt.GridBagConstraints.WEST;
			constraintsPathField.weightx = 1.0;
			constraintsPathField.insets = new java.awt.Insets(14, 3, 4, 6);
			getButtonPanel().add(getPathField(), constraintsPathField);

			java.awt.GridBagConstraints constraintsBrowseButton = new java.awt.GridBagConstraints();
			constraintsBrowseButton.gridx = 3; constraintsBrowseButton.gridy = 1;
			constraintsBrowseButton.anchor = java.awt.GridBagConstraints.WEST;
			constraintsBrowseButton.insets = new java.awt.Insets(12, 6, 6, 71);
			getButtonPanel().add(getBrowseButton(), constraintsBrowseButton);

			java.awt.GridBagConstraints constraintsJLabelOption = new java.awt.GridBagConstraints();
			constraintsJLabelOption.gridx = 1; constraintsJLabelOption.gridy = 1;
			constraintsJLabelOption.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelOption.insets = new java.awt.Insets(17, 12, 4, 3);
			getButtonPanel().add(getJLabelOption(), constraintsJLabelOption);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonPanel;
}

/**
 * Insert the method's description here.
 * Creation date: (7/12/2001 11:24:36 AM)
 */
public void getChooser()
{
	//File temp = new File(shorterPath);
	
	//This will need to be updated someday for a new version of swing
	java.awt.Frame parent = com.cannontech.common.util.CtiUtilities.getParentFrame(this);
	JFileChooser fileChooser = new JFileChooser();


	//we set the chooser so it will only look for dirs	
	fileChooser.setAcceptAllFileFilterUsed( false );
	fileChooser.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY );
	fileChooser.setApproveButtonText("Select");
	fileChooser.setApproveButtonMnemonic('s');
	
	//allow them to see only directories
	fileChooser.setFileFilter( new FileFilter()
	{
		public boolean accept(File f) { return f.isDirectory(); };
		public String getDescription() { return "Directories Only"; };
	});


	//set the chooser to the current location
	fileChooser.setCurrentDirectory(
			new File(getPathField().getText()) );


	int res = fileChooser.showOpenDialog( this );
	if( res == javax.swing.JFileChooser.APPROVE_OPTION )
	{
		try
		{
			//thePath = fileChooser.getSelectedFile().getPath();
			
			getPathField().setText(
				fileChooser.getSelectedFile().getPath() + IRunnableDBTool.FS);

			com.cannontech.clientutils.CTILogger.info("** Chooser path was: " + 
				getPathField().getText() );
		}
		catch (Exception exep)
		{
			javax.swing.JOptionPane.showMessageDialog(parent,"An error occured opening file","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
		}
	}

	return;
}


/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMsgs() {
	if (ivjJLabelMsgs == null) {
		try {
			ivjJLabelMsgs = new javax.swing.JLabel();
			ivjJLabelMsgs.setName("JLabelMsgs");
			ivjJLabelMsgs.setPreferredSize(new java.awt.Dimension(250, 14));
			ivjJLabelMsgs.setText("Output Messages");
//			ivjJLabelMsgs.setMaximumSize(new java.awt.Dimension(250, 14));
//			ivjJLabelMsgs.setMinimumSize(new java.awt.Dimension(250, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMsgs;
}

/**
 * Return the JLabelOption property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelOption() {
	if (ivjJLabelOption == null) {
		try {
			ivjJLabelOption = new javax.swing.JLabel();
			ivjJLabelOption.setName("JLabelOption");
			ivjJLabelOption.setText("Directory:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelOption;
}

/**
 * Return the JPanelTools property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelTools() {
	if (ivjJPanelTools == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder.setTitle("Available Tools");
			ivjJPanelTools = new javax.swing.JPanel();
			ivjJPanelTools.setName("JPanelTools");
			ivjJPanelTools.setBorder(ivjLocalBorder);
			ivjJPanelTools.setLayout(getJPanelToolsFlowLayout());
			
			ivjJPanelTools.setMinimumSize(new java.awt.Dimension(130, 90));
			ivjJPanelTools.setMaximumSize(new java.awt.Dimension(130, 90));
			ivjJPanelTools.setPreferredSize(new java.awt.Dimension(130, 90));
			
			
			getJPanelTools().add(getJRadioButton0(), getJRadioButton0().getName());
			getJPanelTools().add(getJRadioButton1(), getJRadioButton1().getName());
			getJPanelTools().add(getJRadioButton2(), getJRadioButton2().getName());
			getJPanelTools().add(getJRadioButton3(), getJRadioButton3().getName());
			getJPanelTools().add(getJRadioButton4(), getJRadioButton4().getName());
			getJPanelTools().add(getJRadioButton5(), getJRadioButton5().getName());
			// user code begin {1}
			

			//this listener will say what to do on a selection
			final ActionListener al = new ActionListener()
			{
				public void actionPerformed(java.awt.event.ActionEvent e) 
				{
					if( e.getSource() instanceof JRadioButton )
					{
						JRadioButton butt = (JRadioButton)e.getSource();
						
						//store the tool in the radio button
						IRunnableDBTool tool = (IRunnableDBTool)butt.getClientProperty( butt );

						getJLabelOption().setText( tool.getParamText() );
						
						if( tool.getDefaultValue() != null )
							getPathField().setText( tool.getDefaultValue() );

						getBrowseButton().setEnabled( 
							!(tool instanceof ModifyConstraints) );
					}
				}
			};


			for( int i = 0; i < getJPanelTools().getComponentCount(); i++ )
			{
				if( getJPanelTools().getComponent(i) instanceof JRadioButton )
				{					
					JRadioButton butt = (JRadioButton)getJPanelTools().getComponent(i);
					
					if( i < ALL_TOOLS.length )
					{
						buttGroup.add( butt );
						butt.setText( ALL_TOOLS[i].getName() );
						butt.addActionListener( al );
						
						//store the tool in the radio button
						butt.putClientProperty( butt, ALL_TOOLS[i] );
					}
					else
					{
						butt.setVisible( false );
					}
				}
					
			}
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelTools;
}

/**
 * Return the JPanelToolsFlowLayout property value.
 * @return java.awt.FlowLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.FlowLayout getJPanelToolsFlowLayout() {
	java.awt.FlowLayout ivjJPanelToolsFlowLayout = null;
	try {
		/* Create part */
		ivjJPanelToolsFlowLayout = new java.awt.FlowLayout();
		ivjJPanelToolsFlowLayout.setAlignment(java.awt.FlowLayout.LEFT);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjJPanelToolsFlowLayout;
}


/**
 * Return the JRadioButton0 property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButton0() {
	if (ivjJRadioButton0 == null) {
		try {
			ivjJRadioButton0 = new javax.swing.JRadioButton();
			ivjJRadioButton0.setName("JRadioButton0");
			ivjJRadioButton0.setText("JRadioButton0");
			// user code begin {1}
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButton0;
}


/**
 * Return the JRadioButton1 property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButton1() {
	if (ivjJRadioButton1 == null) {
		try {
			ivjJRadioButton1 = new javax.swing.JRadioButton();
			ivjJRadioButton1.setName("JRadioButton1");
			ivjJRadioButton1.setText("JRadioButton1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButton1;
}


/**
 * Return the JRadioButton2 property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButton2() {
	if (ivjJRadioButton2 == null) {
		try {
			ivjJRadioButton2 = new javax.swing.JRadioButton();
			ivjJRadioButton2.setName("JRadioButton2");
			ivjJRadioButton2.setText("JRadioButton2");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButton2;
}


/**
 * Return the JRadioButton3 property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButton3() {
	if (ivjJRadioButton3 == null) {
		try {
			ivjJRadioButton3 = new javax.swing.JRadioButton();
			ivjJRadioButton3.setName("JRadioButton3");
			ivjJRadioButton3.setText("JRadioButton3");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButton3;
}


/**
 * Return the JRadioButton4 property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButton4() {
	if (ivjJRadioButton4 == null) {
		try {
			ivjJRadioButton4 = new javax.swing.JRadioButton();
			ivjJRadioButton4.setName("JRadioButton4");
			ivjJRadioButton4.setText("JRadioButton4");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButton4;
}


/**
 * Return the JRadioButton5 property value.
 * @return javax.swing.JRadioButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JRadioButton getJRadioButton5() {
	if (ivjJRadioButton5 == null) {
		try {
			ivjJRadioButton5 = new javax.swing.JRadioButton();
			ivjJRadioButton5.setName("JRadioButton5");
			ivjJRadioButton5.setText("JRadioButton5");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJRadioButton5;
}


/**
 * Return the MainPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getMainPanel() {
	if (ivjMainPanel == null) {
		try {
			ivjMainPanel = new javax.swing.JPanel();
			ivjMainPanel.setName("MainPanel");
			ivjMainPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabelMsgs = new java.awt.GridBagConstraints();
			constraintsJLabelMsgs.gridx = 1; constraintsJLabelMsgs.gridy = 1;
			constraintsJLabelMsgs.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelMsgs.insets = new java.awt.Insets(11, 16, 2, 2);
			getMainPanel().add(getJLabelMsgs(), constraintsJLabelMsgs);

			java.awt.GridBagConstraints constraintsOutputScrollPane = new java.awt.GridBagConstraints();
			constraintsOutputScrollPane.gridx = 1; constraintsOutputScrollPane.gridy = 2;
			constraintsOutputScrollPane.fill = java.awt.GridBagConstraints.BOTH;
			constraintsOutputScrollPane.anchor = java.awt.GridBagConstraints.WEST;
			constraintsOutputScrollPane.weightx = 1.0;
			constraintsOutputScrollPane.weighty = 1.0;
			constraintsOutputScrollPane.insets = new java.awt.Insets(2, 12, 2, 2);
			getMainPanel().add(getOutputScrollPane(), constraintsOutputScrollPane);

			java.awt.GridBagConstraints constraintsButtonPanel = new java.awt.GridBagConstraints();
			constraintsButtonPanel.gridx = 1; constraintsButtonPanel.gridy = 3;
			constraintsButtonPanel.gridwidth = 2;
			constraintsButtonPanel.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsButtonPanel.anchor = java.awt.GridBagConstraints.SOUTH;
			constraintsButtonPanel.weightx = 0.0;
			constraintsButtonPanel.weighty = 0.0;
			constraintsButtonPanel.insets = new java.awt.Insets(3, 12, 10, 9);
			getMainPanel().add(getButtonPanel(), constraintsButtonPanel);

			java.awt.GridBagConstraints constraintsJPanelTools = new java.awt.GridBagConstraints();
			constraintsJPanelTools.gridx = 2; constraintsJPanelTools.gridy = 2;
			constraintsJPanelTools.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJPanelTools.anchor = java.awt.GridBagConstraints.EAST;
			constraintsJPanelTools.weightx = 0.0;
			constraintsJPanelTools.weighty = 0.0;
			constraintsJPanelTools.insets = new java.awt.Insets(2, 2, 2, 8);
			getMainPanel().add(getJPanelTools(), constraintsJPanelTools);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMainPanel;
}

/**
 * Return the MessageArea property value.
 * @return javax.swing.JTextArea
 */
private javax.swing.JTextArea getMessageArea() 
{
	if (ivjMessageArea == null) 
	{
		try
		{
			ivjMessageArea = new javax.swing.JTextArea();
			ivjMessageArea.setName("MessageArea");
			
			ivjMessageArea.setBounds(0, 0, 160, 120);			

			ivjMessageArea.setEditable( false );
		}
		catch (java.lang.Throwable ivjExc) 
		{
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMessageArea;
}


/**
 * Return the OutputScrollPane property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getOutputScrollPane() {
	if (ivjOutputScrollPane == null) {
		try {
			ivjOutputScrollPane = new javax.swing.JScrollPane();
			ivjOutputScrollPane.setName("OutputScrollPane");
			ivjOutputScrollPane.setAutoscrolls(true);
			ivjOutputScrollPane.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
			ivjOutputScrollPane.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
			
			getOutputScrollPane().setViewportView(getMessageArea());
			// user code begin {1}			
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOutputScrollPane;
}

/**
 * Insert the method's description here.
 * Creation date: (7/13/2001 10:41:00 AM)
 * @return java.util.Vector
 */
public Vector getOutputVector()
{
	if(outputVector == null)
		outputVector = new Vector();
	return outputVector;
}


/**
 * Return the PathField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getPathField() {
	if (ivjPathField == null) {
		try {
			ivjPathField = new javax.swing.JTextField();
			ivjPathField.setName("PathField");
			ivjPathField.setFont(new java.awt.Font("Arial", 1, 12));
			ivjPathField.setEditable(true);
			// user code begin {1}
			
			ivjPathField.setText( DEF_PATH );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPathField;
}

/**
 * Return the StartButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getStartButton() {
	if (ivjStartButton == null) {
		try {
			ivjStartButton = new javax.swing.JButton();
			ivjStartButton.setName("StartButton");
			ivjStartButton.setText("Start...");
			// user code begin {1}
			
			ivjStartButton.setMinimumSize(new java.awt.Dimension(90, 25));
			ivjStartButton.setMaximumSize(new java.awt.Dimension(90, 25));
			ivjStartButton.setPreferredSize(new java.awt.Dimension(90, 25));
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStartButton;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) 
{
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	
	// init the popup box connections for the MsgPanel
	MouseListener msgList = new PopUpMenuShower( getTextMsgPanePopUp() );
	getMessageArea().addMouseListener( msgList );
	getTextMsgPanePopUp().addPopupMenuListener( this );


	// user code end
	getStartButton().addActionListener(this);
	getBrowseButton().addActionListener(this);
}

private TextMsgPanePopUp getTextMsgPanePopUp()
{
	if( textMsgPanePopUp == null )
		textMsgPanePopUp = new TextMsgPanePopUp();
	
	return textMsgPanePopUp;
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("ConverterFrame");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(703, 439);
		setTitle("Tools Control Panel");
		setContentPane(getMainPanel());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	
	//ourConverter = new DBConverter(thePath + "\\");
	//ourConverter = new DBConverter(thePath);
//	ourConverter.setCf(this);
//	getChooser();

	getJRadioButton0().doClick();

	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) 
{
	try
	{
		System.setProperty("cti.app.name", "DBToolsFrame");

		DBToolsFrame aConverterFrame;
		javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
		aConverterFrame = new DBToolsFrame();
		aConverterFrame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		aConverterFrame.show();
		java.awt.Insets insets = aConverterFrame.getInsets();
		aConverterFrame.setSize(aConverterFrame.getWidth() + insets.left + insets.right, aConverterFrame.getHeight() + insets.top + insets.bottom);
		aConverterFrame.setLocation(220, 150);
		
		aConverterFrame.setIconImage(
				java.awt.Toolkit.getDefaultToolkit().getImage("ctismall.gif"));
		
		aConverterFrame.setVisible(true);
	}
	catch (Throwable exception) 
	{
		System.err.println("Exception occurred in main() of javax.swing.JFrame");
		com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
	}
}


/**
 * Insert the method's description here.
 * Creation date: (8/25/00 9:45:22 AM)
 * @param e javax.swing.event.PopupMenuEvent
 */
public void popupMenuCanceled(javax.swing.event.PopupMenuEvent e)
{
}
/**
 * Insert the method's description here.
 * Creation date: (8/25/00 9:45:22 AM)
 * @param e javax.swing.event.PopupMenuEvent
 */
public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent e)
{	
}
/**
 * Insert the method's description here.
 * Creation date: (8/25/00 9:45:22 AM)
 * @param e javax.swing.event.PopupMenuEvent
 */
public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent e) 
{
	if( e.getSource() == getTextMsgPanePopUp() )
	{
		getTextMsgPanePopUp().setTextArea( getMessageArea() );
	}
}

/**
 * Use this method to set all properties needed by any of the tools.
 * This method takes the user entered values and stores them in the System space.
 * 
 */
private void setProps()
{
	// get the text from the input field
	System.setProperty( IRunnableDBTool.PROP_VALUE, getPathField().getText() );
}

private JRadioButton getSelectedButton()
{
	for( int i = 0; i < getJPanelTools().getComponentCount(); i++ )
	{		
		if( getJPanelTools().getComponent(i) instanceof JRadioButton )
		{
			if( ((JRadioButton)getJPanelTools().getComponent(i)).isSelected() )
				return (JRadioButton)getJPanelTools().getComponent(i);
		}
		
	}
	
	return null;
}

//=====================================================================================
//we null out any previous threads that might exist, then make a new one, and start
//the ball rollin'
//=====================================================================================
public void startButton_ActionPerformed(java.awt.event.ActionEvent actionEvent)
{
	setProps();
	
	//store the tool in the radio button
	JRadioButton butt = getSelectedButton();
	
	if( butt != null )
	{
		IRunnableDBTool tool = (IRunnableDBTool)butt.getClientProperty( butt );

		tool.setIMessageFrame( this );
	
		//printThread = null;
		Thread t = new Thread( tool );
		t.setName("DBTool");
		t.start();
	}
}

}