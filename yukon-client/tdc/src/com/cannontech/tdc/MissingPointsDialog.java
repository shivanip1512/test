package com.cannontech.tdc;

/**
 * Insert the type's description here.
 * Creation date: (2/24/00 12:18:13 PM)
 * @author: 
 */
import com.cannontech.database.SqlStatement;
import com.cannontech.tdc.logbox.MessageBoxFrame;
import com.cannontech.tdc.utils.TDCDefines;
import com.cannontech.tdc.utils.DataBaseInteraction;

public class MissingPointsDialog extends javax.swing.JDialog {
	Object[] dataList = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private javax.swing.JButton ivjJButtonOk = null;
	private javax.swing.JPanel ivjJDialogContentPane = null;
	private javax.swing.JLabel ivjJLabel1 = null;
	private javax.swing.JLabel ivjJLabel2 = null;
	private javax.swing.JLabel ivjJLabel3 = null;
	private javax.swing.JList ivjJList1 = null;
	private javax.swing.JScrollPane ivjJScrollPane1 = null;
	private javax.swing.JLabel ivjJLabel4 = null;

class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == MissingPointsDialog.this.getJButtonOk()) 
				connEtoM1(e);
		};
	};
/**
 * MissingPointsDialog constructor comment.
 */
public MissingPointsDialog() {
	super();
	initialize();
}
/**
 * MissingPointsDialog constructor comment.
 */
public MissingPointsDialog( java.awt.Frame owner, Object[] list ) 
{
	super( owner );

	dataList = list;
	initialize();
}
/**
 * connEtoM1:  (JButtonOk.action.actionPerformed(java.awt.event.ActionEvent) --> MissingPointsDialog.dispose()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Insert the method's description here.
 * Creation date: (2/24/00 12:47:18 PM)
 */
public void deletePoints() 
{
	String statement = new String(
		com.cannontech.clientutils.CommonUtils.stringDelimitor(" or pointid = ", dataList ) );
	
	String query = new String
		("delete from display2waydata where pointid = " + statement);
	int res = DataBaseInteraction.updateDataBase( query, null );

	if( res > 0 )
		TDCMainFrame.messageLog.addMessage("Missing points successfully deleted", MessageBoxFrame.ERROR_MSG );
}
/**
 * Return the JButtonOk property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonOk() {
	if (ivjJButtonOk == null) {
		try {
			ivjJButtonOk = new javax.swing.JButton();
			ivjJButtonOk.setName("JButtonOk");
			ivjJButtonOk.setMnemonic('O');
			ivjJButtonOk.setText("Ok");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonOk;
}
/**
 * Return the JDialogContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJDialogContentPane() {
	if (ivjJDialogContentPane == null) {
		try {
			ivjJDialogContentPane = new javax.swing.JPanel();
			ivjJDialogContentPane.setName("JDialogContentPane");
			ivjJDialogContentPane.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabel1 = new java.awt.GridBagConstraints();
			constraintsJLabel1.gridx = 1; constraintsJLabel1.gridy = 1;
			constraintsJLabel1.gridwidth = 2;
			constraintsJLabel1.anchor = java.awt.GridBagConstraints.NORTH;
			constraintsJLabel1.ipadx = 10;
			constraintsJLabel1.ipady = 5;
			constraintsJLabel1.insets = new java.awt.Insets(6, 7, 5, 9);
			getJDialogContentPane().add(getJLabel1(), constraintsJLabel1);

			java.awt.GridBagConstraints constraintsJScrollPane1 = new java.awt.GridBagConstraints();
			constraintsJScrollPane1.gridx = 2; constraintsJScrollPane1.gridy = 3;
			constraintsJScrollPane1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJScrollPane1.weightx = 1.0;
			constraintsJScrollPane1.weighty = 1.0;
			constraintsJScrollPane1.ipadx = 78;
			constraintsJScrollPane1.ipady = 155;
			constraintsJScrollPane1.insets = new java.awt.Insets(9, 3, 3, 99);
			getJDialogContentPane().add(getJScrollPane1(), constraintsJScrollPane1);

			java.awt.GridBagConstraints constraintsJLabel2 = new java.awt.GridBagConstraints();
			constraintsJLabel2.gridx = 1; constraintsJLabel2.gridy = 1;
			constraintsJLabel2.gridwidth = 2;
constraintsJLabel2.gridheight = 2;
			constraintsJLabel2.anchor = java.awt.GridBagConstraints.NORTH;
			constraintsJLabel2.ipadx = 40;
			constraintsJLabel2.insets = new java.awt.Insets(24, 7, 23, 9);
			getJDialogContentPane().add(getJLabel2(), constraintsJLabel2);

			java.awt.GridBagConstraints constraintsJLabel3 = new java.awt.GridBagConstraints();
			constraintsJLabel3.gridx = 1; constraintsJLabel3.gridy = 3;
			constraintsJLabel3.ipadx = 5;
			constraintsJLabel3.insets = new java.awt.Insets(9, 15, 164, 3);
			getJDialogContentPane().add(getJLabel3(), constraintsJLabel3);

			java.awt.GridBagConstraints constraintsJButtonOk = new java.awt.GridBagConstraints();
			constraintsJButtonOk.gridx = 2; constraintsJButtonOk.gridy = 4;
			constraintsJButtonOk.anchor = java.awt.GridBagConstraints.SOUTH;
			constraintsJButtonOk.ipadx = 34;
			constraintsJButtonOk.insets = new java.awt.Insets(3, 29, 18, 89);
			getJDialogContentPane().add(getJButtonOk(), constraintsJButtonOk);

			java.awt.GridBagConstraints constraintsJLabel4 = new java.awt.GridBagConstraints();
			constraintsJLabel4.gridx = 1; constraintsJLabel4.gridy = 2;
			constraintsJLabel4.gridwidth = 2;
			constraintsJLabel4.anchor = java.awt.GridBagConstraints.NORTH;
			constraintsJLabel4.ipadx = 39;
			constraintsJLabel4.insets = new java.awt.Insets(6, 7, 8, 9);
			getJDialogContentPane().add(getJLabel4(), constraintsJLabel4);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJDialogContentPane;
}
/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel1() {
	if (ivjJLabel1 == null) {
		try {
			ivjJLabel1 = new javax.swing.JLabel();
			ivjJLabel1.setName("JLabel1");
			ivjJLabel1.setText("The following dataset members have been");
			ivjJLabel1.setForeground(java.awt.Color.black);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel1;
}
/**
 * Return the JLabel2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel2() {
	if (ivjJLabel2 == null) {
		try {
			ivjJLabel2 = new javax.swing.JLabel();
			ivjJLabel2.setName("JLabel2");
			ivjJLabel2.setText("removed from the core database and");
			ivjJLabel2.setForeground(java.awt.Color.black);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel2;
}
/**
 * Return the JLabel3 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel3() {
	if (ivjJLabel3 == null) {
		try {
			ivjJLabel3 = new javax.swing.JLabel();
			ivjJLabel3.setName("JLabel3");
			ivjJLabel3.setText("PointID");
			ivjJLabel3.setForeground(java.awt.Color.black);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel3;
}
/**
 * Return the JLabel4 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel4() {
	if (ivjJLabel4 == null) {
		try {
			ivjJLabel4 = new javax.swing.JLabel();
			ivjJLabel4.setName("JLabel4");
			ivjJLabel4.setText("will be deleted from all display tables:");
			ivjJLabel4.setForeground(java.awt.Color.black);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel4;
}
/**
 * Return the JList1 property value.
 * @return javax.swing.JList
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JList getJList1() {
	if (ivjJList1 == null) {
		try {
			ivjJList1 = new javax.swing.JList();
			ivjJList1.setName("JList1");
			ivjJList1.setBounds(0, 0, 160, 120);
			// user code begin {1}
			ivjJList1 = new javax.swing.JList( dataList );
			ivjJList1.setName("JList1");
			ivjJList1.setBounds(0, 0, 160, 120);			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJList1;
}
/**
 * Return the JScrollPane1 property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane1() {
	if (ivjJScrollPane1 == null) {
		try {
			ivjJScrollPane1 = new javax.swing.JScrollPane();
			ivjJScrollPane1.setName("JScrollPane1");
			ivjJScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
			ivjJScrollPane1.setBorder(new javax.swing.border.EtchedBorder());
			getJScrollPane1().setViewportView(getJList1());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane1;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;

	TDCMainFrame.messageLog.addMessage(exception.toString() + " in : " + this.getClass(), MessageBoxFrame.ERROR_MSG );	
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getJButtonOk().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("MissingPointsDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setResizable(false);
		setSize(266, 302);
		setModal(true);
		setTitle("Missing Points");
		setContentPane(getJDialogContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}

	deletePoints();
	
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		MissingPointsDialog aMissingPointsDialog;
		aMissingPointsDialog = new MissingPointsDialog();
		aMissingPointsDialog.setModal(true);
		aMissingPointsDialog.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		aMissingPointsDialog.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JDialog");
		com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GE0F954ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BB8BF0D457F5428810310C814B36CC08A35742D69B5C1089CDB589B3459AA67644F2CB921260A9E9690438EEC3BA7614E9C9C247D7AB74818446B684A8B22C8D84F0D5FDC00945A2812B0FC1F895D46DCA8804C0CF3BCF52135E6EDB3DFD7AE159741C7BF97BF6F9AB450E2D19B36F5DF36F39675EF34F773E9559F3B823A04F3107103C82427F5E4FA3A43B1A105A4E375285AEC94EA9A4163FF7G5E
	A027BDDB61B99F7AFA9E4DA95CCD565496C3BB935A1B9F4EA95C876FEF1197EBAFD541CB82BECE685BB76B3BBDD373B952A678945176B3E7CA60398BA08BF0785CA4A37F974F6C6778DC0E971067GDC9F0E59F4261463EA205D8A108230380F0DDF8E4FED1473ACD78D9FF7E3C18659745D630E1DB80FE5CE81FB7A99ED8DFFBA4957725677A32F37DDA51CA68C6DACG5CFCBE3956DD864F5A56217EF3FEADD86E17C2A1ADE4487E01F2A360F739DA14C8C4897537EACA4808B4AA122A755F984079E4D7B125A7
	64A834DF2638E7EA10C7863CE7832CB671A9D4C6E5CACEE1A3408DC56C2B6EF8ADDFF767C7DFA349BF8E653F1EE0DF06427633D8096EABED64D7C5876899043CA86B35503785E077E0CEE1B5008F40GB8C84FFE306DBDF83AFB0D86AD9854C26EF038DE8D68ADDAC0D6615D65029E0EEB137D1A9EA0041D6F91D7194DFA2682C6D775296918CC32CE0B33DE5A76A4D9770D8F9DC5B6B2D917D569C89DE432489C0C4A04719ECC48FB55E02CAE46723ECA2C3C0D59DAFE018D6F65BFBC69D84B6759E861DDBA04E7
	7DBBFA56A5701E477503614FD3FC0F854F7472D92AB3588EC35F1AA1219B1D3B44DABCDB97115DD59EDBB92467389DB5AADBC32B9A3F16AD1467249A3F16C2EA8B29EA7CDA661D91EBD98CFDA418D34874EB2C9D6DB4G6DA400F400E5G2B81B68210105031EF34D57C11BA56AA69C67D082286E41DB05AB16FEF60A90F9B3A549C0A98D248AFF7C83AA2752AF20470B1C9DE14C1EF8C5DAC2A7BFE60F1D18E493AE4A8DA88E6170232A16B91B6E61E778D9C234B34572784E5E0908C93B16F435E376029CA9123
	BD9C108CB9BA0275BF6645B39915BAE0C618G5E19DCB2BBD0DECE58FF8D40A5D38E87FCB85F07329E12D5174B23E9C3A3E19F6E042407D04EB3286F38816FC6C848B863AA6256C1FB13B9CF2B6FCD4BBC0D0A9F17AF699342464E1EC1DFDC2C891D7937CE21B30DBB1710329FDE36559904939A53158BDA3C6DB451B9F1DD2C7DC2CD672734E3AB94EB7676966BABDE7A13F864CF534F643B6B9A1E55G2CA799A0D393B23E4F67E4BADBAFC5E42125D7F4D0B0B99015B8DB274335154B1335CBE8FB05A6E415F6
	26B3013CBF8FE0BC1E26BC265B73E785A613996D980764D1B9E4B44AE1B9940017886FCBE9C7DD63F65A2719B473A8BE8CF65DG0694B171E96DE8FB12E168CA6F08A1FBE54300F89A6DDFCCF9C5C6FA43D117A0F8BD510E7ED79B833BB647E73523CD7835D0C82607E312707E3F20B6A92BF290965D200D048C06DF5601E7B5A4CFF01F303C83131BD1C99DC17F42F201E5528E5C032E84614851C5111AB05AEB3AEB3FC5C69B603CB127A901BEE7D8585E5891E1FBC7EFBFCED65EBA66300B9D69CB9A9DC9E1E6
	93E961286D31B5AD39EA3F762FD25F40719136566F1FC49FE3131EF0FD3FF89D67DA8EBC1E83D89F967AFE3C937B05CF610A5E2029AA9327A967BD57F663394843A3B238E2F4DE9F1A32BBF86D4D383E8EAEC756FF649A4AD135783D14E114E31DCB64FB1BD12E002B9CE6BEB0BC4CE4417656B60CEB24B95920B4AA0D17C746E013AE57E53EC3701DB42FF21CC539A02FB543A2577A66B99AFF751C4223G353AB81F6F6D9439D65AD086D97F44FFA74CA1FDBADB4B389EBD9F67CC11EBAD6EC21E5950771CAEE4
	7A58B52B3FF7C7A21ADF2121064B23653A757C982E6D7AF6F876A9FA44E886839B97326B3C0E6B45D84451BCB67739C4ECDE87FC77C4F28A17C6E83E615EE3D93B87F086C0BAC0BE1D6F8557A934BFFA38656C51AA6BFD1A9E1483A7D03A655218D1CEED3D5CCD3B1B707D24B80BA77761BA83CAA42CC56493A7BBC42E7474218B1CE76EDFAEA245124BE1173B267ECB29E3D304493154084AB3F54D33C599G4C27951D45FCADG7D63465D71A21563B278F3B9BCD99E735EF91449F3C6FCFED3CD71EB0D787CE6
	45B9A14317214FB3A2E26F49EE346FE5504E8558G308520F49474E7D41C714F2F1FA65364B64DD0B768A1C97546B8B3FE2E0FF765B37F435BCB3A8A047FA142372B53664C1D233172E1F43727251B0C23E3E77B3AB7011D550F988675854C7F8D1D377A3F34D1E63359704C85E036283A0B79FAB60C8A1B7B78832B4D2DF87D14E3C7821BAB9DE36B2B9D0B6AC819D95F7C60A67A0DC968CB87D886108B708AC049B87810F1F1C665B74ECEF7C6D439FD9A53740678A8427333C3542F34423C86G430DD0DC8A34
	B3CC5CA1DAE3AF07F62E09BBDF0738D7203DF5C260D2A8EEBF344BA6C42ED0F99E63D10D59F651B65AAEEB671C7BD3F2A2BBC0DE31FA73771FBB8FEBDE424E64D4F762DC62CC37FDAEF13E5BBE17E86AFE0361E18EEB85A17ADB3A274EB55A3B6DF20D37693A7F5958CBEC720ABFC0A14177857908EB9B9F53E4E8ADD5269D7D7B497D76F654AAC1C4E076714479E2BE3EF3C2442A1BEE74C773211D8530525405E1F73CBD2F053E0D7C7C486D3BFDA433136BBD988B76C0FFA540A5009E00245B268F6B1E5607B5
	0DCF6143FEF2B371D9EE38E9FF167FFA9363ECC49B517DF27CF93DFAF33F59973545E6C38E22585918DFD1FAC3527B653B4EBB6F56FE33AF917D76DB09F4021D696F4E62398764BEE9C485F503A0F7A54C4BC8147BEDBC275633626CB2EE0B381AFA96772B4B9165B64DF04458CCBA96FDDC69C7620E696BE368777A20A885565E306CA72BBE22313BD67855CAE8B78284G1281B2BF92FCBA6AF00E209610D413C730CE5CBD15CC0AF1DF21638C4520EBA91D443BBBAF26CAFC1FDD3F411C0DE7D08DF84505B694
	1205AF48BA9F2FF3BD13D1BDB3A66F56B996EBFFC4F5B8E512455A1DA67EE7943F5402E7B1B8C07158DE8DFD359F1BBE12460FACE82FB0F15F23385550DEEF62CE558B1F3B71E321573DBD0975D2693157CB2D475E470C74CC6DE3BE6E19DA1F7AE9AEE3F18365D715D0C09B8311632D0691A9EFEC7636DE71B65D3A7207DB8D9EF8E131B2E34CFA47D9337DFD5B7A014648CF78FD8FFF2E18F30473BED00BB4FD129AC19DE0FE272BD668E38A0CDF7989626E2D35660CC85B6DA0249C1E2C7F5BB17D38DFC887AD
	7D3F086947756F0D21BFDCE76DAF3050333DBEFFCC6485DB1E4FA26ADF1DC9180B975FE1FBAC634F560EA364685CDF97317DA6575118290F48EC5E3F6B324AF07722F79CF989668D707942F7227986532F3F21FEBA937059F7044E1539054E2D3BA3FC74BAB75AAEC902DC9C208C6082008FC0CD92E3FECE47A4C1BB83E0954006A4D677EC1DA1468C3AFB6009F43B78FC785C1394EBEFEA525D76F74186E705322478F8BF0B725AE1B9F7F1BED63A1DB6F3ED1B020F185F2ACF600F284C02A199820D62E7FE6B1B
	9477950023B3045F3A2F1E1EA198A873D94D8A0A41B78347B757B7CE4133002FAB1FC3B550A09C66E7FE895E1B78BB0B0F7F21A07F45004F1EA1FCC7FA7F7F4033C39A645130A920981ACE43A1A0DBF58D2201B14130344A65326C297DEC775B4F94895DDF7E2DBFA35933FF1917A8A7DEBB031D5FE67EFC59F744926BFB06D037CE5C83F183E0GA089A08DE069BDE2EF7F580FEB44288E4BF79B06649F20952888769D0ABC96C5E3E0E2F34F44D0437D5D3101E3096483B3DC86BFF725F790822FCF6AB74F7EC7
	6771EEC515A634918374F0A67599E68D319256379600GFE4FCC36B7030EE9F06F3711C32CDEAD9EC779DF76C83D32DA45F10F6D4318F2596B57B5D54520D6457003A4BA76949F1BFDB10ABB4DF15D81BC9BDE75DC99B2F99DEB0E0E2DA62C5EFE275E6A5BD64CE47576FAF832DAA9B3662EE8936FF7A603EEA60B1A7D25CA3BB9BCE67F812FDDFF0F59BF3F472E5FC8B6EBFEB7BE0FDFB9CE8E53B678D1927DE3F6D60E698D5749FFAA91BAD97A55AF11469F7FB26FC8821DCCC9E66735B6B96AB7DF9E5CD244F4
	65578A624C58484C056B11E390572C049483B2904819B041724240D0BF5339A68D7BF74F82DF8A508A90G981FA5F4F976603BCC17ED7438A950AF0B78AA78A9C309F3027050745F9AA606705E23D7831588627C82FFE788F54250429449F049C3B497D47A878CB61463678E215CD5390F22D97E337702788E1986FB4B1DA5F2442A9E2CF14D9A82EFE5DC2E0B3A9228177ABD5412D8BC6F3EA062795659220E380F4ED98BED9F00BADB545F633F95673A7449C544137421ED1CDD6FBB65C81E4D4EB3EBF674DC33
	207EE6738C8ED975837B92456B8D1C3EF8CEF49E612B21CE6ACBD0A7D18BE37B6B2C9777881766885974B73DEDCF9735F8A2721D7ADAC11FB4C7486771F214CFB634D7A3EE0E3833F83BCA0CA5A982576A95389A9377EC0F4005D3441DD14DB04626ACE82F82F899005C8B7E8C208C6082008FE0GA089A09DE0A940CA00B5G9BGB683144C957A9D89E10E14A88EF1C520CA2ECB8A2A3928F93544FA6E53265773EE0D5ECD02FE7AA6423CE66A5550FFEBFDFD91593427FEED3709EB0E34EA9185AD1845420397
	BE5BB762131F112E77D353311A64B5EAA74E392CA649B3714534A6A93360192DAEB0ED35867A964F95E73FC627395FFDB90525G55G9EG95A065BEF11EDB34CAB2CD2D6D53429EB8B855D2E630794B8D1CFFB14C158D308EE093C0F1AA4411D4B17F876153D368CB1B26516A8E8BBDD097D937E88E13E1F73D1D8C2BD3195DDE02670DD43B3B460BE65E93067E6438B16929096A443D95349ECC0D3F2BBDCC71ABD2636FEA1FAA97F7353950D7F93F48175F2D32DBF75A7D5CFF41F3457DF66BEE775A512D66E3
	B740F333ADDDEE0F9DDD49BC6E5F60D9BDAF160E1D0FE7B831DDFA0727374B9B43767127F7786E7853BFEC9FFF0243567843F07AB07A54FE70A71D6638B193F74D44CD52B991F7D5899883A67E9E3AAE44DF121121402750F50DD1DCA7475DEF41DD6338054368DBE04B831AAEE89F99469A20CFD1D5567E929D2304405518724820EBD44212E55DCBCC5CB5733C8A5C44FC5FE5F9FF644267FD57F9372EAC7BC2F970BBB8FD0ABBB8BD419D1CEEFF57710ABE75FD69E6BD71375957743B3F4D3EEFA4DE5BB9E3FA
	1D3FE8586BFC0BF1374E379976BA5FE9D8F51E556FC63D38C73AB4CF5474AF1A77C8BE9337005E5DE5C2FB05093BC9730955505EE4627E1A620A9FG7F7F00407D7E1C186F428342D79D2C203F15B35B47E8BB53ECBFDD7EF9698B723057496FFCEEBC6CFEF34076FE26CA48F715A90FC5D5C29E2BCD5C7692A1DF67FC01D33D02365A443D60B5E5E9623E3CCD504EB7F1BF6D913419A62ED192344BCCDCFB0D20A58B604CE87DF3E094D07C1E6115A96F99447DC281093DE7405FD4E24C5A83F3629D728EA26A46
	2C33745B2E264B7D3AB6928A08FB5B15D43F1CB03EEC012855C6EAF11ED1D9B7943F24320436DE52DBB5D571CFF03A79D45F7E9740E3527DEDEDA135951DDECE329A7BE766FDF2AA0C4B84D88B30F1813BFFE2FBEDB9B75D1DCA11E54FDB9766946EDF4876076DB2F87FB2E13F97E56B385D026B386CD1A2C69561B5F2C70535BE2DD948785FD8A8E47F48D8D476DF2F7AE3E5DFE0A37BB04C79FF7C1D496AB45531C94027187C3EB59E653741BB9DBF6B7E853F3D1CC7964C39A3065FF728DEAE877CCA135FCFA6
	227C3A246978093D596956FA1873CA8C3FCFEA843F0DA63F3D9FA1BF76DE7FB1B175F02E8B4F417C485F20291ADE5E2BCA7EA1567FD4ED95093D2B36D4D4659DCDED3E668637671637216D0A47D36FEE3B6576DCF5DF739211236D2C93B9DA4903B9050D8F0AFA2D4009F7C67175DAB9D3D6172B49708F4801FA2E3A3CEEEB2F93F56D640322EE1BC967DF8E6DDC008D8F323B3D587B0CD74E5B6118AC64CF08A95B67CF6E33D993561E2039FC8D77D7086FAADB9E94324D3D93156D293C28ECDFEBCBA4DBB6365D
	91257BF6FE146E20FBEA3AFF589A9D7BD4CD22314C373FD5B7DD9DD41DE617533EB3AD5D2138B6233BBEADDDBC309C7FBF69B936264557DD047E9E63C6DAFC5DF5EF1D283B8620AFB7CD444B0595D3712FFC686E98483E6D2EFC8B6FAB14102AE0C5C4FFA9EA6E693F6A0879DEF8AE7A7EC05D971FAFE6FD21BCD86C7B738A918F9BC1BE6C3B634A8A91A786GB7893098E085403A07441D47CB95621B67160744F723C315715F0DDEA5566FBE2D15715F0D72E27A6F290C7FEE644E3376AF2F0C7FEEA468797714
	18732FFE98723907277E8642E46028243F370531480F610AA84EG5C2BC478886937A5443C2324E58F43170E6F0C62C559C3587FD4F4DD6E82CBDF7A8BD2E010DD7C67F8CE76FBBC03B82E8CC5F4723AE9414D3424D9BFFA5A157F53A7729DE4EBB3A9E469EEB3590AB9EBB3A920A9EDB34907F4F79CFF227CA6D7E3ACF1728DF25CB7A0BB7B40C7EB683F1C814910E0CEE7D08E76C2F26E9C10C6E5E72F8C09B7F9D717035A289CF07669DA50E9G199FB292CA518BB4CEA994B0C891DDEAF323C1CE0CC17D8524
	4E002C4A06A013G07BF7ED2258927C113F5D7E418FCC29CA41AAC60C19642BEF745FA2A3CA57BE66EFE6074080394FFC08A7BA4B5BCA0417E68CF1EBCE4C7AF5DA85ECC2886596DC15A8A202D2034E7BD446187819E0C627D08E73D5E306417E1483600248F5199F0C95B3B4836BE3D3F17B2G59F7FD5085ECE98B3BCBBCE4BB8801FE7A9EB78C32AFBAF5AB5E0B700E33D46864B500B07DB337ABF282BFEE59446E3388E1BF45EECBC01F8970BA1FE35B14A30B2D0265F774A76FD83FEDEE1E35BF6177614CC7
	19CDE4BF9A3D03E577CA6F35604C1B707F039609FB245B9E4CAB93FD5F7186C1818CC99DF20782782D27FE42102375E1C58B4E9F91E3F8A76B7BFD8B2EFB50C2737FD0CB8788B2EF0E072093GG60B4GGD0CB818294G94G88G88GE0F954ACB2EF0E072093GG60B4GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG5A93GGGG
**end of data**/
}
}
