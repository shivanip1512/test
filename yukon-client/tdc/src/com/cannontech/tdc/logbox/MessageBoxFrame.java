package com.cannontech.tdc.logbox;

/**
 * Insert the type's description here.
 * Creation date: (3/6/00 9:51:41 AM)
 * @author: 
 */

import com.cannontech.common.util.MessageEvent;

public class MessageBoxFrame extends javax.swing.JFrame 
{
	private static MessageBoxFrame localMessageBoxFrame = null;
	private javax.swing.JCheckBoxMenuItem callerItem = null;
	private javax.swing.JButton ivjJButtonClear = null;
	private javax.swing.JButton ivjJButtonHide = null;
	private javax.swing.JPanel ivjJFrameContentPane = null;
	private com.cannontech.common.gui.util.MessagePanel ivjMainMessagePanel = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private java.awt.FlowLayout ivjJPanel1FlowLayout = null;

	// message types
	public static final int ERROR_MSG = MessageEvent.ERROR_MESSAGE;
	public static final int INFORMATION_MSG = MessageEvent.INFORMATION_MESSAGE;

class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == MessageBoxFrame.this.getJButtonClear()) 
				connEtoC1(e);
			if (e.getSource() == MessageBoxFrame.this.getJButtonHide()) 
				connEtoC2(e);
		};
	};
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
/**
 * MessageBoxFrame constructor comment.
 */
private MessageBoxFrame() {
	super();
	initialize();
}
/**
 * Insert the method's description here.
 * Creation date: (3/6/00 11:28:25 AM)
 * @param msg java.lang.String
 */
public void addMessage( String msg, int type ) 
{
	getMainMessagePanel().messageEvent(
		new com.cannontech.common.util.MessageEvent( this, msg, type ) );
}
/**
 * connEtoC1:  (JButtonClear.action.actionPerformed(java.awt.event.ActionEvent) --> MessageBoxFrame.jButtonClear_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonClear_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (JButtonHide.action.actionPerformed(java.awt.event.ActionEvent) --> MessageBoxFrame.jButtonHide_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonHide_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Insert the method's description here.
 * Creation date: (3/14/00 3:19:19 PM)
 */
public static synchronized MessageBoxFrame getInstance()
{
	if( localMessageBoxFrame == null )
		localMessageBoxFrame = new MessageBoxFrame();
		
	return localMessageBoxFrame;
}/**
 * Insert the method's description here.
 * Creation date: (2/26/2001 12:18:39 PM)
 * @param newCallerItem javax.swing.JCheckBoxMenuItem
 */
/**
 * Return the JButtonClear property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonClear() {
	if (ivjJButtonClear == null) {
		try {
			ivjJButtonClear = new javax.swing.JButton();
			ivjJButtonClear.setName("JButtonClear");
			ivjJButtonClear.setMnemonic('C');
			ivjJButtonClear.setText("Clear");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonClear;
}
/**
 * Return the JButtonHide property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonHide() {
	if (ivjJButtonHide == null) {
		try {
			ivjJButtonHide = new javax.swing.JButton();
			ivjJButtonHide.setName("JButtonHide");
			ivjJButtonHide.setMnemonic('H');
			ivjJButtonHide.setText("Hide");
			ivjJButtonHide.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonHide;
}
/**
 * Return the JFrameContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJFrameContentPane() {
	if (ivjJFrameContentPane == null) {
		try {
			ivjJFrameContentPane = new javax.swing.JPanel();
			ivjJFrameContentPane.setName("JFrameContentPane");
			ivjJFrameContentPane.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsMainMessagePanel = new java.awt.GridBagConstraints();
			constraintsMainMessagePanel.gridx = 0; constraintsMainMessagePanel.gridy = 0;
			constraintsMainMessagePanel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsMainMessagePanel.weightx = 2.0;
			constraintsMainMessagePanel.weighty = 2.0;
			constraintsMainMessagePanel.ipadx = 404;
			constraintsMainMessagePanel.ipady = 175;
			constraintsMainMessagePanel.insets = new java.awt.Insets(9, 9, 2, 12);
			getJFrameContentPane().add(getMainMessagePanel(), constraintsMainMessagePanel);

			java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
			constraintsJPanel1.gridx = 0; constraintsJPanel1.gridy = 1;
			constraintsJPanel1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJPanel1.anchor = java.awt.GridBagConstraints.SOUTHEAST;
			constraintsJPanel1.ipadx = 479;
			constraintsJPanel1.ipady = 45;
			constraintsJPanel1.insets = new java.awt.Insets(3, 9, 13, 12);
			getJFrameContentPane().add(getJPanel1(), constraintsJPanel1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJFrameContentPane;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setPreferredSize(new java.awt.Dimension(133, 20));
			ivjJPanel1.setLayout(getJPanel1FlowLayout());
			getJPanel1().add(getJButtonClear(), getJButtonClear().getName());
			getJPanel1().add(getJButtonHide(), getJButtonHide().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the JPanel1FlowLayout property value.
 * @return java.awt.FlowLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.FlowLayout getJPanel1FlowLayout() {
	java.awt.FlowLayout ivjJPanel1FlowLayout = null;
	try {
		/* Create part */
		ivjJPanel1FlowLayout = new java.awt.FlowLayout();
		ivjJPanel1FlowLayout.setAlignment(java.awt.FlowLayout.RIGHT);
		ivjJPanel1FlowLayout.setVgap(0);
		ivjJPanel1FlowLayout.setHgap(5);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjJPanel1FlowLayout;
}
/**
 * Return the MainMessagePanel property value.
 * @return com.cannontech.common.gui.util.MessagePanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.cannontech.common.gui.util.MessagePanel getMainMessagePanel() {
	if (ivjMainMessagePanel == null) {
		try {
			ivjMainMessagePanel = new com.cannontech.common.gui.util.MessagePanel();
			ivjMainMessagePanel.setName("MainMessagePanel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjMainMessagePanel;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	// com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getJButtonClear().addActionListener(ivjEventHandler);
	getJButtonHide().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}

		javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());

		// user code end
		setName("MessageBoxFrame");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(514, 289);
		setTitle("TDC Message Log");
		setContentPane(getJFrameContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * Comment
 */
public void jButtonClear_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getMainMessagePanel().clear();
	return;
}
/**
 * Comment
 */
public void jButtonHide_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	this.setVisible( false );

	if( callerItem != null )
		callerItem.setState( false );
	
	return;
}
/**
 * Insert the method's description here.
 * Creation date: (2/22/00 11:02:58 AM)
 */
protected void processWindowEvent( java.awt.event.WindowEvent e ) 
{	
	if(e.getID() == e.WINDOW_CLOSING )
	{
		jButtonHide_ActionPerformed( null );
	}
}
public void setCallerItem(javax.swing.JCheckBoxMenuItem newCallerItem) {
	callerItem = newCallerItem;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G9CF954ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135DA8DF094471596A0C086C190D6B842796EB8AC3BC8220AF504F3F1892E43BA476192F241A9923818BAC39D09FDD7CA0ACB288B582ECAEB7503F0404220988182E4C998E48BD9826510D7124BC20BADE1596810508FC801E1F7F6F744E8E7191D552EFE00FB2FFBFAF6341A15B09C2AFA1A69575D2FDF3F7E5E6B573DC38A0EAD4E493495901219C3743F33190434D593A21F0C2F633CB8B1BD17187E5E
	81FA0BA48FE743F39E54ED7FEAFA6EDE2249F9D0CE01F299148F407BFEB2A4EB9F40CB0CF1DA216E3C77445B930F336BG9FE7A7ADFF7F72EEF83E893494F8785CA66278AFDDAE5479EBF4BE27CC9BA1EB5D5866554BC5BA2F964AEDC009C00B5D2C7D8AF86E22A3CF37576A6DFA139613EDBFB8E15B03F2CCB2B995FAD85FFA7DD9CC1E4A5C624131CABBF76BFDB4A82782616433481F2A50A475EDB7BD9FB91501CA276073A9BECDF4FAABB51733D2D6BCB714305D7E399888889E711C927EC49586C4F25D0BB2
	EFF666D199041C04F2866595F8F01C94F8DF89344E603FC879D5D2FAEEB350F5094F2D61C43D2EFB7748D3E479FADFD6FE0C3905A5B62745D2E4EE4941D7F79E246B50D208765E88F524BFBD37G2896289BA88CF4182EFF5B01776059F8C3EBD2868694DF235FFFCEF6291FABAED106F73B9DEAF45EA5512928AEC2589A17F7D6D868B39131FEE73FF4BFE61325E778FA27DEFA12EC7C76E7361D96B65938344AB62F1F59E2E9FF44A6ECECFF4C31D7770F456358313B08F96C1499CAD60E45584BFFDAEE5B284B
	59EA9A3B78A62EF582DD6B3D701E2963037167D33E4B44E758BCC479D85620EE43CD0E0D6EB739AE2D590B485E6AD6CBBBACCCEF34554BCC078EB9DA170BDE149DA733B1F38CDD2ED0FE32094FF459CCF54172D2285BBD101E4B70F569907A2A9F4A09C0A9C0AB01B682ED875A6D63987B5A018F6E91E3ED022A1D8BCA32CBD4896BFB2990030F9856D421459750841FD36C94D4C938A10B81223739DA08B638B1265FF50AFDA70C71296893D5C113949FC887C755C4B5405AC805EFE19BD524359D520088838C78
	8917FB2BF0BFBCE5A120DD763B84CD0C34E075C30538A603C2A7C88481704E6CB26BB05A2B82666FG6AB06C300D4A7BCCD4FD22EC3737AA4A4D203F83E7C2D2FCE86719B4F6F861BD4E47EDBC2388F92FC019A8DC4E7B87771964B8A4A72AAF28C35C4766FAB09E97A89CB33F6E6618F16CF902D47C7402A5E6102A940615E6A55AF796D2192897AB97FB3A3F249F1B29C031763731316243879AA3EB12FAE65FEDC7F02D7C20CFA2D02AE1E37741E20659F3C2C064A83D288240C4D74462CC4F4B5EBC5D1ED906
	6E57A96FB9101721F01B3DCC6713F98F3A5D8F31B10837DB171F739046E03669BD047B11B8A87AB4076897FDAEF88968F54EC308B95DDF5D0A51C722FCBF78F793B8D44060AB07508785CDD3259BC1CDEC97B5CD72F9A275A1BAD6A0F8439F898DFC2CBB07F00ECA887C5BE8BF6D907A06D37179C43AC8C6973DFE9E75CDD19687C069A6A5685398FF41E14477CDF1C80F8D0B8EE322B3A848C10CB3ACAFC8937E00F3D02581D8FA8CD54465C73F7D6B4EC2130D8A000779CDADBCDB7D5C87C3255C874B067F162C
	3AF65CE63507ACFC42E1CB75B35FD8650F78A053E9F611356EC9B4C6687CG53F5190AF60B4ED19866CF9DC3B91BC07EB6205D37B866779C41FA9ED7F430B7A9324CCCE9587855A3FBF1CD44DBC19142B186304F8C3BE59E5D97D557295B10556FBA0AB614CD31EF4BAD3A8FFAF95ED78665FA205EDB4C0E0F5DE2F6E06DBAA55E2ECA053CC90D34732A2C9D1B7F0EC338A6B4076B978605F0E5A08438325BAFD0C330DCAD2FABCF771BB41567E437FB50B62FC0198452F38B83FC7DDE5843F332641B0B4926478F
	454CB72B827A3E9BB06D3B53F8CE96AA46B11321AEA5406D9EFF543CAFB486820AD322DB12EE33B3474C6B4BF835475E0027DBD283DA8BB8E0185B7723E328AF6ED9BADB5F433F6B65FB788A98F7ABD00206FC272B40247BC9603581E9C0D9D4DE09F49A7D13822012BD5AC4552D2883226BA4DA36D288E915B496D4B6526A7378DE4E57A1F9848FA97D67021A26781AE4D1D02FB5C6C9E90DAD262E3CD34F41166C7FD857F14D3796117A3B7BEDD6B9F1C27E915BDA0D59FD3B96317F68325C2C0CBF3F36135962
	2E44ED618826670E8639AD9608D636D89E646702C0589E19CB3364923F6CD474983D278B735055C16BBDF0E394FFAB14D9FE76DF941B590351B964EB14DFB0981DC3CE6B61B9E49954A58C721CA23784FDA3834AF9A1108DD48B548D948EF1CCBEFF6C8C19A4E7EB01B3116A936476B141D94761E8F1960B27FAB92EB80747D3426D702CB7BA9FCF8E0D1DFBDAD419757B7138FEC7234A6B227A31754BEFBFE89D93580AC29D0B6735A1F3BC4FGD9FB436939B5C04DC0ACF6ACF27158F1BD4CE3446DCF4CB1E2E5
	7EE95B9FE2440805E17DBC9B0EE03442B8372515E20C5B8EF585C3693995C04DC0B2D082D06A90DF23B75EE918EC0DA874BA14A660B5C34CED0A5E978D1BCE176EEFAD9E9D57AFFAAD568C0D6D476C77A3916D07F65B8275AC7FAD237138E8B8BD7763E14E9B213C8EA84B86AF2787F97330BC4CF32B5F75607E1DE614B32FE099570D159F6919AC17443E8F16FBAD19F40C87497B581A6717444E3D5EAE314E3D0ACA2CF32F121237989FE418CFDE3C7E3D1209F33353A5D6395991BA4FFFFEBB1F4A8E8444G85
	21C350843D6EE56D0F44A2C77B82B394E6237DE43BF7175E663C26B4D5936E433FAD0F312F378930FBB27FBDFDA55AFF715C329656F74BB077DFFF087B6F6B43FC6FCFF5E23C2C99013C8D48B5423173B72EE80C0FC25D3C91061714117138E1FEFC6EB86EA7AB20FE9DD086D076E8FAEE59A8775F55A5134658736189E26CF7CAE3E36159D2EBACFC3F9473160092D41DE274FA7FCBE921D1970994AD1AB800CB435A2C277DB5C17508637072EF34BF2B0B557F6552D818E26B3ED2B22F7BE94337FEA2C62F0183
	6C58BD4AECAF6B4F385148DAB0F9F5DD08B517689602B240DF8908977D7AF5G70570C521C12469844D772A85F6B7FAE04315B8D49A228576E971DA465B64DD33BB83676C2398C488164820A3F4DF326229E1421C91A0CF84E380DF72675283E2ED33E8DED40B251A63CD9C47773E1DB064D7EABDC1F2ABB9C1B3F6AC5ECFA219C8734708E47E6B0446D12F6074D7D39BB919BEC38B39E1BACE7A8F6213C0CBB51F7C06FD3BE399BFD87344C49F32682288B5F653178E93A8FEE0472D60377FB4A4B0E037DAB0E73
	DCA20F6345F19C7F970E47466F7F9E3746EF57F16BD856F7FC62D8A69E0F05BB265FFF08FC9E8EC367D3EEBE0FEE03B7574D6761B2F85F223C84A8AF0D63989820B91EA9C4D5F6C9BE1792027546DBACADD069E8E9EF3B58FE7E5A45AF2EB535428B4BA196074C775A35EF1C35BCA7A22D0CE3EB3BD6FF2E1CD92A63E7C5973F0F481B82FB699464B93A4D39AD6A58E4A324921E2CFE4A18FA34952470267AEF0F29C7DDF3324D753F98D31FE36A4F66754363BCB7FA7D07CB097C779F46BCBFA5CCE173C9551FED
	1D2524EC56EBBB191C9FDFB55BE76F22F7EC19B164EC517BEF1D92FD1725DC090EA5E5D3A3FED2BBB5164F88FD68832DD323FDC6267C6BD323FD66373D5CE7B4285BB01563A5116EBD7553GD753B82FA108BC994AF1866F87E10E3514E95C5F5F253E358D4A3B63B92F1A72704C0C67E146DB61344AC5305FC4B9864A3C77FC67854BB1A64BF16E75DE0A79510F685C86FCA2EC101213456BAD14B79357AD1E7B5B5BA266FB9A848C96EF9B90FA24A61E6610E2618463B0197B288FA7810DC29FA6A378C1C44693
	6E09E4B09D3E6746F33CD7D125E1086A025CA8CB9E9F1E5975B1DEF2F33FCC0C67E73112AA642D047206F89E9727D43C8F4FCE21DF4F884E3BA4CDD1E9CAG4CB6D5019DCC9BE2DCFA3B222F47616E7B7BED65591D5CB717FFE789D9B1E3C7E62CF34BF69D9F05535973150ED2D33E13D80DB6EA06BA97D08250E22065C0EB269BB9CF856A08198D285F28E90253CBEFB5F84253A90921889BB7DEA67BA9CC8574D87E662963316C8392AEC04C3DF8239F120F8E41C3F8FC1FF1057B5726695C3F3E5B4B7DABFB86
	779BCF9F72CEC259E170D44A6B1E416E8398EFC72F9576319FBE9DB36E7FAC91712FFDFD937957035E6FB24CBE9E42B86CD7C537282A222BDD9A968D1FD8C96354A84CA5E18677333F3A02772232B02484B508FFB3311DBB48FDE3B934DB83348DA8EFA63357E3344D6630E382DD783D85A7AF749985BA224FF39E3C7FA3D4DCB5747E6F810C2D97CC77CA0CFF055EAFDE085C51686DDFF36173C453899D732B7B4C7BD1717B59167B51763E8FECDBE632354CCB086CA36B7ADF5F4964163B295C6693DCAFB77EA6
	EE5E775B71FFE45BEFBA7FC54779CB8616CFD421CCA3AFE16E2C57D5D6611EAA79A4CD92E4E918A62D6D505067E1BE11D903757520D7B750A850BC2014846EEB4B2ACA182FD97859F917C764CA71713EDA9DBB9FFB2CFA725F611E2846BB499B8A18FEG65F37EB72B914F1A6227CC46CB2B46F5D0A50FD7E3CDF57E535554CFC5B7E5B3FCADB74EF32BE0EE9B0048A310DBBE426EE5AA70C9FE52BBF9FC7EF5986F2DBF97A41FFEAFCE4F0C2CEE5D9554111DA22B75FB2014BE33CCCD9FAF951E2B9E61FB4473FF
	A2067C5341E370740921E2639A50A101557147411355E74ED4941F2EAA57F30339C17E6D418614BB0B1FBB4E1C9EF3C705C26C76CFE4A5542A3B1C1E637DAC484F2F4D33789961C0187E2E8B6505C0E933783DD478DD0E7554A7971156384FAC313E296334ED75AC06710CD9912CAF8D3E3A73981D9F78G097CD97118CD42E7711D0D3DF9B79F3B681BFFC99C6BF7E416DA0CCDE367ECB6E6F8F6E46CD7404F98563FD60BEB1186F5EB00368265A52667968155A4F23CD71DB9C9E26F1B4C009473AAC0C07F6DE4
	D7CDEC4C6F2D199C7387EB685DBCE035E3482F1FF10F56E00CD45C6E00E878D6E94DDE035792E8D38292FAB343427C2B9C8B4DB01738C40E056A6BC563317029AA394E899EB69B06051FDF65F9450AC40E05BC1AFBEE05F25E9CB8F34D61D8683FE9DE8F34F12CBC3CF68EDB075EB91175607BCE96A9575EA3565F48F802D2E5D013E4638B996AD39C379B7B7877B10F4D613ACE9FC4DD57E199A8FBAE5FE3130377770D49127B6C776218FEC5F3476E61D5D0F6C471D87EBF1B7ADD77DC167FE79A7CE44AF71978
	EC3D0F0479FA7B21EE5DDC1E8BB658916335DFC94F6DG12016201D200D6FD45780D6EFF2A48A4F7C69D0A3F95GAD1B0E41CC7E12BA5C0357012C2DC08573A0F682FD8C548DA4834581A5832582BD873481A88308A4015EC0E5C035C9DC17E74E16CF60EFBAD0A38EC738AFAC290D6DF3DF2F1D5C671655DA6FB3ABEA476FB34F54DA6FB37FD4EB5EE774EF9C2E5E9FEE1E3C4FFEAFFD69FE8CD7235437DB132271B61D723B13227176E6AF471B8B6AD6A7F13CFD5400F82B188F67C6A099A89EE8A1D05AFC3E46
	1D9F1E19E00DAFA98A3D3A42DBACD8E2D1B52DB61B63663E0966785C7CD8E76D9DB4A6EC189FBDC7DB8879DB66C74FF176A01F63D6286BF81467783F217B640AC7D9CCE53C7CC1642D855EA6235DB3B4575D86656CE49EFF127067D3FD9E0BCC6F25618779AE655E30D17FD047E0EB7B09BD369FFEEE373EFFEB37DB5F3F7558A77E2DC030477E0E43EB9F7F9D4753F531F5FB26EE729871FC1DF50CD8D3B7BEC63CD0E79DA3565719E38463ED2CC3DDBD905B3A0DF61B8DDE0F417BA515093CAE4925F98DFE8655
	8B794DA28E48793F21FA05A82FDB677D4E446B51F92F57E1EE81D376AAAA6F1BD90FF79FEEC916D9B9279E5BC8BEC8B58CFB3CD10FBACAFE4124F73E416BB1F0B735B70273592677824B736E7FAF66CFBD54B1581CBFED080D2BAF9AA647D5D703B52E7A9A46636AC603B52E3C8DE6DC3178333D0F5FC5949A71677703917B6705A26FC9038FFFAD3E71D047E06725DD03E89F4138A5637CF787914F039E414F6EA16A87F9FE6BCD6677906BC25846EB3479CF9A3F716C9FCE66F78E79FF1E6C4E41FC6F10007D00
	7E281753603D9CDE2EE5F23D7EA1046D2B8CBDB343D846832045D968E3AB9EBB9F2D7F888B6C7B7BF7063E874F54DF119C0D64F7B81A0A75243938D571E8A4075EECE8A49BEFB282AA59B77EE059B877DF5727DEF39458082D0564FAE930E8A1B9A10CBAE17C16956F8826C35FFC23EF8B0D8C1B864F58337E7D71AC9B49060E8C51ADA49BE1897DD5A6A78B90CD2560A981D70BFED19238C56E50F3004D445DC578192F7C2E790EFE7B7442183FE154AF506F7897C44E98ACB719BD02F6CB847E5285BC97F9F178
	9409FD6F57BEA04832A648B79BFDAE3C83BCB72409117DE75E884A8F70B6FAA52B7B0B91543B5F54677FGD0CB8788C598F4DE7991GGF8B1GGD0CB818294G94G88G88G9CF954ACC598F4DE7991GGF8B1GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGB392GGGG
**end of data**/
}
}
