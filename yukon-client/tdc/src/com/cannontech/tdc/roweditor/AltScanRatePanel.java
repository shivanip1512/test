package com.cannontech.tdc.roweditor;
/**
 * Insert the type's description here.
 * Creation date: (3/8/00 11:45:00 AM)
 * @author: 
 */
import java.util.ArrayList;
import java.util.List;

import com.cannontech.clientutils.CTILogger;
import com.cannontech.common.util.SwingUtil;
import com.cannontech.core.dao.PaoDao;
import com.cannontech.database.data.device.DeviceTypesFuncs;
import com.cannontech.database.data.lite.LiteYukonPAObject;
import com.cannontech.messaging.message.CommandMessage;
import com.cannontech.spring.YukonSpringHook;
import com.cannontech.tdc.TDCMainFrame;
import com.cannontech.tdc.logbox.MessageBoxFrame;

public class AltScanRatePanel extends ManualEntryJPanel implements RowEditorDialogListener {
	private javax.swing.JOptionPane optionBox = null;
	private javax.swing.JComboBox ivjJComboBoxTime = null;
	private javax.swing.JLabel ivjJLabelDevName = null;
	private javax.swing.JLabel ivjJLabelDuration = null;
	private javax.swing.JLabel ivjJLabelActualDevName = null;

/**
 * EditDataPanel constructor comment.
 */
private AltScanRatePanel() {
	super();
	initialize();
}


/**
 * EditDataPanel constructor comment.
 */
public AltScanRatePanel(com.cannontech.tdc.roweditor.EditorDialogData data ) {
	super(data, null);
	initialize();
}


/**
 * Constructor
 * @param data Symbol
 * @param currentValue Symbol
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public AltScanRatePanel(com.cannontech.tdc.roweditor.EditorDialogData data, java.lang.Object currentValue) {
	super(data, currentValue);
	initialize();
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G0504AFB0GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E13DBA8DD0D5571969C4D35B38DDB3EBE69D574E1A84D35250561D582D13359B1A3E4D1A446D5A8EE9522E5BA1D35B323326E3A71DD9E707199C5E8365E9D122A4A5BFAD0820A078GC501A7AABF8F84FC68CBC0A488414B3B9738F25F3DAF77DD606166E73F6F1CFB6E3B40FBE8B2E31979B877FC5FB9677BB95F771D6F9CA085C5EBF3321C8504E465907327BE0B101A8AC23EF27F2EC20E5BD564F0935B
	4FE10057492F4EE4C31BDB6CF087BA9D6EFC72E4C5AE745F05FECD1B437DC778BEC41E2A48BD829F8978241790127CEA515462FC722FF2BEFBE85FB97487E8778394834E87302298793FBDD4E862A7203F5F7CC648F292D2FE9847FCBFD0E8432719638A8E33F68B9DF3FA68DD139E06BE0ED9866D9AF34C86E81910CB3D8D6638218712496F1F7B4019073CEC6BF3A8A8E1F39B4C36183CCC8D61A29F3DFD8A5A26406478792096728485D555D4C38ACEF88CB168513599C9148DCD77FADB942397286F8B069490
	D4C9A149A5A86BAF8339F49D1035044B75633CA6136F4A49E4127E08BF21DCBBCCF9720F44644ABFD264CABD02EBFFC86D0C738250DF8640F8BEBA44F9E617BA5CCBCA9157F68547B641F79F00E2617786903F993E5381F615F2994F9D63B28E7C5F77C88D29F39DC8A0E3FE19E93B32180CCB5EA8F23DC5FDE1CDBF6E278134D5GA9GDB81F682649FF5385F21BEF86D6AF1E8DBC60DB6AD94525416F038D591759ECD14947886530E9AA66EFDA92869A2A14C4FB282D5F16461D0FEF42E0FA1B05D2E916E97A9
	6FFF1B6C7848674A09235B06972EBB1B4CB582C7E33AB13D9A86D02FB0601783A481EC82588610E969755055D337532B8BFCC9D78525F7EAB4AC68C66B142C0812EE6AA78EAD26DFBCE073744FBD0F59A579145DAE5B1E784439A70EDD36A50FBA8B0FB1FB549C0B590571FEBCA16F4031057B01E09CC3BF7C9E75CF913E33CC5FE5789FD07CC69B1E79FE9745E3FFB3502A4A395F8E6C67BA78339FA679351F4655E1555391670AF2A6CFF2F9CC874673D39A93E9650CE716A54B17A9BE5D06E7326487F89C6EG
	DA204261E6BED2B008F9EA83743782E4G10638EF7B1C093C060B877139DD72B6F507F83B69FE1F357753F892D94B5F421CB0D98029A147A85DD96C695A9C24CB15F6EC79B0C4E1977840D4BA07038A82912AE983226426AC2C882070C30B11B7ADF47B13AC429FDF2C8828621B0616BBA7A8FC12B889163EAD8043C979B4168DB7AF1CF2605FED89196006F354751DE2F511C98066F6547392DDA2EA3EEBB74B3AD3BDC3CF6905ACB90A01262757A64A00AA168331CFF4BG66A4E9DAD28D1F9416D491BEA2A62D
	F3409D334B18E649FC1962B1565AC07008056F9BF81D61E18D3B15B9FD08528543506551A9C36A158CC3D647E373C5AACBE4CE98C78853ED1866697CCA073B9C2021126B774A40A11BFEFECD1B1C8A77614E19F6FA1A66F1BF0C97AB79597A7DABF856AE2B647E7E5B816E6F3E3CEF112A97BE0E6B6F88C9154C4FB7D54E0F59FF25EB46F8DC39B270B973471D40B213AF63B1F1D7F8384C1659FD6BB05AFDBB70A5D590F7D55C6E659F9433F8EB95A2920F30ABBA6C18A4463C0C4939A4C0AC197F4A767DE660EE
	48BFB70FD75FD59E4C96FF9ECC9CC3E50371E328F2B0FE8C558EAE9EA30D0371E204511A87718C56E6D4DB4C358FE27C87B5D5156826D8D3882B4DFE5B07FA482AECDC1345F1496815EFC9045C284258F973BD0C1D867876D771D819B942E3257456E3A4F5641AB35E393FEA5D34B3290A796A462AD82CB019BA2E23CFC90A9482C335E9D32A4170FE1A3FCC3C19BF03C371474AC398EF13522CB9AEB4341BE01ED426A4CB377542BE3431AE074095B1A11975714F066C7571CBA09F565205A7608C84E0F30F37E2
	BD598E0529CFB084D60D7218F00F20CCBE98BBG90BE41E3623F06104EF311998CED1A22B053DBFB725361FC5CC36923A9890E9ACCD617ACBD7EF37860BCDA3F2993237FEA98F5D2ECF9EE5989546944FB3CDE45F31061FC94D7863F56E5737A24A75FDE4FA7FDB5FE5D063065845B377493736B3673B7F0DD62819E9E2E7B0D8F6DF938A5925102B2BD724C3D486D29A3F7F487689154A9C1E9D78DFD361B1A1D5563ED4339E6CC17FAF85D3D7AB26E4390748D006516AC87C6967AD14148DEE847E4BD827522A8
	C539BD5F9EC13B6079EB22F9FDFB52EE275474E0DCBF27E7024774F34FFCBBAD91D00EB440E7D832BDB8723A4DCED00BC339B18E3B4865E93B61E2FEED76AF5E4861FECDF8CE6B9C6675E12649B33FBAD69716D6AF2C91D96D652075DEC3B52B3D5C967E47945FE743331AECAD35AF4DD3C0CB2B66F5462DD11A97EA9C6E4E9A2E57369BF9B63D821A2C9A16CEDF91B0B6B5DD9E17D50E7B9A4541CD04A6ABF6D60F50BD9E00B58DG06DBF389F14B203F46420D77A0AE957AAF5570737639AB98D31950AF2CF538
	6BG7AEAB96DC5CA8BC3FF8540FA002D966D514B7CFC4039F71273F1FD7E4D79ACFE86BDE571F05D417A88B97356F0AFB216597333D15C3B28553F1776E7CD1E074874B06ECFD81746A49D3292CB73247CA45A732F295DF7029E19GEC7C9317F65338185526E0A3DF22634A7DBCEFAA50DF82108210FA12694F627C9FE6B0BF0DC1918C47D6EFD88A128D2768FD20074FAD06FE9DC09F00813072946759F585E56C768B2312621326AFC3A1ED49DF2A6F0F5126D82D4DE9CF6DBBE451DA0286248FBE1B512F1651
	F561E6B02A35EAD1AC31F16F6AD02EFD01821BADB3CF31BA3198E80CFE549B0F7E31C56F1A09C7DFE15143A5F6FAD29D23EF01B63D8E5F0102B231F4FC60D2B1342AB4D3FCD31896BC420C6171012CAA967E65F53575D54535E79AABD8FEDABBE34FCF8DFB6504792974347936E0360E376E4BE2719D7073BBD798E849277959D7FB836FDCB4D7F3C13C5E0B3AAC368A63FE6A91ACA72F72671A7353CF731C7C8CDD33700C43DD8350F906578D51237CADA4655107097F1ECF623E572477094E9BE7181CCB4E4472
	692AB70ADC0CE7D28F67198A74DDE79077139E3B0D51166BGBCG0C1EFD59CE477CDBB907FEE68E9D657D1D53CE1F18C3C79BB51A7319EE4F17F15DB21FDFCF146FCEA6FC0BEA2EE7BA09E6BB1031B4EB4B0F0ADC4C6E2F0E955A6D9E75C4E6A0083CDE6659CC7F56GBF875754F35BFE52E1FF8B5BF4C0F46ECB40BF4D647B7B7A18ED5F35ECBB6C65EB57B570F730FBE6B8CEE9607EB12E3C93DFCE9EE1663B5DB7CAF8CD125440E57D776BF63F4DDF5D6B4CCAA06B3686A6E3C6437CF3F5F6123E41B642BD30
	111FBF49B26EE93FF0533C653753F202DECCG99503530249B338CCBABAAB3B7777B3F587B10788567FD7DF34FE3E734378763EA20F17EFBCA9B450B0D735FD33644E29BE8E90D7C6C7E2602BE5660057C8B20GAC81C882C875F2DB7ECE2EA137F9CB695342FE3870A836EBBE536F311EAF76EE7603BD5C07B7BC79CD32713E4A44BE6CB5FD58ECF77EFAE99636CC3FF3AA6AD7FA5661EE869081BE86D88110FC166B57F8330A69076E50E298C2F002D60ADC39FED91A09217190E33ADD1C73D63A69AC633F55EC
	371FDDD887B0193E21E17E58857402A638E3G78G44A6AE4F3DB7EF7B46599EDD640DF354EB17EBC99313E3155926B4AD140B4DDBBAE31F17EA0ECBB35B0C0473D2CA965B634CB873189D1E41E7AF33BEF97EE699C9902F20EEB72415AB23B721BA6E93462DB91FCE62DA565D180531C9DBBA09B646FB2CACA872ADDA9F7442C0F51C495C5CC3AC793BEC5FBF715F7DB7087F3E2BBC4C37C8A5719B4413CA7CB708D4A57E9B44B34A62EF90BFD2923FC13C20585FA0583EC727F1EF724F016F8384GC40068B96E
	7F41D089737FB83158AE0ECBED9AFD15B5B87F8EB5312EBD6A6D5FF27BD53C8B0EEA062105F0FD6BFDD2457DB234B0C5B21C20220D606AB2E13021A6FEDC45B3C81146A81A5DCBBE24E773CA50AB699C3F2B3C9AC45CC668EF36F083A23F3F24D9B6780E16D827FF54626F5FA6AD7E7EBD2DAD7E8E7B1C16E8FF19FC33DE2EC769F9AE734E8A2EC70305FB6FB85743E7615650FAE1A57413AC5C3D5DF4AE74B7DB380CEE4B86966E07A59CD7FA015B651E6944F67972746D77FA45B4FD8B00BD6A1B8DCB669DFC1A
	5EC74746A21265D32B2773ADDCD7A420C5E44CA02CAE1F8A60DB5318269A6C3EF4BF5DE783E43C67823F3B6C95F10C8142303A3E932FE2E46B859C2F093EC56257B58F56439C847C13B21EFF8E78AEB23F997F07697E94B6031D1A79BDE2F2B646EF62786D7865AC422F8F5664E72FF9971C192B7F33F40FEF40B825196B3F3AFB2E7EFFF7ABA64FEB5D0B49E317E53EBCC8DB83BC9E4CE2723075FEDEF23B756CEBA6B74FDDEF93747F56540F497ABF1F91CB575F84B1974D3903F52062A5A21CAB5AF8C9D5F18D
	DC43CED690D2C44793C25F424C9F365ED1DC5A2CEBDE7E832FEB5EFD7C9162FB3152496DBCDF6E4D4D6C5CACEC09553B590D45AE36E67D6E180C5BAB6ED4C6B6F7F0CFCCB6675E58BAB35D07632F5382C12440B23566B2665CB2F40BB8FA6F3C4068A1ACB94D1CFFBD8F77A8G3AA8GABG1281B6812481E4GE4826437BA5C65G4DGFDG93G9F83AC87D88B302115670149AC14A3D1FDEFDECE69C1218B7637A7ADAFF17E184E3BFD7E78ACAF7ED931B4EF61D971553C78E7450ABC7BD9E16620BC7445F110
	FB409A375A42FDE0617E1E2E0938EB32E8CCD878F5D4AE44F7CA4810639F27F24DD05C0009DBEF43FDE0623E1B078E85AACFE8BA1F7BE49E0DF3D9D1D87F1F6998D90514E8596307D4C6B9AC58645EEC61D0EE76BFB1A3F507G19728A490968646042770C162F7D6C451491DF0113B83B486E89AADB974919C1A523D8A7BE86D17210C1767824E9B9A8F98D62664FBE70FD202949575E5F5556DEFC3925277D7CF96011B747077F6521533F5E720B7E080B6C6EA2EFE16A6A15F4DA99CAA2BE681BFFCE6DA06EB0
	BED562F3D897490E50A6A7E24CAA121F940C3D0F4F7091C392DB78D999B1489BFE64D4BDE548CAF5279019B050DF4E7AC9360AFF78A58799D9915471EAD6001E257AE435B453E021B182729E227262AA9EEB15C37FF4206CF077760DAE626CA0FB95CD90BB04A038F997F19B933A94195094B19A3E40964A25D998C352854B3DE3290F4AFA7A402BAD21A723DFDF1E17115761A4A42A13EABA92B335479AA136CD88BA301274AE837F102D6925966DCBFFB60E7E5B45BF8EB9C9162964C764D332A79A06AD0148D1
	A3E31A9E82890A67C940C956C21E3FF9366641477EF710AE941BEA10A2E6B218DABDAEE9216A1631B1D9152C8540FE307C1F2C65F10CE75E180351875E68FE6135D158EF9FF105EAEA686FDA7A7BA47E2E2518DA0A29BD89C65CC9967D19CF0FC6D06BFD86F3921067G158737595381BBE57C7C15E79F7E0F261DBBC03B8E12C39F6C41587931D11727C22312FEDF4A03FF5A37B27DFE5C0BB03A84DFF77718901215D9787051AC9EC57CBBD10B93EA5EC5C3B1FD7A1457754BC7DCCE128D2143D293B8AF6697F0
	DE1DC5128BD29375BB8CCD7E7FE6F914D94E82EFC42CFB21DBA11ACDB9C0FF9F7C5CC643D985F46E1B4890BF5E1A2B6191E6D8FCF0AC34C91A9BD7522C8412E6DBC6E4C90EF144D1FF8995CE44D440FC09E7BB66517D963640442A84370329D871197D9DEC57526E046F37ABBB4D7F31691C7F8E362D1E7E3F8760C997BFA72B6ACF1044776A5E1020A80620CC3628A25E31DBE78DA9F6EFF8399E570F70B1A61151B26AD16E1B36B97F8FD0CB87888A97960BA190GGD8A9GGD0CB818294G94G88G88G05
	04AFB08A97960BA190GGD8A9GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGDB90GGGG
**end of data**/
}

/**
 * Return the JComboBoxTime property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxTime() {
	if (ivjJComboBoxTime == null) {
		try {
			ivjJComboBoxTime = new javax.swing.JComboBox();
			ivjJComboBoxTime.setName("JComboBoxTime");
			// user code begin {1}
			
			ivjJComboBoxTime.setName("How long should this device scan using its alternate scan rate");
			
			ivjJComboBoxTime.addItem("(Only Once)");
			ivjJComboBoxTime.addItem("1 minute");
			ivjJComboBoxTime.addItem("2 minutes");
			ivjJComboBoxTime.addItem("3 minutes");
			ivjJComboBoxTime.addItem("4 minutes");
			ivjJComboBoxTime.addItem("5 minutes");
			ivjJComboBoxTime.addItem("10 minutes");
			ivjJComboBoxTime.addItem("15 minutes");
			ivjJComboBoxTime.addItem("30 minutes");
			ivjJComboBoxTime.addItem("1 hour");
			ivjJComboBoxTime.addItem("2 hours");
			ivjJComboBoxTime.addItem("4 hours");
			ivjJComboBoxTime.addItem("8 hours");
			ivjJComboBoxTime.addItem("16 hours");
			ivjJComboBoxTime.addItem("1 day");
			ivjJComboBoxTime.addItem("2 days");
			ivjJComboBoxTime.addItem("5 days");

			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxTime;
}


/**
 * Return the JLabelPointDeviceName property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelActualDevName() {
	if (ivjJLabelActualDevName == null) {
		try {
			ivjJLabelActualDevName = new javax.swing.JLabel();
			ivjJLabelActualDevName.setName("JLabelActualDevName");
			ivjJLabelActualDevName.setFont(new java.awt.Font("Arial", 1, 12));
			ivjJLabelActualDevName.setText("<<DEVICE NAME>>");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelActualDevName;
}

/**
 * Return the JLabelPtName property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelDevName() {
	if (ivjJLabelDevName == null) {
		try {
			ivjJLabelDevName = new javax.swing.JLabel();
			ivjJLabelDevName.setName("JLabelDevName");
			ivjJLabelDevName.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelDevName.setText("Device:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelDevName;
}


/**
 * Return the JLabelValue property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelDuration() {
	if (ivjJLabelDuration == null) {
		try {
			ivjJLabelDuration = new javax.swing.JLabel();
			ivjJLabelDuration.setName("JLabelDuration");
			ivjJLabelDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelDuration.setText("Duration:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelDuration;
}


/**
 * Insert the method's description here.
 * Creation date: (11/14/2001 2:39:29 PM)
 * @return java.lang.String
 */
public String getPanelTitle()
{
	return "Force Alternate Scan Rate";
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	CTILogger.info("--------- UNCAUGHT EXCEPTION AnalogPanel() ---------");
	CTILogger.error( exception.getMessage(), exception );;

	TDCMainFrame.messageLog.addMessage(exception.toString() + " in : " + this.getClass(), MessageBoxFrame.ERROR_MSG );
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("EditDataPanel");
		setPreferredSize(new java.awt.Dimension(417, 169));
		setLayout(new java.awt.GridBagLayout());
		setSize(376, 82);

		java.awt.GridBagConstraints constraintsJLabelDevName = new java.awt.GridBagConstraints();
		constraintsJLabelDevName.gridx = 1; constraintsJLabelDevName.gridy = 1;
		constraintsJLabelDevName.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJLabelDevName.ipadx = 15;
		constraintsJLabelDevName.insets = new java.awt.Insets(13, 9, 5, 0);
		add(getJLabelDevName(), constraintsJLabelDevName);

		java.awt.GridBagConstraints constraintsJLabelDuration = new java.awt.GridBagConstraints();
		constraintsJLabelDuration.gridx = 1; constraintsJLabelDuration.gridy = 2;
		constraintsJLabelDuration.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJLabelDuration.ipadx = 5;
		constraintsJLabelDuration.insets = new java.awt.Insets(8, 9, 24, 0);
		add(getJLabelDuration(), constraintsJLabelDuration);

		java.awt.GridBagConstraints constraintsJLabelActualDevName = new java.awt.GridBagConstraints();
		constraintsJLabelActualDevName.gridx = 2; constraintsJLabelActualDevName.gridy = 1;
		constraintsJLabelActualDevName.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJLabelActualDevName.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJLabelActualDevName.ipadx = 202;
		constraintsJLabelActualDevName.insets = new java.awt.Insets(14, 1, 6, 4);
		add(getJLabelActualDevName(), constraintsJLabelActualDevName);

		java.awt.GridBagConstraints constraintsJComboBoxTime = new java.awt.GridBagConstraints();
		constraintsJComboBoxTime.gridx = 2; constraintsJComboBoxTime.gridy = 2;
		constraintsJComboBoxTime.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxTime.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJComboBoxTime.weightx = 1.0;
		constraintsJComboBoxTime.ipadx = 75;
		constraintsJComboBoxTime.insets = new java.awt.Insets(5, 1, 20, 110);
		add(getJComboBoxTime(), constraintsJComboBoxTime);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}

	initReadOnlyData();

	// user code end
}

/**
 * Insert the method's description here.
 * Creation date: (3/10/00 12:19:47 PM)
 */
private void initReadOnlyData() 
{
	getJLabelActualDevName().setText(
			getEditorData().getDeviceName().toString() );
}


/**
 * Insert the method's description here.
 * Creation date: (3/10/00 3:25:00 PM)
 * @param newEvent java.util.EventObject
 */
public void JButtonCancelAction_actionPerformed(java.util.EventObject newEvent) 
{	

}


/**
 * Insert the method's description here.
 * Creation date: (3/10/00 3:25:00 PM)
 * @param newEvent java.util.EventObject
 */
public void JButtonSendAction_actionPerformed(java.util.EventObject newEvent) 
{
	LiteYukonPAObject paobject = YukonSpringHook.getBean(PaoDao.class).getLiteYukonPAO( getEditorData().getDeviceID() );
	
	if( paobject != null
		 && DeviceTypesFuncs.hasDeviceScanRate(paobject.getPaoType().getDeviceTypeId()) )
	{
		long duration = 0;

        if (getJComboBoxTime().getSelectedIndex() > 0)
            duration = SwingUtil.getIntervalComboBoxSecondsValue(getJComboBoxTime()).longValue();

		CommandMessage cmdMsg = new CommandMessage();
		cmdMsg.setOperation( CommandMessage.ALTERNATE_SCAN_RATE );
		cmdMsg.setPriority(14);
			
        List<Integer> opArgList = new ArrayList<Integer>(4);     
		opArgList.add(CommandMessage.DEFAULT_CLIENT_REGISTRATION_TOKEN);
		opArgList.add(paobject.getLiteID());	//deviceID
		opArgList.add(-1);	//open?
		opArgList.add((int)duration);	//duration in secs
			
		cmdMsg.setOpArgList(opArgList);
	
		// now send the point data	
		SendData.getInstance().sendCommandMsg( cmdMsg );
	}
	
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		AltScanRatePanel aAltScanRatePanel;
		aAltScanRatePanel = new AltScanRatePanel(new com.cannontech.tdc.roweditor.EditorDialogData());
		frame.setContentPane(aAltScanRatePanel);
		frame.setSize(aAltScanRatePanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.tdc.roweditor.ManualEntryJPanel");
		exception.printStackTrace(System.out);
	}
}
}