package com.cannontech.analysis.gui;

/**
 * Insert the type's description here.
 * Creation date: (10/31/2003 11:11:17 AM)
 * @author: 
 */
public class SelectionList extends javax.swing.JPanel {
	private javax.swing.JList ivjCollectionList = null;
	private StartEndPanel ivjStartEndPanel = null;
	private javax.swing.JButton ivjGenerateReportButton = null;
	private javax.swing.JPanel ivjJPanel1 = null;
/**
 * SelectionList constructor comment.
 */
public SelectionList() {
	super();
	initialize();
}
/**
 * SelectionList constructor comment.
 * @param layout java.awt.LayoutManager
 */
public SelectionList(java.awt.LayoutManager layout) {
	super(layout);
}
/**
 * SelectionList constructor comment.
 * @param layout java.awt.LayoutManager
 * @param isDoubleBuffered boolean
 */
public SelectionList(java.awt.LayoutManager layout, boolean isDoubleBuffered) {
	super(layout, isDoubleBuffered);
}
/**
 * SelectionList constructor comment.
 * @param isDoubleBuffered boolean
 */
public SelectionList(boolean isDoubleBuffered) {
	super(isDoubleBuffered);
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G6AEDDFAFGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E1359A8BD0DC551599E31B36D651210EBAF40CE32A1991E7280DCE5A5291E35ADA43345A0986856392C802A6A19BC29212107472DBBECB8CB1BFEC680468A224A202C91521D473A1CDD09CC95830E89813877B00CDF677AD7B5E4212455AF3FF6FBD1637E0F4424C197B6E391F733967F76F02769E1AD31CDF3097217CE2447EBE4CC748D907D07513E9DBB82EF229430AF4FF0781F6237AFDC5505640D86C
	F60735927D342C947A4720EF4EF3D88F40779EF4C7D9FCADFCC420B39B469ECFB1AF181E4E1277B81D92529FBAD7816DEBGAD006B83183794537F66DC9543C7C17FB5760DA13FG2136E4BC47FB31CA07DF436655A75376A9B2671EF355ECFC9674711CD8E8631335BD4B88F7B7373630FE5F6DB1E8495399161D1816EEFF8E15AF503547D80B105B0295D1085E6FFC975A362E2BC39F8DC81E4681416B153C0AB8B05C6813242B630D0AA8AB2D2D5D22DB9CD0DC123753A5ABB0FF6E8B184F180B25E48F588D7A
	1427E7F736B11AB1D7E3D0627DCBA3721449F829F8D163E9EFCFC1C1420BF86FA7090E713ACE684F8220B42D67B9CD146230C625E05C9F6A705C96786E8298CE613C7C270E73529B3A9FA57717146C0A404B22944A431A940D175E0A787CB748F9DFEE46E7D61F6A30F682DC861885B097E09140C1E2E7871B7E896D09FE65146471C85E93BE5FC937537F1964945D705D5A8AA38CF7DE9C107CCE0428AD5DFD3141009F8E2929136DC8BBFB8762E79FF77E9EE4D73613738C17AD66391596B35B2368A5CDB6AA57
	362BD8AE9B600F83748278G228162DF62F209CDC7E7122B836C456F955C5D01FE1F60D7CE86DCEE2768E7727D695CF4729981DD37743A57D13D4CBB2A57CB422FCACBCA8C7412B0EF2DA50969A3C32797CA3B72FCA45AC54B261E87715FE5588E8FDE44F6D8855F794CC6A93E16605DBABC3571A4E23738BF81E326E55CEEFBDF63B2F4965D0A4CCDE506B284976E30343FCC7969FBB97CEC17FAF08C198D7839G89GCBGF2GAACD8E2B4D444FB73E693DEFE937DD3A3325EBDD4D7B2195030ADF68704A0A60
	9D90FB843FCB68F70BB2E2F37C4D18777EC96B4608BF8DG0DB322D7748BB830406E02C784C312691C28665DF80EDFA423F6178762106071A13E6F6C66BDD8DAC1D6AE781C02A2EAB368F8F4B35665285083BB4286702D18304E63C94CEA076F4BGD4D7C59246AD007EB32ADE2C6F3F8E6D27E058223B35355DC5221F609F67740B5CB816082322D7E997FD2257899FB29B333A4BB43D8CCAAA4F3B899E7B48A9E0DCD671875C3BA99E7650EB190F9FA263022278DD7D81C56C969545659D52565791DE64C96EA7
	A366639236318C10AB8F20A2CDBDF7779E1DFC1D906B83BEBBBEB92627BA92E7EBE0FECB9A4FFB07AF62BC5817466DB42B175BE97B4E3BD145F3A506F60AE1A20D5AE7CCDA382F3DC37654E87C352EB7026F7525997B5E754716A73E0CC42370FB6E0F016A5DBB02751EGBCA783642AFADF6D2E217EF6D210C56EE11F7B6144C427E6E5F4EE1AA7320DE5FA0CEDAC4BE3ECE3B91E69EDA84FE3E4C3F42C500BF30BB4665559E42977F56243DEAFAD8C54A5085695D9F62C8B175725B8DC4EA1D169F6DD93611C17
	E35B7AA37141CA7836AD6736B4769637A55B351F21B917169B663360AF72CBA616D3BB08DE2E599265290C58BA14AA9ED054A9A960D5A8FE9771EF06E771A55FE7BC3744076D712AB84E66D9FD96046308BBA02A32458B38C87479DD9EB8AA6C302C367B683C3E360B877EF09D38845ACC00C2325F19ABD8EF136A29AE81FC105B4D03FE4C97CAF7D87782B424F33B79218F0FF3FFE586F3CAF233FD54F3D1C6AA71B90AA3819142B1F668CFD5D9C2A32F070D75B0396878CDA3D8AE37AE963427E3391629F59E4E
	95943711608E40613DD444F36FE7157AFA34DD5EEAF80698E62753330BCD8F4FDB29B25EB78170C92A6CBBC674316A04ACCB83AE129658F9ECB80275CEEA58AB422890EC14474036DBDBBFA11A25F563BC924F70FCD3BA2F9B97DEA079BA43E1ED82B81B4169BD6C1FEAAF0F784B219DF479E528F71CE2106BEC019F4B0E7390C3737A6CFD3DAE661832A26A62F286550112912E0BB783180FE8404FD5F9BBAA6F566982EAC9C83BC3F0D21C1FB439105AAF6B2F100B397DA29E7F9E1ED25FAC4850E2EBD24654B8
	CB6B188FFA303ECC99340EA9D3712788BECF0727754DD3C43F38DF3542E11DD84173ED55A8164B84FD738AAE57B5E527CE2EAE4965D5D4196A825887A53FEB48656538860203CA1A84A51A339611B3C6AB41F7GA86EB6BB4635C03FEBA54FB1EDBD58C79468C7834481A42AE39DE44C84FD348A62934059D5FC6C4F97A2658DD2EF2E1CB9BFF11AFADCA26BD39A2B2625D1B2437EBC079507614AD8CBF5770FD1FCCEC135FF187447595ABDA8653C055874389400C3D8328A6BB1DB0DED43500F82188710300A72
	CE7D7017E3B8FE8CC2A1876E576D9387D0FCA6DE7B001D2F2D06FE93C097008FA0BA1347457BAE61F1AD20510BA69D3BD60EED23DB01C8FB5A6BE461120D7DF8BF56897574E6064BAC030BBEE23525F8DE74C9B825A90A64EDFA857373F54FDE1DEEF2B3E90DD38DE3B40EE7DC53477160ABF4FCBE34CF29F35ED442E3BD1EE302719CGCAE721CDCF2762D5BA67983454BF7E5E4D6F38E7819785C07558FC99576EEABCEB9446608AFE466FF21E9406BA49295018565FDD4A56AFF8154734E83227997A252B9D56
	1A55BC3F865F66F7613887EEC58DD125A5C67772C47BBACB4BEAF627D82D4523F6388BD31AC9F6CE73AE98FFE6B546ED356B65A476D700D0A334F43C6102FE9C472FA3C8BF7E5524F14C6F231356C7CF9AAF562D2732AD2E653265AD0EC51D0FEE0A7866D035064A54465A8505B5162A2487195E979FB9008C7388B1C6AA7F7C9E1E8B15B5DC37DF7FD77F66913BEB1D459A01FE9C231B34C653ED946816523FE770DB3D45047981652BBA44792AD84BEDC11231AD34C33F8FC0D94B5FD03ED4F8AE3CC51D3B4B06
	67AE02FEAAC04EDAEE0B3B3A5FB05689F5A8157E969B5F33A20B474B1A6E6FF677EF7C0E6B062EFB9D4DDF7DF62227AC1A3F72D57CD5026F5261295F5E297AED9F0CA5E6713CF6A8C85ED356B92C4781FA81FCG51GF16BF81EFBE034894DF05F36CB3ECEA87A5D3A2BA0156FD97BF7FB93F922045B677C5F5C096E7A41E3916DB3F19D35CB93EB3B8AEAAC382572BDB20E652BB4C3DD8A5085B08CB08190E36672E50DB6D079CEBBDD4A89C5918606C99545056BF109E39A9AA789AA5B2FFB2613ED1EF9EAEE25
	BCD507F0ECC80071E4GB3C069FA0735FEBD6727E5EC46772B5341E95E2F8E0726636B6C7AC835D2BA713D3E7561B63506600757075BD4C066B62540D872FA6EC31714F07AED599A4D2E6CC874EFA27E6C4C8E27FF8B417B3243696F33F17A93B0E64A6674F7580C64EF5FC06976EE18CA1F2E9B36A375FBC4779D5BBDDDFD73FD0152F874065220F6D59F0CFCB7FFAFE8FCB77FD75078EE7E6F6074F773D34148F773CF027A3BB975092FA630CF3861ECE6834481A482AC5940FDA2B978A67589837FBC8D1775D3
	92F94DD3B87D5F0EC716F561784CEF000B47715D29DF020461417BF37C3363783C9449C71094777CB85691147A438A1D4A702963B83F3845C10226357DB3BD3C36B72B3259C211F9FDA7E4FCAE4DA163F379B0B47D3B5C4721C867C679EB89F17E0E67F0FFFAC556FCA1DB779D12EF3CDF445CD09AD466D1055F4122F3789DACA64075B0DF55430FEC1A6CF7683E8F5AEE3C9E0E5DD09AD466FD35D866220DF0975D4875F02D166B21E6A33757410948766A19185937C6A748DB857804FD5CA732F71E89F2DF9E9C
	14C5550723A6AAD5DC075CA549AEFC4BDA309173756AD76D0CF75F4629711C7FE641E1964C398BE09F6B47ED54F2895D6F73905F8FEDB25ECF3F67DE18D33FC95B2FED13369F3DFB5EBB692E056F1EE7E1CE9F5B1B52FCA840E9AA91E8966BE84E06B9310CA646476BE852BBE4C3ADFE87D4C079891B70EF421D64A7C7CA6B76DAD53E4DB3535A8BF3B06CE3E3751BB5DA34F6BEF809574E47E06C90210F9071A372E77E5888C779FA8433496A3C348ADE67D5BFF49B32ADFD4C7296B22E735C0C6F044D5ABD44E9
	7AF98165A7AA447949B16487A1A39C65279A1B9E136B778A3FABB66472FB46860554A5501FG084965F71254G279917FB3DB4BBCBB49D7C65227E5D4DFC77B28B57F5388EB2F2296C66DCCD87141705351C975B96E3DEA85DA2C212461467AF696B24BED8675BB27DFB904D5559E55816E6415CB9G0BGD2814CG25DB9D56EA00A600F600BEG85E0B6C0ACC0BCC0A24092004C2DBC1EECAE42F7639E618A2BF4F199AE79C9F687A4FBC4A0895EAF50B7B64A7F4D136A5CBC582FF25B747C53F5CFCF29CFE782
	DA078E85309D5836055727BE02EF5A96DE1FEED1F8FD5A86E3F33671BC12965053AF4AF3D82B723E0D5EFB497FF9305F8ACBEAA3698CAA22CF605A7BF97F95F1C0318BC32A5C6F566969B6G4D63B35025B9E0AD71F5FB9E150F6232894E4DF014A7CBF9643C3033FC663C303F5C38662AAE1FDAF39DAEB72E396A4A75B597FBF7AD47FEB184F6542B4EEBD6F1DF28388F481E9867F0B915E1955FC678427833A2A64871A789DFE384574BF0E7F438AF982E339C879890F9D8727335674AF1909CF4395D34FF014C
	F1F9A155297A781270687289BA3EAF2938AF5433088D717379DD81475D9762677393757CBD814D77C7F55FFFD3EEFC7DD295387175CBEEE02A1DEE8F686D14625A6B264E6B28534F2339D0F83B82515F83DD021B188445D787F7EAF8EE92087E6F5663FB6E05B6EEADAAD6D0A9FF4E157DE897FF95ED6CA0E7EC9ABD5ADA18FEFFE181AA6AC096EA739D28889BEE87AAA6F65D018A416603787F87F669C19EC17FA3D125C88FAA36D88F46F3D95EB9720DBE6FA45F7CDC445FFBCC5BE91C48599E7EFB4F217DD8EF
	CDBB9C564E9DBC1ECB7B701BE02458546D915CEEC5F0DFBD61F562B8F5F2DC91357B0BEDBF5EDF66F358A03B8B6D47FCDF512D79BFD0CB8788EC744C539B8EGG0CA7GGD0CB818294G94G88G88G6AEDDFAFEC744C539B8EGG0CA7GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGD58EGGGG
**end of data**/
}
/**
 * Return the CollectionList property value.
 * @return javax.swing.JList
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JList getCollectionList() {
	if (ivjCollectionList == null) {
		try {
			ivjCollectionList = new javax.swing.JList();
			ivjCollectionList.setName("CollectionList");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCollectionList;
}
/**
 * Return the GenerateReportButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getGenerateReportButton() {
	if (ivjGenerateReportButton == null) {
		try {
			ivjGenerateReportButton = new javax.swing.JButton();
			ivjGenerateReportButton.setName("GenerateReportButton");
			ivjGenerateReportButton.setText("Generate");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGenerateReportButton;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the StartEndPanel property value.
 * @return com.cannontech.pooky.test.StartEndPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private StartEndPanel getStartEndPanel() {
	if (ivjStartEndPanel == null) {
		try {
			ivjStartEndPanel = new StartEndPanel();
			ivjStartEndPanel.setName("StartEndPanel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStartEndPanel;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("SelectionListPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(346, 258);

		java.awt.GridBagConstraints constraintsCollectionList = new java.awt.GridBagConstraints();
		constraintsCollectionList.gridx = 0; constraintsCollectionList.gridy = 1;
		constraintsCollectionList.fill = java.awt.GridBagConstraints.BOTH;
		constraintsCollectionList.weightx = 1.0;
		constraintsCollectionList.weighty = 1.0;
		constraintsCollectionList.insets = new java.awt.Insets(15, 15, 15, 15);
		add(getCollectionList(), constraintsCollectionList);

		java.awt.GridBagConstraints constraintsStartEndPanel = new java.awt.GridBagConstraints();
		constraintsStartEndPanel.gridx = 0; constraintsStartEndPanel.gridy = 0;
		constraintsStartEndPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsStartEndPanel.insets = new java.awt.Insets(4, 4, 4, 4);
		add(getStartEndPanel(), constraintsStartEndPanel);

		java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
		constraintsJPanel1.gridx = 0; constraintsJPanel1.gridy = 2;
		constraintsJPanel1.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJPanel1.insets = new java.awt.Insets(5, 5, 5, 5);
		add(getJPanel1(), constraintsJPanel1);

		java.awt.GridBagConstraints constraintsGenerateReportButton = new java.awt.GridBagConstraints();
		constraintsGenerateReportButton.gridx = 0; constraintsGenerateReportButton.gridy = 2;
		constraintsGenerateReportButton.insets = new java.awt.Insets(4, 4, 4, 4);
		add(getGenerateReportButton(), constraintsGenerateReportButton);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		SelectionList aSelectionList;
		aSelectionList = new SelectionList();
		frame.setContentPane(aSelectionList);
		frame.setSize(aSelectionList.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
}
