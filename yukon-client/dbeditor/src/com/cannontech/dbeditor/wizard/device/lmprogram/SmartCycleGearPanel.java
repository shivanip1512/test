package com.cannontech.dbeditor.wizard.device.lmprogram;
/**
 * Insert the type's description here.
 * Creation date: (8/1/2002 3:43:26 PM)
 * @author: 
 */
import com.cannontech.common.util.StringUtils;
import com.cannontech.database.db.device.lm.LMProgramDirectGear;
 
public class SmartCycleGearPanel extends GenericGearPanel {
	private javax.swing.JComboBox ivjJComboBoxCycleCountSndType = null;
	private javax.swing.JComboBox ivjJComboBoxHowToStop = null;
	private javax.swing.JComboBox ivjJComboBoxMaxCycleCount = null;
	private javax.swing.JComboBox ivjJComboBoxPeriodCount = null;
	private javax.swing.JComboBox ivjJComboBoxSendRate = null;
	private javax.swing.JComboBox ivjJComboBoxWhenChange = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeDuration = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangePriority = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeTriggerNumber = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldControlPercent = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldCyclePeriod = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldPercentReduction = null;
	private javax.swing.JLabel ivjJLabelChangeDuration = null;
	private javax.swing.JLabel ivjJLabelChangePriority = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerNumber = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerOffset = null;
	private javax.swing.JLabel ivjJLabelControlPercent = null;
	private javax.swing.JLabel ivjJLabelCycleCntSndType = null;
	private javax.swing.JLabel ivjJLabelCyclePeriod = null;
	private javax.swing.JLabel ivjJLabelHowToStop = null;
	private javax.swing.JLabel ivjJLabelMaxCycleCnt = null;
	private javax.swing.JLabel ivjJLabelMin = null;
	private javax.swing.JLabel ivjJLabelMinutesChDur = null;
	private javax.swing.JLabel ivjJLabelPercentReduction = null;
	private javax.swing.JLabel ivjJLabelPeriodCount = null;
	private javax.swing.JLabel ivjJLabelSendRate = null;
	private javax.swing.JLabel ivjJLabelWhenChange = null;
	private javax.swing.JPanel ivjJPanelChangeMethod = null;
	private javax.swing.JTextField ivjJTextFieldChangeTriggerOffset = null;

/**
 * SmartCycleGearPanel constructor comment.
 */
public SmartCycleGearPanel() {
	super();
	initialize();
}

/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	if (e.getSource() == getJComboBoxWhenChange()) 
		connEtoC1(e);
	if (e.getSource() == getJComboBoxPeriodCount()) 
		connEtoC6(e);
	if (e.getSource() == getJComboBoxSendRate()) 
		connEtoC7(e);
	if (e.getSource() == getJComboBoxHowToStop()) 
		connEtoC10(e);
	if (e.getSource() == getJComboBoxCycleCountSndType()) 
		connEtoC11(e);
	if (e.getSource() == getJComboBoxMaxCycleCount()) 
		connEtoC12(e);
	// user code end
	
	// user code begin {2}
	// user code end
}


/**
 * connEtoC1:  (JComboBoxWhenChange.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.jComboBoxWhenChange_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jComboBoxWhenChange_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC10:  (JComboBoxHowToStop.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC11:  (JComboBoxCycleCountSndType.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC11(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC12:  (JComboBoxCycleCountSndType1.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC12(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC6:  (JComboBoxPeriodCount.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC7:  (JComboBoxSendRate.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GE4D385ADGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E15DFD8DDCD4D57E37A5AA19199535E438D119E1D1D9D1D1D94B1615991535D4EE32057FCCE9A3737947D36C2E7BF4C1D4B0F9D1D03148A65FC2A5DE84DDD2CAF4C69C0D520D11C6F99D188B0C8EB33343102311BE3FF34E7D1DFBE738B38C755F6763BEFEBEBF6F1C6F797D4E6F653C5EFB4E3D88791F06AFC9CD4B970454A502746F9F2902D0BCC290AE0EDCF69BE239BFEBB385453F4F00D68A49DF2743
	D583F966D4DDE62E90A7E4C03A9252C56FE8B357426FBC616735097F029FBE7444C0DE5C795FDD63DF4F723D28E799CDFF153A822E59C0D500B581C5G658A47D28BA4FC982433255F04D2538441F80E701C4EAAD060C9921F6E9C3B4E25BC0E54C2A9BF9C5204A79A2E316764B21911A3F6D7C96926ABC2046499DB523208AEC579C84567196CD1692A916E2001D8AC5C397190DC2B0F1E6A7A3A435ED352E132596CB6175851DDE2EE974D96175DD9F25AF25664B41718459FAD9DE20935476134F7B9CDBD3BF7
	5777181CAE6D198E2BF8D0B4B90F1AEC22954A0AB9CFFC08484A20658BC2B024193D4FE7D5CB76041C8A9192EEDA67535E74E14C4E22E1323D7DFF68CE1BB50C14FDAD0DBF116B06F4B89053B9A795F596DE244D8C3B08E0D3D690DE837C368285DD0436FC75B95AE27C69A6A13C3AECD90E8FDB92AEE2B6E4DCAC5BB273C46932F534ADDCD3C36AD387F95DC07DC061C0B1C089C09F53B6784F3D5B603A2F5D2535777458ED7B9C0E7DD63373DB3BD934426F5D3BA1C7423E97BB6CCE33A030F6F6FBD6310ABDC8
	A997FB36B139DD7CA0E03B087CFE3CB0755E4B531628789675E2D15A0A6112CF43E55F18DFBB76933FEAGEF82F2810D810A840A9D0EFEDD3737E2B03F8EC1DBF25ACC567A3EF687B4167DFD962BD9F4CA7EDD1F6A4FBFB51262B2E4B99617088AE5DC626FB91C36CCA5AE719125E909D2BC04A0B9AECC77BC1F3AB5C1836B03766DA0528EB7E511F6D8893FD325B64A70920A87ABF056466F236D1624C3A1EFD19036DBE3B67AD017BED648AD7FC6550750C7EB525AC6B0FB5CA33C6BB6DBC74617090047G4D82
	DA8814BBD21BD98CD4B3926BF75E5E52G5B6DD1C55DB2596BEB5640D5F43B1C26C336DE174956A1B6181C96D33BD56C95A41E089AE2FB3B075C6D34BFF5000E0322CDF41ADC963B8DCAB775085010FA994FFDB5AB890FD3243986CB0F888AFA9C82167BC8CD9EDC2D26DE57B107596492E58E167FC48D09650F2686A8918A005F63C61218CF23E3D69B7C6E87E2315AF300E0F110CE62F15937EF95DC3F0106ADDAF76F56D9BA0899A66799543FE7BF99CB449FC51BCBA7BAC41B99FE74CAF97B77E74AF16934F3
	1B7594A7FDC48B0677F27C3B7DAB998EE5A8230C798DB45F64F2B9AD6DFDAE31DEF439AC36AED93E055A526B517DFA85290F5712B6A60C52E696G950DC27F666F4FD378D7E7371F6AF398C84DC9F17ABB9DE72B015FB08A6744EDD9E40EF40F42F63A40086DD417F52DD07C62A155F6CA5B6AA856BE270C726EEB1534CCD9475495C6AFD977A875BE77CB0869F8F1000E457FC36593E2F13F79A0097BAC30BD99A8BF98633EC12BE17DED3F29D7449EF64489B5A61A65D646F88BF43E5B5827BA75B636D9275E46
	366B7C37218A1DDA9BE2F93BF5E4EE311F36A95A64DE5DAA5A07EDB6119A4DC5843666D8E0A0313058AC2E9FAC66AE51D5EFB9ABC2BD871336B51B7641E278DD930CED6974C6ECCB1B4EDEAD4434EED21D4FC2EF5626058633769099AC37A5E6D34D8192F351AA76C0203476BE1B0B613534FFCB38B43ED4552A73FEDDCB5A63A9710C44373FF629C04691EB1F48FD1BE27A104458E90135519952E125F5DFFE1AF25D978B7611B5226692EDE6A590133D769C69F7EA2BAA56EEDE55933B6A003F8D48FD89361BC7
	EA57A97A2B54E034F62B15051F574BED87F3C9BD0A7F6A93E1B8A69D7A9B6E4B5D87D7F965B5C8FE317C878F923F2C4A3160926257FF73F59E19AB981619CD30F720C3BD150EF36F37394A35EAC14E9955BAA494F7892B3B44CB3C672D3C43245C0C51B0DE0DC65FF76A15E3553E5EDEFB0705CE8BD2FD6CF1578A3FF4FDCBE7A0CB07E2F14B56196752B2247122F8B42EB37F7883299BB3247B01C238FDF375835B571B7A65F06D34B8FBE1FDE4965D9863F774A4D6E45E12E0DC4F6DD046AEA6214CE76CA2C733
	18450C760E5D71EF089D7100AF64361DBC34D291BBD8FB42B45D85B50B76949CDE4C5A3B14AEBC3C845B3B00636570B4DC8F25DF4AF496DCAA0F4945178E9C1F593AE70E11442B66D2366E594C71C5948FD160ECBD749A0DAFC9A7C2DE7EE5B8BF9F29A3FE550C55E69E9D0BFE5DF5B8CB6157D13B456662BE35FCC37A2C5DE9693258906B20982C3C69A046663871340E5B204CFEA006EDBEC630F1101E4831C98D841B8E690431B8CF4DB76AC9BCAE57E6EE822A83F2G8583C5G4582A583650F53E6D6819901
	5CC0A1C0D1C0F1C0A9C079D74058F0851619F6DCCF6B9F6C818A831A8A948F34882870CAEDE6B5D093D0BFD09850D420F820C5C01A2BE0BC85EA839AF6951679468F1AD47F7395311958C3FC98ECEE2B126CCE7643CB7CA1D7622BF7DE0417DC2C14F678A84FA81531490FBE92D7D28FD18AFD79D78436E64817E4D82C4A0C03450A0C0F1FCA7C03153DDA40E78B3EF9B6CB570FD572323C52B952B553C7D9EB256B92BF7AC8FFA27D7D938536B1GDF8865A9EC4D938CF5246F3AF95AC853E7247221FF527BFE07
	D36C941DB0D33169DF18F59569CFB3E83F8B075F11C00C3F7A98691FD65399FB9FF4E4C788613B6B18F2BEAD84CC87E48CE1F546467E3BCE13BA6904319C16B3758E31C3283B1A48BE5C003251409F8B14843482720A2FC61DEFAF4D076B61BAD33BE855420C6134DB0F0A4E8E9844D9FE5A92922F435AFA0745D6EB912DE6CFA66E6BFA7D9AAFBEB233831745EEC61E89FBB2392EEF4930A461854DABE59B14E2D27E6B1BD7FB66EBED2EFA1B59F046A1F21E5F9C79086A3777345B775B5D0C0DACE9B8A363BB37
	CB56752D490D4571F23E5B30C6D98EE7A1C5A14F330AB21829D23614BF5A1D2FACC3414272F3F7E5F379FAD852FE8F77EEA83BDA3BD2A9ABE7CB790F1EA56B1743F41E56F643BCA6FEAB3A3A659877BB56A8EDA3F5743DE86E1396C80C673613B91CC7EFBFED30573B6C8EA92F5632CA29DF4E46B8BBBE762C6781CAE2E95B539D4FD7345B102B59BDD4B4DCD9FE6486E5FE7EB5ACDFFF8D66DF562A165F4473BB33544AF7707C452DEA79C1BCFFFE36DAFEA84FAFA9D666C7CA7A63F87ED6D57D09BC7F7EACB579
	C5BC7F4BBCB5795C5FE07ECFDB5464B7717CFF284AD7717C20A2B579BA48E76B74BD794AF1256DB7D2FC609A4A4B68EBD453B10567AFD20D61B41EFFCD2E1A8D33F87E4DD9EAF51C8479C2A8F9BE2D2D97F83B7F6818862EB67134662469C7D30969342BC4E70135A6F930D1D4D93623D8D3D9D136152DA343CFAB5711D54BF779DCC76AC259B8EA142E561D4725674565ED645991DDCF23C2D8A8BBAD667D262EBABAC233B5724BF42DC44A9E970AEB64A58DE48DB79D5289C0A921F8FF675E024FE2A3A70D956A
	069DD6FDAE1CE0A8CF4B3D1659D3F92D3C3E1DFB22F4995379FA836AF4C0FE443584DB7903B216A4E64D70DF89DCD93E56A3FF25A4AF6777F96493FBB7FB485F62113FC4A14FFCFBFAB37A366869B041FAEF154FE75E8BA51F7247CB4F9E530F27A62D372431383F5BD9200C3B3B2477B4CCEA3BF733510A79DFFEA2C37221EEBC467667DA65B37729B965E99F7A50BFC552BBF33C9C5B9008AD53FFEE5796C1F19FF54A5AD5F23203BCC5A869A4239D98A28FFDF81F747A86E28F5117FB9DBE231F560A181EE393
	68BDA499FB07F1ECF7AB7AB217E36BF338EC985EB3F7D9BFD60F8B0E5412ADE2F106D4A74342303C36ACACAF1AE38B3210EFA1479CF948D7B481313B37A0DF9B47EC1CAF14E38F95A15F4C89E8733BDBFD54A51D3D18DCEFBE7A1F71DB6CBF7B3FA07D478A69A0027D96F5C4B6E27C22B8D61103FA8B2EC76C19DC3CEFBD4A31F86EEF707558E61EEBD40E933963B5E929BE5ACC4C752C2D44DEBF60FE1376FFA19C6ECD42713EAC38FEBBDC9BCCA725274687687DB7FD508560D1275DA1BADDE798CA1FBEC8EB6F
	78E3C3FD5E4F6EA54F507126BA1C5DCB26F27CE20A6B95B83B477C308177158C10979D0E77182369FA31708618C7000E82F5838583CD3C81FDFB3E3ECC9864D939416E2893FF0465077C940D791758704B76B3FE3F8C7BF65403578851A3D3D2FD756D689BD87D4C122E21E947D34915797709117817F1A34C23C0FA20B6A09750189B513FF506E2669F291EFDAE1729231BBE51C0679AAC62E999A60BED665B2E935E4FD343214C289B199D53EFD43F970B87FCA1D07ACDF2FE817CAE3E49131F59BF0A2E29EAA0
	2F894885B486A872A6343D43B068BE5581371FFD2A448DD8BF31D0E682D032420E0C095046A7FA5A45641EEAC539B24857819995FCD678BDCCD56E46AC6F185171DB620D18289E3329004F841A2B48CF015FABEED653313755DB078678AAA5DE7D4D6ABA1AGF7G85A972C361F7242A0E0DB94AF69D83BCF1C009C00B00F2A78D544164CE96235CA66029822AD37036791493BD76CBDD40978C9486B485E81ACF39F7395CAC60C98292EED1BCAF384517DCDF1ED2DF9170D5839D85B28339FD4A5D3F856546GCF
	B8D01402F73ACF39DE8FFD71403790A8BDC21BD9GD49C61CBAE268865EA0047G542D606D77A9674ED73611F140B791A8DA620FD511A314GF8B2D046E4B93FF072C0DEB6963FC767343249ECACDE4B7165A5846FD660EC0C56D3FE128E073C26DB71D956DD0D5E6D3960B60849EDCCEF4DED6A369AG6F764A6B0774385B545AF315C7FB1E88BC51C03192EF020A8EA677C2AE4AA5CBBC99110A58C47A121B435BE5198A0F8EB0A310D511474643C9A760024F7C8D64B9126A1C8B435EE1D8FE9CE9BFA9F6388C
	26AEAE53F20C1445770358D4AC65094748D8CB76EEACA62B65ACFD54DE8F0C36AEE6737986015B9F2C783D32C1EDCC7B1FA2E98F725F2A0379FFD5036FFD37718D6A7BEE618D6A7BEE139A7C6F3B5D5160FB5F6D5E86653E9B2B77FB68FD69B0E88FE1C0B1C0F1C00911B88FEAFF58A050F9D0E57EBEE06E9235F63AD36FC27DDB0C3EFD7D42B8787E7EAEA35967E8373BDC769ED2BE6255C6D2DFAE3B0302521E3A114448E9696AF6B1D689BFE8A46BC82B58C9E1764C5DC86FF352EF07F977F6FC8EBF19E2E510
	2E61D8B6DD9757C15A4C316DED84F3C3BA04E3FF5ECF3088C8C7F32C176E5B44C2FAAE479E5763337E940ECDEBA1187E8ED8B35D01F13E7C386F38DDF3DC3D0D049DD7EFA3B79E773F7FFF6BF1DFED08597741865C47F05D01B62FBBCB30E0C807F36C54D90CE994476EBB0B7ECE675826AF88D6F027B6336CCE4492DAD1070EE30733B0FEC60EDD1305BA2C9C1B1305BA06F1AC3A1DE0B3A11D48B1F6B6E39124D7CCC1ECAB5DE7AC00F49947DE26752B03F49B4732683D108B52C19C2BCDC57BC2B9B6328AED09
	6458AAFA4F34885279F7A1E6EAC5BF0AB896C931EAC857F1ECA5354588E9874742284DC1108E6758B34D840B0274B40EBDD70E764D625824E5E8DF92476EE4FA6F06F97DEE44F6D3FF3BA16D6658F575E873980E4D23D8B82427F06C9B836A1D4A315F98D06FCC0EDDD40CF52E39873114A6142D64182E99756AB9F6F9B316574431FEDA3F11101E4A317B4E216CCC0E251EA758DCC8A7F32C73BC6A9522903B7BBC6A48675872EC34594C3142E614F5F36CAF6DBCD69C53F5E0F9619C9BC36F7797C2DA38170F91
	ADA81B4F31DCDAC7C5102E62D8DFAB6A55F16C772D28434831E737204D919C6BBC476B08E3F74B3162585F4FE1F9F3B9B61A5ADCF99F683D8F3107F8FBB6F2ECA9ED3BD6C877F36CD49B6A8D66587DED28A30CE3AF97214DC99CFBC160F5F4BFE26BD3F92CB816DE0D6595F1ECBCFD96620674980E2DDBC330A9101E463111EB891688E9A11A5BC231FCC897F36C538E342F06E35934ED98A0ED6658BD7499061B24B936046F77CE0C46356722AF48BAAD9952798F40BDGD093D0BF50C420D820E4A04D03B0B6G
	F5BF08F239A5C4AE985291C053019201B29E825F0174C05DC041C091C0539FC2396F3E18A28CDC1F903D64CA74A8F1E2172FB5CD7F8383731AA40C78027672B52F02BFD6C5561B1295BC4C761FD5ED47BD53BCAF5C5F592B8FD5B05C7FA4EBA332B736D611275CB34D71D3AE12F2EF16557D9F9A31FDA5BE445BB09D7396C1FA45D44406D32CG52E59C9BC947E49D245BB876B965F3C1BA08E313CB31FD05F2ECA565CB043470B0E2C7E8F979105E44319167513EAA0E4D24D89D241BB836D3C09D5D9CFBB3977B
	C4B44756B58D6CCF7B1BD0B616732550313B7091507B88E2B10D48D74731824A978669A80E8DE7E39E24939E417553C30D3E57CF0FB68E3E6EFC1A6A96E13DC8F6B899B633111E7B686C6C95797A764546DC0E9D6ABDEA6F35103B99362FE2BFC1562EF00B53E5A36B646338BFBD0A2EB31341560C5F61DEF14C89F2AE4C85C6317D19D34D02007BB31B9BC9BB6DB139ADBDFDBDF4271B1573953531924A2861656CEF733DAF5E4846E360F5F37ED4AD515BE93739984FDAAD61198879D3B84FE83D079FC6AC6FC6
	3A16CDG3EE4A0DD8CFD962C5779698FCB845CD7E73489E488117BCBF20FDE853F5F7D60038FD2396F33DB286FF03368697B3BF40E9C837C21C08CAB5AC830E9101E990336171DD537DDFF96EDDF4465C34EE23D947F9E7DF9662CBFFF16C97EAC73610F914AE9056B675C1FBDDF2857E5BDDD931B015F71FB34A71356D79824A3B8561B05F647F16CF7D9E8F77A23E8F7CA56E0F6AF73E3F759235EF6BF572EEE77FC3A4E2986FE7D23987359D91EEDF9EC0B5C16EB32554BB152395385E58C6365AC7053161719
	68DA8FF823B97F269C4F364C5630F3A1FF6123982B0EAA0C1F66B10C55042AC05A6C8752BF0C55EAA9D6C7211C4FGFF83085931B5D73D4D6E2363E39370F7BF06760CEE453A8BF98C7DF82C55B3FE0F344A71ABEAD30FDF8DEDABB1D0C6ACAF671EEC5F710B2571CE815E74E948BF3759B3FEFF256B5AB2482F1E06762614E37C2C53B0FE8FAF9BACFE584E545ADA981473970FBE7FC42BFA7CDE25310AG7EA8EE73BF3D6A3C0B56F98264A7F11B2755E30C8B9FC7393F57FB46F80BC96031F19950C77D636863
	9D0641FC4C9464314D5BC7B7147319741B6938155E7B8481BE6EF1347333E654BB15E3BD4DE8FB9237E5D233BFDBB23DECA9F842531662A764364BE2F1D516E78CA75371248A78F4CF209D2F1DC3BBDCCFE08C8B4EFB4670D03B9C434B4F23AF61CF205DCF1D9FAC069F7AE9A7B3211CC39EB12C20EDB89E70C4EE67819E437CA7915B5001366B1EC4DB9ABB860B61070A98BA1E7434A568C96F985E146799438768BD52B8608B63F6ACE8C1BBE21F4498FE6E55572D9DF28CFF5B0A3E24F03BE7358E9643ACBF6D
	30E83AB6F327C78C5F277706150057CCC7BBAFBF477BB847E6737A8F1B0E36647B2D4FCCAFDB26CF7734A5FE3AF78CEF700A617DB4060940174C6D184B474BCDCFE18CBFE9730C61C4339C4310B6746568D3E87733ED0345B047CF8C07C1B9F846036990365235886021CF211DFF93D06FB40E9DCCC55B1339AD9FD78F96C325AD1A991E36D44E700E61DD79E40D5AEEF75287FC6C1C63F4FE9E2986780DC06300A64EE067FA25F5521A0167A38F2EC1392940CB4EC74641B5F1863B9F134E9D2ED5DF635ECB6F19
	0527219FBE4D6773356AF357528242DB83FCF5CFE32C74344F3AA19D4465B7E7FB360FBD347FCF017C291CE746B175755EFF517B70A46093E2B176058D03350355D29D10324B08DC2CE2ED97AB6F7DB35D961B623CA7BDBF286BE3EF1FC973F13F77F9CF8FA6DE0E484EA162D94EBE17582B6D86AE4CB76E7756F354E931BBAD2EB3ACFFD7032A9EE462FAFA762E73AA476034F4F5094E6F7AFA5A6973E146771541875F9169D6C8626B4BA267FE8F9B20A3AA542A73B69B562B5968E5G63DDC75FB9E17AFF6896
	ED0C15652D6D4D9394E7AA65EC692C64B7A55E6768C81BB74762B939DBDB3C4F4911FCB74F5F5629A6BF06673F572C169F4E73D3CA554A0F6279AF8FB887C87227737C7B37296547737CEFBD649746327C02E7B07F4D95EA7A0BF97EDB2A7AEBF8FEDE3377B9C312EFF8867B6922C66C675D4FE09F5C5964B99E7F2BD36075BE3EC9FD8C381BBE938801B242F9B993F2FC2FDF6F236B3CD8E287677F3A49F3FCB050B2531F055F4FE21F0FA99D2C4F1376646B3E28864AB925480775F8137ADA35066A2E83FE6333
	E8DF2757DA351F7A908479631E45F85EF19E6399436566FB2D33EEA55B2C827327CE984C1F15026FB5D552336C3C16BC172DDAC96F8BGCFFF8EE3F63C491F0E8F3DF414BD6729C387E9FCAF1E791363673E24080E69C7C126096BFF39F1B07DF9FEFC8C06F2C87E637C7E2CB4CB3D8D9E246B5E90608FFF8EE3BF5E473D485D6C59BB704D827AD43201561D740F497F7604862E7CDCAD0CD38E3B8DA626924311232D7B6A8E9D7C6E5B835F99D83DB6DBE4B9CD9BA95347195C72729D451A724A2D82139BF6D216
	FBEDFF60F26B6D32DC17FE0337DCADB454228DE60B49EA6F5AD02CA983519DDB597BA96A3EBE207FCC5D573A83358605336AE5B01BEA4934A31DCD1B33824F26955EF63920FBB9A5F5236063DB8FB3591A44B0D3BEC32833DD16464ADC58AB5BF8790640631357A74BE51FDD6FDB2E322AD83323ECAB72361E8DB48E52BB83E783EFA37BFE14E3E5BEAD5B67E875E35F4EB249BEA6B74AAD4B6D4D8A5C2F51D9C3736B252C407D3A750C6C57B3E7E57B8E79334F4B2F3F7DA44BADED99C2BF78D916CB4B89DCEE44
	F9D9EEF7EA207D07711F2D8AB416CCD704220FBC1DAA6B1D97101F527DD5EB607531A0CD56F1C5F660B1A9CB17659EED8EDC0ECE29125CE365C30B6578E5C30B65468CC5ACB3E53DB30660670E950AB125FEE8764E2E8F249E986F25062179C69F19CA3F07E74BB63E5D644F370ADD5011AA301DD4B58F2D1F87B587624F40B1FF61DEE667249C596634D5324D371E9BDADC5FBB97F8DCA71D9FDADCB76749B66A73E59BD77AED631EF1ED9AE2DC3F6C78F5F1BD35DA367907C2596687DA069657A5810D9B0C775E
	562145756CA7320D93564BB6B61E8BBC2E134E8DAD2E7F9DD0BB719D5718CFE51B8BB748B65F59BA34387EED88F13D2DEDE8F15D3BD13631E713EC6313C260F1DD15BA34387EE54F2F0B6BB832E4174E68AE4C47EF970D01B55D3419785E4B7CCF48F42F76AD062EBECBC91F4BE25D3D5BE0F1D9457D52A3B0695D1D2A55C49F19B8974D44F7E1BAD7536FA9BD2F4D2C83B283B15D76B5788EC7BFE0D14F63FBAE772F41B2121E47B25E203C1BDE50E6D68399DE70F7AF903BB6107830D85C33C5164B2763004F77
	73C823AA03D59015FB69F3D9EE313F792C22E2E731664BFF60FC7655B6D96E16E33F7EDE60AF47FE793D40423D3E5BC89BF97DC72A530BCBC8BE19BC2CAF706F3751E76C74DDA90E19BA914B7883E2DF3420EC8D47CA4B10EFA2473269FDBC31A51EE38B36A1D693076DF2F31147BB0D727BD87CE998138DEA64BA6230BC8DFFFFAA1EE39B1A904BFF913143F4EF03AC146ADE447B533C26405B5470E239FEFE9A42BAF7529732DC215FF50427DCF919ACB721B450B645E4DB4BE935535F8F9D134BF9ED88EB348D
	C6D96E4C79210D4D0F1F8FBC2E870E4B36761E10F5E67BDFF3D5303156F7DB3F2EC9AE779145F910FB9B7D5D33FD69F1CFB427C5AEA327CDAE43BD587D62AE390C9DA6D96E2A957EF4035CCEA2474E12EFEFA74FED02202D0683CD830A87DA88147112B63390288CC887548464828A868A831A82948394871478921E693954C9CC72756E1F7482B1BD006EB4316F353073E26F658F76EE5C2217545E55C8DFBD185CFA2F3474ED4FC1653C093D2F728A1D0F8ADE76FE5770F50AEFD260EC1E322E46F92A8C72C2DE
	4633FDFDEBFE59B791077FC23929C316E3FE9DDFCB6CCF9960EFBB4553E7F97B7B961F17F3A14FB58B7D9DD5627D4E46AC48CB1AA53D837DC775B306790097F965D5C37A689F555A423C967451AC653B95FCE360F7382ADCE727B2B6D140B39DA8DE62DD28E29B135B51626DD37AAB5A4C02D798FF71AB6ABE55GEE704A6B06F47FABEA36C1F7155263247C098A3EE8789D2BAA175764EDDB8270A5CB3C99335935F03627EC9924F5DE189152D620E1333D4FF83E3B4DDBC78870C4C8FCD3256BCC2F7266C2BA45
	8BDB912F4D54GD546FB6B3824917D57CBF9CD8A9E877C8E0AD773FFB3FF27AAD44A0FD47045406FB8D5394F1B14EDA191F89681657EC97A86511FFC3505A34DA8D7A57154A9F85BD46424EF68357BBE83D95BBE789948A36D6A6F5E9CEB9F786E4D09F675F7EF5A6879B0FC77C6FA7F2B1D2C193AE03CB6F23E139CBB4EB1BBAD13E0BFD84C2EEE0E77D13B882E9709C244FF22F61D2618D14206A9306392B6221D6CF5034B5DF6A74A0EEE27FBB3962B152547D29E0B2DD7F471F8DCC5ED34B8CC8A3BC3B9C66C
	A6B7330B05183CACAAEB3558C4AD7B8AA92F4B84FACF4EFE3F29786DDC7D6FFF376D527F87BADA574ABEF5ABFE7F2FB57FFE5D4B577EBBF5C8E72B69BD078B7A5C18BF6179633FD2AC9C52D3B856CA4FE0CF05F49C47F651BD23C4C8273F0AD8915D83AC00F49147D278596AEA0E2D20E78747C0FAA2477E5E424FDBF36C39EC34AF16E39F65E0F9899C3B185EDF143D264D543F06584F1DE8CB934756D7E0F98E0ED9AA505FA00E4D28C09D63B8E6E8C159840EDD5F0232499C93DAB1D6C282E2D7EE41D865F36C
	6773BCD69C7B1A1FF52F6658BDC60C55980EFDC36F6D42A1BD15E3A34DE85FCC0EBDEF467266F2ACAA9FE3D5B9071FFFEFC2D9BD4706B521EFCD9C1B53043EF5F36C3595846B07F4B8473EACC0FF23B876862F0F699CDB3E936D0B67587FEEC5FF0B7F8B316F69BDEA8D245BB836FABB5A6C62D89B4502A19D4A314737234D93B9D6EBC41B23B9F60591ED0E65D8F4A95A1C403191A25A1C4C313AD234D977BAFFCF2EF1204D6194B3820F0B73198B510FE00E5DD908BA42B8D674A356DB92472A33304F88F3F9FB
	EE447272B996455FBDA86218EE851667665857CD686F980E994A313CF00EDDCF31A8C8CF63D87A8E54B113E31D4DE81F668D440E72BEDD49316B32D1D67F86FF0720C47DAC56ACBABE0582DFA467DDD96AF92660C5FAE60E657DD82A3EBFBE165659ACA8E3AEAF675BD65FFB791D34DD664E03FB3DF9483F576B8C44B1BAB669A15FB08F777BF3D27D6D7713F27C3DC39084653C7F41879FE4F1FFB67AB80F3D070E296300BFEC9E1E3F58425EA501F49C47D232B1FE42FC3431BC67573C67D08C659C9014676B2F
	75F1AE66AE5A3E2A085E79E84FA4BAAEB8A05D4F3103953C0E6763B73ED2C8D5C867C466D484729E03AFFBE7C119443E3FC3DC193E1FDBD05FDC2E4FC44FA1307C2D2C6E93216E9351460768182E073401E3136818BE8C52E392B136477C1E51499C445629D04EFC297E190EF8BACECD87BCAE915BE1FB196FF67B931DAB04B73519AB5EC4BB6FB4233FD5EF221D0966414E257833538C656C115AG5371A7BA4FB8G6F67FADB1AD0EF441B986720D3F21C175371A28E72925EC45F5EDBC156763038351C05FEE6
	3212C71078E6924A2D2463A031EF451FD1D7BB1D032AA02D63D8F6973589527DFFC63FBF5BB9D87F74F75EBF924A394523FE5653B33A5100CF7BB37AE05916676143BE9C55A419615B507E055C562F37E32C8A5F42F2CEEF779C67EE314A31DBC0797540EBF88B4B309B315CE19CFB10E211100E66589CBA964E05744237B0AEE162E06D56DFDCB4C95A4C6152FB90CCC79F55D18CF8D5927AF3FF236FF6BB134ED9E660F5A4211D1795E2CC4212504EA78A87EB37CABB27A7F91D5BCE72BEC37ECFBA4FA6821E4C
	750A34FDE95E06B5495B08DD590836985FC6DB1E76FB36EB30F7C7025E1647D169FD89BAC70F83BC0C6B6DE26F9BC2BA0EE3BF1723AD698BB0367715FB361599BD242DB0BB67278F5666977B3133EC81FBD615496DE46F2FD7832EDF00B61D61730CEB8146676E6C416233D8104FA807AF70549B85696B255F3E77EA5EA9518801BE6BCE3149F25BDB7DBD5FAE2BD0BE0B7F58A14BFD62F76F41D36E34D316CB92063607B01E1E7BE23F9FF64965DC66774C0C277E84459930E959FE1EFD136DB445D9291C1C40E3
	3A7834EC679645592C2C4EC11E35AB1E73DF2CB8B3352AE2E8FB9DAD95015BFA33620CD5C8CB60F2EF754BF22336849E7F6CF3321C73FC60F2A7956DFB4790771EAECB156BE30A629C546C5240753F3AD8167B496C2F5D14F9341BA74C0147D47ABBE474772625323E877D6E8F013E8AD9DF5F90768F8FAA4EE8452D70970B4A8A6539331202CFA59D5236E8C9BD799FBF9554CB7704A5BF7AB2E49D2FF48622C35A67D21C9B7ABF15C32B6F74FCB90E1F2F164BB938ADF09F47EF8B44C746FBECFB60B1BF3CC636
	E70FB1F0FBC69A830FF94FDAD9476DFE5B38E74C635649F2E74421457C7D0F6418EFD61CCDDA569838FE7DA7325C7142407B584442C0626F67DC55FA5976311F4AB6448E36B72A982F6F5248F2AD7E7A2B573CB239B17036937719EC677B0AF3CA4F8EB6BEA86C9C29B807229F62394C107240ED1D7C39ECEBEC112C73003F7D7E9DE5BB15671546E57F3AFAFD07F8AD303F79787917E5B022C43EADAC69F58A2B866A5EB7760FAFC7366A72530434C34252EE3A3FF0C8D8F21AECD438E12D13FA875015AEA1D77A
	263FC67A167BEE1730342847E2AB596A923268676FB56C9B761031062569576CB5646B749A726D8948487D566456A8B289EF3D4B64A41F691244F9C6BE79C02989E43F97FBC991648B77GFFFC50E96FF3E834A607294362BA23615F1457ECA6C2FA7BE90D4B2EA1DF2357C8966F6E7D17C0A7DF3A52F4F8251CC216C7A3F87C061D73E2DFED68DDACACBDA42CA34FF76A41AE72F9BF512CB339706F24558A198E7237D448FD4BA1A13D17DE16743A4ED845BAA13F73FB723703FADD22F99FFE0C2C57A52C2EA31A
	CA49592ED23D29375BC5B62976548969B672975D04D5AC5BEA32F515322F886EA195A0246E2B217652033AE0EF9E351714D242CB49FBA8E773E70767C6AF9652EA0565D63B49DCEB6AF0591D0704CCD737D36C6D36DB4DEE47DED6D046E952E468AB4AD05C475CFD62EC89394766C61FF2CF98131518D58BEB8737D3A8251C64362204F310575D1C20CAF49EF2113FD0E7F7EE62F9972DF7EDF966605A26B4A1D5F21204BE476DF001D5CE132D37536E6C818BB4DE96E096AF28642A274A2E1E7C579334A0D954A5
	FC4AC2862225DD223D27F4DFE72745A67282A0FED07CA73CF842D36245334AFD456A43AFFE508E752D9396771415517F4B697FBB487F6594A927C8798E8862C2416FBF6FFCB7EDF0F9AE56C8401E9CEA8F296612DA28A957ABEFBFF5636C6A05C960DD2D30047EC5A188F62E4C45DEA29C99F975A79F06A4DCCA6A42C11A84163B345354E3311E019FBABAFC39893E514DB5914F8F517D3F049FABF6AFFE7D2645E9C2BA74F5369F8A0D17ECEAC263F5322E3F983A8EEDF7E4A1C61E4312F7E7F3FD74A13260A823
	A9F2B4135CF512A567CB2435FA706C70A1112610D862C3C22D5712D456003EC15015839BB901D7534C35747F0F06DC05C42A104A2EA78A490F4FBC63DD6966BEF97C9B540B8B58272FE51F30AD10C565328B5D6EDA596EA5125D0BBD6CA6B3E330C79BA4AD173C0C3878427366086C4DB2499B72EF49FF26B7467F2F6A4674EB3DA17F4C6050B81EB2C16A48056729D57634C37276EB8FAF7EA3C634BE598BD28F4B256B528B5D6E1FE53BB3A53B09FD699E6DEC0407EF240648F163B40FD9351C73606E63E40FF2
	48FB2A724C3B832808AC7D690788B478FD8765529F73701B8C1017A3FD7BC04356ADCA04FDBB01A0647B86E4214E44BD1768DDAA298B2ABA2EF48F88A37DE3B7BE3CA0015FB8C0A25DC3027094DDF81ECE709C6070B17D127F2C7A1A64D9DFC87E6AEB3D0784292B8C8F8972602148C37EF21554859505FB64A810E59C56E77A20DEDC40BEBDAC7BC406C0D2D7443E8C9FDEF856AC098256EC3A87CF11C7EA630038257B103820E2733467E4B7303EC9441E61BC29027C190D74CC4A30753C72EF9F250CD86B73EF
	24C5246A58F9E669AA7F6D2337769227D3G4FCF53C96FBF6C59CBDE447175F7986AFBCCD62B4BE4BD354FE6A6FF13E17F9917A8FF83FE61DED2FEAF72C819AC6F7D3D446E138A197F8BD0CB87887ED8428778A7GGD405GGD0CB818294G94G88G88GE4D385AD7ED8428778A7GGD405GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGB2A8GGGG
**end of data**/
}

/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private String getChangeCondition( String change )
{

	if( change.equalsIgnoreCase("After a Duration") )
	{
		return LMProgramDirectGear.CHANGE_DURATION;
	}
	else if( change.equalsIgnoreCase("Priority Change") )
	{
		return LMProgramDirectGear.CHANGE_PRIORITY;
	}
	else if( change.equalsIgnoreCase("Above Trigger") )
	{
		return LMProgramDirectGear.CHANGE_TRIGGER_OFFSET;
	}	
	else
		return LMProgramDirectGear.CHANGE_NONE;

}


/**
 * Return the JComboBoxCycleCountSndType property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxCycleCountSndType() {
	if (ivjJComboBoxCycleCountSndType == null) {
		try {
			ivjJComboBoxCycleCountSndType = new javax.swing.JComboBox();
			ivjJComboBoxCycleCountSndType.setName("JComboBoxCycleCountSndType");
			ivjJComboBoxCycleCountSndType.setPreferredSize(new java.awt.Dimension(136, 23));
			ivjJComboBoxCycleCountSndType.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxCycleCountSndType.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxCycleCountSndType.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.OPTION_FIXED_COUNT ) );
			ivjJComboBoxCycleCountSndType.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.OPTION_COUNT_DOWN ) );
			ivjJComboBoxCycleCountSndType.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.OPTION_LIMITED_COUNT_DOWN ) );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxCycleCountSndType;
}

/**
 * Return the JComboBoxHowToStop property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxHowToStop() {
	if (ivjJComboBoxHowToStop == null) {
		try {
			ivjJComboBoxHowToStop = new javax.swing.JComboBox();
			ivjJComboBoxHowToStop.setName("JComboBoxHowToStop");
			ivjJComboBoxHowToStop.setPreferredSize(new java.awt.Dimension(133, 23));
			ivjJComboBoxHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_TIME_IN ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RESTORE ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxHowToStop;
}

/**
 * Return the JComboBoxMaxCycleCount property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxMaxCycleCount() {
	if (ivjJComboBoxMaxCycleCount == null) {
		try {
			ivjJComboBoxMaxCycleCount = new javax.swing.JComboBox();
			ivjJComboBoxMaxCycleCount.setName("JComboBoxMaxCycleCount");
			ivjJComboBoxMaxCycleCount.setPreferredSize(new java.awt.Dimension(136, 23));
			ivjJComboBoxMaxCycleCount.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxMaxCycleCount.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxMaxCycleCount.addItem( com.cannontech.common.util.CtiUtilities.STRING_NONE );
			for( int i = 1; i <= 16; i++ )
				ivjJComboBoxMaxCycleCount.addItem( new Integer(i) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxMaxCycleCount;
}

/**
 * Return the JComboBoxPeriodCount property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxPeriodCount() {
	if (ivjJComboBoxPeriodCount == null) {
		try {
			ivjJComboBoxPeriodCount = new javax.swing.JComboBox();
			ivjJComboBoxPeriodCount.setName("JComboBoxPeriodCount");
			ivjJComboBoxPeriodCount.setPreferredSize(new java.awt.Dimension(136, 23));
			ivjJComboBoxPeriodCount.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxPeriodCount.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			for( int i = 1; i < 49; i++ )
				ivjJComboBoxPeriodCount.addItem( new Integer(i) );

			//default value
			ivjJComboBoxPeriodCount.setSelectedItem( new Integer(8) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxPeriodCount;
}

/**
 * Return the JComboBoxSendRate property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRate() {
	if (ivjJComboBoxSendRate == null) {
		try {
			ivjJComboBoxSendRate = new javax.swing.JComboBox();
			ivjJComboBoxSendRate.setName("JComboBoxSendRate");
			ivjJComboBoxSendRate.setPreferredSize(new java.awt.Dimension(136, 23));
			ivjJComboBoxSendRate.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRate.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxSendRate.addItem("1 minute");
			ivjJComboBoxSendRate.addItem("2 minutes");
			ivjJComboBoxSendRate.addItem("5 minutes");
			ivjJComboBoxSendRate.addItem("10 minutes");
			ivjJComboBoxSendRate.addItem("15 minutes");
			ivjJComboBoxSendRate.addItem("20 minutes");
			ivjJComboBoxSendRate.addItem("30 minutes");
			ivjJComboBoxSendRate.addItem("45 minutes");
			ivjJComboBoxSendRate.addItem("1 hour");
			ivjJComboBoxSendRate.addItem("2 hours");
			ivjJComboBoxSendRate.addItem("3 hours");
			ivjJComboBoxSendRate.addItem("4 hours");
			ivjJComboBoxSendRate.addItem("5 hours");
			ivjJComboBoxSendRate.addItem("6 hours");
			ivjJComboBoxSendRate.addItem("7 hours");
			ivjJComboBoxSendRate.addItem("8 hours");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRate;
}

/**
 * Return the JComboBoxWhenChange property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxWhenChange() {
	if (ivjJComboBoxWhenChange == null) {
		try {
			ivjJComboBoxWhenChange = new javax.swing.JComboBox();
			ivjJComboBoxWhenChange.setName("JComboBoxWhenChange");
			ivjJComboBoxWhenChange.setPreferredSize(new java.awt.Dimension(205, 23));
			ivjJComboBoxWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxWhenChange.addItem("Manually Only");
			ivjJComboBoxWhenChange.addItem("After a Duration");
			ivjJComboBoxWhenChange.addItem("Priority Change");
			ivjJComboBoxWhenChange.addItem("Above Trigger");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxWhenChange;
}

/**
 * Return the JCSpinFieldChangeDuration property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeDuration() {
	if (ivjJCSpinFieldChangeDuration == null) {
		try {
			ivjJCSpinFieldChangeDuration = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeDuration.setName("JCSpinFieldChangeDuration");
			ivjJCSpinFieldChangeDuration.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJCSpinFieldChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeDuration.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeDuration.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(3)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeDuration;
}

/**
 * Return the JCSpinFieldChangePriority property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangePriority() {
	if (ivjJCSpinFieldChangePriority == null) {
		try {
			ivjJCSpinFieldChangePriority = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangePriority.setName("JCSpinFieldChangePriority");
			ivjJCSpinFieldChangePriority.setPreferredSize(new java.awt.Dimension(30, 20));
			ivjJCSpinFieldChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangePriority.setMaximumSize(new java.awt.Dimension(40, 30));
			// user code begin {1}
			ivjJCSpinFieldChangePriority.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(9999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(0)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangePriority;
}

/**
 * Return the JCSpinFieldChangeTriggerNumber property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeTriggerNumber() {
	if (ivjJCSpinFieldChangeTriggerNumber == null) {
		try {
			ivjJCSpinFieldChangeTriggerNumber = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeTriggerNumber.setName("JCSpinFieldChangeTriggerNumber");
			ivjJCSpinFieldChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJCSpinFieldChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeTriggerNumber.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(1), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(1)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeTriggerNumber;
}

/**
 * Return the JCSpinFieldControlPercent property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldControlPercent() {
	if (ivjJCSpinFieldControlPercent == null) {
		try {
			ivjJCSpinFieldControlPercent = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldControlPercent.setName("JCSpinFieldControlPercent");
			ivjJCSpinFieldControlPercent.setPreferredSize(new java.awt.Dimension(48, 20));
			ivjJCSpinFieldControlPercent.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJCSpinFieldControlPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldControlPercent.setMaximumSize(new java.awt.Dimension(50, 20));
			// user code begin {1}
			ivjJCSpinFieldControlPercent.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(5), new Integer(100), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(50)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldControlPercent;
}

/**
 * Return the JCSpinFieldCyclePeriod property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldCyclePeriod() {
	if (ivjJCSpinFieldCyclePeriod == null) {
		try {
			ivjJCSpinFieldCyclePeriod = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldCyclePeriod.setName("JCSpinFieldCyclePeriod");
			ivjJCSpinFieldCyclePeriod.setPreferredSize(new java.awt.Dimension(48, 20));
			ivjJCSpinFieldCyclePeriod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJCSpinFieldCyclePeriod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldCyclePeriod.setMaximumSize(new java.awt.Dimension(50, 20));
			// user code begin {1}
			ivjJCSpinFieldCyclePeriod.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(1), new Integer(60), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(30)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldCyclePeriod;
}

/**
 * Return the JCSpinFieldPercentReduction property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldPercentReduction() {
	if (ivjJCSpinFieldPercentReduction == null) {
		try {
			ivjJCSpinFieldPercentReduction = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldPercentReduction.setName("JCSpinFieldPercentReduction");
			ivjJCSpinFieldPercentReduction.setPreferredSize(new java.awt.Dimension(49, 20));
			ivjJCSpinFieldPercentReduction.setMaximumSize(new java.awt.Dimension(50, 60));
			ivjJCSpinFieldPercentReduction.setMinimumSize(new java.awt.Dimension(40, 50));
			// user code begin {1}
			ivjJCSpinFieldPercentReduction.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(100), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(100)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));

			ivjJCSpinFieldPercentReduction.setValue( new Integer(100) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldPercentReduction;
}

/**
 * Return the JLabelChangeDuration property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeDuration() {
	if (ivjJLabelChangeDuration == null) {
		try {
			ivjJLabelChangeDuration = new javax.swing.JLabel();
			ivjJLabelChangeDuration.setName("JLabelChangeDuration");
			ivjJLabelChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeDuration.setText("Change Duration:");
			ivjJLabelChangeDuration.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeDuration.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeDuration;
}


/**
 * Return the JLabelChangePriority property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangePriority() {
	if (ivjJLabelChangePriority == null) {
		try {
			ivjJLabelChangePriority = new javax.swing.JLabel();
			ivjJLabelChangePriority.setName("JLabelChangePriority");
			ivjJLabelChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangePriority.setText("Change Priority:");
			ivjJLabelChangePriority.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangePriority.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangePriority;
}


/**
 * Return the JLabelChangeTriggerNumber property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerNumber() {
	if (ivjJLabelChangeTriggerNumber == null) {
		try {
			ivjJLabelChangeTriggerNumber = new javax.swing.JLabel();
			ivjJLabelChangeTriggerNumber.setName("JLabelChangeTriggerNumber");
			ivjJLabelChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerNumber.setText("Trigger Number:");
			ivjJLabelChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerNumber.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerNumber;
}


/**
 * Return the JLabelChangeTriggerOffset property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerOffset() {
	if (ivjJLabelChangeTriggerOffset == null) {
		try {
			ivjJLabelChangeTriggerOffset = new javax.swing.JLabel();
			ivjJLabelChangeTriggerOffset.setName("JLabelChangeTriggerOffset");
			ivjJLabelChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerOffset.setText("Trigger Offset:");
			ivjJLabelChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerOffset.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerOffset;
}


/**
 * Return the JLabelControlPercent property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelControlPercent() {
	if (ivjJLabelControlPercent == null) {
		try {
			ivjJLabelControlPercent = new javax.swing.JLabel();
			ivjJLabelControlPercent.setName("JLabelControlPercent");
			ivjJLabelControlPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelControlPercent.setText("Control Percent:");
			ivjJLabelControlPercent.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelControlPercent.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelControlPercent.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelControlPercent.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJLabelControlPercent.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelControlPercent;
}


/**
 * Return the JLabelCycleCntSndType property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCycleCntSndType() {
	if (ivjJLabelCycleCntSndType == null) {
		try {
			ivjJLabelCycleCntSndType = new javax.swing.JLabel();
			ivjJLabelCycleCntSndType.setName("JLabelCycleCntSndType");
			ivjJLabelCycleCntSndType.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelCycleCntSndType.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelCycleCntSndType.setText("Cycle Count Send Type:");
			ivjJLabelCycleCntSndType.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCycleCntSndType;
}


/**
 * Return the JLabelCyclePeriod property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCyclePeriod() {
	if (ivjJLabelCyclePeriod == null) {
		try {
			ivjJLabelCyclePeriod = new javax.swing.JLabel();
			ivjJLabelCyclePeriod.setName("JLabelCyclePeriod");
			ivjJLabelCyclePeriod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelCyclePeriod.setText("Cycle Period:");
			ivjJLabelCyclePeriod.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelCyclePeriod.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelCyclePeriod.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelCyclePeriod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJLabelCyclePeriod.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCyclePeriod;
}


/**
 * Return the JLabelHowToStop property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHowToStop() {
	if (ivjJLabelHowToStop == null) {
		try {
			ivjJLabelHowToStop = new javax.swing.JLabel();
			ivjJLabelHowToStop.setName("JLabelHowToStop");
			ivjJLabelHowToStop.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelHowToStop.setText("How to Stop Control:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHowToStop;
}


/**
 * Return the JLabelMaxCycleCnt property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMaxCycleCnt() {
	if (ivjJLabelMaxCycleCnt == null) {
		try {
			ivjJLabelMaxCycleCnt = new javax.swing.JLabel();
			ivjJLabelMaxCycleCnt.setName("JLabelMaxCycleCnt");
			ivjJLabelMaxCycleCnt.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMaxCycleCnt.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelMaxCycleCnt.setText("Max Cycle Count:");
			ivjJLabelMaxCycleCnt.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMaxCycleCnt;
}


/**
 * Return the JLabelMin property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMin() {
	if (ivjJLabelMin == null) {
		try {
			ivjJLabelMin = new javax.swing.JLabel();
			ivjJLabelMin.setName("JLabelMin");
			ivjJLabelMin.setText("(min.)");
			ivjJLabelMin.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelMin.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelMin.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMin.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJLabelMin.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMin;
}


/**
 * Return the JLabelMinutesChDur property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMinutesChDur() {
	if (ivjJLabelMinutesChDur == null) {
		try {
			ivjJLabelMinutesChDur = new javax.swing.JLabel();
			ivjJLabelMinutesChDur.setName("JLabelMinutesChDur");
			ivjJLabelMinutesChDur.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMinutesChDur.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelMinutesChDur.setText("(min.)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMinutesChDur;
}


/**
 * Return the JLabelPercentReduction property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPercentReduction() {
	if (ivjJLabelPercentReduction == null) {
		try {
			ivjJLabelPercentReduction = new javax.swing.JLabel();
			ivjJLabelPercentReduction.setName("JLabelPercentReduction");
			ivjJLabelPercentReduction.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelPercentReduction.setText("Group Capacity Reduction %:");
			ivjJLabelPercentReduction.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelPercentReduction.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPercentReduction;
}


/**
 * Return the JLabelPeriodCount property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPeriodCount() {
	if (ivjJLabelPeriodCount == null) {
		try {
			ivjJLabelPeriodCount = new javax.swing.JLabel();
			ivjJLabelPeriodCount.setName("JLabelPeriodCount");
			ivjJLabelPeriodCount.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelPeriodCount.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelPeriodCount.setText("Starting Period Count:");
			ivjJLabelPeriodCount.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPeriodCount;
}


/**
 * Return the JLabelSendRate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSendRate() {
	if (ivjJLabelSendRate == null) {
		try {
			ivjJLabelSendRate = new javax.swing.JLabel();
			ivjJLabelSendRate.setName("JLabelSendRate");
			ivjJLabelSendRate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelSendRate.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelSendRate.setText("Command Resend Rate:");
			ivjJLabelSendRate.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSendRate;
}


/**
 * Return the JLabelWhenChange property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelWhenChange() {
	if (ivjJLabelWhenChange == null) {
		try {
			ivjJLabelWhenChange = new javax.swing.JLabel();
			ivjJLabelWhenChange.setName("JLabelWhenChange");
			ivjJLabelWhenChange.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelWhenChange.setText("When to Change:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelWhenChange;
}


/**
 * Return the JPanelChangeMethod property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelChangeMethod() {
	if (ivjJPanelChangeMethod == null) {
		try {
			ivjJPanelChangeMethod = new javax.swing.JPanel();
			ivjJPanelChangeMethod.setName("JPanelChangeMethod");
			//ivjJPanelChangeMethod.setBorder(new com.ibm.uvm.abt.edit.DeletedClassView());
			ivjJPanelChangeMethod.setLayout(new java.awt.GridBagLayout());
			ivjJPanelChangeMethod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJPanelChangeMethod.setMaximumSize(new java.awt.Dimension(400, 100));
			ivjJPanelChangeMethod.setPreferredSize(new java.awt.Dimension(335, 97));
			ivjJPanelChangeMethod.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJPanelChangeMethod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);

			java.awt.GridBagConstraints constraintsJLabelChangeDuration = new java.awt.GridBagConstraints();
			constraintsJLabelChangeDuration.gridx = 1; constraintsJLabelChangeDuration.gridy = 2;
			constraintsJLabelChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeDuration.ipadx = -5;
			constraintsJLabelChangeDuration.ipady = 6;
			constraintsJLabelChangeDuration.insets = new java.awt.Insets(1, 5, 3, 5);
			getJPanelChangeMethod().add(getJLabelChangeDuration(), constraintsJLabelChangeDuration);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeDuration = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeDuration.gridx = 2; constraintsJCSpinFieldChangeDuration.gridy = 2;
			constraintsJCSpinFieldChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeDuration.ipadx = 34;
			constraintsJCSpinFieldChangeDuration.ipady = 19;
			constraintsJCSpinFieldChangeDuration.insets = new java.awt.Insets(1, 5, 3, 4);
			getJPanelChangeMethod().add(getJCSpinFieldChangeDuration(), constraintsJCSpinFieldChangeDuration);

			java.awt.GridBagConstraints constraintsJLabelMinutesChDur = new java.awt.GridBagConstraints();
			constraintsJLabelMinutesChDur.gridx = 3; constraintsJLabelMinutesChDur.gridy = 2;
			constraintsJLabelMinutesChDur.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelMinutesChDur.ipadx = 5;
			constraintsJLabelMinutesChDur.ipady = -2;
			constraintsJLabelMinutesChDur.insets = new java.awt.Insets(5, 5, 5, 3);
			getJPanelChangeMethod().add(getJLabelMinutesChDur(), constraintsJLabelMinutesChDur);

			java.awt.GridBagConstraints constraintsJLabelChangePriority = new java.awt.GridBagConstraints();
			constraintsJLabelChangePriority.gridx = 4; constraintsJLabelChangePriority.gridy = 2;
			constraintsJLabelChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangePriority.ipadx = -13;
			constraintsJLabelChangePriority.ipady = 6;
			constraintsJLabelChangePriority.insets = new java.awt.Insets(1, 3, 3, 3);
			getJPanelChangeMethod().add(getJLabelChangePriority(), constraintsJLabelChangePriority);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangePriority = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangePriority.gridx = 5; constraintsJCSpinFieldChangePriority.gridy = 2;
			constraintsJCSpinFieldChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangePriority.ipadx = 29;
			constraintsJCSpinFieldChangePriority.ipady = 19;
			constraintsJCSpinFieldChangePriority.insets = new java.awt.Insets(1, 4, 3, 8);
			getJPanelChangeMethod().add(getJCSpinFieldChangePriority(), constraintsJCSpinFieldChangePriority);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerNumber.gridx = 1; constraintsJLabelChangeTriggerNumber.gridy = 3;
			constraintsJLabelChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerNumber.ipadx = -45;
			constraintsJLabelChangeTriggerNumber.ipady = 6;
			constraintsJLabelChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 21, 5);
			getJPanelChangeMethod().add(getJLabelChangeTriggerNumber(), constraintsJLabelChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerOffset.gridx = 4; constraintsJLabelChangeTriggerOffset.gridy = 3;
			constraintsJLabelChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerOffset.ipadx = -63;
			constraintsJLabelChangeTriggerOffset.insets = new java.awt.Insets(8, 3, 23, 13);
			getJPanelChangeMethod().add(getJLabelChangeTriggerOffset(), constraintsJLabelChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJTextFieldChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJTextFieldChangeTriggerOffset.gridx = 5; constraintsJTextFieldChangeTriggerOffset.gridy = 3;
			constraintsJTextFieldChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextFieldChangeTriggerOffset.weightx = 1.0;
			constraintsJTextFieldChangeTriggerOffset.ipadx = 26;
			constraintsJTextFieldChangeTriggerOffset.insets = new java.awt.Insets(4, 4, 21, 8);
			getJPanelChangeMethod().add(getJTextFieldChangeTriggerOffset(), constraintsJTextFieldChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeTriggerNumber.gridx = 2; constraintsJCSpinFieldChangeTriggerNumber.gridy = 3;
			constraintsJCSpinFieldChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeTriggerNumber.ipadx = 34;
			constraintsJCSpinFieldChangeTriggerNumber.ipady = 19;
			constraintsJCSpinFieldChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 21, 4);
			getJPanelChangeMethod().add(getJCSpinFieldChangeTriggerNumber(), constraintsJCSpinFieldChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelWhenChange = new java.awt.GridBagConstraints();
			constraintsJLabelWhenChange.gridx = 1; constraintsJLabelWhenChange.gridy = 1;
			constraintsJLabelWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelWhenChange.ipadx = 3;
			constraintsJLabelWhenChange.ipady = 4;
			constraintsJLabelWhenChange.insets = new java.awt.Insets(4, 5, 4, 5);
			getJPanelChangeMethod().add(getJLabelWhenChange(), constraintsJLabelWhenChange);

			java.awt.GridBagConstraints constraintsJComboBoxWhenChange = new java.awt.GridBagConstraints();
			constraintsJComboBoxWhenChange.gridx = 2; constraintsJComboBoxWhenChange.gridy = 1;
			constraintsJComboBoxWhenChange.gridwidth = 4;
			constraintsJComboBoxWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJComboBoxWhenChange.weightx = 1.0;
			constraintsJComboBoxWhenChange.ipadx = 79;
			constraintsJComboBoxWhenChange.insets = new java.awt.Insets(4, 5, 1, 17);
			getJPanelChangeMethod().add(getJComboBoxWhenChange(), constraintsJComboBoxWhenChange);
			// user code begin {1}
			jComboBoxWhenChange_ActionPerformed(null);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelChangeMethod;
}

/**
 * Return the JTextFieldChangeTriggerOffset property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldChangeTriggerOffset() {
	if (ivjJTextFieldChangeTriggerOffset == null) {
		try {
			ivjJTextFieldChangeTriggerOffset = new javax.swing.JTextField();
			ivjJTextFieldChangeTriggerOffset.setName("JTextFieldChangeTriggerOffset");
			ivjJTextFieldChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(30, 20));
			ivjJTextFieldChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJTextFieldChangeTriggerOffset.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999.9999, 99999.9999, 4) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldChangeTriggerOffset;
}

/**
 * getValue method comment.
 */
public Object getValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	gear = (LMProgramDirectGear)o;
	
	if( getJComboBoxHowToStop().getSelectedItem() != null )
	{
		gear.setMethodStopType( 
			com.cannontech.common.util.StringUtils.removeChars( ' ', getJComboBoxHowToStop().getSelectedItem().toString() ) );
	}

	gear.setPercentReduction( new Integer( ((Number)getJCSpinFieldPercentReduction().getValue()).intValue() ) );

	gear.setChangeCondition( getChangeCondition(getJComboBoxWhenChange().getSelectedItem().toString()) );
	
	gear.setChangeDuration( new Integer( ((Number)getJCSpinFieldChangeDuration().getValue()).intValue() * 60 ) );
	gear.setChangePriority( new Integer( ((Number)getJCSpinFieldChangePriority().getValue()).intValue() ) );
	gear.setChangeTriggerNumber( new Integer( ((Number)getJCSpinFieldChangeTriggerNumber().getValue()).intValue() ) );
	
	if( getJTextFieldChangeTriggerOffset().getText() == null || getJTextFieldChangeTriggerOffset().getText().length() <= 0 )
		gear.setChangeTriggerOffset( new Double(0.0) );
	else
		gear.setChangeTriggerOffset( Double.valueOf(getJTextFieldChangeTriggerOffset().getText()) );

	com.cannontech.database.data.device.lm.SmartCycleGear s = (com.cannontech.database.data.device.lm.SmartCycleGear)gear;

	s.setControlPercent( new Integer( 
		((Number)getJCSpinFieldControlPercent().getValue()).intValue() ) );

	s.setCyclePeriodLength( new Integer( 
			((Number)getJCSpinFieldCyclePeriod().getValue()).intValue() * 60 ) );

	s.setStartingPeriodCnt( (Integer)getJComboBoxPeriodCount().getSelectedItem() );

	s.setResendRate( com.cannontech.common.util.CtiUtilities.getIntervalComboBoxSecondsValue( getJComboBoxSendRate() ) );

	if( getJComboBoxMaxCycleCount().getSelectedItem() == null
			|| getJComboBoxMaxCycleCount().getSelectedItem() instanceof String )
	{
		s.setMethodOptionMax( new Integer(0) );
	}
	else
		s.setMethodOptionMax( (Integer)getJComboBoxMaxCycleCount().getSelectedItem() );

	s.setMethodOptionType( StringUtils.removeChars( ' ', getJComboBoxCycleCountSndType().getSelectedItem().toString() ) );
	
	return s;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	getJCSpinFieldChangeDuration().addValueListener(this);
	getJCSpinFieldChangePriority().addValueListener(this);
	getJCSpinFieldChangeTriggerNumber().addValueListener(this);
	getJCSpinFieldControlPercent().addValueListener(this);
	getJCSpinFieldCyclePeriod().addValueListener(this);
	getJCSpinFieldPercentReduction().addValueListener(this);
	getJComboBoxWhenChange().addActionListener(this);
	getJComboBoxPeriodCount().addActionListener(this);
	getJComboBoxSendRate().addActionListener(this);
	getJComboBoxHowToStop().addActionListener(this);
	getJComboBoxCycleCountSndType().addActionListener(this);
	getJComboBoxMaxCycleCount().addActionListener(this);
	getJTextFieldChangeTriggerOffset().addCaretListener(this);

	// user code end
}

/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("SmartCycleGearPanel");
		setPreferredSize(new java.awt.Dimension(402, 430));
		setLayout(new java.awt.GridBagLayout());
		setSize(402, 430);

		java.awt.GridBagConstraints constraintsJLabelControlPercent = new java.awt.GridBagConstraints();
		constraintsJLabelControlPercent.gridx = 2; constraintsJLabelControlPercent.gridy = 2;
		constraintsJLabelControlPercent.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelControlPercent.ipadx = -7;
		constraintsJLabelControlPercent.insets = new java.awt.Insets(16, 10, 6, 24);
		add(getJLabelControlPercent(), constraintsJLabelControlPercent);

		java.awt.GridBagConstraints constraintsJCSpinFieldControlPercent = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldControlPercent.gridx = 3; constraintsJCSpinFieldControlPercent.gridy = 2;
		constraintsJCSpinFieldControlPercent.gridwidth = 3;
		constraintsJCSpinFieldControlPercent.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJCSpinFieldControlPercent.ipadx = 47;
		constraintsJCSpinFieldControlPercent.ipady = 19;
		constraintsJCSpinFieldControlPercent.insets = new java.awt.Insets(12, 1, 4, 214);
		add(getJCSpinFieldControlPercent(), constraintsJCSpinFieldControlPercent);

		java.awt.GridBagConstraints constraintsJCSpinFieldCyclePeriod = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldCyclePeriod.gridx = 3; constraintsJCSpinFieldCyclePeriod.gridy = 3;
		constraintsJCSpinFieldCyclePeriod.gridwidth = 3;
		constraintsJCSpinFieldCyclePeriod.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJCSpinFieldCyclePeriod.ipadx = 47;
		constraintsJCSpinFieldCyclePeriod.ipady = 19;
		constraintsJCSpinFieldCyclePeriod.insets = new java.awt.Insets(5, 1, 2, 214);
		add(getJCSpinFieldCyclePeriod(), constraintsJCSpinFieldCyclePeriod);

		java.awt.GridBagConstraints constraintsJLabelMin = new java.awt.GridBagConstraints();
		constraintsJLabelMin.gridx = 2; constraintsJLabelMin.gridy = 2;
		constraintsJLabelMin.gridwidth = -1;
constraintsJLabelMin.gridheight = -1;
		constraintsJLabelMin.ipadx = -112;
		constraintsJLabelMin.ipady = -14;
		add(getJLabelMin(), constraintsJLabelMin);

		java.awt.GridBagConstraints constraintsJLabelCyclePeriod = new java.awt.GridBagConstraints();
		constraintsJLabelCyclePeriod.gridx = 2; constraintsJLabelCyclePeriod.gridy = 3;
		constraintsJLabelCyclePeriod.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelCyclePeriod.ipadx = -4;
		constraintsJLabelCyclePeriod.insets = new java.awt.Insets(7, 10, 6, 21);
		add(getJLabelCyclePeriod(), constraintsJLabelCyclePeriod);

		java.awt.GridBagConstraints constraintsJLabelCycleCntSndType = new java.awt.GridBagConstraints();
		constraintsJLabelCycleCntSndType.gridx = 2; constraintsJLabelCycleCntSndType.gridy = 4;
		constraintsJLabelCycleCntSndType.gridwidth = 2;
		constraintsJLabelCycleCntSndType.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelCycleCntSndType.ipadx = 16;
		constraintsJLabelCycleCntSndType.insets = new java.awt.Insets(7, 10, 5, 3);
		add(getJLabelCycleCntSndType(), constraintsJLabelCycleCntSndType);

		java.awt.GridBagConstraints constraintsJComboBoxCycleCountSndType = new java.awt.GridBagConstraints();
		constraintsJComboBoxCycleCountSndType.gridx = 4; constraintsJComboBoxCycleCountSndType.gridy = 4;
		constraintsJComboBoxCycleCountSndType.gridwidth = 2;
		constraintsJComboBoxCycleCountSndType.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxCycleCountSndType.weightx = 1.0;
		constraintsJComboBoxCycleCountSndType.ipadx = 10;
		constraintsJComboBoxCycleCountSndType.insets = new java.awt.Insets(3, 4, 2, 103);
		add(getJComboBoxCycleCountSndType(), constraintsJComboBoxCycleCountSndType);

		java.awt.GridBagConstraints constraintsJLabelMaxCycleCnt = new java.awt.GridBagConstraints();
		constraintsJLabelMaxCycleCnt.gridx = 2; constraintsJLabelMaxCycleCnt.gridy = 5;
		constraintsJLabelMaxCycleCnt.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelMaxCycleCnt.ipadx = 36;
		constraintsJLabelMaxCycleCnt.insets = new java.awt.Insets(5, 10, 7, 0);
		add(getJLabelMaxCycleCnt(), constraintsJLabelMaxCycleCnt);

		java.awt.GridBagConstraints constraintsJComboBoxMaxCycleCount = new java.awt.GridBagConstraints();
		constraintsJComboBoxMaxCycleCount.gridx = 4; constraintsJComboBoxMaxCycleCount.gridy = 5;
		constraintsJComboBoxMaxCycleCount.gridwidth = 2;
		constraintsJComboBoxMaxCycleCount.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxMaxCycleCount.weightx = 1.0;
		constraintsJComboBoxMaxCycleCount.ipadx = 10;
		constraintsJComboBoxMaxCycleCount.insets = new java.awt.Insets(3, 4, 2, 103);
		add(getJComboBoxMaxCycleCount(), constraintsJComboBoxMaxCycleCount);

		java.awt.GridBagConstraints constraintsJLabelPeriodCount = new java.awt.GridBagConstraints();
		constraintsJLabelPeriodCount.gridx = 2; constraintsJLabelPeriodCount.gridy = 6;
		constraintsJLabelPeriodCount.gridwidth = 2;
		constraintsJLabelPeriodCount.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelPeriodCount.ipadx = 26;
		constraintsJLabelPeriodCount.insets = new java.awt.Insets(7, 10, 5, 3);
		add(getJLabelPeriodCount(), constraintsJLabelPeriodCount);

		java.awt.GridBagConstraints constraintsJComboBoxPeriodCount = new java.awt.GridBagConstraints();
		constraintsJComboBoxPeriodCount.gridx = 4; constraintsJComboBoxPeriodCount.gridy = 6;
		constraintsJComboBoxPeriodCount.gridwidth = 2;
		constraintsJComboBoxPeriodCount.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxPeriodCount.weightx = 1.0;
		constraintsJComboBoxPeriodCount.ipadx = 10;
		constraintsJComboBoxPeriodCount.insets = new java.awt.Insets(3, 4, 2, 103);
		add(getJComboBoxPeriodCount(), constraintsJComboBoxPeriodCount);

		java.awt.GridBagConstraints constraintsJLabelSendRate = new java.awt.GridBagConstraints();
		constraintsJLabelSendRate.gridx = 2; constraintsJLabelSendRate.gridy = 7;
		constraintsJLabelSendRate.gridwidth = 2;
		constraintsJLabelSendRate.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelSendRate.ipadx = 8;
		constraintsJLabelSendRate.insets = new java.awt.Insets(7, 10, 5, 3);
		add(getJLabelSendRate(), constraintsJLabelSendRate);

		java.awt.GridBagConstraints constraintsJComboBoxSendRate = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRate.gridx = 4; constraintsJComboBoxSendRate.gridy = 7;
		constraintsJComboBoxSendRate.gridwidth = 2;
		constraintsJComboBoxSendRate.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxSendRate.weightx = 1.0;
		constraintsJComboBoxSendRate.ipadx = 10;
		constraintsJComboBoxSendRate.insets = new java.awt.Insets(3, 4, 2, 103);
		add(getJComboBoxSendRate(), constraintsJComboBoxSendRate);

		java.awt.GridBagConstraints constraintsJPanelChangeMethod = new java.awt.GridBagConstraints();
		constraintsJPanelChangeMethod.gridx = 2; constraintsJPanelChangeMethod.gridy = 10;
		constraintsJPanelChangeMethod.gridwidth = 4;
		constraintsJPanelChangeMethod.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJPanelChangeMethod.weightx = 1.0;
		constraintsJPanelChangeMethod.weighty = 1.0;
		constraintsJPanelChangeMethod.insets = new java.awt.Insets(3, 5, 99, 62);
		add(getJPanelChangeMethod(), constraintsJPanelChangeMethod);

		java.awt.GridBagConstraints constraintsJLabelPercentReduction = new java.awt.GridBagConstraints();
		constraintsJLabelPercentReduction.gridx = 2; constraintsJLabelPercentReduction.gridy = 9;
		constraintsJLabelPercentReduction.gridwidth = 3;
		constraintsJLabelPercentReduction.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelPercentReduction.ipadx = 53;
		constraintsJLabelPercentReduction.ipady = 3;
		constraintsJLabelPercentReduction.insets = new java.awt.Insets(6, 10, 4, 4);
		add(getJLabelPercentReduction(), constraintsJLabelPercentReduction);

		java.awt.GridBagConstraints constraintsJLabelHowToStop = new java.awt.GridBagConstraints();
		constraintsJLabelHowToStop.gridx = 2; constraintsJLabelHowToStop.gridy = 8;
		constraintsJLabelHowToStop.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelHowToStop.ipadx = 4;
		constraintsJLabelHowToStop.insets = new java.awt.Insets(4, 10, 9, 13);
		add(getJLabelHowToStop(), constraintsJLabelHowToStop);

		java.awt.GridBagConstraints constraintsJComboBoxHowToStop = new java.awt.GridBagConstraints();
		constraintsJComboBoxHowToStop.gridx = 5; constraintsJComboBoxHowToStop.gridy = 8;
		constraintsJComboBoxHowToStop.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxHowToStop.weightx = 1.0;
		constraintsJComboBoxHowToStop.ipadx = 7;
		constraintsJComboBoxHowToStop.insets = new java.awt.Insets(2, 5, 4, 85);
		add(getJComboBoxHowToStop(), constraintsJComboBoxHowToStop);

		java.awt.GridBagConstraints constraintsJCSpinFieldPercentReduction = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldPercentReduction.gridx = 5; constraintsJCSpinFieldPercentReduction.gridy = 9;
		constraintsJCSpinFieldPercentReduction.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJCSpinFieldPercentReduction.ipadx = 9;
		constraintsJCSpinFieldPercentReduction.ipady = -30;
		constraintsJCSpinFieldPercentReduction.insets = new java.awt.Insets(4, 5, 3, 169);
		add(getJCSpinFieldPercentReduction(), constraintsJCSpinFieldPercentReduction);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	getJComboBoxWhenChange().setSelectedItem( LMProgramDirectGear.CHANGE_NONE );
	getJLabelSendRate().setText("Command Resend Rate:");
	getJComboBoxSendRate().setSelectedItem("1 hour");
	getJComboBoxHowToStop().removeItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_TIME_IN ) );		
	getJComboBoxHowToStop().addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_STOP_CYCLE ) );		
	getJComboBoxHowToStop().setSelectedItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_STOP_CYCLE ) );
		try
	{
		initConnections();
	}
	catch(Exception e)	{ }
	// user code end
}

/**
 * Comment
 */
public void jComboBoxWhenChange_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getJLabelChangeDuration().setVisible(false);
	getJCSpinFieldChangeDuration().setVisible(false);
	getJLabelMinutesChDur().setVisible(false);
	
	getJLabelChangePriority().setVisible(false);
	getJCSpinFieldChangePriority().setVisible(false);
	
	getJLabelChangeTriggerNumber().setVisible(false);
	getJCSpinFieldChangeTriggerNumber().setVisible(false);

	getJLabelChangeTriggerOffset().setVisible(false);
	getJTextFieldChangeTriggerOffset().setVisible(false);

	
	if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_NONE )
		 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Manually Only" ) )
	{
		//None
		return;
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_DURATION )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "After a Duration" ) )
	{
		//Duration
		getJLabelChangeDuration().setVisible(true);
		getJCSpinFieldChangeDuration().setVisible(true);
		getJLabelMinutesChDur().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_PRIORITY )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Priority Change" ) )
	{
		//Priority
		getJLabelChangePriority().setVisible(true);
		getJCSpinFieldChangePriority().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_TRIGGER_OFFSET )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Above Trigger" ) )
	{
		//TriggerOffset
		getJLabelChangeTriggerNumber().setVisible(true);
		getJCSpinFieldChangeTriggerNumber().setVisible(true);

		getJLabelChangeTriggerOffset().setVisible(true);
		getJTextFieldChangeTriggerOffset().setVisible(true);
	}
	else
		throw new Error("Unknown LMProgramDirectGear control condition found, the value = " + getJComboBoxWhenChange().getSelectedItem().toString() );


	fireInputUpdate();
	return;
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		SmartCycleGearPanel aSmartCycleGearPanel;
		aSmartCycleGearPanel = new SmartCycleGearPanel();
		frame.setContentPane(aSmartCycleGearPanel);
		frame.setSize(aSmartCycleGearPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.dbeditor.wizard.device.lmprogram.GenericGearPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private void setChangeCondition(String change) 
{
	if( change == null )
		return;

	if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_NONE) )
	{
		getJComboBoxWhenChange().setSelectedItem("Manually Only");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_DURATION) )
	{
		getJComboBoxWhenChange().setSelectedItem("After a Duration");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_PRIORITY) )
	{
		getJComboBoxWhenChange().setSelectedItem("Priority Change");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_TRIGGER_OFFSET) )
	{
		getJComboBoxWhenChange().setSelectedItem("Above Trigger");
	}	
	
}


/**
 * setValue method comment.
 */
public void setValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	if( o == null )
	{
		return;
	}
	else
		gear = (LMProgramDirectGear)o;

	getJComboBoxHowToStop().setSelectedItem( StringUtils.addCharBetweenWords( ' ', gear.getMethodStopType() ) );

	getJCSpinFieldPercentReduction().setValue( gear.getPercentReduction() );
	
	setChangeCondition( gear.getChangeCondition() );
	
	getJCSpinFieldChangeDuration().setValue( new Integer( gear.getChangeDuration().intValue() / 60 ) );
	getJCSpinFieldChangePriority().setValue( gear.getChangePriority() );
	getJCSpinFieldChangeTriggerNumber().setValue( gear.getChangeTriggerNumber() );	
	getJTextFieldChangeTriggerOffset().setText( gear.getChangeTriggerOffset().toString() );

	com.cannontech.database.data.device.lm.SmartCycleGear s = (com.cannontech.database.data.device.lm.SmartCycleGear)gear;

	getJCSpinFieldControlPercent().setValue( s.getControlPercent() );

	getJCSpinFieldCyclePeriod().setValue( new Integer( s.getCyclePeriodLength().intValue() / 60 ) );

	getJComboBoxPeriodCount().setSelectedItem( s.getStartingPeriodCnt() );
			
	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( getJComboBoxSendRate(), s.getResendRate().intValue() );

	if( s.getMethodOptionMax().intValue() > 0 )
		getJComboBoxMaxCycleCount().setSelectedItem( s.getMethodOptionMax() );
	else
		getJComboBoxMaxCycleCount().setSelectedItem( com.cannontech.common.util.CtiUtilities.STRING_NONE );
	
		getJComboBoxCycleCountSndType().setSelectedItem( StringUtils.addCharBetweenWords( ' ', s.getMethodOptionType() ) );
	
}
public void valueChanged(com.klg.jclass.util.value.JCValueEvent arg1) 
{
	//fire this event for all JCSpinFields!!
	this.fireInputUpdate();
}
}