package com.cannontech.dbeditor.wizard.device.lmprogram;


import com.cannontech.database.data.device.lm.LMProgramDirect;
/**
 * Insert the type's description here.
 * Creation date: (3/11/2004 2:55:06 PM)
 * @author: 
 */
public class LMProgramDirectNotificationPanel extends com.cannontech.common.gui.util.DataInputPanel implements com.klg.jclass.util.value.JCValueListener {
	private javax.swing.JLabel ivjJLabelMsgCanceled = null;
	private javax.swing.JLabel ivjJLabelMsgFooter = null;
	private javax.swing.JLabel ivjJLabelMsgHeader = null;
	private javax.swing.JLabel ivjJLabelMsgStoppedEarly = null;
	private javax.swing.JLabel ivjJLabelSubject = null;
	private javax.swing.JPanel ivjJPanelMessage = null;
	private javax.swing.JScrollPane ivjJScrollPaneMsgCanceled = null;
	private javax.swing.JScrollPane ivjJScrollPaneMsgFooter = null;
	private javax.swing.JScrollPane ivjJScrollPaneMsgHeader = null;
	private javax.swing.JScrollPane ivjJScrollPaneMsgStoppedEarly = null;
	private javax.swing.JTextField ivjJTextFieldSubject = null;
	private javax.swing.JTextPane ivjJTextPaneMsgCanceled = null;
	private javax.swing.JTextPane ivjJTextPaneMsgFooter = null;
	private javax.swing.JTextPane ivjJTextPaneMsgHeader = null;
	private javax.swing.JTextPane ivjJTextPaneMsgStoppedEarly = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldMinNotifyTime = null;
	private javax.swing.JLabel ivjJLabelMinNotifyTime = null;
	private javax.swing.JLabel ivjJLabelMinutesMNT = null;

class IvjEventHandler implements javax.swing.event.CaretListener {
		public void caretUpdate(javax.swing.event.CaretEvent e) {
			if (e.getSource() == LMProgramDirectNotificationPanel.this.getJTextFieldSubject()) 
				connEtoC1(e);
			if (e.getSource() == LMProgramDirectNotificationPanel.this.getJTextPaneMsgHeader()) 
				connEtoC2(e);
			if (e.getSource() == LMProgramDirectNotificationPanel.this.getJTextPaneMsgFooter()) 
				connEtoC3(e);
			if (e.getSource() == LMProgramDirectNotificationPanel.this.getJTextPaneMsgCanceled()) 
				connEtoC4(e);
			if (e.getSource() == LMProgramDirectNotificationPanel.this.getJTextPaneMsgStoppedEarly()) 
				connEtoC5(e);
		};
	};
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
/**
 * LMProgramDirectNotificationPanel constructor comment.
 */
public LMProgramDirectNotificationPanel() {
	super();
	initialize();
}
/**
 * connEtoC1:  (JTextFieldSubject.caret.caretUpdate(javax.swing.event.CaretEvent) --> LMProgramDirectNotificationPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (JTextPaneMsgHeader.caret.caretUpdate(javax.swing.event.CaretEvent) --> LMProgramDirectNotificationPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (JTextPaneMsgFooter.caret.caretUpdate(javax.swing.event.CaretEvent) --> LMProgramDirectNotificationPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JTextPaneMsgCanceled.caret.caretUpdate(javax.swing.event.CaretEvent) --> LMProgramDirectNotificationPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (JTextPaneMsgStoppedEarly.caret.caretUpdate(javax.swing.event.CaretEvent) --> LMProgramDirectNotificationPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GFAEDECB0GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E14DBC8DD815C556742DEDFE3B782DBDCBCF34EB3BFE46363651E6E525C5AD197579C30905BF959565CFD818141458D23D7CA858C5C5C5234415DAB4B0C27ED41648D490C181D9C5C0C0578B7785AEDE6E3D5E7BA297A57D4E4C3CE76EFB5F7B837214CFBC4F61FD674C1C19F34E1C19B9F3E65EAB24EE9F3BAAB6AED590E2D789725F3ED8C1489485A1377AD0AA62A26F7556880A3FAFGB688FB2C89A4B1
	41DBD31ABACA13A2A4B6A4C1B29552891AD11ACF61FD13105C303019A0DD3793GF93F0CED781767F67655E0BB09B45DF3A8991E6BG52C85BGA381D2049B8F254978F310DEA73F93080D9304567BC8194CE3E98AFC10DCAE8F724A81047BC91931075265FCBF4011B281708C3E0F158D07679A4A5D0DA545F239561B478BD1B336462DA5EDA96AC7283C1F519A64E706F087D5C43CB0262A811E25F567BB77371BFAF25B35C62349A8096DDD393AB6D12717CC165CBE7DA52DC5172B93AF6A5B45DCC30F59E26A
	34E8FBCACA2AEB6A58EB395EA236CB35A6C95F21EF57CAFA1331CEEB948D0290CA65B9FAAC09368572C03A6B81021BF20C68B0835E0B816A9EC019E62FAD15F976B9BFDE883BE31DDB197C9FE03284BFE017E95A38FB623DA6127A2753BEA2F4A9102E84E03CECA8C3DE26CEC4DE56D61032B110CEFD50DB1373A062C3A83E9C522DG52034863F7DFA10FCD179F96225B76472DF7432377030C37098F5AF98C08BD9777993523A7EB09ADC4C2DE6AC35E1AAC00EAG8300B740D6EA3FD7EAF64173E01BD4E66A69
	B1998F1A4D078CBACB0DC9A79A603D2484F2E45C89315DE451898233516347F2DC700360771023FD92E032B58AE8D37EA77EAAC8D2D15CAA9732CD1C33ADEE12DCC750C3F659129FA6FA5BDBCD749681F8C2C786944317D3FC5D43F6BC6B2BE95496C85A8CF9A18F231E1B56A1AF55896304147C83F109AEF8711D32A72EF8926321EE121D9726635B6B080E87G6F8BB081E09AC0B8C052E45471341A4241F4DC85E342E2549ACE763619359669D02F5E2093AD322EE79D7224EBD74068DE3EE6BA261771054ABE
	8AFD60FB17FA899D1F9917B9196923F432DDAF2C6DADE56E5AEE1D6CEC9B6BF89F5EC04704F9B26B43F80E7FB545FBA9702CEFB7D1BCC90F063CA8GD63E728841B7BD223611860A37BD22361197AB50C6FCA1AF8600756F37A748DCF96ED1EF4DG008F00BFC090C0B8C04C2358471BEAF78FF19C55A97A17518655EE0127E813AC5AAA23D5529A5B45862DC52FEDB308D6C1AEB3271668354D016EC5BA3E5B210DA322D1344893A34C17A298131515D9D03B01143108B437DE5FA3C283BDE6816BFD2BF693BC8D
	DA2BF44A2C53CA223D844BDFDECBEC62223681EA048A48D889A07A6A20F3EEBA3C9787202E3ACE925CE8C80F8FC03D980FEF0467B1B0EE51D0D2D22EEFA7ECE8AD7DE8232555E4918E0072150F415884B8773837A662F19C23EFB721AD162F3DC74819335F25AD9298789B33AB1F3F29ED71A8EB837021GB1G6901302E8662FA7B6C31A6C5BD0497523E32EE4297DDF79FF7ED3B2E20D226E1ED3C6150C63CECEB6AB10BE3F028ED2C121FCC7FF36B098D3702DCB6G5FC06C033B0EE7B05BBC24350AE80D47AD
	E0C8224E5EA32C6C1DF5E42D91AF0AC629DCB40BC69D3CD8E5DB3827EE0D5DCEBBCC5C069E20F8B2EF1501A1D9B9FEF25D860607BA14D60F79CF50FC2DA4D974ED3D12F8D214A43D3153CEBF1D72E2F518922D322C73CF91D9A7000C53G66F3D9CF7CFB13425E2ACD26733D66FAB212E43B7D062E4F91D0BE61896C7F1BAA087F154553B75334BD7F338AE55F7DD8C05A335BC741CF52C63C4236B68835C748B84079F3150CDF4373DBE9FEBD70B5G6087908490457590C6F9F4C57FE3704A5AD8C95BD0572F9E
	AB4385E6A307CF3837716A932EED7C448957B65EF442338D1FBB614A06D9DE6789A223294F2898930693E43EECB7990DA29D181CC4E07E745B75C48E3DD1AFB56AF51D22F4D2FF8976B265D308ED7F4066E4F84F1B0273E75FBFF17E4C3CF41790781F4FDC7ADB3EFFAA0E9BB905596318A97679137154F3120CB551A07600224ACC3DC609612DF43E177156F80A939BFEA034D9C76BC10795FA51208317269BE449E907F9C04A257F59D213552D3D283565DA7BC0E13934B7F24BC86EE1721A1D714DB77BB3865B
	8164F4G3E4AE86E45AA339B3273E47B59A42C4A3EE26705142F31F6D60ADAD067F5E3A69FF9797D774E3CD418CC52F56425GF929DB6F6544CB9971BA8C226E3AF1D348F8C959B5420917131249EC96F5073596C37FF56327082DAB1AC6E26B81B08602814227603A326CA44947F5C5DEBC4BCC86839B2610D77DA49903D7292F0163CAF8126D5F57717C3B87491FB7C8FEFC0D677C5DEE73199C2175A9E4BE92AF740A5061E4E1BCA676232FD83FD1155720B5745AFD50376A49BCECD02C298C7F4AA957734342
	D3E49DBD4F6B8FBF35DAA03EA42B134DE79334F4DFE65177008BC21C84B90ED1DE260CE378009CA46691824FF0GC65B36BF0348BDC8E77BCCA5755DFC84E39E822453G0A2732BA2529325FC84B55D7E239B0C8C73BAD17D40565521E027976A9F76582F839BAA85365361C79A8169B89E5463AA8977894A96743E39D3BB96EEE0ADB860B656D8938072BC9D146EEF456FC1773BE010427D97DE9CF2B7736871AC83D45002FFC9A47C1DB03523FBAE8351A5A75D45732ADECE8D42E898C37257193F842183342BE
	D7A75A501E529B892FE46FA123E51B387B6B6F84673D54E19AADC277352C0F0E77FAD399ECFFAA41A44B78125920977B8454438F954AF8CF407A1DF19AB7FAE815659FD06841AB76DC9C636936923207F79547EA27CC66F6766AF3FBA5BD5964E8A5AD1DDCD8100A45057ECA7DCE42D34053987F7930010C1BA8C8A77F1F37A693006DC59F21FBD452EEA960A4GB6365F6ED70EEDFF4007GC4833039740BCAE29357B8E14ABA1F1A3D117511EADEC4BD0E5BF4C0EEB7682F6304522B09AEE3D2A357EF08CB1E46
	74D7B44D2E47B43F5A389CGA65F8F15A81F971419B48D653BD72314AF9270E953E17E1A0EFA492FC23ABA400D1C0EF456D6B5DDA064AD64F40BB8DDB46072E6A0DDC72F1A2E8B723CE7A05DEDC711EEAC6066F33A07DA54F4A9B33DB5C5B35167EAACD00E3D40309DEE47DE65CC262356196A311759CC6C4586F86F19B876EEED5C2098FBA7405A3546CE180539DF5BC46CG66DBB9DD55C45A25732D00FBC48365FDAC5499G90829081109C04ED84B78D9A2BBAEC73902BFA0047FDF20218CC87026CFB66FAF8
	6F8AF25CC333384C853A6E8E8431384C9A0E3FC2713E8ABC6B1BF80AA769091017768C6ED1820F2863CE834FB836672BCA4BB1GA73ADCD5BAC0C547464D0E2CF41C9794432C24446E7F3275ECD223F2BD8BF9066DBF2361197CAC460EF7DCCA127949FC96E3AAD3DAC97D2D1036810C867087888608GC819057D367D342BB953315F5CCD1876FDB95345AFAA0727431B1D6854BA4C1B65CA075D17373A57A119C4E51F601E55CA9DD64EE2731F844F1133D0070BB52843313350A676D58DCF1E43CEF4EAF9662B
	64E1FC9E2FF045E7A4BC9302114F3F34A21F69414867DB4364F36520FC56873B62F31755951F86A86B45793C3D97797465FC7E716870783C4709CE4DE730CBBEAF1DF645E7B8140D61FCAEEDC1BED3E7635809BBCBF05510EE1D0D63E460B4B96F41B9344E24B7CA824E1F594D44BFB5D9741DFAA362F2A92E5DE4211BF40613DA5C478FAE37380E9F5C5062BAFEF0D30B679859EFDA5C4597D8BCEB8675AB8CA05FC8G06EBBCCDF0E3A0BD01630A28FEC2A09D41F127288D26BC672D49FA8E7B362F116C8FCAA1
	5D84B0G604B73C650BC227BC9001B8F904D7356B43A0BDF11FADC6191CA65B6547881850E3571255BB6D6F9281FGD997DD452992956F5BE83969DB56537E30DAC5AB1DB009B7A7673DA1ED96DC44E6EA35BD2200FB6B95C75648E58ECB2632FC81673865594406DD4CF154C9E4B69CC9FDE7621F26BD0FBE62DD17691996C983F8BD0F7A5EF58947126F734E3A7387DC208AAF1FB5343A375D67DBDD5B6E8B2DE44CD8CD3D16F6D1ED1FE12DE9BC4F3E22D4C9E28FD18BAB330452CBDACB2768E45F11141E6539
	23DF596AEE8CB01DBFD22954F98157F96761ED2EF5FE325D82BBF73A326099722255382F8A613A7F6093227B6490704D81CAC378BC2DC15D5707B86B3E8BF083AABC6353D82564331037FDD38536BDBA845BFE3C0534BD8D52E1G513C6DFBDB316D14B94EEDE7822EF80E2B363FBC2AEC3B08375DE645362B67E05B77C9246D91109E83B0F18E36BD2E975B8EF251F6986022DC36BD57216DBD3C6D7BCFE35BC9F3316DD8AA7781C8B7811867E25B6F36E05BA367BA37BD86F093663A3277443344EF3471340626
	7BB9EF2F15915BB4DB448E51E291F5AC1CAA444C257DCF675629709EBC9777D84653E4BDB0E87BCD3D30F0784FA36596707569G241BG3CGFC66B19F0F5962FDFDE4DCF7D834BDE002A74DE23BB0F2BE21BD560234D1D0BE89F0D9G15GDD7331CDC3AB2185C2FDCFEF8F651071D7F20670978C65C2F959F189C49EB62B5408D62B3653BEB79519C8DBC74BCE1A75C66A1A56680DB4DC52CFCE7DD81963A6B2479F2D5636813D5E88434DDAD3DB4F723ACC1B14F9F6D2B976F4A8C539AFCAFA0149DF7A826E1B
	9E5B2B4C2F1373A51E1FEAF415BF72853401779A518646GEE824054976CFDBE9F5EA3DEF035377877G31A961C53607584C71BA0AAFD260595E62DEBA6712F49764253E046B6541CB385686F2DC5699DCD7C3B82EAA9B575568171077B7D7FBBA0BCF8EF536E94623D1C36F31042A4F43ED941F972ABE8F97B4F89EFEG727CC2112738E464BD69E544C5B6A06F699C373589F9BF70B2726EDD6109777A175D71DE50CAF869FAD94DFBA9455BDED673BE3585F99F89F9911C2727DB11773AD790775BEE64DD47F1
	0F1FC75EC73E023CF7DABD71BE6695F73C6F6825670B2F28F95FCD71012F28F9FFD8C25E03A12F68D564E9F2AF726E4BF13F5F073C7BF35C534548FB702B487B4327BD713E70D5F73C77D2BDC63F2A667DAA45A70529F9CF64FACF033C01B064E98D57FB98474D2FC65E23B8AE3E96F9CFFB4DDB13739A39637616CE90F05E29BE1D81CF235817C11661DCED1F14DB8E330611DCA848AA5C131713D138B7AF1B45CE4676A9E3A7451FFC6DB6F6E2FE0D49BFC2FEA62C5AAA4B23E9463BD9811097759A4E4179679C
	766A04111212A3963D6E1036331A4E68ECDDBAC9E3AF04BE67F5DC17EE20F56AA0BDG6073BA46FAECBBB13E68FF67B8215A6BFB177749426AF746793FAE5FA7FB5D9E6B890EBD97475A3C5002EDA6AF705614AFA038BFBA441908AEE74731BD934B1F6D10CFFC24EF84E5FE3CC3DC0C707B18837D9E07FC222373B2BD13ED668E14ADE66684417060B7EE6F4AF9AFE0B2CD101F3E4FFFAEF8B59F0FE3362069345BC2D843D0EC017557153DBB85C54C753C21B3373B1D6C1EF2BB486A850E1CFDA9C31F22BFA5C9
	16A5FC81767B728EB73EB7DD4998DD54DE5CBFE6AC44BD65B1A3621A96222DA7B76118984DF14F56931C9F24A7F15C915A1F21100E64381C33B8F6D297A1EECC960E9D5DA29C770D83D94432A06D83B091A084A08AA0E5B10CAF00BAGB3004FE2246926B4810B595986091B1298E8A824E3963338E67A9B30963F41E2150C66414BE3BD4CAF24EDFC1F3848739E0E0E474576B2B972FB0A829762268E1B0CA77279A84A57ADD65E0F8873482BF27F1768219C42A6457BFA7939D6B5D6DC5161FD8A620FEDD60DBD
	BACE28DF56CD7D04D650F597G73733EBF03FE1E8F604683CC838887C88A07BE22F4966AB7E4C13AA89C6DA3B691ED66DCB8761B24A167EAA3F87A8ACD1333AA16DE2D996CAE89219DCCC76E003531FD50B66207D93FDD0FDFD31F458FF81D900EFACC64F154D040C58224AC7156648154ADC1BD1653B1EA0674409254639D95284771CBD0CF452DC4EFC1BCFD082649D99ECB4FE8994A1D9CC2BFFCBDAE98D29B4355A55347B23A0EC7G1F51CBD00FFF69C6BDE63E89FBC600A6G9B006F1B2847B728BFB58952
	D35FC4BDDE31229EA35FC4BDFD5DCB74167A96267750F4975763E3520FF537093461DA0FF3FF34B6DC691A6963F56A4B95818F875EC2BD5E3F8F75E8G1C9740D800C0003037D00F4B28EFA7C4F8EB12A3781AF19A75D89C01FA3A5CC274564A53B75274D82E4735C33295C2BFFCFB5CF99D6C31005A239770699D01FADCD60DFA1C8438A00088222F25305EADC5BD66D0BF339A52CDCB517F1A55227497D3FE37B90E78A72EFC1491CB19DEC6AFD51F35FD58C97779008FDB0AF162BC71EBF8B6E83B1DCF1F81D9
	E7B119C50B544F307416042C3F8D4D433B2B3DFD18F4CD57CC4776826FD1FFD6F81B6D85E2B97EA30ACFD66019CFFD93772953A0EF60ED0C31676AC93F05C1BA86A0F5997497C0B5C057B254E53FC86EE4F9BC1B2AB7192B450B22C19182E772DDEC39D67918DDBC11083E6B44C77EA2CC7A6552D8F7677E834B64FBEF72B36F394FA91E4977841DA703A0AF9CA0B952DB1389D08CD0970972BDA166B07908B99C14A4EDFB973D7D0042118B89F6B4897E486BF68A2153C53A710BDC6065731E3DCA1DF84B65464A
	4F09EE696A0CCA3AE9F239D0799969020E0D3BBDF4BDCDF8875E5F41B85322FA9287EBB3D9E8B0174541E26AF18C17C239FA0051GFE6F30739AC6F73645B9FE564BE3E08124ACC0523B602F3E4B683A5EA5E54A4E16FB6873F8999265E79150D482EC16532D703EC1FEE7B2BDC57D6E89008FF897F91B53CDE3E7F4D7A05FDA94F05FB2DFCB681DEEB5727C3737103D14A2324C6F9A327C5B3EF54EE7777FD87E3C14753CEDCEAA577DCF13C39EA31373862EECF12A976F72A1EFDDD7B7A8696D59F2FEE842E6E5
	3E727A9DAFA3E6FF6E540EE3C19643739BD0477068D95D3B98637329F2159F43730BF6394ACFD90E797F3545D5FEA64F3F6D322B7C62659817E8B688DC26EDE7368BEE772285FB7764E49464E54B7BCA718C6E4F2B17637EBC7A0CFAFF1EADA877573B4E2A7767058E79AB32547B73B58E7B736CEC757E7CB7B2BD1365D7BDF6D9222F8EC596365626A562F89B81327882CC82188F903D9C47C2E661C634F787EB46366FB15A5BDE5460216D7CE2E83B28907578CDA36E4F5322D00FE223DA0F0D8EFA3A35D12D47
	D8077C690DEABDDAE31579FFEFD46B916919AC1B4DF6D98AAA06A28B5363A37C1C3F8EE451810CG7083189A05FABC36DF2DC7F9784AED97DF3037BD32FB68FA8C6EC6BDAE64FACCBA6FD90FA567BD6B51F05E339E7FF05E339EAFDB6C3274D58DDD0F3770FB88696F41DE8E208E408CB07ABD546314AB29AABD729B4B346DBFD86DED0F5EB7F4BD4E5F07FA1C709E6AB12558339E8F95FB5623D46CD90FF796FB5663BC49AE0B38E568FADC444F2142C116980074773DB525G2D6F239E2FEECCD369516136B5ED
	7F03DEFB7B4FD48FDD171BEBD017836F23AEEBEABC6B72EA0DE7DD5ED763D9178BEABC6BF2DB1FDD169DA9C3110579FDB3A89D736F0EF76E905C6C85403BBB8AF59D274EC03D36135344F591FE7819B55BA248F9EB3A884F649B8E3D56203FC42F4F1E040246CE66277D1DFCD1AE7BEC89AD7677D14DBF45B7C20EBE621DBFE99BCC7EFDFA77F790766BDD5FC1A8573B3EBFF3D46F797B1B93FA775F5F1C56AB3F3FE17DBE4FC67AE6A258EFB0C094C0528A98C7AB5057FFC37F25C0FDFD97FE7EE1DDA73983C13E
	6014307D995D6EE51D5DBD78F71FAFF6133B53EDA6C9B275107A793D0BEE52DFB0F4A9126196F5939DD9741DDD92AB0A777669DAE190BBA81A459FEE21F172E2102BEE8546A4E2D2B0A6514AF1A9F4FE7407F4G47FDC55770E0C807F11CF7A33FDF44F11DB4FEDE9A8D69E8444DE8A338F310B6F35C6EF6249D08C6BF2D7B12FD5CBED91F61FE5C96969566E4946695E733FDEA66A9BC4B8A023A92D6629940E31F10BD68106EEF576BA503F8086EEC583CE6B80573DA69CABC8F72217BE189525EGFEAB714EF0
	7C99FE768438A85EFE6717BB146D6B5BFAF2FBAF7664EA5B24DC72B388A5A5353D86C3353CAD126753E35C674C79G5B6D27756BA0BDG608330DDE071EC9AE322FF115F3B42B13D768D10945BA33F160CFB64743B6F904A67AD0D7D2760663790BEE0FB43188F6C311348BF5D934F6A5CF1455ED75E17BD75D5619E52D7F959CC3E178670FC25686FF866B2338AF1860EBB3F8BF1FE9CB7F98B62C2B9AE78B23F8398434FC54EDCEB7C005535BF117B7BB13816999255EB59914141BFCAD42FE53FF7488FCED42F
	E5B7BA787B53BED12FE51BE4FA799B51C625ACA300AF5F984F31BEA6CBD8854A624FE5D9F74433AC870E28E5D96B306EDA0EF816456F08E7D966F4ABE5D988FCC58FC916C72D7C1C74C314E5095533ACDBA535AC3FF01025C672AC4BD54933ACAF6FD34AD28EFCB5FDB894D9B47C1C5940E579D733E7D94EB72BE5F94FC1165B1BBD4BB22B5933AC1F57A8E571833EA68DA28BDBE3DE3539DF67965B86DF67165968F7C330BE55771B65FBFFD1B6FA9F372343AA7275F425AD05632A2CF5A62B1EF8CFEC6E71CFA1
	B1BE49E4B2546B4D444315FD40BFDF85344062C81BB6F80AA32D92706E203C06006C84B64B7D94866F4761791500735DD77BC80C3E83569296D77A0E2E1791D0AE7AC3743977B712B292B04478094F3373F3C723A7FE928761A76BA3FB1C1635F54568480F8FDD030B205C010F101F575A9C795919EF672722FD30B81BA7FE4C5086FE97A45FD3BDB5587CBB70112B3B624503527D43052EB68897A81D6FC7C3BB83717F88FFAFA4095E01897CC89D8F5FC071C19F2963613F6371707910D77AB13F87FD4D6B8D23
	7BF418F4F557CC4764DACA7D08319F2B65FD1F627DBFD64BFB157BB513A0AFDD98A5477FD38B083DF8C1FA8CC0A040FC0088000458D11AB4009C0083GCDGE60091G3EG7EG81G41G8B8158788E98A0B1B4F767AE72E59D6AE4DB346C6E3EFCBFE0C02907E8280F4A9A471E997253D9FF418E5FCE944965AA65E72BDBBA73AEA51DD9AEB7C2FE7A3A25ABCFD752794B658265E708DB3AB91715F461F239987919926F0E2EAC71DA6DC33E43C87D79CC28176C37992E1662CA8157486BDF6471EE207B7AA33A
	1D6BFF275B397EC00F77775C579F354F397E157B1C6BCF396673B3D6D7FE0DF37DFBEB1475BB7B60981308AC343FE71510F7B6AFEFEDA4FBCB875F3982A6722CAFF5FA2D415479E5CEC6DECEC6FEC1B6529E7B56DE4F1F3F335773F85BD06AA962754C58CFE859B78E011B4899085EE8509B45B2764BC2DC6611F49F548472198198AE1D7AB0A3A06D8B40F43ACE913378D471BE76BA44AFA6DF07B6161F314B9423F83F714CCF5F769FFE52B6589C1CD5605E175BDDB038AFD7DC60BAE6313F40B9E6D1D660BAE6
	D1D5200CD9B0DCED8171BDBAE18DE86265CEF25CE90EEB22F592DC23DEA7F5F17CD94A9741D70A24C1446BA8DFFD9457A463748A5CE999E7ACA07EA8085CE5625F02D98B283F25B798D83A0F16519B41BD657A9820BC6A4DDA855FB7F09C611B0D2595F4BF6C8763E8A29FDF8D54AF1E8669799C77288D63A58BB96E0DAA24CDCAC05CADD9C81B4EF16FE7A1ED96475D348BE92BB9EE66D524BD47F1ABAEA02D0163DA5269EFFEC1FAAC4745527BEF93A1BD1563BAAEA1EDB047C5DCC65AA80E3B2D8CE913D6A10E
	FD07C16FCD820E791F5A1D49820F2152EEE678F45BDABB9E3BD91E977FF80A5805C442BBE4BE9470AC78E1BA2F95C35D65G2CECE173AAACAB60BC3974FB0157356E87C7BFBB7387D2078474DE3C0E9E1B231F3D75A021E7317A67EC982B1FG652782AC84C8D8BDCA1389406ACCB9CA6AAC07F49DG2BE37FA1FB9DEB33318EAF4877811888908290456B18C07BB6B5F114A6A3916B5016596BD8E761E7D8102F8398816087B0B591653024BB4ABA127679C2480F64E552AEB94A6ADBEEEF6307CB58C6C652A8CD
	91C0BD0084601304FCEE2636BF915201C9486723076DF5ECA847BAA2A1BFE18D6889209CC037864B2F2E3277CFCAB379EDD597EB60C1182C8C3084664BCB205C37ED476C34AF7DE7286BA75B47C75BF09FBF0270C47759BB7B557BF847336126FE75BE5E71EC78D77D6AFD7C85077C00FEF77BF8A64F749A3BBC7F1DF5ED7294E623BC81DC9EED36DA1EAF9C7879ED36DA1EFE077C273255723C64103F42692C5BD11EDD75F6F97EF6755A64A93220BCD1DC1EB60BE7F9FCACEAF916B864BFEDD14BF31FC3FE3445
	33BC7FE3324B73DE7F3549F347A59E977E846519FD4933BC711755721CF1089B6D392C1667D6877A4E4B1E65F9D3F10EBD2A6C5A6459D70E726838BCE239E7F9EEADD74BB35BC11EAD2755724CF3202FBC6DB98E7621EDF87B71626C61517D4BB2BC3A711706C7D7DAFE2DF46C772E6FB26500B27D178A2B2C96E123F30C7F607F3CB04F7FBF6529F1C2DC15303A0BAE40D5422ABE32C25B4C504B600E451E35DE90681901E3CAA03F1F3D46CD0ADC471CFC7DD231C5G0DA063FAAEE395F56A42AE961644AF38A3
	BECEC8G811913DBA5A490CF956434B0F9634149A55272E099D99C63F85D207A586312D0ACFFE019216D92353A8CD3C7C6FB2FC5526A8D64D4B1C38BA9ABD4AEDAB2FA60A523CD4CB0525F3692F51230BA2BC7EF4C4D16044F59D7189912A963A07DF4BA037E1470C52D2104B6C7FA6EF31991627D2E861156BA8C4B277EF74F6220D79A2C71E47D7C0C2C72A7C58BBD1896F56463F77917DFAB04B5E672EB89647BD31057CA9F2B2CD23FC12C96D2BBCE10DF8D33CA226EA09E45DAA5E1F3B5E9E9B7B9D65BDD29
	35F6C9E41B70ED3510E0A43FD1ABECE459862D31F3B7BB7F7E16AAAD7660815AA17406AA703B0972CBEA496535ECFAF47D0EAF0EAE1C94AF44D5881F98CCDADD0536DDB2D92A04B5D217C534F6198CBA1B79FBD6D1D29FFED89F8F55ED656293E1F3C92018B3FD5EF63B775A703595F102E033883BE9C962546472923A32AE2D851A92ADD592794DDD13A513675D708FE967B3C7BEED0D93E2E5A1C997FCEAB3CB4015C5EB34F618ACBD40C1060A834C6295657EF6FA5EADF7FD50CCAB3213CA42F626B2A05D5DA9
	1AFAF69F6C68000DBA2FG748755EF635513B2392AB29BEDB7EFBEBA6763B6686FF2A13EA7AF0F7E4F277F8B487FFC0A4927187C82D0E2246071CF1DEF230637D5E2C642079069665C8A68A969452553473DD49A998152D5882B686F930132D36C25EAFBFB5AC44BAF7DEF592671897BB5698BB3B1892CF7F50736C7EF680717F23A2058887EEB9B37772DF2E7578130890446278F1E236C2D23D6C5301FB91B87C1EF23195B697FAF2FD9F8C215C9E9F7128649CB36A32785B60711093FB115A8890972975B1210
	A45FAFAD81A43BF8C75E5855B1F8DB03171F60FD1DFC01A7035E60A9F1A9EF2C9BF99338CA59CE1771CDCADD8FC59C327D7CBA2772E748D36D4F10277A1FA1CF4DBFC31E4E5958DD0B6C2B4A6FD422EFCCF67BDD33D7AA0B657B48CF7BF7AAB9923DF7837808D4BCAF993012EFFE5D5DCDBB5923B598A42D617CC1230E5CD3BB54AF09763BD17992295F0AE564CCB906A7913E3B95B47F8FD0CB8788030BD788F6A0GGCCE5GGD0CB818294G94G88G88GFAEDECB0030BD788F6A0GGCCE5GG8CGGG
	GGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG30A0GGGG
**end of data**/
}
/**
 * Return the JCSpinFieldMinNotifyTime property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldMinNotifyTime() {
	if (ivjJCSpinFieldMinNotifyTime == null) {
		try {
			ivjJCSpinFieldMinNotifyTime = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldMinNotifyTime.setName("JCSpinFieldMinNotifyTime");
			ivjJCSpinFieldMinNotifyTime.setToolTipText("Interval of time between the notification and the actual event");
			// user code begin {1}
			ivjJCSpinFieldMinNotifyTime.setDataProperties(
								new com.klg.jclass.field.DataProperties(
									new com.klg.jclass.field.validate.JCIntegerValidator(
									null, new Integer(1), new Integer(99999), null, true, 
									null, new Integer(1), "#,##0.###;-#,##0.###", false, 
									false, false, null, new Integer(120)), 
									new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
									new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
									new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldMinNotifyTime;
}
/**
 * Return the JLabelMinNotifyTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMinNotifyTime() {
	if (ivjJLabelMinNotifyTime == null) {
		try {
			ivjJLabelMinNotifyTime = new javax.swing.JLabel();
			ivjJLabelMinNotifyTime.setName("JLabelMinNotifyTime");
			ivjJLabelMinNotifyTime.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelMinNotifyTime.setText("Notify to Action Interval:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMinNotifyTime;
}
/**
 * Return the JLabelMinutesMNT property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMinutesMNT() {
	if (ivjJLabelMinutesMNT == null) {
		try {
			ivjJLabelMinutesMNT = new javax.swing.JLabel();
			ivjJLabelMinutesMNT.setName("JLabelMinutesMNT");
			ivjJLabelMinutesMNT.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMinutesMNT.setText("(min.)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMinutesMNT;
}
/**
 * Return the JLabelMsgCanceled property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMsgCanceled() {
	if (ivjJLabelMsgCanceled == null) {
		try {
			ivjJLabelMsgCanceled = new javax.swing.JLabel();
			ivjJLabelMsgCanceled.setName("JLabelMsgCanceled");
			ivjJLabelMsgCanceled.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelMsgCanceled.setText("Canceled:");
			ivjJLabelMsgCanceled.setBounds(9, 174, 75, 16);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMsgCanceled;
}
/**
 * Return the JLabelMsgFooter property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMsgFooter() {
	if (ivjJLabelMsgFooter == null) {
		try {
			ivjJLabelMsgFooter = new javax.swing.JLabel();
			ivjJLabelMsgFooter.setName("JLabelMsgFooter");
			ivjJLabelMsgFooter.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelMsgFooter.setText("Footer:");
			ivjJLabelMsgFooter.setBounds(9, 116, 88, 16);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMsgFooter;
}
/**
 * Return the JLabelMsgHeader property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMsgHeader() {
	if (ivjJLabelMsgHeader == null) {
		try {
			ivjJLabelMsgHeader = new javax.swing.JLabel();
			ivjJLabelMsgHeader.setName("JLabelMsgHeader");
			ivjJLabelMsgHeader.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelMsgHeader.setText("Header:");
			ivjJLabelMsgHeader.setBounds(9, 60, 109, 16);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMsgHeader;
}
/**
 * Return the JLabelMsgStoppedEarly property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMsgStoppedEarly() {
	if (ivjJLabelMsgStoppedEarly == null) {
		try {
			ivjJLabelMsgStoppedEarly = new javax.swing.JLabel();
			ivjJLabelMsgStoppedEarly.setName("JLabelMsgStoppedEarly");
			ivjJLabelMsgStoppedEarly.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelMsgStoppedEarly.setText("Stopped Early:");
			ivjJLabelMsgStoppedEarly.setBounds(9, 232, 107, 16);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMsgStoppedEarly;
}
/**
 * Return the JLabelSubject property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSubject() {
	if (ivjJLabelSubject == null) {
		try {
			ivjJLabelSubject = new javax.swing.JLabel();
			ivjJLabelSubject.setName("JLabelSubject");
			ivjJLabelSubject.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelSubject.setText("Subject:");
			ivjJLabelSubject.setBounds(9, 25, 56, 20);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSubject;
}
/**
 * Return the JPanelMessage property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelMessage() {
	if (ivjJPanelMessage == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder.setTitle("Message");
			ivjJPanelMessage = new javax.swing.JPanel();
			ivjJPanelMessage.setName("JPanelMessage");
			ivjJPanelMessage.setPreferredSize(new java.awt.Dimension(343, 308));
			ivjJPanelMessage.setBorder(ivjLocalBorder);
			ivjJPanelMessage.setLayout(null);
			ivjJPanelMessage.setMinimumSize(new java.awt.Dimension(335, 300));
			getJPanelMessage().add(getJLabelSubject(), getJLabelSubject().getName());
			getJPanelMessage().add(getJTextFieldSubject(), getJTextFieldSubject().getName());
			getJPanelMessage().add(getJScrollPaneMsgHeader(), getJScrollPaneMsgHeader().getName());
			getJPanelMessage().add(getJScrollPaneMsgFooter(), getJScrollPaneMsgFooter().getName());
			getJPanelMessage().add(getJLabelMsgHeader(), getJLabelMsgHeader().getName());
			getJPanelMessage().add(getJLabelMsgFooter(), getJLabelMsgFooter().getName());
			getJPanelMessage().add(getJScrollPaneMsgCanceled(), getJScrollPaneMsgCanceled().getName());
			getJPanelMessage().add(getJLabelMsgCanceled(), getJLabelMsgCanceled().getName());
			getJPanelMessage().add(getJLabelMsgStoppedEarly(), getJLabelMsgStoppedEarly().getName());
			getJPanelMessage().add(getJScrollPaneMsgStoppedEarly(), getJScrollPaneMsgStoppedEarly().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelMessage;
}
/**
 * Return the JScrollPaneMsgCanceled property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPaneMsgCanceled() {
	if (ivjJScrollPaneMsgCanceled == null) {
		try {
			ivjJScrollPaneMsgCanceled = new javax.swing.JScrollPane();
			ivjJScrollPaneMsgCanceled.setName("JScrollPaneMsgCanceled");
			ivjJScrollPaneMsgCanceled.setBounds(9, 193, 322, 35);
			getJScrollPaneMsgCanceled().setViewportView(getJTextPaneMsgCanceled());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPaneMsgCanceled;
}
/**
 * Return the JScrollPaneMsgFooter property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPaneMsgFooter() {
	if (ivjJScrollPaneMsgFooter == null) {
		try {
			ivjJScrollPaneMsgFooter = new javax.swing.JScrollPane();
			ivjJScrollPaneMsgFooter.setName("JScrollPaneMsgFooter");
			ivjJScrollPaneMsgFooter.setBounds(9, 134, 322, 35);
			getJScrollPaneMsgFooter().setViewportView(getJTextPaneMsgFooter());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPaneMsgFooter;
}
/**
 * Return the JScrollPaneMsgHeader property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPaneMsgHeader() {
	if (ivjJScrollPaneMsgHeader == null) {
		try {
			ivjJScrollPaneMsgHeader = new javax.swing.JScrollPane();
			ivjJScrollPaneMsgHeader.setName("JScrollPaneMsgHeader");
			ivjJScrollPaneMsgHeader.setBounds(9, 77, 322, 35);
			getJScrollPaneMsgHeader().setViewportView(getJTextPaneMsgHeader());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPaneMsgHeader;
}
/**
 * Return the JScrollPaneMsgStoppedEarly property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPaneMsgStoppedEarly() {
	if (ivjJScrollPaneMsgStoppedEarly == null) {
		try {
			ivjJScrollPaneMsgStoppedEarly = new javax.swing.JScrollPane();
			ivjJScrollPaneMsgStoppedEarly.setName("JScrollPaneMsgStoppedEarly");
			ivjJScrollPaneMsgStoppedEarly.setBounds(9, 250, 322, 35);
			getJScrollPaneMsgStoppedEarly().setViewportView(getJTextPaneMsgStoppedEarly());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPaneMsgStoppedEarly;
}
/**
 * Return the JTextFieldSubject property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldSubject() {
	if (ivjJTextFieldSubject == null) {
		try {
			ivjJTextFieldSubject = new javax.swing.JTextField();
			ivjJTextFieldSubject.setName("JTextFieldSubject");
			ivjJTextFieldSubject.setPreferredSize(new java.awt.Dimension(265, 20));
			ivjJTextFieldSubject.setBounds(71, 25, 260, 20);
			ivjJTextFieldSubject.setMinimumSize(new java.awt.Dimension(265, 20));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldSubject;
}
/**
 * Return the JTextPaneMsgCanceled property value.
 * @return javax.swing.JTextPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextPane getJTextPaneMsgCanceled() {
	if (ivjJTextPaneMsgCanceled == null) {
		try {
			ivjJTextPaneMsgCanceled = new javax.swing.JTextPane();
			ivjJTextPaneMsgCanceled.setName("JTextPaneMsgCanceled");
			ivjJTextPaneMsgCanceled.setPreferredSize(new java.awt.Dimension(185, 43));
			ivjJTextPaneMsgCanceled.setBounds(0, 0, 185, 43);
			ivjJTextPaneMsgCanceled.setMinimumSize(new java.awt.Dimension(185, 43));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextPaneMsgCanceled;
}
/**
 * Return the JTextPaneMsgFooter property value.
 * @return javax.swing.JTextPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextPane getJTextPaneMsgFooter() {
	if (ivjJTextPaneMsgFooter == null) {
		try {
			ivjJTextPaneMsgFooter = new javax.swing.JTextPane();
			ivjJTextPaneMsgFooter.setName("JTextPaneMsgFooter");
			ivjJTextPaneMsgFooter.setPreferredSize(new java.awt.Dimension(185, 43));
			ivjJTextPaneMsgFooter.setBounds(0, 0, 185, 43);
			ivjJTextPaneMsgFooter.setMinimumSize(new java.awt.Dimension(185, 43));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextPaneMsgFooter;
}
/**
 * Return the JTextPaneMsgHeader property value.
 * @return javax.swing.JTextPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextPane getJTextPaneMsgHeader() {
	if (ivjJTextPaneMsgHeader == null) {
		try {
			ivjJTextPaneMsgHeader = new javax.swing.JTextPane();
			ivjJTextPaneMsgHeader.setName("JTextPaneMsgHeader");
			ivjJTextPaneMsgHeader.setPreferredSize(new java.awt.Dimension(185, 43));
			ivjJTextPaneMsgHeader.setBounds(0, 0, 185, 43);
			ivjJTextPaneMsgHeader.setMinimumSize(new java.awt.Dimension(185, 43));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextPaneMsgHeader;
}
/**
 * Return the JTextPaneMsgStoppedEarly property value.
 * @return javax.swing.JTextPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextPane getJTextPaneMsgStoppedEarly() {
	if (ivjJTextPaneMsgStoppedEarly == null) {
		try {
			ivjJTextPaneMsgStoppedEarly = new javax.swing.JTextPane();
			ivjJTextPaneMsgStoppedEarly.setName("JTextPaneMsgStoppedEarly");
			ivjJTextPaneMsgStoppedEarly.setPreferredSize(new java.awt.Dimension(185, 43));
			ivjJTextPaneMsgStoppedEarly.setBounds(0, 0, 185, 43);
			ivjJTextPaneMsgStoppedEarly.setMinimumSize(new java.awt.Dimension(185, 43));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextPaneMsgStoppedEarly;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param o java.lang.Object
 */
public Object getValue(Object o) 
{
	LMProgramDirect program = (LMProgramDirect)o;

	if( getJTextFieldSubject().getText() == null || getJTextFieldSubject().getText().length() <= 0)
		program.getDirectProgram().setHeading( "(none)" );
	else
		program.getDirectProgram().setHeading( getJTextFieldSubject().getText() );

	if( getJTextPaneMsgHeader().getText() == null 
		 || getJTextPaneMsgHeader().getText().length() <= 0 )
		program.getDirectProgram().setMessageHeader("(none)");
	else
		program.getDirectProgram().setMessageHeader( getJTextPaneMsgHeader().getText() );

	if( getJTextPaneMsgFooter().getText() == null 
		 || getJTextPaneMsgFooter().getText().length() <= 0 )
		program.getDirectProgram().setMessageFooter("(none)");
	else
		program.getDirectProgram().setMessageFooter( getJTextPaneMsgFooter().getText() );

	if( getJTextPaneMsgCanceled().getText() == null 
		 || getJTextPaneMsgCanceled().getText().length() <= 0 )
		program.getDirectProgram().setCanceledMsg("(none)");
	else
		program.getDirectProgram().setCanceledMsg( getJTextPaneMsgCanceled().getText() );

	if( getJTextPaneMsgStoppedEarly().getText() == null 
		 || getJTextPaneMsgStoppedEarly().getText().length() <= 0 )
		program.getDirectProgram().setStoppedEarlyMsg("(none)");
	else
		program.getDirectProgram().setStoppedEarlyMsg( getJTextPaneMsgStoppedEarly().getText() );

	program.getDirectProgram().setNotifyInterval( new Integer( ((Number)getJCSpinFieldMinNotifyTime().getValue()).intValue() * 60 ) );

	return o;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	getJCSpinFieldMinNotifyTime().addValueListener( this );
	// user code end
	getJTextFieldSubject().addCaretListener(ivjEventHandler);
	getJTextPaneMsgHeader().addCaretListener(ivjEventHandler);
	getJTextPaneMsgFooter().addCaretListener(ivjEventHandler);
	getJTextPaneMsgCanceled().addCaretListener(ivjEventHandler);
	getJTextPaneMsgStoppedEarly().addCaretListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("LMProgramDirectNotificationPanel");
		setPreferredSize(new java.awt.Dimension(350, 360));
		setLayout(new java.awt.GridBagLayout());
		setSize(350, 360);
		setMinimumSize(new java.awt.Dimension(350, 360));

		java.awt.GridBagConstraints constraintsJPanelMessage = new java.awt.GridBagConstraints();
		constraintsJPanelMessage.gridx = 1; constraintsJPanelMessage.gridy = 1;
		constraintsJPanelMessage.gridwidth = 3;
		constraintsJPanelMessage.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelMessage.weightx = 1.0;
		constraintsJPanelMessage.weighty = 1.0;
		constraintsJPanelMessage.ipadx = 8;
		constraintsJPanelMessage.ipady = 1;
		constraintsJPanelMessage.insets = new java.awt.Insets(2, 3, 5, 4);
		add(getJPanelMessage(), constraintsJPanelMessage);

		java.awt.GridBagConstraints constraintsJCSpinFieldMinNotifyTime = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldMinNotifyTime.gridx = 2; constraintsJCSpinFieldMinNotifyTime.gridy = 2;
		constraintsJCSpinFieldMinNotifyTime.ipadx = 39;
		constraintsJCSpinFieldMinNotifyTime.ipady = 19;
		constraintsJCSpinFieldMinNotifyTime.insets = new java.awt.Insets(6, 5, 26, 10);
		add(getJCSpinFieldMinNotifyTime(), constraintsJCSpinFieldMinNotifyTime);

		java.awt.GridBagConstraints constraintsJLabelMinutesMNT = new java.awt.GridBagConstraints();
		constraintsJLabelMinutesMNT.gridx = 3; constraintsJLabelMinutesMNT.gridy = 2;
		constraintsJLabelMinutesMNT.insets = new java.awt.Insets(9, 11, 27, 80);
		add(getJLabelMinutesMNT(), constraintsJLabelMinutesMNT);

		java.awt.GridBagConstraints constraintsJLabelMinNotifyTime = new java.awt.GridBagConstraints();
		constraintsJLabelMinNotifyTime.gridx = 1; constraintsJLabelMinNotifyTime.gridy = 2;
		constraintsJLabelMinNotifyTime.ipadx = 7;
		constraintsJLabelMinNotifyTime.insets = new java.awt.Insets(7, 12, 26, 5);
		add(getJLabelMinNotifyTime(), constraintsJLabelMinNotifyTime);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

public boolean isInputValid() 
{
	return true;
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		LMProgramDirectNotificationPanel aLMProgramDirectNotificationPanel;
		aLMProgramDirectNotificationPanel = new LMProgramDirectNotificationPanel();
		frame.setContentPane(aLMProgramDirectNotificationPanel);
		frame.setSize(aLMProgramDirectNotificationPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * This method was created in VisualAge.
 * @param o java.lang.Object
 */
public void setValue(Object o) 
{
	LMProgramDirect program = (LMProgramDirect)o;

	if(program.getDirectProgram().getHeading().compareTo("(none)") != 0)
		getJTextFieldSubject().setText( program.getDirectProgram().getHeading() );
	
	if(program.getDirectProgram().getMessageHeader().compareTo("(none)") != 0)
		getJTextPaneMsgHeader().setText( program.getDirectProgram().getMessageHeader() );
		
	if(program.getDirectProgram().getMessageFooter().compareTo("(none)") != 0)
		getJTextPaneMsgFooter().setText( program.getDirectProgram().getMessageFooter() );
		
	if(program.getDirectProgram().getCanceledMsg().compareTo("(none)") != 0)
		getJTextPaneMsgCanceled().setText( program.getDirectProgram().getCanceledMsg() );
	
	if( program.getDirectProgram().getStoppedEarlyMsg().compareTo("(none)") != 0)
		getJTextPaneMsgStoppedEarly().setText( program.getDirectProgram().getStoppedEarlyMsg() );

	getJCSpinFieldMinNotifyTime().setValue( new Integer(program.getDirectProgram().getNotifyInterval().intValue() / 60) );
	
}

public void valueChanged(com.klg.jclass.util.value.JCValueEvent arg1) 
{
	//fire this event for all JCSpinFields!!
	this.fireInputUpdate();
}
/**
 * Method to handle events for the JCValueListener interface.
 * @param arg1 com.klg.jclass.util.value.JCValueEvent
 */
public void valueChanging(com.klg.jclass.util.value.JCValueEvent arg1) 
{
}

}
