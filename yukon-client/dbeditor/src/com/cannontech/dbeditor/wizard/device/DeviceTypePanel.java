package com.cannontech.dbeditor.wizard.device;

/**
 * This type was created in VisualAge.
 */
import java.awt.*;
import com.cannontech.database.db.*;
import com.cannontech.database.data.device.*;
import com.cannontech.database.data.pao.PAOGroups;
import com.cannontech.common.gui.util.DataInputPanel;
 
public class DeviceTypePanel extends com.cannontech.common.gui.util.DataInputPanel implements javax.swing.event.ListSelectionListener 
{
	private javax.swing.JLabel ivjTypeLabel = null;
	//CHANGE THESE STRINGS TO CONSTANTS AT LEAST AND GET THE THE STRINGS
	//BY CALLING DeviceTypes!!!!
	String deviceCategory[] = {
									"MCT",
									"Signal Transmitter",
									"Electronic Meter",
									"RTU",
									"Virtual"
								};
	String deviceType[][] = {
								{	//MCTs
									PAOGroups.STRING_MCT_370[0],
									PAOGroups.STRING_MCT_360[0],
									PAOGroups.STRING_MCT_318L[0],
									PAOGroups.STRING_MCT_318[0],
									PAOGroups.STRING_MCT_310ID[0],
									PAOGroups.STRING_MCT_310IL[0],
									PAOGroups.STRING_MCT_310[0],
									PAOGroups.STRING_MCT_250[0],
									PAOGroups.STRING_MCT_248[0],
									PAOGroups.STRING_MCT_240[0],
									PAOGroups.STRING_MCT_213[0],
									PAOGroups.STRING_MCT_210[0],
									PAOGroups.STRING_LMT_2[0],
									PAOGroups.STRING_DCT_501[0]
								},
								{	//Signal Transmitters									
									PAOGroups.STRING_CCU_710[0],
									PAOGroups.STRING_CCU_711[0],
									PAOGroups.STRING_LCU_415[0],
									PAOGroups.STRING_LCU_LG[0],
									PAOGroups.STRING_LCU_T3026[0],
									PAOGroups.STRING_LCU_ER[0],
									PAOGroups.STRING_REPEATER[1],
									PAOGroups.STRING_REPEATER_800[0],
									PAOGroups.STRING_TAP_TERMINAL[2],
									PAOGroups.STRING_WCTP_TERMINAL[0],
									PAOGroups.STRING_TCU_5000[0],
									PAOGroups.STRING_TCU_5500[0]
								},								
								{	//Electronic Meters
									PAOGroups.STRING_ALPHA_POWERPLUS[0],
									PAOGroups.STRING_ALPHA_A1[0],
									PAOGroups.STRING_DR_87[0],
									PAOGroups.STRING_FULCRUM[0],  // Schlumberger
									PAOGroups.STRING_LANDISGYR_RS4[0],
									PAOGroups.STRING_QUANTUM[0],
									PAOGroups.STRING_VECTRON[0],
									PAOGroups.STRING_SIXNET[0]
									
								},								
								{	//RTUs
									PAOGroups.STRING_DAVIS_WEATHER[0],									
									PAOGroups.STRING_RTU_ILEX[0],
									PAOGroups.STRING_RTU_WELCO[0]
								},
								{  // Virtual Devices
									PAOGroups.STRING_VIRTUAL_SYSTEM[0]
								}
							};
	
	private javax.swing.JList ivjDeviceCategoryList = null;
	private javax.swing.JScrollPane ivjDeviceCategoryScrollPane = null;
	private javax.swing.JList ivjDeviceTypeList = null;
	private javax.swing.JScrollPane ivjDeviceTypeScrollPane = null;
	private javax.swing.JPanel ivjListBoxPanel = null;
	private GridLayout ivjListBoxPanelGridLayout = null;
public DeviceTypePanel() {
	super();
	initialize();
}
/**
 * connEtoC1:  (TypeList.listSelection.valueChanged(javax.swing.event.ListSelectionEvent) --> DeviceTypePanel.typeList_ValueChanged(Ljavax.swing.event.ListSelectionEvent;)V)
 * @param arg1 javax.swing.event.ListSelectionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.ListSelectionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.deviceCategoryList_ValueChanged();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
public void deviceCategoryList_ValueChanged() {

	
	int selected = getDeviceCategoryList().getSelectedIndex();

	getDeviceTypeList().setListData( deviceType[selected] );

	getDeviceTypeList().setSelectedIndex(0);
	
	invalidate();
	repaint();
}
/**
 * Return the DeviceCategoryList property value.
 * @return javax.swing.JList
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JList getDeviceCategoryList() {
	if (ivjDeviceCategoryList == null) {
		try {
			ivjDeviceCategoryList = new javax.swing.JList();
			ivjDeviceCategoryList.setName("DeviceCategoryList");
			ivjDeviceCategoryList.setFont(new java.awt.Font("dialog", 0, 14));
			ivjDeviceCategoryList.setBounds(0, 0, 160, 120);
			ivjDeviceCategoryList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDeviceCategoryList;
}
/**
 * Return the DeviceCategoryScrollPane property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getDeviceCategoryScrollPane() {
	if (ivjDeviceCategoryScrollPane == null) {
		try {
			ivjDeviceCategoryScrollPane = new javax.swing.JScrollPane();
			ivjDeviceCategoryScrollPane.setName("DeviceCategoryScrollPane");
			getDeviceCategoryScrollPane().setViewportView(getDeviceCategoryList());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDeviceCategoryScrollPane;
}
/**
 * This method was created in VisualAge.
 * @return int
 */
public int getDeviceType() 
{
	return com.cannontech.database.data.pao.PAOGroups.getDeviceType( ((String)getDeviceTypeList().getSelectedValue()).trim() );
}
/**
 * Return the DeviceTypeList property value.
 * @return javax.swing.JList
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JList getDeviceTypeList() {
	if (ivjDeviceTypeList == null) {
		try {
			ivjDeviceTypeList = new javax.swing.JList();
			ivjDeviceTypeList.setName("DeviceTypeList");
			ivjDeviceTypeList.setFont(new java.awt.Font("dialog", 0, 14));
			ivjDeviceTypeList.setVisibleRowCount(12);
			ivjDeviceTypeList.setBounds(-9, 0, 169, 120);
			ivjDeviceTypeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDeviceTypeList;
}
/**
 * Return the DeviceTypeScrollPane property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getDeviceTypeScrollPane() {
	if (ivjDeviceTypeScrollPane == null) {
		try {
			ivjDeviceTypeScrollPane = new javax.swing.JScrollPane();
			ivjDeviceTypeScrollPane.setName("DeviceTypeScrollPane");
			ivjDeviceTypeScrollPane.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
			getDeviceTypeScrollPane().setViewportView(getDeviceTypeList());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDeviceTypeScrollPane;
}
/**
 * Return the ListBoxPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getListBoxPanel() {
	if (ivjListBoxPanel == null) {
		try {
			ivjListBoxPanel = new javax.swing.JPanel();
			ivjListBoxPanel.setName("ListBoxPanel");
			ivjListBoxPanel.setLayout(getListBoxPanelGridLayout());
			getListBoxPanel().add(getDeviceCategoryScrollPane(), getDeviceCategoryScrollPane().getName());
			getListBoxPanel().add(getDeviceTypeScrollPane(), getDeviceTypeScrollPane().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjListBoxPanel;
}
/**
 * Return the ListBoxPanelGridLayout property value.
 * @return java.awt.GridLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.GridLayout getListBoxPanelGridLayout() {
	java.awt.GridLayout ivjListBoxPanelGridLayout = null;
	try {
		/* Create part */
		ivjListBoxPanelGridLayout = new java.awt.GridLayout();
		ivjListBoxPanelGridLayout.setHgap(20);
		ivjListBoxPanelGridLayout.setColumns(2);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjListBoxPanelGridLayout;
}
/**
 * This method was created in VisualAge.
 * @return java.awt.Dimension
 */
public Dimension getMinimumSize() {
	return getPreferredSize();
}
/**
 * This method was created in VisualAge.
 * @return java.awt.Dimension
 */
public Dimension getPreferredSize() {
	return new Dimension( 350, 200);
}
/**
 * Return the TypeLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getTypeLabel() {
	if (ivjTypeLabel == null) {
		try {
			ivjTypeLabel = new javax.swing.JLabel();
			ivjTypeLabel.setName("TypeLabel");
			ivjTypeLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjTypeLabel.setText("Select the type of device:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTypeLabel;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param val java.lang.Object
 */
public Object getValue(Object val)
{
	//Determine the correct type of device and return it

	String typeString = (String) getDeviceTypeList().getSelectedValue();

	int type = com.cannontech.database.data.pao.PAOGroups.getDeviceType(typeString);
	DeviceBase returnDevice = com.cannontech.database.data.device.DeviceFactory.createDevice(type);

	return returnDevice;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getDeviceCategoryList().addListSelectionListener(this);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("DeviceTypePanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(350, 200);

		java.awt.GridBagConstraints constraintsTypeLabel = new java.awt.GridBagConstraints();
		constraintsTypeLabel.gridx = 1; constraintsTypeLabel.gridy = 1;
		constraintsTypeLabel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsTypeLabel.ipadx = 4;
		constraintsTypeLabel.insets = new java.awt.Insets(17, 12, 4, 175);
		add(getTypeLabel(), constraintsTypeLabel);

		java.awt.GridBagConstraints constraintsListBoxPanel = new java.awt.GridBagConstraints();
		constraintsListBoxPanel.gridx = 1; constraintsListBoxPanel.gridy = 2;
		constraintsListBoxPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsListBoxPanel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsListBoxPanel.weightx = 1.0;
		constraintsListBoxPanel.weighty = 1.0;
		constraintsListBoxPanel.ipadx = 264;
		constraintsListBoxPanel.ipady = 125;
		constraintsListBoxPanel.insets = new java.awt.Insets(4, 12, 9, 10);
		add(getListBoxPanel(), constraintsListBoxPanel);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	
	//Manually add the device types to the TypeList for now

	getDeviceCategoryList().setListData(deviceCategory);
	getDeviceCategoryList().setSelectedIndex(0);
	
	// user code end
}
/**
 * isDataComplete method comment.
 */
public boolean isDataComplete() {

	if( getDeviceTypeList().getSelectedValue() != null )
		return true;
	else
		return false;
}
/**
 * This method was created in VisualAge.
 * @return boolean
 */
public boolean isInputValid() 
{
	if( getDeviceTypeList().getSelectedValue() == null )
	{
		setErrorString("A device type must be selected");		
		return false;
	}
	else
		return true;

}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		Frame frame = new java.awt.Frame();
		DeviceTypePanel aDeviceTypePanel;
		aDeviceTypePanel = new DeviceTypePanel();
		frame.add("Center", aDeviceTypePanel);
		frame.setSize(aDeviceTypePanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.ibm.uvm.abt.edit.DeletedClassView");
		exception.printStackTrace(System.out);
	}
}
/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val) {
	return;
}
/**
 * Comment
 */
public void typeList_ValueChanged(javax.swing.event.ListSelectionEvent listSelectionEvent) {
	fireInputUpdate();
}
/**
 * Method to handle events for the ListSelectionListener interface.
 * @param e javax.swing.event.ListSelectionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void valueChanged(javax.swing.event.ListSelectionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getDeviceCategoryList()) 
		connEtoC1(e);
	// user code begin {2}
	// user code end
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G8AF954ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E14DBB8DD4DC551944107FB41284773859F896D36A322734492E71C8DBEDD9365B23AB9E639A37D9B7EBE94D29B9DB5C46AD2D31669CAFB3430F89B1A441CA73331970D3C9C5A0B15A9423C200A84918F0829272E360B173E66605E15E785E83E610047D3EFB5FFD73985E0038FA4E661C0F776EF76F7D6E3D5F7F7D5E04149DCAA94837159112DFC074FFFF4AA7A469ADC29236FC6FE30ECB90338A09695F
	E1005D6440F987BC13206F440A2C42D2326D3DE2E827C2BB75362C42D761FDAF49FFBF2F9EDE622C138DFDBF9B7CD17E546BBC73B1DF270836D38E154073E500B44061B3CF4475B38E156B78EC9D4FA15FC648FAAF0EF97250819DF7825A9DGC9G29DEB67EBEF83EC4D71E53F8C29FF7F5E98A497B6757ECBB110E09A60783BEB637C9FFBA496A7C4DBEDC2B48D9224F89C3FB8DG9E5ECE725A0F4173E447006FBD37BCD8679602C1B92809EEFF5D08B4AAA81EBA0FB8AC39454646D67A6C0A04448EA1A88688
	7178116EF9E7B125C3C8AD3437D05C531538D69A3CE782ECB0705F2EC27CF1A92B5085601178795EFD6D243E7F1E4FD613EDBF8E5AF745B95F18444E15AAC54F17BC745B225FD3D93CF191F91E83FD0E6BD90565GA7812E820C816C27BAF03C7B0F70EC6E57DA6441C1B9589C8A1D8AF8140FE40F98007746C66851F197C4372CF888E1F25E692C35584FD440666D1F71BC461334B7394C53AF5CC5B65EFD56D6E441130DE98D36646B0C97695723BCE1EBF745DDBB7B7AC41D1C3876C5E2DEBBF72EECAF30D8FB
	6D63C7ECB9BA1DBC535AD583A86BABD456E5701E2F6B87430B946FB76119FEBEC3F5865BE1685BB840F52367E53E9717E385A9BD6A3264436DD94D3626G5BC3CFA0F6AF9555C8BBB1903B17DA0ACF8E446EE5ED955FCBAA74958FE695B27DFA7B925AEBG5A7381D2GB2GB6G64819487390E5D682E7F1CBA56A1A85A29A1A960919542663EFD71F77094431AA23487D5CD883A45EEC111047E002892FD4C7B9711877D936635D25DF7439A9F08C1D191B4C98E82F5E1D054C4C5E5E3BE3A389B47A8A26D6D12
	86C5D8E0B0C4B85D0FAF6E4573892A76F148A3E8E2F4846B7F64A24AE4D868860AC0G5E99DF5C1711DFB5F07EA6008E038F9BA83D3322827E223151A54B83C321AEBC89C989A21F87286F70407BD8107338778A62B6C1FB1BC1E7D74F9E931DD6490D5B97148837B1218AFDF2294CF5663FFA384E346E7C8629FD7C0C254EA0544ACCD7DA65D85B9920B4F1DF2C7D2B4A1E995A3195144A56F64756A8297AB256304741B37EBEFC95E59500FD4C87C813B90F4F74B8194E1E92D411EB69F98594CC74C4B94E76D9
	D36D5079495A47E8BBD3663C7AAEBD07953F3F8CE0EBBCC65708F7567FABB01EB4DD42B8A48E0BC12DD58C09C18F3C28FA5F8717D057F4BB754A461C0FA8BE84F65D8206249A784ECBE8FB0226A9D27F10A6F60A1AA685FD517EABF4ADF528BF94F589FC2D7ECB68FF659130EBE33C6F925A04DB8E86C5AA9CE30A5EAFD11B948362A0EC3AC59E8AEA8CAFDFC6D98D08915DA72817B149999682C368DFD8CE30C65801E7D024C190B93AA8628A213D5E62ACB771E8B3489BF39BA7749D8FF15B9B296436D7B5FAA7
	496C2D36D9450E5B3F51EACB8EB1DBC88BC5ED0F6D49F345FA6F5729EF5071AA5BEBFAA372ADB6B9E13ADEF88D69BCG74B7826405382E7F7C8A76F3FF22ABF90B9C88B0D69ABCFE6CEAA94AC47CF4C884B70C0E6B2C4137A72E6E09696B56F9487AFFF6F5873533284F4B7C94F9682E66B9DF89342BGDABFE5FCCC7A1471011D2B2897E337D5DE669B126A06B489BD212001720506B4FAE8160F65D21F0AB4CA941EF79552F8568A6D2BG1A42E57568CE1EF7A58F24101C2F6F0B1BD7AED6585E56A8D1D9B9E7
	733C2B2397575C82FDC465BC7E6493336FEFD6D559AD5130237327641AD9168C377B5AF6F8FAA5C5555A4158421C172FDE437DE2DC5251FA1CDECC63B71E358C56F5816428081F271619761E8838B400ECGBB25771D1AA624A729DA27284B3C0EDAC00BDF887AC4CF4DF5E1D8885729A3E021F5547C6BDC6641ED08BA4264342C36821EACC9EE0118691315888E6E6DB693BC524DF32BD5FB1B74FDE5FFFB85B9B93E57E6156B4E5FF550D623B1DEF7E8D11E0F7DFD21BD775A8BC54C87BEBBA93FDB29C5634B9A
	EDF22CE1F94FA855079FEAAC6FA9B070F3A8FE03894F78DCD245791C8BFD9DC3BCD67F248F7D41DAE82F83588CC006419FGB48DF3BD786BEBEF12E9F221F650EBA5A884BAA7B8BF1E13745A193F525B17FA8B383FA2BC9674544472616A70443307E35AEC1EF7523C3AD8FE464CE3B2FF68482B5CB6CD1A5258F886852F7BCA17E27615EB01CE8E00E3846EA5G4CD63F2F966BFBE99861B6F9633459A66F5BF54C36A30ECD7AC7585E660FC4752356388BAD68C7BF73G74ED8258066B0661BE845083B0966672
	F92A775D6964C3553DCBEE815C07604FDAE2E38E4CE779DC71E1BC4FCA203D8600619E2BC05CFAE86706F9FE10D0053852C8D6E1CD046396D1DCD30471096176444D07F0EEAC2E4682B7FD9E71FA5CB52CF20B0299500F66911B7B6267913F6C334EA3FE5DE71DC73C50371B6101067976407B6D4254F9468E41AA4FB8C84F7B606FF6D15A2AAA2AD46898E0743E2735D708C53EF18EAE98BA2F7612DBEBDE524734E9F24BD143DEFCED872D6D25532DC0544568857D4CEEFEE2B35BCDDF045D8D9261F9FB045BCD
	2242EB8EEBA2BC467D0B02BEEAB33449A8687AA85721FFD44DB65EB0BAD1C7DAE35ABD235C3715FAB0068420BD9FA085A083E043A8371BBB05E97DDADBF88A3F363CBF3ECE2C6837560914FE0C4F2ABC243845D8397FCDFF3951973550F6CD9CC49131B1EB68FCCDD0FC62A43D39174EE7FD7166E7764753ADA67FC307B1178C8891F9C8031878994A656D43DC1EDB01F72500BB81607A4C1C6B7C5D887AB8AFDCD601DCE7C8F41326B11C7B1F95FCEEBA0C4F844881A050679C6331FCDBB1728AB3BF17500FE5A9
	3E1753288F6810CF49E11A9F315C607EAAF3EEB0FF0C69D77A982F077D6AC839352E1AF22CD76DBC474A9C637AD79F427536623EEF00DF3B4175EF01B2D57D2769C63C98FDDAC5FADDB7E2EB969D946F3991DB335820701A0586FD9BEEF07F7B840DB1A7EF824FEFF25CF3A27749FD862E5C0738C4EC5F64BADE6E092F2307BC56BADA6D3176DB2FFB2676DBEFFA626996BB5F35433CFE39967617FB134B6BE85F81333C6A04912D317183C5721C92FCAE2A09CCE6F7515804732B46394C56D31AD7212D81AC9E67
	B1B87C879E03536FDAC1DC89E7AD73621C2EE33654F1A63F874623B1B88DE2B0DB3334122F69C800581B003877AA4D7A0772DA1A4F728E569F1A500FBCB9C24C7D2BA67463FE6F37197B57CF68AFB04DE7E7FB281A1FED5BC3E9A4F04F1F63667C09897A7DCCFFF6F4D7122A05AF9469F6620DE3A7548C5979732AF8FE1313406D6100BD569E4AE7C5ED20F6D6BCFBF8096AF7532C581C350C623BE645662CEF05F84E6A073E6CD9DC4FD3942E7B8D3770BD39D43C93F7996DEE5A463B99EBBF294C34AE0334E616
	07BCB763B5E6D27BE0BE71D9FAAEAF5CA3575CC23F89E8488B8D5E93G184FFD594BFDEE9E600AE703AF83789040BF1B7B5CFA9F0DC37CBA04C18F5A0C6607BE2E7373E7F37EF98EFF315A39728567FDF3467318AE5DD5C16FC53319AE659B7855943F4E04E7BA76046113B6C2DFD3A24F9DFEA3A28FD3211D893081E08BC0691C2C425AB95C37BE68E9A053648FDDF248854EB7E0F2176CFC2FD4FE31EF8A7FD044EDFF6DF7D7110C394F67473BDBB44DE17A5B27BFB7F7D5D23CFE377061791220AF9DE09D40E6
	00EDGE5F37979F60B356CFCED9EC9EB56B4416D27B7FDFE38EEC99C0922B1683333BDDFE5BEDB4DDC367EC97D59B1F732DDB13BFE1346E48F740767F2DBEFA960363EF2AE5745DD547EF321DDBA0F6376D19C56889A8C5CBB211958E32E453EB860BA56FA5AB523B52632F72BFBC957BC64413D936E2156FE61879E2CE535CE2AE140DDEE9EFE837DB506E9FD6CAFC42CF7844591A78F37F527412154D4F8A4A1A07BAAEA1D8D354E23470FF01DCB99B1FF3BBC317DCF1675C0049C1DCFF97A733EF9157AB74663
	DE6ED3EA6773B85A6F0D0D234F92F39CCC764646517C897DBF724646516689F1F82BB7B60E72790C8F3DBE7C46E3AE94CDA891D1C32E6BECBF77012B2D37334D55565255FE7E1CAE77F4E4217EFE0F69BD677017D17F1F5AB7BE7F152E41EC7FC5B1FE5ED868354E9BCB3C56F9639E6F547759FD5E78F57343DEF35D1C792E928D656A81BDCAGC88548G481E4F7D56EAAF8A843F50CD76D9ED9E9F5E2D702B1C4657DF660BFF563F74CD7FADEF158FEB1E7D32264903C81F6353FCA8AFCD8ED1A443FD4B07BCD2
	A41FDFE3C3F57C5DB46686C4AFC5B35FD7DA0D384DF02E2D7339BFDC349FF1A58B328A8FAC6038AD7B390F2CD940637B997B64FB1CE067FEA48C6312GB2G329730FACD79C29CF33920F58A5D3093FE5FE3308966EE8528545BA5C0E3B76432AF98B6F6DB8B2EB951AFC5CB86ECCC49BBE544DC7F0F7633FAC2024F2A8E5787EBE98BF93E7F40A7661C58793A43B2A75E7AC93DED71C23D8E3EB01A6F2F3F3E2D0851F9640A5957152EB8EC4B37200330C91F3F45C40769675DC3A80F2AC510CFAC62BA59283E8E
	4FEE613A1EA5E0C815952A15006CD0641028E8910625E5E75D567F6C1DE91E4056AB53626B74FEEDFA1D2E22F925883A0892E138A39A6A146C752A22E1BBF5DA2901EBD7BBE4D5C25749647ADA7544DC75DD2A4FFD401340A22E272B7663988DB64362D45588CA0169E2510169F4518CAB01A6C225AE2FB50B18EEC4F33D85F61E6B5D87FDF90B787D7311DE141B457D53251B0F9E439EB5EA86350B797DB349C16F72509E83C886B8C44FC5C8B1617F363CEF05E367D571D3089EE7FFDA42F57840B77F0A347E78
	79FCFE16583327AFE6BA37ED3169B7C22043EC1F99BE3E4F63DF637B6C7553EF4650CE84D879B51E67A6C7E87D9F5A6BG72GCA16E495BA81CEAC613A1B2955CC213B0CC95427AA029454985DFBC709210B85C355716603C7BE83ACBF5FFF9DE2EE1760B366E48C61390C1841CCC26F7B41907A8BA9882AA68424D17AC92A938686FD0C273E9B04F07FB33E7F7366BA13E544F327C7EE62BB3347DBA75DFDBFDF4C3E638B4E7B57E9673916C4F353BEF8E7779DC7814ADBDB92FB8F5AC97189CBE26FC1FF616036
	31987A36AC617AF17FB85AE0572DD905A100E400F400CC008DG39GA4896E8CG35G2DGBDG81008400A400D4000CA42ECB9961A3D36812DE7409AA1341077BFD1C8F59C913F3719C8B9CBB6FE3D46F7312E2EBF07FC1710E2531B5B8514FEBF0E55097DE4A77FDC7A43EBFCD0DCC6FCF3F95314E916E0ECC4E91B2A256B94277A313F304E728CF5A887B4CDD4A7301379CD4071701DC16713B507602288E6FB53D2FF4FC75796ABDDF699A0CB70F0E47174F067169657353F1EB79BCBDBED9BE39635672796F
	F133FC986E39F1E4368F743A4798374D40DDB2F079B486A06E2264517C863E08EC57719F0A38A0476F243C9D21389E1EE71BF01778F7F702B19B0E6C1795BE77G21F1D98A84D85BC947C8C1886186BF2AE97C10C202E95FFFB4F038EF26EB6BE92C2981BDF3AD637A77065F28CD9B7A77EFFEDCB351E8BFC55BA9C6FB407FD569C8F44D442FEC8D1E036CA58E871E4B6F93C2AC6759C7ED91FDDE66B21E73389C389F379C989A8C2AFA4D4D6D60B1FB1DB16E97BE7CC6BD8C0921649682ACABBEA5A89DF2C0F2C7
	74F905FECEBF876631FAC12BFF7AFA41495770BD1AF333DA817B3ED2A6457E7682EBAA4E65FCDFC79D106213E38D1C562883FD68B10376C17FF1B271DEED7ACAD8575DF6212B3D2559555B59F2613C4BF52A79C2EFF3E76F3936365636D6163F1C1570CCE88F4717F359F5C866B898D84E7CFD027ECCDEBE517F27AD673A68137837137B8CDC937D1E3D8E5A3986EE11710D1BA4F3DCFA2579FB8A63F79225D785E39A12B9BFAED6206F9916D489BC4A85F9047E5CC917CF085245D85A174C6B332B0CEFE2A140A5
	8224827C90E093G4BB976A0E91D1F47ABBEEF8E43464F2BC0799CBD46735687AA0CEF9837715A4BEFAA262E3D54CC7A06B13176F2F952B70C4E89351745133EE17C724597DF44FEA64F07ABE61A8F315F7FFF47B58F8CAC7D99D220AAE46784FE7C531DEF7DBC7B49EE55CE8A5B496F715A51A9AAB4C394BD7895DC7F496BE972D2C806542293706D442152C7012AC582220B14F9AF604F41D4CD74B4735C938C6395972ED40FBF592A7FD0D07D9A460EF7DC4491449F6712BD2CBBA084FD75AC91FDA70CBF494D
	EF6EC3A9526D93586FDE3ADF24D2E7D0597B3DDD55074FEC4A30935BE932BDA08B1E53029BD222F6721266D7C455AF87BC61507BCD14D07188CA92AB3EF6A0375FB8BE9E362E8BA21C316901709D0BF7EE5EF99AB4A12C10FABA92EFD9F54688CF0BDFD0E0A9D1E95770474632D2E5744D7A9F6D8F8FFF706AD59B49578F79A939C9EC6110C68A3D42209408408B53BE95FB8AB5582DA284D52F2C8C424E1CB1BB63DD4682F54B9FEC386DEFFFFB19AE901D2A11C30C15B0355EA74A03754DDE2F94948D8240D7A0
	FF50A00FE36AE2466C89AFFD654C63AF76039E34927BE0C3837DFB147EBD06FF0FD24CD10AB9FA8C183B05CC79AF36BF4C4FCC158776330B6E8745DFF79AA428BD714C032B7E7D6416DCB85DE9D2C0FF6884C2A80D0EBAB7B458AFAAF353EFBB38A3B9E7914AA8042A92C63A5B439A59470A10CE4DAFBAB5704ECE596B547F9307319C9E3F1D466C1C61B79B6DCFFD5DEEA30EF6D248F29850ECCCC4C033E91E52CE6C1043D025C4DB459C97738A87BD8919242A08F5CC56B9C4979B1247568EBAF4A77DDBBAE3BE
	622CBDF4EE19F17C830C3B68A19D7ACED7836C7E7F37534A30FEEFBFB2EE2E99ED1DD39E37BEBE36024529249531B5233D9D3877EC40EFDE416F9C6E73EF107877664EC1A190500440C0F35003F768D391CD0C56D44BBB103E4A47681D7AF77F8E5C77F5531C7F85D0CB87883D7FE6694693GG38B5GGD0CB818294G94G88G88G8AF954AC3D7FE6694693GG38B5GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGG94GGGG
	
**end of data**/
}
}
