package com.cannontech.dbeditor.wizard.device;

import java.awt.Dimension;

import com.cannontech.database.data.device.IEDBase;
 
/**
 * This type was created in VisualAge.
 */
 
public class DeviceSixnetWizardPanel extends com.cannontech.common.gui.util.DataInputPanel implements javax.swing.event.CaretListener {
	private javax.swing.JLabel ivjPhysicalAddressLabel = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private javax.swing.JLabel ivjLogFileLabel = null;
	private javax.swing.JTextField ivjLogFileTextField = null;
	private javax.swing.JTextField ivjStationAddressTextField = null;
/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public DeviceSixnetWizardPanel() {
	super();
	initialize();
}
/**
 * Method to handle events for the CaretListener interface.
 * @param e javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void caretUpdate(javax.swing.event.CaretEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getLogFileTextField()) 
		connEtoC1(e);
	if (e.getSource() == getStationAddressTextField()) 
		connEtoC2(e);
	// user code begin {2}
	// user code end
}
/**
 * connEtoC1:  (NameTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceNameAddressPanel.eitherTextField_CaretUpdate(Ljavax.swing.event.CaretEvent;)V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.eitherTextField_CaretUpdate(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (AddressTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceNameAddressPanel.eitherTextField_CaretUpdate(Ljavax.swing.event.CaretEvent;)V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.eitherTextField_CaretUpdate(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
public void eitherTextField_CaretUpdate(javax.swing.event.CaretEvent caretEvent) {
	fireInputUpdate();
}
/**
 * Insert the method's description here.
 * Creation date: (7/27/2001 10:04:55 AM)
 * @return java.lang.String
 */
public String getAddress()
{
	return getStationAddressTextField().getText();
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsLogFileLabel = new java.awt.GridBagConstraints();
			constraintsLogFileLabel.gridx = 0; constraintsLogFileLabel.gridy = 0;
			constraintsLogFileLabel.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsLogFileLabel.anchor = java.awt.GridBagConstraints.WEST;
			getJPanel1().add(getLogFileLabel(), constraintsLogFileLabel);

			java.awt.GridBagConstraints constraintsPhysicalAddressLabel = new java.awt.GridBagConstraints();
			constraintsPhysicalAddressLabel.gridx = 0; constraintsPhysicalAddressLabel.gridy = 1;
			constraintsPhysicalAddressLabel.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsPhysicalAddressLabel.anchor = java.awt.GridBagConstraints.WEST;
			getJPanel1().add(getPhysicalAddressLabel(), constraintsPhysicalAddressLabel);

			java.awt.GridBagConstraints constraintsLogFileTextField = new java.awt.GridBagConstraints();
			constraintsLogFileTextField.gridx = 1; constraintsLogFileTextField.gridy = 0;
			constraintsLogFileTextField.anchor = java.awt.GridBagConstraints.EAST;
			constraintsLogFileTextField.insets = new java.awt.Insets(5, 10, 5, 0);
			getJPanel1().add(getLogFileTextField(), constraintsLogFileTextField);

			java.awt.GridBagConstraints constraintsStationAddressTextField = new java.awt.GridBagConstraints();
			constraintsStationAddressTextField.gridx = 1; constraintsStationAddressTextField.gridy = 1;
			constraintsStationAddressTextField.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStationAddressTextField.insets = new java.awt.Insets(5, 10, 5, 0);
			getJPanel1().add(getStationAddressTextField(), constraintsStationAddressTextField);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the NameLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getLogFileLabel() {
	if (ivjLogFileLabel == null) {
		try {
			ivjLogFileLabel = new javax.swing.JLabel();
			ivjLogFileLabel.setName("LogFileLabel");
			ivjLogFileLabel.setText("Log File:");
			ivjLogFileLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjLogFileLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjLogFileLabel.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjLogFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLogFileLabel;
}
/**
 * Return the NameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getLogFileTextField() {
	if (ivjLogFileTextField == null) {
		try {
			ivjLogFileTextField = new javax.swing.JTextField();
			ivjLogFileTextField.setName("LogFileTextField");
			ivjLogFileTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjLogFileTextField.setColumns(15);
			// user code begin {1}
			ivjLogFileTextField.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_DEVICE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLogFileTextField;
}
/**
 * This method was created in VisualAge.
 * @return java.awt.Dimension
 */
public Dimension getMinimumSize() {
	return getPreferredSize();
}
/**
 * Return the PhysicalAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getPhysicalAddressLabel() {
	if (ivjPhysicalAddressLabel == null) {
		try {
			ivjPhysicalAddressLabel = new javax.swing.JLabel();
			ivjPhysicalAddressLabel.setName("PhysicalAddressLabel");
			ivjPhysicalAddressLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjPhysicalAddressLabel.setText("Station Address:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPhysicalAddressLabel;
}
/**
 * This method was created in VisualAge.
 * @return java.awt.Dimension
 */
public Dimension getPreferredSize() {
	return new Dimension( 350, 200);
}
/**
 * Return the AddressTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStationAddressTextField() {
	if (ivjStationAddressTextField == null) {
		try {
			ivjStationAddressTextField = new javax.swing.JTextField();
			ivjStationAddressTextField.setName("StationAddressTextField");
			ivjStationAddressTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjStationAddressTextField.setColumns(15);
			// user code begin {1}

			ivjStationAddressTextField.setDocument( new com.cannontech.common.gui.unchanging.LongRangeDocument(0, 16000) );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStationAddressTextField;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param val java.lang.Object
 */
public Object getValue(Object val)
{

	if (val instanceof IEDBase)
	{
		String stationAddress = getStationAddressTextField().getText();
		String logFile = getLogFileTextField().getText();
		((IEDBase) val).getDeviceIED().setPassword(logFile);
		((IEDBase) val).getDeviceIED().setSlaveAddress(stationAddress);
		return val;
	}
	else
	throw new Error("DeviceSixnetWizardPanel :: getValue() -- Wrong Type");
	
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	// com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getLogFileTextField().addCaretListener(this);
	getStationAddressTextField().addCaretListener(this);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("DeviceNameAddressPanel");
		setLayout(new java.awt.GridLayout());
		setSize(350, 200);
		add(getJPanel1(), getJPanel1().getName());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		DeviceNameAddressPanel aDeviceNameAddressPanel;
		aDeviceNameAddressPanel = new DeviceNameAddressPanel();
		frame.getContentPane().add("Center", aDeviceNameAddressPanel);
		frame.setSize(aDeviceNameAddressPanel.getSize());
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
	}
}
/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val ) {
	return;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G4DF854ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E14DBA8BD0D4D7164EACB3E36D30D5498CB345E41CAD62B80AA3A378A711A8A2A698D1B16A0C93599459B89BE7162428DD56189D1D3DB49FBF0108FC842489AD22414870D1996593437F97E2A8E194F7CC74C1BF20E3532F537D10A6F112BD675EF7DFBF1AEED0D3D6ADD507776EB9775EF36EB9671EF36EFDCD328A7D1293F4D904A4A493656FE282A141D5047C3A3C6DCD0ECB1F9B16C2B4FFA7G0E12FB
	69C970B4GAD6E453014F4E2A08721FD815ABE5B43D2F260BD131CA23D65706201CFA950B66FF96A032979D8B2B81F83343DACA7951EEF83DC829CBE3D66A27F0DB9398A7E2602671020A344BC8F7B6C4E51AB3888689383D082783AF92CFFAFBC8FD14E5F29394467FA5C0F44BF7F2EAE8D67514C49E129B2F60772B4104004997E486BE8EE2AB2A69D5A6DG3878C4722A35861EF55DF706AE8FC8A3E5830245A2D9E4F1E038EC4C7405E0B31699453B268131262619BEFBCC8E0BA8DF2724EE41A21A8959C767
	3F11FB104EC7C8B834E74EC75C66EC64D98F6FFDG56799C7F63E3080F0477DDG7B6673F53E7FEE1D320E3EAF83C97D6FAC09C7BC2CB36B17ECFDF53FF42E532BFD5F01BCEA13051928FB8750E6818481EC83088748DA901612CFFDE1D946FB70EC68171B2411914952E035B61A0D360FA423E806771A9A20A8382B6200E4B392426C1D13DB6AC61E29000DBB75406318CE7C4FF35B87DC1DCB2217FC28BB60C6A7517E953A5285CC974D8B1CBAE13CBF75485B38E022EFCE64FD1DE8F9D778C80949EEF8AF5DFE
	C667D0667156708ED90036EE22368E00778445BF987EA30AA781CEBC73536D54E7301D8EB4B9007BC65F5BDC162E24A7C8FAE517DBBD7806B568F684B0996282DCE5B9CC772A7ED70CE732AACBB645D7E870CC16D9D4C6ECB7834D9F0079570AEC5C37298BE13F8254837481B8GFCG7C97F29F7BD3C679FD7AD837E0139BC7CDE623E8A3EC6C0A4CE370949D32CD683058E541B2A0DE93ECA6215FAC5A0952A7B493F550BFE15CBA6A7B834023CD3408B6C1B6C99618DD9891E551E6E7FDB6E59E45BEB611D2FB
	CDA3A2B0983192BE6F2FB3B361E9966C72DF2DC6C1961DBD987D25CC3449DD619A4C889340BB534BAE2A2F88D8FF8CC01C2A079BD9B85F07228D62C5CDCD17A45D99357662CAC8FDA06AF914460EA4F85787F29D4764A04E8B5A338279BC0FE5E5E866E9B68D207802ED1C6F310EE3981B0382394F3C5E47FD26B96D9724F4FB27DB1FC1589648FCA5B650F56F7450B9D1AE565E195DB74D3E8D8AF43F276EBFD644CF4BA371A167FFDB355515BC34D5D6D0D8CA85C0F790577106AC837359C641AEF2AF7D58868E
	A69A1D9AE7F226D39B717D4BF07994B78C73BD9644F5B67BD81F265F434ABD354ED6D29EB8FF72A36041F433A69B7311F8D734484D22D5349861452E50A2325167147DBAA829E3B6D13C9576F793ECA83B0A5F160DFBD010E51B29FFD496FBC4D9B6D9061C74E84A4BBE5AEFF506864E6B15ECDC23B4867BDB6D3FBB9B774600E4310854C86A90057E873AB7C533B882C2B7C9239619616328FF5F9147155890FF8C0B1E3B02F994638C2B91020437F08DB65388189EC39551AF42FD6B1D1B2B51D1B0589BEB1DB8
	F8A6AD62FBF06CA45F0345DFBCC9C2EF1D52394BA13E3FE856999731FD63D8645C03CC265F6538177D5F292FA9F8BB13756377B0EE32E2658AC43D862351A65A6DCA2D42FC7FFB47F1BEDF6093G903E087B7ED0AE52F9FCD11C3EC9B21B19CAD5DD77662523ED444FC7C5884B9848BED47577373C8C975AB5C5170CBE10073AB4EBE2206FE21A8F55DAB09A64098748DA4C74593D186903754B4F657DF6C1FB9F00FE4944FECC8F87EEE14EF7D7578D0D1A4AC6E593C6D0C186E7350E4AD4BB2C0E5BC3E3B14E51
	370457EB4D0D282F47206D8F903A045BF6CB9A2F57FC6E7811181F9F77D8176ED842E45B3744E95B74EB3CDE5B120FBC6B160625F4AD6536F8A9CF1BB39A6CF6E940C453152247FFBA2E35BD437D6078E1F88E1AECF63983B627036B5C77B84A0B79CCC1AB797DEE8E4F6F37012FAFC045B2442F391E2511BD8A70FB8174C0CBE4FBAD87737A00E09365B27A1F2549124F043B02234CBE869B390CC60932A62436606B9945AEEF3C07BA93CD7230E86B05F051EA924D46DBCD1AD93A261A26764CB5267B5919750A
	FC118B1FA0F5DFE76A5C554AB30F94689C4B184E7D16B9F5DF31BCA5B13AF27F81260766DC2E07D868D33C1C6B619362CE8FB717F3BDAC48FD98BD30F87D47C9B529F539B3EFFAAD1F1CC3D92D96CCFD51F739EBBD99C6717E4BDD6B494EC6DECF8683CD3F025797378BB0F64D0076AC0025G11G31G29415C878D796749B475DB876CA91BC5B077CC88543C0E4ACFE431D5E93F181F4CE3AB61F96BDE0E2B9ECA02A72E3D59254D467D6324F16F383407DD46B17FBBD52267F1C1E3261A1ACE5599D9ECFF33D1
	9B5BE784335AEC8EBC0381D82C58FB7D20A2CFD4B00F89FFEF55460410A367F4EFF90889871FE27215BC6574CB3DFA064BAEC4B907016685B08BA098A09AE0AF007EE9EEA3237E7D69ECC47D2ED7EA82DCBB445DA6579C296A34F312CF5E1FAD7AA60DF335C55D539347B17D79902E3FDE2033DAB8A38FF15E5076D3F1C79B90978E6D6827F9CD352A9173B6D9495B91340D7B13353B9B272AA1F15CB72F39CCD3727826359E332F2940F34DE5ADF0DFF35DADF0DFF35DABB84A70B00776444569DE85D357E45E85
	6EEA32823A5675470E50396DF651CE9D8E132BC2FBD54EA6EEEAB3ACCF94BDE512D5B90714BEAD3254D4C978FE7D4FB3388F5D6CD7CD4E2EEC62B9BBEBA54F59EF34E05C6B023691601E6AA77B2FEBFD5547458F7CDD5AA1ABF93C1CE540DC90856DD80024905803GF5A1FC9F7E791DE9E3E50BE30AD8D9D868594E278B5D5B3934906B8D3BB4EA9B90DDEDF93EB0D725B9F7FC07AC0E205AD91FBABADE96ECC362A4DFE82263994D53782EC2CF7E42EC7A2DDC2DCD4F297B66A7C4EB031BA193F5EEF5E9FB0570
	FCFBA68FEBF333B0AE0D4AF0DEFE866DDC1F476334AF748B825881909B4262B57321C5E3980387ED42880857E39587C88C9DDB524047F6C17BB6408CGBF0050E7B84F40E61419F9DB25A27FDF1AA64549D5CE196BD6F94A5DF7DA51A73BD7319CFDC845BBA85E2C41335C3D1F7AB036E782ADF6950F07D9FD686F5D2BC166559C373F1C47C8D94569E8FC8D07760E555CCF6798BC7B598203FBBFDBE4F09FCFD698260EA72B8D1E7C034997C478BAE2D5190FDF666BA0219CB71E4D57518DB8261B61BCFE1FEB84
	5C2CD0EE6B4D3772347122CC9813EBEA5AECA6E31762B6CA6E894A63E777ED21BCE63CC467CCDD83B5A0C05D9A1E539D27F9CE8F187B84691A71215BBABF26771C2EF70DF206DB634C693E1053994FAB8D1C67D220472EC15C3D86ED0D09BE77B8F4A803A723AF1CC0C7FD1EA4DAFA4C84BA4A7B0CCECB4FE85452D1C7854AF836368D27785A76ED70A766E5559E4FB09742581A7A14E7773513A46B137D87180DBE22B178B1204D8963F67BF68B37E5C4980F3F1F376259B1965AC9EBC14FG75EBB96DABCAB3C2
	5BEBADBB8362790E5192DB5D655AA4E5BCEF972F3D7F3C9E9B666C4BF8685D72C8D6F4256DFB3FBC92DD5EB3C9CC9B56A903F0965D3596F574BE5D4BF360BD8860E6B85D5F954D4A181270496BC9A44E3BA404BA6803102F603B43D99CC9D0F966D11987A473680845CE985F8A3A778A11B774E7385FD25CD2E80706F3D9AAAFF3D962BD481268C616138A7F036B1C32B09E3333B95F2CF55C36163C077B26F06FA147ADFB60F1ACCE3FD00F7121D833A6065FC971959ABC0BD13B5498D587B43FF53C1678F69166
	1D24E743D28CG17G3A812CG5E4F72B87D579395E41AFA22D732F6C1A0B7EBC22FF2E75B70F05FDA569C6031E0695333C970F75FCC70F4F671FB1679C228725C5DFB12621533CBB12EAF8EE8294F41D99A209D60A6007C9CDF5F4FCE1432753598CDF203AC8B834374A603AF6E1AC99CF322B1E9B3DFB6B6CD2E813EEC62F9FCA64C6F879081907D9CBB2F9F0C40BEBFE961FD621FF36F4719643F689DE117B454EAB20BDDC23FE8E6786BB246506E61F13BE9C0B0ABB7EA9A7A171F26BB472967C8C60BEB47EF
	2FBDB23D3BD1062ADD883BE7D85C2A0D515D91CCEEB9025FC310D2F77419701C95015FE83D719AC2D9C3DC79A9F8DA44B183CFFFE52D90ECCA0A6C0285EAF31BE9302854D0D1EA283CF0C6353B5F18767B6A2543975D5ED1A244C4B05D45AB4F106F1DD472E9CB852F41CB57072594D2D9880DA77C0F493A875DDA617BF2AA77B77D021F12665F3C19F05283DF63FA46EF69FAE7DE5D717E1F8E30B537C125C3C8E5956791FD5E290F344B8F228F36167E4BFCAD316B390E8FD7B967FCAA1B73E37BEDC7BD52587B
	4B1A77BF64CD779D631B0012970FBFCA9EEC2FFE3F48F34D7803A277B523EF117B1A711F0B26BEE34EAD72FC6F7F2BA26D3DBF0BB5AFD6615EA8FE9E6AGGA30083407BF99EE7EACF96919AE75C44189663901E0D706B224C793FD36CF92D270A277FA6D9D60CF7307D12ACCBA3B8BF47DFA8C6FB491215A2992E3A98F5E4B38D8D4B2C2B027F20987D4FAC8ED2B44BA5B71AF9AE71073545BC4F6B5D4A5B936E331C75EE23B044CADE6653CFB6735AB3F7037A7B84BAE7B7340781E6EC6077DA2BDB387F7BEE60
	B5F044A75ABA51F0B649ED1D387713F2DD5486A5C6ECF06E55F0582B4AF9FE5043F91E46D3467F772D489F67AF0964B2DDAC65F7C55E11DC264DFF53462D74A7CE68925C4804909E49E4090AF44A447C677AA57A6DF5A364620D5CE736141F0567B561B3A56BE20A12EC54EBG59ED132C22CD9EE7D87AF5035F1FD5E873EEBD4C573BF16AFA14497043EA2C3106212F9700BFC0A840B600D8G32A9ACA58B2084209E208F408CB0834087E08EC0B0C064A65567AB4FCCA13F629C5471ED0289DDDF11FF6832D67E
	9818AFFE535472B3FE7FDA65F94F7C3EEA7ABD739FD574DB8678FA6F38D539DBF8238A733CB4B8E897553D392FAADD45F5583BA53B8913AA137DD673435502A38FB9EE6E830FD3FE8FC24F7487B73B5610DD941F355935065C2E6EFB83503CB6731AB93CC54BFFB76077ED3E9FDFBBDD0B7BAFBDAAAC2594209BE098609E00CF14FA27FC31E48A7FE1D14569BECC1E575D1E1D7C23DC6E5322A64B988538DD9A7CDE65BDF50B6B792C2ED43BE603C23F20BC5B37CC1E1B2D3983C31762C373AF1E7234B648881D90
	12BE6E7FCC9C10FB05A1F54C4DCBB8171A335816675FB3AFE17EB1D940958533698BDA6675C0C74B90BB838B34AE3A390545AC069B24B899F0E7D49E732ABD6F210555536F2195556E734EB3551373CED8357B3C93D12D4DBB8C37319A637690440CBE355F8BAA6E060A7B8D1D93F157CDC6F9D8457F8B158B716DA2B26478D728DCE39457473F61EBF0B7945CEB559887E0494312CD0D9755748CEDB21BD9FB8F6DE332C0D8D07571C7AA2349AAE864A6B59CF7C33545D717A75B679FAEEB6D237C362605286FD7
	B56FBB1B9FFD0D977FC8F930B56FEC61FA407BA3060BE961FA40BBA9264372DA4FFE7A175A697D7403DA77FE5AD2BB59CFBBEB5D7BE9F72D56CF192C69ED747E89E4755B426F1FC6A9AEG5AD1AAEEFD9B3FF35C2562D25B9137975A69AFF05C276D7C6E2AD8457D74AC558734FDD4DCCFA91F4FDF45AD496732042838AC3DFA9776822F5D0453294E58C1378D436B9DE9CEBC5FB64A5963DDFAFFA40312593964F57C7C27503C5BD07F30D1CCDF4091C7B063B913E7C9FE7FB22F0D57F639DB793D4F9E0AEB06F6
	77D6FE6FFD329D6D84A1ED4802B5F39F9FDFCB75B2837A79EC65F7C4B35A799DD1785649B1D8FB9765FAC704F26C586AFADF3578EC6604F5B4F0A99499A2299D50B7F629EB38C76D103EADACC53F0D1F590E525FB2B3994F6A390CDD5B5C4B68699E0B7EBEE21B2B0C2B5A700C2B7D525F037F79F142DE5655525A2B1CC7039B1CB6A26DF89EF1F39EB5022D25A14DE1545D991A4DF1357D04421B0EEF12C62C1285FFE600BCEFB5F4F534DD792865CAAF616759C56D5C66E6D5B7BB9B1D733DF256B075DA2EF634
	357732F11B5B1C6366655F6FDA189CB775DC0EB92A9C7B5BF1BE657E35D31B5F2321CF1C9BDBCD0E0F02DEBBAEE9FBD8CA6E76294731BDF93E13473CC095F72913473C93AA4E21677DDED6F1FF57EB7B315F573F1A76B1ACAE60B512EC37113489BAD977E4553FC53EF44D1EC8D2BAC89EDE7F7608B6DAB108C67CD22A7C1434159C32CAD0D375G3E03A45969A359AE0F1B45AE12B5F895FFD6E517C5E3832FC56CB24926BF18A9471FB415378B76E19963EDED97C932600FDEC986A31B854BD0B9ABCCEA9D78D3
	5704065B5425D09D84644D247262ACE56AAC19AB0F1CBA5139ABB81168DA49E133A498DB0581A817BA48A1F958A65A07A53351E17D201ECEF4F08CB502B70609B0DD3E3AFCDCEC9906A2D568BB0E1FF9276DCEEB05C4633011F25A93A3DA195A4358B4AC580015E86B1071C73C122DD825FD6B9D797446361C1BBA1220AC72F3729551B92CB2C99994C6CC66F1199CD2EFF76CC8CC818CA4A50BFDD0320D00F0869761B8C965D176437595BF1A7F5F7FCBF9B8074A2410E99306168F0952C8F943602049A22A9300
	EAE17A82F5FA6CD36652A74371F8F667767F6987D7E8A609A3959574FFA57DFF8E7FD7D2CCA545D41E837D4611A97FDC698E3EE66ABFA04F91AA8FFAC0D9AB98D1FE71357533F7564545426ADAC9B27DBD8E58A15D596B4A68C83FE87BEE400F8A5E720979BE1A490A5E6240F98FBB5499F1059D346A0A39FB3EA671151FA76AC8D287C9E1599D7C97D3B478AF4D609DA49132BBF5BD0CG0795E1132930E412C3A2B6E932E7A17A20563E08F80B76CE237F539FD8DBB8AA030E4DD297194FF41863AAACF06E1206
	8CF84FDBA313F465DA57205C6B56BC54DAD2D834FCB48BA9F6AEE4425F7FBFC94FFA10D439ABBE7335762EE76FF7F2BD5ED1DF58291C87F73A5E75580F525F54835EEFA7BF6B2ECD7FB371FC9E6C99914CE628C06EB4D80CF8B6EC9C17C567DD2563A84EEF67FD94A223FDFD94657ECCB3667FGD0CB87881A666B705293GG60B5GGD0CB818294G94G88G88G4DF854AC1A666B705293GG60B5GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G
	81GBAGGG8C94GGGG
**end of data**/
}
}
