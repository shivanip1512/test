package com.cannontech.dbeditor.wizard.device.lmprogram;
/**
 * Insert the type's description here.
 * Creation date: (8/1/2002 3:25:06 PM)
 * @author: 
 */

import com.cannontech.common.util.StringUtils;
import com.cannontech.database.db.device.lm.LMProgramDirectGear;
 
public class RotationGearPanel extends GenericGearPanel {
	private javax.swing.JComboBox ivjJComboBoxGroupSelection = null;
	private javax.swing.JComboBox ivjJComboBoxHowToStop = null;
	private javax.swing.JComboBox ivjJComboBoxNumGroups = null;
	private javax.swing.JComboBox ivjJComboBoxShedTime = null;
	private javax.swing.JComboBox ivjJComboBoxWhenChange = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeDuration = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangePriority = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeTriggerNumber = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldPercentReduction = null;
	private javax.swing.JLabel ivjJLabelChangeDuration = null;
	private javax.swing.JLabel ivjJLabelChangePriority = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerNumber = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerOffset = null;
	private javax.swing.JLabel ivjJLabelGroupSelection = null;
	private javax.swing.JLabel ivjJLabelHowToStop = null;
	private javax.swing.JLabel ivjJLabelMinutesChDur = null;
	private javax.swing.JLabel ivjJLabelNumGroups = null;
	private javax.swing.JLabel ivjJLabelPercentReduction = null;
	private javax.swing.JLabel ivjJLabelShedTime = null;
	private javax.swing.JLabel ivjJLabelSendRate = null;
	private javax.swing.JLabel ivjJLabelWhenChange = null;
	private javax.swing.JPanel ivjJPanelChangeMethod = null;
	private javax.swing.JTextField ivjJTextFieldChangeTriggerOffset = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateDigits = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateUnits = null;

/**
 * RotationGearPanel constructor comment.
 */
public RotationGearPanel() {
	super();
	initialize();
}

/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	if (e.getSource() == getJComboBoxWhenChange()) 
		connEtoC1(e);
	if (e.getSource() == getJComboBoxShedTime()) 
		connEtoC4(e);
	if (e.getSource() == getJComboBoxNumGroups()) 
		connEtoC5(e);
	if (e.getSource() == getJComboBoxSendRateDigits() || e.getSource() == getJComboBoxSendRateUnits()) 
		connEtoC7(e);
	if (e.getSource() == getJComboBoxGroupSelection()) 
		connEtoC8(e);
	if (e.getSource() == getJComboBoxHowToStop()) 
		connEtoC10(e);
	// user code end
	
	// user code begin {2}
	// user code end
}


/**
 * connEtoC1:  (JComboBoxWhenChange.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.jComboBoxWhenChange_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jComboBoxWhenChange_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC10:  (JComboBoxHowToStop.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

private void connEtoC10(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC4:  (JComboBoxShedTime.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC5:  (JComboBoxNumGroups.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC8:  (JComboBoxGroupSelection.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GC5DA82ADGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155FD8FFCD45515FF542831D2C40D8A9897EA31269AEB2C51CDD7F6C5FFE829460F340DAD3B25B65DE65D54D21BDD5916ED697288818648DF92A1E800917993A0A413BFEACCA67FA613BF10012490B0A0C2064CCBB2B01999E6DEC80281FF675E7B4EFDEFA6EFA693E9774372791C3CF73F771CFB4EBD775CBF6F5DBB8FA1FF7B6C55AB537285E165EAC17E7771CAC1B8AD8942F34D2FBF0F586C2AF61D20
	7A77BED02EF079F0BADCE3A1EFE7CC3BAEC7C859C71866C3BAB22ADD37996E73045F6E1B5F8BB78174C4C15E394247CF8457737BDD28E7ADCD571AB2601A8534G30A5C0D51F907D47CD85B21E8369AC791E504AB4C1C826BC3DD985AAFCCC66DBA8DF5D550447EDAA14730BA1CDF84CF06D2ED64ADCC72D3B393ACACE1F3EB3D2D87A522634CC22CBD5BED23CAC3BD83E6A053F230ED8A504D535425558F9213F2E57B5D852EBF5BADDCEC96C9DA8311D93EDF64965A99936DF36FAECA5B671123DD7ACF18C3ABD
	2EFE0FF5303A7A28CB32CAF61733D534FABA2DCE51A1D8EA087D37E569E85960F6C8B3DBFF18E914ED093C90A9A4FDF3DDC0DB2755B09B63EA94DBE7AF99C83399C959B3286F095CD248AF860C697C2589F5C683D6D4CB3028CC421B8469E5C43696ED295D0336F4FF71CD41FDC3D9FAF6GDB9C354C0648DA15AD338C69DBE89C5C38073465C248DB8A242B83FB00ACC08E2077E87C556E5E875746F3D213EBF05065ECF43BCD8E1B67304BA6BA603E3A9AF2E46C28586B725884014558542CE28DFB10426BFC63
	CB0909CF850C091823B385F35E3434559AF50BFB2DA0ED3ADCC6CC1DD2B7D62FEDFBC93D92GCF81926A5BF585C0D5C05D75D82FDBF7D7CCD42F0390C79E2755F1EC681C5B6A11CCC3F607CD7448751BE58AD6BFADE2F20FCDDA0E79A53AC26D1745CFD6272D55704B62686DE9D2BD734714FA45AFCC779B81F547540FEF8F5A2F6BC99C66E411B81C8777AB6598E5783B944FEFD0F096638F5238A5691D10975100F15B1D05F53024CF95F24AEAB46BB07DF9C35A1286E6CFFA23FF5B7EF19F99DB8C00DB00ECC0
	E3C0D1C071C0890D583EBF5ADD9AE25CF62A5A16495E3EE793DC459149E3BD6874CAD6E72FF8426A31DB4FB9C42FA073C46EA1361F73111BC17BD3AF68E8951D22070EADD03AF5D004C072B21E877764929E0FC8F33B6C03A2A898F48BD86EA3FB72C83F35FA2563EE1BD592958E167F5DBD4417172CA720C4A8G6E8BCD44678F51B1EB8954DF87E9662BBD45846B017408897DF220E8A3DC5BA130C5C7F535595ECB4C30FAC6D17F1E3DE4AC91AF09CE49AC3AC5278DEE3CF2DE495EF50ADF7ADC5C66CA0A13BE
	528406FBB9DE3DB71761D0065A4B18EF2279D6C972584F8DC962B1D1126C4EFEC57E9035456B537D3C025C478F10981B82751A8394476B77633DF92A7AD9DC2E8BC36EAE52F2321F7ECC475985F01FE44279F0D396199F531BB0CE5F6A46B8B5E74E900ADF7BC4B3CE896DECE271E9EC726FEBFADA2622A3BA33DBA5175E245D5F3EAAB19D4F7968D875D7AC1F9073FBD489713B8D6C8F831A5D04FE4F5A27E77D4DE4750A5843BABC50E222CD09B2461B3EBFF00CED582F9DE3397B35E3EC737E60B134FD3FD68C
	313C5D7B495C629AF62AE2F27F7E0D348FBB1DA2B51A0B88EC3D71D69771055DE917BE355B7AC569187D32886D5CC4E2EBAE6D0371F01F40E3E978830C251D176F91661D4D571C4F26BFD41136534CE2224A2C44923329381878DCF408036028A65710D3E2F8B96D5FB2AE0FAFBB8FE8736EBBC0627102B8AA73159CD8A310F144B1A4723A45DAB7909FFB6C0350D424434AEB3E7CA6751A2F9B6CA36B4398384E83E23255E7C9BB0CDFD1E15C3CD6CA6CDA847CCB00521BB1EE1EBA30C555DF6500E9F2B99C4C7D
	3CDD9EAC49A16DA8DE9C92E1B8A69D3A1D57655BA59B7D72CE4875E279CF1410FAB954E3C1B329570F79BA0F4C958CFB13E23F038E7503F41CFB8F67285729737BC7B55B10D0CFB3EBBB2959FF5EDADFC64A0D84FC8E2FFBF129FA2CEA74FADD3DF66ABE39BDEAC6DA042F3A3625B3103DD75590EC1DF9350958C1562E714D384ECC5EC45A263025DDD789E4E9C17BFED6BABE3E12CA5743354F6E71427A48A60E200F5FA8A53EA273168C63FA2EDC6D3BF9C97A003E3335B01F0D34787B2E331C7A8E70E8EE1B55
	102B729D2CBDE11A6E0716C5FB324BD631F81753F9E52BB15E859CAFEFEA6A7633E1AE143F30A578581C8C794B7CF8B2DA5BF57AD6DF0C2D11E2B7935FD63632B552FB9CFF1162128AE7EB27B7E9DB10F49C64CDEB43393C25027840F19056BB87518751E519AA9FF43A6CCE09577FF8B9695FAE0F3D5F6EC46C9445E015CE87BCF95DC063E18A14B99B08E18B4C74B994520BB9B65CCC30D4C8E79CC2ECE818E0FAC8D7F16C7B9433C05A46313F9BA5D88424E79F427970694D15240E10DE88148A14538E4F9FC0
	EDC083C0D300E20096GAD814A30C0FCDAD0BE014AF7C1DA820A840A83CA84DA8A14FF98F8013A00A420C820B8204443A81F3AE9A1DCC959415ABAC715CFEC9D37BEBE44EC0B51A827D82E07BF5E96C0A7295B14A076107A8733B5157BF64FE6D237F70270E6497DB358DA017497768EE2FC9E99CF33B5704CG3A5E23F685DFDB8433F5AD0F6B768A52DFC6F83A0326C765BA6489F31BC80CBB2C232EA1688C16A3F41C77193F16C18C68812FBC427C4964FEE1A6631A55E16FF712516E24A0A4D25963B46EA361
	BE9A0871CEEDA675F4FB44BE51833395DB82487C8FD37E020EF65D4E8E641FB26CD3F6B7724E21FD259378EC9DB80FBEB1CCFC5B87E3B8ACE30E3945DE212813703EBE0CF508845EE82085C0A9C03ACE547354A81185C17B6050A0350A69F90576BFB7700DF15E05A6D256A10B751C68B8B6A05A48F3867A623ECD242D8E411353B91749B522E44B79EFFE3AD11DFFE4E83055639AF2FBB17F3B2EECDE36124972F2BED26905255FD1F846C139F71AFC7572ECB9FFEF5DE6F5BEAD771808AB854673621AFCDE3EAF
	834BFF743CE2DB1BEB384BF5CCF239E559B177A61E57A9FAFA212D0E0A36A1F9A142F8DA6CBEF5D70AC05F395F2379475CF6E70BDDF458469544781E3FCC4B21F3F353G4CDD62E1D19AF05960991E36773A02FCD54C4E69E44FAB8B604A72EB0E2B73F77E0565DB7E0279D139DA79BDBCFFEE1DD679924FFF5824159F4173259E2D7223F87EFF67E86547727C4B75DA654F67795EC62D7CC5BCFF03267DCBF8FEC53E16FE61A8667F1BCF7979C7D9FE9BDC591A3721D1BDE61C167343609AF9947BEAD98FF997C1
	57E7672D172CA556E18996DE9E3B4DE46D375091082D397E1B4E31E41C0AB90AEB2EBDE6B24FA7C3FAB9D07EB1FCDE98590D6F76E23EB5D53004D5EB3EE7CC6AFABF2D78989B3FBA0FA96B2538D906746D829B3355AF02D94CB91A75F0C5D3CBA0065DAEA744E6C9D7C76759C64B4156A3071B0FF4B1BBE68F2B57EDD56BF787DC37CD11754F162F66DF6D90969DA36F2167D5AB3A4F8F935DCEF1D84F751BE1CCF1121798C5150672E2FDE505E1EFE05B1F99FEDF5BF6CBF3CB17E23C006B5C749174F9E1972C83
	3A687B7591F51B13F2BF07BFA5F0E5796F0E2A73F3E5F9A55F6213CF7C344BC77E2ACF7EEA15BC73694B3B30ED173F9CA5B81EAA8A788EB92A0B79F21EFCDD74448EA1274A1E467CFA4A2878E541264240FEB5946B8DFBD92C3E5DD7200E5511926FB0CCB05555EC34E3BEEBA8A0BEA3F34832AE0C47ABAD6A775EF3335FCF5B9040E643F1B99E0FAB71E803F8E47A7B9D6FE96B4711D4EEB74FF134E15AF1FCB77E63DC4496F06C6DBA440493083DEEC22C0AE30F76A06666180117974D31A76A91CB6258A30DBA
	396D8ABEC54CC47512B92413E3677311AF6ED39C9B2EFE34DBD0BD3BDDF074171C6FA5EFAECA7A482CC0AA4E27880C59C2931633041773765EG6DC6E78EA6B7C26DA4713A339B4717FB0DE4FC090074EC2078EEDC9B7ECF53E45FBF3367157B69F835301BBD2F2C64789C0AAFD6616CB966009977B9D2A04FF2921FE3EE2BA5750905F482D0B250F22042D3708CF18A1FEB92AB8C42846FEE3BDCEE0BF88926E9652D8EAB7FB15ABE96A8EB0017D7D8391F0409753CDCD2B3FDF626C5815869F139C50FB44AD07A
	66C06E2F2FFE269E83F3E66624E19D7DFD94F1CA5EE7B9657F9E7059112F763E7F3935586F627E61DEA17E161415017A5D82D9E70AFCF5476E60EB6ADC213F01783B60B3D86F82F5833901420122BEC37F2C2EA9E67EA6AEE814A4EB6FGFD62C7E71F300B438ACC96252CEE4D856A3A45C2F973019681AD8192CE0FFFDEE1B6AD26F3EFBE649B005A00FA0042CE23BD8F9AA75C1BE99E8932B7B3FC9C6D1A8DE54681ADD05932986ED37DECE3F20BF2D1AE7D73F6DD81D071678ADF835CF7FD2EA5372CCE6D0781
	6099831A86B487A87E7371FEE0F23F72590FC9G3EA42025C03AB350A74E84120B6DC1B9837018013AD53C8E388FBB23E567073CFE11109F8DB4D74537906E13B5651E2ED75B398CF8B24E42B394D0A5D05B59C0F6BE5E2816BB8DFCEE20F019FFFAC03956BA7F77B2B140BBCF66CF541023718F78F23F3C1C9EF88E6B512A13AB9FED2B1273ADAA3E9E3817B4655E67ED9651B35E0EA840E201662B72185C15C6F51D96C17E92A0419A7C19BE9F720B000CAA3ECE38377949313178D0AD99F3C72CECAC5E4C71B3
	940FD561EC0C0E22F384C927C05E1CF3B8C7FC43ACF03B9FD15DD7187D5B652FC9CC0765EF2A030DAFF755865EFF18D12B3D7FB02BD6FB7F61215A607B8F0F55865EFF082B9D3F7F705D3AACF5F9ECBA12733EC71FF9485E035D6A30DF262F0A0F8123331F0D2BFFB2893C1CC3753B04GF39E8C1F07E0A951F16EBCBC98F7D97B859C17F5E6D2FECFAF0CDFC033016200967462387C757A9D829D17B56608E6DB3F5864223B25925A60EE886C6761060977D8439A48FB13F3AEC9F28D1272913F2501448ABCF4D3
	D05E33EDA06D6331778FC80CD5466FEC206FCD45BE8A3377112769BAB7996A3534975FD136EDA2184E86631A8D3199942B043419E37FC331CEC88FF06C6982FC67B9E6C3DFA5B7862E7BEF9A35E36CBF9A35E36C8F0D4177D1D7B4860AC1E65F5463786EB6015BFC31906B114431FFACC49FAC6518EEAB56CDA7A2B62D815F67F6F36CF7392843413169C7D0C79847120F200EC80E15F6200EE80EBD1A0BBA16F1AC1B2E51B37AA05D0758EF4A31BC8347BE226F4A4D106E6258737DE8CB8F473286D02F4431BF52
	B578FCC8A7F2EC4ADA541142311FD2ECB924B37A91B36AD0C78147A2F4282318E35F6FC1DF0DF1ACB187E527F1CC1F0BFA67F06CC2AE16974F31945E9E3A8144AC3CBD8AB9A6B5208E834766B5208EB347B6B4220EEE0E7DA887F5C4F36C955A9EF3A11D4031F05E9EC99CFB15E2CBA11DEEC72C3282ED496158C5BB6A5D49319729AD922443B9768C5D171A8E69D80EE598E83BC1BAD1A94F0065A5F14CDE073206730845D14C8C69AE0EED21F56B01748847FE1DC977CAA09D4D311B0C548710CED0E49DDCAF47
	6E276F008C97E03DF48131DB72310DCEF3CCB221FDEE0EBDEB427242B936729DEC0FC40ED5D13E94C827BB90BB1F0732859C2B26BE9D00F498479E5AC85FF3C3BA06E333A85FBCC8A7F2EC9B2D47B2C8E78CA256E89EEF73F9B3564D4079DE213618A15D4531D4BAB68DC0BA0CE32693E8F3A447F617E0FD1387F11D52D9CB56E24BA0DD60EC57B5G75G0581C583AD84DA863453552E6B84F238D04EC66526C0BA86A881E889D0069B7AA810854881B485A886A8410DF28F9AE30571EB8A2217DC099EB5CE6C8A
	348E89F30E4F6B11B1D29734977322D57C8BB5E47DE91953FF7D79C3CD5B574AD77FBD1EE0E7C7B6E8E03817C456B3E45FE933AACF3DA72435E764CF6AFDA2B63F6518834F251B4D932FA374B496C5187F3BC65DA243F619697EE8DF1FD7646B15FD669C0E9D74F63A3CF6E55F40DBC04ECF74391C925BD3390D4E79CBA0B61639F1CF656CA66DBD24E13AE6A83A886B780B489B3B0914A701616C1D5E934D024077C1B6EB6F979D58CC7B8A14B18614F011762982F390DF2E72239810A1C4560664D9E09E5CBFAC
	5FB39DFFCF7BE33E8756C1C08C1BD908FAAD9CFB23906BB466C1DB36EF8DE64BEA59863CC6FBFCED198B693C156CAC865371BDBAB7ADA0BA395E82BACEAD07344E0B58F3C7503ECA0EE5F620FDB6AF5A5752B111FD2BD576CD737A5AB7476BEFDFA21DE3E3811F6B45F65DDD6F9BA7C6BA0FA4C3FEAA37AD3F82ED53CBA8A7757B4643AF49518FD94FEF7A397FA52C4B2E01095A9D6B21556EE3D04E8772BD531F5B64EB779EBA4EC7GDF2404F6BF35966D1E4F6DFEEB2D2F5D875B943BC59D5A1D4A6D1E251B48
	6E35C16C568F356B703DBC5311CA57D24500D78D211DFF4EC13DB60E9D4CC55BA30750169BF3A70A0735AABF4E9B7235A591523DBE36645279B28970A5DC6F9055DBF0896621CB08BD500076F5F26C578DE8DF58A534EFC763C4762DD35997F3492FEFDF72376FCF54AF8900AF3A046D176C972FFF24711ABE8C7743E85BE365E8DB43B04A3DD16E5B6E0E03CA3B9F31E37D9C43D817887BC46D3EAEC83BC78D337747CA3C7E3C51576E37296F2301AF0E5B7823D26D7178CD3AFECC863EE51C778303EFFD6EB8C4
	6AA35BEE1848768DC1EC5FB94276D214F6382B8E759BC6D07F4BF53E7A3F5FAE703A9A6A693E3EF544EFDF3F0D3655E9A8E30017A3E485BE1B30051EED0B845E591CFF2651570F31F4BD1BG790BC6306D8C0E096A1F290EC33F7A6BC65BF597D47DBACF78EE1376B905176818138F7C7AD10C3D47699A598269EE0EBDE0C27F050F220DBFB1CD54D7B628EC0C9D7535F17E28FFDF59C757578B81DFBC0A3E6AB085766DG35C9F739DD17FF99ED3AA1AF18CDEBE53F850A1B86A8478A5797D62CD841747F25D1BB
	8E6C6CF98D783BAF232DF3B7EA7BB8114E1F6140B70D73BE5DC856C267DC9E7AD2011D19F9056FFF4F853EC4200CAF20DD3EE0E728185C079AE7EDAC634E5AD4010C658B795DAD65391B2E47EC00393F6063D01E5FB8C41F9522A0BF1A732CBD213DAE5ACE1F9796815F12AF5077A7CFCC9433592A18AC9C033EB826785E8C7733528461F1EEF387FD7E68847C74985AE3F7AAE7CD58998E7390BB754F721F9CA3E316EA234F17097787111D8521659C36BB07A4515BB4GDC185FED72575369313BBCF6E91465FF
	F4C2D38FB2F1BD0375DB7C4A6972587B7BC54F112141F374FD92632B6D8A4057A1AF17E53E214C2D042F8B86AD15DAED5E4F3B36E95968E7G635D521A4375FFBAA0BA99AB4B5B6C4D93D467EF14EC795C4C2CDA7FF3A1A4DE4347705C473FE67B1F7BA07953F97EC22316FC8C4F0F50ACFF9E4F6F4852AABF11673F1129A51F42731F2D514ADF4E73772DD76767DCE179D5D7F8791B3574DBF87E2FB54B6F617943C67FF3B3A4DF02FCB6AF7D30D360EDEA5CC45E877B1CBDE8018EDC3443E637BADC7DBB0A7506
	E2FDD979DEC188FC2EE36AA63DB071191440720F9404FAAEC42B8CF94DCA3265FD57DFE6603EEB6123F788661F262C44F5327F9892F1C5BE1BF1C55973CDF8796B72990DA70FABB67695EE777713F2C6232C6263E2FDF945DE19770942D06B43787FDC78557C17DAAFBFE71CD07C105E2D58BC14BB513992A6336724A27375A32157F351114955F3E747355573EB2714FABE7619E2736C3A506A19FFC61179C5F928F14F7877D704E2BB63CD9B8855AF4C2E0F4FAA75FA562A589836F6F2B6A62C8D5D46B15D64EC
	5C7E25E223C955F7FF1093ACDEBE7ED09DAF7939130B171E5CEB0B97F125E2F3D41AE2736220B617FF44EC165BE315A2E7EF883D2EF18D132B2B50F8EDF5EDD82D5435F70DE273677521577554BAC5EEE4127DE3FEF96831A75AA797FBD756ABF57B678C454647CB2FFD6EDAE98845EE26FBF926A2776D3A506536E7ABF22FE786EB0F32F2B038925B63F00E2ABD0C214BFDE713A277AF06D0FD44E497EFD6FC3DFE0BD24E267C50759FF8D755E7CC1368B326EB6B831F3D2758FE35D031E1C1E368FD609BDB9539
	33F95B824BD5D50118017B2DE33B225B23D74A1839B1C8991F006FAB14B26EF9DF117B20B108DCA548FDC8645899107FEA445FEA67DCED5735DD45F3077F3E95D8B4FFFB56BFE4AF99126C0E6A6AAE3B6490CD72E323FC063116BE871341B36CAA1EC53CC03FF9908F6905C0A9D7715C24071F0B963EC45E59CD04378A521DC083DF623AB3FE07D23F67730234C9C58544C5554758A6793B94396463575E67BFBA7155571B297501636F635DCA8C1C5A23683BEC1CE8FD42FC7913DAD2A699AC423EC47FEE216F7B
	48401C4C313535089506A176AC176D6258AD74DD91F907904F312D94A37627F26C77B508F55D0031332B4867DC3CF2E615BFA9B2D96BFA2E63862E23G6DCB65185E08D8510D08FD07E2C4DF4F0DF836342D08BC73CF07F49C50A220D420741B5AF505C086A0B3D0B7109BA882A88AA896E8BED0A2D08A50721B708C4754AE5287821D9B158F7A53C3AF9EAB7B6D9D5BEB7BD363C4E7BEF342354E162D1B705B905B7C52CC4EB469EFCA30F3E13F207D32B85C7FCCEF8A452B427D4F74DE645FAEB1C3DEF4B86E0B
	8EFF45B34579740CF0464D7E7A37D23C60E6FF7D5FEAC27DBBA1AF62E6547F33DA7FB3E3CBA0CF380579B87F966D7D52A2400DFEF91D10365D2255B65BF2300EA3F27E94955FEC380F53144B28D57BE68170AC86CA15F953EF8DF486F27E38BA95GEF314C5F20A1C7288B70813F3CB1C8CF3BD54B365B79B7DA66487971AA3E8438CF82DAFA2B7FDE720EACFF5BF4915047A2981FC13E1AA3FCF5F6C35A610705C1BA92A8BA42DF471FEA467DB697F8964AFC4972F519DFF99937356B743779E21510EE83BAFD1B
	3F0E3E75D8FF371C972E62198E77B1C07346496D60671E93653C94954FF2384F791A163FF79955313093F82A00ACB2EF4F5782454213C67F7EA529F8A3B4645878F53AA8703EF9EF51447B660EA26D73F71E2271676F060B344F5FDDA9A263B41E3FE3580DC5E45C6E0771331B735D4A31139C1BC24BA45827F61BB440713B28DD84EF9309C24427D33B06A956ADE38F28301378AD01A2721083D59EF0F9D07661A27A7E596EF030742314476E740A9277C7AC35516E362A6CFE0AE344EE32GDCA54C4B4B24328E
	3BD3ECE2DF0361ED79EF7481185D3F253A9FB67D6D4F56CE7BDF50712E6A3C70872A7B18F13F357F6B6BFE61EF2AC37EFE8CDDABC5C11F0B7B9A1ECDBAC2777396C0FA91471EE4FBFC10DE4E31FF4AA6D84E6DB00E5F0E58E9DADE8324BBB9766DB2BC7FE463D885ADAF8E52899C7B102E6F48992BA40EFDDC0776AD65580DF5D81EEE8AE2E55416EEC83BB9768137A51CE32986ACEFBA47EA4A303EB19C0B62B647F36C8D6EAB5D5739DE6E2BC20E5D45FDD544B1A98BFDE564D81E117B0AE39F73B3FEB60E390C
	682BB80EBDC84BDBG69E40E2599513EE59CBBEC4472B226A25610053EBA4D31AD140F1CC7F3F34C1C056505F36C0EAC2C6FF40E25E6E1FD67F06CC53A0E0E0774E20E3DEBC49F24F26CEA867AA07D8EFED6768C5ADC40310AAC7441G47CED19DE3100E6258D66E03D80E8DD0ECBE2493B9760A91EDCE6258B78A5066259CDBD200B66B26A17677ADE8F3A147DE4DC71B8D9C1B5A03B607F16CF76B465BFC05BEB7C482CFAC67CBBB0975184F3143A7D147A20EC59B30AD0B6EC46C39D6ECCBA347BEA9403E5549
	315BDBD1070DE3BFE9C59DA39C7BC3866AD840B1A30F5D459C7BD6A916174A317F20D87ADD6D3A7C3B90BB41E3DC4F3117F83B39B976CEAD72055F05FB1479F55AE7A00AE91FCB843E944EAB7A1DC1A8A51F7E131FC3DF2A535EFB7ED7DACE7E5DE05B5DD84EEB590177495F22630E85F83BB93F37566FEC9D2DC7B864CF3B9B77F36715DD4BF927F9D04E9FD62CD811496BF328CEFBFF7C9C2DCF8270AF3A9B4F9B1C2163ECFAA45CC7A256437DE70CC49BE75405F23EAC100D83D0CEBDDC77F09B5B3235FD5EC3
	FDA881FF983747C2FD968369F80EEDA963ED9C096FD10E121FC24A67DA1E8C6A533593581BFFCF3B0E5877E770AB53174DFD223F87758D11252BEC77B3EC9E023C6EFB78D98EBACE05C3FA9A47D8DF198B69857720EF0F84BD0333EE82DB17C1B97FAE37BF53B11D6AC83F976E6F45B87CDE1033B3BF22F69A01376DDE34F33F916BAB5D0BF65A0C416C5CB0011D33211CDA386E65FA6DD4EF8C6071DC2F090D4510CE6558E0965AD2F09F7A7E1B87945FEF21B1E3063C4E7B303EBF2FA14FG308836DF063EE7F5
	1057B3F86A9565165560FB16317BD0D793559F8D69B80EBDCC473CA4C8AF398FFD717C19EBB96BD7B83DDD7730CF1B1D26F5AC823CF2BA5661E2CD1ECF9D9AF12413E5EE677677CCC7DBDBF83BCD6165FCE9749D7BDEACD1FC77FB4A9F8F3C73F999AF95E039299CFBE78B418AE7405CB28331A4BA77F5C13AE7867A650D7C09E2B918DF26C1B9B701DFD4E7F6693C9985F8748C2CCF647A40317C981DBF9301B7095B397FA47AA4E3A60F65139345325A4E2A193EF6DAE67A47728F595C8B38EDA66AFD134E1F53
	A09D4531F3543773A13D10E3F12DE85FF2EE5FEFDBC3B93F99480FC577AB63AD5321273F6F28843C61FE54AB5236F7C0FA04E32F1622AD5177233FF5FE6787FFCD0E894B636C60046787D78531B371FE761EEB9D3773ED9E3FC97723AF0AEBA70AA9759C199165F72EB60A69A077015FFDB7CDE25FAA23CC11FBB2BB589E0A21C23D7FD3DA2E487D25B6F439A986C56E0132496DDB7D8335155D7FDC257F05C958ADD4AAF245F5C176DFAA4A653D9F46BBBC891FFE7021E2E74BC7AA7F9AA7586FD16DB5BDD82548
	A5073C3FA71FC3AD8B5D5697BED1746C1EC49DD3D45F0C31E7056E7F8D2AEF2268026EF77A4AB5B7A8F27BA7395FB9502834473DA6251C72C9587D3DA6C56E8FB54162466093B7A6E368BEDDECD66CDC217A1DC956C4F1235ADF5C512A483D14B9511E94638B4F8A5D4666B6257CE7EA02792FD2769F634D26ED2D5AE6AAB9C67E62CF113DF4DF8E5B6B2022431B910A8EA6772A6AAC762CB3130B117F34A83E579FD14A6918C49D9F2C89250E72190DC94445118E451EFB8BC237671785217B7C226A3CE0CCCB68
	BEFF6B28A2777F72A767735CAE4567152AF3F8496BC2577F6989D53F6C1EC43FBC990A7F836F83DF7ED431BDDAF59E6F695650477817D5E772DE5A9C5A793637CEA9B2E141F4794DDFAF37069EEF0527153A55FF2E68CB88B66E7955ED6ED9C5EEE648E7F8987F9B25215B7A0B9EC54F7A5AEBEB5334F3A4453E25595DF6C3B62C71FEAB2C76FA040D636B5BB8751FFF9AF3561C1FA6249D94568C50FD0B03426AE13281B26206955AF7006E72DE942EF2B502A42CA75FE854130FB4D6CB42268F742EBEBD7B6A22
	3E595ABB00997964FBBAD627CDFFD4740A64E215883C19326A790792756CCB04C4204DB52C17DCFA7201C3BDF4EF4963F2G7C9E93E8323A2D3DF6E9D44F3FED285FD58D354A74E90D973E71619B892F1F702E92569C94361017BC47C48F7DFE05E8B3DBA57C10FD0B304ECDBEE0CB9ED48E8A69DEFAD96D15C69D22C5486FBBCABE6E6C15C4DBA3FE6540AB896FD80826D2F29825344D6A9D10486ED50DC5C8F712CF6E8B9BD936436A6CAFE51F4928A19E94D6B6B6D0375153E0E0EF9E351714D242CB49FBA6FB
	577B071263D789E9AD42FA074BEAEB3176CAAE4FC1E11DB460913D83AE07ED44DD4F8A52516FF8525FGC1F16F716A134A161007EAEE7405118726E426E43624894208C7A8251C64192104F310F3719ED0A5FA8ECA643F90F0F9F6723C9B36C93BDFE95DFCBACDD8A9D7120441069137449C864A33E911244AA5ADE03574AF3F7D4103BFB326AE811196E1B57D7CB1A84ED13858497BDBE26E593AA1B269F6E2171B380786D836A42C69338E5A9D23F0E326FD8A71F512476A747639BC0320D46FD7E34C6206175C
	7D8343BD5F7E63A9EA38A2AA895BD99301E8E93F689AACED6C6B33BBC5DEG3497943F1597CFF8CA7CF8B60E5C794E2157D61C0378B28B2B868D867A370C7EADA7FF4BA8D2C61132F2E834D4A168BF7F7C1191D26702916EDDE249C13AB118F42922FA552F3E39AACDC8074E4AB6CAA1F849EEA7842F07755DD550F9E85C618FFE48C356865E034930F09BCD6965BC7AB290E83DEFAF8FA0112612C85310D8B7AE62891AB9BEF4891CCBB37388BB3959445B1D2436504C77685FEDDF4D0B7BC7385D2BD55ED8F37D
	D9DA2EED69DA1FD6F8FCDCAB102700D5BEBCD783C82C1AC0623A72C63D620DB5633CF1DDD95A22D80A9FA5A00B0B555C4384F1EB242E2BDAF4A835C89714D7B8EB825442B7320844C431C8FE64536D930B247CA1A24DF9085FCE7194F9AFD244D330CADD59F17D796D2C6237078436942B7171827DA789B96CB7E3FA7CA99EACEA56948D5A1DA5FB15BC7C799C64E54BBFD3533359D20D301F3991047C940DAC1618F835CFD375EB242EAB4739C6FC0281772AD6862885899F7DB809D5BE920427687A2B69E55F01
	9D5F3A2E7E3F55DEB77936D73AB0F1FBED9B57DE6BFDA4C8F7AF726DA8BE255D21113A2EFCF2276213ECC109617489EBF19D5769FE25CE643B9769F25DF481EA615B4E680575BEDED07AA57F9720DF237C2AG725715279E711DB23175851F25B5FA037CE33F775C7B257A9B3F4BEEDE9B70BB6783B16C1C65D80C7F7FCFB3C63FBF938FF8E28C1E9DFF6EB059FC8D747D45E303D607C332BAAEB4BAED64DB0C26D1C9D43E77F74391D23E97F964CC1697F10458FDDEA5737F81D0CB8788421F83B838A3GG04F4
	GGD0CB818294G94G88G88GC5DA82AD421F83B838A3GG04F4GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG72A3GGGG
**end of data**/
}

/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private String getChangeCondition( String change )
{

	if( change.equalsIgnoreCase("After a Duration") )
	{
		return LMProgramDirectGear.CHANGE_DURATION;
	}
	else if( change.equalsIgnoreCase("Priority Change") )
	{
		return LMProgramDirectGear.CHANGE_PRIORITY;
	}
	else if( change.equalsIgnoreCase("Above Trigger") )
	{
		return LMProgramDirectGear.CHANGE_TRIGGER_OFFSET;
	}	
	else
		return LMProgramDirectGear.CHANGE_NONE;

}


/**
 * Return the JComboBoxGroupSelection property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxGroupSelection() {
	if (ivjJComboBoxGroupSelection == null) {
		try {
			ivjJComboBoxGroupSelection = new javax.swing.JComboBox();
			ivjJComboBoxGroupSelection.setName("JComboBoxGroupSelection");
			ivjJComboBoxGroupSelection.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxGroupSelection.setMinimumSize(new java.awt.Dimension(126, 23));
			// user code begin {1}
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LAST_CONTROLLED ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_ALWAYS_FIRST_GROUP ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LEAST_CONTROL_TIME ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxGroupSelection;
}

/**
 * Return the JComboBoxHowToStop property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxHowToStop() {
	if (ivjJComboBoxHowToStop == null) {
		try {
			ivjJComboBoxHowToStop = new javax.swing.JComboBox();
			ivjJComboBoxHowToStop.setName("JComboBoxHowToStop");
			ivjJComboBoxHowToStop.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxHowToStop.setMinimumSize(new java.awt.Dimension(126, 23));
			// user code begin {1}
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_TIME_IN ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RESTORE ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxHowToStop;
}

/**
 * Return the JComboBoxNumGroups property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxNumGroups() {
	if (ivjJComboBoxNumGroups == null) {
		try {
			ivjJComboBoxNumGroups = new javax.swing.JComboBox();
			ivjJComboBoxNumGroups.setName("JComboBoxNumGroups");
			ivjJComboBoxNumGroups.setPreferredSize(new java.awt.Dimension(137, 23));
			ivjJComboBoxNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxNumGroups.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxNumGroups.addItem("All of Them");
			for( int i = 1; i < 26; i++ )
				ivjJComboBoxNumGroups.addItem( new Integer(i) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxNumGroups;
}

/**
 * Return the JComboBoxSendRate property value.
 * @return javax.swing.JComboBox
 */
private javax.swing.JComboBox getJComboBoxSendRateDigits() {
	if (ivjJComboBoxSendRateDigits == null) {
		try {
			ivjJComboBoxSendRateDigits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateDigits.setName("JComboBoxSendRateDigits");
			ivjJComboBoxSendRateDigits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setComponentOrientation(java.awt.ComponentOrientation.LEFT_TO_RIGHT);
			ivjJComboBoxSendRateDigits.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxSendRateDigits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setMinimumSize(new java.awt.Dimension(0, 0));
			ivjJComboBoxSendRateDigits.setEditable(true);
			// user code begin {1}
			NewComboBoxEditor ncb = new NewComboBoxEditor();
			ncb.getJTextField().setDocument( 
				  new com.cannontech.common.gui.unchanging.LongRangeDocument(0, 1000) );
         	ivjJComboBoxSendRateDigits.setEditor( ncb );
			
			ivjJComboBoxSendRateDigits.addItem("0");
			ivjJComboBoxSendRateDigits.addItem("1");
			ivjJComboBoxSendRateDigits.addItem("2");
			ivjJComboBoxSendRateDigits.addItem("5");
			ivjJComboBoxSendRateDigits.addItem("8");
			ivjJComboBoxSendRateDigits.addItem("10");
			ivjJComboBoxSendRateDigits.addItem("15");
			ivjJComboBoxSendRateDigits.addItem("20");
			ivjJComboBoxSendRateDigits.addItem("30");
			ivjJComboBoxSendRateDigits.addItem("45");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateDigits;
}
/**
 * Return the JComboBoxSendRate11 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRateUnits() {
	if (ivjJComboBoxSendRateUnits == null) {
		try {
			ivjJComboBoxSendRateUnits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateUnits.setName("JComboBoxSendRateUnits");
			ivjJComboBoxSendRateUnits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setComponentOrientation(java.awt.ComponentOrientation.LEFT_TO_RIGHT);
			ivjJComboBoxSendRateUnits.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxSendRateUnits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxSendRateUnits.addItem("minutes");
			ivjJComboBoxSendRateUnits.addItem("hours");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateUnits;
}

/**
 * Return the JComboBoxShedTime property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxShedTime() {
	if (ivjJComboBoxShedTime == null) {
		try {
			ivjJComboBoxShedTime = new javax.swing.JComboBox();
			ivjJComboBoxShedTime.setName("JComboBoxShedTime");
			ivjJComboBoxShedTime.setPreferredSize(new java.awt.Dimension(137, 23));
			ivjJComboBoxShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxShedTime.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxShedTime.addItem("5 minutes");
			ivjJComboBoxShedTime.addItem("7 minutes");
			ivjJComboBoxShedTime.addItem("10 minutes");
			ivjJComboBoxShedTime.addItem("15 minutes");
			ivjJComboBoxShedTime.addItem("20 minutes");
			ivjJComboBoxShedTime.addItem("30 minutes");
			ivjJComboBoxShedTime.addItem("45 minutes");
			ivjJComboBoxShedTime.addItem("1 hour");
			ivjJComboBoxShedTime.addItem("2 hours");
			ivjJComboBoxShedTime.addItem("3 hours");
			ivjJComboBoxShedTime.addItem("4 hours");
			ivjJComboBoxShedTime.addItem("6 hours");
			ivjJComboBoxShedTime.addItem("8 hours");
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxShedTime;
}

/**
 * Return the JComboBoxWhenChange property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxWhenChange() {
	if (ivjJComboBoxWhenChange == null) {
		try {
			ivjJComboBoxWhenChange = new javax.swing.JComboBox();
			ivjJComboBoxWhenChange.setName("JComboBoxWhenChange");
			ivjJComboBoxWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxWhenChange.addItem("Manually Only");
			ivjJComboBoxWhenChange.addItem("After a Duration");
			ivjJComboBoxWhenChange.addItem("Priority Change");
			ivjJComboBoxWhenChange.addItem("Above Trigger");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxWhenChange;
}


/**
 * Return the JCSpinFieldChangeDuration property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeDuration() {
	if (ivjJCSpinFieldChangeDuration == null) {
		try {
			ivjJCSpinFieldChangeDuration = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeDuration.setName("JCSpinFieldChangeDuration");
			ivjJCSpinFieldChangeDuration.setPreferredSize(new java.awt.Dimension(32, 20));
			ivjJCSpinFieldChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeDuration.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeDuration.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(3)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeDuration;
}

/**
 * Return the JCSpinFieldChangePriority property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangePriority() {
	if (ivjJCSpinFieldChangePriority == null) {
		try {
			ivjJCSpinFieldChangePriority = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangePriority.setName("JCSpinFieldChangePriority");
			ivjJCSpinFieldChangePriority.setPreferredSize(new java.awt.Dimension(30, 20));
			ivjJCSpinFieldChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangePriority.setMaximumSize(new java.awt.Dimension(30, 20));
			ivjJCSpinFieldChangePriority.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJCSpinFieldChangePriority.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(9999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(0)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangePriority;
}

/**
 * Return the JCSpinFieldChangeTriggerNumber property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeTriggerNumber() {
	if (ivjJCSpinFieldChangeTriggerNumber == null) {
		try {
			ivjJCSpinFieldChangeTriggerNumber = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeTriggerNumber.setName("JCSpinFieldChangeTriggerNumber");
			ivjJCSpinFieldChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(32, 20));
			ivjJCSpinFieldChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeTriggerNumber.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(1), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(1)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeTriggerNumber;
}

/**
 * Return the JCSpinFieldPercentReduction property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldPercentReduction() {
	if (ivjJCSpinFieldPercentReduction == null) {
		try {
			ivjJCSpinFieldPercentReduction = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldPercentReduction.setName("JCSpinFieldPercentReduction");
			ivjJCSpinFieldPercentReduction.setPreferredSize(new java.awt.Dimension(88, 20));
			ivjJCSpinFieldPercentReduction.setMaximumSize(new java.awt.Dimension(90, 30));
			ivjJCSpinFieldPercentReduction.setMinimumSize(new java.awt.Dimension(40, 50));
			// user code begin {1}
			ivjJCSpinFieldPercentReduction.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(100), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(100)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));

			ivjJCSpinFieldPercentReduction.setValue( new Integer(100) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldPercentReduction;
}

/**
 * Return the JLabelChangeDuration property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeDuration() {
	if (ivjJLabelChangeDuration == null) {
		try {
			ivjJLabelChangeDuration = new javax.swing.JLabel();
			ivjJLabelChangeDuration.setName("JLabelChangeDuration");
			ivjJLabelChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeDuration.setText("Change Duration:");
			ivjJLabelChangeDuration.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeDuration.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeDuration;
}


/**
 * Return the JLabelChangePriority property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangePriority() {
	if (ivjJLabelChangePriority == null) {
		try {
			ivjJLabelChangePriority = new javax.swing.JLabel();
			ivjJLabelChangePriority.setName("JLabelChangePriority");
			ivjJLabelChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangePriority.setText("Change Priority:");
			ivjJLabelChangePriority.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangePriority.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangePriority;
}


/**
 * Return the JLabelChangeTriggerNumber property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerNumber() {
	if (ivjJLabelChangeTriggerNumber == null) {
		try {
			ivjJLabelChangeTriggerNumber = new javax.swing.JLabel();
			ivjJLabelChangeTriggerNumber.setName("JLabelChangeTriggerNumber");
			ivjJLabelChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerNumber.setText("Trigger Number:");
			ivjJLabelChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerNumber.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerNumber;
}


/**
 * Return the JLabelChangeTriggerOffset property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerOffset() {
	if (ivjJLabelChangeTriggerOffset == null) {
		try {
			ivjJLabelChangeTriggerOffset = new javax.swing.JLabel();
			ivjJLabelChangeTriggerOffset.setName("JLabelChangeTriggerOffset");
			ivjJLabelChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerOffset.setText("Trigger Offset:");
			ivjJLabelChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerOffset.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerOffset;
}


/**
 * Return the JLabelGroupSelection property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelGroupSelection() {
	if (ivjJLabelGroupSelection == null) {
		try {
			ivjJLabelGroupSelection = new javax.swing.JLabel();
			ivjJLabelGroupSelection.setName("JLabelGroupSelection");
			ivjJLabelGroupSelection.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelGroupSelection.setText("Group Selection Method:");
			ivjJLabelGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelGroupSelection;
}

/**
 * Return the JLabelHowToStop property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHowToStop() {
	if (ivjJLabelHowToStop == null) {
		try {
			ivjJLabelHowToStop = new javax.swing.JLabel();
			ivjJLabelHowToStop.setName("JLabelHowToStop");
			ivjJLabelHowToStop.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelHowToStop.setText("How to Stop Control:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHowToStop;
}

/**
 * Return the JLabelMinutesChDur property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMinutesChDur() {
	if (ivjJLabelMinutesChDur == null) {
		try {
			ivjJLabelMinutesChDur = new javax.swing.JLabel();
			ivjJLabelMinutesChDur.setName("JLabelMinutesChDur");
			ivjJLabelMinutesChDur.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMinutesChDur.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelMinutesChDur.setText("(min.)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMinutesChDur;
}


/**
 * Return the JLabelNumGroups property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNumGroups() {
	if (ivjJLabelNumGroups == null) {
		try {
			ivjJLabelNumGroups = new javax.swing.JLabel();
			ivjJLabelNumGroups.setName("JLabelNumGroups");
			ivjJLabelNumGroups.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelNumGroups.setText("# of Groups Each Time:");
			ivjJLabelNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNumGroups;
}

/**
 * Return the JLabelPercentReduction property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPercentReduction() {
	if (ivjJLabelPercentReduction == null) {
		try {
			ivjJLabelPercentReduction = new javax.swing.JLabel();
			ivjJLabelPercentReduction.setName("JLabelPercentReduction");
			ivjJLabelPercentReduction.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelPercentReduction.setText("Group Capacity Reduction %:");
			ivjJLabelPercentReduction.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelPercentReduction.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPercentReduction;
}

/**
 * Return the JLabelShedTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelShedTime() {
	if (ivjJLabelShedTime == null) {
		try {
			ivjJLabelShedTime = new javax.swing.JLabel();
			ivjJLabelShedTime.setName("JLabelShedTime");
			ivjJLabelShedTime.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelShedTime.setText("Shed Time:");
			ivjJLabelShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelShedTime;
}

/**
 * Return the JLabelSendRate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSendRate() {
	if (ivjJLabelSendRate == null) {
		try {
			ivjJLabelSendRate = new javax.swing.JLabel();
			ivjJLabelSendRate.setName("JLabelSendRate");
			ivjJLabelSendRate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelSendRate.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelSendRate.setText("Command Resend Rate:");
			ivjJLabelSendRate.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSendRate;
}

/**
 * Return the JLabelWhenChange property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelWhenChange() {
	if (ivjJLabelWhenChange == null) {
		try {
			ivjJLabelWhenChange = new javax.swing.JLabel();
			ivjJLabelWhenChange.setName("JLabelWhenChange");
			ivjJLabelWhenChange.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelWhenChange.setText("When to Change:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelWhenChange;
}


/**
 * Return the JPanelChangeMethod property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelChangeMethod() {
	if (ivjJPanelChangeMethod == null) {
		try {
			ivjJPanelChangeMethod = new javax.swing.JPanel();
			ivjJPanelChangeMethod.setName("JPanelChangeMethod");
			//ivjJPanelChangeMethod.setBorder(new com.ibm.uvm.abt.edit.DeletedClassView());
			ivjJPanelChangeMethod.setLayout(new java.awt.GridBagLayout());
			ivjJPanelChangeMethod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJPanelChangeMethod.setPreferredSize(new java.awt.Dimension(335, 87));
			ivjJPanelChangeMethod.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJPanelChangeMethod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJPanelChangeMethod.setMinimumSize(new java.awt.Dimension(0, 0));

			java.awt.GridBagConstraints constraintsJLabelChangeDuration = new java.awt.GridBagConstraints();
			constraintsJLabelChangeDuration.gridx = 1; constraintsJLabelChangeDuration.gridy = 2;
			constraintsJLabelChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeDuration.ipadx = -5;
			constraintsJLabelChangeDuration.ipady = 6;
			constraintsJLabelChangeDuration.insets = new java.awt.Insets(1, 5, 3, 5);
			getJPanelChangeMethod().add(getJLabelChangeDuration(), constraintsJLabelChangeDuration);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeDuration = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeDuration.gridx = 2; constraintsJCSpinFieldChangeDuration.gridy = 2;
			constraintsJCSpinFieldChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeDuration.ipadx = 31;
			constraintsJCSpinFieldChangeDuration.ipady = 19;
			constraintsJCSpinFieldChangeDuration.insets = new java.awt.Insets(1, 5, 3, 3);
			getJPanelChangeMethod().add(getJCSpinFieldChangeDuration(), constraintsJCSpinFieldChangeDuration);

			java.awt.GridBagConstraints constraintsJLabelMinutesChDur = new java.awt.GridBagConstraints();
			constraintsJLabelMinutesChDur.gridx = 3; constraintsJLabelMinutesChDur.gridy = 2;
			constraintsJLabelMinutesChDur.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelMinutesChDur.ipadx = 5;
			constraintsJLabelMinutesChDur.ipady = -2;
			constraintsJLabelMinutesChDur.insets = new java.awt.Insets(5, 3, 5, 3);
			getJPanelChangeMethod().add(getJLabelMinutesChDur(), constraintsJLabelMinutesChDur);

			java.awt.GridBagConstraints constraintsJLabelChangePriority = new java.awt.GridBagConstraints();
			constraintsJLabelChangePriority.gridx = 4; constraintsJLabelChangePriority.gridy = 2;
			constraintsJLabelChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangePriority.ipadx = -13;
			constraintsJLabelChangePriority.ipady = 6;
			constraintsJLabelChangePriority.insets = new java.awt.Insets(1, 4, 3, 5);
			getJPanelChangeMethod().add(getJLabelChangePriority(), constraintsJLabelChangePriority);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangePriority = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangePriority.gridx = 5; constraintsJCSpinFieldChangePriority.gridy = 2;
			constraintsJCSpinFieldChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangePriority.fill = java.awt.GridBagConstraints.NONE;
			constraintsJCSpinFieldChangePriority.ipadx = 0;
			constraintsJCSpinFieldChangePriority.ipady = 0;
			constraintsJCSpinFieldChangePriority.insets = new java.awt.Insets(1, 5, 3, 10);
			getJPanelChangeMethod().add(getJCSpinFieldChangePriority(), constraintsJCSpinFieldChangePriority);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerNumber.gridx = 1; constraintsJLabelChangeTriggerNumber.gridy = 3;
			constraintsJLabelChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerNumber.ipadx = -45;
			constraintsJLabelChangeTriggerNumber.ipady = 6;
			constraintsJLabelChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 5);
			getJPanelChangeMethod().add(getJLabelChangeTriggerNumber(), constraintsJLabelChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerOffset.gridx = 4; constraintsJLabelChangeTriggerOffset.gridy = 3;
			constraintsJLabelChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerOffset.ipadx = -63;
			constraintsJLabelChangeTriggerOffset.insets = new java.awt.Insets(8, 4, 17, 15);
			getJPanelChangeMethod().add(getJLabelChangeTriggerOffset(), constraintsJLabelChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJTextFieldChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJTextFieldChangeTriggerOffset.gridx = 5; constraintsJTextFieldChangeTriggerOffset.gridy = 3;
			constraintsJTextFieldChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextFieldChangeTriggerOffset.weightx = 1.0;
			constraintsJTextFieldChangeTriggerOffset.ipadx = 30;
			constraintsJTextFieldChangeTriggerOffset.ipady = 20;
			constraintsJTextFieldChangeTriggerOffset.insets = new java.awt.Insets(4, 5, 15, 10);
			getJPanelChangeMethod().add(getJTextFieldChangeTriggerOffset(), constraintsJTextFieldChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeTriggerNumber.gridx = 2; constraintsJCSpinFieldChangeTriggerNumber.gridy = 3;
			constraintsJCSpinFieldChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeTriggerNumber.ipadx = 31;
			constraintsJCSpinFieldChangeTriggerNumber.ipady = 19;
			constraintsJCSpinFieldChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 3);
			getJPanelChangeMethod().add(getJCSpinFieldChangeTriggerNumber(), constraintsJCSpinFieldChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelWhenChange = new java.awt.GridBagConstraints();
			constraintsJLabelWhenChange.gridx = 1; constraintsJLabelWhenChange.gridy = 1;
			constraintsJLabelWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelWhenChange.ipadx = 3;
			constraintsJLabelWhenChange.ipady = 4;
			constraintsJLabelWhenChange.insets = new java.awt.Insets(0, 5, 4, 5);
			getJPanelChangeMethod().add(getJLabelWhenChange(), constraintsJLabelWhenChange);

			java.awt.GridBagConstraints constraintsJComboBoxWhenChange = new java.awt.GridBagConstraints();
			constraintsJComboBoxWhenChange.gridx = 4; constraintsJComboBoxWhenChange.gridy = 1;
			constraintsJComboBoxWhenChange.gridwidth = 2;
			constraintsJComboBoxWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJComboBoxWhenChange.weightx = 1.0;
			constraintsJComboBoxWhenChange.ipadx = 3;
			constraintsJComboBoxWhenChange.insets = new java.awt.Insets(0, 5, 1, 10);
			getJPanelChangeMethod().add(getJComboBoxWhenChange(), constraintsJComboBoxWhenChange);
			// user code begin {1}
			jComboBoxWhenChange_ActionPerformed(null);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelChangeMethod;
}

/**
 * Return the JTextFieldChangeTriggerOffset property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldChangeTriggerOffset() {
	if (ivjJTextFieldChangeTriggerOffset == null) {
		try {
			ivjJTextFieldChangeTriggerOffset = new javax.swing.JTextField();
			ivjJTextFieldChangeTriggerOffset.setName("JTextFieldChangeTriggerOffset");
			ivjJTextFieldChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(30, 20));
			ivjJTextFieldChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(40, 20));
			ivjJTextFieldChangeTriggerOffset.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJTextFieldChangeTriggerOffset.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999.9999, 99999.9999, 4) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldChangeTriggerOffset;
}

/**
 * getValue method comment.
 */
public Object getValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	gear = (LMProgramDirectGear)o;
	
	if( getJComboBoxHowToStop().getSelectedItem() != null )
	{
		gear.setMethodStopType( 
			com.cannontech.common.util.StringUtils.removeChars( ' ', getJComboBoxHowToStop().getSelectedItem().toString() ) );
	}

	gear.setPercentReduction( new Integer( ((Number)getJCSpinFieldPercentReduction().getValue()).intValue() ) );
	
	gear.setChangeCondition( getChangeCondition(getJComboBoxWhenChange().getSelectedItem().toString()) );
	
	gear.setChangeDuration( new Integer( ((Number)getJCSpinFieldChangeDuration().getValue()).intValue() * 60 ) );
	gear.setChangePriority( new Integer( ((Number)getJCSpinFieldChangePriority().getValue()).intValue() ) );
	gear.setChangeTriggerNumber( new Integer( ((Number)getJCSpinFieldChangeTriggerNumber().getValue()).intValue() ) );
	
	if( getJTextFieldChangeTriggerOffset().getText() == null || getJTextFieldChangeTriggerOffset().getText().length() <= 0 )
		gear.setChangeTriggerOffset( new Double(0.0) );
	else
		gear.setChangeTriggerOffset( Double.valueOf(getJTextFieldChangeTriggerOffset().getText()) );

	com.cannontech.database.data.device.lm.RotationGear r = (com.cannontech.database.data.device.lm.RotationGear)gear;

	r.setShedTime( com.cannontech.common.util.CtiUtilities.getIntervalComboBoxSecondsValue( getJComboBoxShedTime() ) );

	r.setNumberOfGroups( getJComboBoxNumGroups().getSelectedItem() );

	String sendRateString = (String)(getJComboBoxSendRateDigits().getSelectedItem()) + " " + (String)(getJComboBoxSendRateUnits().getSelectedItem());	
	r.setSendRate( com.cannontech.common.util.CtiUtilities.getIntervalSecondsValue( sendRateString ) );
		
	r.setGroupSelectionMethod( StringUtils.removeChars( ' ', getJComboBoxGroupSelection().getSelectedItem().toString() ) );
	
	return r;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	getJCSpinFieldChangeDuration().addValueListener(this);
	getJCSpinFieldChangePriority().addValueListener(this);
	getJCSpinFieldChangeTriggerNumber().addValueListener(this);
	getJCSpinFieldPercentReduction().addValueListener(this);
	getJComboBoxWhenChange().addActionListener(this);
	getJComboBoxShedTime().addActionListener(this);
	getJComboBoxNumGroups().addActionListener(this);
	getJComboBoxSendRateDigits().addActionListener(this);
	getJComboBoxSendRateUnits().addActionListener(this);
	getJComboBoxGroupSelection().addActionListener(this);
	getJComboBoxHowToStop().addActionListener(this);
	getJTextFieldChangeTriggerOffset().addCaretListener(this);

	// user code end
	
}

/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try 
	{
		// user code begin {1}
		// user code end
		setName("RotationGearPanel");
		setLayout(new java.awt.GridBagLayout());
		setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
		setPreferredSize(new java.awt.Dimension(402, 430));
		setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
		setSize(402, 430);
		setMinimumSize(new java.awt.Dimension(0, 0));

		java.awt.GridBagConstraints constraintsJLabelShedTime = new java.awt.GridBagConstraints();
		constraintsJLabelShedTime.gridx = 1; constraintsJLabelShedTime.gridy = 1;
		constraintsJLabelShedTime.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelShedTime.ipadx = 83;
		constraintsJLabelShedTime.insets = new java.awt.Insets(11, 13, 7, 1);
		add(getJLabelShedTime(), constraintsJLabelShedTime);

		java.awt.GridBagConstraints constraintsJComboBoxShedTime = new java.awt.GridBagConstraints();
		constraintsJComboBoxShedTime.gridx = 2; constraintsJComboBoxShedTime.gridy = 1;
		constraintsJComboBoxShedTime.gridwidth = 2;
		constraintsJComboBoxShedTime.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxShedTime.weightx = 1.0;
		constraintsJComboBoxShedTime.ipadx = 137;
		constraintsJComboBoxShedTime.ipady = 23;
		constraintsJComboBoxShedTime.insets = new java.awt.Insets(10, 1, 1, 104);
		add(getJComboBoxShedTime(), constraintsJComboBoxShedTime);

		java.awt.GridBagConstraints constraintsJComboBoxNumGroups = new java.awt.GridBagConstraints();
		constraintsJComboBoxNumGroups.gridx = 2; constraintsJComboBoxNumGroups.gridy = 2;
		constraintsJComboBoxNumGroups.gridwidth = 2;
		constraintsJComboBoxNumGroups.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxNumGroups.weightx = 1.0;
		constraintsJComboBoxNumGroups.ipadx = 137;
		constraintsJComboBoxNumGroups.ipady = 23;
		constraintsJComboBoxNumGroups.insets = new java.awt.Insets(2, 1, 2, 104);
		add(getJComboBoxNumGroups(), constraintsJComboBoxNumGroups);

		java.awt.GridBagConstraints constraintsJLabelNumGroups = new java.awt.GridBagConstraints();
		constraintsJLabelNumGroups.gridx = 1; constraintsJLabelNumGroups.gridy = 2;
		constraintsJLabelNumGroups.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelNumGroups.ipadx = 17;
		constraintsJLabelNumGroups.insets = new java.awt.Insets(6, 13, 5, 1);
		add(getJLabelNumGroups(), constraintsJLabelNumGroups);

		java.awt.GridBagConstraints constraintsJLabelSendRate = new java.awt.GridBagConstraints();
		constraintsJLabelSendRate.gridx = 1; constraintsJLabelSendRate.gridy = 3;
		constraintsJLabelSendRate.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelSendRate.ipadx = 8;
		constraintsJLabelSendRate.insets = new java.awt.Insets(7, 13, 5, 1);
		add(getJLabelSendRate(), constraintsJLabelSendRate);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateDigits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateDigits.gridx = 2; constraintsJComboBoxSendRateDigits.gridy = 3;
		constraintsJComboBoxSendRateDigits.gridwidth = 2;
		constraintsJComboBoxSendRateDigits.fill = java.awt.GridBagConstraints.VERTICAL;
		constraintsJComboBoxSendRateDigits.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJComboBoxSendRateDigits.weightx = 1.0;
		constraintsJComboBoxSendRateDigits.ipadx = 83;
		constraintsJComboBoxSendRateDigits.ipady = 23;
		constraintsJComboBoxSendRateDigits.insets = new java.awt.Insets(3, 1, 2, 161);
		add(getJComboBoxSendRateDigits(), constraintsJComboBoxSendRateDigits);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateUnits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateUnits.gridx = 3; constraintsJComboBoxSendRateUnits.gridy = 3;
		constraintsJComboBoxSendRateUnits.fill = java.awt.GridBagConstraints.VERTICAL;
		constraintsJComboBoxSendRateUnits.anchor = java.awt.GridBagConstraints.EAST;
		constraintsJComboBoxSendRateUnits.weightx = 1.0;
		constraintsJComboBoxSendRateUnits.ipadx = 98;
		constraintsJComboBoxSendRateUnits.ipady = 23;
		constraintsJComboBoxSendRateUnits.insets = new java.awt.Insets(3, 56, 2, 64);
		add(getJComboBoxSendRateUnits(), constraintsJComboBoxSendRateUnits);

		java.awt.GridBagConstraints constraintsJComboBoxGroupSelection = new java.awt.GridBagConstraints();
		constraintsJComboBoxGroupSelection.gridx = 2; constraintsJComboBoxGroupSelection.gridy = 4;
		constraintsJComboBoxGroupSelection.gridwidth = 2;
		constraintsJComboBoxGroupSelection.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxGroupSelection.weightx = 1.0;
		constraintsJComboBoxGroupSelection.ipadx = 49;
		constraintsJComboBoxGroupSelection.insets = new java.awt.Insets(3, 1, 3, 66);
		add(getJComboBoxGroupSelection(), constraintsJComboBoxGroupSelection);

		java.awt.GridBagConstraints constraintsJLabelGroupSelection = new java.awt.GridBagConstraints();
		constraintsJLabelGroupSelection.gridx = 1; constraintsJLabelGroupSelection.gridy = 4;
		constraintsJLabelGroupSelection.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelGroupSelection.ipadx = 12;
		constraintsJLabelGroupSelection.insets = new java.awt.Insets(7, 13, 6, 1);
		add(getJLabelGroupSelection(), constraintsJLabelGroupSelection);

		java.awt.GridBagConstraints constraintsJLabelHowToStop = new java.awt.GridBagConstraints();
		constraintsJLabelHowToStop.gridx = 1; constraintsJLabelHowToStop.gridy = 5;
		constraintsJLabelHowToStop.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelHowToStop.ipadx = 4;
		constraintsJLabelHowToStop.insets = new java.awt.Insets(5, 14, 9, 30);
		add(getJLabelHowToStop(), constraintsJLabelHowToStop);

		java.awt.GridBagConstraints constraintsJLabelPercentReduction = new java.awt.GridBagConstraints();
		constraintsJLabelPercentReduction.gridx = 1; constraintsJLabelPercentReduction.gridy = 6;
		constraintsJLabelPercentReduction.gridwidth = 2;
		constraintsJLabelPercentReduction.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelPercentReduction.ipadx = 53;
		constraintsJLabelPercentReduction.ipady = 3;
		constraintsJLabelPercentReduction.insets = new java.awt.Insets(6, 14, 4, 9);
		add(getJLabelPercentReduction(), constraintsJLabelPercentReduction);

		java.awt.GridBagConstraints constraintsJComboBoxHowToStop = new java.awt.GridBagConstraints();
		constraintsJComboBoxHowToStop.gridx = 2; constraintsJComboBoxHowToStop.gridy = 5;
		constraintsJComboBoxHowToStop.gridwidth = 2;
		constraintsJComboBoxHowToStop.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxHowToStop.weightx = 1.0;
		constraintsJComboBoxHowToStop.ipadx = 49;
		constraintsJComboBoxHowToStop.insets = new java.awt.Insets(3, 1, 4, 66);
		add(getJComboBoxHowToStop(), constraintsJComboBoxHowToStop);

		java.awt.GridBagConstraints constraintsJCSpinFieldPercentReduction = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldPercentReduction.gridx = 3; constraintsJCSpinFieldPercentReduction.gridy = 6;
		constraintsJCSpinFieldPercentReduction.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJCSpinFieldPercentReduction.ipadx = 48;
		constraintsJCSpinFieldPercentReduction.ipady = -30;
		constraintsJCSpinFieldPercentReduction.insets = new java.awt.Insets(4, 9, 3, 117);
		add(getJCSpinFieldPercentReduction(), constraintsJCSpinFieldPercentReduction);

		java.awt.GridBagConstraints constraintsJPanelChangeMethod = new java.awt.GridBagConstraints();
		constraintsJPanelChangeMethod.gridx = 1; constraintsJPanelChangeMethod.gridy = 7;
		constraintsJPanelChangeMethod.gridwidth = 3;
		constraintsJPanelChangeMethod.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJPanelChangeMethod.weightx = 1.0;
		constraintsJPanelChangeMethod.weighty = 1.0;
		constraintsJPanelChangeMethod.ipadx = 335;
		constraintsJPanelChangeMethod.ipady = 87;
		constraintsJPanelChangeMethod.insets = new java.awt.Insets(3, 8, 165, 59);
		add(getJPanelChangeMethod(), constraintsJPanelChangeMethod);
	} 
	catch (java.lang.Throwable ivjExc) 
	{
		handleException(ivjExc);
	}
	//user code begin {2}
	getJComboBoxSendRateDigits().setSelectedItem("30");
	getJComboBoxSendRateUnits().setSelectedItem("minutes");
	try
	 {
		 initConnections();
	 }
	 catch(Exception e)	{ }
	 // user code end
}
/**
 * Comment
 */
public void jComboBoxWhenChange_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getJLabelChangeDuration().setVisible(false);
	getJCSpinFieldChangeDuration().setVisible(false);
	getJLabelMinutesChDur().setVisible(false);
	
	getJLabelChangePriority().setVisible(false);
	getJCSpinFieldChangePriority().setVisible(false);
	
	getJLabelChangeTriggerNumber().setVisible(false);
	getJCSpinFieldChangeTriggerNumber().setVisible(false);

	getJLabelChangeTriggerOffset().setVisible(false);
	getJTextFieldChangeTriggerOffset().setVisible(false);

	
	if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_NONE )
		 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Manually Only" ) )
	{
		//None
		return;
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_DURATION )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "After a Duration" ) )
	{
		//Duration
		getJLabelChangeDuration().setVisible(true);
		getJCSpinFieldChangeDuration().setVisible(true);
		getJLabelMinutesChDur().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_PRIORITY )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Priority Change" ) )
	{
		//Priority
		getJLabelChangePriority().setVisible(true);
		getJCSpinFieldChangePriority().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_TRIGGER_OFFSET )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Above Trigger" ) )
	{
		//TriggerOffset
		getJLabelChangeTriggerNumber().setVisible(true);
		getJCSpinFieldChangeTriggerNumber().setVisible(true);

		getJLabelChangeTriggerOffset().setVisible(true);
		getJTextFieldChangeTriggerOffset().setVisible(true);
	}
	else
		throw new Error("Unknown LMProgramDirectGear control condition found, the value = " + getJComboBoxWhenChange().getSelectedItem().toString() );


	fireInputUpdate();
	return;
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		RotationGearPanel aRotationGearPanel;
		aRotationGearPanel = new RotationGearPanel();
		frame.setContentPane(aRotationGearPanel);
		frame.setSize(aRotationGearPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.dbeditor.wizard.device.lmprogram.GenericGearPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private void setChangeCondition(String change) 
{
	if( change == null )
		return;

	if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_NONE) )
	{
		getJComboBoxWhenChange().setSelectedItem("Manually Only");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_DURATION) )
	{
		getJComboBoxWhenChange().setSelectedItem("After a Duration");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_PRIORITY) )
	{
		getJComboBoxWhenChange().setSelectedItem("Priority Change");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_TRIGGER_OFFSET) )
	{
		getJComboBoxWhenChange().setSelectedItem("Above Trigger");
	}	
	
}


/**
 * setValue method comment.
 */
public void setValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	if( o == null )
	{
		return;
	}
	else
		gear = (LMProgramDirectGear)o;

	getJComboBoxHowToStop().setSelectedItem( StringUtils.addCharBetweenWords( ' ', gear.getMethodStopType() ) );

	getJCSpinFieldPercentReduction().setValue( gear.getPercentReduction() );
	
	setChangeCondition( gear.getChangeCondition() );
	
	getJCSpinFieldChangeDuration().setValue( new Integer( gear.getChangeDuration().intValue() / 60 ) );
	getJCSpinFieldChangePriority().setValue( gear.getChangePriority() );
	getJCSpinFieldChangeTriggerNumber().setValue( gear.getChangeTriggerNumber() );	
	getJTextFieldChangeTriggerOffset().setText( gear.getChangeTriggerOffset().toString() );

	com.cannontech.database.data.device.lm.RotationGear r = (com.cannontech.database.data.device.lm.RotationGear)gear;

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( getJComboBoxShedTime(), r.getShedTime().intValue() );

	getJComboBoxNumGroups().setSelectedItem( r.getNumberOfGroups() );

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxSendRateDigits(), getJComboBoxSendRateUnits(), r.getSendRate().intValue() );
		
	getJComboBoxGroupSelection().setSelectedItem( StringUtils.addCharBetweenWords( ' ', r.getGroupSelectionMethod() ) );
	
}
public void valueChanged(com.klg.jclass.util.value.JCValueEvent arg1) 
{
	//fire this event for all JCSpinFields!!
	this.fireInputUpdate();
}
}