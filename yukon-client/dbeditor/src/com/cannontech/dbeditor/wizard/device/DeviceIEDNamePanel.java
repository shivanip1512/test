package com.cannontech.dbeditor.wizard.device;

import com.cannontech.database.db.device.*;
import com.cannontech.database.data.*;
import com.cannontech.database.data.device.*;

/**
 * This type was created in VisualAge.
 */
 import java.awt.Dimension;
 import com.cannontech.database.db.*;
 import com.cannontech.database.data.device.*;

 import com.cannontech.common.gui.util.DataInputPanel;
 
public class DeviceIEDNamePanel extends com.cannontech.common.gui.util.DataInputPanel implements javax.swing.event.CaretListener {
	private javax.swing.JLabel ivjNameLabel = null;
	private javax.swing.JTextField ivjNameTextField = null;
	private javax.swing.JPanel ivjJPanel1 = null;
/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public DeviceIEDNamePanel() {
	super();
	initialize();
}
/**
 * Method to handle events for the CaretListener interface.
 * @param e javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void caretUpdate(javax.swing.event.CaretEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getNameTextField()) 
		connEtoC1(e);
	// user code begin {2}
	// user code end
}
/**
 * connEtoC1:  (NameTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceNameAddressPanel.eitherTextField_CaretUpdate(Ljavax.swing.event.CaretEvent;)V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.eitherTextField_CaretUpdate(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
public void eitherTextField_CaretUpdate(javax.swing.event.CaretEvent caretEvent) {
	fireInputUpdate();
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsNameLabel = new java.awt.GridBagConstraints();
			constraintsNameLabel.gridx = 0; constraintsNameLabel.gridy = 0;
			constraintsNameLabel.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsNameLabel.anchor = java.awt.GridBagConstraints.WEST;
			getJPanel1().add(getNameLabel(), constraintsNameLabel);

			java.awt.GridBagConstraints constraintsNameTextField = new java.awt.GridBagConstraints();
			constraintsNameTextField.gridx = 1; constraintsNameTextField.gridy = 0;
			constraintsNameTextField.anchor = java.awt.GridBagConstraints.EAST;
			constraintsNameTextField.insets = new java.awt.Insets(5, 10, 5, 0);
			getJPanel1().add(getNameTextField(), constraintsNameTextField);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * This method was created in VisualAge.
 * @return java.awt.Dimension
 */
public Dimension getMinimumSize() {
	return getPreferredSize();
}
/**
 * Return the NameLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getNameLabel() {
	if (ivjNameLabel == null) {
		try {
			ivjNameLabel = new javax.swing.JLabel();
			ivjNameLabel.setName("NameLabel");
			ivjNameLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjNameLabel.setText("Device Name:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameLabel;
}
/**
 * Return the NameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getNameTextField() {
	if (ivjNameTextField == null) {
		try {
			ivjNameTextField = new javax.swing.JTextField();
			ivjNameTextField.setName("NameTextField");
			ivjNameTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjNameTextField.setColumns(12);
			// user code begin {1}
			ivjNameTextField.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_DEVICE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameTextField;
}
/**
 * This method was created in VisualAge.
 * @return java.awt.Dimension
 */
public Dimension getPreferredSize() {
	return new Dimension( 350, 200);
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param val java.lang.Object
 */
public Object getValue(Object val) {
	IEDBase ied = ((IEDBase) val);
	
	String nameString = getNameTextField().getText();
	ied.setPAOName( nameString );
	ied.getDeviceIED().setPassword("0");
	ied.getDeviceIED().setSlaveAddress( IEDBase.SLAVE_STAND_ALONE );

	return val;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	// com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getNameTextField().addCaretListener(this);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("DeviceNameAddressPanel");
		setLayout(new java.awt.GridLayout());
		setSize(350, 200);
		add(getJPanel1(), getJPanel1().getName());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	
	// user code end
}
/**
 * This method was created in VisualAge.
 * @return boolean
 */
public boolean isInputValid() {
	if( getNameTextField().getText() == null   ||
		getNameTextField().getText().length() < 1 )
	{
		setErrorString("The Name text field must be filled in");
		return false;
	}

	return true;
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		DeviceNameAddressPanel aDeviceNameAddressPanel;
		aDeviceNameAddressPanel = new DeviceNameAddressPanel();
		frame.getContentPane().add("Center", aDeviceNameAddressPanel);
		frame.setSize(aDeviceNameAddressPanel.getSize());
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
	}
}
/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val ) {
	return;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GABF954ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135DA8DD49C57F5C636FE3004F2A487A7D4F1DB59A6A9E9C9CCEC25D5DD37C721CA0FE4635AEE6513BFB5871F68B83441BDEAA3575846A70FDD7E919686ACC0DA2CB58201E404C0BF96C2328382E1AD42B69184E3570998588186E6F7D6B383AC12ACFA6FFB73E607E597EC39661C4B4C3B6F6F3E7B3E7B735EACA9BD30BEAB43D6CAC8C696B17ECEE79092F51410547467AEF2DE041818CDACFFEFG3DCA
	BA54CCF82E013A13F7A6E69711775C39D00E05F26BD792334B603D04DCF62F290317B0730CC1DD6C130FE7ADBC4F3F3E4667492165FE5BEEF83E829487BCFC6E92F1FE2F2D5C60A799FCCE99B6C2FEBC02ED6E30B98CDEB314FB00220162C6D87BCD704C23B3AFEBE9B65AFD32F6BD5975C82D2D9047310C4949B94A7AF698CFA739BFA3F59467FA004A09FDEEC0F98390AE54CE9E6BBD854FF3BD93236F8CAB1E06E1416BD53C3AB8BC56B0ADDD93D4F703DB1C12064516168E7AF4DD68F8DF7008BD02D714215F
	58980E7D22AD170EC5C8A314F7D15EECB14E978F6F1B01361B7C4E9264B7CB30DE20B1092F716D5AF3469A862E5FCFB67C48EB5F93E60D9192DBDB1C94D8E374640BB995F4BFCA4AD06FBB20AEF7BCB15B81548AB4889481341F62E05F5EA370EC9B525B950FC7713679FC67E5377A1E6296E5F8EFE9019A03F7D99CD6D4B7A1EC2FB75A6AC348339031FE7F74397BB11D441D607B9EFF79DBE47B0317ECB9A1F432BD2E5196B34EF411B09E50891B7BB7E167FEE2FCAEAE674E7DA1314E9D3BDC31E70518FB43D3
	07EDBB0CF152ACF357CD60DE7F1AE2209C5EB38CFCB07E4B14AFDB788C234BA89F4BB720AEF902E3E36095AECBF766BAD254549DD28FB109ED368E194970099CAC4BC394F711F230AC1BA9BFC68E16253B044B9287F53BBD09598CDF0E8A34D99F142300E2019E865A8E1486345B4BB1B63C7758E744D80F206A67A7A559AD2A0475F5146D05276857D5416555F441BBAC768B2AA48C4922C60CB6B5E5280321B97D0ED06C8F439C6F0ADED195F4C9714268E02F3A28EA2C4D0932D7310DAA525ABE49A342849E9F
	61631EADAB413D91B47D77BE37200B01962C3E3D8C77E4CA680791E1GF8E7FAF16DC3FD55437ABB007ACCBD7C839D6F12280243E8E969D61409C9DF9F2E0444FAD14FFB6D68BB4660BD424BF5FCE1BF72D220CC94BE4EF3E54516F1BA24E194DFD0E7380D3DD00CFE39D46118794F810E190E42EF127A273AC2E2067ADE05E125C789369DFB890E09F231722A6201C56C36D489EDD31F5DD744AEBA077D9647FF455C2B879D38D7FE10B59AE803296346F2A7436CF9C193B9CABFD081E022BB20F1A667A62A1B8C
	D36EC7E8B9C9613A3ADCB290C65F7F9F44661820F3FC91FDACC4CCA707AAB08E09D322D76F90FD22578DAF1AD1F7348231E6586908E276B9C179BE306BF6B0A44D641F29C05B93F4DD1506A6F531D754F549BB9A28EF23F3E913C33E00CB60F3DD2CC07F2BCC03DD1B6D5F2BC01B98D63CDE11EE0E5945287F005A24A80B9E903ADD19746A0C7F7BFD38D793620C6193BE5A07094E14A0CF22FFE1F9C102D000EBD0A58FECB93AA8B260C3FBBDEAAF3768E8976CB766B775D0576A6336B7FD105BDE7535FB4826AB
	B536D031A3661B9D3675BEE6AF9BFC815BE3B2F56D8FADFB8F758D86DFE332FEF0847DA5CBD0B0BBE9F33BD5D1530CA405E1BE3592475B867324G112B9C73C97B311E7B95836C6D0AACB3151A3A7EDBC7916E0DF8F5D284F70C8E6C12293FCD0E62203AFEC3172CFE0B83F5A9DBFC5F362B284B17CAF87ED78E65C6201E2BCC1FD1D719BE587AF22EE08C8F15230DCECA8D133A049ED15081043EC91D2E1A65E5DF273E9547F02ABC7F7A47EC5443G14FDC011AA5F33A78BF97E95BD311EA45F37AFEC0E39DEE5
	32EDD683FB663C1D67DFEF9D40B9B335446CD20D6B383D529A835AB4CD9916E878B174735F1556BDE53C67AB7361B9A2291A6E822373F3DD3EDC0972E2FCB258C63C2EAE5DED2C358E669D84CA5310FF5711D2AB66003789E887101D0E372A94637430200AFA837D4F42DE5D38B0A5789B34E9B05086EA7D8D6DD8FB81DF8F9B7B727C915419A869E3225A87EE20D392E57715F64BA85D8B8DF376F0BF537D3DA52D06FCC95FDDC74E4D1658C2653E11FBAAED2DBA5379189E507D0D87326D29FFFCA90779443B6D
	41795E86BD901336687363934B03CE67207E366B4179D19B65276A41795156EC1E9F25C35D60A40F5DBFF422FF588C65E420B42022A940B6D04F9447433257CF10C5F2A39760DB758AF26F9CE748F31483F6663F0C72EF8FE4F17FC5F8ECB8D29A2C87F9EA6E5AA3034A2CDF733CFE2F871563037AB1AC5454B9380DDA763C25254B8486731F7E9C2B7F5CBC45721E94F82683B13BCDBA12EB48D3BA4D6D7353CE2BFDBE3C67382DA00CFDF6CFB3796469GC66A4D735135AA14B39E6A36GA5832583B97D095967
	00867DFC0F369EF8FB31BD22A06ED35A01F791FCDBFBF09C027EAC47FB107A218898BB9A087156E4A1EFA3141F70731C616D9C0CCB3B4C723B340C764A4A0FE7AF149BE13FAF1ED324ACB847974DB518EE7F5999BE27F84A99BA277819B3F4CE713473D54607B12CA789DE7F6F4E05F30E7FF2064AB9AA69DA376E5DC34756B4D1231B0DC146287B257E9A8911FBE078B574D4C20452BC234D85DDE9EFB2ED6557074BC35B0AA5F6A564705815BB43E357D4BE7A1CD6A88FG79E6B8AE1EBCE23559481939B838BB
	281CB043FDD5C6B546064DD0CE86CA83AA3A863E6A9A370195EFAC6A27AE789770D3CB2B426F732A2A507B3C368A632E26CC2A43E270DE46D4151BF581EBF3692287554E5A5CC37B6B02BAAA4E43C29C6D4F6A42757FDED5B83C30BDFD440E3922AC4CA813BAA18FDF43FDF95A4C89FB20BC863486A8769A73EDEC4F3FB70D7EEA848E23B0DC2FCF9CA6B157316FDFE4713E19D0AE87EA869AG72DF67B17A7E8E5CE7060EA643CE3F1F936C27132F8776F95775F0F16EBFA806F2EF30F816E5721F23FC07054F62
	5C0DFC1ED7B4C2DD748D6E3FD2280FCE03F26E271CF71F0B7BB407492BAEC61E8C6508CFB92E722A43632228BAB4AE76D60736FFC7754276DFDD9DEEBF597A72B2793DE0B4481774A95F2F472FD4D8ED34C11856DBDA5ED5A5F7373175465D5F6FB2F30D7E19B74D3BBFBA66B9A8778149B7F98C739F62B1AC7EDB6BC8F7442510B9E6F25FF15B521B469D5F4DC08C0B03984666FCAC0B4F39836A9D33B4174E3266F9081B355020817714569F4D365623CE8E92EB7D15B975A86F5F5B2C75EB6754230EAA0D7EEC
	ED0F56703525BF9AC7646F1F891BBF3BE7591AA20DE7CF7FC1D23D72259C0617A46A77B6C15D36D90E210CFC0E2B34D96E73F6D21EA3A2B17BE484673DC4F9BD916CAC41F837658747B3EC3FD00CF2ACD2BFBFE6FEE35E9CD90B747BBCF11479002F97E0AEB082671E048854492BEF62DAFD70FE8328EE893D63F3F598FDF605D8035D588F3BC1395087E93F41F7ACE1361FE14EF9369857B72C48139E2FC6583C1729BD23ED7816F09D6F493C35FB614ADB6C577F397BB19F773BAC344B884BBA997FE34A0F3270
	0D7BD853B744C0DD7A929EB7FFD903BEFB70B650BDD0B4D0BCD092D04AED5C47BDD45DC896091DFD0A2F9B1C20ECF1DBECFD7F12F5EB7765BF4861B6386121FB494665AFE4044B1153EFE378F05C4E1EA9FD87A95F4811EBF1FD5DD0B7869485948B349168095B797AECB575ECFD975C125E266B427098BD3D724575CB62F4000D810FE16A97B97363670B6619E0870C1F8ED43D946260D2F6D6F5AF45B66579E60CDD9A9A5BA564AF5D28870C655D42907DBE43783F6AADB47866E1844A6CFCFC34406A57620DB9
	1F00670E25787D6B1963449C2771E28DBC3D623413070406CEB0483AAACD70C20E28CAA3D5754E46FAE7534943661E2C1F36FE3BEA4EBF9D72AE08E2F499DB57B96379700A03C60C79150B6702BA549D2032007D12409F133567A4B167FDFAB74702632F3EC1BAFE74C24641B073469B7325AF8B441A1471749C36E6299842GE9BA4EED6FC37AFD103D8FDA5ED7E5AEF6EF7BC548389B7ED267E0385ED993BEB7F93EA6F4EE72F2CD685C44FEE86133C7412170771D45072C771D4CAEC7CFA1D6CFAECF4C6E8152
	01A2016EDE4EEDF27D21AAC2EDB204BDDEF00FE24E0CDFD3F4BE7F6D3561573A32F671EFB0DF2D45BB2AA1C557958F0E4F79FFD20B7B25ABBE4AE43CBF2BC59D295268184E1A9A7C58DA1A9F0AA3144D7C6E0FF3395F5D88EB5B391C67E4CD03F36E9882B959F9E11425E54CDE1CF9BCBF2ADB41F3327773F04CC1A87B01562C60F78D6F64F35B0ADB417334ADFF3066B24EB7B3C366B2E9FFB8E6CBDE41ECA6B3B2E0BB5B40F60CF35EC818F39EF5CFECFEF7813F6BE80E6473BF7E3FD61FD1346E8DDBC6087911
	FC463CB7AC73B32C3CF29A47CDGFED2A447471BA75E04E73FB0EEC4A3F45D0ACA91824C9ED571092ABE4338748657303B1DAEEBBCCA0571489D8B67C8CC062EE64CC7CA21EDA3D09F108C94819483948F3489E89BD0AAD066CAB87FG5583358275G39017CAB397CF7D13F9ACEFE838894642AA0A14C8D0CA9274263FC6A5462B81FBDC56FE7811FFDB3BE631C38749446B1E5E4C493CDFB3A63D41149F3E9BD0AA66179126970673937166B245EE23F1A3CDB4B1192291DC42D8C4E119E257C181541B9D2DF9E
	3755D8284BDD45F34276FC6B7CB270A3D6FD964C7C5B993419E8E81BG348DA89508C481B622B88E763FD537G8E18A788400049A395D865290FE232349A4F3E287932B1F948D9E262E8702D1AF07302076D82937FE0E8DC9C567B04D133CF49E99C4B0C814C2C0C3AFD27511FCBDE0009A0CB5768A701DEE8689DE5671E1CAE7AEDB80A7985465BCDF99140BBEC4E7147667078961B97473737B9349F571B677B71196650FEFC36596A478D9BE9C6BFB88AF6B9E0363B4364FDE4723EC247C45E0712DB9FB37951
	D4AE64DF94F1C24EDFC7651A263C81037767965EC7BC36B4230D4212479415777DF6B3BDC7C9324C4A5F21EDA4AF182C290F87280C12CF30487DB7A66FA3534636D0F7ED5C41D95EBF4E7B72F3A16DCB1D03E16D63FC0EBF3C8BE03CAB799CFFF83F40F4734C197078FB764C62787B1FB3217117FEE6BE7EB2DAC263AF27450ABFA6EBC4813F233ABB0A5FA5A452DCBA814A1BCCDEED973FDFC80A623906F0E8F740B6A9AC995F61AF8C70B9AC0D3371F768FC0E55F09EDF4D6F6EFE62C23C6920G1623C7E1EAC1
	58F97D1DAEFEDE9FD8BD5F7FD84F625673BA6671A80B3CBA600B59583B5EA1041FD57E5A0539E008330A9B64D6C6AD87951607A8DDBC8F722F66E71FCFDA8318563B2C7EB3815AEC8EA173FC8C2DB2FD587DA6EF0D694370B7056C3709F93E9490BC7ED912252924F00E4CBF3C6754B3C9BF6F576CA45BC5AA708A24974EDA68B1C5B75E489BBF456904B19470773D40F711CC0DBE32B4FDC6963BC96948E57CBC2D69223B0D7BE2CDA72F518F1447709372310B02B626A3AE4FF613CCAF7EE8089433EAD9700E9E
	E30E792C9FFFAA1451B6081A214BA4A0EF891597C7E9B0C7A9793BBDB5EFF46D58E8A736CE12AFAB023BD39806F061A2F97A18AAEAE30A6C767BFECBD5CCF227D1A3F8DA3743F07B4D6563E29B7050EA8ABD617F5328421442CEB0C83FCA0E5116082E8633053BFDCCD0E1AAD1F56978A3A8C52DB66B163C2E9FFA6C5D32CFECA443D864D5F213587CBE1DE40F889EC91E51C91EF91A5530B29BB8E03CDEEDC4D1BDA01CB3C8B8DEE54E5170552D0DF7FD7B450F699C012EBAB9403489DD0F0D0A0A67D85B480864
	954D81C035B0FC25B9BC36E988EAD36CDF7BDA57D33F9982A8F4903B2731117EEF227F0F637FA64AE9221C2663205F1DE4413F60FABFDFB3458F4833074A0388E86804CD54FF7A6C56FBFFF6EEE7AA2C2E13E451EF2E308FC501D66FCFFA06C4F5F97CDD158551492BF01BFC0896BF0E1B6FB7C744953AE854C91EBA51E27F45FDF69B49F411EC6685813F684AG3F545339089D3CA0059EDAE83EA1EC16CEF633DFFDB871F223054ACE66619339197301066CDC58F7669030D4C01B96527FC51FDBF3582B1876AD
	B5976CE07AAC8B6E4C4EB907E72D671C34E565E16FC67CF7B2DF93F5E770B927D34385ED817E0EBBF9FE78B575A8891F2775FA84D95685F9224D6B461C6D7C0CAE864E6417B49CDF63ED0CCAD6F7D9C33947ADFD7E8FD0CB8788C045079EDC91GG34ADGGD0CB818294G94G88G88GABF954ACC045079EDC91GG34ADGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG1691GGGG
**end of data**/
}
}
