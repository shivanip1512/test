package com.cannontech.dbeditor.wizard.device.lmgroup;

/**
 * Insert the type's description here.
 * Creation date: (2/23/2004 5:33:06 PM)
 * @author: 
 */
public class SA305EditorPanel extends com.cannontech.common.gui.util.DataInputPanel {
	private javax.swing.JLabel ivjDivisionAddressLabel = null;
	private javax.swing.JLabel ivjGroupAddressLabel = null;
	private javax.swing.JCheckBox ivjJCheckBoxSerial = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private javax.swing.JTextField ivjJTextDivisionAddress = null;
	private javax.swing.JTextField ivjJTextField1 = null;
	private javax.swing.JTextField ivjJTextFieldIndividualAddress = null;
	private javax.swing.JTextField ivjJTextFieldRateFamily = null;
	private javax.swing.JTextField ivjJTextFieldRateMember = null;
	private javax.swing.JTextField ivjJTextFieldSubAddress = null;
	private javax.swing.JTextField ivjJTextFieldUtilityAddress = null;
	private javax.swing.JLabel ivjRateFamilyLabel = null;
	private javax.swing.JLabel ivjRateHierachyLabel = null;
	private javax.swing.JLabel ivjRateMemberLabel = null;
	private javax.swing.JLabel ivjSubAddressLabel = null;
	private javax.swing.JLabel ivjUtilityAddressLabel = null;
	private javax.swing.JPanel ivjAddressPanel = null;
	private javax.swing.JPanel ivjAddressUsagePanel = null;
	private javax.swing.JCheckBox ivjJCheckBoxDivisionUsage = null;
	private javax.swing.JCheckBox ivjJCheckBoxGroupUsage = null;
	private javax.swing.JCheckBox ivjJCheckBoxRateUsage = null;
	private javax.swing.JCheckBox ivjJCheckBoxRelay1 = null;
	private javax.swing.JCheckBox ivjJCheckBoxRelay2 = null;
	private javax.swing.JCheckBox ivjJCheckBoxRelay3 = null;
	private javax.swing.JCheckBox ivjJCheckBoxRelay4 = null;
	private javax.swing.JCheckBox ivjJCheckBoxSubUsage = null;
	private javax.swing.JCheckBox ivjJCheckBoxUtilityUsage = null;
	private javax.swing.JPanel ivjRelayUsagePanel = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private javax.swing.JTextField ivjJTextFieldGroupAddress = null;

class IvjEventHandler implements java.awt.event.ActionListener, javax.swing.event.CaretListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxRelay1()) 
				connEtoC1(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxRelay2()) 
				connEtoC2(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxRelay3()) 
				connEtoC3(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxRelay4()) 
				connEtoC4(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxDivisionUsage()) 
				connEtoC5(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxRateUsage()) 
				connEtoC6(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxGroupUsage()) 
				connEtoC7(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxSubUsage()) 
				connEtoC8(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxSerial()) 
				connEtoC9();
			if (e.getSource() == SA305EditorPanel.this.getJTextFieldRateMember()) 
				connEtoC12(e);
			if (e.getSource() == SA305EditorPanel.this.getJTextFieldSubAddress()) 
				connEtoC13(e);
		};
		public void caretUpdate(javax.swing.event.CaretEvent e) {
			if (e.getSource() == SA305EditorPanel.this.getJTextFieldIndividualAddress()) 
				connEtoC10(e);
			if (e.getSource() == SA305EditorPanel.this.getJTextFieldRateFamily()) 
				connEtoC11(e);
			if (e.getSource() == SA305EditorPanel.this.getJTextDivisionAddress()) 
				connEtoC14(e);
			if (e.getSource() == SA305EditorPanel.this.getJTextFieldGroupAddress()) 
				connEtoC15(e);
			if (e.getSource() == SA305EditorPanel.this.getJTextFieldUtilityAddress()) 
				connEtoC16(e);
		};
	};
/**
 * SA305EditorPanel constructor comment.
 */
public SA305EditorPanel() {
	super();
	initialize();
}
/**
 * connEtoC1:  (JCheckBoxRelay1.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC10:  (JTextFieldIndividualAddress.caret.caretUpdate(javax.swing.event.CaretEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC11:  (JTextFieldRateFamily.caret.caretUpdate(javax.swing.event.CaretEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC11(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC12:  (JTextFieldRateMember.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC12(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC13:  (JTextSubAddress.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC13(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC13:  (JTextSubAddress.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC13(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC14:  (JTextDivisionAddress.caret.caretUpdate(javax.swing.event.CaretEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC14(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC15:  (JTextFieldSubAddress.caret.caretUpdate(javax.swing.event.CaretEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC15(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC16:  (JTextFieldUtilityAddress.caret.caretUpdate(javax.swing.event.CaretEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC16(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (JCheckBoxRelay2.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (JCheckBoxRelay3.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JCheckBoxRelay4.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (JCheckBoxDivisionUsage.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC6:  (JCheckBoxRateUsage.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC7:  (JCheckBoxGroupUsage.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC8:  (JCheckBoxSubUsage.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC9:  (JCheckBoxSerial.action. --> SA305EditorPanel.fireInputUpdate()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC9() {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the JPanelAddress property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getAddressPanel() {
	if (ivjAddressPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder.setTitle("Addressing");
			ivjAddressPanel = new javax.swing.JPanel();
			ivjAddressPanel.setName("AddressPanel");
			ivjAddressPanel.setPreferredSize(new java.awt.Dimension(338, 237));
			ivjAddressPanel.setBorder(ivjLocalBorder);
			ivjAddressPanel.setLayout(new java.awt.GridBagLayout());
			ivjAddressPanel.setBounds(5, 4, 341, 234);

			java.awt.GridBagConstraints constraintsJTextFieldUtilityAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldUtilityAddress.gridx = 2; constraintsJTextFieldUtilityAddress.gridy = 1;
			constraintsJTextFieldUtilityAddress.gridwidth = 2;
			constraintsJTextFieldUtilityAddress.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldUtilityAddress.weightx = 1.0;
			constraintsJTextFieldUtilityAddress.ipadx = 30;
			constraintsJTextFieldUtilityAddress.ipady = -1;
			constraintsJTextFieldUtilityAddress.insets = new java.awt.Insets(34, 0, 8, 5);
			getAddressPanel().add(getJTextFieldUtilityAddress(), constraintsJTextFieldUtilityAddress);

			java.awt.GridBagConstraints constraintsUtilityAddressLabel = new java.awt.GridBagConstraints();
			constraintsUtilityAddressLabel.gridx = 1; constraintsUtilityAddressLabel.gridy = 1;
			constraintsUtilityAddressLabel.ipadx = 32;
			constraintsUtilityAddressLabel.ipady = 4;
			constraintsUtilityAddressLabel.insets = new java.awt.Insets(36, 12, 8, 1);
			getAddressPanel().add(getUtilityAddressLabel(), constraintsUtilityAddressLabel);

			java.awt.GridBagConstraints constraintsGroupAddressLabel = new java.awt.GridBagConstraints();
			constraintsGroupAddressLabel.gridx = 1; constraintsGroupAddressLabel.gridy = 2;
			constraintsGroupAddressLabel.ipadx = 29;
			constraintsGroupAddressLabel.ipady = 4;
			constraintsGroupAddressLabel.insets = new java.awt.Insets(10, 12, 5, 1);
			getAddressPanel().add(getGroupAddressLabel(), constraintsGroupAddressLabel);

			java.awt.GridBagConstraints constraintsJTextFieldGroupAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldGroupAddress.gridx = 2; constraintsJTextFieldGroupAddress.gridy = 2;
			constraintsJTextFieldGroupAddress.gridwidth = 2;
			constraintsJTextFieldGroupAddress.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldGroupAddress.weightx = 1.0;
			constraintsJTextFieldGroupAddress.ipadx = 30;
			constraintsJTextFieldGroupAddress.ipady = -1;
			constraintsJTextFieldGroupAddress.insets = new java.awt.Insets(9, 0, 5, 5);
			getAddressPanel().add(getJTextFieldGroupAddress(), constraintsJTextFieldGroupAddress);

			java.awt.GridBagConstraints constraintsDivisionAddressLabel = new java.awt.GridBagConstraints();
			constraintsDivisionAddressLabel.gridx = 1; constraintsDivisionAddressLabel.gridy = 3;
			constraintsDivisionAddressLabel.ipadx = 18;
			constraintsDivisionAddressLabel.ipady = 4;
			constraintsDivisionAddressLabel.insets = new java.awt.Insets(3, 12, 9, 1);
			getAddressPanel().add(getDivisionAddressLabel(), constraintsDivisionAddressLabel);

			java.awt.GridBagConstraints constraintsJTextDivisionAddress = new java.awt.GridBagConstraints();
			constraintsJTextDivisionAddress.gridx = 2; constraintsJTextDivisionAddress.gridy = 3;
			constraintsJTextDivisionAddress.gridwidth = 2;
			constraintsJTextDivisionAddress.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextDivisionAddress.weightx = 1.0;
			constraintsJTextDivisionAddress.ipadx = 30;
			constraintsJTextDivisionAddress.ipady = -1;
			constraintsJTextDivisionAddress.insets = new java.awt.Insets(3, 0, 8, 5);
			getAddressPanel().add(getJTextDivisionAddress(), constraintsJTextDivisionAddress);

			java.awt.GridBagConstraints constraintsSubAddressLabel = new java.awt.GridBagConstraints();
			constraintsSubAddressLabel.gridx = 1; constraintsSubAddressLabel.gridy = 4;
			constraintsSubAddressLabel.ipadx = 7;
			constraintsSubAddressLabel.ipady = 4;
			constraintsSubAddressLabel.insets = new java.awt.Insets(0, 12, 15, 1);
			getAddressPanel().add(getSubAddressLabel(), constraintsSubAddressLabel);

			java.awt.GridBagConstraints constraintsJTextFieldSubAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldSubAddress.gridx = 2; constraintsJTextFieldSubAddress.gridy = 4;
			constraintsJTextFieldSubAddress.gridwidth = 2;
			constraintsJTextFieldSubAddress.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldSubAddress.weightx = 1.0;
			constraintsJTextFieldSubAddress.ipadx = 30;
			constraintsJTextFieldSubAddress.ipady = -1;
			constraintsJTextFieldSubAddress.insets = new java.awt.Insets(0, 0, 13, 5);
			getAddressPanel().add(getJTextFieldSubAddress(), constraintsJTextFieldSubAddress);

			java.awt.GridBagConstraints constraintsJTextFieldIndividualAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldIndividualAddress.gridx = 3; constraintsJTextFieldIndividualAddress.gridy = 5;
			constraintsJTextFieldIndividualAddress.gridwidth = 2;
			constraintsJTextFieldIndividualAddress.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldIndividualAddress.weightx = 1.0;
			constraintsJTextFieldIndividualAddress.ipadx = 116;
			constraintsJTextFieldIndividualAddress.ipady = -1;
			constraintsJTextFieldIndividualAddress.insets = new java.awt.Insets(11, 5, 40, 76);
			getAddressPanel().add(getJTextFieldIndividualAddress(), constraintsJTextFieldIndividualAddress);

			java.awt.GridBagConstraints constraintsJCheckBoxSerial = new java.awt.GridBagConstraints();
			constraintsJCheckBoxSerial.gridx = 1; constraintsJCheckBoxSerial.gridy = 5;
			constraintsJCheckBoxSerial.gridwidth = 2;
			constraintsJCheckBoxSerial.ipady = -4;
			constraintsJCheckBoxSerial.insets = new java.awt.Insets(11, 14, 40, 5);
			getAddressPanel().add(getJCheckBoxSerial(), constraintsJCheckBoxSerial);

			java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
			constraintsJPanel1.gridx = 4; constraintsJPanel1.gridy = 1;
constraintsJPanel1.gridheight = 3;
			constraintsJPanel1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJPanel1.ipadx = -61;
			constraintsJPanel1.insets = new java.awt.Insets(35, 12, 11, 5);
			getAddressPanel().add(getJPanel1(), constraintsJPanel1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAddressPanel;
}
/**
 * Return the AddressUsagePanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getAddressUsagePanel() {
	if (ivjAddressUsagePanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder2;
			ivjLocalBorder2 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder2.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder2.setTitle("Address Usage");
			ivjAddressUsagePanel = new javax.swing.JPanel();
			ivjAddressUsagePanel.setName("AddressUsagePanel");
			ivjAddressUsagePanel.setBorder(ivjLocalBorder2);
			ivjAddressUsagePanel.setLayout(new java.awt.GridBagLayout());
			ivjAddressUsagePanel.setBounds(8, 248, 175, 104);

			java.awt.GridBagConstraints constraintsJCheckBoxRateUsage = new java.awt.GridBagConstraints();
			constraintsJCheckBoxRateUsage.gridx = 2; constraintsJCheckBoxRateUsage.gridy = 2;
			constraintsJCheckBoxRateUsage.ipadx = 35;
			constraintsJCheckBoxRateUsage.ipady = -4;
			constraintsJCheckBoxRateUsage.insets = new java.awt.Insets(1, 1, 1, 0);
			getAddressUsagePanel().add(getJCheckBoxRateUsage(), constraintsJCheckBoxRateUsage);

			java.awt.GridBagConstraints constraintsJCheckBoxGroupUsage = new java.awt.GridBagConstraints();
			constraintsJCheckBoxGroupUsage.gridx = 1; constraintsJCheckBoxGroupUsage.gridy = 1;
			constraintsJCheckBoxGroupUsage.ipadx = 34;
			constraintsJCheckBoxGroupUsage.ipady = -4;
			constraintsJCheckBoxGroupUsage.insets = new java.awt.Insets(19, 8, 1, 1);
			getAddressUsagePanel().add(getJCheckBoxGroupUsage(), constraintsJCheckBoxGroupUsage);

			java.awt.GridBagConstraints constraintsJCheckBoxSubUsage = new java.awt.GridBagConstraints();
			constraintsJCheckBoxSubUsage.gridx = 1; constraintsJCheckBoxSubUsage.gridy = 2;
			constraintsJCheckBoxSubUsage.ipadx = 34;
			constraintsJCheckBoxSubUsage.ipady = -4;
			constraintsJCheckBoxSubUsage.insets = new java.awt.Insets(1, 8, 1, 1);
			getAddressUsagePanel().add(getJCheckBoxSubUsage(), constraintsJCheckBoxSubUsage);

			java.awt.GridBagConstraints constraintsJCheckBoxDivisionUsage = new java.awt.GridBagConstraints();
			constraintsJCheckBoxDivisionUsage.gridx = 2; constraintsJCheckBoxDivisionUsage.gridy = 1;
			constraintsJCheckBoxDivisionUsage.ipadx = 35;
			constraintsJCheckBoxDivisionUsage.ipady = -4;
			constraintsJCheckBoxDivisionUsage.insets = new java.awt.Insets(19, 1, 1, 0);
			getAddressUsagePanel().add(getJCheckBoxDivisionUsage(), constraintsJCheckBoxDivisionUsage);

			java.awt.GridBagConstraints constraintsJCheckBoxUtilityUsage = new java.awt.GridBagConstraints();
			constraintsJCheckBoxUtilityUsage.gridx = 1; constraintsJCheckBoxUtilityUsage.gridy = 3;
			constraintsJCheckBoxUtilityUsage.gridwidth = 2;
			constraintsJCheckBoxUtilityUsage.ipadx = 62;
			constraintsJCheckBoxUtilityUsage.ipady = -4;
			constraintsJCheckBoxUtilityUsage.insets = new java.awt.Insets(1, 8, 27, 62);
			getAddressUsagePanel().add(getJCheckBoxUtilityUsage(), constraintsJCheckBoxUtilityUsage);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAddressUsagePanel;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G320BD8B0GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155FD8DD89457397FA6A189CDE8CA9212E0228DD11210C893131816985B50FBED2EC9E9E3EECDEBFBCDCB9B1BEBFB49ADEDE9CBDA7EF5C4D094D40C98B122C185DDA2C13E0C08A8A09F0A22A1020A024A428E303A6C125DC596857D3F671CF94F4C4E4E420217BC5667F91DBD3F73FE1E2FB9B3F34EC1C87BB8A8F1F1FC1AA0ACCE9424FFFB968B426C190230B47A4857911B33C117ACA87EED81DAA3FC1E
	15G57C8488BFFCB171CAA6C6BC902F48C2483E66A1257436F35C2C5CF40E47861410E9972EC1387CF8CEF672E4BE8E799CDDFECCE016BAA20D840B2BE52A5F7FFC46C5F5A1CAE619510DEA57DA634B8DE90749B894FAB55698ABCD4620BA372109FC1F9A6B5E7C8793D10A6BC3EF01D381171CE076BF26A5D6D25A592DF6B3DA1C24C6B9B63D792DB8A7DC8E999CC36C43AE68AD3E8C1AC915EBED88D573206CBDD87BA2CBDF99D860B45EAF1089D5DF946F651E8F2D8EDF97D26AB861BB14FA8DEB6F508F9661E
	AE1B352F3734343132A8FFF78DE5E9B0D8C4F3C886717D3755C9D4AF788E6962CD84BBD7C34AAB8A5289104E58047E3F3932CC72AF60D20890B9E515C77F1D1B185F93B7497E27FCB9B53EFEB3517FAA2D8FA2B79F7253GE33E2CBA033E78EFC6DFF66FA13C33A19D89944B71B80A27FE2CCB5683D5FC0CBE6E5F01BEB6DF7D0E905BFEA0FE35879F1BBFE63E69BE16FDECBDDA1A380136198F1D245EE7C2DEA4D08CD0FA26AE39842899E8A3ED2BEFDE7E842E156D0EAAEBCF0F55D2595BFB50EC349D339AC5B3
	7CAEAD059C89BBA1F6D8EDC6C1E06D717755399A7EA075E63A36C5C2AC365382361F50934F888EC7F1FC22C6EC535F5A946FA369884CD4147F96D2EEE2ADA937B04009DCB69043F594EF58A2632C2EBAE8DBA069E0481B33954B39F9957AD21FB0D9C8AD2808DF2661CB603F6D0E0F5B46FCC84B12FDE1E59CBDC04A388270D6A087109FD0A8D0C4961671467E22114A388E5A3F4DE2B0B77635779AEC0E03FDA633D134C9E59D51BCDCD9EB91137B452865D8390494A96BE87E8B651A65B2BFA4ABFE21D49EC236
	DCAE4C765AB31EECE7E63B370DD53C8E1F22FD22B81B5561920E3FC071EA854E6AF69F45C93A8972420098FFD48941B336B37EADDCCF62DE02F7ABF026A71E721374F4488B5F21CBE675FB4FD5B2AEC668F5498B01049C68C3C0A5C0CDC05DB9D8471D7D3B3C6CC78D0A7AE5329FBBBF042B68F4588CF5963B43E06990CF99ECA6C33BD9348B920F5EC94A355DC56ED35A3FBB4046A151A25A8C8E1355825A8DBDA2B4A6BB63794C39067058C41A5BE46A9141C0CF2F00FA8FB8574255EC30BBCE769A8D8ED166E0
	7935CE52A6AE9BCE01C6D0C07ADD8EA92F45B5E41C73055F41B9D8D6AF8F92AC8E52E91FE039FC5F7981DC0FC263964D252555268E620641B600ED74D26DE1386A01BF98A8F3A75CF30052F3618A1471A9DC015273202C0122004C3B608A541D8FF58254DDGE9A0F3A1766B7FED4676DB3D72DBC26EDB87B45BAF2128C25696930A546D778E6AD7AE6075C0E6A0BF20D0208820A82014E2DDF2AED0BD1099488FA894A882A88AA8E5B76483556F46FB3829A6931CA0710D26CF2A0944CF2EA476CC15AED2D6B42E
	BCF79B699A181AC8BDF834DB681AC74A1C5A4CE575C1FE13BAA47554AD550B12BF6353616D13BA17472E69342C165FC0B9915AA0DDBF1674AA7356C857759AF2EB3D503DE4183CECD5FA1BF4A5F30D0D52EFF25FDB8734C9E0630E12FF7588361395712D91F22E11314B8C6D4C97A8E4B7763DB8E726C0472403863B08235067B698C0C4235C93996F7B834426F8D934B82A45DE51E2049FF6E98C902E10FA104627CE2B00E347D20A137BD5958CA0F60E27DCD943F050219C6DB0BF0D669B9C8E1B293D4FA1B60A
	8E074952A54BE7DCA13E58DDEE05F6A9561D57C92C619063BC2005BC56472F10BA43F1265EEA3D54575BC4C6D0E93C7A044E4B6200BF6DB36C0F4F6EA1F36C921EFE0926657C4ABD4D435481113B113649EC1C9D5646F0ED4CFB9BFFAA2990587837C4EAF784DFAE352315D2FBDB436A1A364975D25B5AA8354F0F392E643DC4D79344BE88948C948194831431C717DC8DE4868AG1A8934GA82584663BC02DC0BEC021A5D83EC9A544299B756BC64A67E6A0D696C7E9D95CC8B9284710FFC5E2FDB9702A673168
	512B5AE35163D735472229D7079FEBDE382AB556303C99D7C9DDD87BAD0A316B152BE4BE53E135D8C4BA00F29101BD5B7EEF930943E4B1B9CE1B0CDD222351F4C504F127040CC169F44EB497FEAFAC4139CA7FB61C2BE4DDF9CA883F30C173F9A8707112780A3DEC3CE95AAB4FD518CF6103E4CC944DE28F94D415354F62E0782BF4BEA66176A594BBD6E5A1327AA3D55DE2472503D6678951EC98A848B550E8725825C134F5DAEDBD22D1FF51F05910E768F764515A482B2459B564F7CE66271F9E48D4BF1067F6
	1AECE21D2537CF1ACE6AF3CE656433F63DD638ED31166D427134DD00365F3A26E53BE8BCED97226DC5E735EC970F276DA2345DF3344F55F6356932094C64CF5A8DDD62F83AD0AC208F69B9DF2A628716F1373F1B5B57ED36395ABFC45EA60D3B831F217D9DCBFADD6D43D37E38DB5F43EC9F9D2CD259966149520C163DD6D7A245222F6EE77A1AE08C2EB509E6E31D4588CD4A58E7B0D79A0DB651EE4F6D00191FA30F7EAFA9A081B9736C7DB074CAB1D5115CD10634D772213C79CB158F24C1559AFACC6601F1B3
	DE104F5B53EF079C9A760F09BD6D22EDDC873382E67FF40ED5368FED894BFDBCCD97CA314716AA4A9E4712712E7802A2DE76E72E2B6BDED1G63E6DF9E4B42B774296C1FF4184CA64740387BA00FE7EBCF295B5FD75588187DEBD5F615FDBA20FE8535401E814F8BE43E6300F910AFD050DEFC86BCB8C4727199D0FA502D321A4DEC2A86F98925E49EB63BB6CDB1378A5B4B3E272C6279B1A364E79E9ABE3FFE04FC67887941A3644F99A1BFEE04FC7D6161731BC648570D109FBAC27E3C9172936A064F4F9FA13F
	F504FC5F917227FB4CE76DEC5735D4385A45AF7BC4CB07C8DEB29C958770FD6B358FD4F9278C66BE79BD6E01EB64194E2CF8BF4170026B5AF378BD5749BB09CBDC7F3E6BCB8572BE1669E44F9C538CC4E72F4D54E3308D1097AE52F73F4AB34A6FFE75909B79C6688757A0A0A69B321E44226EFE8D7B087C513D78CDB08C7867GC5CBBA72773172E0FC2BCB11EFA224276F7344776F1CEFAE2423BC72756FC33E14B2DDF2D619A73E1DE548D78DBC2D9E79FE45798601A740A35F7D7B11EFBA70C4F864BBF4G79
	2200A7E13FA73EFFF03EAC60A983EA5D2F45B73D1CFFFB05FCDF2090CD3E7E8A64DBG79F19E79F6D6A2DF4681DDF2B1D05381AD3EBFF03EG488F7548B765A072C5C07E02831E6C1E2EC23E04F268B3651E78122B112F8CF81AB4789C6504EFD78DFECB5D4531DA0A7DE119A0CCCA406FD547D2155F240D76824DE7E85A0E4B197E08F275F73C7B97933DD1004715637D64456B4AF70A15F63B3543C4BF23C8FD56A8A81F2F99E692D640956EDEF687CC0CC5A776FBAB7515FCE711E0296FCE5D39DFF07FEE443A
	A23E322D6A27F74AA6EB1555A89E0621230A3FFEB8E59249FC1C1543D02D725B764C555B6313BD14C3EA850BBF3FC2AE074C2325094C278925E43E2575FD3E03BA195755E74A6B03E9CFE9E93541E12037E9BAEC886C9B78D47A2E15686A2D40EF5DBFEBA563DB882443016681316FEE8E7ABD0E70C683262F047EC4476077F6A84760B640FD01C201589C643F76426335B07A498E167B2C1C8FD8BD29E699D8161357D6E01BFFE632D0F6FD1966B7F85F55EB6243AB256FB115F2D9AEDC28CF0C83E2B11614E20C
	4587F549660398636BFB35E28CBE08E593456542G0B66F277E94A692BD0AEE89F4A15816628C2395CBD1AE54A651A4AD0AE9C30D8AE7764F235DCFEB5745BEA14CB5A0FF25D0085D523DCDD25165CBCAEB7134BC58116D503F2B32EEA49355620DC6F81146B85AC044BDD5E25A5974965324AD1AE86305CDA143BD82316B3C21EEFAD36353B4B1749EDCD7ADE7CB657B5917866F2DD4FA6AAF5259CE23A0A8F212E6A8AB2160DF20AAC598C2AC01B07C11F6E905A7CDE055AE698507CC33CDEABF99F83CCFF9865
	8674DAF2ED07515717AB475A47185D7403E85781BAC3395DB9D5DAE53460B07A9B4165E2814B2FC339AD0DDAF25DF5A8272BC239C14026F3394F0734642238DCF1B54A89C7F449A5C7D0EE0226DC6F91FCF7FB3AD0F95F890F4C76F85F71B9A22DE5B9223E6F74AFA1E365F440E79F417B4E6F693BFE3C6F1C00115EE0690219A2FFBF3E18548F4C892574C43A2E0A4E89857CA6B8BD0178BE9FF44682259E05FA87BAFC94EDEC0B9FF1CDCA0DF318B5A9535C56F7F49F153F078DAAFE7372236BAF0E1EA3E56DFF
	142D3FD8467153948FD160D2BF23778D128E073C2CFA7CF6F4E52F5A3EEF3D2B4DE0D51A49793A4965295233D5F26CFEF16094A9B7FACFD4F45552D27EDECD1AF3CFF519F3C756336F0D8947F4496947F00DD8161E54B9792E13FF8C57CE2CD8CA66C481101E86B49BE881D052F108996870F12CB7DB3C56FC41355EBCCD96646F302CAC8E140E2D8C6B5D6454E558FD5CD50E453D389463569D47FA7C5398FD90760D644382CD9FDE5B0BBE44F19F1EF053651D8F53C774216DF3AD9FBA76909F48FC4279B97AF0
	36ECECBEF43B4929FD182F720135534B03DA6DB486F8139A301D7EF2B97A195900FE2E5ABFB6BFB35C6454FE7AB4E815152E1278C0666193398F7FB6C69F660C68037005168FFF3C0A65107E857AF0794058FC70F113D37BB028694337F6218F815C07CF4A4766C3091B1C5A0758AF345A0C7FB92DB613FA8246289358E69E234FE76439236C847A794E987D7C6308FEBACEE80D5559FAB216EA0C557CFDA573755DC49C8B7C382FCFD40CF1ACF013D37B9AFDC22BCCCF9FD317A919E3A4B54273F3A31669DFAA12
	A4BB450DFC3C289C63F861A62776535C28557E266951879F6E436603E373A157CDCE6D43CCCD9F1651F55EE46EB5177B701FE374A1F2C49FD21A34FCE8EEC49F321A5007BB2A4666C3001B1C5A07D6CD9F6E98C29F9C5C07D23775585E79F058CDCE6DC328268FF306301F4FEA42B94C11E5F40D9524D3CE62FC658D3A3E9E67328DD61305FC3BE0F903CB483BCC2B4D54E532A0F68B45BA2CB63A6802E1B393BC2F877977846D75A02FA5E82F87F9A3E17835E9BFCB7034DE042DA37B8F7AEEA383624B87E2D8F0
	8B411AA0EDBE097571851B67C2BA84E8B6474FD11C74F172ECCA1E3F25B132D5398E0C48A94BFC36AA2D26109172190DB8979B6A35E56A7511EACA9CA1FF9355795A072BE9795A6D221DCEC4499BA2A96F3F9D6B840D35B3478DBD22005F361E5B3BDC6229F1D82B8A849C537F1CC346C90DB1DD318F641DB3B8C6ADB8096F1D8AF750F56027A08DD4FF8A4BBBC72FDEF7E704BC67A9D60EFE27BC17E710AAEFBA24E72BB0E91D63D24F6DF663D26DF63BE5A969AFF6EB1F2DC3D437CD7D52F41EA74F6A6B9CE28F
	A9C269BB8215F798ECDD22DB5BAE2172AC4F13FC65D2CF6D1F55CFDF2932FE8AF95BDADA2AAE4F79D0A651D239A41C76DC1E692A3CDCC8D728B0E6BBE71F52F691377D633DEA5BCDA05FAD69989C46363FAAAF9852E11A365FF631DD4CEDF73B2D5F0CG79C8C9C70CF4CDEAF677A1C30565C33A3AD94B763DE5CA5B64BBB0EB6F4F8CE2FBEFEE46766EC75F9179C3BA84A83C190FAF4B55FE4E033CA8491EF0C63B0C52G572B724AA05DF0C64B4F1A7DCABFBF63E5F4FB25DBDF83F9272443CF43F690E05301E6
	2B7266C3BA9AA8612C0CB35B6F3B585E43ED7F752A5AF6BA4866CA7295E73563EE823CDB15B788E97F33DAF1FF6B0052F689377D7CAE356DE0108F13F4C4F8309D89F80CAAAF29856603ADDA368D65CA5BFBF95B18FD8E678879AD58B67C69BA41EEC86B0082DB781C37C6B987188678AC20F9123DA8388A2DDA36BF2AD82130CD9648B0FD7F13280EBB2D55F39FD4129E784A943C8D705B8864ECD557775B2E368BB06EEF9C4367A43FD60CDBE7A6F1C7C3BA691CAEB9739C467DF717B9FB89607567E4BBED675C
	FD167AE3250B6DC20C7BC53DD21F8364FD95BAA6FA54F772200B3EA2541762B2B71B8672330066C9FA22BC6ADBDE65222F98751DEBD46A934E43739B107EBC53D3F65E133E6F3A6A5B0D7A6E9ED26AEBGF9A310D3526367D15F1755AE7ABEC3FDEF39688B827969C033016683C5EB68E3772C4F1711F706CE1EEE246981EE6F17E7481C52EC9830764164F37082FD26626F6992A01D8154GE43C401EE9591C6339FEB23F6D3499FA60965858ABF6884DEDC4766596141D857C7300E20152A12F248D5F1DCFAAA0
	EDCEDA92C367A8529A587EB5B2CE978132AFE7686BDDA7C85B258BC495392CFC963A3CF38D82DB535B64B2195D66DEBE6C5D6A93F48EB43F0D3DDBDD4E7197A89E2B40256FD594A769B4835427816739C769B360FCC8C7F3AC00E2896DD0EE6D083DCF31CCC817F06C456B842B07F4AB473EE845F9F3AF477C6938958E69F99C5317225DA80E19CB512E5001580FCA51EE8A479C2DE8B713E3777279FAB147CC5C2E8F472277225DC00E95F33B219CFB005B8D635890379B4131CF395DC80E1DEAC53B79C6446E5A
	03F62BB976E30AB5C33A1BE3C5A5E8574131C1BA877605F4B047961CC1DF26F1ECC6B37AB20BE3874E22AFE9A20E11AF8CAA5B1C9E70B2D1B1BE0B1E5A1CC03FB999C5563612B93E0A62BE8A1C35397B683C052403A1AF2993FDCADCC1FCB2C3DA4731BA0A85C0BA18E3AFD2EC9A24E7F34C1CCF4B9152319C7323F32614AE6873DD0899F7E3D964F36CEE3A9EC08769C00EBDD9093E04F2AC3A92FD896758490368CB84474CC9840B04F48C473E1D047EA5F573F618497D63589D6B39FF9C734B217EC1BA00E3EF
	65204FA19CCB9FC41FE7F22CF590FD1E43316F8E224F73B9F63D917D0B665802AE74AF4144E35B037E25F36CB72968CBB747666EC2DF86B9161E0F3E78F3ECA09FFD194831BFACC3DF26F16C6F59684BAC0EED4CC2DF66F1ECC1A17A223F086D7AC76730DD178156GE43CA837E567C5CF6D3AFA0834D33F0B2C7D2E67F8B345E7A9F0562E9F24F3AE120E033C30CB3C3C69FBD20799469BB3E25F5CC230C0C8CF63586FA8B68B52F3B9F6FCAB9FC7B816C06BA53FC717FC38873115CBD1DFAB473E3B946D76F2EC
	C29D41FCA0BD11E37FD607B626F16C87747D1BE00171410258EA9A079E52E596AC5B00E34A79DF8360C6A027E578B9209F648729F826C3FA368AE3659DCB67F473AD2C3CD7F2FCD98F41852B0C33FA38037213F4966479DB517FB515D89EF19C0BC847F2CB6DC5EC7D86AC0FAC0EC568D15641312B99A86B4B31D7B3D0F6A24736D523EC94477E7409FBBDEC5C097A04AF916B5C097A52B866E8C4FDC60E7DEA1F3B3E24B2546764FC0DE5284F0FE31307D05FFC0EBD166C2E6F75E454974D795625203E849BE2D1
	DCDF934796BB5D75B5D22C9BF81C1CAF4C09B6FCB836FCGED845A70BB7E2633F8A647C240B26DB80F6B5ACA76637275CC26761E3C3E4BBDF906F6C79EB9EE243474F81F59DCAFCD8F256788115E8B092EE6BBBEC75CCF757BC3BA84A85C0E6BG1C5BF15DD568931305FADD396619A211CD5B636759D9DB0E334B6BGFA0F16A6B21B3FEEC11BA58E681F8E5A3FDA15EB90489C714DF8760E1665D73A641339E50E204C373B6493FF3F6BA27F38CBFE22C21E457643EC0CAD6E075384730B1FFABCAFA54C41E21A
	AFDD1DEFFCA4B4BC1A13486AEB911D03247541985C07F52823E3F5BD245BB836A89B6B55278F4713509DE40DEA8824E781C58245713C17E89ED91BBADDDAD3CA560BCA5F37F760B8C4783DF97EC41AA57107A864A2D5BA180D535C46E8772A637B54A5AA1D6E4FCB6DF41C693108BDD60B29C3FF195EA3A9568114FE991FB9266A49DAE10768F418AF13B305265047BC16171AC366D6BD862729272F07EECAE4FA74F44EB08DFE4F64FAA2681A63CE2B4541F8FEC3676E8B61F78CD0F5BF413ADB2B0709ED090A32
	C00650BAEC5F701B3C5BFDFF5122C54C66136728FFA60B4A3FD7683C5C8F7883019876851DEF13F74633GE3313ECA9E1BA4193F527C39109749E5A651F9F60A9366A8CE0CA124E524989207096130D30E0159380F7A5A84F81B936DEE203EF411981C686BBFD3E5DF3FC773A7C2DE8817F9027ABA9752115C576A91FDDDB60C2F2983EADF2FD39B99006B87506E8BF49EE7A2B18CE0DB786D9E57B63565835977D67A7CE1845EDE4EFF7F99B2BE3045E2E4090A41E204B4133D3CD616DDC9475709A097B200B13E
	59BCD20C4B0709F11EDB0CDD544682402387787D0A4EF3B32E40DC7A8AE23F58CF6B8D525D9CBBD34E6F09D7F0BCD9CA57B3CE03749C20E820542BF0EF380A79E9B4BFC0DABBCE560513B5694DBCBF30E2383D7EC45FAAC9BFE2289F53F32EF89E47180D67063501630BF24C41FD666AF149D39D2C953ED769BE9E6551672F57001CD731ADACBB685AF6A6106211F4188FEA0FC73F24FAFCC1C7G577323A45226FAEDE227E83309C63625DA62FF00BEAB0483EF846757E53A0EDFAF52BA0F057C04C1ECEBD7F78F
	5756147D1ED0B1489162FD9FFE9F921463D7D40E7678B51DBEC7B681FF5BA0763337E8797D9648EF904704196B643E61C31F9FA7C2DE48A046F49BFDD6340BE4AF13E8E4FC8FA761FCE1AE577DAE4596C2BA06E38F52E74A4CA1DDF26E9046BFE97DC871A78E93FF6B10BA7EA9B924ED0996322545A845B1035EDBC8FE77907A12C06738CEC87BF02C12564F9B246D8FE1F97C6AC339BC5E257961109741E5C268FCB79652895790DB59CD1F01A0DDF68D633CED4FE86ED36AB84D2027C6D00EA949EB287F007BF0
	3B7F0FBE577E0078FF8D7DDF1FAE7BBF1935D1480B60B269341EE2A11DF09D31ED5B297F10AE3B0E7E97E60D669E65667FF5357FAB0B287F007BDC674F47743EB58D52919CDBC231C8C847F06CAEBA8FCF57C1BB52A176B7BE8FEF5061B8F7043E47F5C0BA1070814D830A834A3885E283EA86F28285814D3C85654ED3B9329FE48EE0513730BDA4293732BDA7793732BDAA3E52DE9A32D61949CD9C1CC6E23AC5FBECACD35871D40E44AF622F277C30E17210623C6019A715C9B30F790754F7CF678D11C98D1E77
	61C967CAE178F3E2C67A2ECFA8598B1E65D2DBDBA360983E641A6BB87BAEFD9750G7554FAAB0EDBEFB8493BFE035954E5A13BE44EE01F788F7ADE438F7802B82F305575FED1CA1615882C9F08DBC76A87490A3E9081BA89E1BF083C153D8F10472B0DDDF41F0E55A61223A549A40579D5C45F23C481FF6C2D58AF9FD90A3EE65D4647D90AB5C03A75B674BF5DB556E65419CF7B0D9F70855D067D7A67F5434533CC954F1C5B64F88836G523F036BA29E4F7CEA7771774F55F8FF0866BEEE27F5C49EFB89A7635B
	4F77D9A57870F71374BBDA9A24759C7BBB652B07F49B47868E71E7F30E4DBA0463C9A0475EB03BBF6B471AF16C8865FC3AA3840B03F45A6D58C77EE9A603299E5255C0EDC0BA20A020F04E333207704C03F46C6DECEF9C597716FE07AE39648E6471B337C965CB6455E59EA4E1C43FDE7A9D2E41C7285A830EF537C6F8125B52FAAECCD670E25FDD69C15FF073B1D6FF25F4BE518CF19A6F40767917F4EC3381F7E01B4B5BB01AB9CFB8484D854A165A50C2783DDFEAF3128D7A8C9A8338F0A75A8D4EC03B79F722
	5D37B3C6B357E83D5355EE6F1DEA3B7534DD8F826E4B6DD66FC43BE15C6E504E116CAED758DEF027EB9F0BF533BB094EB992FC6137AF5AADA8C33B953EE877E259C8F617A96C1AFDDD6D6AFC55F6FFC85F1D79819E486D7EB9996D4E66F6F3D33CA9E7349B23321B74B5355D8D576898GF86657F07C3868F49D2343BE92F8BB7CEFA77A5470B574A9F3401BB60757412F397A642F7009752BEDE747F696EA419865AE0EDACEBA2336053CAB1C78B5F65FD94CF18B45C394B8FBF7B9013F3B1C8EF969F7611A4AC7
	B612F1ED905201C05300E683AD84CA389B57D84EDBC64EA699F6CFC8133537DE3CAC1A95CB9ED9FC6F360C6D0C586FAF43770253E7BCAD045D715EE2CFFBCD536FE6E3E509F4CD7D71C794E77165EDA271F5C31E8FD088D0B850DC20A89EDFE6D2AE0B0FEC0B2DF4B88C9D5DF447AD86C7B6414AB079D04F5A6A07E749F77FF62B0DAE02E35F7DBFBD0B5F6E85BFA8E720A620EEBF36961349BD14653EDE6019AC145381EFA0D0B850DCC90E2D8B78F0BB72C481AEFC9D7A8DD085D05B57D17715D3E4CE27BAFD8B
	5F517539676139ABEB135C730A243CAD056EF945D21E3F1EDCF7946C106AAD28DF39E72DE445CE0FFB56F4DFE77595A0DD97889BA59DEF34A8F524BE3CAEFE31879D91126C3C2F4B6F3B593851C80E2C13FCFC7A7AE638DA447ECC3E29305A84D5C90E16516F494F4DACAC4C41F7C865D932DCCD6BD635DCAD190CEEB51A8CE6EB57565CCC10AD484FE1676311B9B67DFEA57DE37A5A49EDC60A6B57A95826B326CE912AFF765E62ED9E62CA39074553FA0F9CD731E3EABC531932C37671DBFB3D090D71F617523A
	AA5CA179D67C092C47546AFD9979674AF23737F8DBC6CC76FB1F4AE5736BBCD9CF5FA86248E7F194E19C8979329E5BA862E8AB1465360CB20E5B0A64B8E6944BFAD66F71BE0E576999DABB0AB10E37F74BFA3EBC63FD9C8F1548F24FB40FAE0E72D2C5DB5DA76BC99FC59C3F9EF49F87E3797E2F00FB58B8988A5770FB583AF4A677477D6E63E05281141BF78F9B8723611A708DA64746415EF26449A0B8D083D0AF107FB7D0774C4FBEF0993370C4B83E06ED73DAE53EFCE21B14FF583EC6190FA72A717259C14F
	5456BE758EF99EABD82764118EF2C2BDEC8FF0C333561E72E9BC0E1A95340D98310D781749F5E4489F260EF69739341197764BF2378CFAAF373AC216EB5EFD6363E1E1257C7B64C1D9F7D133B7BEC96FC2ABE9195830CC1CD50AB2C972DE4FF3C9645E54E9B05BC56E539355322E73195E17D37CA1D96E4A7A5175416C43326C1BB9F47EEB6B93D95E61BAB9EF52D56FE3EB9E24E55405E5F469082C475168FDDC77FFAE4B7DE43831D5A5F76504AC5736E7F465B129D1EEA361CD321EB33B3C0FBFAD1F465F0E71
	3FF3D25633E01977F1ACBDAD4B7DA15BFB3976B3325C6A2C5145FF7BD9B97E1096D94FDD4B3D0F7F9F67BCFF53C8BBCF577C4098B3070FB39F1DF39F438B78FE4C38EF30B1BC4D9F1E8F7D599EC2E90CF33A0F61E1CE7EB7E37C59985E8CD733BF1B4B30B1FC55956471A1BCC0E1C07300E27DD1F7B91DCBFBBA890F71BCF2090CB32EB97506F6510CFDF19F994715674731DCACA76B6007AEB6141C7CDE3C0D0C512A4388299A167F3715E928C34544729F781C4C1F65B374147E35D42439581739D87EDFB2B73A
	643B1D06A969F9778B17B9BABB05D34AABDEC71E4558CE2682BC23CDD45EF7526FE5F5DAF6AF1ECDF17A20D6FE834F5FDC2F15EF6479B61BD63E73DE7CFE5124389F5D37E50BF67F28A4C1C077A8103A0766FD0569786516CC38F2F9F8D26D35DA4841A1CD1FB7DC282C2FBBF47CD84D71A64F77257E83726F374BE53D2547BED67BD6E5B5DBED7A027C42DCCA3B0BF2A45E6717FA63833331D7F16F7BFA5D0D5CD7190EC34EAD5A366BEBEA1BE4631AE598DD4EFCB2A86EFDABEA1477C606B555603DC97AEEFA4C
	FD4CD840779B7B5D4B460CE038065D4B3E27B039B5356EE3063E9665665C4B460C05F00D1364246FDC07707DCF5AFD083DC7318AC8575F076F04D6778C77CEC8790D1F748BA748795D475E8991AC88FE5F39E8512245BC6E070EE8FFFBFD163ECB8E857E307BB0363F50BDF972F92D4A3E7E35F44CE3E749AA739AB6390E83B2974B3FFA42BD1FD9E079BFEFDFA369BEEC92ED060E6E8157F1AE2EAA59C59E47012A9EF5BFA5653D60BE6C475DDB3572E3F97E5E9C2D7C147BB13FEB275699C0197763B87020E25E
	941E6EEDBFE07CA99B465667234BBD0F83AF9D16FF2FBBAA7BE64D981DEFAFE70C55B7E63B24DE76A360386C473B1F0C4E0F161DB76647F7BE177DD82B18537DE45F687CB8DCF6E3FEFC2618935E27184BBD10BCBABFD6245C189F6127E4BFB294F33C3F740F4E0FFFBAEF4C0FF2BAC7147E46D10B7C5B21787D685961566A5CA8B19BE163EA033D1F8D5E68F91F73540D5A7B1C1F5B283DBF7FBB9B077FFB8D2FEC747C779ADE5D287CFB8D6C7D726A96B23E9543F856G64G72851AF8BF3EDBEE226386796BDC
	6E6F15EB0CDDE41FB5790BDC8E343FE71367D88FEC9A796FF89D5AC43E9137DB9D8EEB8F510F7831CD243E9C56DE8AB26C44A6D2C6B6D3D7370331CAF873A6525E4CE2A70559770313E7716F2005C1EC5177635A676F2EA0AF5F3CBA4B314964B00B8769EC012DC71EC4574F91BD7AGDC837D23ED44CE9B241DC07E8138767A27D9787DA2843048G34DF5066F2968B69CC252507ECA663C1C397DBF24DECED4E46EF55698F202D7AEC7A777CA05D8D24FBG4FC3A95B0E3C018F60BA690B5B556B2449FAA27282
	1365CF5C2EDEA77D47454A7C9FEFD72F132EF24997F62857C977C9792C1D65527514F3401F288730ED7DEE53CE381EB2DCF4BF559340861B35D734B98698CACF8916F46DB8A7703A5E35B95B138EE821C720C8BFEF3FA8F6B81A8CDD5C179367497CAA65C1180381558399011CC07EC041C0E1C091C08B006200D29F52A5E78115G9D86EA856AFD8863F8B2BBE718B8244A249D45E6E067FB30B611B904ED5287F44DFC886B2FFB885BD54CC3D857BB68D9103901B0C784EA8D44F615FFG5B15833050C05461BC
	00EDE0C1A06AF80272E6CC00B4D07D8464FD309CF90D93303D4CAAF7DBD76F52DE7EDABEFCFB51D7285B4B85177C33956A7632C6524FFC3A136E3F2367DACD4039D6DE1BA0607DA736B5D37078AE212828A4B73330E8CF8EAB23B367301C0507218E9F66E7B11D43F26EFD181F435ACF3FBFC2BA9CE85E43D84E11CEAC67E840740F208E7DG16DD5BA3286354G618D0474B420591C37788A72C6BE02655CFEC5DD4EEF3914D34095F5B9AFF729075CC1F5B9CFF5593FF0FED0DD4E49123CF4EEC82707F3C36874
	1B79FDC1A4FE53733DA6E2AC7750B518C457A047CE56A3B61DE3CF59D0B6EAA216E54AF12C0F06C9F03F19043CCD4731BE42A7E1D99E22FF1BB49652295F04F27FA66AE828457A28G4C79CD5491D80BE5BC6D1B2863D54A3B9052422370CC77A8BE6B3CF40834A16F1EF73FB048EDEF16596D19DAEEFB0505B0D15ADB1C23792C6BF95EBEF0D17EBD7112EC2B43ABDBAC76AB74EFAD53F3939F4572F8F4ABE2819C6B256BCEC9DB096558B7F7E25967876138363E45733DFCF34B4877729DADECADD51758B450AB
	1D1F125BC24FB46A6C340BFC4ED050124A31BAFB0355EEA22B63597C2CE54475855DC1DA7BCECCA34AEDD625195CE4AA6793645DFE1840A07CFB2A15747E9E9A24DE4FF00462E1C16A758CBF59066DF79664699F43B5D8733346368E6377E3145B16BD36759B61F46E617718BA5E57A89E7818BA5E935998EFB064A5CD66FFC3F07BE86DCBED26157C6673E0B6BD40F3FC681EAD72B746605945F4059EC95E880C16AE69EF511E775C2EFB4E0F5C2EAF1F571E238E1EF71F235EF2DEFB0EFA67F9659C15E1FE67C9
	7F6B0279C2B3673B17E3E7B876A055C93053A623231B639329DF84BFAC920308CF26FE75D32CD9421ED4E0E7A4AC74BC691B90F237151FAD765CF93A0655E4B6CBE73ED39E13853AAAAF0F9954C7D32FC16177AB9CBB435B5A7621317565629165347BF28F15B3CF762EAF6BA6E3DFFE044E3582A62B5BF6B04503A62B5B76277B31ED07C2DE6A94EC5B1F391DE569DD1F2C9E235C502865D8DC9F51333A9DD35471EE2338EE0ABA5ED0BE6774033CE89E6FA3EE67D1FA6737DF335B79D44170CC93AC1DCF956CDE
	FF7E008583052972A2A09D89942340190D8B67465676FAC61453EEFBCFD03924473DEBFB990FE35BBBCA6719790F2B6B220962E50F2B6B626DFE2C0B4310977AB856453B4E3155C54C9865BE9D98DB5BFB1D4E15D31FD0477B930AE7BC210E37F5G6355C31E5F93986F5EABE3735BA82A5BDEB468CCF8D23B5E5295F82E743BC23AB641357BC92DB6F43F4BD91A0340638F94AC710641B5C2D36EEC3DD2AE92F8E20012C298EF86DC73C334641E3129E32A863EE6952FB944BDC61D8A8B00F488504C90F5FF7A60
	78587AD36608F25A7D698C151B23613396AD88417E74B2FBFE88D1372FD994CFF8CA5D3E0E55E07BCA05BC47D3583ECE550E31FD0DD1EE522865D8DC2507087F731ED247DBC57185EE71C6706728E848EBFA9A633D5E23EEC3E11097717448659F29620901F452D4DDF246D4F59B8A5E2A36118FBC55D3C736512C62B1C3DA879460E623AFC7D90EA110BF93E80E4437C04396131B32D3DD7E318A5E14D0F7B9F606E778DA722CE53218CD96111CB0FFC83488F8B66ACB74FDE1A64816047233F03651BDA310EE8B
	4532BFC457F0325F8D0A5FBF5FB67E6F437F749558F8B5DB0E698D456F666C71377D65385AE0F56AC35F5F1921BEFDF8BDBF4B4E9501F4A82F6747764B31BF2D78DD34FF7C4B217EAB3011D9AE471423787D7C0171377D43F135416A74997A0EB28C6AB30257735FA8968969E80E355233BD62A01D76AD441E27189E52E59C7B87459AA0ED6658EFBEA3188E527E9C3B77AA6E8B8B66D884BD1BA08652C94FA076A1BDFFA08352459C7BAEFD67F99852ED9C3B50CFB08724FD1F6167B3BB657ABA2B787DCE7F7857
	DD5CD7E0E34E009C534F953F5B87465F7655F135A11D09A6623E43GDE4FEFD2AC0424B976D9A7DDCB8769859C3B0BE264AC22D80E3DCD5F6326BC2BCB4EFD963182BB36438A0E45513DF67E108E66585387D1DF98475EE9C27FA2B816F712769DC8C7F36C7E13E8A30EE3B1F43FFB7DB4E84353907B329EEDB8B8367F825A706518AF45A6C2BA14E36FDDC09BE19CFB758441121E03F94BF3084D31213EFC0EED24E5D08D69A60E69A85686E99F0E3DE5C77F82B9F62C1D6F6F645856AABAD6C0BA75F944AED1AC
	8B52559C6B256F4A1BA15D4B31B7683EBF9FC887BE0F7D787BB5F25BFEDD713B31E67C5B3979AB30D1F1C80E29CE717BBFEB475F767F0C2B8D69CC319EECF3413C1E23A8968669599C7B42026DEBAE47EEBD0A6DEBA147E650FD65A5AF68126BDF60E79950EF84ED1056F16C552DFC7C60589ABAD78DA1E90EDD5E06F6E7F12C4309F667F1AC1D7E0D8E7DF4385FCDC74CD001F69BB8464EEDB4C25A4131339A677E5DC6B1DF608964FC8B37707BA247E6707361E2B816180BFCC9AF623720B9E7695F0BA01F7849
	3A9781579AAF24F376E660B3F2DE7336C46495701B4DABE4291A744D6611A1EDDDAF50F9E1G6889623ADEADF357751B9ED9578F68FC4275AC1979947BAF20B9DC4F2AB32E7BCE932D328E7B996D33E46E26730DC8509145753CC6B157F3D4A2A9C672533F0DFC9F1C753CBEFBA7ADB3BD7096F37E77BFF3BD8BE1B51D2F34C13E795B7C3C292B5E1C6104FBE155E7F9CC84BDC302728C03F776386F797F7B9E7CBE9842FD7B34C4FBFDE48D1DBF4D843E591CF76EB96D3A0D22732A9860933E033C177B5D6B3628
	D760B24F0AFCAFB817D9A83A566329AF65FABC56C93EEBDC96ED8ED30741CC16C26237B269BC27CE0C2D75BB7C4CAA0A79C1BA105B08312DD1682944739838DF2B6C28E776F730EE8E5BC7F3CE0C7AFC09D850C3B64EAC67312CBD68DEB71F9C44F61690067E7F04E2E9104E64D84AC93E0FBA0C6FB3BA69DAEE83E40913F4B64653A7C7F3C60C5A77C130314F457764A1F75F378E216F3E5C4F07691CA49052419C6B3C003E4F653EBFFA41557709F659770436511CEB2676DDF8091D93A07B7E7689F75FE3CE20
	6FA9AF211F6F5B504F0C17504FC23B2B1F2FB8643679101DFCB76B365ACCD720DB3836CEECD74F73F6F5185B79A7451C1076F9895B1A31FDB4671C29E31E8EFAD63B443C374ABD6606AA0CB91C47F7EB55DA1798641E41E4A6D661B772B9DC664E635A634123F4FE9687FCC9B310775DEA0D313ECF9E8FDE6F41B2AF61B2CBAC2AF13DDF663FC26F79C6606D1D01E5B76168E85A7ADC559996C1B35837FF396C5E5C62DEF66CBECB72C3391F9FED9D3E6C0A37E2594D1C01F57F072D986FC22EC73F4DB5DE3DD30E
	77D1BA57C8FB99460217B15EAB4E510CCB6AF89BC0CF0ECB3C3BAA5C632D2D40F8DBDFC65F6F2A40F84CAF236FD3F2DC6FF1AF5139CCA06487F31E07373846F7F4C06E6B0B360C262F2BE3198BB612A59EE67F9DFE66C7A4AF2F0CDCEF4E5EC09BA9B3DDEDE44EE467CD7C836E314C7FA72F8A3C6C6A36F9318F26B807377DA557E459A9E55E4AB27EBFB7136B0E9E5C9F377D3A2C6B4961769E2B76197D6D0C6BFE454145321E1FFD667DFE39F9CBE4395B2F0EEE3F5CBF92E459B5A56EFBBAB7AF15736F71AAB6
	E98FE312AC5758BF3A72FDD54C94C6DE9B45F82FF5625E9D7C8B4D0D64FFDC9AEC4F2B82561A93BC1E1F2E107DFA53666D5EA9461FED9F1D2D7713E5DB1587DD6BFA42AAC5391F981D9F5BCEFAD3BE5259052BE5BBFB07DCFDC87FC04EAB38B0BA9F06AEF86F433E35321D64C657FDD029F66F6B7A35D1167F64F50A72EF77B6BEA67B038FE5592EAAD71FDF287AF8F8BF483EB1C94F168D321EFF2F9EDDBF78F50F77E5BC34D136F3796868E28D4A10E597EDF10D7568D6EFE2E53CCB37F96F6F62AD324D534E51
	79CB3784CB3267AADC7DFD2C427B3A51A94EABB96E75BECA697C66ECD9766FB738CF68556DA4351E0DFD991B2145043EA7A4BA049535FD96FAD8EFE601B2D128CC94A993458EE199BDE1067CCA427D348EA1016CEDF38809F403AE88B47635C3E9B8E85EDAF9D7EC2634AD36942612F61B70017BA8DFF94F4FFF96FA21BAADDE082F9316F65395DCF5B0AFA4CB411C646912741ADA10DD69D20ABFF8EC773B913FBCE5DFA2AC2D93B610C98A5BE38B0F3BC672B788CF09B6223DD6D85ECB7E88A5F98C2E93926C74
	12E8F78C1845FAA12D730478E51FE8F70846CADCF9E7F7886B6A0925DDE417442E4386FBB7BDBAEFDF3D10E0B174C0489F30EC334152350BAD435BC77DDCDC19C92B005E8D405F3554DF22A50FEBD97B726A6CADC79604AD9162EB0595E62B41D8EB68F0D8EDF542F2C7B714D33755ECF47616D7D0C5C97D387EF889285B4843A741661187926E74A567A43F158BD75646432307CD58C5B9491CAC0FF3982B3A8DB6B0A55A6A008CE0B20B675D3259317DC7075637468B0B25A03F942E892B1DD02D34404078EA2A
	12041CD78BDEBBFE715EEB137F2BACBA8AC4EA05C47A276841F02A4CF53C0F6C053CA37401CD498111F7933FFAC971580966358EE1E9A75DCB89BF2A699C8271658E1B41E26F345AFA40E826AAE24C620E675D7FDA7E83CF7D7DACF5DC96F5889F33AA8251DDDD2235E7D7E5E72749A2F285D0DF20FE93D7CFF872D4BC9FB86FDDF7642DC56D503E2A05A5BD7979747F827AFFA1793F00A28594A9A804CA0B96067D274EF7BAC94C99CEDE3A4413BA3A90B172F2D16912F726AC09979220CB30051950F8496ACAE8
	3CB656C316B82C3D2C5DC99D1D3CCCC92485194CFB0DFBEA25DBCBA5689A77A6C760F5B4F3BDE1A7BFBE6275C5D21BE86647747F2DE30BFE2713CAE7C9A0C6917F2F95C5319C0532AE04FF2DA8764BD1601F309929AEF6EB24EE2A188E39564CE2A9F36D08D15C44B1FD219D5362FF6518DADCE34257EA7F5275A4EA4724D5CFEA3F97FB70BBE1D83F793D152D02E7ECC4457FD1C0BDF2C0FAC1FE3F128CB730D52E07F1ACFEFC7DED295FA86A0B9712EA492D5E5C5BED2813268975C2F2BB3D0309B660F5882972
	2D1A4A42BCAB3E83A6E19BE53C0360AC37315750C126E24B0D865BA52A01385457A2AC6F34F535D3838EA13E2536854C5294496E2F97D6B83A4956DEB2A7F2886BE5558DE483231441E6F142224E4E893D745F4D572606DC2B0094FFBD2D021B4ED39F5953F8A9031C9C3B61667374EEEDCF63EFBECF6F13BDDDA9E5A4F21FEEAACFA7481E6223A9FDCDFF73F99AA4FB1A2870F4794D6769135AE53A155FCF5E83E7CF7054F92079DC02A0A91244B6D79E07300ABF6C5333909D42CA69219D534B24733C60B1DF4A
	0107DE983AA5D8710C3F0A3E8ED0GEB700D0182DBAB3FABD020A9640582269DC292BBCD27B4934C3303F700A7199E26E36B689EA84DD454D09BAD8DF2C3726A4E5926D5C39672DF6F7FD1DDFD4FF9B3FBB74B792FB5130A10DBBEF9A3C9EC9F90061BC95DF4A5BE5729D92AE31B677D1FFB778B571185B7D0E45D4CBE7F5AF55CC61FD75C4CBEAF14FDDE2E70D97B2EF813787C875967558A1F051B39377D75266EEDF1F209124F8C9B24CC6D79664D617362A56EBE536B4D6C738A59676D124FF2EFA368B6091D
	4C7617601970B95715E75D475E1E62713C7C041F32BDD369BF154F04E7677154323FE98AF86FCF716C09873348C16B1E4E75E96CB1184D8E0379D22545C84E78B9B8609065B3300EE6937DF66411B225B32332095F9795B27F9FD0CB87889A5F676840B3GG703CGGD0CB818294G94G88G88G320BD8B09A5F676840B3GG703CGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG7AB3GGGG
**end of data**/
}
/**
 * Return the DivisionAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getDivisionAddressLabel() {
	if (ivjDivisionAddressLabel == null) {
		try {
			ivjDivisionAddressLabel = new javax.swing.JLabel();
			ivjDivisionAddressLabel.setName("DivisionAddressLabel");
			ivjDivisionAddressLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjDivisionAddressLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjDivisionAddressLabel.setText("Division Address:");
			ivjDivisionAddressLabel.setEnabled(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDivisionAddressLabel;
}
/**
 * Return the GroupAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getGroupAddressLabel() {
	if (ivjGroupAddressLabel == null) {
		try {
			ivjGroupAddressLabel = new javax.swing.JLabel();
			ivjGroupAddressLabel.setName("GroupAddressLabel");
			ivjGroupAddressLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjGroupAddressLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjGroupAddressLabel.setText("Group Address:");
			ivjGroupAddressLabel.setEnabled(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGroupAddressLabel;
}
/**
 * Return the JCheckBoxDivisionUsage property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxDivisionUsage() {
	if (ivjJCheckBoxDivisionUsage == null) {
		try {
			ivjJCheckBoxDivisionUsage = new javax.swing.JCheckBox();
			ivjJCheckBoxDivisionUsage.setName("JCheckBoxDivisionUsage");
			ivjJCheckBoxDivisionUsage.setMnemonic('d');
			ivjJCheckBoxDivisionUsage.setText("Division");
			ivjJCheckBoxDivisionUsage.setMaximumSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxDivisionUsage.setPreferredSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxDivisionUsage.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxDivisionUsage.setMinimumSize(new java.awt.Dimension(53, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxDivisionUsage;
}
/**
 * Return the JCheckBoxGroupUsage property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxGroupUsage() {
	if (ivjJCheckBoxGroupUsage == null) {
		try {
			ivjJCheckBoxGroupUsage = new javax.swing.JCheckBox();
			ivjJCheckBoxGroupUsage.setName("JCheckBoxGroupUsage");
			ivjJCheckBoxGroupUsage.setMnemonic('g');
			ivjJCheckBoxGroupUsage.setText("Group");
			ivjJCheckBoxGroupUsage.setMaximumSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxGroupUsage.setPreferredSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxGroupUsage.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxGroupUsage.setMinimumSize(new java.awt.Dimension(53, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxGroupUsage;
}
/**
 * Return the JCheckBoxRateUsage property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRateUsage() {
	if (ivjJCheckBoxRateUsage == null) {
		try {
			ivjJCheckBoxRateUsage = new javax.swing.JCheckBox();
			ivjJCheckBoxRateUsage.setName("JCheckBoxRateUsage");
			ivjJCheckBoxRateUsage.setMnemonic('r');
			ivjJCheckBoxRateUsage.setText("Rate");
			ivjJCheckBoxRateUsage.setMaximumSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxRateUsage.setSelected(false);
			ivjJCheckBoxRateUsage.setPreferredSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxRateUsage.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxRateUsage.setEnabled(true);
			ivjJCheckBoxRateUsage.setMinimumSize(new java.awt.Dimension(53, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRateUsage;
}
/**
 * Return the JCheckBoxRelay1 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRelay1() {
	if (ivjJCheckBoxRelay1 == null) {
		try {
			ivjJCheckBoxRelay1 = new javax.swing.JCheckBox();
			ivjJCheckBoxRelay1.setName("JCheckBoxRelay1");
			ivjJCheckBoxRelay1.setMnemonic('1');
			ivjJCheckBoxRelay1.setText("Function 1");
			ivjJCheckBoxRelay1.setMaximumSize(new java.awt.Dimension(70, 22));
			ivjJCheckBoxRelay1.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxRelay1.setMinimumSize(new java.awt.Dimension(70, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRelay1;
}
/**
 * Return the JCheckBoxRelay2 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRelay2() {
	if (ivjJCheckBoxRelay2 == null) {
		try {
			ivjJCheckBoxRelay2 = new javax.swing.JCheckBox();
			ivjJCheckBoxRelay2.setName("JCheckBoxRelay2");
			ivjJCheckBoxRelay2.setMnemonic('2');
			ivjJCheckBoxRelay2.setText("Function 2");
			ivjJCheckBoxRelay2.setMaximumSize(new java.awt.Dimension(70, 22));
			ivjJCheckBoxRelay2.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxRelay2.setMinimumSize(new java.awt.Dimension(70, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRelay2;
}
/**
 * Return the JCheckBoxRelay3 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRelay3() {
	if (ivjJCheckBoxRelay3 == null) {
		try {
			ivjJCheckBoxRelay3 = new javax.swing.JCheckBox();
			ivjJCheckBoxRelay3.setName("JCheckBoxRelay3");
			ivjJCheckBoxRelay3.setMnemonic('3');
			ivjJCheckBoxRelay3.setText("Function 3");
			ivjJCheckBoxRelay3.setMaximumSize(new java.awt.Dimension(70, 22));
			ivjJCheckBoxRelay3.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxRelay3.setMinimumSize(new java.awt.Dimension(70, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRelay3;
}
/**
 * Return the JCheckBoxRelay4 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRelay4() {
	if (ivjJCheckBoxRelay4 == null) {
		try {
			ivjJCheckBoxRelay4 = new javax.swing.JCheckBox();
			ivjJCheckBoxRelay4.setName("JCheckBoxRelay4");
			ivjJCheckBoxRelay4.setMnemonic('4');
			ivjJCheckBoxRelay4.setText("Function 4");
			ivjJCheckBoxRelay4.setMaximumSize(new java.awt.Dimension(70, 22));
			ivjJCheckBoxRelay4.setActionCommand("Relay 4");
			ivjJCheckBoxRelay4.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxRelay4.setMinimumSize(new java.awt.Dimension(70, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRelay4;
}
/**
 * Return the JCheckBoxSerial property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxSerial() {
	if (ivjJCheckBoxSerial == null) {
		try {
			ivjJCheckBoxSerial = new javax.swing.JCheckBox();
			ivjJCheckBoxSerial.setName("JCheckBoxSerial");
			ivjJCheckBoxSerial.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJCheckBoxSerial.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCheckBoxSerial.setText("Individual Address:");
			ivjJCheckBoxSerial.setForeground(new java.awt.Color(102,102,153));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxSerial;
}
/**
 * Return the JCheckBoxSubUsage property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxSubUsage() {
	if (ivjJCheckBoxSubUsage == null) {
		try {
			ivjJCheckBoxSubUsage = new javax.swing.JCheckBox();
			ivjJCheckBoxSubUsage.setName("JCheckBoxSubUsage");
			ivjJCheckBoxSubUsage.setMnemonic('b');
			ivjJCheckBoxSubUsage.setText("Substation");
			ivjJCheckBoxSubUsage.setMaximumSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxSubUsage.setPreferredSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxSubUsage.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxSubUsage.setMinimumSize(new java.awt.Dimension(53, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxSubUsage;
}
/**
 * Return the JCheckBoxUtilityUsage property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxUtilityUsage() {
	if (ivjJCheckBoxUtilityUsage == null) {
		try {
			ivjJCheckBoxUtilityUsage = new javax.swing.JCheckBox();
			ivjJCheckBoxUtilityUsage.setName("JCheckBoxUtilityUsage");
			ivjJCheckBoxUtilityUsage.setMnemonic('m');
			ivjJCheckBoxUtilityUsage.setText("Utility");
			ivjJCheckBoxUtilityUsage.setMaximumSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxUtilityUsage.setSelected(true);
			ivjJCheckBoxUtilityUsage.setPreferredSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxUtilityUsage.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxUtilityUsage.setEnabled(false);
			ivjJCheckBoxUtilityUsage.setMinimumSize(new java.awt.Dimension(53, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxUtilityUsage;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder1.setTitle("Rate Address");
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setBorder(ivjLocalBorder1);
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());
			ivjJPanel1.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJPanel1.setPreferredSize(new java.awt.Dimension(220, 94));
			ivjJPanel1.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJPanel1.setMinimumSize(new java.awt.Dimension(220, 94));

			java.awt.GridBagConstraints constraintsRateMemberLabel = new java.awt.GridBagConstraints();
			constraintsRateMemberLabel.gridx = 1; constraintsRateMemberLabel.gridy = 2;
			constraintsRateMemberLabel.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsRateMemberLabel.ipadx = 13;
			constraintsRateMemberLabel.ipady = 4;
			constraintsRateMemberLabel.insets = new java.awt.Insets(2, 25, 4, 0);
			getJPanel1().add(getRateMemberLabel(), constraintsRateMemberLabel);

			java.awt.GridBagConstraints constraintsRateFamilyLabel = new java.awt.GridBagConstraints();
			constraintsRateFamilyLabel.gridx = 1; constraintsRateFamilyLabel.gridy = 1;
			constraintsRateFamilyLabel.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsRateFamilyLabel.ipadx = 20;
			constraintsRateFamilyLabel.ipady = 4;
			constraintsRateFamilyLabel.insets = new java.awt.Insets(25, 25, 4, 4);
			getJPanel1().add(getRateFamilyLabel(), constraintsRateFamilyLabel);

			java.awt.GridBagConstraints constraintsJTextFieldRateFamily = new java.awt.GridBagConstraints();
			constraintsJTextFieldRateFamily.gridx = 2; constraintsJTextFieldRateFamily.gridy = 1;
			constraintsJTextFieldRateFamily.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextFieldRateFamily.weightx = 1.0;
			constraintsJTextFieldRateFamily.ipadx = 30;
			constraintsJTextFieldRateFamily.ipady = -1;
			constraintsJTextFieldRateFamily.insets = new java.awt.Insets(25, 0, 2, 26);
			getJPanel1().add(getJTextFieldRateFamily(), constraintsJTextFieldRateFamily);

			java.awt.GridBagConstraints constraintsJTextFieldRateMember = new java.awt.GridBagConstraints();
			constraintsJTextFieldRateMember.gridx = 2; constraintsJTextFieldRateMember.gridy = 2;
			constraintsJTextFieldRateMember.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextFieldRateMember.weightx = 1.0;
			constraintsJTextFieldRateMember.ipadx = 30;
			constraintsJTextFieldRateMember.ipady = -1;
			constraintsJTextFieldRateMember.insets = new java.awt.Insets(2, 0, 2, 26);
			getJPanel1().add(getJTextFieldRateMember(), constraintsJTextFieldRateMember);

			java.awt.GridBagConstraints constraintsRateHierachyLabel = new java.awt.GridBagConstraints();
			constraintsRateHierachyLabel.gridx = 1; constraintsRateHierachyLabel.gridy = 3;
			constraintsRateHierachyLabel.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsRateHierachyLabel.ipadx = 5;
			constraintsRateHierachyLabel.ipady = 3;
			constraintsRateHierachyLabel.insets = new java.awt.Insets(3, 25, 38, 1);
			getJPanel1().add(getRateHierachyLabel(), constraintsRateHierachyLabel);

			java.awt.GridBagConstraints constraintsJTextField1 = new java.awt.GridBagConstraints();
			constraintsJTextField1.gridx = 2; constraintsJTextField1.gridy = 3;
			constraintsJTextField1.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextField1.weightx = 1.0;
			constraintsJTextField1.ipadx = 30;
			constraintsJTextField1.ipady = -3;
			constraintsJTextField1.insets = new java.awt.Insets(3, 0, 35, 26);
			getJPanel1().add(getJTextField1(), constraintsJTextField1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the JTextDivisionAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextDivisionAddress() {
	if (ivjJTextDivisionAddress == null) {
		try {
			ivjJTextDivisionAddress = new javax.swing.JTextField();
			ivjJTextDivisionAddress.setName("JTextDivisionAddress");
			ivjJTextDivisionAddress.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextDivisionAddress.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJTextDivisionAddress.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextDivisionAddress;
}
/**
 * Return the JTextField1 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextField1() {
	if (ivjJTextField1 == null) {
		try {
			ivjJTextField1 = new javax.swing.JTextField();
			ivjJTextField1.setName("JTextField1");
			ivjJTextField1.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextField1;
}
/**
 * Return the JTextFieldSubAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldGroupAddress() {
	if (ivjJTextFieldGroupAddress == null) {
		try {
			ivjJTextFieldGroupAddress = new javax.swing.JTextField();
			ivjJTextFieldGroupAddress.setName("JTextFieldGroupAddress");
			ivjJTextFieldGroupAddress.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextFieldGroupAddress.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJTextFieldGroupAddress.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldGroupAddress;
}
/**
 * Return the JTextFieldIndividualAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldIndividualAddress() {
	if (ivjJTextFieldIndividualAddress == null) {
		try {
			ivjJTextFieldIndividualAddress = new javax.swing.JTextField();
			ivjJTextFieldIndividualAddress.setName("JTextFieldIndividualAddress");
			ivjJTextFieldIndividualAddress.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldIndividualAddress.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextFieldIndividualAddress.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJTextFieldIndividualAddress.setEnabled(false);
			ivjJTextFieldIndividualAddress.setEditable(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldIndividualAddress;
}
/**
 * Return the JTextFieldRateFamily property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldRateFamily() {
	if (ivjJTextFieldRateFamily == null) {
		try {
			ivjJTextFieldRateFamily = new javax.swing.JTextField();
			ivjJTextFieldRateFamily.setName("JTextFieldRateFamily");
			ivjJTextFieldRateFamily.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextFieldRateFamily.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldRateFamily;
}
/**
 * Return the JTextFieldRateMember property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldRateMember() {
	if (ivjJTextFieldRateMember == null) {
		try {
			ivjJTextFieldRateMember = new javax.swing.JTextField();
			ivjJTextFieldRateMember.setName("JTextFieldRateMember");
			ivjJTextFieldRateMember.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextFieldRateMember.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldRateMember;
}
/**
 * Insert the method's description here.
 * Creation date: (2/24/2004 3:56:49 PM)
 * @return javax.swing.JTextField
 */
public javax.swing.JTextField getJTextFieldSubAddress() {
	if (ivjJTextFieldSubAddress == null) {
		try {
			ivjJTextFieldSubAddress = new javax.swing.JTextField();
			ivjJTextFieldSubAddress.setName("JTextFieldSubAddress");
			ivjJTextFieldSubAddress.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextFieldSubAddress.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJTextFieldSubAddress.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldSubAddress;
}
/**
 * Return the JTextFieldUtilityAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldUtilityAddress() {
	if (ivjJTextFieldUtilityAddress == null) {
		try {
			ivjJTextFieldUtilityAddress = new javax.swing.JTextField();
			ivjJTextFieldUtilityAddress.setName("JTextFieldUtilityAddress");
			ivjJTextFieldUtilityAddress.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextFieldUtilityAddress.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJTextFieldUtilityAddress.setText("");
			ivjJTextFieldUtilityAddress.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldUtilityAddress;
}
/**
 * Return the RateFamilyLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRateFamilyLabel() {
	if (ivjRateFamilyLabel == null) {
		try {
			ivjRateFamilyLabel = new javax.swing.JLabel();
			ivjRateFamilyLabel.setName("RateFamilyLabel");
			ivjRateFamilyLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjRateFamilyLabel.setText("Family:");
			ivjRateFamilyLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRateFamilyLabel.setEnabled(true);
			ivjRateFamilyLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRateFamilyLabel;
}
/**
 * Return the RateHierachyLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRateHierachyLabel() {
	if (ivjRateHierachyLabel == null) {
		try {
			ivjRateHierachyLabel = new javax.swing.JLabel();
			ivjRateHierachyLabel.setName("RateHierachyLabel");
			ivjRateHierachyLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRateHierachyLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjRateHierachyLabel.setText("Hierarchy: ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRateHierachyLabel;
}
/**
 * Return the RateMemberLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRateMemberLabel() {
	if (ivjRateMemberLabel == null) {
		try {
			ivjRateMemberLabel = new javax.swing.JLabel();
			ivjRateMemberLabel.setName("RateMemberLabel");
			ivjRateMemberLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjRateMemberLabel.setText("Member: ");
			ivjRateMemberLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRateMemberLabel.setEnabled(true);
			ivjRateMemberLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRateMemberLabel;
}
/**
 * Return the RelayUsagePanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getRelayUsagePanel() {
	if (ivjRelayUsagePanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder3;
			ivjLocalBorder3 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder3.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder3.setTitle("Function Usage");
			ivjRelayUsagePanel = new javax.swing.JPanel();
			ivjRelayUsagePanel.setName("RelayUsagePanel");
			ivjRelayUsagePanel.setBorder(ivjLocalBorder3);
			ivjRelayUsagePanel.setLayout(new java.awt.GridBagLayout());
			ivjRelayUsagePanel.setBounds(186, 248, 161, 103);

			java.awt.GridBagConstraints constraintsJCheckBoxRelay1 = new java.awt.GridBagConstraints();
			constraintsJCheckBoxRelay1.gridx = 1; constraintsJCheckBoxRelay1.gridy = 1;
			constraintsJCheckBoxRelay1.ipadx = 24;
			constraintsJCheckBoxRelay1.ipady = -4;
			constraintsJCheckBoxRelay1.insets = new java.awt.Insets(5, 23, 1, 20);
			getRelayUsagePanel().add(getJCheckBoxRelay1(), constraintsJCheckBoxRelay1);

			java.awt.GridBagConstraints constraintsJCheckBoxRelay2 = new java.awt.GridBagConstraints();
			constraintsJCheckBoxRelay2.gridx = 1; constraintsJCheckBoxRelay2.gridy = 2;
			constraintsJCheckBoxRelay2.ipadx = 24;
			constraintsJCheckBoxRelay2.ipady = -4;
			constraintsJCheckBoxRelay2.insets = new java.awt.Insets(2, 23, 0, 20);
			getRelayUsagePanel().add(getJCheckBoxRelay2(), constraintsJCheckBoxRelay2);

			java.awt.GridBagConstraints constraintsJCheckBoxRelay3 = new java.awt.GridBagConstraints();
			constraintsJCheckBoxRelay3.gridx = 1; constraintsJCheckBoxRelay3.gridy = 3;
			constraintsJCheckBoxRelay3.ipadx = 24;
			constraintsJCheckBoxRelay3.ipady = -4;
			constraintsJCheckBoxRelay3.insets = new java.awt.Insets(0, 23, 1, 20);
			getRelayUsagePanel().add(getJCheckBoxRelay3(), constraintsJCheckBoxRelay3);

			java.awt.GridBagConstraints constraintsJCheckBoxRelay4 = new java.awt.GridBagConstraints();
			constraintsJCheckBoxRelay4.gridx = 1; constraintsJCheckBoxRelay4.gridy = 4;
			constraintsJCheckBoxRelay4.ipadx = 24;
			constraintsJCheckBoxRelay4.ipady = -4;
			constraintsJCheckBoxRelay4.insets = new java.awt.Insets(2, 23, 12, 20);
			getRelayUsagePanel().add(getJCheckBoxRelay4(), constraintsJCheckBoxRelay4);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRelayUsagePanel;
}
/**
 * Return the SubAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getSubAddressLabel() {
	if (ivjSubAddressLabel == null) {
		try {
			ivjSubAddressLabel = new javax.swing.JLabel();
			ivjSubAddressLabel.setName("SubAddressLabel");
			ivjSubAddressLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjSubAddressLabel.setText("Substation Address:");
			ivjSubAddressLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjSubAddressLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjSubAddressLabel.setEnabled(true);
			ivjSubAddressLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSubAddressLabel;
}
/**
 * Return the UtilityAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getUtilityAddressLabel() {
	if (ivjUtilityAddressLabel == null) {
		try {
			ivjUtilityAddressLabel = new javax.swing.JLabel();
			ivjUtilityAddressLabel.setName("UtilityAddressLabel");
			ivjUtilityAddressLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjUtilityAddressLabel.setText("Utility Address:");
			ivjUtilityAddressLabel.setVerticalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjUtilityAddressLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjUtilityAddressLabel.setVerticalAlignment(javax.swing.SwingConstants.CENTER);
			ivjUtilityAddressLabel.setEnabled(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjUtilityAddressLabel;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param o java.lang.Object
 */
public Object getValue(Object o) {
	return null;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getJCheckBoxRelay1().addActionListener(ivjEventHandler);
	getJCheckBoxRelay2().addActionListener(ivjEventHandler);
	getJCheckBoxRelay3().addActionListener(ivjEventHandler);
	getJCheckBoxRelay4().addActionListener(ivjEventHandler);
	getJCheckBoxDivisionUsage().addActionListener(ivjEventHandler);
	getJCheckBoxRateUsage().addActionListener(ivjEventHandler);
	getJCheckBoxGroupUsage().addActionListener(ivjEventHandler);
	getJCheckBoxSubUsage().addActionListener(ivjEventHandler);
	getJCheckBoxSerial().addActionListener(ivjEventHandler);
	getJTextFieldIndividualAddress().addCaretListener(ivjEventHandler);
	getJTextFieldRateFamily().addCaretListener(ivjEventHandler);
	getJTextFieldRateMember().addActionListener(ivjEventHandler);
	getJTextFieldSubAddress().addActionListener(ivjEventHandler);
	getJTextDivisionAddress().addCaretListener(ivjEventHandler);
	getJTextFieldGroupAddress().addCaretListener(ivjEventHandler);
	getJTextFieldUtilityAddress().addCaretListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("SA305EditorPanel");
		setLayout(null);
		setSize(350, 360);
		add(getAddressPanel(), getAddressPanel().getName());
		add(getAddressUsagePanel(), getAddressUsagePanel().getName());
		add(getRelayUsagePanel(), getRelayUsagePanel().getName());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		SA305EditorPanel aSA305EditorPanel;
		aSA305EditorPanel = new SA305EditorPanel();
		frame.setContentPane(aSA305EditorPanel);
		frame.setSize(aSA305EditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Insert the method's description here.
 * Creation date: (2/24/2004 3:56:49 PM)
 * @param newIvjJTextFieldSubAddress javax.swing.JTextField
 */
public void setJTextFieldSubAddress(javax.swing.JTextField newIvjJTextFieldSubAddress) {
	ivjJTextFieldSubAddress = newIvjJTextFieldSubAddress;
}
/**
 * This method was created in VisualAge.
 * @param o java.lang.Object
 */
public void setValue(Object o) {}
}
