package com.cannontech.dbeditor.wizard.device.lmgroup;

/**
 * Insert the type's description here.
 * Creation date: (2/23/2004 5:33:06 PM)
 * @author: 
 */
public class SA305EditorPanel extends com.cannontech.common.gui.util.DataInputPanel {
	private javax.swing.JLabel ivjDivisionAddressLabel = null;
	private javax.swing.JLabel ivjGroupAddressLabel = null;
	private javax.swing.JCheckBox ivjJCheckBoxSerial = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private javax.swing.JTextField ivjJTextDivisionAddress = null;
	private javax.swing.JTextField ivjJTextField1 = null;
	private javax.swing.JTextField ivjJTextFieldIndividualAddress = null;
	private javax.swing.JTextField ivjJTextFieldRateFamily = null;
	private javax.swing.JTextField ivjJTextFieldRateMember = null;
	private javax.swing.JTextField ivjJTextFieldSubAddress = null;
	private javax.swing.JTextField ivjJTextFieldUtilityAddress = null;
	private javax.swing.JTextField ivjJTextSubAddress = null;
	private javax.swing.JLabel ivjRateFamilyLabel = null;
	private javax.swing.JLabel ivjRateHierachyLabel = null;
	private javax.swing.JLabel ivjRateMemberLabel = null;
	private javax.swing.JLabel ivjSubAddressLabel = null;
	private javax.swing.JLabel ivjUtilityAddressLabel = null;
	private javax.swing.JPanel ivjAddressPanel = null;
	private javax.swing.JPanel ivjAddressUsagePanel = null;
	private javax.swing.JCheckBox ivjJCheckBoxDivisionUsage = null;
	private javax.swing.JCheckBox ivjJCheckBoxGroupUsage = null;
	private javax.swing.JCheckBox ivjJCheckBoxRateUsage = null;
	private javax.swing.JCheckBox ivjJCheckBoxRelay1 = null;
	private javax.swing.JCheckBox ivjJCheckBoxRelay2 = null;
	private javax.swing.JCheckBox ivjJCheckBoxRelay3 = null;
	private javax.swing.JCheckBox ivjJCheckBoxRelay4 = null;
	private javax.swing.JCheckBox ivjJCheckBoxSubUsage = null;
	private javax.swing.JCheckBox ivjJCheckBoxUtilityUsage = null;
	private javax.swing.JPanel ivjRelayUsagePanel = null;

class IvjEventHandler implements java.awt.event.ActionListener, javax.swing.event.CaretListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxRelay1()) 
				connEtoC1(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxRelay2()) 
				connEtoC2(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxRelay3()) 
				connEtoC3(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxRelay4()) 
				connEtoC4(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxDivisionUsage()) 
				connEtoC5(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxRateUsage()) 
				connEtoC6(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxGroupUsage()) 
				connEtoC7(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxSubUsage()) 
				connEtoC8(e);
			if (e.getSource() == SA305EditorPanel.this.getJCheckBoxSerial()) 
				connEtoC9();
			if (e.getSource() == SA305EditorPanel.this.getJTextFieldRateMember()) 
				connEtoC12(e);
			if (e.getSource() == SA305EditorPanel.this.getJTextSubAddress()) 
				connEtoC13(e);
		};
		public void caretUpdate(javax.swing.event.CaretEvent e) {
			if (e.getSource() == SA305EditorPanel.this.getJTextFieldIndividualAddress()) 
				connEtoC10(e);
			if (e.getSource() == SA305EditorPanel.this.getJTextFieldRateFamily()) 
				connEtoC11(e);
			if (e.getSource() == SA305EditorPanel.this.getJTextDivisionAddress()) 
				connEtoC14(e);
			if (e.getSource() == SA305EditorPanel.this.getJTextFieldSubAddress()) 
				connEtoC15(e);
			if (e.getSource() == SA305EditorPanel.this.getJTextFieldUtilityAddress()) 
				connEtoC16(e);
		};
	};
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
/**
 * SA305EditorPanel constructor comment.
 */
public SA305EditorPanel() {
	super();
	initialize();
}
/**
 * connEtoC1:  (JCheckBoxRelay1.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC10:  (JTextFieldIndividualAddress.caret.caretUpdate(javax.swing.event.CaretEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC11:  (JTextFieldRateFamily.caret.caretUpdate(javax.swing.event.CaretEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC11(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC12:  (JTextFieldRateMember.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC12(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC13:  (JTextSubAddress.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC13(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC14:  (JTextDivisionAddress.caret.caretUpdate(javax.swing.event.CaretEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC14(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC15:  (JTextFieldSubAddress.caret.caretUpdate(javax.swing.event.CaretEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC15(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC16:  (JTextFieldUtilityAddress.caret.caretUpdate(javax.swing.event.CaretEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC16(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (JCheckBoxRelay2.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (JCheckBoxRelay3.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JCheckBoxRelay4.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (JCheckBoxDivisionUsage.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC6:  (JCheckBoxRateUsage.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC7:  (JCheckBoxGroupUsage.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC8:  (JCheckBoxSubUsage.action.actionPerformed(java.awt.event.ActionEvent) --> SA305EditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC9:  (JCheckBoxSerial.action. --> SA305EditorPanel.fireInputUpdate()V)
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC9() {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the JPanelAddress property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getAddressPanel() {
	if (ivjAddressPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder.setTitle("Addressing");
			ivjAddressPanel = new javax.swing.JPanel();
			ivjAddressPanel.setName("AddressPanel");
			ivjAddressPanel.setPreferredSize(new java.awt.Dimension(338, 237));
			ivjAddressPanel.setBorder(ivjLocalBorder);
			ivjAddressPanel.setLayout(new java.awt.GridBagLayout());
			ivjAddressPanel.setBounds(5, 4, 341, 241);

			java.awt.GridBagConstraints constraintsJTextFieldUtilityAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldUtilityAddress.gridx = 1; constraintsJTextFieldUtilityAddress.gridy = 0;
			constraintsJTextFieldUtilityAddress.gridwidth = 2;
			constraintsJTextFieldUtilityAddress.weightx = 1.0;
			constraintsJTextFieldUtilityAddress.ipadx = 30;
			constraintsJTextFieldUtilityAddress.ipady = -1;
			constraintsJTextFieldUtilityAddress.insets = new java.awt.Insets(15, 1, 2, 162);
			getAddressPanel().add(getJTextFieldUtilityAddress(), constraintsJTextFieldUtilityAddress);

			java.awt.GridBagConstraints constraintsUtilityAddressLabel = new java.awt.GridBagConstraints();
			constraintsUtilityAddressLabel.gridx = 0; constraintsUtilityAddressLabel.gridy = 0;
			constraintsUtilityAddressLabel.ipadx = 32;
			constraintsUtilityAddressLabel.ipady = 4;
			constraintsUtilityAddressLabel.insets = new java.awt.Insets(17, 37, 2, 1);
			getAddressPanel().add(getUtilityAddressLabel(), constraintsUtilityAddressLabel);

			java.awt.GridBagConstraints constraintsGroupAddressLabel = new java.awt.GridBagConstraints();
			constraintsGroupAddressLabel.gridx = 0; constraintsGroupAddressLabel.gridy = 1;
			constraintsGroupAddressLabel.ipadx = 29;
			constraintsGroupAddressLabel.ipady = 4;
			constraintsGroupAddressLabel.insets = new java.awt.Insets(4, 37, 3, 1);
			getAddressPanel().add(getGroupAddressLabel(), constraintsGroupAddressLabel);

			java.awt.GridBagConstraints constraintsJTextFieldSubAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldSubAddress.gridx = 1; constraintsJTextFieldSubAddress.gridy = 1;
			constraintsJTextFieldSubAddress.gridwidth = 2;
			constraintsJTextFieldSubAddress.weightx = 1.0;
			constraintsJTextFieldSubAddress.ipadx = 30;
			constraintsJTextFieldSubAddress.ipady = -1;
			constraintsJTextFieldSubAddress.insets = new java.awt.Insets(3, 1, 2, 162);
			getAddressPanel().add(getJTextFieldSubAddress(), constraintsJTextFieldSubAddress);

			java.awt.GridBagConstraints constraintsDivisionAddressLabel = new java.awt.GridBagConstraints();
			constraintsDivisionAddressLabel.gridx = 0; constraintsDivisionAddressLabel.gridy = 2;
			constraintsDivisionAddressLabel.ipadx = 18;
			constraintsDivisionAddressLabel.ipady = 4;
			constraintsDivisionAddressLabel.insets = new java.awt.Insets(4, 37, 3, 1);
			getAddressPanel().add(getDivisionAddressLabel(), constraintsDivisionAddressLabel);

			java.awt.GridBagConstraints constraintsJTextDivisionAddress = new java.awt.GridBagConstraints();
			constraintsJTextDivisionAddress.gridx = 1; constraintsJTextDivisionAddress.gridy = 2;
			constraintsJTextDivisionAddress.gridwidth = 2;
			constraintsJTextDivisionAddress.weightx = 1.0;
			constraintsJTextDivisionAddress.ipadx = 30;
			constraintsJTextDivisionAddress.ipady = -1;
			constraintsJTextDivisionAddress.insets = new java.awt.Insets(3, 1, 2, 162);
			getAddressPanel().add(getJTextDivisionAddress(), constraintsJTextDivisionAddress);

			java.awt.GridBagConstraints constraintsSubAddressLabel = new java.awt.GridBagConstraints();
			constraintsSubAddressLabel.gridx = 0; constraintsSubAddressLabel.gridy = 3;
			constraintsSubAddressLabel.ipadx = 7;
			constraintsSubAddressLabel.ipady = 4;
			constraintsSubAddressLabel.insets = new java.awt.Insets(3, 37, 4, 1);
			getAddressPanel().add(getSubAddressLabel(), constraintsSubAddressLabel);

			java.awt.GridBagConstraints constraintsJTextSubAddress = new java.awt.GridBagConstraints();
			constraintsJTextSubAddress.gridx = 1; constraintsJTextSubAddress.gridy = 3;
			constraintsJTextSubAddress.gridwidth = 2;
			constraintsJTextSubAddress.weightx = 1.0;
			constraintsJTextSubAddress.ipadx = 30;
			constraintsJTextSubAddress.ipady = -1;
			constraintsJTextSubAddress.insets = new java.awt.Insets(3, 1, 2, 162);
			getAddressPanel().add(getJTextSubAddress(), constraintsJTextSubAddress);

			java.awt.GridBagConstraints constraintsJTextFieldIndividualAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldIndividualAddress.gridx = 2; constraintsJTextFieldIndividualAddress.gridy = 5;
			constraintsJTextFieldIndividualAddress.weightx = 1.0;
			constraintsJTextFieldIndividualAddress.ipadx = 126;
			constraintsJTextFieldIndividualAddress.ipady = -1;
			constraintsJTextFieldIndividualAddress.insets = new java.awt.Insets(5, 4, 18, 53);
			getAddressPanel().add(getJTextFieldIndividualAddress(), constraintsJTextFieldIndividualAddress);

			java.awt.GridBagConstraints constraintsJCheckBoxSerial = new java.awt.GridBagConstraints();
			constraintsJCheckBoxSerial.gridx = 0; constraintsJCheckBoxSerial.gridy = 5;
			constraintsJCheckBoxSerial.gridwidth = 2;
			constraintsJCheckBoxSerial.ipady = -4;
			constraintsJCheckBoxSerial.insets = new java.awt.Insets(5, 30, 18, 3);
			getAddressPanel().add(getJCheckBoxSerial(), constraintsJCheckBoxSerial);

			java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
			constraintsJPanel1.gridx = 0; constraintsJPanel1.gridy = 4;
			constraintsJPanel1.gridwidth = 3;
			constraintsJPanel1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJPanel1.weightx = 1.0;
			constraintsJPanel1.weighty = 1.0;
			constraintsJPanel1.ipadx = -19;
			constraintsJPanel1.insets = new java.awt.Insets(3, 30, 4, 110);
			getAddressPanel().add(getJPanel1(), constraintsJPanel1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAddressPanel;
}
/**
 * Return the AddressUsagePanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getAddressUsagePanel() {
	if (ivjAddressUsagePanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder2;
			ivjLocalBorder2 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder2.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder2.setTitle("Address Usage");
			ivjAddressUsagePanel = new javax.swing.JPanel();
			ivjAddressUsagePanel.setName("AddressUsagePanel");
			ivjAddressUsagePanel.setBorder(ivjLocalBorder2);
			ivjAddressUsagePanel.setLayout(new java.awt.GridBagLayout());
			ivjAddressUsagePanel.setBounds(8, 248, 175, 104);

			java.awt.GridBagConstraints constraintsJCheckBoxRateUsage = new java.awt.GridBagConstraints();
			constraintsJCheckBoxRateUsage.gridx = 2; constraintsJCheckBoxRateUsage.gridy = 2;
			constraintsJCheckBoxRateUsage.ipadx = 35;
			constraintsJCheckBoxRateUsage.ipady = -4;
			constraintsJCheckBoxRateUsage.insets = new java.awt.Insets(1, 1, 1, 0);
			getAddressUsagePanel().add(getJCheckBoxRateUsage(), constraintsJCheckBoxRateUsage);

			java.awt.GridBagConstraints constraintsJCheckBoxGroupUsage = new java.awt.GridBagConstraints();
			constraintsJCheckBoxGroupUsage.gridx = 1; constraintsJCheckBoxGroupUsage.gridy = 1;
			constraintsJCheckBoxGroupUsage.ipadx = 34;
			constraintsJCheckBoxGroupUsage.ipady = -4;
			constraintsJCheckBoxGroupUsage.insets = new java.awt.Insets(19, 8, 1, 1);
			getAddressUsagePanel().add(getJCheckBoxGroupUsage(), constraintsJCheckBoxGroupUsage);

			java.awt.GridBagConstraints constraintsJCheckBoxSubUsage = new java.awt.GridBagConstraints();
			constraintsJCheckBoxSubUsage.gridx = 1; constraintsJCheckBoxSubUsage.gridy = 2;
			constraintsJCheckBoxSubUsage.ipadx = 34;
			constraintsJCheckBoxSubUsage.ipady = -4;
			constraintsJCheckBoxSubUsage.insets = new java.awt.Insets(1, 8, 1, 1);
			getAddressUsagePanel().add(getJCheckBoxSubUsage(), constraintsJCheckBoxSubUsage);

			java.awt.GridBagConstraints constraintsJCheckBoxDivisionUsage = new java.awt.GridBagConstraints();
			constraintsJCheckBoxDivisionUsage.gridx = 2; constraintsJCheckBoxDivisionUsage.gridy = 1;
			constraintsJCheckBoxDivisionUsage.ipadx = 35;
			constraintsJCheckBoxDivisionUsage.ipady = -4;
			constraintsJCheckBoxDivisionUsage.insets = new java.awt.Insets(19, 1, 1, 0);
			getAddressUsagePanel().add(getJCheckBoxDivisionUsage(), constraintsJCheckBoxDivisionUsage);

			java.awt.GridBagConstraints constraintsJCheckBoxUtilityUsage = new java.awt.GridBagConstraints();
			constraintsJCheckBoxUtilityUsage.gridx = 1; constraintsJCheckBoxUtilityUsage.gridy = 3;
			constraintsJCheckBoxUtilityUsage.gridwidth = 2;
			constraintsJCheckBoxUtilityUsage.ipadx = 62;
			constraintsJCheckBoxUtilityUsage.ipady = -4;
			constraintsJCheckBoxUtilityUsage.insets = new java.awt.Insets(1, 8, 27, 62);
			getAddressUsagePanel().add(getJCheckBoxUtilityUsage(), constraintsJCheckBoxUtilityUsage);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAddressUsagePanel;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G1DFBD8B0GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155FD8DDCD4D55AB8951595DBD618D836CBC9C5C5C59B6D52E6ADED743E543A1B6D329B3B327B32EF36396FEB3B3459AEED6EFA79B01181C5C5C5C345C481A584C4A5D2C0C58444A4A585C4E5E0AEB0B24C8C4320787DFF4EB977B9774E1DBB43C0FF76B5FF3F473967B94F777938671CFB4EC148D867BFBFBEA1C39062678B523F1D710290B0D5902E8C3C78AF44A5E7776B84453F75GCB0495871260B7
	9372A2E7746B52050274E4C897C03A6065FE5DCAF8DEA694274FF9909EDC681986F93FCBFB355C3D1E4FD7211E85B4DD30A995FE978194812E8940BF1B682F5E14A96107A03DC8FAA6901FA0886D6B894D446ECC85FE26C4D78AF935GC91F921A531B32247CC040911AB0780DDC4FE8E7436FC2EA5D0D65E592DD5B1D01421C57BEC9C8A33A9472919ABEE53CD669B7DB18C28311A87CEEEFB57C6EEA6C6D2E68347495F66A4DE60B59AEF676949ABAC40351EE31951EB3DE505B8C0586712C31D3ACB475F55BAC
	0356727223FB3695ED5FCFC99A75E65194C3EDFF21BB194A855BA1ED5AC0F05BFBC83CF260F997C05386347F0D34DD12FD3E3D01C24C14C5AE6D8F5E406C0E5CA05B9F11B1B745BB07489FC74B0370E5C03A810059B2FD935A92110336243592DAE1E33FAE9320E8A362A3A93E96526DGC39B51465D39E8E373459F8AF19D95890BDD58B8FEA333ADF423ECE366F1FD62AADAE7DED9CD4AFD8E513B896AA7C0A30095E0BC40A7342EFA2D5A8C3FFBBA6C7BACFDFD96739E2BF52F49E0BBE4B108A6F8AEAF079C89
	F7C46C34588C02406A63CF3A8BB46CC1885C64D89789B05F0E8BD8FF020EBCA9586D258973B5FC8B79551A0429120C691BE45FF6651238EDB412384582BEDEEAAF8CDFC171DE39B21E15559734AE1074B4480B4A43B8B7AFC2DB9A129E94520B2B9296E8586277136D89B373198DF373E5DBD80C3F17C5E21C3739DFD78D5086E087708588590CB1FEED553661E2DC87755FE6561B0E8EF6D875B67B5EC12349A05A24D85F3E49DD2C350071CD9EB19F0BCB60B6E599C5BFD329991768401C04691BD9BCE6ED1663
	42F47F4A256E64AD4EF5E391AF436BE81B485A424AB01163EF237882851E156DB20A27F410678F406843CF90FCD2013A0E7C0E629B8B54F564372DD8C7A6C3DE60E77DBAD63E3B5712FEB12430DFB79DE096003035DF178D308B20F1AB16717255DBBDECC70D0A72E53CBFDF3D82FE45A13BCDDFE79E306B4D1D62B13D4D286FB0098302C47366EA92578E873EE85A3EBBC1478151AC5A74F623458C5275FDA2D42681C673766AA50446A6525CA6E31F888A7A2C824AFDF775B278B569876CDFDB8DFA3BA8D3307C
	8FD613BAF1D6FF8CA402GF8765FCA62759B5A67DA6159E7AB466A4CBA021B896939BCAE56CF16426FC1285C22293C3C5A58C94C505B4EE39D5DE22C025F74A2108310DC5C2F738690CA6097A0E99B7C82882590EB00C800266D708B5038834A8420F1A73667BFB7E33D2DCEFBC2A878D505E63D25FD7ACE693D36D3DDEF2B29BD99E57D3AD200A6GBB00AFC088C0A4409C000C4FA19F2089408E608B90829089B067F3FCE76F69A14A095D2E5A9B710D78CBFCEA14ECA1FEEB5192DF397D5BDD4B749484B7F651
	7C92D6A60D8A3D24FC7019148D374705ACD22EAC965EB4964B5D68A375141463AA299D92DC1A8B5AF50A67CF3EE19C9651FA6ABE1F8C5048FBEA0D8237C0713CD8713C52050CC44937A5C2D4B669EBB24AE1ACG50D80EED6571CF32855A076C558F0858EB9C36C103978DF24BE13401D9C427F8D6B45B2BC52BE8B640430054E61F4AA2F1147A13AE0B00ED7DD90AA76F17FD506087B87E792CA58C8FB2143D93663FCC7375F63B4D58B1E8970F0AF63B515CAD737F145AB260706A9A10FC7D6DFA62EB8F786885
	B01E7B5A3406449C7B05860B25F7505AC4FABC29FF19CD47D181C0BF359C6B504D2DE4CC9C4353F752341C3F2A3559CD99923EEFD2C7180E9237BA923FE1BDE4BADEBBD1A530FEABD12AF7843FD02A07E9D2FDDBA2555B65D21DDBA5158729236B382C37282C3960FB4E97B0CE853083CC868887188D10318B5EE5G86G9F009000E800245DB0E684E85A0D710DE9A5C6FDD33B3EE9DB7D3F86960B8DA7C8A03EC99C56FFC3BB2E85E0ED7940DA57FD5117EB357B2226355AFDD16BDA77FDCD47DA2D3E06659957
	1232301CB3AB7AAE73DAB27E6834184DA26DC0B90B406622FFEEA2FE984DC67BF12321DB349FB5DE90215F59CD7A20D8BA4639844F63F76398635C869CE364DCF8D488BB3DCAF37E6277D0D9422C5D521CE137BC46E0B6D95611BED1B409FD9028FD16C1331D61876978C9428FA4D25C21FDE6421BD73F2FC76C6C5DEB99BAA21A74670B8B74541BC27653A85A3AAC36BE5110F7C6FFD6DF28BFE7AF2425D13807E66FA74F79591FFDD6112D1EC097F499EDE21D59BAA88D7F72720F659731FA3DCC38A1DECBF749
	D86AAEC65D3F3A2225FB5BD86AAEC15D73DA35F4170E256EED283B6F6020236EEA63D9A399F9FFBD206F96475204D281ED484C6FD7798FA4E32EFFBB576F355666287FGD97D99F383F6207E5CC42B23FE18150F39761DCC7741CB7BD43AC518891AD03347624AA4DF722A4FB1F9CD50875798C513214EEC00AAE598541B76988CB6F1E0202093C6FE76C27A3FA400B8B4D4B8F08E3ADE4927FDA4F704AEFDAE59D0595C2F3201D4289AFD1F51F4FE4C149797717A7476E53B067EC3E2DF07E89B534E2C1869BF1E
	EF1175C3DD42380F256A92497738F2C56C31AF996B02AF5E46E35FF2D5DD760AG0C19FE39AF8BDBB528527F355DE8B25A4F0F398D5B851C6F25ED20EBDA95B05F83282D40B950FB6BC8BE4E0124095EBE0B494406AA1097D4C146A15E468C4558223D022D7FAF6279414364C78F131FFC46FDFE69B0796D43647B8C139FBACC7E4CE17253FB5D676F9AA63FE718FC5FE1724306491FBDCCFE2649D5BE2BA73F4FCE075F8131FFD0B4F70AE412FCD0BC0F6BFB59CBD5F9477426C1F95D705DECB2A7B1A966578C9F
	33DEFB8C7A4775E4CE5D4B657F4F7A0F85327E47E432B1F3301E48345A0CFDFA5BF932E0A0FDE7CA4CD5FEE71A83FE10EFD22515D0678198EF60CA620B3A8145D5927E8DED788D2A9D52C3GFE15CCC6D4A50B8723FB0753D5D7756B5A2ADC515DF79269AE810D2FCB3A432710AE84E8263924CBBC0DF43301A6E90FAB3A9FF23A9C205965122E379D695A00466E12EE1D9E69FC01A648A55DAFB95DB42019891034D70B4E278369B2A13F8820D1136EF0A75279C0FE00CB3AC4835205C3FEB440DCCD3A7F64F43B
	76C19D5F670A6E2208F4F620715967CA6F56AE248B821AF017F4EFF13A19C42786DDD6B521DB50035F6E36F25CDA0A7B8BCC706FCF426FA30752155FC08D83451AF3C0DA0F2B19FCFB357A3B515E9CA2579770815578BEB0FC2ADC935BB3B0E069B452E5FB294DAE5B201C9FB2DC6606947805774F009D86F66290367B359B082DE4DDDFC2CBED7771AD3B85676F942CA96212633EF374DD57E459E7B1083550F56C635367E3C6110CA7D99CAE57A83F25CEDD3CA9C167A28E21127FD10AB8C49F53A7B21BA61513
	7102567760CEEAE4E1772031F090DE5B656555FA3B1E3EE8E937A130EF2EFD394912FF197B715B6A244D74BB8F24FBG3CG58F71E0636D409568FF05381D89F7CCE12328FCE2E01F68150844046914F344174D09879088D639E1E3F141513EA1C0031FCF0D995365DA79F94F6DDDD20794DF75C62A589BDB5AC0663EB64D8864CB91C988A40FCCCBF09BEC683CD468174513FCD4B470683981BF04E578EB8BF4EF7C213EFBA679BBA05FCB38117D50BFCF1AD1AB12DC53E0253485783B8FF4E67F7CC4D9785F9F3
	B9DF8C67CB2F03F7CB9D725DFBD20B4F2B8E79FC5B114F97F053B8DFD40A96DFD2BD72556A11AF93F00D7548F74A2045B70E734D65FC138197497996AFD473259E04589C443A565931C02EEB527749E7BBD0D6B550DDBA0832BA521432C28EB2D951DCD6D6A7694BC6B84815F48EF5224ED810175700BABF2CD46BEC07BC6F86DE2E865E46GB71D732595EB71A59FC2DB6FB60C360DB13D31DCEF9648ECBA04FABFCF550A114FA134B7C0C4BEFF40C5F13E27D23478523FC43E66AE644B81DC5B17489721D9A63E
	1CAF359B798281974379CAACDAFC1907F16D71F809723D9396335165FB2760B06B9B2A8E2B5FBB1B68F715B640DB8F63FBE7528632660A6F1DA350536B4D5DB0D2646B3BB924FCE0CCA8258F66903DF4CCA8609C27B317586E8DB27D81C281268344F29D3F4899F68F447EA1B7FBA0EC396A7D84690D72771C9C45B3827B5E1F3605443A2C11FD6FDF40712BA83ED101E7E573BD7A5EA0699E481B56085FBE0E34297597FD652833C115E6FC6DCEFC052A34D545475E979547C85C68BBD151D44B4B793A10B4667E
	67CE6518FB5CD76CFBD9907C06FD05FB12564EA7E5CE3ECBC4FD055F6A1F4BA3E322DDC77AF54DGD6G9F00E000E9G31C7305C56EF549AAFB8161B2B41027C9D1145E245495145B04709CF9D4374230EFC4C6FB75B506F3C23D80E2F0D520628E1ED70513461AEEEC3G37614A2951596063442736A139C94B062D2D4486B21E48EEC29BCACE0F4E06AAA7BE358D5EAA9B24BD088DDA75F4B25086B7E1BDFD7D985A99416D7C63A86D1CB32C1D85DFEB456A0D134486B28E2F7E9AED3837FDF4B684BA7129ED88
	5434E1318E639046ED78D2BFBA9B5A1C7854B6649C5332E10281ED58F58CEDC868981D8D69CEFCEA9B7C0FE95519A3DB346ACCA850CEBB06F526E6A131134CBBE6F2BB1F9F251D2F8EEBE756F12D3EFAA36BCB1D7BEA3E6648EC1D1406FDC169F15E97F40E32AFF062D35B6AF7DCAB26DECEB1A5E30CE0208DBF0EB1AD2ACA1674C4F3BBCB8C236CAF1C7854F6E6B4EB553F6AE234212099ED785BA8EDC89207334120E903B51558C046DE17388D0FB949724C0650E1ED885134610FA9E843B4EE43292E5159E0F2
	62D35B105422E5433CB434A12B85EDD86A347F57B39B321D7854B6B4E95AE034E0BBB73560986643FC3AC78852A1ADB8DE39321134AF9C4BB6DA0CE6726D0765ED59C456B2ADB6E337510C38A20A6B3458682681066B4DF53D1F41162B3D1FE1A8D7FBBF4315DC77FB2BEE4AF5355F016D033A052EED0403FFD1G8C57C57D1E8B690CD6AC0FE5EC1C8B69C6GAB472F23F85246495C144C3F997E214D4AFDCC04CF99F32BAA2D0646E172190E979DF42877C6ADF043CFE07EB079EB284CD7D7AC26719D98908768
	C0142C90C9F96F58178B9AFBBF3E54770982FE9F3A25ED21C4335FEE59D7ACE01F7EFEBE69A7B57AF44539036DE558C77934623AD3C19209F7B82423816670F258B0DF3DEFAC75C43FAE7B04F49663046BF8562A725AA0EDD56124FDFAF92E6B6DEBF95A75F6FA9EE9AF8316C1DB27282E1BEF66E572BCF9D4DFE7977BC888256F88145F2E37F50BCEF57B9D4A4F72DC714766392A7F527E17134A72A961F5AB3ACD9DCFEF08091F9417A0B7718CD365C5C2FA168A47F4471FD26A5E46F5CFF452BD9778535B180C
	1CB6573A4BD4F98D10EEEF53527D2C036ED22E3B54E97F219D7847C9B2A6CB3F419AB6042BF0D1101E2D295BF8DA291BFC471446678DD85F0513D85FFFC757D34BA05D8850F3926BFB64B1351DDE1067FB12698BBC299D2329001F2E4A1B89693813DAF62EE9D75A3903476857A71D5A5AA9E8EB272436F64AD9F7AD605AG2C2ABCEFC87B8184A970CC779B8E3AF7F25D99BA356EB0600D1478E7E9682675877069279D73F2A0DDF6DA4B6F9B75CA5DE5DC773D86356E8660EF17E458CFEB6B9E8778492A3CE0C8
	07EB6A7E3CC3297BF3DEB7EE5D02E3042853D8B7724D24EE2437776B72G2A5A31EE9CDC289C83B4835E8460554E747942EFE03B166E3FF624A8F4138D9ECC5EF75354FECFEDF75D8615B09D68E6AAE86360B9D58FF5C52FAE6FE7BB9DF497235F21DBF01ED42AC73FB7D23F7DA09D8C9021C73F37D7A97D0E817C9C051E648EE71B2576E8F050DD02FE5795AB65E581FF11C2C635CBF91F098E7236213C41D407F281FE930017A44757253CBFB84AABC5F97F1B221497887CD38126CBF2E63A14B7214BC15EF6BE
	0EDF241497877C291DD0D61DD23B6EF4A52F2E5BC15E8E14E736A8655582FF9B0095409B40CFC39EFBE77DAB1F2C998E71F442E612BE4F75796712B125C9FF5EB288034F9C837DA64C3F0D87015CF000B800D4831B5332B14753674878364B266F03D760D12B5889AFEC42FBB99FF9CDC06F85608F908690E34035737B0BC91D13B63550B10A3407735C9299CFB73131AFE7E86B2DC7C85D259B9C9539ACBE65E58E7181DB5AC4B9A6D651B9BEECED551F0E013CC536363A10631F20F8FF851E2D3916D0BCC9CF05
	3C6CAE9C676E276B165E107663385BA9AE8852D3B96EFD0A0B00F48C47CD206BEEF3A01D540D38472F6038B913630A3EA0389EC8FBF15C3F5AD02FAF476DBD09FA83B9EE4AC9549B42F1CF16235E880E33F33D519CB71E6BAD68C15CF3DCEF95477D338D75B6F15CA92E371D639E64FA6D9C774EE554BB0E63AE6EC23DD19CF72C95754E6638FBA9CEB0423391F173DAD1EF9647BD3913600AA05D40F1AB4A5016E60E8B3A083618B86EFC995AB25548478D8D4ABAB79D70B30D0A7E59682A4EFDC53FDD261EE1F5
	CB477127A93EC001E7F56EADBAEEA16986488BBE03B67D0D2EC1E67442BB2B97F1654789EE97249BB86EBE0AEB06341563263550B812B4477D0146A78452619CB70347A20A632AE8AC72CCD076A644451DC4DB1AB8EEC28A5A5243F17FC8C1DB6C9C770A1E6046C1FAB247AD6EC07B02B96E018AEE1FACEF81370F63F696D07B7A7AF53B7A9067D500B6B7F25C8E9D5AEC60388BBA34F90863E66850E6EF0E6BAAC07B7CB86E5105E8DF90473D59027605F1DCE6B55A12EEC65CD4835A1243F102083614F11CDEC4
	DB2AB9EE5CDE3425D916A722ADA60EBBD60236F8F1DC78D534E53A996B759DDB30DE4F84DC9CC02AC52E4B5996D7757AF7F4ACD1EAE175F7A5473FC771A6851E556B2D94CF52811057EEC51BBAE89C337A213F69C7DC49FE022B02F4B347DD26B89324AFF1DC4FC15E0FF05C9D0B88AE8A52319C9716067212EC0853ADC23D199CF7870DED81242BB96E653D282319634EA493DCA02427F2DC8845CD0774CC9B467605AD4A71DF9C60D38760BDB260FE8CD88A7935AA1AB6C8DBD5B8966F7BE9DC3D87D83C53B8BE
	08628395F8D68EDBA81E2427C1DE199D6DEF2842F884F05C9DDBB1EE219C775B2D980FE99C57DE0C3C319C37E1850F79A0624CAB78FB0E63FCD211F79747D56FF7AE07BEDEA79AB9DD68FE14E76038849D4A8B6138E777B94B7B7DBE14974169722B797B1063BE61752460AC62A2B46CFB0F5BD74569F655203CA60E3B5142634CF17AB34E721E2138D0200960F4193D28A312630C3D28E356D97C0E7FDF39F887C459B928B767F09C577D69C6C1311F495851D7B8F8362FD05FE1AFA457DB1417FFB9E8B2B5C843
	C3E99E111B17AC498ABC0773082F73087C98C84781248F61BE0021CD386FAA68618705862FCA4DBBACE21AB6A5648D313A5CB0A46F83A8B82ECFE4BA2764234EF1109FB6C4F0EF64AB77A010B1629B89EC0D1665A7EED6661331E53E204C5F6E10CF6CFD41013F5BA1FF3E021F7976530D685B5C1F868B26E7BFF3F9BFC772F966D301745B7E4B55C26A630D092C3C3E226FD383648D1D676F21F8021B8C69E00E7BB0814BB572BC76A78FA711BD2AF1104E38GF3AA00068B18778C4DA3FBD35B24BD25E43FA84B
	ABCB42FE0850FBB27FC4481068634E4BFCC5AA99CC47D7DC4742914847D8E319AAE5BA4F175A68F83A4FAC76D94C464E218BA4CE839487B3922167824EB99E1ACF768A5B45A17B548B648E1BA3E479D4121172B199DB7569070CFD03FD74D09D13736947F4DCF9917A680BA8A7280D486932186D0C66A7F44CDB867955G3E97A96ECA359B5F92D5E0879E824B31FE43B3B16E43F97366B11D873E2076994DAA7BCE53F1F9B4504F82E038DCBA8EA3EB46991760DDC4FD9DA4CB11924FB41A1F83F9C5171067CDBA
	9EEF03F44FA5746136E1FD186F46873FCB328FCC47F35456G4087F33D7FCDE357CDFC6036BE31CD3675E6EA6BEC480B63BCBF253666DC867BAF232D7F3ABC1C2D8B5C585AFED9EDEBG1DF718GBFF49975DE257389A37161B2560527DB9D6B540CD259763C93F47C8534E11C7E151D24FFE01B454896953D59GE946DB34C3662D247D41EC600B63BE3EFCF1B89F973A71B16F0A5A4787290ED240D7DD417E65FF691A298952DE9CD7C27D8E00F4A847BDF6023F932FE0FFF21C6EE7942E42D886208A209D407B
	AA660BB4FF1734F71C6C8BA7FB5283F97E1F1C562915C064AD1264A38E6573F169D5577D1834A740E92DD5CD236EF3701C343ADFF2D5864B0445271C7B23F5F47E75AAC044D55E0F24B8561D23E4D9D61231C4275D9F05D3B9D1A0E3A61733290354A92BCD6C92EDB651400E84CB749F5039C73A974C013D10BE3442317FCA21752096721B3C302E7D55EDDDD336FBFA378D709160ED9F1E8F884A7EEBE201F67FE5243A8300BE588B5B59A69A3F3781223D30CFB8DBA6370DFCBA161B8DF9F15C27E8BAFF9C9049
	D9A45140685E5763F8A167BA14DDC96714E5102E66381F53B9259552172EC37F17A48F677FFCB77E87DD27767F4B82D237C4B3B952E2107C90697C116407F2DB1E223888C8C7F25CE96A6F6BA4G57E3BCA6FDAE47A3090E1553A1AF6BFA6439034A2905F493477D024E293CA06DF3BD7A796716113C2754FECE85B97B85E51F32070E15A3G9F49753ECD67352F9003EFC07B5FA8176D3F154ED353A1AF6B8664F91A4E2FEAA15D44F1EFD3BAAFC87B5C007677150C649D65E47F8DEA7B5F25F3618840C75E00FD
	5D43F44DDC70867B3C91371E2E1195C13A1A63B65031F98F24AFF15CF8BE8E777746FE6EADB319DB07C3FA96C0720D7D3ABC00DA009E00F1G81GE1G33G12EEC23E3FD3BEF29EA493F0E5B731B3A44DB731B3A7C3B731B3AA64FC8CB9CBC376AACB6B7866E078A57234E2B4CE2147D59C09DD44DED77949AEE4AB21D6C19360061E4404440359EE20363B3A6F062C8563FD952E6425896E6FB9996E3BBE81E57F3F448D9D29EB788EDEA6CC36B876333751766787F18E38897B2D2D3DE42DDFEFB2F61B49A919
	96EC93A7683CB19268E6F1DA5F7D0E6F0BB9DF10EA495A4155036E5A812EA5E2DBD037030C1B59FA005CDFBD3C081E533158C4F215A19924B03BDE24735EEC20AF38995B651F525056E60EAB25F45E109EFFB35ABFF4464157E614B91E361BB0200B3C995B75EF778E577F6A8439DDA70DF374A793527F045FF95C1F6B121D7BDF3FE47EFE9807B67E1462483417D0CAE354E46C274B46E13B7EAF5AA754C23A0D63365035D3AFC87BF21CDF99DFAB6138374A30BF1946F1F5E667393E4D0CFDC78C277B819D1F95
	5D827D45AD58C62618497716B6C88F81788204GC4824C61B45F27B42937C2395D4A4E4611F3EF8D70EC3A95E90A4D6DD2FC893FBA6611920E48EF131E67E8509198F201477636C4E8603A346605BA85AD36DDD7F7EB399B0F31729B24EBD8BE60275F2DD8BFC337E21D0DG9C7BEE755ED67CEEB587F04937C1BF84D08B50F39B725DC2573446C15A17639AD6202C705BD0560DABD0D6AC6012FC7AF5B9G55G869F64FB163E373DA1BD1E636E616DBE4C875B426B7BBD195BE05B1E6D635896046F746BF6CBED
	016958C2479329004F7C8E6ADDD00DFAEB3F03FA2B2ABDF93722DE7BF79C750EF352DBCD7B84DF407BF33D2BEBD06FF42E77E80DA7E39254BBD725B77DF6355E6F3335B540675D0E6D7C35B30EFD290D30C87565C0AF6F4FEEC71B3CFA0733A9DEE113776D2A713042A6D67F5FF6BA9FB29CB03E77C749D710B7D2BE36DE1C1BCF567482EEE76F07F80EAF2278E0851E2DB11E4843B546291017FD876EFD7C3A023487EFC87B830482CC870885C89D0FFBA1EF5ECC6E40F0FBF62349E2ED904F0AA64556C4E96FFA
	7E686E8EFDE9812E5F057C68B1A17426F763DD1D894D9E4F7A34AA69B76E0D55944F7C1BD5C97C33C21E8FC0B0C084C0B4409C6E5F6B1B8B18FF64786A9E3BDD5F59C3CF4622F364302A0CA69F54D9DD6DA9A35F67BBACB63AD90DFD1F3FDA067DCB721D90E700B6G6B1DEC4FA4633BB35E793BFEE0BC720D83DAFF008800E8090F75DD69093C9F84FC72DD50EEGEA81FA6EC259970E1131176A16A7E95C13BE681C0777FBACCBF64E5BA6652DAFF14EAB456F7E7349EFEEF12ED4EE7E6714E74B4AD23638BCDB
	B66EAEE92F1974BBAD6993C9466BA714B2526FDD1E906FC2C624449BF3173CAE4D7A0D343DC412E4E35BDA78B50B673279613FEAA394A53942A4EFE7D1C1F6C9C9BE2E75A49D10793EF765D3B5DF8D8C9A73BEB59875A6CB7727855940DBDC144F6EE1A3E3E1BAFE107EB1F93935822F53FFC845BA1D757894217A4DF763B73870AB63EE660F61EE592F5815F3D324B9DA1DEC6310C73EB15A0A13342CCAF2A55BBEEC1065CCA977BCC6DF9F1679FABC0E91639DEA14E3F35FD7321C0A917871E19B75E39B7A7162
	91D94E449178317AEB19EF46651179317B186C077D38C2CE0B67FE5C53CA7DA8C5BFA6B6AB4AE32767FEFCF5C266733FB8B2BFBEEC137D48BAA54B099D019F89071C7B41D507302F1AFCB76B87C360B762EE36FFDC5ACF556A5C8F7636A2DF4C5D2C9F0C035FD4DFE90D117603AF1DC01A9C401781B4838C817879226C29BB16BA74D9F873985A3CF06DB2E53EFCB31814DFBB30C4190FB7F77178648E2DD066BB5C2E06B48F94AFD752C89786219CF6D67717CEE75BC9FCC2399FBB0E53BAE240BAD2F9DAAE2317
	5C155176ED8EF52423DD667B353B3A2562FB31C366FB5D633A653ABF7CC3277C1CA44A32FF6011AF0CF677A99A939B46A437CB1673A33D67F2D2BA483B29CBEF9A9039CD755D322CFBAABC0F5353C6196F4F8BC65686A34F483C178A687857B6A8323C3F774AF94F27F86E5BD9DAFFF23BB1C62B7BE4B9A78ABC77EB2FCD667B6EC24F797287E53E1F360CAC9E8DE765BAE2B9A74B59E3705C7F39866AFF877AFF5710AC6772DE4F7DF8763C4C773468B95F12CBB2DFFD49487C2F3CAC7B5FF1C516E3BD66397FAF
	ECF17D6D6157F40DE49A74B1D13C1FA93B625C079F3E027DEC52845607E741EF5184F6560F71151FF16E433FBA03FC3593D89F5E8E3F76894ABE7C11DE2471A1B4GE1GB1G42BDA83B123E8BDC5D3846E86E6BA57D0CE3CE033EC3B4C9F13870856947E9776E104B4FE614E6B86810EF15E3797D9BC83E6A42BBAA02657FBD0D732B08D87E0443E46CACCBD55AB66364E2641589243C8F32BFF1304B6936C5096E0FDFB90C4D59AD0FD2DE69F2B287E3A70D0A25774D25DA657BA67B9ED6165577605D9199EB34
	721BF9FEED0AD63E09671F50E965FB5D035F97AEFEA25767CD7B57EB370BBD4489E89645D23350FC1FB099367D59704B79E106EA351849459ECD079BCF6FE928BB7065217DDFB6B15D0FE6496DEA71DAD9C66716F5EABB76D9CC96DBDEF1D1C981056D5B72A5DAE111677AFA33E59DB76C7DA66FCEA66311B36B35F5B76C2FE91215EB46AB361259F47727323C2712156FBFE9EC1D0C6F9F167E5B9667FEA12DG5B2E6FBD2CDF88025F30FB58378D4637F727F33F50426F18083A076DDD0F055F24092CDFE0FD53
	CBE5384613B5915722D2BF27EB3A10EE1A086BBE371807DBD7A7F3AEDC2774A2FC93593A8FC98742730CF9736645F33FFF56207D9D74ED3A2E9B8274E19351378FBE26FB5D795D1F4AB6FDCBA66631FBC915F90DEB9C7B9A190A65DFBC621C4FB4307C5FF4AC11E4579AC51B3E33673CE3DFB6F71F4E019F5B7CAC333ACD12F21ABD915BECFE3DD63E6007798F2C544A4F60797FD12F3EEF06646779E11B0F5828E887DBBDED875218F32BA76D0D6DC3DBD9045F8DF67961BE347DC56AFDE8E44EDDA860BE32F3C5
	6AFDE85B9C729FADD26FC35B6F10BF23C83D8F6DD1A91F791E13A77B3EF24548FC6FDC61396F0F2FC05F6D5C775F2CF06F3BEE255A77138E793BD73A775D32523D6FDE1BE55F4B760F4C77A7BC6A57DD77F3D336885C0EF91F49F6BC3AEFE4F62C2D7EE6F6FC3AD5366396453E3629A30CC7F14DB733A328C436A3F93BEC4757E7C6E647295EEFE647963A170A2D8DFF16AFBF6FD0BC6B735C6D857A2640F4DC98D39DECDD79D4056BF354E20576B96A5E8A6D737F7D956E7F1E41798A57FF4F402BC279778C583A
	78C7BBC85B8D023EA282E0B600B0897A74C938A63E2812548B7257261C5743779B3A49B9EE7297266C287F3DCA573E46D58E7FF729622B48B7688E0B5DEE69A372913F200A14175DE225C806CB2DA2B132993BFB6C0CD442AF255F93CDE297C5336F9E0F14615F75AA825FFAA6615E6A97D248B78D0F6E0AECB25ACD62DEBA82E2FD6DDF6898055E73B68977D87F27C074C4C1BA96A079DE5C5BBDBD9E3F3BE4832E79DE54DF5C6EF0578BE9CC656587ECC643DEFDB75B524DF4E5A6E03FBE7EDE54D513C0E4C6C0
	BA86A06EDE3CEFE5C7A252265F076FGC3227A9DC076AB49FD78BD096AF740FB714A7C08C475BBE01FC37EBF92556F00C1A91F5533CC36078D6CB15C07F5EBCA95691C0F694FB85F9A8A48C61B45AA5A6C6799165EC2AC49DAC677D6B199FF2A5A68CA865450FA8869610EB3E2273DC95F4DED29A8A7E3C6EF30439FA09CA09AA096A0F9B20CB7810AG2A815AG6CG63GA68384830481C4824C1A0CFE18EA735D78A195A6EDA8B6BD3BBF045509BD0730CE4E85D92577E3795DF2886B1569FEAC6B2BAD74BB9F
	242782C45E0F756A6ED62CD733811773DD14B123956BC05BF7D146C27A376AFCA19D84904EE95FB90134515F457A323CCDDDDF5EF028AF875A5C571773ED6A7AF25AA17F71B6F5FDD9A249E7B625D07B493BA363FBB8FEDCCDBE1BC86F1F95D7328517EBA05B361595E417EC5B194FE2F46E8A46F988E485FF8F7D7E71950C732C6FE10C2C74EFBEE67B776B4AG9A7DB14E674FE01CFBG676F0FB2DEBA03310B72C799FF2134698F405897206A81247DD9AF52B6BF00F17E28D79D67379C627419C99D67058E65
	70CA1FBA4E0FBB1C0F78FB1FBA4EBA09DF3A17244B453DA4F4CA416CFE26B6D9629B4FFDB93886F1919CF7B585F14203083B0B5FBDD676A046F2FB811647E440C5F25A4B85D89E29D3B016C3BB88EDB5245BG6CD3D046F5BB31BCFCG97BE85E53C3A93E3BC174B78BB25AD8D6857B5G9882F07E96D5C66A10E7F3785D3B653AD7E1F6DAA7106BDEC9898C14BEAF4D571CFB3B9E8F35D71094FB3E21D256156C11AE667BBA3A0F022C77DD8A40F83457A3AE066322D6A6CBF5257AA1447D339EE3FF69A15CEF14
	D5B43A3D8C41ABC64A477A51441D2E478EA9BB079FBBAC5B497606F50BCD672D52FDB019F47D415255B5A072B14A1A1D699CD7B750E899B0125D7E4C76A74A0633BD64A12DF3B44F8F4B37D6B3D6F3A85F7407BCBB5FB373A17CFB24DF5071C45CC36AFD9F55941F7430FA5F474F84ECAF6910E7FF984B78577123AB63192364DB13B03AFDAEBF22E31D2807557E3ECC71B31D7CEDC8C0FFE3A12F699174770B4451554DB5E564190F3B59F0C44A4BA9A3FDAC791BDFB0D7B2DE20D72C9F85C2F3B74BBFD26E3ADE
	37148FDF2FBB4A354744BD654EE3623EF26DB171C039F2CCAC5DB1D6CE5AFBB70CCF1AB95DE50EEB61386B29CC02BBEEB458FBB8FE9C350B60EBC522907137D33B4ED1DC33043BDB01EB11F0FE6524ED024BBD96FED75A7D65F4CF2E51E4E26987A80D518CCD154763E1EA23512AD7587DB84735703AF66050685A72574372E937655BA9DF68A31E3565E90FE0DBFE1F0E6DE29ED1576D3994BF7B91F55D3E31856BF69C643585E25D1E54BA3AB67948A879E2C64C477C3ACC4721E101EAFFEF2278E901EAFF971F
	C0FF23A0EF5723686F6C932333FB31531DD77EA0B364D1D6EE910FBA17DFB460E281129EF34C4B04F481C015824FF4DC3EB23A3AF75B30FC5AF5AF1C72B5BD66D95D6BF98C6B5ECCBA5E3D74183AAC5E2578F10F294B622C914B429772629E433238FAE6F4E5711DD1727D47087918DF1D3D447E3647557E1AA83E67F1353F9F70F13F9D72229EC7FFFF51BBBA3BC3EB15FC3B02E00E81E088123EFD402FCF10D63DE8DC236473871A90008809B69AFEE3B5793C9D6ECCCAFA22DF1789D0700434D792FE1B1E5062
	1B68F46FD88F50DDD2510EFF42393E8528F021101E869073043A0DFCD1B03AB6D2B7AC1FF69B391E724D5130D98B121F44B6B21B4EC1321ED457198FA8BE6FC9F51D3932836BCCA96479BD497F5E704E5155198923647B79087918DF3DF42DEC2E133FF60ACFFECA6D6FBF79DCAC8372061EC2FFF3AC6ABA948DF931CF8D9F7F24E0D5BF8B6982002AE0F59D926B55BA1A0026A7F8F89D17D4B463A19DG906A2463F7AB15F11C8679B1GF3A43A64271DF5C9E7D98F2A631F2520AD5260E3770C06ADA373B52359
	E4B40B64967C8322D9407BDBF5749BE8B57036BD0DE7CE8E53792495525ECF733F95CF0F963067FA4573AF0531DFD31F7DEF509116A07B742A6279C842586B6E9DD39D2CCC9F22EB006321BC83F9B9AF20E70527C2FABAAF678FDBE45F93DA65675BDA46BE8E817F869DB71C10FD72D1BCAFBFB1763A8B47D487AB53E23A4E998D65994B4B798245A5FD3FDF1771FDFE1E0D6232A1DD46F1F369FAC783245BB9EEBFDDE737C3FABC473DC56BCDG24C3B86E06D6BC3B9641F14D9417798C74354F70FB60A82E8A52
	4D9CB7032E1B1AA06D4DF1F1746F1A79C1BA68992C1B7FE3144B6BFD4573A56358175D04FF038EE32F6C13CD717C511931571D51BB76F573F53A6ECB6EBC8A65657CBFFB703C64B40E5BCE4F0247C0BA16636E6577EF4D65386732E8FD8D017A9A02386EB528434EF13F28C39D63B8EE8DDD1F1C8C69A00E3B3E9EF504F2DC9FBD6B1A7CEC3FAE6BD9FE37DE8A6AA862B87D8154D14DF1C194578C699E0EDBD20BBA6C9C57C46505C3BA0A631E53213C599C474E7D8BBF00679F70FB1F583DD9102E62389779DDDA
	CD9C7791575B43F137D19D21101E46F111949783E96107081BC45751B3A0DD40F1428EEA9F241BFE086D732F0AEF709FA91E3DF70CFD7D3D7F5F20233FCC76690262B931EC6CF5E70D298ED626B5962CF36D3C1C6F24B8BB243DB96EEF7C6E32719C574A6BD7G47DD246DAE8252519C97CEF13110CE8FC55C4D7528B70763FEC1F1E5102E65381D87F93D6638128ADE2FB96EE8A5BD7FCB529CB739927506F05C9C7A5DA28252D19CB71F7795721D030594B79BE866F23A3B6BD0EF72F308DBF590F98BB84E406F
	A62CFA8E3F93FD7AB9D97F34134F7FE4CF0C00FB944B69D85CGF4D6CE5BC53F21D0DA813F67BCDCC56A1E345F6710362CC8BA5E7387B9C1DC565A96E7D9BFD71C792A256FE647FBECCED35C8C00E8AE67CE559DC86F554BB27E562AFD0F4DA27ACDF8B6480863F216513105639DAE1B4B706CFD4E0F102E2D4C751E73C1F6279150D6F17AFF34B85E4310CEFDB0C17E500FF01F673D2DA3B9E32D3EBFA19064104D74727D8916D6677B86EE625F4CC338ED4F35EA6F87FD035DDD8BF4111C762FD7344BB6055ED9
	A2BC5F2FCBFD9EE9979B1D4BB6031E43E3BCF134FD6E827A5A67F17F6B323D38A7F6084BE9586BD836BB8F9199ACE6CF3B3D2381677009AEE296GBA76884A7BB226E7B9476C1DACAC7FE0EE67F87ACE8F0374B40E7B288EED1F4BEDAF2DF7343D75CB5976C97543591E6846763C297D3AAF9CEC77CEF3367D3EB4343DF4AA5A99CE5F6D5510EE6438DB8F206DDED35176178FB85AFE7930ECFBDE6DF0363B3D1B88F4ECF4303DB74559766BD35076D0EE67FF6B504E88EE67A7290EF67AB74AED5FAB15FCFB6A31
	580C97203A6ACDE443B0FE8D45FAF8DFAA3609B9DC4FBB941773820C27DE40763934EEB81F973871399D64ACF67079C11D334FEC0CC572CDAF20FF7F2BDB6660439E3C3DC462191F4A3FEBF31E60826DF69AC147CD01C09742E9D76EF0EE27AFFFA537D30B85E3BE137384DA9CE37E47A3B27DBAAB21CFFF914627AF62F96E7EDA5C8F5FG38F6GAFGFF003097D166DDF54E71F8348E63914369E654390F4787F5980F589731BC036B79DE7B9F231CBF295A6642A65907F67A0E2C855A269F238FF5956803B760
	7CGC28122G62384CB3154EBEDCD709BEE40621BD2FD4220DF9E1482B4BF4FCC72C4FA4B4CD105F4EE97657B95ADCC04F75B27B9E2BC37B4683FDGC0B840CC002417D06F5E0398071C17502F0B87112F91F086GEF00G007017F0DF525D0AF33F7B848F4E321466733A741796197723E6CFF92533FD6C5CF09F1EEDDB2AB87F7B1EC7E7BB2573F4E50EE78D373749F222C6F036B4DCF1A675DC6B484E3A3D53AE735E5F6AFC9EB3C5F17EB4E68467D67B8DB25F6C1E11154D4F9467C9FF3F4753B3CA0CFE735E
	EC41533DC5310A33267F4AF2AC0B710AB3217FD1B7B29B1656FBEE43B30A73255FCFF334E131D94E7B7A4048ECF8600067B614D8E4BD13D29C4F9FFD2873C40EE4FFAA1E0F423FC8FD147C0FDB15878A7781697EA33C1CEF6F17757E2556D37F24733E0AF33153F50EB6E7252EF3EF87B92FA549C9D31C131D33FDE47D40CD964FE3ECD41C237D52E3DF599E310935B8961879926EDFFC25D63DFF1178DCA8707D07356E4F1664572977AF1EF348BFD1275E3F0867F2188FE1F50EB1CF2D77A4660C76BFC750BEDE
	3BA847EDD3454862E6294038E57D8463F6FF057B383DDE210E1B63F92478CAF55CAC8E795BAA5D474D2F52B1EE51151E5755CD0A33489F0E308ECD2F43D8B471D87C2BCE9D0BB58E3E94552BE3F10BC3FEC73DBA96038E793E756EE351F25013FA406CFF60A05A6F436DFF7D207B73D5718D6E6D5F5620365F71FC155820369F4FD73135264935237BBEEC2F989D5F2F6AC647773053775061E0A5AD1FA7AB6F03C1D8503B42FC3B10D2B3E82617B3E797AB93A54A44B6E52254AEAC20B7951127E4BC1BED971248
	79C93BB01F9E89870623039DD0536DB4EF19FC4ABADBBAE6DDEE97620B87EC42D267A1471E5BFF73E650696A0C84A121CE783807EEF12B93661FA3FB65062C608119E555GEF1AC393F965016DFF1C767BE383094247F542AAB232E507360D97C48379231347C49B11DEA3AC34123FBACA569E6A0424817AB3FF40FE5EA4B68899DDC7447EC1F140AE9A76605644813B303C01E85ACA0E2DEC2D558F74503B923FE890124C7ABE70F9A94BB6694D5DDB59BE45AF281D71FBC8BB003196798F6CDDC66DA5D28A3914
	E54FAF5E383EFEE6E82210D0A32418ACFAC30D3E53EE3155898B6DBD90289E0B49B0E42D2C2202124F610670C4907789F71FB8DBC8E61B5C685E217BFD52E62555A4409C43A6EC2514E4A0DF48A98C7BFA74B6D0A55A6AG7420B20767DD37563E69E787D636A5C0D3E3CE768BD70445C3D02E9FF751033570D0CD871E83A4E7199D2C35694D83DD96DB9FD8162D328C333802423BDFAD1A7068BFDA29821955AE2CE32184562D5D2225EF6B1E2EAE23D96482A02EA0FE8D97CFE88AD5B4CB076EDCDE7F2BF99DD0
	8F2A05443E22A27AFFB17D3F047CDFCCB14594D3DC82410D955C7ED3678F214F347200BD0B29BD24788BEB20846D3FFD775587E76C0A1D8D5E5588734F122D2DD08869B2551703647071CDC1935668FCE3EEA3E5E4A5D5E50848DDB944A5928F6B68CE4D18335B4A935F1A1218A0A4C113E0BBD72172126D27D0F9ED2C05A45AADD6D66F2416CEFA397954D89DEFB54E29B4271ACA30CB1C2B9CC1AF6785CFD21914F4B57DFF4D0843C83856D15E755C7B4DAC38B9928DFA11706D72E21B6C0532AC04EF17973BE4
	AF70EF968DD7965BB5D25714CFB50EA593AF51AE9B560BEB5827C6ED1F623F4DBE35BA7A04E344EFF5B99934FD52AAA7355D71AE6CCEF2349BDFCC9F33F381CCBF61999B07CC32C364D2B83208C4866B73618536487146177807D65E10FE47364184A139068CA1CC569EFD1D74EAEC90F49D748DA65A0056AE244BC3G4A8B632C04CE9804FDA263BB891E659E356ABB49D0EC21C1EF6B259208C903A70405DD366E8E2A40AEA41C28B981EAE90AE41FEB90D26CBD642CB599935905153268C6F222D44AE023B8E1
	DED757A4AB7DF76D5529CB0EC5C066205B85FC6BDFD3165EB0F46D59F44BB5E8539DF20912ED182407F810683E76AC3D67DBE3697D5F9ACB8334ADDD4C5F916F827288CF110BC523B987E97DF4A51F7B46E96C42A2BE032797E55A05B4E9A60E698552E5EFB0F717F2E0A28B5D3104D6CC5C9751B93E82318417819438E5728200821BCAD689B0ED971259B5CC6559201E5D5884B4BAFA8B132D3367FCF93622045AE9546857CF4F5E06A455C77E337C7FAD2BF6A97D7C5035EC5DCBC35F2E51512BF24DA7A79009
	6E8A415D68681A0B789B5AEF137FE36BB03EEFBA76ACE4C78469DD16DC4BB67FDE36B9D1E1F35235EC735B5FC21BE74BB6A7A9ECCE3C16DB5B7B57F4EB7B701A36EE5E35ECDD7C7CA169DE7F7C2B4A3FD790F7E32A4B3FF91099AD7D2D59E879DEFFF6B7D19A7D465A83F86FE83CDF686481F2F11D2BBB0E0E7669CDA63B5E543B47ECA0779D6DBDEF97657B401656927983C8A3E5323CD535446EB38A1E7F87D0CB878855787B9D86B4GG4C3CGGD0CB818294G94G88G88G1DFBD8B055787B9D86B4GG
	4C3CGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGC0B4GGGG
**end of data**/
}
/**
 * Return the DivisionAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getDivisionAddressLabel() {
	if (ivjDivisionAddressLabel == null) {
		try {
			ivjDivisionAddressLabel = new javax.swing.JLabel();
			ivjDivisionAddressLabel.setName("DivisionAddressLabel");
			ivjDivisionAddressLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjDivisionAddressLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjDivisionAddressLabel.setText("Division Address:");
			ivjDivisionAddressLabel.setEnabled(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDivisionAddressLabel;
}
/**
 * Return the GroupAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getGroupAddressLabel() {
	if (ivjGroupAddressLabel == null) {
		try {
			ivjGroupAddressLabel = new javax.swing.JLabel();
			ivjGroupAddressLabel.setName("GroupAddressLabel");
			ivjGroupAddressLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjGroupAddressLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjGroupAddressLabel.setText("Group Address:");
			ivjGroupAddressLabel.setEnabled(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGroupAddressLabel;
}
/**
 * Return the JCheckBoxDivisionUsage property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxDivisionUsage() {
	if (ivjJCheckBoxDivisionUsage == null) {
		try {
			ivjJCheckBoxDivisionUsage = new javax.swing.JCheckBox();
			ivjJCheckBoxDivisionUsage.setName("JCheckBoxDivisionUsage");
			ivjJCheckBoxDivisionUsage.setMnemonic('d');
			ivjJCheckBoxDivisionUsage.setText("Division");
			ivjJCheckBoxDivisionUsage.setMaximumSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxDivisionUsage.setPreferredSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxDivisionUsage.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxDivisionUsage.setMinimumSize(new java.awt.Dimension(53, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxDivisionUsage;
}
/**
 * Return the JCheckBoxGroupUsage property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxGroupUsage() {
	if (ivjJCheckBoxGroupUsage == null) {
		try {
			ivjJCheckBoxGroupUsage = new javax.swing.JCheckBox();
			ivjJCheckBoxGroupUsage.setName("JCheckBoxGroupUsage");
			ivjJCheckBoxGroupUsage.setMnemonic('g');
			ivjJCheckBoxGroupUsage.setText("Group");
			ivjJCheckBoxGroupUsage.setMaximumSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxGroupUsage.setPreferredSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxGroupUsage.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxGroupUsage.setMinimumSize(new java.awt.Dimension(53, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxGroupUsage;
}
/**
 * Return the JCheckBoxRateUsage property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRateUsage() {
	if (ivjJCheckBoxRateUsage == null) {
		try {
			ivjJCheckBoxRateUsage = new javax.swing.JCheckBox();
			ivjJCheckBoxRateUsage.setName("JCheckBoxRateUsage");
			ivjJCheckBoxRateUsage.setMnemonic('r');
			ivjJCheckBoxRateUsage.setText("Rate");
			ivjJCheckBoxRateUsage.setMaximumSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxRateUsage.setSelected(false);
			ivjJCheckBoxRateUsage.setPreferredSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxRateUsage.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxRateUsage.setEnabled(true);
			ivjJCheckBoxRateUsage.setMinimumSize(new java.awt.Dimension(53, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRateUsage;
}
/**
 * Return the JCheckBoxRelay1 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRelay1() {
	if (ivjJCheckBoxRelay1 == null) {
		try {
			ivjJCheckBoxRelay1 = new javax.swing.JCheckBox();
			ivjJCheckBoxRelay1.setName("JCheckBoxRelay1");
			ivjJCheckBoxRelay1.setMnemonic('1');
			ivjJCheckBoxRelay1.setText("Function 1");
			ivjJCheckBoxRelay1.setMaximumSize(new java.awt.Dimension(70, 22));
			ivjJCheckBoxRelay1.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxRelay1.setMinimumSize(new java.awt.Dimension(70, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRelay1;
}
/**
 * Return the JCheckBoxRelay2 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRelay2() {
	if (ivjJCheckBoxRelay2 == null) {
		try {
			ivjJCheckBoxRelay2 = new javax.swing.JCheckBox();
			ivjJCheckBoxRelay2.setName("JCheckBoxRelay2");
			ivjJCheckBoxRelay2.setMnemonic('2');
			ivjJCheckBoxRelay2.setText("Function 2");
			ivjJCheckBoxRelay2.setMaximumSize(new java.awt.Dimension(70, 22));
			ivjJCheckBoxRelay2.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxRelay2.setMinimumSize(new java.awt.Dimension(70, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRelay2;
}
/**
 * Return the JCheckBoxRelay3 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRelay3() {
	if (ivjJCheckBoxRelay3 == null) {
		try {
			ivjJCheckBoxRelay3 = new javax.swing.JCheckBox();
			ivjJCheckBoxRelay3.setName("JCheckBoxRelay3");
			ivjJCheckBoxRelay3.setMnemonic('3');
			ivjJCheckBoxRelay3.setText("Function 3");
			ivjJCheckBoxRelay3.setMaximumSize(new java.awt.Dimension(70, 22));
			ivjJCheckBoxRelay3.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxRelay3.setMinimumSize(new java.awt.Dimension(70, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRelay3;
}
/**
 * Return the JCheckBoxRelay4 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRelay4() {
	if (ivjJCheckBoxRelay4 == null) {
		try {
			ivjJCheckBoxRelay4 = new javax.swing.JCheckBox();
			ivjJCheckBoxRelay4.setName("JCheckBoxRelay4");
			ivjJCheckBoxRelay4.setMnemonic('4');
			ivjJCheckBoxRelay4.setText("Function 4");
			ivjJCheckBoxRelay4.setMaximumSize(new java.awt.Dimension(70, 22));
			ivjJCheckBoxRelay4.setActionCommand("Relay 4");
			ivjJCheckBoxRelay4.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxRelay4.setMinimumSize(new java.awt.Dimension(70, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRelay4;
}
/**
 * Return the JCheckBoxSerial property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxSerial() {
	if (ivjJCheckBoxSerial == null) {
		try {
			ivjJCheckBoxSerial = new javax.swing.JCheckBox();
			ivjJCheckBoxSerial.setName("JCheckBoxSerial");
			ivjJCheckBoxSerial.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJCheckBoxSerial.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCheckBoxSerial.setText("Individual Address:");
			ivjJCheckBoxSerial.setForeground(new java.awt.Color(102,102,153));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxSerial;
}
/**
 * Return the JCheckBoxSubUsage property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxSubUsage() {
	if (ivjJCheckBoxSubUsage == null) {
		try {
			ivjJCheckBoxSubUsage = new javax.swing.JCheckBox();
			ivjJCheckBoxSubUsage.setName("JCheckBoxSubUsage");
			ivjJCheckBoxSubUsage.setMnemonic('b');
			ivjJCheckBoxSubUsage.setText("Substation");
			ivjJCheckBoxSubUsage.setMaximumSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxSubUsage.setPreferredSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxSubUsage.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxSubUsage.setMinimumSize(new java.awt.Dimension(53, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxSubUsage;
}
/**
 * Return the JCheckBoxUtilityUsage property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxUtilityUsage() {
	if (ivjJCheckBoxUtilityUsage == null) {
		try {
			ivjJCheckBoxUtilityUsage = new javax.swing.JCheckBox();
			ivjJCheckBoxUtilityUsage.setName("JCheckBoxUtilityUsage");
			ivjJCheckBoxUtilityUsage.setMnemonic('m');
			ivjJCheckBoxUtilityUsage.setText("Utility");
			ivjJCheckBoxUtilityUsage.setMaximumSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxUtilityUsage.setSelected(true);
			ivjJCheckBoxUtilityUsage.setPreferredSize(new java.awt.Dimension(53, 22));
			ivjJCheckBoxUtilityUsage.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJCheckBoxUtilityUsage.setEnabled(false);
			ivjJCheckBoxUtilityUsage.setMinimumSize(new java.awt.Dimension(53, 22));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxUtilityUsage;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder1.setTitle("Rate Address");
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setBorder(ivjLocalBorder1);
			ivjJPanel1.setLayout(null);
			ivjJPanel1.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJPanel1.setPreferredSize(new java.awt.Dimension(220, 94));
			ivjJPanel1.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJPanel1.setMinimumSize(new java.awt.Dimension(220, 94));
			getJPanel1().add(getRateMemberLabel(), getRateMemberLabel().getName());
			getJPanel1().add(getRateFamilyLabel(), getRateFamilyLabel().getName());
			getJPanel1().add(getJTextFieldRateFamily(), getJTextFieldRateFamily().getName());
			getJPanel1().add(getJTextFieldRateMember(), getJTextFieldRateMember().getName());
			getJPanel1().add(getRateHierachyLabel(), getRateHierachyLabel().getName());
			getJPanel1().add(getJTextField1(), getJTextField1().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the JTextDivisionAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextDivisionAddress() {
	if (ivjJTextDivisionAddress == null) {
		try {
			ivjJTextDivisionAddress = new javax.swing.JTextField();
			ivjJTextDivisionAddress.setName("JTextDivisionAddress");
			ivjJTextDivisionAddress.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextDivisionAddress.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJTextDivisionAddress.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextDivisionAddress;
}
/**
 * Return the JTextField1 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextField1() {
	if (ivjJTextField1 == null) {
		try {
			ivjJTextField1 = new javax.swing.JTextField();
			ivjJTextField1.setName("JTextField1");
			ivjJTextField1.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextField1.setBounds(84, 68, 34, 17);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextField1;
}
/**
 * Return the JTextFieldIndividualAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldIndividualAddress() {
	if (ivjJTextFieldIndividualAddress == null) {
		try {
			ivjJTextFieldIndividualAddress = new javax.swing.JTextField();
			ivjJTextFieldIndividualAddress.setName("JTextFieldIndividualAddress");
			ivjJTextFieldIndividualAddress.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldIndividualAddress.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextFieldIndividualAddress.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJTextFieldIndividualAddress.setEnabled(false);
			ivjJTextFieldIndividualAddress.setEditable(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldIndividualAddress;
}
/**
 * Return the JTextFieldRateFamily property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldRateFamily() {
	if (ivjJTextFieldRateFamily == null) {
		try {
			ivjJTextFieldRateFamily = new javax.swing.JTextField();
			ivjJTextFieldRateFamily.setName("JTextFieldRateFamily");
			ivjJTextFieldRateFamily.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextFieldRateFamily.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldRateFamily.setBounds(84, 25, 34, 17);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldRateFamily;
}
/**
 * Return the JTextFieldRateMember property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldRateMember() {
	if (ivjJTextFieldRateMember == null) {
		try {
			ivjJTextFieldRateMember = new javax.swing.JTextField();
			ivjJTextFieldRateMember.setName("JTextFieldRateMember");
			ivjJTextFieldRateMember.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextFieldRateMember.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldRateMember.setBounds(84, 46, 34, 17);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldRateMember;
}
/**
 * Return the JTextFieldSubAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldSubAddress() {
	if (ivjJTextFieldSubAddress == null) {
		try {
			ivjJTextFieldSubAddress = new javax.swing.JTextField();
			ivjJTextFieldSubAddress.setName("JTextFieldSubAddress");
			ivjJTextFieldSubAddress.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextFieldSubAddress.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJTextFieldSubAddress.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldSubAddress;
}
/**
 * Return the JTextFieldUtilityAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldUtilityAddress() {
	if (ivjJTextFieldUtilityAddress == null) {
		try {
			ivjJTextFieldUtilityAddress = new javax.swing.JTextField();
			ivjJTextFieldUtilityAddress.setName("JTextFieldUtilityAddress");
			ivjJTextFieldUtilityAddress.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextFieldUtilityAddress.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJTextFieldUtilityAddress.setText("1");
			ivjJTextFieldUtilityAddress.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldUtilityAddress;
}
/**
 * Return the JTextSubAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextSubAddress() {
	if (ivjJTextSubAddress == null) {
		try {
			ivjJTextSubAddress = new javax.swing.JTextField();
			ivjJTextSubAddress.setName("JTextSubAddress");
			ivjJTextSubAddress.setFont(new java.awt.Font("dialog", 0, 10));
			ivjJTextSubAddress.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJTextSubAddress.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextSubAddress;
}
/**
 * Return the RateFamilyLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRateFamilyLabel() {
	if (ivjRateFamilyLabel == null) {
		try {
			ivjRateFamilyLabel = new javax.swing.JLabel();
			ivjRateFamilyLabel.setName("RateFamilyLabel");
			ivjRateFamilyLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjRateFamilyLabel.setText("Family:");
			ivjRateFamilyLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRateFamilyLabel.setBounds(25, 25, 55, 15);
			ivjRateFamilyLabel.setEnabled(true);
			ivjRateFamilyLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRateFamilyLabel;
}
/**
 * Return the RateHierachyLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRateHierachyLabel() {
	if (ivjRateHierachyLabel == null) {
		try {
			ivjRateHierachyLabel = new javax.swing.JLabel();
			ivjRateHierachyLabel.setName("RateHierachyLabel");
			ivjRateHierachyLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRateHierachyLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjRateHierachyLabel.setText("Hierarchy: ");
			ivjRateHierachyLabel.setBounds(25, 68, 58, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRateHierachyLabel;
}
/**
 * Return the RateMemberLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRateMemberLabel() {
	if (ivjRateMemberLabel == null) {
		try {
			ivjRateMemberLabel = new javax.swing.JLabel();
			ivjRateMemberLabel.setName("RateMemberLabel");
			ivjRateMemberLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjRateMemberLabel.setText("Member: ");
			ivjRateMemberLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjRateMemberLabel.setBounds(25, 46, 59, 15);
			ivjRateMemberLabel.setEnabled(true);
			ivjRateMemberLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRateMemberLabel;
}
/**
 * Return the RelayUsagePanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getRelayUsagePanel() {
	if (ivjRelayUsagePanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder3;
			ivjLocalBorder3 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder3.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder3.setTitle("Function Usage");
			ivjRelayUsagePanel = new javax.swing.JPanel();
			ivjRelayUsagePanel.setName("RelayUsagePanel");
			ivjRelayUsagePanel.setBorder(ivjLocalBorder3);
			ivjRelayUsagePanel.setLayout(new java.awt.GridBagLayout());
			ivjRelayUsagePanel.setBounds(186, 248, 161, 103);

			java.awt.GridBagConstraints constraintsJCheckBoxRelay1 = new java.awt.GridBagConstraints();
			constraintsJCheckBoxRelay1.gridx = 1; constraintsJCheckBoxRelay1.gridy = 1;
			constraintsJCheckBoxRelay1.ipadx = 24;
			constraintsJCheckBoxRelay1.ipady = -4;
			constraintsJCheckBoxRelay1.insets = new java.awt.Insets(5, 23, 1, 20);
			getRelayUsagePanel().add(getJCheckBoxRelay1(), constraintsJCheckBoxRelay1);

			java.awt.GridBagConstraints constraintsJCheckBoxRelay2 = new java.awt.GridBagConstraints();
			constraintsJCheckBoxRelay2.gridx = 1; constraintsJCheckBoxRelay2.gridy = 2;
			constraintsJCheckBoxRelay2.ipadx = 24;
			constraintsJCheckBoxRelay2.ipady = -4;
			constraintsJCheckBoxRelay2.insets = new java.awt.Insets(2, 23, 0, 20);
			getRelayUsagePanel().add(getJCheckBoxRelay2(), constraintsJCheckBoxRelay2);

			java.awt.GridBagConstraints constraintsJCheckBoxRelay3 = new java.awt.GridBagConstraints();
			constraintsJCheckBoxRelay3.gridx = 1; constraintsJCheckBoxRelay3.gridy = 3;
			constraintsJCheckBoxRelay3.ipadx = 24;
			constraintsJCheckBoxRelay3.ipady = -4;
			constraintsJCheckBoxRelay3.insets = new java.awt.Insets(0, 23, 1, 20);
			getRelayUsagePanel().add(getJCheckBoxRelay3(), constraintsJCheckBoxRelay3);

			java.awt.GridBagConstraints constraintsJCheckBoxRelay4 = new java.awt.GridBagConstraints();
			constraintsJCheckBoxRelay4.gridx = 1; constraintsJCheckBoxRelay4.gridy = 4;
			constraintsJCheckBoxRelay4.ipadx = 24;
			constraintsJCheckBoxRelay4.ipady = -4;
			constraintsJCheckBoxRelay4.insets = new java.awt.Insets(2, 23, 12, 20);
			getRelayUsagePanel().add(getJCheckBoxRelay4(), constraintsJCheckBoxRelay4);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRelayUsagePanel;
}
/**
 * Return the SubAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getSubAddressLabel() {
	if (ivjSubAddressLabel == null) {
		try {
			ivjSubAddressLabel = new javax.swing.JLabel();
			ivjSubAddressLabel.setName("SubAddressLabel");
			ivjSubAddressLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjSubAddressLabel.setText("Substation Address:");
			ivjSubAddressLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjSubAddressLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjSubAddressLabel.setEnabled(true);
			ivjSubAddressLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSubAddressLabel;
}
/**
 * Return the UtilityAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getUtilityAddressLabel() {
	if (ivjUtilityAddressLabel == null) {
		try {
			ivjUtilityAddressLabel = new javax.swing.JLabel();
			ivjUtilityAddressLabel.setName("UtilityAddressLabel");
			ivjUtilityAddressLabel.setFont(new java.awt.Font("Arial", 1, 10));
			ivjUtilityAddressLabel.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjUtilityAddressLabel.setText("Utility Address:");
			ivjUtilityAddressLabel.setEnabled(true);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjUtilityAddressLabel;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param o java.lang.Object
 */
public Object getValue(Object o) {
	return null;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getJCheckBoxRelay1().addActionListener(ivjEventHandler);
	getJCheckBoxRelay2().addActionListener(ivjEventHandler);
	getJCheckBoxRelay3().addActionListener(ivjEventHandler);
	getJCheckBoxRelay4().addActionListener(ivjEventHandler);
	getJCheckBoxDivisionUsage().addActionListener(ivjEventHandler);
	getJCheckBoxRateUsage().addActionListener(ivjEventHandler);
	getJCheckBoxGroupUsage().addActionListener(ivjEventHandler);
	getJCheckBoxSubUsage().addActionListener(ivjEventHandler);
	getJCheckBoxSerial().addActionListener(ivjEventHandler);
	getJTextFieldIndividualAddress().addCaretListener(ivjEventHandler);
	getJTextFieldRateFamily().addCaretListener(ivjEventHandler);
	getJTextFieldRateMember().addActionListener(ivjEventHandler);
	getJTextSubAddress().addActionListener(ivjEventHandler);
	getJTextDivisionAddress().addCaretListener(ivjEventHandler);
	getJTextFieldSubAddress().addCaretListener(ivjEventHandler);
	getJTextFieldUtilityAddress().addCaretListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("SA305EditorPanel");
		setLayout(null);
		setSize(350, 360);
		add(getAddressPanel(), getAddressPanel().getName());
		add(getAddressUsagePanel(), getAddressUsagePanel().getName());
		add(getRelayUsagePanel(), getRelayUsagePanel().getName());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		SA305EditorPanel aSA305EditorPanel;
		aSA305EditorPanel = new SA305EditorPanel();
		frame.setContentPane(aSA305EditorPanel);
		frame.setSize(aSA305EditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * This method was created in VisualAge.
 * @param o java.lang.Object
 */
public void setValue(Object o) {}
}
