package com.cannontech.dbeditor.wizard.device.lmgroup;

import com.cannontech.common.util.CtiUtilities;
import java.util.HashMap;
/**
 * Insert the type's description here.
 * Creation date: (10/12/2004 4:55:17 PM)
 * @author: 
 */
public class SpecialRippleMessagePanel extends com.cannontech.common.gui.util.DataInputPanel {
	private javax.swing.JLabel ivjJLabelLG = null;
	private javax.swing.JComboBox ivjJComboBoxBitsAreaCode = null;
	private javax.swing.JLabel ivjJLabelBitsAreaCode = null;
	private javax.swing.JPanel ivjJPanelBitsDoubleOrder = null;
	private javax.swing.JComboBox ivjJComboBoxBitsGroup = null;
	private javax.swing.JLabel ivjJLabelBitsGroup = null;
	private javax.swing.JComboBox ivjShedTimeComboBox = null;
	private javax.swing.JLabel ivjShedTimeLabel = null;
	public static final String CONT_LATCH = "Continuous Latch";
	HashMap MINNKOTADEFS = new HashMap(42);
	private SpecialDoubleOrderBitPanel ivjControlDoubleOrderPanel = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();

class IvjEventHandler implements java.awt.event.ActionListener, java.awt.event.MouseListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == SpecialRippleMessagePanel.this.getShedTimeComboBox()) 
				connEtoC3(e);
			if (e.getSource() == SpecialRippleMessagePanel.this.getJComboBoxBitsGroup()) 
				connEtoC4(e);
			if (e.getSource() == SpecialRippleMessagePanel.this.getJComboBoxBitsAreaCode()) 
				connEtoC5(e);
			if (e.getSource() == SpecialRippleMessagePanel.this.getControlDoubleOrderPanel()) 
				connEtoC1(e);
			if (e.getSource() == SpecialRippleMessagePanel.this.getRestoreDoubleOrderPanel()) 
				connEtoC2(e);
		};
		public void mouseClicked(java.awt.event.MouseEvent e) {};
		public void mouseEntered(java.awt.event.MouseEvent e) {};
		public void mouseExited(java.awt.event.MouseEvent e) {};
		public void mousePressed(java.awt.event.MouseEvent e) {};
		public void mouseReleased(java.awt.event.MouseEvent e) {};
	};
	private SpecialDoubleOrderBitPanel ivjRestoreDoubleOrderPanel = null;
/**
 * SpecialRippleMessagePanel constructor comment.
 */
public SpecialRippleMessagePanel() {
	super();
	initialize();
}
public void buildDefs()
{
	MINNKOTADEFS.put("TST", "1000000000");
	MINNKOTADEFS.put("1.00", "0100100100");
	MINNKOTADEFS.put("1.01", "0110100000");
	MINNKOTADEFS.put("1.02", "0000110100");
	MINNKOTADEFS.put("2.00", "0010010010");
	MINNKOTADEFS.put("2.01", "0000011010");
	MINNKOTADEFS.put("2.02", "0010000011");
	MINNKOTADEFS.put("2.03", "0011010000");
	MINNKOTADEFS.put("2.04", "0110000010");
	MINNKOTADEFS.put("3.00", "0001001001");
	MINNKOTADEFS.put("3.01", "0001000101");
	MINNKOTADEFS.put("3.06", "0011000001");
	MINNKOTADEFS.put("3.07", "0100001001");
	MINNKOTADEFS.put("3.09", "0001001100");
	MINNKOTADEFS.put("3.01 & 3.09", "0001001101");
	MINNKOTADEFS.put("4.00", "0100010001");
	MINNKOTADEFS.put("4.01", "0000110001");
	MINNKOTADEFS.put("4.02", "0100000011");
	MINNKOTADEFS.put("6.00", "0010001100");
	MINNKOTADEFS.put("6.01", "0110001000");
	MINNKOTADEFS.put("6.06", "0010101000");
	
	MINNKOTADEFS.put("1000000000", "TST");
	MINNKOTADEFS.put("0100100100", "1.00");
	MINNKOTADEFS.put("0110100000", "1.01");
	MINNKOTADEFS.put("0000110100", "1.02");
	MINNKOTADEFS.put("0010010010", "2.00");
	MINNKOTADEFS.put("0000011010", "2.01");
	MINNKOTADEFS.put("0010000011", "2.02");
	MINNKOTADEFS.put("0011010000", "2.03");
	MINNKOTADEFS.put("0110000010", "2.04");
	MINNKOTADEFS.put("0001001001", "3.00");
	MINNKOTADEFS.put("0001000101", "3.01");
	MINNKOTADEFS.put("0011000001", "3.06");
	MINNKOTADEFS.put("0100001001", "3.07");
	MINNKOTADEFS.put("0001001100", "3.09");
	MINNKOTADEFS.put("0001001101", "3.01 & 3.09");
	MINNKOTADEFS.put("0100010001", "4.00");
	MINNKOTADEFS.put("0000110001", "4.01");
	MINNKOTADEFS.put("0100000011", "4.02");
	MINNKOTADEFS.put("0010001100", "6.00");
	MINNKOTADEFS.put("0110001000", "6.01");
	MINNKOTADEFS.put("0010101000", "6.06");
	
	getJComboBoxBitsGroup().addItem("TST");
	getJComboBoxBitsGroup().addItem("1.00");
	getJComboBoxBitsGroup().addItem("1.01");
	getJComboBoxBitsGroup().addItem("1.02");
	getJComboBoxBitsGroup().addItem("2.00");
	getJComboBoxBitsGroup().addItem("2.01");
	getJComboBoxBitsGroup().addItem("2.02");
	getJComboBoxBitsGroup().addItem("2.03");
	getJComboBoxBitsGroup().addItem("2.04");
	getJComboBoxBitsGroup().addItem("3.00");
	getJComboBoxBitsGroup().addItem("3.01");
	getJComboBoxBitsGroup().addItem("3.06");
	getJComboBoxBitsGroup().addItem("3.07");
	getJComboBoxBitsGroup().addItem("3.09");
	getJComboBoxBitsGroup().addItem("3.01 & 3.09");
	getJComboBoxBitsGroup().addItem("4.00");
	getJComboBoxBitsGroup().addItem("4.01");
	getJComboBoxBitsGroup().addItem("4.02");
	getJComboBoxBitsGroup().addItem("6.00");
	getJComboBoxBitsGroup().addItem("6.01");
	getJComboBoxBitsGroup().addItem("6.06");
		
	MINNKOTADEFS.put("000000", "Universal");
	MINNKOTADEFS.put("100110", "Minnkota");
	MINNKOTADEFS.put("100101", "Beltrami");
	MINNKOTADEFS.put("100011", "Cass County");
	MINNKOTADEFS.put("010110", "Cavalier Rural");
	MINNKOTADEFS.put("010101", "Clearwater-Polk");
	MINNKOTADEFS.put("010011", "NoDak Rural");
	MINNKOTADEFS.put("001110", "North Star");
	MINNKOTADEFS.put("001101", "PKM Electric");
	MINNKOTADEFS.put("001011", "Red Lake");
	MINNKOTADEFS.put("110100", "Red River Valley");
	MINNKOTADEFS.put("101100", "Roseau Electric");
	MINNKOTADEFS.put("11100", "Sheyenne Valley");
	MINNKOTADEFS.put("110010", "Wild Rice");
	MINNKOTADEFS.put("101010", "NMPA");
	
	MINNKOTADEFS.put("Universal", "000000");
	MINNKOTADEFS.put("Minnkota", "100110");
	MINNKOTADEFS.put("Beltrami", "100101");
	MINNKOTADEFS.put("Cass County", "100011");
	MINNKOTADEFS.put("Cavalier Rural", "010110");
	MINNKOTADEFS.put("Clearwater-Polk", "010101");
	MINNKOTADEFS.put("NoDak Rural", "010011");
	MINNKOTADEFS.put("North Star", "001110");
	MINNKOTADEFS.put("PKM Electric", "001101");
	MINNKOTADEFS.put("Red Lake", "001011");
	MINNKOTADEFS.put("Red River Valley", "110100");
	MINNKOTADEFS.put("Roseau Electric", "101100");
	MINNKOTADEFS.put("Sheyenne Valley", "11100");
	MINNKOTADEFS.put("Wild Rice", "110010");
	MINNKOTADEFS.put("NMPA", "101010");
	
	getJComboBoxBitsAreaCode().addItem("Beltrami");
	getJComboBoxBitsAreaCode().addItem("Cass County");
	getJComboBoxBitsAreaCode().addItem("Cavalier Rural");
	getJComboBoxBitsAreaCode().addItem("Clearwater-Polk");
	getJComboBoxBitsAreaCode().addItem("Minnkota");
	getJComboBoxBitsAreaCode().addItem("NMPA");
	getJComboBoxBitsAreaCode().addItem("NoDak Rural");
	getJComboBoxBitsAreaCode().addItem("North Star");
	getJComboBoxBitsAreaCode().addItem("PKM Electric");
	getJComboBoxBitsAreaCode().addItem("Red Lake");
	getJComboBoxBitsAreaCode().addItem("Red River Valley");
	getJComboBoxBitsAreaCode().addItem("Roseau Electric");
	getJComboBoxBitsAreaCode().addItem("Sheyenne Valley");
	getJComboBoxBitsAreaCode().addItem("Universal");
	getJComboBoxBitsAreaCode().addItem("Wild Rice");



	


}
/**
 * connEtoC1:  (ControlDoubleOrderPanel.mouse.mousePressed(java.awt.event.MouseEvent) --> SpecialRippleMessagePanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.MouseEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (ControlDoubleOrderPanel1.mouse.mousePressed(java.awt.event.MouseEvent) --> SpecialRippleMessagePanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.MouseEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (ShedTimeComboBox.action.actionPerformed(java.awt.event.ActionEvent) --> SpecialRippleMessagePanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JComboBoxBitsGroup.action.actionPerformed(java.awt.event.ActionEvent) --> SpecialRippleMessagePanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (JComboBoxBitsAreaCode.action.actionPerformed(java.awt.event.ActionEvent) --> SpecialRippleMessagePanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GA905D2B1GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E14DFD8DF8944711A8CE649C3E70F27285A7728B39689CDD0C93AEA689F966E26E2464A36F1104DC9C9F39F097AEA7FFA6BE4E8FE372C2AE5C9D8923553F3412D6BF98713F88818209C5FF5832AC9B040410E0A54BC800EC3051C8BB1256DE6D2EF7C7E879752B6A1E6A19DD4DCAC2DF14AFFCAE4DF4F5D7F7D5F5F5F5F54D4CDAAA59971F1EE2A9112414F4C97B77CA0AA4153AA429FADD798E42597393D3
	A4433F7DG05D2CBD99ADC2B212E7F4344941B74447EACA837C239E4A8B1E5BB5C97CB2B5316DF061BA863AC003A5B2F9D3BBE79B84ED19AA71315AB722CF04D87E8871C87E0E9BE0EFFAA2FD44347C2B9DF3BC7C831C8D2CC81363167149A70DB34F6FDD067812830E11BABF93B357A150043B6EB613A39003735C11BEC465D7D0D8DDA3B2B8FAE14B6FD7FD316BC9C4B50BF015F46E967EBD73B7412859511AAAD59518957266E8F065F98740DBA86E52F5767D515419107EBC0F139D5DF40B16E3EA987DC8E17
	F25DBD28B8BC2343815F183F3131472F8C3AE54F85375F6FD1BA15E0D09ED63AE52F62017E528AD10E361CACB68648816346B25C5F65206E5A613E9FA0D4C8327CB82FC963F57E878B2564AF5E97D516D505DC064D053AAC65493FCBDFD8047D473039C13A86A87B81B8AFAB73081775C5444BFF26E15B72624414A6005EE242A725A35E83659800854544636B0709473EDBCFC81B873EE6A908426312E24E5B1AE21D477622A753F6B07BD96DC59BA8AD01F1813A81D40079GCBGF6B13B7D7468D138B68F28AD
	3E51D11F37596FBF6DF185BAFDAE4583770D0DD02361AEA8033EG2C97EE1B67F32ACC78A1D8D992EE1788DC364B925952228BDF15D475D1E69F1132AD79C92CA5D96BE3D309AEDB7DB654DBEDAE6A2D846E11AE970063CFB1FC480067F3351C5982166320EE4BB652F3DFBE7162CCFBC43255FC4312E942CB5CF796DA7ADF62BC04DE52F961BA7E3A9FF51CG78A40055G9B81EC5B93D32A37130E7FE534EEAA9DF740DA88F8E5CF4F5800DF8E2827475C9E179250F47D27F913695A8CB8DD5CBD53F13DAC2CB3
	4E511AEFFC5DD4AFEB96FE56625C4E75615A2E6B050F7D6328E347EC1FE89B79E28EC7591A085B4E67B0D5604799FE21814F67F6ABDBDBD8DE8AF53BCB93D3F87B7A8C444FA90D3411538C9FDF9AE9A37FBB1DECA4896A4AF7A42670796D8E200F1C8B658400E5G2BGB68158F6C23B1DB447955E6353DCC75D067965344FF8DF022B92D283F207B7284A5EC165129CF04B839EA5A8E9ED1E7722DE874268DEE46BFB9046B82BF815002C3AFDDE68DD9ED54018023C4DE6EFA13689A82C3657BD2A40G23FE097A
	15FCG12C78E2A977DAED9D574963CBE4B07B6F1DD3E84BDC287F02F6EC4FD8DB01F5B8A777DBBC9D7F70208DB8A652704DEBE6EAB026BF9B0EE455358586A9EC4B664408D325106DC58AC2535505E338B748A905A8DFB639EDA239B7A4896DB737EDA2A7A4957CCED91E15E9EEED789FBA2ED310D0D3192706B812CFB93D32AG1CFBE91F7DFECE9F8E35475CAE113729568D724CFC55AEFE756C52E978984F32B1F2235027CEF3EDD2FFF8CDB754F17D7F074A769310EBAE40423DB487FF6733F35BBCAD879532
	46B783E0C80ACB1F915E76C9BF6EB54AF5452B36AAFE456B021B20E68B5F71E76BF6BA6493B634026151EF3500A185857E6F7D059C8FFD982D1E6A7F11554B2A9AF08F0C29CA0F222AEE6F30CE7FF346CBB04CA586B5D9B70F212CC9A063EA00F5C256618F0B8D76667479BE98737762CA526CF69D5B1F37C07B12FDB47F41F40C3B9AC4798EAB6B756969FD1A1E314D3D7853697B6A3DE20C6958424C46E84C40F5C07EB3DD43E70B7AF6D65F8FB24E85D88C309AC032139ED6B29E4D68FFFFBC7E020D9159FF34
	F5F32F40ED641DC0F49B178366B6BE9CB03771514064B6BC96B033E1DEF7BB00B27A463D06B5F1DFG7D65204F6BD5584294A4920F23B774229CEE2FDB3D6CF68DABEA0F7B26A2C95DF6346D9B4CA7D740FD131D7C677881721F65B79F13122E4DB30D37627E6AAB1679F6EE5B8B6D3A7F64BCFDAC08EBCD71A8232028965F18D76578394C5FEB78E0AA438DE65CC45A0A96086E83BECF2BEF8C569E73B5ACE62F9A750D8595877B5B9D00E0DEF1D53CAFDF179D72386AE0B36268443AB3F8FB44FE6C589B762871
	FF5510BB20F4F87DE35A56D5F1645211EAEEBB45525EC337A66323E63699295178483C99E2FC740CA8AE5CDBA1BC98701D76052AE4B63D8EFE69D682C33E4068C49E1AD975CC192865BC0CE471B9B9C7031FF62B4133F83A7A03F0D1C7F3721D2ABB9379E806502485C218BF88AB75926D151563E853AB405657GEC32537E1126E2BD6D9F5AA6596273F878F2043A3E7D3856EE311802560FF5BFBF1F670B7AC727287F07A96A37CED1DFE90DD64F6558225A506FA89F0EA990CE6286F8DE3921450429E3C591F5
	17E44F189EEB660E213F759876CE0E7F5D18399FC83B0E7B6587227F2C6B9992460C3CCF6E37964B5827BF609E05D0830381ADCF31B54F18270887B9B027118C57CDG1C7605D21C134972G89E558571D8C4AE7D821DC8E50DE467B0BA953E2C3566ED4A6355B88652C83515AED926D2A20CDAB006B00D93B25D954AE816A17C5ED674926F6EB20FE13C93B12F2EC97AB729947856ED106FB91B6444F2751B92D53E64C4B380289263E1D59CC39961716C71EDF7BC3586FBC40AFA827B570316B46982AB9987401
	621975737A1AF1235F67381747F3608ACBAE88E7D91792A2DBEA9AC7DE71FC2121B5FB78CA656B52447352991689229035E51C2D73DE9F7A07F6B0479631ADDEF2AB63926961CE1BB127332C60E1CBEE94BDAC5664FF4A2087EB5113E91C27079B711CEE16239AE4CCBA06475C0EB1550D8799D91519EF619648F3BF6EFC548B0EEDBBC8B91E47D2D89E8A4A7DGA1GFE5E7C92BB0762383100DB81405743472D4675A09DCACC398AB087E0BEG7723F9194760FACF9B18507B72A3C5FC1EA2DCA369721162D35A
	58AB3F7A08547451CD535C535C02984B22C3DC072B8E693ADCD5716534F5GDCC6F7A649E8BF1C1852F718E47CEA3F190C31D01FF0187433A70BE81781EE9352B33FF7B84CAFD6D570B83E3702F49313D58B57FB5FCBA88F700C98F7847A0C2F20F1FFD1E9B66E6A8A627721EC22DB8F3872A3C477F436995D55A3941FDD2EB52E6124643828EB58FF046BB966C8649AEE3D09F6978F78A5C7E88DBFB1DEE8D84397E055485EE1706434AE15906A8BFC36D6F607F0DC6633A55AA36F3B053C2F00BE5782EC81A8B9
	1A18D2FF144658981AB22FF5A6B4C9DE4B1BCFB9225E23DC2611237A796AB65C4782A498F0BC07732A85F53D74A84F61948A7CB906DFEB407339F91C2DC1AC5BAA414FD552F9E6D1C6E40E2A22AA7CFC579AD166F45F1AC06708A80FC45071352796F5C571AF534C019B22D8881D344D0F2F2975E1797EB9D55C4E92603A340AF253CFDA33B4DE1E2AA27F745F57D0B7D94792D36CG8D47A81773535B38D7F5C359839083908F309CA099A04DC1B6F07206199F8F3701E8CEDC4F87F03D7AB2E7B69FF7A650C54E
	C739A31C0E6B6339FE52C71303742132DC318A65F9G898E321583D9B3632DE682DDA4EF4B9CE636B26C59C53602DEAB64880E43393231D1444E1A8C6F65E6E9363DCA707AEFB3647557D3725AF05CCC0F3B2B108774E75D4709074FE54F0C0747A650C572B05714076C9C62A17EB85970763B08DB8D65F54749DE975C4067BD64973BFDEE2FAA11CF6C3809F12BAF609EF6FB895745F0033EGBB24F35C833722678FE2EF19678FBEF34BBCFF30605664B93204DB51728BBC1FF5BF0BB9B603FCA55509A99C7788
	43D5C039C960BE32A12E9F4AA1010BAFC45C82A8AF91384F30B37D8AA8A7D753DC1E3458613A894A369A585BGDA81DCGF38196812C2821365D2C6DDAA8275572D8383C16473A3847E38C5DDACBED3F19B24738C6EB74F90D6C1B59CBCD783C9B41B6C91D9920AC61F637BA0C17CC43BD46F3E8B3855ABA4B17A64FF925CF138782E33EEF8FABFF6F2582E693905385197344E8D32B7BB7F51BE4129F6A12C795094E594FE6E4EBED4E283E169A09FC4A2F0E609EE162D358CE4257D1B973A7A82F2B16FC62CA76
	DCED85141381B60B79CB329A572A2DAEFC8E4A6BA64E895F27FD7D58DFC39D5F27D384BE44702D86BC5F3FD37A69D9EBB754AD2923357C4C6D686BF05DED73F53861B64A96740D8586154835766B5B2522CE5F25BAD4E594552B1D01993DAA87061589EBB57DCE29280BC61FFFA75AFA66F37725CC635C558A7B7C3F7DC6DD1756076B362ABE1A2E57317D6CD4FD242EFF49704E7AC8DD5F4CA1DD77C15D32FA0A2B5F49B272D5A7789A4C6D0B9857FE82E244931C1FF638DE85701F8867AF6644C4FE63G37A882
	2F6572320DE3570B3177D711CE12CC7ADB8538F5GDB8CF53C3F27437ABBA17A4B974F34EDAFCF6C2F9CF08DGCEC39D1F535DF7D1DFA1D13633728DB15E02FC3499FFC099D282814545D336D25C4B286FEFB2DF5D8F771E17C957FF130FFB0EC73E619B034D297D95EC67A82078EE8D345B84309B70552F70B80F2F6F2F0D232F9A8A4823E0D298B2CA658D4C275B447BA250BE81E0B940DA0034869A7309C2249D15C36E5131D146A1676F7EA2644F836DC2226DDF87D9DB37B7226DF7595E11G6D960B365F68
	40B5FA4EA98FA89E11F6547472DB96FF71BA67D90EBB5D0067530919CA5265C72F950575C769C32A371D5A96C92FB7515ABC5A4B5AB02F078D8CE135E8334E027933482CAD2FCBC94DB354B1D6A44A4B4D35984FFBEB9A787CC82F52F9305CE6D6DFA26A57E41B55D7087A87CD691BDEA51FFCA4ECBDF6835E752AEE2F21D74D7749F9A678F840AD0940EB6FD9D859FE70AA779D6982FF1E615798705C27BC1DCBE7630DD0575BC83146CF59F9E4A914D78A5CEDB745A99B9BC92631FEC92C513B067B4C7EC85F73
	7B84BE06FDD64760B2DBE452432957C88FBF3ACBFAF03DC6FA5810234B7E9B437D1C1C5957434333BA06964B3258E389483BC26861336CF96DFAA8CBCD047B2FB24415C37914401DB9C031EC2F409D5D093891A84F913840CE0A17E3854E360FF41DA0F0DBF6A0EE93142D2F932E210AE86D82772DCC222D97382DB944CB0C40BD1BC1F1F51C409D4C217E96895C2EAC6AAFC9606666D2FF36B788171FC57D15832E618DFC1FB0173DF348FD54E7736DF075AA63F61174EA85E7654517B8AA6ACE54D5596BDEE9B8
	42F3D07163469CD4C34EDFC44DC15DFE037B03D86DDA15DE2A2D71CB8594B72CC0DECE521ED4530FF98491F3A2A30D0DE783EE57E9F95849F6B89EF77EC5C116C65FF0D2441D2CCFBF146782441F241CD9689065FB97FD699149B9676B266F70A577BEECD9FAD2FBBF6E241EB33BDA74E49A9FF3190D46ACBD151852FD8AF14F0779D754650FAD7C8C4A6BF7979A6BB116435C2ADE5F95D60F7C7EFB987D1C307AF483BD176D8787C936ADBFD8ACF93E999F757D4438D3DC26E55AB5699F36CBCD7F7A65B4EE8B15
	193AADFCB2B89DDB60F4DDD9BA5D3C146950E9E70B21A8E78B36BDF2FDA7DA68EC31699465242E30B9C0E67B1A89D71CC338D801DBE1A35A954D34864E33F5D1F59A7C40E942A5BA916702F2C8605EE0C2AD007292017BDDB9DBBFD0DEABF0BDD6DAFB1B85EEFEB6625ADB92D37ADB488F3731F6AA1463846EAD06AB571EA7E9E74A893171843F57927D5C9AB7C91D6E17FFB96598133DCFB255D9155B4186AB462383BE9EA071F8B4DDBC37DB86FC2E82303502AFEA654F5D7C2D5866536E56A97AB6C29350F483
	EC534A2ED62E473F593AF5AB9F33D226B1173672B11F026B5AD62EF3BE66F3F7279AB35DB0669624B9230FD9FEC69FD30B5DF3D1F61E1DA5593F11CBFCD4C37BF600D80004B3BC3F41693E4A762DG9ECA83CA0053FDD7579934DD85E0EF03FD234DC8D7F8001DCF95FC5E2C386819990F2F0F32BD8ED85B6A849A0E73B25CD5A80F34D19F4DBB2D46BE607C995F06ED5F5E094FE9678B5A4F313DF0AD14B736117E8E6F1BCCFF1991F3367BAC1CC14EF27D21DEDB4F6A67C94E4B03FB4D4F8A8759585D507E6AD9
	62C7E67B6BDCA84FBFCB7C7CB8F3AAFE0C731994414FAA83BFFC0C8A66B312813FDE0CEBE5FBF8E9BB58EEBB613A188F6A067255F66225B6EBAADE0C7A195B9E4E4B0276C8DE3E46F8D98878A5E25CD7583E1E8C65756D345F7D680AF1FF367D4F39966AA71207528E6EB34ABBA21F911DE2FE2C8F70EA8765CF3A53AB61FAC9FEFF6253D7C0F687FCFEA5205E60D876060066F32E964C6CFD6477E7C87745FB26534EA9B6DC8773BBA2F39F9D8C9F5F91197BF8DA44B00B204EF60E72489F32E7ABAA14E3819682
	A481A483ECB9C73AFCB83DDA1A62B9C82F4F6FD42EAB9EC31A174B77ED5B4C5E537EF6A6458ACB3E75E5E969A77A23BE77361D6776D02DDD7B1E5E4E70DC3EB4764C399F6AEE834483AC85D88930763C483525D7F179509C1AD5D59E9CE1CF7FC9B8FCA02F23B17940E5DBEEB15B1FB6EBFCD81D66FB1C9D707591F56DD03E9A0163E37407694F2F3509512EF1A6E3F03A5230EF9896E96D12346B2A28F4BF34194934CEEB3FA50ACC36CE70AF1D61F58DD0F6C660385F9C481D38675E907BCEFFA75F7FC2F01D57
	49F36B1C6E9F1D93F3C7AFB809AE2113670E16417529B03A0BDD66791FD196BB2DC33ACEEA3B6DE074FC1663A03637F7A526D4F5115FFC5FBA551ECC6F2062FD9F50F93A74BDF98E5C63FBB0BF93FB72D7324D77143FE7BEEE9E340F6BA2DE571D456F33223C85C87945035866029284BF27CCE843FD4331BC7A4EE0B9743D250B4EB7FF1B036BFEDA6F0C743AD50FF21A4DA80FE947726879E37D1BF466795E88FB079B4AB1G8BG76B19EA50985666C5F4613E6B89E3F3F08D3237907E72C649FF6FF650BD26B
	CF7BAD8724A85F913D49EDB02DDB5FB71C4F5237CEBDB2495E8475EAB745641F13097FC55D447F6E3B6C99BC1437G143CF52F7C3F0D69C2CD67BF4B25F12B209F57DB247356BD2FC9934F9A8E3FC79EF20CAA2A8C3A6E448BE56D788ED6FE31832618A57735E706872C741E550237087F35AC07358A4A6B8152AE507B9DAF08795F8D385E8B444BD2769E13B9AF83F250BD5858F89AAF444B85ADA2B4F2C34FB0CF6453B34CF997081F33E5B86EF2A82F8158F4C144F88760D8A99D2B819F4274F69B53151ABD6F
	5B097A0DF2EE2B292D2E3257569D515A7AF66A76723AE20CB32AEF0DD8D223580B35075B496E9EBD8F407978CD214EC77A3E6970B1BD7BA0B9F7966B77BDA57AD82AEDBAE3F13A7F5E2653BD1E39B7BA5DABA7B819A90F3C2F3D5BF5FE1ACB75FED7E7CC27DFCE675A2153A5E6CF1F6ECFF66AF46752E72AEB5E5706DD3A9C05FB74FED333262F577A3DBA5D0FF226C347630FE7989D0FB37EBC6B2094A5A605A8639C747566407BF02E691507854D19EC34C171CC0D072ADA1D13655371FDF9376CF15FE42FB176
	C0C36F30F616E76B065F3FE938DFDDB07BB955DF4E6A98DC7E1BB9511F115E17E37E0C74CFF24C5FD5789FB913FF6B70D0CE74EF9D9664983FF560733EE19F4E0D93FC488840BC00F800A5BD94F39E4DAD13D84CE992EF1EF18D63B3DA7CDACE2571732C51E5AD31CE7D0D5D9EABA65587FC2A6A9B457E89FF400A73257A7C8C29FD6FE7C59D855C43A3AAEF2A619DECCF71A8C38C4DF3C84F313C57D3A0D7F20F48DD25323CB61453FA89F72E121DC321DCAFF09FE35F1A37C339CF601E17A8CF65913838E244AD
	0372AA019BE7B933F5D05EACF01EDE6245FA11F0BF6C257ECA856EF88E0DBBA2F00FB17EEEC3F91E407DEDAD5146895C0BFCDCA8EF96380F583BA656CB9083DFA25CDAAB495BA0F0AF33BC30934AD7852E7AA20D619738B3D5141FCF3AC4FB74DF0AF8E195602C17A9CE7977DC0AD3DAAF533EEAF5E25B5BD01E8F3068B275312D134E004B8137C57471EEA7650A6B7B280FCF32369EA847GAC6823BC7CFD78B93F6687FFD5EE172267D06BEB408F5657E9395704B21D2E5DBA9D3AFB0B2D1E4670CF73553FAE57
	47FABCF7BAE3F11FD5B765B745CB7A4C4EE84DD3526D0DA8F33A1B0C6E293E49F32184EB7B687B5F575DB8B71B7BA24F7EED8C1F76F664597FC7A3B46FB628D35F26337F3387716C329A4A1BGCA5FC9CC2986E885388A608708810883D88C3082E08D40C60034AB907F82D4GB4DDA11FD61F0F797EE8B9976D4188F3EC81193F1B46757036BCB33D8FCFC9E72E77F8C657FDE5FAFAF7DDA13D473278BFF4A5D26F8FB3FC4C15C83D175DA53D47C25D26AB14BBFFA6F7E6723EB8A51D393C9556C83A3E2B134B4E
	656AE367824F55C8F9E5068FDD0D1477F9AB499B83F56B2E123C3F1A613ACA491F193C0D26F44EF779987DF0D581663E9B796E75136CBC32605DC8F917B37C42F7A3656DACA3F917C0DD69FB342EBA8EE3AE7A76FB34AE92ED687C222D8BFCFD03C7ED344F7E473E68FB7DEF77CD3D57E75859B7AC30C7775E70EB6FE6655A597B1FC3C3C1C54494B63BCD60BA025D3E209BA3C86D7D958B4A2042C05C27BEDE81C54A5F241A67D3EE32FDBF9664DE709E1D65644A6879141BEC4FDD81EDD709768F6F47F107FCDE
	1537F91C458852B558732ED14EA5A565DE1E03D49B7266B8D7CD57A273780F971B67DC7E8F0BBB5A21FD6FB5626FD336F07E92D8BCB0876A67DD23BD72E9F4039267F5ED6FE43C26CF416BB268B3D72B6363753158E58560D7891E12AA4367EAFF25BE7E2A5A29F415B94978E97D7AEFC9E85FDB6653D81C1FD2967B58205D6EFE62673E92F37BD8485A56C33BD37D74CCA00F6509BCD08E897A4E02F09D8F3238A9816A9777138D1C3DF8AF4F5FA265CA6E0FFCDE61E5B157FA40EF6EA73F75688C7D74B7E76827
	B7B03AF2F9FA7BD203CC7B529C966FB965C83F75G43774911FE2B48C9FE4B85F5ABE412F7D7674C1EE19C19A15D40BD53F13936325834EAA0D25E2CAE766E6DC0243C8F0A3837956A968270770D130A51B7393D9E37D7E9613FB4A2517BBA8FB23B348EC2CCBFC8F179DBA308EB0032F310F456621604BCCE437DCFC6E67F0C3DE1D64760FB44EF8EC65F0BFEF7F06A3DA873107939B36F5044F3E751A173F3E769A16339D3BB4F9EC23FB98CB1E51FE8D7A6F0EF8B5CE156A762AE3BDD6A08409FE3FCA13EDD41
	8189DF47789AE738BE8D57E0403D2D61DEBF047BA908BC62935FCE1CBE447C165B636165B656466D056DD56863BC63516D178DFCF78B5C5B427E1E10497E7A047DBDF6076C4FA36C6FB3F7F51B7B02613E626E6C5BDF732C0E41E5BE494E51A110F72E10793DBCDD4EE1437DC66B6C4B1C1DB77BB23F15CFB90685E26E5FAF219C43E2013B391772844B852EE9977BAE884A9B053E3EDD266B687B067B1E32595717E7D647606B2773B02E332096C3739828057D9EA10FA7CED6CE12F7FE79C4153D66D511F79E9A
	57694677CF1F6E1F6F68F4BFE73FF998C6578641CCC5D9B3B8C7CF995041FF3598A4F25A5F32F54B6F6D125ECF26ED7A63EF3068F47D3D53983FDE9F3FB0CD9F7F3799FABF1F2F3CB7B9583103741F2D77F32390775FB2FC295C0EEF15B716E93A4E515B7C13F532E78355E132BE102B53D596CCDFC73F4853694AAF5E1BECD9853AEC150667D1EB5226B3BEDF1B694C17ED01F5D96222757A50E576BD9B141BDC34DEBF615457681F996ECB1D333FDEEB7EGE324F769B2659B6EBF5BB97BE3AF1E55B138CDAC4C
	C363D77111B85A14C4E70CA496D33643BC773A682CB3B212CEED05FDF531670C1CA6194581B150BE56C5674B8F0BF47B3BE445456BD615D15E5E43ECAC895A2EF451996BAE5BCF12213CDE609EE67B09244039DAA15CE3ECBFE900F22BC27C756CE23FFD618BA878393657C5BC8E9B1E876E361A4BDB4FF871C3DF37C5FF0BAECF14778B6C9921767CF2175E6F19915C2CCC56288B1628EF9896E9356648B86DE543B33A4F5F39B75A7B776934BF34A20FE52FB8CE14893E965A75FA2584ED292C8B2262C019D67F
	83C3DE5C37F7921FD007BE61E55DEF9B7262B53B26CF67BD2853BDF0F93A3E0C7F1EEF6D5E574103AEFAC1CA8F86242209E3B5FF6A1FFE3A68DAEB09C532F4C899A3AC6E6D105247B1008E7961A4F593C08EFEA831FD4B3494108AC43F9DACGCE3EDE57187A6C97D3ADD29AF44A8F849DD29AC67550F7000F118A87829CC122079A389B6DE0FD2319979830D9B4A293AAE4D2CA537A41035F83A878A4946785C506C6713F50E51834B1AF190F18B1A50F786FD7C0F0512414A669492174B009D99BD54AE4DF0FB5
	5AD54962BC2BCA3978B1189D8F320DF651941F16B4C71482D2DE1821FC77AFCFBC377267170229D2C607348373AEBDCA00BDD2D6DC78F92E767B18EDD2369F3FA9470C8E4CDC10DD52036A8D0F6214CA06AE60EFAE85D54555CC8FD1032A344D09A39D4717040E374B4191958F072FB925B4AF7E1227D4442BBD32F778B84F013E4626BF25799463171D5B015FE246AF7662903D94BFD9F0F07F3935CBD3A5CB1B146371492EB6F9D07585BA24ECF5A42084C7FC9ED748FF12F71445FE56876306B468EE17909F05
	F5744291D6B07DC168737372566535C1BC958AC847D9CBCCF7B9C48BD74B089C002114C0070A3FCC6A8B140B3A7B762A07FEF8F67BD50B142289092A5F9B722BD24610BC6A765C001BD66602582414C1119FAC4512C1E5B85AC09E751FDF785EA3BFEB5A389EBAEB1352596F17GCBB63DD557586800927844220776644ECF7EA4F26CC7F12967ECB818FB03787BB05039BDC2E62A922CBBBE7D3D6A079E7B2FF7986BBA29AA6D631384244707955F68716621A137D7919D400CC177FBC4775846915126A8746036
	F3BF59BAG9656AA250ED6D7333FB56CEFAD7E2DE1189A06292905E95BA8CD7AAF32BEC4B2B333E405A3E8C3A13CBB242FCEF45C259ACD0E49A2594D0C2F1FE1731971A156BE510A90DD8EAA6E8189F1358CA162B07E2944BFD50C4E417E565C33B0C8D52789512F159BF5A1F234F668E6328DEC9B574C64ECEBA6B8DBBC13621BF51E338D0A4FD6259C7DB090B68BEDD167640FCE38733AF0998661F604CBGDE3A654D2E5E8BEFBA616E42191E5EB7AF1C21559876C2DD0B4F638B68AF4EFD50731FDF78FF4FBF
	77675C8D650B55451A257C55760F5B7E2CEE4CA2E53521DF7178C7648E4DC3B8255C81361BAA81E82BCAB6FD75B2DAF03E16C1704C3BF47CA062F9ED0FDF9EC47F1C6D12839F309ED01A0BD7246C214070G9BGF61BABEDD7E0D8D6426A4BCEA9C79D41D7D650D12A52F63D6BEEFC502BD5F057AEED857033FF20074378E229FBE054B1F6FD54A18F288E7C9A05BBA70F4C5CBCBD9AE37FD2ACD27ABBD27110DB7138D878C5ADE1A7AAE4D8529FBE79F2CA5B43F027A1FE75A8DD64141D12AD2C7A3CF2C3439707
	61B9871A9FE7EC78411D677117E96D6CED5A202973102298EA6AC4C37D7D7B0BEB21BFBE1E408824D4882BD5B882626C092502876A83A625BF52256F436F1678FB25C7BEB23ED73A797E0F22FEDF1A70A1FF2E337443486FD79A59F7CE1B707F3F9120E746FFDA063F03976DDD411ED15963D1E54F874DDE973EB7F87A062A686F2A1DBC007D87290DD62965248FA05F6F9BE87EBFD0CB8788C5CA3B04F3A0GGC0E4GGD0CB818294G94G88G88GA905D2B1C5CA3B04F3A0GGC0E4GG8CGGGGGG
	GGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG2DA0GGGG
**end of data**/
}
/**
 * Return the ControlDoubleOrderPanel property value.
 * @return com.cannontech.dbeditor.wizard.device.lmgroup.SpecialDoubleOrderBitPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private SpecialDoubleOrderBitPanel getControlDoubleOrderPanel() {
	if (ivjControlDoubleOrderPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder1.setTitle("CONTROL");
			ivjControlDoubleOrderPanel = new com.cannontech.dbeditor.wizard.device.lmgroup.SpecialDoubleOrderBitPanel();
			ivjControlDoubleOrderPanel.setName("ControlDoubleOrderPanel");
			ivjControlDoubleOrderPanel.setBorder(ivjLocalBorder1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjControlDoubleOrderPanel;
}
/**
 * Return the JComboBoxBitsAreaCode property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxBitsAreaCode() {
	if (ivjJComboBoxBitsAreaCode == null) {
		try {
			ivjJComboBoxBitsAreaCode = new javax.swing.JComboBox();
			ivjJComboBoxBitsAreaCode.setName("JComboBoxBitsAreaCode");
			ivjJComboBoxBitsAreaCode.setPreferredSize(new java.awt.Dimension(120, 23));
			ivjJComboBoxBitsAreaCode.setMaximumSize(new java.awt.Dimension(120, 23));
			ivjJComboBoxBitsAreaCode.setMinimumSize(new java.awt.Dimension(120, 23));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxBitsAreaCode;
}
/**
 * Return the JComboBoxBitsName property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxBitsGroup() {
	if (ivjJComboBoxBitsGroup == null) {
		try {
			ivjJComboBoxBitsGroup = new javax.swing.JComboBox();
			ivjJComboBoxBitsGroup.setName("JComboBoxBitsGroup");
			ivjJComboBoxBitsGroup.setPreferredSize(new java.awt.Dimension(75, 23));
			ivjJComboBoxBitsGroup.setMaximumSize(new java.awt.Dimension(75, 23));
			ivjJComboBoxBitsGroup.setMinimumSize(new java.awt.Dimension(75, 23));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxBitsGroup;
}
/**
 * Return the JLabelBitsAreaCode property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelBitsAreaCode() {
	if (ivjJLabelBitsAreaCode == null) {
		try {
			ivjJLabelBitsAreaCode = new javax.swing.JLabel();
			ivjJLabelBitsAreaCode.setName("JLabelBitsAreaCode");
			ivjJLabelBitsAreaCode.setFont(new java.awt.Font("Arial", 1, 12));
			ivjJLabelBitsAreaCode.setText("Area Code: ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelBitsAreaCode;
}
/**
 * Return the JLabelBitsName property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelBitsGroup() {
	if (ivjJLabelBitsGroup == null) {
		try {
			ivjJLabelBitsGroup = new javax.swing.JLabel();
			ivjJLabelBitsGroup.setName("JLabelBitsGroup");
			ivjJLabelBitsGroup.setText("Group: ");
			ivjJLabelBitsGroup.setMaximumSize(new java.awt.Dimension(65, 19));
			ivjJLabelBitsGroup.setPreferredSize(new java.awt.Dimension(65, 19));
			ivjJLabelBitsGroup.setFont(new java.awt.Font("Arial", 1, 12));
			ivjJLabelBitsGroup.setMinimumSize(new java.awt.Dimension(65, 19));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelBitsGroup;
}
/**
 * Return the JLabelLG property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelLG() {
	if (ivjJLabelLG == null) {
		try {
			ivjJLabelLG = new javax.swing.JLabel();
			ivjJLabelLG.setName("JLabelLG");
			ivjJLabelLG.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelLG.setText("LG");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelLG;
}
/**
 * Return the JPanelBitsDoubleOrder property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelBitsDoubleOrder() {
	if (ivjJPanelBitsDoubleOrder == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("Arial", 1, 12));
			ivjLocalBorder.setTitle("Double Orders");
			ivjJPanelBitsDoubleOrder = new javax.swing.JPanel();
			ivjJPanelBitsDoubleOrder.setName("JPanelBitsDoubleOrder");
			ivjJPanelBitsDoubleOrder.setBorder(ivjLocalBorder);
			ivjJPanelBitsDoubleOrder.setLayout(new java.awt.GridBagLayout());
			ivjJPanelBitsDoubleOrder.setMaximumSize(new java.awt.Dimension(341, 243));
			ivjJPanelBitsDoubleOrder.setPreferredSize(new java.awt.Dimension(341, 243));
			ivjJPanelBitsDoubleOrder.setMinimumSize(new java.awt.Dimension(341, 243));

			java.awt.GridBagConstraints constraintsControlDoubleOrderPanel = new java.awt.GridBagConstraints();
			constraintsControlDoubleOrderPanel.gridx = 1; constraintsControlDoubleOrderPanel.gridy = 1;
			constraintsControlDoubleOrderPanel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsControlDoubleOrderPanel.weightx = 1.0;
			constraintsControlDoubleOrderPanel.weighty = 1.0;
			constraintsControlDoubleOrderPanel.ipadx = 3;
			constraintsControlDoubleOrderPanel.ipady = -36;
			constraintsControlDoubleOrderPanel.insets = new java.awt.Insets(25, 5, 8, 6);
			getJPanelBitsDoubleOrder().add(getControlDoubleOrderPanel(), constraintsControlDoubleOrderPanel);

			java.awt.GridBagConstraints constraintsRestoreDoubleOrderPanel = new java.awt.GridBagConstraints();
			constraintsRestoreDoubleOrderPanel.gridx = 1; constraintsRestoreDoubleOrderPanel.gridy = 2;
			constraintsRestoreDoubleOrderPanel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsRestoreDoubleOrderPanel.weightx = 1.0;
			constraintsRestoreDoubleOrderPanel.weighty = 1.0;
			constraintsRestoreDoubleOrderPanel.ipadx = 3;
			constraintsRestoreDoubleOrderPanel.ipady = -36;
			constraintsRestoreDoubleOrderPanel.insets = new java.awt.Insets(8, 5, 15, 6);
			getJPanelBitsDoubleOrder().add(getRestoreDoubleOrderPanel(), constraintsRestoreDoubleOrderPanel);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelBitsDoubleOrder;
}
/**
 * Return the ControlDoubleOrderPanel1 property value.
 * @return com.cannontech.dbeditor.wizard.device.lmgroup.SpecialDoubleOrderBitPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private SpecialDoubleOrderBitPanel getRestoreDoubleOrderPanel() {
	if (ivjRestoreDoubleOrderPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder2;
			ivjLocalBorder2 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder2.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder2.setTitle("RESTORE");
			ivjRestoreDoubleOrderPanel = new com.cannontech.dbeditor.wizard.device.lmgroup.SpecialDoubleOrderBitPanel();
			ivjRestoreDoubleOrderPanel.setName("RestoreDoubleOrderPanel");
			ivjRestoreDoubleOrderPanel.setBorder(ivjLocalBorder2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRestoreDoubleOrderPanel;
}
/**
 * Return the ShedTimeComboBox property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getShedTimeComboBox() {
	if (ivjShedTimeComboBox == null) {
		try {
			javax.swing.plaf.metal.MetalComboBoxEditor.UIResource ivjLocalEditor;
			ivjLocalEditor = new javax.swing.plaf.metal.MetalComboBoxEditor.UIResource();
			ivjLocalEditor.setItem("7.5");
			javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource ivjLocalRenderer;
			ivjLocalRenderer = new javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource();
			ivjLocalRenderer.setName("LocalRenderer");
			ivjLocalRenderer.setText("Never");
			ivjLocalRenderer.setMaximumSize(new java.awt.Dimension(35, 16));
			ivjLocalRenderer.setMinimumSize(new java.awt.Dimension(35, 16));
			ivjLocalRenderer.setForeground(new java.awt.Color(0, 0, 0));
			ivjShedTimeComboBox = new javax.swing.JComboBox();
			ivjShedTimeComboBox.setName("ShedTimeComboBox");
			ivjShedTimeComboBox.setEditor(ivjLocalEditor);
			ivjShedTimeComboBox.setRenderer(ivjLocalRenderer);
			ivjShedTimeComboBox.setSelectedIndex(-1);
			ivjShedTimeComboBox.setMaximumSize(new java.awt.Dimension(120, 23));
			ivjShedTimeComboBox.setPreferredSize(new java.awt.Dimension(120, 23));
			ivjShedTimeComboBox.setMinimumSize(new java.awt.Dimension(120, 23));
			// user code begin {1}
			ivjShedTimeComboBox.addItem( "7.5 minute" );
			ivjShedTimeComboBox.addItem( "15  minute" );
			ivjShedTimeComboBox.addItem( "30  minute" );
			ivjShedTimeComboBox.addItem( "60  minute" );
			ivjShedTimeComboBox.addItem( CONT_LATCH );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjShedTimeComboBox;
}
/**
 * Return the ShedTimeLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getShedTimeLabel() {
	if (ivjShedTimeLabel == null) {
		try {
			ivjShedTimeLabel = new javax.swing.JLabel();
			ivjShedTimeLabel.setName("ShedTimeLabel");
			ivjShedTimeLabel.setText("Shed Time:");
			ivjShedTimeLabel.setMaximumSize(new java.awt.Dimension(70, 19));
			ivjShedTimeLabel.setPreferredSize(new java.awt.Dimension(65, 19));
			ivjShedTimeLabel.setFont(new java.awt.Font("Arial", 1, 12));
			ivjShedTimeLabel.setMinimumSize(new java.awt.Dimension(65, 19));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjShedTimeLabel;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param o java.lang.Object
 */
public Object getValue(Object o) 
{
	com.cannontech.database.data.device.lm.LMGroupRipple group = null;
	
	if( o instanceof com.cannontech.database.data.multi.SmartMultiDBPersistent )
		group = (com.cannontech.database.data.device.lm.LMGroupRipple)
					((com.cannontech.database.data.multi.SmartMultiDBPersistent)o).getOwnerDBPersistent();
	else
		group = (com.cannontech.database.data.device.lm.LMGroupRipple) o;
		
	//shed time is 0(Infinite) if the selected shed is the string
	Integer shedTime = new Integer(0);
	String val = getShedTimeComboBox().getSelectedItem().toString();
		
	if( !CONT_LATCH.equalsIgnoreCase(val) )
		shedTime = CtiUtilities.getIntervalSecondsValueFromDecimal( 
			getShedTimeComboBox().getSelectedItem().toString() );
			
	StringBuffer controlBuffer = new StringBuffer();
	StringBuffer restoreBuffer = new StringBuffer();
	
	//Group name
	controlBuffer.append(MINNKOTADEFS.get(getJComboBoxBitsGroup().getSelectedItem()));	
	restoreBuffer.append(MINNKOTADEFS.get(getJComboBoxBitsGroup().getSelectedItem()));
	
	//Area code
	controlBuffer.append(MINNKOTADEFS.get(getJComboBoxBitsAreaCode().getSelectedItem()));	
	restoreBuffer.append(MINNKOTADEFS.get(getJComboBoxBitsAreaCode().getSelectedItem()));
	
	//Double orders
	controlBuffer.append(getControlDoubleOrderPanel().getDoubleOrderBitString());
	restoreBuffer.append(getRestoreDoubleOrderPanel().getDoubleOrderBitString());
	
	//Minnkota only uses 48 bits out of the 50 total
	controlBuffer.append("00");
	restoreBuffer.append("00");
	
	group.getLmGroupRipple().setControl(controlBuffer.toString());
	group.getLmGroupRipple().setRestore(restoreBuffer.toString());
	group.getLmGroupRipple().setShedTime(shedTime);
	
	return group;		
	
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getControlDoubleOrderPanel().addMouseListener(ivjEventHandler);
	getRestoreDoubleOrderPanel().addMouseListener(ivjEventHandler);
	getShedTimeComboBox().addActionListener(ivjEventHandler);
	getJComboBoxBitsGroup().addActionListener(ivjEventHandler);
	getJComboBoxBitsAreaCode().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("SpecialRippleMessagePanel");
		setPreferredSize(new java.awt.Dimension(353, 378));
		setLayout(new java.awt.GridBagLayout());
		setSize(372, 360);
		setMaximumSize(new java.awt.Dimension(353, 378));
		setMinimumSize(new java.awt.Dimension(353, 378));

		java.awt.GridBagConstraints constraintsJLabelBitsGroup = new java.awt.GridBagConstraints();
		constraintsJLabelBitsGroup.gridx = 1; constraintsJLabelBitsGroup.gridy = 2;
		constraintsJLabelBitsGroup.insets = new java.awt.Insets(10, 24, 7, 0);
		add(getJLabelBitsGroup(), constraintsJLabelBitsGroup);

		java.awt.GridBagConstraints constraintsJLabelLG = new java.awt.GridBagConstraints();
		constraintsJLabelLG.gridx = 2; constraintsJLabelLG.gridy = 2;
		constraintsJLabelLG.ipadx = 5;
		constraintsJLabelLG.ipady = 1;
		constraintsJLabelLG.insets = new java.awt.Insets(9, 0, 10, 1);
		add(getJLabelLG(), constraintsJLabelLG);

		java.awt.GridBagConstraints constraintsJComboBoxBitsGroup = new java.awt.GridBagConstraints();
		constraintsJComboBoxBitsGroup.gridx = 3; constraintsJComboBoxBitsGroup.gridy = 2;
		constraintsJComboBoxBitsGroup.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxBitsGroup.weightx = 1.0;
		constraintsJComboBoxBitsGroup.insets = new java.awt.Insets(7, 1, 6, 182);
		add(getJComboBoxBitsGroup(), constraintsJComboBoxBitsGroup);

		java.awt.GridBagConstraints constraintsJLabelBitsAreaCode = new java.awt.GridBagConstraints();
		constraintsJLabelBitsAreaCode.gridx = 1; constraintsJLabelBitsAreaCode.gridy = 3;
		constraintsJLabelBitsAreaCode.ipady = 5;
		constraintsJLabelBitsAreaCode.insets = new java.awt.Insets(9, 24, 9, 0);
		add(getJLabelBitsAreaCode(), constraintsJLabelBitsAreaCode);

		java.awt.GridBagConstraints constraintsJComboBoxBitsAreaCode = new java.awt.GridBagConstraints();
		constraintsJComboBoxBitsAreaCode.gridx = 3; constraintsJComboBoxBitsAreaCode.gridy = 3;
		constraintsJComboBoxBitsAreaCode.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxBitsAreaCode.weightx = 1.0;
		constraintsJComboBoxBitsAreaCode.insets = new java.awt.Insets(6, 1, 8, 137);
		add(getJComboBoxBitsAreaCode(), constraintsJComboBoxBitsAreaCode);

		java.awt.GridBagConstraints constraintsJPanelBitsDoubleOrder = new java.awt.GridBagConstraints();
		constraintsJPanelBitsDoubleOrder.gridx = 1; constraintsJPanelBitsDoubleOrder.gridy = 4;
		constraintsJPanelBitsDoubleOrder.gridwidth = 3;
		constraintsJPanelBitsDoubleOrder.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelBitsDoubleOrder.weightx = 1.0;
		constraintsJPanelBitsDoubleOrder.weighty = 1.0;
		constraintsJPanelBitsDoubleOrder.ipadx = 23;
		constraintsJPanelBitsDoubleOrder.ipady = -19;
		constraintsJPanelBitsDoubleOrder.insets = new java.awt.Insets(8, 3, 5, 5);
		add(getJPanelBitsDoubleOrder(), constraintsJPanelBitsDoubleOrder);

		java.awt.GridBagConstraints constraintsShedTimeComboBox = new java.awt.GridBagConstraints();
		constraintsShedTimeComboBox.gridx = 3; constraintsShedTimeComboBox.gridy = 1;
		constraintsShedTimeComboBox.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsShedTimeComboBox.weightx = 1.0;
		constraintsShedTimeComboBox.insets = new java.awt.Insets(19, 1, 8, 137);
		add(getShedTimeComboBox(), constraintsShedTimeComboBox);

		java.awt.GridBagConstraints constraintsShedTimeLabel = new java.awt.GridBagConstraints();
		constraintsShedTimeLabel.gridx = 1; constraintsShedTimeLabel.gridy = 1;
		constraintsShedTimeLabel.insets = new java.awt.Insets(25, 24, 6, 0);
		add(getShedTimeLabel(), constraintsShedTimeLabel);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	buildDefs();
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		SpecialRippleMessagePanel aSpecialRippleMessagePanel;
		aSpecialRippleMessagePanel = new SpecialRippleMessagePanel();
		frame.setContentPane(aSpecialRippleMessagePanel);
		frame.setSize(aSpecialRippleMessagePanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * This method was created in VisualAge.
 * @param o java.lang.Object
 */
public void setValue(Object o) 
{
	if (o instanceof com.cannontech.database.data.device.lm.LMGroupRipple)
	{
		Integer shedTimeSec = ((com.cannontech.database.data.device.lm.LMGroupRipple) o).getLmGroupRipple().getShedTime();
		StringBuffer control = new StringBuffer(((com.cannontech.database.data.device.lm.LMGroupRipple) o).getLmGroupRipple().getControl());
		StringBuffer restore = new StringBuffer(((com.cannontech.database.data.device.lm.LMGroupRipple) o).getLmGroupRipple().getRestore());

	  	if(shedTimeSec.intValue() == 0)
	  		getShedTimeComboBox().setSelectedItem(CONT_LATCH);
	  	
	  	else
	  		CtiUtilities.setIntervalComboBoxSelectedItem(
				getShedTimeComboBox(), shedTimeSec.intValue() );
	
		//Group name
		System.out.println(control.subSequence(0, 10).toString());
		getJComboBoxBitsGroup().setSelectedItem(MINNKOTADEFS.get(control.subSequence(0, 10).toString()));
		
		//Area code
		System.out.println(control.subSequence(10, 16).toString());
		getJComboBoxBitsAreaCode().setSelectedItem(MINNKOTADEFS.get(control.subSequence(10, 16).toString()));
		
		//Double Orders
		System.out.println(control.subSequence(16, 49).toString());
		getControlDoubleOrderPanel().setDoubleOrderBitString(control.subSequence(16, 49).toString());
		System.out.println(restore.subSequence(16, 49).toString());
		getRestoreDoubleOrderPanel().setDoubleOrderBitString(restore.subSequence(16, 49).toString());
	}
	
}
}
