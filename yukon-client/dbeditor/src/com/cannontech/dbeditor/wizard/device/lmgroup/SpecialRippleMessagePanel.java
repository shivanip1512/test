package com.cannontech.dbeditor.wizard.device.lmgroup;

import com.cannontech.common.util.CtiUtilities;
import java.util.HashMap;
/**
 * Insert the type's description here.
 * Creation date: (10/12/2004 4:55:17 PM)
 * @author: 
 */
public class SpecialRippleMessagePanel extends com.cannontech.common.gui.util.DataInputPanel {
	private javax.swing.JLabel ivjJLabelLG = null;
	private javax.swing.JComboBox ivjJComboBoxBitsAreaCode = null;
	private javax.swing.JLabel ivjJLabelBitsAreaCode = null;
	private javax.swing.JPanel ivjJPanelBitsDoubleOrder = null;
	private javax.swing.JComboBox ivjJComboBoxBitsGroup = null;
	private javax.swing.JLabel ivjJLabelBitsGroup = null;
	private javax.swing.JComboBox ivjShedTimeComboBox = null;
	private javax.swing.JLabel ivjShedTimeLabel = null;
	public static final String CONT_LATCH = "Continuous Latch";
	HashMap MINNKOTADEFS = new HashMap(42);
	private SpecialDoubleOrderBitPanel ivjControlDoubleOrderPanel = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private SpecialDoubleOrderBitPanel ivjRestoreDoubleOrderPanel = null;

class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == SpecialRippleMessagePanel.this.getShedTimeComboBox()) 
				connEtoC3(e);
			if (e.getSource() == SpecialRippleMessagePanel.this.getJComboBoxBitsGroup()) 
				connEtoC4(e);
			if (e.getSource() == SpecialRippleMessagePanel.this.getJComboBoxBitsAreaCode()) 
				connEtoC5(e);
			if (e.getSource() == getControlDoubleOrderPanel().getActionPasser()
				|| e.getSource() == getRestoreDoubleOrderPanel().getActionPasser()) 
				connEtoC1(e);
		};
	};
/**
 * SpecialRippleMessagePanel constructor comment.
 */
public SpecialRippleMessagePanel() {
	super();
	initialize();
}
public void buildDefs()
{
	MINNKOTADEFS.put("TST", "1000000000");
	MINNKOTADEFS.put("1.00", "0100100100");
	MINNKOTADEFS.put("1.01", "0110100000");
	MINNKOTADEFS.put("1.02", "0000110100");
	MINNKOTADEFS.put("2.00", "0010010010");
	MINNKOTADEFS.put("2.01", "0000011010");
	MINNKOTADEFS.put("2.02", "0010000011");
	MINNKOTADEFS.put("2.03", "0011010000");
	MINNKOTADEFS.put("2.04", "0110000010");
	MINNKOTADEFS.put("3.00", "0001001001");
	MINNKOTADEFS.put("3.01", "0001000101");
	MINNKOTADEFS.put("3.06", "0011000001");
	MINNKOTADEFS.put("3.07", "0100001001");
	MINNKOTADEFS.put("3.09", "0001001100");
	MINNKOTADEFS.put("3.01 & 3.09", "0001001101");
	MINNKOTADEFS.put("4.00", "0100010001");
	MINNKOTADEFS.put("4.01", "0000110001");
	MINNKOTADEFS.put("4.02", "0100000011");
	MINNKOTADEFS.put("6.00", "0010001100");
	MINNKOTADEFS.put("6.01", "0110001000");
	MINNKOTADEFS.put("6.06", "0010101000");
	
	MINNKOTADEFS.put("1000000000", "TST");
	MINNKOTADEFS.put("0100100100", "1.00");
	MINNKOTADEFS.put("0110100000", "1.01");
	MINNKOTADEFS.put("0000110100", "1.02");
	MINNKOTADEFS.put("0010010010", "2.00");
	MINNKOTADEFS.put("0000011010", "2.01");
	MINNKOTADEFS.put("0010000011", "2.02");
	MINNKOTADEFS.put("0011010000", "2.03");
	MINNKOTADEFS.put("0110000010", "2.04");
	MINNKOTADEFS.put("0001001001", "3.00");
	MINNKOTADEFS.put("0001000101", "3.01");
	MINNKOTADEFS.put("0011000001", "3.06");
	MINNKOTADEFS.put("0100001001", "3.07");
	MINNKOTADEFS.put("0001001100", "3.09");
	MINNKOTADEFS.put("0001001101", "3.01 & 3.09");
	MINNKOTADEFS.put("0100010001", "4.00");
	MINNKOTADEFS.put("0000110001", "4.01");
	MINNKOTADEFS.put("0100000011", "4.02");
	MINNKOTADEFS.put("0010001100", "6.00");
	MINNKOTADEFS.put("0110001000", "6.01");
	MINNKOTADEFS.put("0010101000", "6.06");
	
	getJComboBoxBitsGroup().addItem("TST");
	getJComboBoxBitsGroup().addItem("1.00");
	getJComboBoxBitsGroup().addItem("1.01");
	getJComboBoxBitsGroup().addItem("1.02");
	getJComboBoxBitsGroup().addItem("2.00");
	getJComboBoxBitsGroup().addItem("2.01");
	getJComboBoxBitsGroup().addItem("2.02");
	getJComboBoxBitsGroup().addItem("2.03");
	getJComboBoxBitsGroup().addItem("2.04");
	getJComboBoxBitsGroup().addItem("3.00");
	getJComboBoxBitsGroup().addItem("3.01");
	getJComboBoxBitsGroup().addItem("3.06");
	getJComboBoxBitsGroup().addItem("3.07");
	getJComboBoxBitsGroup().addItem("3.09");
	getJComboBoxBitsGroup().addItem("3.01 & 3.09");
	getJComboBoxBitsGroup().addItem("4.00");
	getJComboBoxBitsGroup().addItem("4.01");
	getJComboBoxBitsGroup().addItem("4.02");
	getJComboBoxBitsGroup().addItem("6.00");
	getJComboBoxBitsGroup().addItem("6.01");
	getJComboBoxBitsGroup().addItem("6.06");
		
	MINNKOTADEFS.put("000000", "Universal");
	MINNKOTADEFS.put("100110", "Minnkota");
	MINNKOTADEFS.put("100101", "Beltrami");
	MINNKOTADEFS.put("100011", "Cass County");
	MINNKOTADEFS.put("010110", "Cavalier Rural");
	MINNKOTADEFS.put("010101", "Clearwater-Polk");
	MINNKOTADEFS.put("010011", "NoDak Rural");
	MINNKOTADEFS.put("001110", "North Star");
	MINNKOTADEFS.put("001101", "PKM Electric");
	MINNKOTADEFS.put("001011", "Red Lake");
	MINNKOTADEFS.put("110100", "Red River Valley");
	MINNKOTADEFS.put("101100", "Roseau Electric");
	MINNKOTADEFS.put("11100", "Sheyenne Valley");
	MINNKOTADEFS.put("110010", "Wild Rice");
	MINNKOTADEFS.put("101010", "NMPA");
	
	MINNKOTADEFS.put("Universal", "000000");
	MINNKOTADEFS.put("Minnkota", "100110");
	MINNKOTADEFS.put("Beltrami", "100101");
	MINNKOTADEFS.put("Cass County", "100011");
	MINNKOTADEFS.put("Cavalier Rural", "010110");
	MINNKOTADEFS.put("Clearwater-Polk", "010101");
	MINNKOTADEFS.put("NoDak Rural", "010011");
	MINNKOTADEFS.put("North Star", "001110");
	MINNKOTADEFS.put("PKM Electric", "001101");
	MINNKOTADEFS.put("Red Lake", "001011");
	MINNKOTADEFS.put("Red River Valley", "110100");
	MINNKOTADEFS.put("Roseau Electric", "101100");
	MINNKOTADEFS.put("Sheyenne Valley", "11100");
	MINNKOTADEFS.put("Wild Rice", "110010");
	MINNKOTADEFS.put("NMPA", "101010");
	
	getJComboBoxBitsAreaCode().addItem("Beltrami");
	getJComboBoxBitsAreaCode().addItem("Cass County");
	getJComboBoxBitsAreaCode().addItem("Cavalier Rural");
	getJComboBoxBitsAreaCode().addItem("Clearwater-Polk");
	getJComboBoxBitsAreaCode().addItem("Minnkota");
	getJComboBoxBitsAreaCode().addItem("NMPA");
	getJComboBoxBitsAreaCode().addItem("NoDak Rural");
	getJComboBoxBitsAreaCode().addItem("North Star");
	getJComboBoxBitsAreaCode().addItem("PKM Electric");
	getJComboBoxBitsAreaCode().addItem("Red Lake");
	getJComboBoxBitsAreaCode().addItem("Red River Valley");
	getJComboBoxBitsAreaCode().addItem("Roseau Electric");
	getJComboBoxBitsAreaCode().addItem("Sheyenne Valley");
	getJComboBoxBitsAreaCode().addItem("Universal");
	getJComboBoxBitsAreaCode().addItem("Wild Rice");



	


}
/**
 * connEtoC1:  (ControlDoubleOrderPanel.mouse.mousePressed(java.awt.event.MouseEvent) --> SpecialRippleMessagePanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.MouseEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (ControlDoubleOrderPanel1.mouse.mousePressed(java.awt.event.MouseEvent) --> SpecialRippleMessagePanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.MouseEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (ShedTimeComboBox.action.actionPerformed(java.awt.event.ActionEvent) --> SpecialRippleMessagePanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JComboBoxBitsGroup.action.actionPerformed(java.awt.event.ActionEvent) --> SpecialRippleMessagePanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (JComboBoxBitsAreaCode.action.actionPerformed(java.awt.event.ActionEvent) --> SpecialRippleMessagePanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G61ECD3B1GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E14DBC8FDCD5C55676257D58DDF657EDEDBF5BEC33E23F304850E8332422F2834DADB54CBFE9D119212222D21251FA9FBC7401FFF842C3F1C5F89A95A6A2AAA6CB5622220221111011329B975E85DE3EFF5EF71187DAFEE7E66E4C3D6FF19F203F6C377EBC5CBBE7664CB9F3664C4C19B3F39FE74A9F1E2ACBB6F11CAE15137F9D50F1DCA04FF1B3EEB1F6D1DCC5F0240ED37D5B8630011B112F07E7AD64A5
	9822F4C66E49BC8324AD108EFEAFD237895E33388DA9E5DF430B9FBEC64833B4C4E5744EE72B0D72D90D53BFE42F0567FA00F6408582CC87B0F237E4674878D0C82F175F916812B9AEE884AA734F349C95BEF784A96701E7A0C0553D28CCE8F62E1C9F87B8D4C68F781CFBC95992F826E16986151749659AFF974CA5CC78CD72BA44CBD5BF0541B2ED187CB4F39B1311A2D238304DA761F93076FC5B67ADCEFBF18B6FF0B89D125052DEECE996ACD649A996F7DA3BF951D2EC91AEDADB04E21B3DCDF4F6384A4B6B
	DCC20B15371D363ADCB6612460F673EDC2AD6F90ECD0DF41FD289D5F2599B08FE887708D4538E9E9C8F76D70BEGE068FD34AD13579D14E59DF2BE180B397B863FEDC9380F34A1A7C4E98B77555FD323C2D07DB3F05FA03A86C88F86A032EC5BC8E5D9FBBF1565572928ECA5249B81A4062FDF057001108E82883F1F4A7859C7D44606CB8FF3094D2312B37C4898FDBF11AD69FEC5462254317A4D58FEC658118D140D843EGAE00A1GE1G51GDB305DDAEC9F4373D033F444E937BB9D07DC2E43B60BF852E991
	EC70DEDE8EB9B26E34506294AD9CC7EC5312D624A18F0538115EF60900346D9B0E5AD24869111CA45D036D4337EDE1D387A7F38F10BACC8FA8ED2BFDG696D0BF42437D2F857497592FC83468FD161C9DF4D463600522110E78A25FAEED8CFE529515F459977BC183CDAC31621CF85A7FBC2098C03C395D9080EEFF4A29D0783FEBAC0BC00E1D4242E9020EA945571C85B3E3EF4DC8DE3C1F470363A0EE697AFCA07BB2CB60BA04A3AFEA53BB7DDEB8121DBF855F4C4AF417B54FDB46B41511AFA19957C3F4916D1
	C49F17C7A9FAA13CBF5C680F7730D1BDEDE3BD6BC39D9E932123C89F26B07C9A0C0FD061C95F7E9E0FAD141E84F92523A3F524FC94AEBFF4B4A93F1A5593CD6AD761C9BDE7B19E27A12F6841C89D695FED97509CB99852A1G63GE681A4816404C139B05A476F58F677F39C552A7A17500E36EF04276011C43E5A6116F8C70BF006972DFC33CDF0F3F21931F6A4DB3397DD849E5FAD4063386090C4DE32BA9DD0BBEF9740185C244CF87B86D4C694F0EE3D55AEG833B0B2375CE36E74153463B252FDD96DE9214
	92A4FF069D5944C57E8C548895203E8EC37A3A04675C9AF8EF8F233ABAA5A2DC842427B33D54BBB26179859837E0ABAF2F3436A0B1F8310B5A68D769C6F846C1F96921C8DDA240003F50713928015AE1653A7B39222923B46D90415A0709CD95BC6CEB077F417557G5E8690889072B0DDDFDFCFEB00A762F7B5E3C48DC8DE741464A7EA077798CC42BC522E31FEDA8FFA264A4F94D59E51FB389B596EC4E8D7AC00E18C557DEF9DE6E21307F937C02D70CB918CC830A8BDC14A86BA519AA3DC949CD22560929C96
	F8F14BB670FBE71AE21F2DCEE6BB37E2BC1A2F0E008139997E8E67860207BA5456CE736F41793CA40956668EC92893A4496AE8D3689F4032383D26C2375C5647A554D6B334318C200A35354C152532339A2773FC072B9E0DA059DEBF436BF2A3141746507EDF3D8A79DBC3D9FA83CEAB793726B648FAC6E52E357FFA1F23C7B39EA9BFF17D8A0F67705C16AA275398FEA619D321ED31G46C7E83B1BD6B5286AD0537DF4B2F5F971C8D17179A9F8901B58F9413FCD6F3D20ED53E59734ED7A738B3D5B6C318BDAB6
	CB72CEDEC0EDF3F6BAD4E3607485B4AF36B89D8E818FC4C64291FFF9D1BDEA0755E1153E31DA5A84294E5AADF0DC53A34816EF46F3EF993C57BCC2674A4E7769DCD950BD020B78AED0532F9A7A677B12039EA136BC6691E52EA4B25509489E841BE087C59DF1F6B8A4027F964F6BB25E1D02F1F99FDEC23405C7400B971D36CAE7870CB5BC37E05FFCCF115D5961960A715FDA913CF641D278BDFF11AF66BB25E25CA545A7D15ED1743A433CEB5767E63F0EFED12BD5942A9D2E8EF90DAA5CF1E6479E0E48716B6F
	BDD80E3AF6410256AED8FE1B1D071D1EA29E2B3518BCEA853155A95AFB4AF088E7DF2B90FB098C71D95DD806931479E12B64BE0EF6AFBF0B947BB8D9973BBF7B21279C07E069BF82AE424FA2CAA9C75724A59D481626030D4581689F257374D4916553F9DADE0C0EB8EDB6B28CA02F7DD1EC6369A6155D66BECA763F6BD97E63FD644F6FA3FF639AFF79C44E275C48EFF08B97BA84F04750C2720550C5FDAAF726CF5E995E562178EA135DEB60E9D32DC184BFCE529EDF93A4346E1CE775BFA72D62104FC56AA473
	C1A80F6AF409D6BBAC59E8D1157779759B557B7CD0E8870A894443D3BFB6D2C7E89766A01D77360F8E9B0B6ADA371A4683F2A1DD8AD0BF1654B7E42C3C2F4765A633F2DCB87841617E4A8DB250F2E5D026D6231CAB9C159B41766F3B99AE8263964302F03B1E6ECBCE9A55F1880BBBC8F30E437C43C97DD1613E7B358FBBD13D3100CF8C27B6D95521769D8E395DCED09436C6123F3CC3BD7F91DCD2C7BABCE18838E16FE691BC346F13AFA2D911BFAD23657E3BEF67E7DC4F7D41D19C79202E5911CEBC6E6A1DE8
	3CD601799CE14B43992B5049D1BD7CF0CC9D43884F38B5F90D9FBD2CFD0C343F68B1C58F717A31FAA2532D65E8DF2A9513E941C29637F5D80BBBA4ABF25CF90947E31DD88C09F5BC0EFDAAEC6B0F5118469C933271A0C80783C483107D55A72B298F9287380247E15F0047613AFC75B8ECFC1C78E78361C966345BD76F0567554FDDD46F63F6E412FE72192A28AE6F4A2A10F9CF9CF997F770CA37E62CA5A0E3E0725047098EA39ED7F4D919FB2F3E810034F185EB635AA7A2F515CF50B6BE1C2955464BCFD05D0C
	B4D03A418847687E5524C547C550B57F1B3D6A719091B3546FF8B0C590198BA3FC47C3FA976A43CA40B7C450717043458D2A71F09AAC10F73441AC467C2A4E94B2DF49695D1D29F43E62687CFF3C9B49EE03BA83G06830C81184EF87C25334F1848D1CFAFB11127D9FCA1D1EE535AA7959F5D8C6F25GD5AA9C597FCBB8EE5778A4597FEFE078C1989F2042133E190F6D992543A02F62A96AA39FDC6D9B5F187814779EA156A7CD68CE7420AB769D33CFFB5391BBEE33ED21E395D93D27585D897EE7F9B9DB6B65
	B1D919EF1065ADF81A6E4BEF3F046661GC887810483CC87C88248999729BBB80E76C92AC7EB0E726E93FF93143247A36D648C57261F75BD68FC7553B84E1B0E34FBD1A6EAB79A9752B85AC7E157A843D3FD4A9022A94345A6AA4338F1D47733AFA3DC9224577E156A395933CEB53EEA1DD6074446D6C697DA7B1D22354D6A20B8934635B8C53C01A038AF3B7D6FED4EF4EB6FED9A3B3577B64D5D3D6F573F6F763777A1FB6B19F89D480576158190DC826E0F9AC8B7B15CE493428D0474B006DB1A0DE3C6101E4E
	F0038A91AE8E527AE7E8DFF6E71B61198369D200AA00F600G009000C9GF12C6C2FF0D9C3E4242EB01278A7D511447FE80FA4FECDE0A4AD9BEF9A206AC7D4AF1B73FD6A463E63B37E63G253D64E9C10E2ABC11A5ABDBAD0BFAAF0C56D8E4B3997258DE4F753E9FCF6D278C945431072DB8BDFEE38636895838397120C79E001C7726144DE96CDDCF71F60123FB91776AB4394CD149F9E49FEBE3F5FE038F6F90680B08C8220BE8F84682A4C5FA6B529855D3378500AB73414B7125CB7E474648CB5AE3A36C9252
	2F5B59A136883E76BF76D28E4BD3E63CEAC93023A64B3EBD2617F891766A3E744FE2FA12670FBE7A123FB1C674F9402056E7A9536732CCBAD755E8682889F092C000AA0F5437402B3E7D2C3ECBCD343EE19A750582EE9C40F4D59E117F354BE85D743074DC1C6EE27C16ECC47AF109C22BA0420E0F04B3380271E83C27EF42639D6ACC0C22FE5F1AACB4675978AEE787CC0E51385C00AC3A57E90774G00E000707144AFA26B6428CEB4D6DAC55E8E6AC3DB9EAEF482220DB5D15ADCC817G548238G86CF20BC53
	B6A2DABB6F315ABB6CD8C2A25FB4BC3FA5C2B97D33346C30C2DC566A70A99B06672E92A8F71015FD309A5963099A3ED9303150002C1777701AC172EA0E935C61B26433760CA6D0DDDE79B4532BBE3A452779460AECDFFA2508DC661EFADC863B732800AA00434A44A623BD30EFE4056469D256297230A89C5DDBBF1D2D76DB5B1FA57D9378AC75EB2BCDDA7943D97E0F862D7CB0F812BD6FBDE755FB5EA8B9BF8E1E5CC4DA475FB3346A4819C857187358CFAA02F485437D308D1F6BC35A43F0E75C88B78C52E398
	6ECEB7DD33A6B25CA4BB4245C0BA1161F29CF4DDB47C0D62823650B5B017619EDE0FF0B6C88FE43874ACCABB1461EE7BB7258DE138A79B29ACC98C175ACD57CF63F394F7F3932D2F006196B6517A4A98AE14277585B05CF01E56B78CF0214F213B8B4FA0B3106DE4DE26991E8E21534CB6E415E0948EF4E0D438EF7F3EA2733E83E5BB481EE5F827FA4FD2167EA73FFB160467489CE3F8DE5E43266648BEF9F096BDFB2F00BC4F73F46C6FE9C2FEAE731111A0656547C52B65B05FD603E792622745E35DA27A5067
	693EB58F7B79311066A6011DCC22FBAC4F07F42F9D72FFF7F1B583C6EB5E9708293FB539E4921133FE1232472AC89D2BA7BC57E7D31E03A1BFEA92429D749AA7C8171313092FC9729DDE79E8FD00ED2DAAFF38D7BE12F71E977D942F7CD495BDE95B339F5036A5BD9B4A599E9A6E77AE04F1B2E9D3297C0CF8E19397B265DEBD310539290AADF497764796881DE935C297E96A8F9D6967E52DB91C66DE88CFC3C45FAB303ED1FBEC13695D0C81587FC4CCA7B15CC3860AB3CC21F634EC071F7A71ECC968DEB9CB6B
	2F18C2ED684CCE9C7B00F4B8C074944AE33F11160D1BC257047F49C76B9B3979C25737DB73693CD67B824CE3G21G63DEA0BEAB219B0267A891B9B522A0923A7B36D13AD9D0B68120A2BAD2D79F2D26333B31FFA320B82BE02131A932E65D04673315704F86B484B78163AEC3BAA01A567126FD2D3A8E70DFA222D15915F6943F8CE33407703C271F8A6FGAE74646E58D229E1D7EADFB7C58587012696A0DB36DB4BD432AF27E77FD95C93E66D75B7864F25E3207C3829D41EFDF83C47C3BA0949B37A5FFD4913
	2A122770C5EFF98E3E2848C3F84C4773F095606BDF24FC0B71BCBCG52018CB7964F39E3A0BD6EC5AA0B1E6FCB9635FE62FDE451CF7315E5861E2F0D004F1DC6790E4738AAC857CF23F35B736754F331710F8149349EDF9986CCA363BEF01AEF7CE8959EBF91001FB50D6EEF5768F742738C7FFD4FA8A7A0EBC527CB9025AE024511F359779C19F5ED77DC422F116E2D2B26A331221B71DA112452BB415F067106698A1E2CD785A63ADE19A04FB31D46868E60BBFA33A01D88E01C817BD500AAG4B8CF6FFC2DF42
	75911329F73AEAE033E3D3ED5D69FE725A6E7FBC391A2E8BE10F5E4B0D392949EFFC59B3035843D07959B0E593461376CDC8C76D0B023CB9G061911BAB3C0A9C04DCC5A3EE17AA252BEE48E07A409EFE947D1F65AB89478D6504821A7EDDB196D3B0FC450B4D33E0FB1D3FBAF9EG78E1BEF921109EB7D3AB8EB44824565FF439CC1C7C64DE6A490350BD6A95BFB249658A6567C13FF4F34E2A5BD48B65AC2A329E8DBABCA6B5704381976603A7B6BA812FD1D1AF919BCDE5782998BFCB05A7365B3813462663A1
	2FFE960D1B149B3574BFE69661B9F116362CB100CF7049B34C06F9EA36B70E70FEB21F5E6DAA017C7659F4FD2E5C7AA957F3FDAEF6597856E23BA0713672721368C1F7ACE426A9783A7A34C0B671F23CAE4DCC4F1D064F26EB7884B3BE3704F4BC0061E59A23FFE19B15458C38061729ACE370390E36AC4D3C5B5AD2DEFE98BD28AC276515DBAD8D0D9FEE59CE630703DF26725C0D4F6423A09D831078B2BB97F1032B476D5A83760BFDA997AAA62F0DFF3567F3FEFD29BDFBCB0A4CFB776D104BE6BBB8B66EBF93
	546BC14925766494BF635E780A3C8E3C227866C40E9757A9F27C3025BFF2646332E0879C7D977F2F1EB85A4E4FB394F9DFDDCB67295C7B6E66AA27B5A53F6FC75EDAD94E612FA86BD7E17D5FD3C91D0F999519DF4D680F4C04AEE603C2B7785FF97E698E6CA7E41AEDA5F5ED4ED25A7824C929F7C5D7FF6AA5F4F33295BA5E50FF3A4CCD8ADD6EFF2E354FC8DD7BF314F6B4ECD66A3D056F3FDE1F7807C2774B337D21A36B8DBEA21163CF8D2BBF607C78A0302A1C003A3EEC7E9E7C58FA3E0D512CB1A05BE0B1B8
	621A48F919B8A6016E63D8F91B359B9F8F57C1C1C79B198F0762BEA36FF72A5EBFB6E94D13BF95909EC72EAB8F527E0AB47FB15563E95AB15513E95A678DF5E93D5F25BA17667FAED5F31A7AAE9569772EDC247069B03693GF2E2A2F5C5G95B1544708CF5B4EE19FC3433FB8EAE9C3B1DDF46BD6227CDFC8775F561969FD5F55FDBD9D5D8DE8F6CA12530E6A2778F969283FA4278BA389EED1BA5211E8EDEB17C8D1991F100EE3C2C2ABC613B88C793620915AE50B2131191BB04E8369418CA762BDE29024A398
	EEF9AE42C5C3FA8E433599E87CA71161A270DE356A55C8DD532B94B78C6F1BA5C88FE438CB69D416218CB7AB1D569744F0138D14EF824365637B940657202FDE2338019D14360061D61D43FCA19D40F0A331ACA1100EE038DDD887F3A01D44F08BF19C5678BA58426B9477C08E65D141F00F607A86C3BA78F56A5BCC5A09F061100EE13817B0CEBF87FC74B994573C332FF1076A70179753CB1EB236AF75492337FB23FD1D83919DB462BE2F01F6B54E21FA0943B8972483984E3C0E5A55B006BB1E01F021100EE0
	B8F1A755F3B443B5245198E7419BD4FF1179FD6DCF4A5E50724B2776C91727294B75E6DF3A7AB7FA6F83629BFF0EFD3F76B7FC77FB47B1DEFA43F73FB749CC77FB83A0EF8EEB6F0CED57565EB77B2453EE2FF93B96DD55DC4223911EAE0001F3FD6FC8EC427749074E75ED2F996303667A36F704C85B9B8AF926B7697E768FDBD1DC4873A61D079FDC0B66E1FFF181F4BCC1D6D4BA2FC7662138C8A0508783CC8418831088E00C85BB82A883288130GDC86988C9084B086A08AE096C0FCAC65FFE3460EDE784B01
	E23C98083C7ACC7E06DC7F6BC1C0EE5F6B416F705CAB40BCDE5F65124F7B7E100B4F79DBDB5D82DBF7EE4BB5B2DC353B566936A2AF0378C1E59B715DF4E0C4FC243B4D1014FD245B7D1CDBBD0467C57DBCF81FC7778D3F58667F9C6EAE3CEE9C0432D52C7CFA5C072DCE07C44A94EC45F3B2648F18C763D7BF9AFA0BDF513B5DB4FED52B0A6DE11B19679B5B1BE6540E6DAD46F3D2B8140FE272BDE87216EFBC1E4F93A01F1B4F4EAA5067159C11F5D9FAEF322676A1EB895439C64EA37CD660756DA0602B66D319
	BE69706E2BF95B957E37F574252B553D70774CA73A22B2E4F1DB4FA1BBEAF61203BB928FAEBDC7634183217CB00069GF173497D87F90FE86AF93EBA0B1D116A97107355DCF816ACD053D57A3135C6ECEBD5D036FE81AD2B5F615F56366E4031D1A89B38005A51B3B9FD69A6CD251FB1C0B7F181518DCA4740BB3ABF7A524A15AB897FC9A6EDBB0A45B692876593192C314751A6484FEDF6D957F99F20B230ED07D9C368D1061CCD2EABD21FCD9644915D8D006710B8FAFE79D116D61990F8C644D1F9CEED27B6C4
	E49E04EDFFBA644FE1E55A8A357BA2FB833EF384658C8BE97C379A2F5D25102ED8C8697F1361BDF6A43C165BA05F33107649AFF67655A7EA70355760053E31699B309F90867888GF21FA4A28B590955E133BA04A364EBB60E7AA69F6098CD9C14CDDAC85751CABC1E497BC9557B0B666B3F57DAFCDDF910B69F58CE7DB163A26ABF5596D2FF2C0061024D5427AAE3383DED18965216C5D4DFDB5D0A0EBED43DBFA0DEFFFDC5DDD79EE45D7C63D6B41739E55F0160DE4A733FE63F1657771A3DA0CFFB8F37A42F67
	9E6E6DBC6DBDDCD21EFA8FC7F03AFC343E34012F51404A2DE238EF99EECDFE1A0C7B46EA115A99FEC3FE3A0C2F9290C30A5F140F646A44388699172B42FDAB633661F3C7E8F23B135DA57C907F3EC12B55E6A3690FF1992B835C90260F5DD8C62B0BD749DD4AF0C8EE3256EDAAC076A54FCF5BFA09C1FD323F483C671FAC86D57E01C297175BFF3A67F7AAF4678C5BFC690E4164D6387D90F42EEDBB50417F3DBB182C875115FA797DBB0FD2CF11297F7C47F6ABF44E74FE70AFD578AF3D24708F79D129A72B636A
	5A717C95C4AB476B4F51B8358B46FF70A29A27FEAC9D1DA3756B2EFF3DD532890731C7C16252C1F89F0E6A09D9C463526F62BB98B90B41BFG28DACC6364FA763B88CD009B3A181E0157307B8F139653BA3AF1D9C3FC244E8CD096CF7D35CE1D220B57FA3DCFD08A1A58DB3ACF3ECF7047E405AEA827BFF47D0BBD535866E3A9CAFFAD50AB3C7E3933BF3CC8BFC819277C74C3BFFF87C365F79C364A1FE3486787C70BE8BF5546D39DCB1978DEBB2407830C09277D71DD96ADBB0915BD1B077BE3897487C059925A
	9F6BD7A9ED1DEBC4E536230BDFE6F4732BFCBBA933C7F517A3FBDDEF3167922F71D3EFD0688EE674FF5C0526ABF42DBB2FEE3C3C30C6694737D567A62E547E7017E5B5A38330CA021D78B52771DADC8BBAEBDCC2FDAE8BDE47DD103E4CF0D770BABE98524398EE9A260D02F474926A1BD537616F0B4051C45D6F30D0F9ED686A1F3C36B61F3B36F8022BCFBA6DF84288CC47AD6D5FBDE753D27ADB8CCEFC7EDD3854B71E60417852253E71849DBBAF2F003C2025540FC93F465F414839C63A2F2E1A0E34EB911957
	167936F7B9461B167936F7G1BB34D10B7F099ED6F09A2B57F58E55EFACFDA56339F881FD8BC660D893E7C17E0FCEE02AF7F6ECC4A3F90728293A8FF0B577D087884EFFE7A377C71FF8E4FA3B9EF79721F067185EF7972EF4A237CCBA0EF48DBF45E79ADBE93137779E6B4D7EDBFD03C9FED26C97EE855B9599705C8666D27406393374B79CD9B157C5B4D3D0C6DFDE8ECFF4266169BD567E19F357507CE0E1D63F5B29164B73ECD7D71BF7D08F08510AEFB1B6A35C3F5BE74236AFD754FF0D6E47E99F8A4E4ABED
	FACF75FE13661D0D1F16779D57158769D39E2F3315501F8D2C1FFF59CDE35E17D9BFAFD24D554BD56F83B22F3F9EEE3D2EBC64B320AC2A0709CC8FC519D48F71CC8F51F9CA5BE72B5EDB732E3F9E2EDCD79EF23C729C7E6E8C394D486F60E82CE3B11E8FAA16C76AEA1653F57D219FD3E9D90E6DA17019B9497794750C677D164514AEAFA7713CA1708C86C067D1A4CEF3E7775544E9A200B6FA3992BB0BDDCE7A6A1115ABD7921EC1ACC615A073DC1B88FEE1A2B97FA2BC0FE4DECD5C378CE8EB92951ECD098ACF
	22076DDB94BD5C7CE3FFFDBA3206BCDCC477BDB628B7A8117A39AB19CFBCAB117DB6DC97DE075F09549581D482DC5DBE60A83AE6AE731D18C579B6C2BDC35E21FCCDA64AF762BB14EF5786D4D63FA2D2178BD03A62EA793623F019EC570F95DD1B6F77EC1FF45A3E1FFE97222BD951BF5F2FE985757D3E6846E7E4ABFCFD01FA0C9F30425797185DC5FD01C0480BDFC16710A9FD5E5554EEEFCC1FF45A6D5D0C6F7E553F5B3F76363FCB5B3B90777165F7FD5B7BB646873C6B5B5EAB9BE8FB07C0DE623BF49E5D32
	8B1F2FA7C56A24A40A7B8EFF2B9DG69E1C9D4AFDFF5ABB6F1D6757EFA57751FDB132EAB8F5266929355C3B053433BC62A07F02607E59B1436A7295E87ED387EFA7853F565C166433D3B3457189358CE22C08F51C9F40D395855F30D7995DEF7894D37D8277A77607DBD6AEB0FC4530EDCB69D1FD7113A6A3AD0C2E39E3640B46CEC030938C48EEA915ADF2A62FF0B0D7D25A53F219A3565B3581907AC64D25DA21759535FBE741B9953C23E2BB4A5F349555C2AF69C572C66D2BBD100546302D184762F635D97B8
	9CCB6BAD0599FAFCD2A21741F8D66360E74C45FD65A92F5F1D124C6901A18986D7F3FA9451853EA2611FA2B9DD08BBC783DC3FC00D69055397B8051679D5B245DF10A9E91451CEF9983D1A632A5E5AA6F12B71970465E609CB2EB9AEF1EB508701E6F458D2EEE6C5512AF348A7A5F26B3CBA6F2FF76E1FBB7165B36E94EED5B537991D9D5589A23E92A7D850A742726F849E6352DC683BF6F4AA859AF363C72ADB6A3289B51C2975B47A6D9C37A4D88E51CBE0EE094B2EC11CF623A0646EAA5E5DAE21007C27B51C
	5E01FE51104BA459B65E51361B5C9378942BDDF728824B0B67D110B78B4B0BEAA9E635E40D4D78E05B09B9E3D23864E3DC3A4D49DB0E71AD12D32C665224F6D1F037BBED960F6BDF24A2837E099894A352C3F5DBD873D1E30B6B850F4404BE6F39BDF0DD6C3AE34920E2115B0DCB22A33BE2D642F2241D970115A0D6CB68979A1DE2814B3BA1CF7A70EF47B7B5A6F3BA3911C875B99E17442DA2C1FBE61228514547C0EEE9664271F73DF4B0BE8E080EF12978B7B70035D1A9F52A435EAC08B7055C32F54D1018DF
	A149DC28D938DBF3A5E82F48BB5C6877D320F233CF5BE8969331787763CBEE993162AC96D1A11538FC5299C03A3BCDF05AF79FEAED35BA84D681748CD43F15D50F4A947B1449747CAE7B4454154DE0C915DC0A3D24847F5D037F6EC5FF77E04C9E0C5933973AA71E6B751FEF3E0736991B9FCE18112DD0742AD65EEE35F541CBA51E0FBC883FDB99DDE8F24F116BCA5798A49B3171B5E16CFAECFC887B0F1ED60450F9684FF67467FDDC6C837C37702A5B0428BE165B822C514BAE6855BAD0AA9A082D3840812591
	69B2A11AA652D4E22B474C4FACF68593DB2D784F951953D40ACFE30ADF8622FE2D11C294F41F011E866FB292172E842B3DFA71185FBE7D2FD3CE0D221CD5AA65EC6EB1D91BFBFC04F044E9F30A4A4786676B5E39E3697C39B713A9EBBD9B2138186E4F1BEEB47EF6DFC7B2E7B80606074D554ED74B33CC8D3726992FF80288E5A54E284CG1896A66A6496184537A8789604A739F5AE3E854D65E996DEBC0FEBC012FFF50ECBEB955B1AB183D8194E9DBB87ECF18AE55755F069D2BB3A1E0BA6D5095B24D4DD0BAE
	E84999E49960D6823870BF09CBB9D03CDF62D2F1B4106988DD2EFA5FA7A5F29F21E398EB333D3863223D18EF160A51A98C198AEDBCDEBC6825B47CCF174C251E6532DA2D024D022B27A5E1FD5B0031D453682ED78D37498BF73843E131892768D4DF43993D323F903AE4FC16971EC8A02F8ED88C5448F564A8480C4F025C7F4D665B6C6D32244AE63C19E1B3D4D883B8ABC73EBCD5FF7A4B9AF8BBFD342E7E4B53C7B5A7DC4ECF6BD22E57B42BEE134D735FA713088E314937B1BB2E283F65C99CF4456FF776E5E9
	D1F80FDBA3BF15EFBBA761F329G40878110B3FF33F997677F3B0ABABBEF33C93C6D7CA10785FDE3F138CB9214FB7DD34D28FEB7ADA3E7123CD9E6A47777AA1A7F87D0CB8788919B82E6A0A0GG34E1GGD0CB818294G94G88G88G61ECD3B1919B82E6A0A0GG34E1GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGDAA0GGGG
**end of data**/
}
/**
 * Return the ControlDoubleOrderPanel property value.
 * @return com.cannontech.dbeditor.wizard.device.lmgroup.SpecialDoubleOrderBitPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private SpecialDoubleOrderBitPanel getControlDoubleOrderPanel() {
	if (ivjControlDoubleOrderPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder1.setTitle("CONTROL");
			ivjControlDoubleOrderPanel = new com.cannontech.dbeditor.wizard.device.lmgroup.SpecialDoubleOrderBitPanel();
			ivjControlDoubleOrderPanel.setName("ControlDoubleOrderPanel");
			ivjControlDoubleOrderPanel.setBorder(ivjLocalBorder1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjControlDoubleOrderPanel;
}
/**
 * Return the JComboBoxBitsAreaCode property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxBitsAreaCode() {
	if (ivjJComboBoxBitsAreaCode == null) {
		try {
			ivjJComboBoxBitsAreaCode = new javax.swing.JComboBox();
			ivjJComboBoxBitsAreaCode.setName("JComboBoxBitsAreaCode");
			ivjJComboBoxBitsAreaCode.setPreferredSize(new java.awt.Dimension(120, 23));
			ivjJComboBoxBitsAreaCode.setMaximumSize(new java.awt.Dimension(120, 23));
			ivjJComboBoxBitsAreaCode.setMinimumSize(new java.awt.Dimension(120, 23));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxBitsAreaCode;
}
/**
 * Return the JComboBoxBitsName property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxBitsGroup() {
	if (ivjJComboBoxBitsGroup == null) {
		try {
			ivjJComboBoxBitsGroup = new javax.swing.JComboBox();
			ivjJComboBoxBitsGroup.setName("JComboBoxBitsGroup");
			ivjJComboBoxBitsGroup.setPreferredSize(new java.awt.Dimension(75, 23));
			ivjJComboBoxBitsGroup.setMaximumSize(new java.awt.Dimension(75, 23));
			ivjJComboBoxBitsGroup.setMinimumSize(new java.awt.Dimension(75, 23));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxBitsGroup;
}
/**
 * Return the JLabelBitsAreaCode property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelBitsAreaCode() {
	if (ivjJLabelBitsAreaCode == null) {
		try {
			ivjJLabelBitsAreaCode = new javax.swing.JLabel();
			ivjJLabelBitsAreaCode.setName("JLabelBitsAreaCode");
			ivjJLabelBitsAreaCode.setFont(new java.awt.Font("Arial", 1, 12));
			ivjJLabelBitsAreaCode.setText("Area Code: ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelBitsAreaCode;
}
/**
 * Return the JLabelBitsName property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelBitsGroup() {
	if (ivjJLabelBitsGroup == null) {
		try {
			ivjJLabelBitsGroup = new javax.swing.JLabel();
			ivjJLabelBitsGroup.setName("JLabelBitsGroup");
			ivjJLabelBitsGroup.setText("Group: ");
			ivjJLabelBitsGroup.setMaximumSize(new java.awt.Dimension(65, 19));
			ivjJLabelBitsGroup.setPreferredSize(new java.awt.Dimension(65, 19));
			ivjJLabelBitsGroup.setFont(new java.awt.Font("Arial", 1, 12));
			ivjJLabelBitsGroup.setMinimumSize(new java.awt.Dimension(65, 19));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelBitsGroup;
}
/**
 * Return the JLabelLG property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelLG() {
	if (ivjJLabelLG == null) {
		try {
			ivjJLabelLG = new javax.swing.JLabel();
			ivjJLabelLG.setName("JLabelLG");
			ivjJLabelLG.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelLG.setText("LG");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelLG;
}
/**
 * Return the JPanelBitsDoubleOrder property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelBitsDoubleOrder() {
	if (ivjJPanelBitsDoubleOrder == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("Arial", 1, 12));
			ivjLocalBorder.setTitle("Double Orders");
			ivjJPanelBitsDoubleOrder = new javax.swing.JPanel();
			ivjJPanelBitsDoubleOrder.setName("JPanelBitsDoubleOrder");
			ivjJPanelBitsDoubleOrder.setBorder(ivjLocalBorder);
			ivjJPanelBitsDoubleOrder.setLayout(new java.awt.GridBagLayout());
			ivjJPanelBitsDoubleOrder.setMaximumSize(new java.awt.Dimension(341, 243));
			ivjJPanelBitsDoubleOrder.setPreferredSize(new java.awt.Dimension(341, 243));
			ivjJPanelBitsDoubleOrder.setMinimumSize(new java.awt.Dimension(341, 243));

			java.awt.GridBagConstraints constraintsControlDoubleOrderPanel = new java.awt.GridBagConstraints();
			constraintsControlDoubleOrderPanel.gridx = 1; constraintsControlDoubleOrderPanel.gridy = 1;
			constraintsControlDoubleOrderPanel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsControlDoubleOrderPanel.weightx = 1.0;
			constraintsControlDoubleOrderPanel.weighty = 1.0;
			constraintsControlDoubleOrderPanel.ipadx = 3;
			constraintsControlDoubleOrderPanel.ipady = -36;
			constraintsControlDoubleOrderPanel.insets = new java.awt.Insets(25, 5, 8, 6);
			getJPanelBitsDoubleOrder().add(getControlDoubleOrderPanel(), constraintsControlDoubleOrderPanel);

			java.awt.GridBagConstraints constraintsRestoreDoubleOrderPanel = new java.awt.GridBagConstraints();
			constraintsRestoreDoubleOrderPanel.gridx = 1; constraintsRestoreDoubleOrderPanel.gridy = 2;
			constraintsRestoreDoubleOrderPanel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsRestoreDoubleOrderPanel.weightx = 1.0;
			constraintsRestoreDoubleOrderPanel.weighty = 1.0;
			constraintsRestoreDoubleOrderPanel.ipadx = 3;
			constraintsRestoreDoubleOrderPanel.ipady = -36;
			constraintsRestoreDoubleOrderPanel.insets = new java.awt.Insets(8, 5, 15, 6);
			getJPanelBitsDoubleOrder().add(getRestoreDoubleOrderPanel(), constraintsRestoreDoubleOrderPanel);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelBitsDoubleOrder;
}
/**
 * Return the ControlDoubleOrderPanel1 property value.
 * @return com.cannontech.dbeditor.wizard.device.lmgroup.SpecialDoubleOrderBitPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private SpecialDoubleOrderBitPanel getRestoreDoubleOrderPanel() {
	if (ivjRestoreDoubleOrderPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder2;
			ivjLocalBorder2 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder2.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder2.setTitle("RESTORE");
			ivjRestoreDoubleOrderPanel = new com.cannontech.dbeditor.wizard.device.lmgroup.SpecialDoubleOrderBitPanel();
			ivjRestoreDoubleOrderPanel.setName("RestoreDoubleOrderPanel");
			ivjRestoreDoubleOrderPanel.setBorder(ivjLocalBorder2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRestoreDoubleOrderPanel;
}
/**
 * Return the ShedTimeComboBox property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getShedTimeComboBox() {
	if (ivjShedTimeComboBox == null) {
		try {
			javax.swing.plaf.metal.MetalComboBoxEditor.UIResource ivjLocalEditor;
			ivjLocalEditor = new javax.swing.plaf.metal.MetalComboBoxEditor.UIResource();
			ivjLocalEditor.setItem("7.5");
			javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource ivjLocalRenderer;
			ivjLocalRenderer = new javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource();
			ivjLocalRenderer.setName("LocalRenderer");
			ivjLocalRenderer.setText("Never");
			ivjLocalRenderer.setMaximumSize(new java.awt.Dimension(35, 16));
			ivjLocalRenderer.setMinimumSize(new java.awt.Dimension(35, 16));
			ivjLocalRenderer.setForeground(new java.awt.Color(0, 0, 0));
			ivjShedTimeComboBox = new javax.swing.JComboBox();
			ivjShedTimeComboBox.setName("ShedTimeComboBox");
			ivjShedTimeComboBox.setEditor(ivjLocalEditor);
			ivjShedTimeComboBox.setRenderer(ivjLocalRenderer);
			ivjShedTimeComboBox.setSelectedIndex(-1);
			ivjShedTimeComboBox.setMaximumSize(new java.awt.Dimension(120, 23));
			ivjShedTimeComboBox.setPreferredSize(new java.awt.Dimension(120, 23));
			ivjShedTimeComboBox.setMinimumSize(new java.awt.Dimension(120, 23));
			// user code begin {1}
			ivjShedTimeComboBox.addItem( "7.5 minute" );
			ivjShedTimeComboBox.addItem( "15  minute" );
			ivjShedTimeComboBox.addItem( "30  minute" );
			ivjShedTimeComboBox.addItem( "60  minute" );
			ivjShedTimeComboBox.addItem( CONT_LATCH );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjShedTimeComboBox;
}
/**
 * Return the ShedTimeLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getShedTimeLabel() {
	if (ivjShedTimeLabel == null) {
		try {
			ivjShedTimeLabel = new javax.swing.JLabel();
			ivjShedTimeLabel.setName("ShedTimeLabel");
			ivjShedTimeLabel.setText("Shed Time:");
			ivjShedTimeLabel.setMaximumSize(new java.awt.Dimension(70, 19));
			ivjShedTimeLabel.setPreferredSize(new java.awt.Dimension(65, 19));
			ivjShedTimeLabel.setFont(new java.awt.Font("Arial", 1, 12));
			ivjShedTimeLabel.setMinimumSize(new java.awt.Dimension(65, 19));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjShedTimeLabel;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param o java.lang.Object
 */
public Object getValue(Object o) 
{
	com.cannontech.database.data.device.lm.LMGroupRipple group = null;
	
	if( o instanceof com.cannontech.database.data.multi.SmartMultiDBPersistent )
		group = (com.cannontech.database.data.device.lm.LMGroupRipple)
					((com.cannontech.database.data.multi.SmartMultiDBPersistent)o).getOwnerDBPersistent();
	else
		group = (com.cannontech.database.data.device.lm.LMGroupRipple) o;
		
	//shed time is 0(Infinite) if the selected shed is the string
	Integer shedTime = new Integer(0);
	String val = getShedTimeComboBox().getSelectedItem().toString();
		
	if( !CONT_LATCH.equalsIgnoreCase(val) )
		shedTime = CtiUtilities.getIntervalSecondsValueFromDecimal( 
			getShedTimeComboBox().getSelectedItem().toString() );
			
	StringBuffer controlBuffer = new StringBuffer();
	StringBuffer restoreBuffer = new StringBuffer();
	
	//Group name
	controlBuffer.append(MINNKOTADEFS.get(getJComboBoxBitsGroup().getSelectedItem()));	
	restoreBuffer.append(MINNKOTADEFS.get(getJComboBoxBitsGroup().getSelectedItem()));
	
	//Area code
	controlBuffer.append(MINNKOTADEFS.get(getJComboBoxBitsAreaCode().getSelectedItem()));	
	restoreBuffer.append(MINNKOTADEFS.get(getJComboBoxBitsAreaCode().getSelectedItem()));
	
	//Double orders
	controlBuffer.append(getControlDoubleOrderPanel().getDoubleOrderBitString());
	restoreBuffer.append(getRestoreDoubleOrderPanel().getDoubleOrderBitString());
	
	//Minnkota only uses 48 bits out of the 50 total
	controlBuffer.append("00");
	restoreBuffer.append("00");
	
	group.getLmGroupRipple().setControl(controlBuffer.toString());
	group.getLmGroupRipple().setRestore(restoreBuffer.toString());
	group.getLmGroupRipple().setShedTime(shedTime);
	
	return group;		
	
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getShedTimeComboBox().addActionListener(ivjEventHandler);
	getJComboBoxBitsGroup().addActionListener(ivjEventHandler);
	getJComboBoxBitsAreaCode().addActionListener(ivjEventHandler);
	
	getControlDoubleOrderPanel().getActionPasser().addActionListener(ivjEventHandler);
	getRestoreDoubleOrderPanel().getActionPasser().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("SpecialRippleMessagePanel");
		setPreferredSize(new java.awt.Dimension(353, 378));
		setLayout(new java.awt.GridBagLayout());
		setSize(372, 360);
		setMaximumSize(new java.awt.Dimension(353, 378));
		setMinimumSize(new java.awt.Dimension(353, 378));

		java.awt.GridBagConstraints constraintsJLabelBitsGroup = new java.awt.GridBagConstraints();
		constraintsJLabelBitsGroup.gridx = 1; constraintsJLabelBitsGroup.gridy = 2;
		constraintsJLabelBitsGroup.insets = new java.awt.Insets(10, 24, 7, 0);
		add(getJLabelBitsGroup(), constraintsJLabelBitsGroup);

		java.awt.GridBagConstraints constraintsJLabelLG = new java.awt.GridBagConstraints();
		constraintsJLabelLG.gridx = 2; constraintsJLabelLG.gridy = 2;
		constraintsJLabelLG.ipadx = 5;
		constraintsJLabelLG.ipady = 1;
		constraintsJLabelLG.insets = new java.awt.Insets(9, 0, 10, 1);
		add(getJLabelLG(), constraintsJLabelLG);

		java.awt.GridBagConstraints constraintsJComboBoxBitsGroup = new java.awt.GridBagConstraints();
		constraintsJComboBoxBitsGroup.gridx = 3; constraintsJComboBoxBitsGroup.gridy = 2;
		constraintsJComboBoxBitsGroup.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxBitsGroup.weightx = 1.0;
		constraintsJComboBoxBitsGroup.insets = new java.awt.Insets(7, 1, 6, 182);
		add(getJComboBoxBitsGroup(), constraintsJComboBoxBitsGroup);

		java.awt.GridBagConstraints constraintsJLabelBitsAreaCode = new java.awt.GridBagConstraints();
		constraintsJLabelBitsAreaCode.gridx = 1; constraintsJLabelBitsAreaCode.gridy = 3;
		constraintsJLabelBitsAreaCode.ipady = 5;
		constraintsJLabelBitsAreaCode.insets = new java.awt.Insets(9, 24, 9, 0);
		add(getJLabelBitsAreaCode(), constraintsJLabelBitsAreaCode);

		java.awt.GridBagConstraints constraintsJComboBoxBitsAreaCode = new java.awt.GridBagConstraints();
		constraintsJComboBoxBitsAreaCode.gridx = 3; constraintsJComboBoxBitsAreaCode.gridy = 3;
		constraintsJComboBoxBitsAreaCode.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxBitsAreaCode.weightx = 1.0;
		constraintsJComboBoxBitsAreaCode.insets = new java.awt.Insets(6, 1, 8, 137);
		add(getJComboBoxBitsAreaCode(), constraintsJComboBoxBitsAreaCode);

		java.awt.GridBagConstraints constraintsJPanelBitsDoubleOrder = new java.awt.GridBagConstraints();
		constraintsJPanelBitsDoubleOrder.gridx = 1; constraintsJPanelBitsDoubleOrder.gridy = 4;
		constraintsJPanelBitsDoubleOrder.gridwidth = 3;
		constraintsJPanelBitsDoubleOrder.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelBitsDoubleOrder.weightx = 1.0;
		constraintsJPanelBitsDoubleOrder.weighty = 1.0;
		constraintsJPanelBitsDoubleOrder.ipadx = 23;
		constraintsJPanelBitsDoubleOrder.ipady = -19;
		constraintsJPanelBitsDoubleOrder.insets = new java.awt.Insets(8, 3, 5, 5);
		add(getJPanelBitsDoubleOrder(), constraintsJPanelBitsDoubleOrder);

		java.awt.GridBagConstraints constraintsShedTimeComboBox = new java.awt.GridBagConstraints();
		constraintsShedTimeComboBox.gridx = 3; constraintsShedTimeComboBox.gridy = 1;
		constraintsShedTimeComboBox.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsShedTimeComboBox.weightx = 1.0;
		constraintsShedTimeComboBox.insets = new java.awt.Insets(19, 1, 8, 137);
		add(getShedTimeComboBox(), constraintsShedTimeComboBox);

		java.awt.GridBagConstraints constraintsShedTimeLabel = new java.awt.GridBagConstraints();
		constraintsShedTimeLabel.gridx = 1; constraintsShedTimeLabel.gridy = 1;
		constraintsShedTimeLabel.insets = new java.awt.Insets(25, 24, 6, 0);
		add(getShedTimeLabel(), constraintsShedTimeLabel);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	buildDefs();
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		SpecialRippleMessagePanel aSpecialRippleMessagePanel;
		aSpecialRippleMessagePanel = new SpecialRippleMessagePanel();
		frame.setContentPane(aSpecialRippleMessagePanel);
		frame.setSize(aSpecialRippleMessagePanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * This method was created in VisualAge.
 * @param o java.lang.Object
 */
public void setValue(Object o) 
{
	if (o instanceof com.cannontech.database.data.device.lm.LMGroupRipple)
	{
		Integer shedTimeSec = ((com.cannontech.database.data.device.lm.LMGroupRipple) o).getLmGroupRipple().getShedTime();
		StringBuffer control = new StringBuffer(((com.cannontech.database.data.device.lm.LMGroupRipple) o).getLmGroupRipple().getControl());
		StringBuffer restore = new StringBuffer(((com.cannontech.database.data.device.lm.LMGroupRipple) o).getLmGroupRipple().getRestore());

	  	if(shedTimeSec.intValue() == 0)
	  		getShedTimeComboBox().setSelectedItem(CONT_LATCH);
	  	
	  	else
	  		CtiUtilities.setIntervalComboBoxSelectedItem(
				getShedTimeComboBox(), shedTimeSec.intValue() );
	
		//Group name
		getJComboBoxBitsGroup().setSelectedItem(MINNKOTADEFS.get(control.subSequence(0, 10).toString()));
		
		//Area code
		getJComboBoxBitsAreaCode().setSelectedItem(MINNKOTADEFS.get(control.subSequence(10, 16).toString()));
		
		//Double Orders
		getControlDoubleOrderPanel().setDoubleOrderBitString(control.subSequence(16, 49).toString());
		getRestoreDoubleOrderPanel().setDoubleOrderBitString(restore.subSequence(16, 49).toString());
	}
	
}
}
