package com.cannontech.dbeditor.wizard.device.lmprogram;

/**
 * Insert the type's description here.
 * Creation date: (8/1/2002 11:56:33 AM)
 * @author: 
 */

import com.cannontech.common.util.StringUtils;
import com.cannontech.database.db.device.lm.LMProgramDirectGear;
 
public class TimeRefreshGearPanel extends GenericGearPanel {
	private javax.swing.JComboBox ivjJComboBoxGroupSelection = null;
	private javax.swing.JComboBox ivjJComboBoxHowToStop = null;
	private javax.swing.JComboBox ivjJComboBoxNumGroups = null;
	private javax.swing.JComboBox ivjJComboBoxWhenChange = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeDuration = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangePriority = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeTriggerNumber = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldPercentReduction = null;
	private javax.swing.JLabel ivjJLabelChangeDuration = null;
	private javax.swing.JLabel ivjJLabelChangePriority = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerNumber = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerOffset = null;
	private javax.swing.JLabel ivjJLabelGroupSelection = null;
	private javax.swing.JLabel ivjJLabelHowToStop = null;
	private javax.swing.JLabel ivjJLabelMinutesChDur = null;
	private javax.swing.JLabel ivjJLabelNumGroups = null;
	private javax.swing.JLabel ivjJLabelPercentReduction = null;
	private javax.swing.JLabel ivjJLabelSendRate = null;
	private javax.swing.JLabel ivjJLabelShedTime = null;
	private javax.swing.JLabel ivjJLabelWhenChange = null;
	private javax.swing.JPanel ivjJPanelChangeMethod = null;
	private javax.swing.JTextField ivjJTextFieldChangeTriggerOffset = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateDigits = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateUnits = null;
	private javax.swing.JComboBox ivjJComboBoxCycleCountSndType = null;
	private javax.swing.JLabel ivjJLabelCycleCntSndType = null;
	private javax.swing.JCheckBox ivjJCheckBoxRampIn = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldRampInPercent = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldRampOutPercent = null;
	private javax.swing.JLabel ivjJLabelRampInInterval = null;
	private javax.swing.JLabel ivjJLabelRampInPercent = null;
	private javax.swing.JLabel ivjJLabelRampInPercentSign = null;
	private javax.swing.JLabel ivjJLabelRampInSec = null;
	private javax.swing.JLabel ivjJLabelRampOutInterval = null;
	private javax.swing.JLabel ivjJLabelRampOutPercent = null;
	private javax.swing.JLabel ivjJLabelRampOutPercentSign = null;
	private javax.swing.JLabel ivjJLabelRampOutSec = null;
	private javax.swing.JTextField ivjJTextFieldRampInInterval = null;
	private javax.swing.JTextField ivjJTextFieldRampOutInterval = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private javax.swing.JComboBox ivjJComboBoxShedTimeDigits = null;
	private javax.swing.JComboBox ivjJComboBoxShedTimeUnits = null;

class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == TimeRefreshGearPanel.this.getJCheckBoxRampIn()) 
				connEtoC1(e);
			if (e.getSource() == TimeRefreshGearPanel.this.getJComboBoxWhenChange()) 
				connEtoC2(e);
		};
	};
/**
 * TimeRefreshGearPanel constructor comment.
 */
public TimeRefreshGearPanel() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJComboBoxShedTimeDigits() || e.getSource() == getJComboBoxShedTimeUnits()) 
		connEtoC4(e);
	if (e.getSource() == getJComboBoxNumGroups()) 
		connEtoC5(e);
	if (e.getSource() == getJComboBoxSendRateDigits() || e.getSource() == getJComboBoxSendRateUnits()) 
		connEtoC7(e);
	if (e.getSource() == getJComboBoxGroupSelection()) 
		connEtoC8(e);
	if (e.getSource() == getJComboBoxHowToStop()) 
		connEtoC10(e);
	if (e.getSource() == getJComboBoxCycleCountSndType()) 
		connEtoC11(e);
	// user code begin {2}
	// user code end
}
	/**
	 * Called when the caret position is updated.
	 *
	 * @param e the caret event
	 */
public void caretUpdate(javax.swing.event.CaretEvent e) {}
/**
 * connEtoC1:  (JComboBoxWhenChange.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.jComboBoxWhenChange_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jCheckBoxRampIn_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC10:  (JComboBoxHowToStop.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		rampItOut(getJComboBoxHowToStop().getSelectedItem().toString().compareTo("Ramp Out") == 0);
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
private void connEtoC11(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (JComboBoxWhenChange.action.actionPerformed(java.awt.event.ActionEvent) --> TimeRefreshGearPanel.jComboBoxWhenChange_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jComboBoxWhenChange_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JComboBoxShedTime.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (JComboBoxNumGroups.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC7:  (JComboBoxSendRate.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC8:  (JComboBoxGroupSelection.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G82094FB0GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E15DFD8FDC5555793FAD36D833E5C5C6E5C5E6C5C9C50D1AADAAEAEE3366B63759463731C51B917BC69B7D669A5B7C4E8FDCD0CCCCD2D4C0522BE0E1A1DC858581C581958D0D04949415AB7783776A655E6B6503DE4B72771CF3BE67797C61F3AF175CFEAF3FBFDF2F47FB1F77F91EF31E731C677C7D1C4FC548DB9D11151E11A78869D9027C2FBADD9062E285E1704B9B43B916EDCEB2892AFFEB005E916E
	5A12891F7910167A1BA4D32EB07EE2B670E54047BF1BE4DA815F178A37DE0C1888DF7C14630334E387FCFD014BB950454B19CF79F3C28EFC3E8DE4812C83A842CC4A3FD64817F19F70EF4B5F8925E78802FD8D11F1EF4AD76133E439FAC8EB834AD9CBE46E970A6474E840084CB478CCD843E4E7436782EA5D57EBEBE4396E6BA205594F17E7ACA2E5297267543116697A64CF337098F504C9C8AB58C74AEFBB5D3F3D57BDD05EEBF5395CAEC96C35175BCE0AB6076476161FF3FCE6755A4AED62D9C72FD86E9C70
	F85D7DDE6BC0EDED07E3C0BCA876F945C17B9E516AED333AC427A0A453BA5C38A91B668FF5GDEAAA65822CA6237B2785E8C54DD4C6B7173C575321DE127A305443B56782D4714E2E6FFC231D20FC9362C2C31A5A47FDF52F6A1FAC540F7GB1DBD626F3DBE614F0DB9C95C4B6FBDD12498CD4330E63968B415B0037830DD947ED5C76BE373173736F8AE9A7BF49D86C474670F54C3638F50A0D25E975D985B4F6DEBCC25AFF8EA9773DA4D395D0A7108FA89CE8A50D599B3BBE004F1DA725A67740005B355363E9
	F45A3C7B5DB651895FEBEBA1C5468E0A3DEE2FCD90D8DC5E32294C409ECE516FE9E312902B5BE10147D154418785C95A1311E5D0371897AC99D365BC625FD36A1673BE715B9534ED53GA7FAC41F61E3A95E763E023336DACAF1425BA0ED5A7B5C4F1DEFF3DBDAB3A78A399B5BB3669B58927EECCBC6D9A9332139D4310579B8261B78588378D820C9C031C089C0F3CA390FDF6A2A9C4947FB219FF8DDD6E77B50C90F55ABB58EB91CB651AB7B7A3F04C03EB6A226776A287518DFA2AB55ED14701D0306FEC9082C
	4E48DF4F7CE1D92F780515EDCE77D7F65B7A613171B63661EFE9DF312DE7EDE8C27CD50ACBAA1C352D1B62048F0134E4A0A6BF09762D568F74B1729045FBBE504748968B0F9189526201D87B9EBCCE46477A8F216FGF900C201A201268245FF485B7803A395C17623B6D57BB25DBF9CD98E1F22CF72DA773A86A52B2BD7BCE475BA2CA71D6220A04B249CA1FEBD2951FB03766FDEA8E30F68923DD64961F6C16E56819102E910497C6348BBC446AB52D4B20AC281839E01671BF1F4A9FCBA2D0352279E1BD59295
	89167E56D19293E72D07A0C748G3E171691FFBDCC475CB428FFDE997755459384F3829FD2467D727523CB6073A388EE51D9DB5B6C68A5E6D83D67F90CDED5C9F442C13EF9836F17FF6A6471573C6881216C05CF8C630FD05A8696CB39657A783B1E66DB83F8E7B91FCB8BAABBC7599F060D37E55A58ED5E20702C0CCD17DC06C947E7293EB3BF3F5EC3E25587758A830AA9673E0EBBEAE6B158E89D94F954FD6C050091ED0A67196C135DE4CE914F0AAE29D97408AE9BFC99145BFCEA7782A59E7B5C98AB4FD31C
	0CCFCD90B003084F68FE07611007BA3AF9FABCCD37CA1257F1F2C8925BC5C9F2387A957DC4EA4B20E6689B146B7AE7AB296BF42863AC2059D8D74731252A38EAF53BCF8FF9BAC80F1163331A4E435995B077D570767FC385D9DBB5A37FBA651574218AFFEDC7F4AE25CD157878365FB2746D7E554B385FC26A4E47C906BDCAB19B54E3AC56375E5229123B54320DED791416E15245713F0BD8ACF49F779F4B3D470DE359F15CB8165D4783476A3963C6314A523EBCCE6A68BE67D2457E15474978576BF639C45A81
	D1C5E0EB62BFF510FAB8DC8E69304356AFCA6D0E4FC418DBABC88CCF23E3EC8CFC1FD6414746F345FCECAC796CBEA16EC419617AA97C6E0FB24C969633D596E5ECE4B6051CA0FDCAF40A836028A67710CBE27855F47C1671C193455ED8F9BB51AD5D57E497FBCFB73AFD87E1EE586BAA33525A14330FB6515B67768E083652D3563356F26BB9291C36C679CE1A3C0BFCDFEF5E30E13B59E899DFF6CA1B77091D3ACCDB7D67DA377E50FA8B0B2F25426A0B7748363A87CE3AA13F43F65155E4373A7A45FF333D4372
	9F2D4D9B79D83E361734C58734119DE80C050FEF73FAC8BA9F5F64C13C496DF432B00234D99692A3D3AB73546DEEE1FB4437B1BD55EFBAAB67AFBD39A41E45B3C3A2ACBB48G7A11F81E2F9DFA1668528ED91DC34A1AA4433A90BE1D2A311761FF359A4757BF2DE43CBD0D794F354E93485A0265497AC3B44D5363F58C40D4C5A693F9AFFBA0DD3D17AD5B887B98284798788C83E23ACFFFC26AEA54E41ECDF48DE961FB5DA850198AB4CB4E27E4937389131B3C114B4582BF93E876A6A6D7D54964C2AA095CCB38
	6F2CC06CCD0A7D99863F5BB279FAFAFF2EFA6FEC9BECB66C3304264979A7D46A779907EDA45FB90067D47198B9FFD2BD876E9C9CF477BA68B2CFEE0752DEF5FFE658065E3760334F619D04BD07CD7471362C6CA53612F5208C4B6DB17943ED4270F56DAE3ADB67CB0C26F3B42EBB5CCD3094ED01F0E842616E10C3BCA7F0BFFC31DB3D770EDD3CB5E3219FBF182BD87DF7D4A9FEC879DBFD9633294E37DB782A6788F4256C689DF606B0052E9748D94018AA3EBF7F56AE924733001F8314379966CE3AD7485D4877
	8AE5005900D8DF9BD72D6EEB93B6333547D478E46353390D1B485CB26A110837054F3A9DBEAFED3464EDB1F1698E594E698FCE946AAF969A1EB104AEAE49085F4C5AC05822EA0B6C32ACE1C119FC96B2937D518AB2A1DB38BFDE49D67BA31660C059555C9FF51BAE4D9FCB3A9B29BFAEF5B4463309CD6AFE9A17D863371F96D54B7B5EEAFDBF2D6BA3F1548AF8CFB56F278F763E236A278721E70011B0DA627A45E6E263224C7758327838A870F94257CFFCA9C11E6300A201620092310CD7EDA31EB16C7285B8E3
	F8B2DD3FAE95EAA066EB822FFBCBA13DDEA753863CCD07313DF7719E3AEF29E1FB6FED086F23789C954E626ABA5A7F88BFE6EB1249D947572D4BB76A4F96BA37E94B13F4BC53AB992637CA47076B74D81CEDBF34120FB7A40EFC650367E0CDD8DB0BEBA2F98C79D1B5E9FB92CB515B781E7827F6B217A4831F39BD49D484D483548D64831A301D375F9651E81C55361F3FC1D659EF31FA3E78957D13BC22FFE2379B79275F694FBFF24F1467F0F115FA8E1F391D0D0FE9701953404FCF0B96F09F16B4F09F3EFD0A
	E05D40BB9B383FEE9097297AD41B5B611230BF6D68A36B8A3757516FF0F1EC9745FA5DDE3AB8E75818FE7F7B062B7A0D778D57749B6F9BEE688F3C873E355F5F3E026DD7DF22734F8528DF989043AC99840B84BE963107CD84CB84FE8EE2568602656EGFE87473EC331FA60BB90DB3E14E0BE60476D60FDE97D9EB257CF82BE8EA881E88ED07ECE08D320EEA09F508420D820D9C0190D109FD0AB1084948E94871488145914E4AA83EA81F2820582C582CD87CA864AE9CEB2D9005A0024E6EEC39B35A19C78A9C0
	71C0E9C0793B408620CEA09FD0B85014DDEC8E09074FB4207C5DA083548964838A871A82948F14361B2D717277008CD0A7108FA89CE88AD0BCD05A9EEE43CD3B9253035BF3923BC733C7A57EA03E89A4C37CC55AG4BE8E4FEA6ED92AE7B1A2791FF864AAB54CFBAE9D75216A3596B1475C9AC544872538D720C15536264F6A7311123728DE96F893A727203A81F4EABA3784B9FD964723B8D4AE943F8DB32BB58365EB64A72E1E9A22C9BC166C3C1FB5E32DAE0F3BC99CB49B340F7D5E99BC7482B428F3E0056F3
	E4FBB7481F44AF0B646F1586F24B644FE220770148734EEAD57AE6010CF1DA1D05C17AEC65D7E8E7C2DB654F4586E9F5329FCD42F34BC93A8706EAF110CE204DD649AA273DAA11FA8DBB1BB9E09D9085FE2630FF6382D9E61764EE5AA87039F2FA35FA2E4CEFE171D6A6FF6E10BFBBDA14B8144FC26D7E671C176C46F34EABF652B6036EA1EF2F281FD7D26C7918262C8876CA62G29063C9F277A12555BAF8E1B1766D0FD1666CFBF4B61EF6EE2BEFAE7135AC71B843EAE784BFA1237413A006E3C58FCFF5B2AEC
	B9D66DADFC5FF5CD83BD7385FE96501C965EEF57AC60BE4F5B4B7CDA3AD771EFBDFCEF5B2B6D774C7E2527483A52077C8A4A1FC77B5FCCA7FBE22B53516FA2BB65AE188F7792BB5E26732F8D3E7B7672BD4B1E8C320EF0DA4F3B07E041D13F0F489D4FD02FEB1209AE60A57B18ADCCEF1A09340147AB7609DE2FE8E347FCF2B9AF53B9BD8464476D6365789AB4B6F5F259F1F4DE0F8539997B7839474367C8DF6B037DAD38375DA3768AE19F9159679B38DD8270F9C0D5C09DC052C73C1C8DCB09AEA8BA86068628
	D52C1CDDF42D10GF249A8BB231164352F55FAD2F4365BC59BB9E96175FB443D98538E8C8D6C713A07BC03F25AFF9FA667C8389AD41265745CAD2AFC21CB9C34CA186F8F6765E19A55EA9765A3B0163EFE7B8AF55EDA91B90F4927945BDA5C67BA5C6D125BA327DD70AC47B458AF76022F8F0A36A179100D496CF6E86CD7321053EF722C24696D9E07EB37C3F45A06E544641E7D0C66C3231FEDD4770B125DED6379ECD82F298BF7C5B32CE3A56E4B6A934B0DE4BEF59191D9262D2CD0AD53F43E57A952E338F617
	2D633C87FD6BACDB06F5E7C2AA91D966D75B8B34F5A3278E9F8FC9F295D12EFE2152CEDA9116DE53126FA73D9DC21C495C351B165581A3203AA87AEC9CF643D8D604B9D71FD73B584B52EC271669530669EFBAC763C1FB0EA2272DAB5756E32F0B2B3374B2D37EB09B75B2BFA9DE2C4B834C13736FDE3DC21726F203AC731D3E7C61BEC7C1A6F35D5625467948F9DCBC250DA5393BEAE269260D4B0DE464D8E2E7B8376FD11F61643632BDDBD5ABBF63C9D8E9145E026937246B4F00C8FAB7261F68B25277E07A0A
	EDC669A118BEE31BD17E61183EEC1511FE9426572CB6CA0F4374672B0D721F0969BFA9D027A74B7AC57BF97A23BB0D74AD18BE3E40A83D9953A79B26F7E2FA5496A37B1D7B0D4FA439FDE3B07D95C37DB0CCFF3640A8BD9253F38AB5766DE76933B05DE3281F0669FF2CB4CA4FB940537FD6E314EE46742D0665D7E1FA04E179AD181EE8185E0D6999C5C67E73E07ACB067AA1187E09E17C04E37A9A0BD1FA54813EE77F83BDD30A83FE86E2B975841B857CEC444E54737D3E70B1472E2BA1D89B705247FC8DB5F1
	157A1CAF947089C0519F33354A540F0D77DD710027G89EDCAFADE5BF0D9F61EF7341F2C5FCA5B58F95E8A445D946FD1616C1C6F863A5EA3FCB824F5FC426D2F21E7C1398713CCE587B9F695BDDF5D81FCA7E23F6863F5F7A2963F0D2E13001F8934DAE07B930271FF72F81FE106CFBC9E06315063F611A3620E0F5BCE6CEC5D3B67407EDD87BA5879F044B97579F04DDB5B7D1E8FA79FE43E19A3FFF6E408729D480DBD74BE91DF9313C2EBEB77F89D36C6EBFFABDDD532F5716FB378B37C2AF63EAE4EB591BFB9
	018F811A504E1F897B5E634FD5226E19A8340EB9E8F827B131E3EBC6CC3BFC272EDDB9372ECF2B4F4A6BA0F7D1C34FA8FEB954C07C62924F1951B74DB0B73848A52052AA4B26B2F3D525E53DFF3F5E5B3046582F2D3BF6F7A80E957873175486DE5FCE30E5DC8741FA16287B864977987CD78E1FAC7DFACD7ABB323E12BED513CEFC35CE237F26A6BDCB254F7C7A63F55C2FF3FE9CADB89F5D61772EE8FC075C5E72E7728CDBFA4753E532DFD78CAAFEF16FAA726FD7CB195932DE5EBB757959BB51991F796C05BD
	44E7E47DDE75A9BFBFDDDA44B1A7E2BFCF6758A44446F7F1AC8131835BB816F708E37337F32C953156D57C0CB684B177EA0211F5CFACE269B5DC4EFC186FD53E5C721E20FAF6F75A59DFFE2A171C24167711158EB9B446E58F0F0D4CC21ECF67E11EF74ACE7E3CEE9CE2BFA96058EC44FEDF406D6F6C64589F36F0EC9CE26C6C1EE05390AB2A66F5923AB8767782EE0B2D0B57E9DD2926CFABED052BC4265B04751800795D0B794DC44CDC454B4DB94231722D9C73A066417CE6A276EB4CAF67A847D620DCB3E2DB
	B1CEAEA0363C10179103D8E8B577E9FEB747BAAD9C3B504D77067F28A64F767B5CAE096D9FF3E95BA7C2FA8A4A94579399891C427AC5AD59BE887547E8B9754D867DCA5D7797491F040AC00750B239BFDA607BE9787C1F39F3673232A2EB485A566E76BABE831B2CCE5294ED6EC1875B57B19B3FCFEDA4ED98F20C4F9BD3E9ECC783BF9531A6B34112011F035833EB88E6BE1EE42AB94E3157A8568A3C8D3166ED7C3C5E07D8896DABE3011F00588ABBAD9778E908B96CFCDECBB84E67EFEBBFB983A9BB11E4EA85
	12004200E2009200B2FBE02E846A848A810A68413BEDD4AF8E78C4A0418A6B8C209DC0BDC0E300A2006200922D6C4E83533B39A15A20BDC83964131423464BCE78BF370DB1C88B13B1D297EEAFCFCBD049E7760CFC9EDC2612E136CFB334FD3E7C29BF2F8CF4874E68ACF301204C9BA48ED7285296293E9B1DCF6AC9FDD64B62772DF67F67C5D63AAE92CE42BA79A46FDB6B6C46E7D851F4EDD483F22DC02C2F7D31AFD0DF1BAFA8778649278F7446822D137BDA84FC7FB41D1DBD33327F3C4D788C094D9DD1A0BF
	65A4FF16772AC47B8370F3CE72E7F9371CA2E762072C27065FAE81304D6B7608DE69BCC3698DA4FE3FBDE334775B59BAB4042E230AFA59BAB49D71EBA8DE2A42597AF439093F6BD185E9613D3CAE79E7697B9540675BE0CF875482E4878A31713A7D6114C5986139EE075B53AA1E951D2A4706EC7D7133236A75E66EAD25995CAEFD3D42EDAC76A7597477202B17FC35F7G1E194F57BEB15F3BDF18728D416FDD1DF8394CB479F34C4FEC69641379A8759C71D12988FBDAA0BB509820B020A8117B68A7E74A180F
	C8936F14A4EB2F1D5ED8628EA2170894189CF04A4F3977286B9687794D84CA861A83145BB7FC4CE0FA79C5EA3D92102B81EA856A81127C6A7D8A5FE988851989C051AA592970BDDE274B74EE6DD2171782B2C2FF12A98F2894283E5FDFF96D5B54FAEDA0E78372810D850A702B17331D6B45004CB4208415ECAAFC4F349B597949AA4DB38D10A9835AA14BF6587D15A72D565F9D31036C85D9FE1C019E0DD54027685226831FE8E85B3C9AEE5BECB9BD5B21489541F70B43C8EFC1A157EBF68C372393B0A7509807
	FE6EF8E3273ECEE1867AFA0A8419D81D5C8C60E781258DAB6397857AB2F2CEA9B266D34665D5815E22CB6B865EF34A287E2F96707A07C0FAB8D014CAAE8E3E4FB454CB5E220E05E410198314FBBA49D482D4F35ADFACA84F45DAE5199E152C845FC301A61C567BE2CD355E9751A0B3D5160BB7A80F76A5408527B6AD8F78D227D11D7ED5202ED3BD48348159E4D91F53DF1DDAB006469A48C4G9683B44D292FD314263C84C8CF854A9CE0F279837E4ADBD72577C599486E1065BB8C74E81F837C02AEED9C701386
	0CFCD139D5DF4694101BAE4BA67AA9E3B66059AEEDDA91709617D199C3CA5FF38D4F2F93B0A75098175EEF899A3F05C1FAA4D02CACB743A0AF26D7D428561B85F2E9C0B9EEF9CEF47B535B0E73C115AC5322126D066F9E2090375E4E1505FA9F0603CC14AC97E7D09E211900A76B5266G1F6BB17261B5437AC50947B8DFB55500CC2BCE2E87F889A854232F47B10B3E0C89AA19E8BF65CD85BCDE1716823CF0C6579F69DE6F0EAF602B3CDE946A578A3AB3105D30C9ABDDEBF3D81D6E7E35E5E6CB19F96326756C
	EE047EFC096577DFDF126FEC2D72F28EDF2B94CD3ECBE87E3510C16EA9982DD572E45BECE714F552747E2CACE6570BB524BC55963E3C1D7C5F6426AF65C903746CCA2E43EFD6116740A75DDE7AB01DBD877EBFF83FED82649F831482A4F8591DA526F744BC7C797199B3574B87D9727C58821F4D9ABD7BB163753D096E593BC15663653299EB69FA5C6A532D478B57925989A097894430813ABF1D89FCA26A572D566E65BF217B551CC1D8678EF219F23B7173695DF44F5A82F25D03FC3FB146BE525E1E2C83974A
	5F4702DE44A05B5B13780C99D476792CEC07CBF9C6471E23B68F31379F6567E797F44FAC35C2180F481E4752FC76BBDCC312B858E487A91E5E5928AF274D6BF0FB9D52F9163E6510E1B9DC884B99E8A850655361F574770B5E83C383A769DD8CA6372D430F5C47FDFD0322722CF5E891393F221CAE8512BD56314A48C61D81CC36E00F72DCD539CC4D52D68C52670D436FDA4B4F89237B754FC1C86C468D62F318037A67A8A4FDA626CB05C67A49187E4130670CA4FD8E265B06BD67A2693992BE079C761C062417
	E07A45EA23749ACC1FBF6CB993C9EF45740F9A0D4A6F4174170B0D7217A01D0DE7CD02B2BEDE68DB2D9F9F15B3620D55B0B8EE2ADCEFB8B6B27D9F751905111FE98C57CFED70BF5E7625AB5F3F192114F5734E114E3365FBCA9229B75EA1E25BF87E8E12C4FCC35E0103715F71996D246DA0686AE773535574F7B258779BD45F0BCC177A2EEDA0E2E5EC7E0F16416A3F662C7FBBE125E70D6F04151FB53E07DCF5B6707B0B75E77D3F3F58F4D67D7EA25B3FEF217EE6693FBCCB4E008C4FE9E0173E8F5A7F631327
	44DE29435A0F7ACD1924EDC3A14EA781CD83CAGCA15785EFF79B93296A0EF478F5F776F32750BFC7265B67C7D1CFFDF893E115F23DF60A37356C937A43987C87E9CDF6CA36DAD39BD94E4D81E0F7898C6CA3B44C4E53C50C75FF3977BA84C4EEA5F204FE2F20612CCC5C37C7C760BF202D900EFC16C27946B865E09D8E5853D178D7CB844DE3370335FC908D550B37B5940E71E45BB62153C0CFC44BE27D899707508A5D672B2DA90AB2B62E5F4A376FABABF2F0EC2ECC597570DC32C370B17BB9331873BF8FE49
	087DBD1D5FB92FB94731C728DCAB705D087DE0BB4F4F03D8AEFDA69882FC98E2C38D5C1688441E413B6EB1081D226B1ACC9F0C2FBE0ECD94F99925083DCE31FA60DB91BB58474B68C46CF66599B3E2455B392FE2913BF695571D0158EFD671F2E7A1765EEA1EDF9AE2136B392FDA4EF34CCEF53B01F7A27649B17E6CE18CE27752788B83FE92E2ABDAF89951080DDF4DF5054FB876B2457200AFC1ECB7FD66E1813E8531276A28AD407B900BFB17BE4BGFE82E273FA31DC44F2EA691C72B94469679CFB37067B2F
	8C31978B06BFD7D9D748735B01F2775067D263000FC44CCC65E2010FC74CD64DF5D3907B0C16D1FFA14954F101E3BF27F53383BF8631250D542740C7A1E623D89C708908FDD0C230D460333F60580592DEEE91E2D5D45789FC88E2F55416F06023901BCD31B86063915BC56B1682FC66179CBBC97D178FFC95E211D43785789E447ED140ED11903B1E7AE5AA7089087D0B4A25821FF391E312BEABB583DF03587FD02C95F89BE287504FBE446EAC60EDB48D3139D4B781789444DE2F657989E3706E87ED0FBC60CB
	903B2D0E5BE2C16C0FF53C5CE644581D19B06023913B075AB2957884447E06FEC9C5EC086A6E38827A7E959CBBCE651C4007A056D44D738BC76C5B940B82BE96313FD0EC9A700908359453F19C785C2FF1EC8115AB813E8A31A62CDB8BE2AFD039F0602391DBD648F527A29651496D0BC76C35CEEEDF8AE22DB8E627A1F6026657F2A5346F15B8C7A96DFB2556FF5300CFC42C251A7BEAB6E25F27F259A15077C3B8F6B7AD378C78E6445E24D8A770F6440E9E4158C5EC8F1D3726821F00D8B845D201973E0EF1CA
	319C60CB90FB105AD783FC87E2FBE8FD6D407B90FB9C7DB296B18715CBGFEB6E21F526772595FC8B2193F0131C631AA601B91DBC8E33C8DF8BBE24BD6926C8270610815D339A860E3915B06F73BE6A0360E76FD73D550AF2F6258D8EADFAB70F644DE41F63B005882AAB79D78D9086D22F2E9406706E26C52F6AB813E8A31E89AC3AD4077A016CEFDA5819F02D89F7AEF9CE215345CC460D391B3D3394CEF42B879CD0E1DE1EB8B60F7A076AB4C2F9531C768FAE88270D39033D6737C26A39605BEC8C4ECAF3545
	F2B5742D2BF1CD03BE68C6ECDBA14F4F03D8E8A137AF8431BFD2EC9C7011085DCD730B85BE7EEA2D6F098FD2903B00F5933E45313728DC9B70F6449E2279DDGBE8CB10146C1A470D3915BC05BAD9E78D444AE62D817B916E373E9FE9D40BB917BA1DD0B0E81BE8C310BF4AD9A89FC9CE2B3A8B6937894447E59CA6778EB20AD2F41362479D900EFC16C7B955C16EE44366F27F18F7C54EB787355BB334839D1BC703301723F8D63BED0B3D0B71087A884A89CA89AE89AD082D0AAD06635306E83AA852A3F166FB5
	D6DDA46FE779FB4EACDF42239B8E2F153DCF4A1E7F962E663FB15686F905DE4B6F7D3C7AAE494F68F7887A079C65C31243C9FE37D0F20A0D72B121FC1F69A4DDEF118DF55C357CEE5FB8DAC69A703963406EF17C3786EEB673E74FBBG730D63F7F0DEB673BC224771BC962FA13249408B57013F2E8BF46F313050AC0CFCC640767B4F4ED77436EE8BF0B6D13985F67CDBAD6B65F302D732953D02550174AAC12F261A6BFDE311223750FEA9E745729918BD583B08411D0924B6B0BB6FA3DBF839CDDF6DA769E4EF
	EA398E6FE29DA49859C306A1B6996FE2CDC74C3A126BE6DE4F31DB71DDF2BBE2BF27FD1858920158E3559C4B3C01E35B318CBBE2DFEB64D884E279A59C0B3F0177110FB27D6F2F8FE60E3C3FBE1AC97294E1DFCCDEA311FF4FA0133E0FAD9FCCB2CC4C4CC5EC6FA03F19455AAB3BC5FB7E3C0A6EE3F243E0DC8963674FE165466761D1F4FF5D8AF2BDA87BCA39765E597445CAEC6C2BB0BE47BEC947283110C7C498BF474E58B852B9361A74F754E6C0BE778A6AF36C5DC55AFAF65379AC816412437879FCD7A52F
	CF7E0D3CBE57D7EA6B73E762CA596E85D55C6E669B395DCDD5A3591D9540EE8972614FD3D8994B695D64B1000F3D115B39230B17BB853131DD5C76E4346587DD01EC4912E901ECCB5EF82DAD2563198F94DB56D2DB2AG5FB11E7B6739AE2DDFDF22F6B8A15DB71E5B76276D5C36C854FB3FC16B57A5CB943F5E5E406BB7F3BC2FCBFC43C8FE6575B072EB66CDC9A6FEE71915FF45B62D5DB751B30CDC10AB3A095B7DE3115B5DFA9337BB33CFEB7766250A5D1F77F13BFDB7F13B9F8DF87F0B6439B0005D11B731
	79D9E903D66A4B984063504EA92BF839A908E52E66369705F3DB362D9EA99E962A7C58922E3525BBDC9F8FB369DA598E38944E7DF3F115562FB7D25BA2A0BDAA1C5BB6061E291067E88928775C9E2DDFBB49D126FCDF353CE5A49FAE8D60436C1B595DFD456E27D7737273EE6665272D56167FB9D167F31A5978995F90DD976C00BCDAB11F976A7C5FA57C935DE37AC0B68465FF7D2E56DF2F53B31EE8C80F3D19375B3B3DA3551F3F53EED47F141B59FD5D79D81F62DA63BB04F5F4BF148672193770365ACD573C
	96606BEF617654970E94C7CBD5F1E43FC5EB4F05DB14B8E276BCD9EDEC8F5BFF0702FC58AD5CDF55057E7D5BC66762B8101D0E36FEDEBD527D4B8215EF743ECB03FC9E9658EF8D486F82969847C2850D294CDB617B2D5C5664BA63FA89EC0F89F2ADA87BC123719C5BC857929E108BC1594F9B7D7BA00C4AC703ECAC4A6FACB11EF73B681AA49964665C4A7DF5C349C8ED3BC0652F3289DAFF6D18205C67E4E5FF54E86C03DEEAE7AB48F7CE60F69EACE06B9907C416B9CC4EC1B1129E02F28B8B0DFDD5CC5BBF8C
	64A2D1363B50383DA4AABB936492D176FC0DFF3FDECF7BC14EED30B6380D4BBFDDE06CD776DEC0B348F55E467D7ACE40BE239EF789055E26756B045B747357FDFE7A4CB3344FC402FC8C5A39ACC01FA9E7FBE410CDC179E73798576BC5FA1E18FFFB12296CF6AE1BD7ED5C96E5540EEE10735C4EFDA0866C0BD9F2DCF1BFCC38DD6B03685B75734F73544F3100CFC3FB166B5E0DE0F64C06F4618EBE26AD2F6336D96E60FA9F57E9477F5B4972DBAE6707F53C5E5DF7703A88A33EC3417B085138B2768EFDBF79C7
	357FB6DACAE3AF1C580F76BED9E06C779728CFE6005CAC34756D91476BE5027F79A3B7C2EF6B58EA63BEB5097A3A8864CBA3381DC38546F1FA8D35338364FAA2F83BB82B396DE3D17F6EEAED3BBCC32E7E73FB7BB546F62C257E1A82F9CC45FCCE947B772F0F1E9127026C9C14B76B62E88B352D744EA4D3551D5C2FC76AC60A01E581E2408679DCBBF76E5CE2FC0FA645CF1F4E247571007C05BB392F583EB3927898441E6B44363F135FF518C52EBB496B285E007B0185A34541C47D98F4B64038F2AD352F88F4
	CAA7F2FF6D9B317F2FD0155FB1D1A91FE076097AB8FC5B4F587E9EADDB8279B19339EF4E30678540CF19485B784582ED9B2752181C856929A8935BE55C4FE652FD0E79AE08073B386C22A33ABDCD2162FB6F1111FC2F2E3B5E77BDD046B9CD5D0FD7995BF5166EC91DA0BF866DFA28CA37E7D92974213C4D46BEAC5BCC7D85F9CC41FCFE90E00C7A9D756FAC10CDC5796305DA7F32B937E8924444A49E93B3824624C9760B3FBE54B9C95F0746949A7721F0DA368D64BD1338FD4E2D46BE8C214F94A600DCB44ABE
	39D537BFA9D2FC383656580735F4BD1DGF9A4E3BEE5AB7D7BF097BD1B4A3BBB49E43E1B4B6F2A557A70A8FBFE87691DF7F39FF60CB8973D93400721F76B7BD5FD0D318FBB68B894867291E85FDD814600D8766C83E4635156B9A30E816F287AC166BD5AB1A07F9E3D2DE6BFE3C08DFBCE877216FBF0AD68E7FC1558DA85646CA87B16AEF659736EB0C80FC0199FF59A474FCBEC9C8639D9A81B5F255BDF3E2B0C8DDF0CB8AE2BFDB2ECDC3EB749542B7149BE1D6DBD2C5F01DC693D380F72B32EFD4C1E8B021C93
	E5C3F5365F3ECA317D7591EDDF9C407670FB75F34AF3C57E636977744CEE9268C45F4B47752B2B393D897772987B7E08B19648266CC8FD0C757809B19F75EB9E481BA3719C0E5A538AFCA7E2FD055C4610C8BEAFBFC30E3A795945CA637C7369F8908DBA3111B89F85980359FEB999E4E7E3591BE859667BE04DFE9F6E71C69CF3978798AF3A6F537BE70D1FB1F7ABFB568B7252FD5C7E9F7A59AF3079A38264E2D0F6C5007D18055DE781599414EF76339F6B2673FA7E7D60037B398F46970C94A36AB5FC777DDA
	9FF86E577BE0151F31052D9BAF00FC687D5C4E5FD68C5F674E2E607B5C98149BEFB176550374F960D4100BC759D7AD46B1B4174AE6CE066F13396C127D7E7D7AA1FDB6D88F32ADA89F6A675CBE025AAC01DC68E46E5797ABC65A671AD4B4E532562F53A76B4703CF779B7BF5005A998F7233A67367A90FE679FF1E921BB57273149FE4995FD77CF156707B0AB3320C6FAB7EAA0B2E3F647B0A8C7B8D7DAD75FE2F435609F20908F5A1768A4D13E0079DB6490E78EB54AE02370824C00E3FC16DBAC731CE99FBD305
	F54958BF3348B3A128325D0D3F47AB4C23F3044369E4FC66BCA263F08D0A12F2FFF39E315161312A6CFE9B31AE015F5BB52F9E693D575CA82377ED4AC754537FA6B2536B9FD1CFCF6C1D63CC7AFC37ACCA7FAE72A20A57C4695FC59E3F1ABF8FEE063448A87E1E7E9D662F76B7429E780AFAC92356E3753A12BE234EF9C0DF5F31944FFFC0DF5FE5EBF8FDCBA0AD7481DE5F14FE7D3D6C94C8939EE4ED1A772071BBCB2500576B525A0037BDE8948B8987F99DFDF27AD815DC84FC0FB1540B563C07B68DE49200D2
	E5594C077C3D075637D2DF27FC10AD1365F79868916AG5C2ECB3BG7C38070CEC0B4077B3A74969D3D4F25361FB22215E2F063D2BBA9B64322319EC117CE909566AB6835F29431C400F818A0B563F07764430F75DA2C1A6D6161BA1FF4E52651786FC4E43DA4C8CFC95D04B437AB21A30ED3A65B40FCAA6843E07BFECD47F2B9A39DE141C9E27121B895F138D755EADD147429C1049FDA449D47288132DF9E4F81B32355835645A03BC5F1CA93F74BB905FAFB78BDF651D902E7F12A558BB944C7EC70A857CFE7B
	FBCABEA51541560549FBAA0331DB5EF7D50D4E46E75ED7EC1CD52A58185395687D1B2AAD6C7D9BA6FB38AB58B2653DE957D7EB87FE67E47E870A4D9FFC28585C98144DCC6F3A8D0A5E635BC7579ED98D41374723C17F869833AB26DC295B324D0A0D6345515978FBB1F89B2F6F9B1D0DB5DB949B0FD6ABB6062C8A647F1AAAF54C7CEC5568E2E6656ACB0B1985DB951B4BEA951B535E8D46E67937616A953DDD47C6579EB79D8B46FED64E64EDCAB93F8A2A5ECC6F275B953D6F54852A5746CDE0DC952F579B8D0A
	5E23817D21559BACD1747EF1B2D8FFB05D716B1476F8DCB5B6BED09DFC79896FABFABFAB88269D7D47475CD2451E359FA879C68715AF535B259A0B3A2AD779572B2981B5459776B2256C07D463528F6B024F6397650A5E5ED5A33D0F68FF0E6BEA8CBE5E7EDA21682DAE89E06B16CA6626GF3332764D26EA7B2FB72B7AAFE2C5B2464EDA98846B6791C1ABEFB103CC322FFDBEBC7F1EF74F82522F738A6E0ECDB5431F4C51522F7DB4098A43FC39978DD58BF95DC3AEF9F5A2C787697DB143C3F9D14EDF23C2866
	0A08AD414C557E6B7446162FDEA71EC7D3F5B06D98A05ED4F3CA1DEACE39B6283AB13D892A317E655A514DA99B6A0231DFBE5B2A9B5D9C7F74F625EE3FD74D8F37866ACB1B4918E489584FD38A026FBBD9BB959B5EECD472E88F581FAD328DCC0F9EA74AFA533684E3BB133DB22858E0E5546FD24A58D6EC8E5076B5E47E5A34F9BD53BB31DB517B571660751EE8D1742A6BC6B76F7EEE2F6253740F14FC6EAE883EFC7BFEC5AF2CF3F4B11B58993CDF3FF5C03175410F15B2CB834D2D81E210775B1F37A9794E7E
	C455F601725D32D193D7AB5A030CC734C7DEB3FD2A685D5CF569FB5A57025ACB49EB2EC3C44FFFDE57D4851F576307953D3B2A030F1DD7BB953D7A4260751A0EAAFA8F846DB779F79B3A15767E66B1A51F41206C766F2FDB37866F2F28630A5EDBAB832E83362A5738BFBB21689557862F7761C9C5EFE3503FB544F45BCFAB7EBA6BD472A9AA8C3E7C1B87943D97AF313F463A94FBDEF2AB79560E223FE628FE577B4AD17457632A5F2D1E9474D867BFE65E9C4578F70524547B37E715BC727E8D63C65FA8460D4A
	730A9D07BED372B894D43BB259BBC7B11F1E7FDCA9EF4285253C4E006D2D1D771FD67D565633C135B7137DE294EB7B5FFF2914F1CB60FD2B26EFE4295A61DF81574FDABD2B6AB7E7BC239C83C3CC0ACF6F4DD472D99F145D7E63682F23E8576733943D35C16D497C17BB78EF58533CBECF71C9EE3612779395416F9797DAC65EAF7E40B20A3E36C051CBED8DFE3FF868ADD55F2E38347D62F7ABAE5D3767972A62ADC7493BB5A85B585F260BDBCA1E07BBDCCE07CBA4FF71F50FC8A68276CC61AD62D2797BD25577
	8943FE07755FC92C0CC77F9F14714DB5CA1D2ED7FDDF3966BFDFF655FF348C762E735B74B772485FB0E9FD84FFF301E2BD40FB901BCA318B4007A166256F21C582BF95317B69BBBF7140A7A356F41A5E19A0FF4F95311FFFCE6F81FDA749E47B8E3E63CF5FD1A5FFE345075834155C3E3108313FABC1720BC02C0B5EF7C985BEBB06E3BFAA643694A196FF0467E7C12C78A82FEFB3E2A1C7F999ED080522AD91087DF2A5570DC12C2A087BAA8EB1739E6E2B19085DDF003EC2ECA73EFFBF873121C26E2B56C7B976
	DDFAEF2687788B085DD8406D9B07D8A23EEBBF89317EEA6E2B59082521EE76E358EE053CEEC508CDAA64F5ABC5ECBF7BCD8360FB903B331A57D7C2EC8356B7743161751D00581F8BF8FDD390AB2479895FCDB2193F4B315FD6F31B2B90AB25F15082FCA7E25754F01BED085597F01BFD08DDD540ED9E0B589F37F01BA3905B053F05920358CD555C664CA99C1BDEB05C66A354FF79A0D305F265D80F96444E636FC4F4A37657825EEED1085D5E487BCC9CE23FAE61794DC4EC6DBA1EDFB2E2250DBC3F1A47B1F6CB
	F8FDDB91BBFB0667570358B39413008FC16CBDAFAFE35C637CFE5DB6BAEE105F7CCFFC1C5F17BAEB575E17FCDE750E7DEF6C4677347EC2734979DE12A97FFBBC1FEFB6783F27B5110ECD4DA05B06724F183577BEFFCD472A8B109E7ABDFCE76174E85ECF9E2B7BFB84D3A01F3F4D1DBBF79156A779F3BF6F38DD20F754C0FE4677382F0A5B89B687786CA7B87646CA6E3F2AA7380D9F9485735E32BF9BFBA09FF2D076BE5A6871731EC8A86DB7CE107721BD29B4FEA7819F0DD87AD1EC63A7787D4D5709A9729D58
	DB0F0E740EE1A0FBF3E213CC44BE7277D4D8F98F23CF72E3F9F99D2A774E0F51713799525AE2390DFB6978FB8178D044FEC97BD38C70F1315C371DA35E578DE4EBAA64732A5C7E723B5A54DFF3G4FFE124761CF835CD1FD15767BAA105D71A437732982DEDF67135C4E3F853C1F39F084BB431FD4E20015B10E16BB8970E8ACF7CDA1AFB761C96E67F36FA8FE7E89CD4FFE8A521E62F533D50F7C37EEAE523208FDBB1E62E5BD4FFE2B89F89FE207E83DA7819F7DD4F06DE392346F15696B1D88795C2BE91FFC76
	DBE60027E19DB6D6AF5554E1A73F59A96BFC047617BC4DED1DD743FD5576B44F2721C6BB4E5D22FA077FB1B6A701ECA866A19670FCE3900B26D8A270A908AD21656747A519CA6238DF3A833EEB35E0843FF4C0BED702DF14F78763587A82F0E79C2F4F19G6FB2DCCD7D988E321362381D072B39CFE6201D63825EBDDF2833F3CE1C564E5CE712CC8D027A9D47D56C6EBE60254F70F2FFC467358E60FB909356F1DB46BE43ED593AAE1877AD7D0E754F687B50A7345C29004F40F20F5179F48E70594FF26C0EB35C
	161AE739EF634FE8E365C97A3B89726F92F8C773DB9FFABBED4F32FB0A7C3D5125C2075DAC843B8FCE243FB340747A9B826E99AB55E7A426650A5E9D666075CE64ABFA5527C7F73672B5722A3A7C7D6EC2A51FAB8F86DF7EB4553BDFCF2E8CF07ED035D9F3DE15DD943CCFDFABD26CFCFB15D25E6142C065E94F55064C0A5E74A323FB7613FFB4F8DB4357A865CCDB993C5E932ABB034B76846F7F5F952B62A670B3ED0DDE2D6A6E4A66D11E491DDC2F344757D5F7CE7684BC1353169F293AF3F2F520B335CA081B
	CAA5EEDE9845F3589F2B6E277CDDF5BF650BC0651138D115D7B30AF355A2553D1246003E2812FD41E447D78773378BD8998D96250C35815B3BCA636FDBD577CAC65B5ECFD5AAFEFCD9F53FE371A86AF8B228BAB259F7EB0277F9266ACE4746207C41E4AF94846F7377D577BFFE97780E044667D7EED574360E72F977BD350A4F1F2BD372F9E694ED1E223A77D79C6899C425F6ECF6DD627D12452ABB981BD4F7B04A9B039F2FBF5D219A2F835D5152593EE2DD703163D35D5338D5F5CFE3EAF170F67ECDF5CF6354
	19514DAB0F1D895E56C2FA67E28555DBDD1183B3F7546BC25620D7D8B25C461D5F7E2FDFC71DE84E4B90B2768A736C745D1D3DC256B97292104F832B1C87012E9FBCA3FC09CDA7C842FC7227684DFBDD1067A20D7DBF38F3F352745F9D9AB48973768A8564B820DD7452DF7B97ED4DD649FAC87412D2F78B8BBCEE87A4823ED7489C249FD90352F92758AA64759D944F8C090312E85B49FF5FFED09216351212AA484FADD634D8876D7485363AD6A153E59D90A5E189CBF6DADD7D956C0F8A54917B05741DB4BA84
	FABE8F76AE257612DC4AB11725CFACDE37E65F2CA9A6A1E337701653ED356D3676CAEE6FDEE101E4770A03F637536673B4300C324F11A826EF13C1F6AB317A243265E4CB06C61F765DB6F6D172225D9990BEDE2102CA12D5E8B9CA103F52610522C46FDEA0AB94D902E9D72C125E7B491E955D99C23ADCC9528873FC9E892C72DADD03FDEE6FGD8E056D94013B023729B1E335CF85FBF0E500C94D5C9D84DDC862A957D22FB20E2E7DF1F43A5E28660BF487EDD4C1E48146BE416782EDB366F0539A7213D1B8553
	0045C27F5FC87F5FC47E5FC8110D945938891C18AA847C27CF775150FBCBE2C18276AC267610E6AE5F8DADA53D787AF393FFD31F1A82355BADE41DA5FFEF821C1D2BC8313FFD720D289B5FDD981678AD52969E9292BC5FF9FD56810773BCFCE926BD4FC770C29F16C4EA3E173E1A16F836325674073BCC99C2A6F495762A9E84AFF95F8E02574BFA0EC9F2FBD85C49435DF29AA83C7F10CEF9BF65D68A4A2B06F4D85476B1640E00189D3943406D23DC663058A6E87670A0A5F08ECDFC1B7E7F4E281B00E8AD253A
	4BC80164CB3E56DF6F7B30CE24DC32A5A27320C9925EEA370BB6F3878CB73512303C586C6EB36F713A07BC0366DD56DEBBCF48A3FFB5536A32198F0A03A27930CA84DEC1C54D6D22D36CA5079C667D22E4F75B08C20B7B1CD9F21B5B415DE61808A52F5B8970CA2650E475D8FB9D52F9484EB644B45711621B4E77BAC5909FF2C910A914C3FE3B92921650616C63A1495CA6FAFBE1D42DB5CBC27ABA92F4E2EF39A4AC45743DAE682790E4C4E009BC88EAC0D903A83F4353B1534B2F6136A98DC79A0DBCE0A5C139
	70723334D931B4CBE569BCCD573A9EE5B264F4AB79EEA0F3D9556D0036EE59326D73AFBFCBBFB5EE05799A8FCF99568AE4D1EAB210392C6AF6E2F85D483AF5815ACDCE04BC865CE5D58B3BD20BCC3996740452CFAD346DC5A6A35EDE1986B2649F1950BAB59AA4FFF2FDAA4BC0867FE9F2EB9896A1641F49C006F3AE8D57B7CCFF77B07D3EA0C68613014CE5551AD7A82DC9AE721056A48F8914D10F9CA1568E2BDB0626EEC4265EC0037CA3D7489EB360AEABAFFCFBF8CC13881BFF395BBDDEEBB7E9153B84F5BF
	51369E35DDB0EA3DED869A17D5CD6F5446A92901CDD3537F95F1F63FF6994B634CDFAD48C8FA4E003B2C6A94B3FC05C70E48677929457FB79199B7BCA2DD82EF4B4B4A529F990F9219FE5AC4BD46E7E8E47C0D717FAB62F46670B1BED01CEAD7917C37C4483F373E42AA026B6F9E265FA789396C8F201A795F15058D633C5281072BFC3D12467F96AC24AD167F662A199DBC289176B7DB89C27E2EAA593FB2F5EDD3759BF017D5D33D26B495D97E71CBB169FEEAC102F143B00DF40D8611A93D7CEA7A26F6CB403B
	DD567F2E761A2BEDAF13DC8BFF6DC58E340B07E9E4EBB408CC29C67FDA836EF272C2FA0E62857E93FC04B2C72C45E5DC2765CA1D784FEC921B327D54027432E20D97F84BEAA71B52G9A3C9F98E9DCD63EA951CEA83C3D653FA53F7EE20D6C1E6E6BA205342F2F4E6095535F8129CAE03F5D5312207CADF976F72B585F7D8A81BCA2017F8E5CFFEFA18F0F7D7D6D5C76812B53A9D91D27F73AEC7B2CE72D0D67A5D1791B3D77D7137C87390C1C48529E2EA6F61FD2697CDFD0CB8788BCB58BB22EB5GG683CGG
	D0CB818294G94G88G88G82094FB0BCB58BB22EB5GG683CGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG68B5GGGG
**end of data**/
}
/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private String getChangeCondition( String change )
{

	if( change.equalsIgnoreCase("After a Duration") )
	{
		return LMProgramDirectGear.CHANGE_DURATION;
	}
	else if( change.equalsIgnoreCase("Priority Change") )
	{
		return LMProgramDirectGear.CHANGE_PRIORITY;
	}
	else if( change.equalsIgnoreCase("Above Trigger") )
	{
		return LMProgramDirectGear.CHANGE_TRIGGER_OFFSET;
	}	
	else
		return LMProgramDirectGear.CHANGE_NONE;

}
/**
 * Return the JCheckBoxRampIn property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRampIn() {
	if (ivjJCheckBoxRampIn == null) {
		try {
			ivjJCheckBoxRampIn = new javax.swing.JCheckBox();
			ivjJCheckBoxRampIn.setName("JCheckBoxRampIn");
			ivjJCheckBoxRampIn.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJCheckBoxRampIn.setText("Ramp In");
			ivjJCheckBoxRampIn.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRampIn;
}
/**
 * Return the JComboBoxCycleCountSndType property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public javax.swing.JComboBox getJComboBoxCycleCountSndType() {
	if (ivjJComboBoxCycleCountSndType == null) {
		try {
			ivjJComboBoxCycleCountSndType = new javax.swing.JComboBox();
			ivjJComboBoxCycleCountSndType.setName("JComboBoxCycleCountSndType");
			ivjJComboBoxCycleCountSndType.setPreferredSize(new java.awt.Dimension(146, 23));
			ivjJComboBoxCycleCountSndType.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxCycleCountSndType.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxCycleCountSndType.setMinimumSize(new java.awt.Dimension(146, 23));
			// user code begin {1}
			ivjJComboBoxCycleCountSndType.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.OPTION_FIXED_COUNT ) );
			ivjJComboBoxCycleCountSndType.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.OPTION_COUNT_DOWN ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxCycleCountSndType;
}
/**
 * Return the JComboBoxGroupSelection property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxGroupSelection() {
	if (ivjJComboBoxGroupSelection == null) {
		try {
			ivjJComboBoxGroupSelection = new javax.swing.JComboBox();
			ivjJComboBoxGroupSelection.setName("JComboBoxGroupSelection");
			ivjJComboBoxGroupSelection.setPreferredSize(new java.awt.Dimension(184, 23));
			ivjJComboBoxGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxGroupSelection.setMinimumSize(new java.awt.Dimension(184, 23));
			// user code begin {1}
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LAST_CONTROLLED ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_ALWAYS_FIRST_GROUP ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LEAST_CONTROL_TIME ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxGroupSelection;
}
/**
 * Return the JComboBoxHowToStop property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxHowToStop() {
	if (ivjJComboBoxHowToStop == null) {
		try {
			ivjJComboBoxHowToStop = new javax.swing.JComboBox();
			ivjJComboBoxHowToStop.setName("JComboBoxHowToStop");
			ivjJComboBoxHowToStop.setPreferredSize(new java.awt.Dimension(184, 23));
			ivjJComboBoxHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxHowToStop.setMinimumSize(new java.awt.Dimension(184, 23));
			// user code begin {1}
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_TIME_IN ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RESTORE ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RAMP_OUT) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxHowToStop;
}
/**
 * Return the JComboBoxNumGroups property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxNumGroups() {
	if (ivjJComboBoxNumGroups == null) {
		try {
			ivjJComboBoxNumGroups = new javax.swing.JComboBox();
			ivjJComboBoxNumGroups.setName("JComboBoxNumGroups");
			ivjJComboBoxNumGroups.setPreferredSize(new java.awt.Dimension(146, 23));
			ivjJComboBoxNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxNumGroups.setMinimumSize(new java.awt.Dimension(146, 23));
			// user code begin {1}
			ivjJComboBoxNumGroups.addItem("All of Them");
			for( int i = 1; i < 26; i++ )
				ivjJComboBoxNumGroups.addItem( new Integer(i) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxNumGroups;
}
/**
 * Return the JComboBoxSendRate property value.
 * @return javax.swing.JComboBox
 */

/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRateDigits() {
	if (ivjJComboBoxSendRateDigits == null) {
		try {
			ivjJComboBoxSendRateDigits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateDigits.setName("JComboBoxSendRateDigits");
			ivjJComboBoxSendRateDigits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setPreferredSize(new java.awt.Dimension(63, 23));
			ivjJComboBoxSendRateDigits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setMinimumSize(new java.awt.Dimension(63, 23));
			ivjJComboBoxSendRateDigits.setEditable(true);
			// user code begin {1}
			NewComboBoxEditor ncb = new NewComboBoxEditor();
			ncb.getJTextField().setDocument( 
				  new com.cannontech.common.gui.unchanging.LongRangeDocument(0, 1000) );
         	ivjJComboBoxSendRateDigits.setEditor( ncb );
			
			ivjJComboBoxSendRateDigits.addItem("0");
			ivjJComboBoxSendRateDigits.addItem("1");
			ivjJComboBoxSendRateDigits.addItem("2");
			ivjJComboBoxSendRateDigits.addItem("5");
			ivjJComboBoxSendRateDigits.addItem("8");
			ivjJComboBoxSendRateDigits.addItem("10");
			ivjJComboBoxSendRateDigits.addItem("15");
			ivjJComboBoxSendRateDigits.addItem("20");
			ivjJComboBoxSendRateDigits.addItem("30");
			ivjJComboBoxSendRateDigits.addItem("45");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateDigits;
}
/**
 * Return the JComboBoxSendRate11 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRateUnits() {
	if (ivjJComboBoxSendRateUnits == null) {
		try {
			ivjJComboBoxSendRateUnits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateUnits.setName("JComboBoxSendRateUnits");
			ivjJComboBoxSendRateUnits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setMaximumSize(new java.awt.Dimension(110, 23));
			ivjJComboBoxSendRateUnits.setPreferredSize(new java.awt.Dimension(102, 23));
			ivjJComboBoxSendRateUnits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setMinimumSize(new java.awt.Dimension(102, 23));
			// user code begin {1}
			ivjJComboBoxSendRateUnits.addItem("minutes");
			ivjJComboBoxSendRateUnits.addItem("hours");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateUnits;
}
/**
 * Return the JComboBoxSendRateDigits1 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxShedTimeDigits() {
	if (ivjJComboBoxShedTimeDigits == null) {
		try {
			ivjJComboBoxShedTimeDigits = new javax.swing.JComboBox();
			ivjJComboBoxShedTimeDigits.setName("JComboBoxShedTimeDigits");
			ivjJComboBoxShedTimeDigits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxShedTimeDigits.setPreferredSize(new java.awt.Dimension(63, 23));
			ivjJComboBoxShedTimeDigits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxShedTimeDigits.setMinimumSize(new java.awt.Dimension(63, 23));
			ivjJComboBoxShedTimeDigits.setEditable(true);
			// user code begin {1}
			
			NewComboBoxEditor ncb = new NewComboBoxEditor();
			ncb.getJTextField().setDocument( 
				  new com.cannontech.common.gui.unchanging.LongRangeDocument(0, 1000) );
			ivjJComboBoxShedTimeDigits.setEditor( ncb );
			
			ivjJComboBoxShedTimeDigits.addItem("1");
			ivjJComboBoxShedTimeDigits.addItem("2");
			ivjJComboBoxShedTimeDigits.addItem("3");
			ivjJComboBoxShedTimeDigits.addItem("4");
			ivjJComboBoxShedTimeDigits.addItem("5");
			ivjJComboBoxShedTimeDigits.addItem("6");
			ivjJComboBoxShedTimeDigits.addItem("7");
			ivjJComboBoxShedTimeDigits.addItem("8");
			ivjJComboBoxShedTimeDigits.addItem("10");
			ivjJComboBoxShedTimeDigits.addItem("15");
			ivjJComboBoxShedTimeDigits.addItem("20");
			ivjJComboBoxShedTimeDigits.addItem("30");
			ivjJComboBoxShedTimeDigits.addItem("45");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxShedTimeDigits;
}
/**
 * Return the JComboBoxSendRateUnits1 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxShedTimeUnits() {
	if (ivjJComboBoxShedTimeUnits == null) {
		try {
			ivjJComboBoxShedTimeUnits = new javax.swing.JComboBox();
			ivjJComboBoxShedTimeUnits.setName("JComboBoxShedTimeUnits");
			ivjJComboBoxShedTimeUnits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxShedTimeUnits.setMaximumSize(new java.awt.Dimension(110, 23));
			ivjJComboBoxShedTimeUnits.setPreferredSize(new java.awt.Dimension(102, 23));
			ivjJComboBoxShedTimeUnits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxShedTimeUnits.setMinimumSize(new java.awt.Dimension(102, 23));
			// user code begin {1}
			ivjJComboBoxShedTimeUnits.addItem("minutes");
			ivjJComboBoxShedTimeUnits.addItem("hours");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxShedTimeUnits;
}
/**
 * Return the JComboBoxWhenChange property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxWhenChange() {
	if (ivjJComboBoxWhenChange == null) {
		try {
			ivjJComboBoxWhenChange = new javax.swing.JComboBox();
			ivjJComboBoxWhenChange.setName("JComboBoxWhenChange");
			ivjJComboBoxWhenChange.setPreferredSize(new java.awt.Dimension(170, 23));
			ivjJComboBoxWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxWhenChange.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxWhenChange.addItem("Manually Only");
			ivjJComboBoxWhenChange.addItem("After a Duration");
			ivjJComboBoxWhenChange.addItem("Priority Change");
			ivjJComboBoxWhenChange.addItem("Above Trigger");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxWhenChange;
}
/**
 * Return the JCSpinFieldChangeDuration property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeDuration() {
	if (ivjJCSpinFieldChangeDuration == null) {
		try {
			ivjJCSpinFieldChangeDuration = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeDuration.setName("JCSpinFieldChangeDuration");
			ivjJCSpinFieldChangeDuration.setPreferredSize(new java.awt.Dimension(45, 20));
			ivjJCSpinFieldChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeDuration.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeDuration.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(3)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeDuration;
}
/**
 * Return the JCSpinFieldChangePriority property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangePriority() {
	if (ivjJCSpinFieldChangePriority == null) {
		try {
			ivjJCSpinFieldChangePriority = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangePriority.setName("JCSpinFieldChangePriority");
			ivjJCSpinFieldChangePriority.setPreferredSize(new java.awt.Dimension(35, 30));
			ivjJCSpinFieldChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangePriority.setMaximumSize(new java.awt.Dimension(40, 30));
			// user code begin {1}
			ivjJCSpinFieldChangePriority.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(9999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(0)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangePriority;
}
/**
 * Return the JCSpinFieldChangeTriggerNumber property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeTriggerNumber() {
	if (ivjJCSpinFieldChangeTriggerNumber == null) {
		try {
			ivjJCSpinFieldChangeTriggerNumber = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeTriggerNumber.setName("JCSpinFieldChangeTriggerNumber");
			ivjJCSpinFieldChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJCSpinFieldChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeTriggerNumber.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(1), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(1)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeTriggerNumber;
}
/**
 * Return the JCSpinFieldPercentReduction property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldPercentReduction() {
	if (ivjJCSpinFieldPercentReduction == null) {
		try {
			ivjJCSpinFieldPercentReduction = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldPercentReduction.setName("JCSpinFieldPercentReduction");
			ivjJCSpinFieldPercentReduction.setPreferredSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMaximumSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJCSpinFieldPercentReduction.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(100), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(100)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));

			ivjJCSpinFieldPercentReduction.setValue( new Integer(100) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldPercentReduction;
}
/**
 * Return the JCSpinFieldRampInPercent property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldRampInPercent() {
	if (ivjJCSpinFieldRampInPercent == null) {
		try {
			ivjJCSpinFieldRampInPercent = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldRampInPercent.setName("JCSpinFieldRampInPercent");
			ivjJCSpinFieldRampInPercent.setPreferredSize(new java.awt.Dimension(58, 20));
			ivjJCSpinFieldRampInPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldRampInPercent.setMaximumSize(new java.awt.Dimension(60, 20));
			ivjJCSpinFieldRampInPercent.setMinimumSize(new java.awt.Dimension(58, 20));
			// user code begin {1}
			ivjJCSpinFieldRampInPercent.setDataProperties(
								new com.klg.jclass.field.DataProperties(
									new com.klg.jclass.field.validate.JCIntegerValidator(
									null, new Integer(0), new Integer(100), null, true, 
									null, new Integer(1), "#,##0.###;-#,##0.###", false, 
									false, false, null, new Integer(100)), 
									new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
									new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
									new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldRampInPercent;
}
/**
 * Return the JCSpinFieldRampOutPercent property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldRampOutPercent() {
	if (ivjJCSpinFieldRampOutPercent == null) {
		try {
			ivjJCSpinFieldRampOutPercent = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldRampOutPercent.setName("JCSpinFieldRampOutPercent");
			ivjJCSpinFieldRampOutPercent.setPreferredSize(new java.awt.Dimension(58, 20));
			ivjJCSpinFieldRampOutPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldRampOutPercent.setMaximumSize(new java.awt.Dimension(60, 20));
			ivjJCSpinFieldRampOutPercent.setMinimumSize(new java.awt.Dimension(58, 20));
			// user code begin {1}
			ivjJCSpinFieldRampOutPercent.setDataProperties(
						new com.klg.jclass.field.DataProperties(
							new com.klg.jclass.field.validate.JCIntegerValidator(
								null, new Integer(0), new Integer(100), null, true, 
								null, new Integer(1), "#,##0.###;-#,##0.###", false, 
								false, false, null, new Integer(100)), 
								new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
								new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
								new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldRampOutPercent;
}
/**
 * Return the JLabelChangeDuration property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeDuration() {
	if (ivjJLabelChangeDuration == null) {
		try {
			ivjJLabelChangeDuration = new javax.swing.JLabel();
			ivjJLabelChangeDuration.setName("JLabelChangeDuration");
			ivjJLabelChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeDuration.setText("Change Duration:");
			ivjJLabelChangeDuration.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeDuration.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeDuration;
}
/**
 * Return the JLabelChangePriority property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangePriority() {
	if (ivjJLabelChangePriority == null) {
		try {
			ivjJLabelChangePriority = new javax.swing.JLabel();
			ivjJLabelChangePriority.setName("JLabelChangePriority");
			ivjJLabelChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangePriority.setText("Change Priority:");
			ivjJLabelChangePriority.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangePriority.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangePriority;
}
/**
 * Return the JLabelChangeTriggerNumber property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerNumber() {
	if (ivjJLabelChangeTriggerNumber == null) {
		try {
			ivjJLabelChangeTriggerNumber = new javax.swing.JLabel();
			ivjJLabelChangeTriggerNumber.setName("JLabelChangeTriggerNumber");
			ivjJLabelChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerNumber.setText("Trigger Number:");
			ivjJLabelChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerNumber.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerNumber;
}
/**
 * Return the JLabelChangeTriggerOffset property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerOffset() {
	if (ivjJLabelChangeTriggerOffset == null) {
		try {
			ivjJLabelChangeTriggerOffset = new javax.swing.JLabel();
			ivjJLabelChangeTriggerOffset.setName("JLabelChangeTriggerOffset");
			ivjJLabelChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerOffset.setText("Trigger Offset:");
			ivjJLabelChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerOffset.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerOffset;
}
/**
 * Return the JLabelCycleCntSndType property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCycleCntSndType() {
	if (ivjJLabelCycleCntSndType == null) {
		try {
			ivjJLabelCycleCntSndType = new javax.swing.JLabel();
			ivjJLabelCycleCntSndType.setName("JLabelCycleCntSndType");
			ivjJLabelCycleCntSndType.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelCycleCntSndType.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelCycleCntSndType.setText("Cycle Count Send Type:");
			ivjJLabelCycleCntSndType.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCycleCntSndType;
}
/**
 * Return the JLabelGroupSelection property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelGroupSelection() {
	if (ivjJLabelGroupSelection == null) {
		try {
			ivjJLabelGroupSelection = new javax.swing.JLabel();
			ivjJLabelGroupSelection.setName("JLabelGroupSelection");
			ivjJLabelGroupSelection.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelGroupSelection.setText("Group Selection Method:");
			ivjJLabelGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelGroupSelection;
}
/**
 * Return the JLabelHowToStop property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHowToStop() {
	if (ivjJLabelHowToStop == null) {
		try {
			ivjJLabelHowToStop = new javax.swing.JLabel();
			ivjJLabelHowToStop.setName("JLabelHowToStop");
			ivjJLabelHowToStop.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelHowToStop.setText("How to Stop Control:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHowToStop;
}
/**
 * Return the JLabelMinutesChDur property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMinutesChDur() {
	if (ivjJLabelMinutesChDur == null) {
		try {
			ivjJLabelMinutesChDur = new javax.swing.JLabel();
			ivjJLabelMinutesChDur.setName("JLabelMinutesChDur");
			ivjJLabelMinutesChDur.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMinutesChDur.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelMinutesChDur.setText("(min.)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMinutesChDur;
}
/**
 * Return the JLabelNumGroups property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNumGroups() {
	if (ivjJLabelNumGroups == null) {
		try {
			ivjJLabelNumGroups = new javax.swing.JLabel();
			ivjJLabelNumGroups.setName("JLabelNumGroups");
			ivjJLabelNumGroups.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelNumGroups.setText("# of Groups Each Time:");
			ivjJLabelNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNumGroups;
}
/**
 * Return the JLabelPercentReduction property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPercentReduction() {
	if (ivjJLabelPercentReduction == null) {
		try {
			ivjJLabelPercentReduction = new javax.swing.JLabel();
			ivjJLabelPercentReduction.setName("JLabelPercentReduction");
			ivjJLabelPercentReduction.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelPercentReduction.setText("Group Capacity Reduction %:");
			ivjJLabelPercentReduction.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelPercentReduction.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPercentReduction;
}
/**
 * Return the JLabelRampInInterval property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampInInterval() {
	if (ivjJLabelRampInInterval == null) {
		try {
			ivjJLabelRampInInterval = new javax.swing.JLabel();
			ivjJLabelRampInInterval.setName("JLabelRampInInterval");
			ivjJLabelRampInInterval.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampInInterval.setText("Ramp In Interval: ");
			ivjJLabelRampInInterval.setMaximumSize(new java.awt.Dimension(119, 14));
			ivjJLabelRampInInterval.setPreferredSize(new java.awt.Dimension(119, 14));
			ivjJLabelRampInInterval.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampInInterval.setMinimumSize(new java.awt.Dimension(119, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampInInterval;
}
/**
 * Return the JLabelRampInPercent property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampInPercent() {
	if (ivjJLabelRampInPercent == null) {
		try {
			ivjJLabelRampInPercent = new javax.swing.JLabel();
			ivjJLabelRampInPercent.setName("JLabelRampInPercent");
			ivjJLabelRampInPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampInPercent.setText("Ramp In Percent: ");
			ivjJLabelRampInPercent.setMaximumSize(new java.awt.Dimension(119, 14));
			ivjJLabelRampInPercent.setPreferredSize(new java.awt.Dimension(119, 14));
			ivjJLabelRampInPercent.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampInPercent.setMinimumSize(new java.awt.Dimension(119, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampInPercent;
}
/**
 * Return the JLabelRampInPercentSign property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampInPercentSign() {
	if (ivjJLabelRampInPercentSign == null) {
		try {
			ivjJLabelRampInPercentSign = new javax.swing.JLabel();
			ivjJLabelRampInPercentSign.setName("JLabelRampInPercentSign");
			ivjJLabelRampInPercentSign.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampInPercentSign.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampInPercentSign.setText("%");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampInPercentSign;
}
/**
 * Return the JLabelRampInSec property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampInSec() {
	if (ivjJLabelRampInSec == null) {
		try {
			ivjJLabelRampInSec = new javax.swing.JLabel();
			ivjJLabelRampInSec.setName("JLabelRampInSec");
			ivjJLabelRampInSec.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampInSec.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampInSec.setText("sec.");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampInSec;
}
/**
 * Return the JLabelRampOutInterval property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampOutInterval() {
	if (ivjJLabelRampOutInterval == null) {
		try {
			ivjJLabelRampOutInterval = new javax.swing.JLabel();
			ivjJLabelRampOutInterval.setName("JLabelRampOutInterval");
			ivjJLabelRampOutInterval.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampOutInterval.setText("Ramp Out Interval: ");
			ivjJLabelRampOutInterval.setMaximumSize(new java.awt.Dimension(182, 125));
			ivjJLabelRampOutInterval.setPreferredSize(new java.awt.Dimension(182, 125));
			ivjJLabelRampOutInterval.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampOutInterval.setMinimumSize(new java.awt.Dimension(182, 125));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampOutInterval;
}
/**
 * Return the JLabelRampOutPercent property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampOutPercent() {
	if (ivjJLabelRampOutPercent == null) {
		try {
			ivjJLabelRampOutPercent = new javax.swing.JLabel();
			ivjJLabelRampOutPercent.setName("JLabelRampOutPercent");
			ivjJLabelRampOutPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampOutPercent.setText("Ramp Out Percent: ");
			ivjJLabelRampOutPercent.setMaximumSize(new java.awt.Dimension(182, 125));
			ivjJLabelRampOutPercent.setPreferredSize(new java.awt.Dimension(182, 125));
			ivjJLabelRampOutPercent.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampOutPercent.setMinimumSize(new java.awt.Dimension(182, 125));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampOutPercent;
}
/**
 * Return the JLabelRampOutPercentSign property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampOutPercentSign() {
	if (ivjJLabelRampOutPercentSign == null) {
		try {
			ivjJLabelRampOutPercentSign = new javax.swing.JLabel();
			ivjJLabelRampOutPercentSign.setName("JLabelRampOutPercentSign");
			ivjJLabelRampOutPercentSign.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampOutPercentSign.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampOutPercentSign.setText("%");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampOutPercentSign;
}
/**
 * Return the JLabelRampOutSec property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampOutSec() {
	if (ivjJLabelRampOutSec == null) {
		try {
			ivjJLabelRampOutSec = new javax.swing.JLabel();
			ivjJLabelRampOutSec.setName("JLabelRampOutSec");
			ivjJLabelRampOutSec.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampOutSec.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampOutSec.setText("sec.");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampOutSec;
}
/**
 * Return the JLabelSendRate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSendRate() {
	if (ivjJLabelSendRate == null) {
		try {
			ivjJLabelSendRate = new javax.swing.JLabel();
			ivjJLabelSendRate.setName("JLabelSendRate");
			ivjJLabelSendRate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelSendRate.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelSendRate.setText("Refresh/Resend Rate:");
			ivjJLabelSendRate.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSendRate;
}
/**
 * Return the JLabelShedTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelShedTime() {
	if (ivjJLabelShedTime == null) {
		try {
			ivjJLabelShedTime = new javax.swing.JLabel();
			ivjJLabelShedTime.setName("JLabelShedTime");
			ivjJLabelShedTime.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelShedTime.setText("Shed Time:");
			ivjJLabelShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelShedTime;
}
/**
 * Return the JLabelWhenChange property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelWhenChange() {
	if (ivjJLabelWhenChange == null) {
		try {
			ivjJLabelWhenChange = new javax.swing.JLabel();
			ivjJLabelWhenChange.setName("JLabelWhenChange");
			ivjJLabelWhenChange.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelWhenChange.setText("When to Change:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelWhenChange;
}
/**
 * Return the JPanelChangeMethod property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelChangeMethod() {
	if (ivjJPanelChangeMethod == null) {
		try {
			ivjJPanelChangeMethod = new javax.swing.JPanel();
			ivjJPanelChangeMethod.setName("JPanelChangeMethod");
			ivjJPanelChangeMethod.setLayout(new java.awt.GridBagLayout());
			ivjJPanelChangeMethod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJPanelChangeMethod.setMaximumSize(new java.awt.Dimension(360, 90));
			ivjJPanelChangeMethod.setPreferredSize(new java.awt.Dimension(330, 87));
			ivjJPanelChangeMethod.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJPanelChangeMethod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);

			java.awt.GridBagConstraints constraintsJLabelChangeDuration = new java.awt.GridBagConstraints();
			constraintsJLabelChangeDuration.gridx = 1; constraintsJLabelChangeDuration.gridy = 2;
			constraintsJLabelChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeDuration.ipadx = -5;
			constraintsJLabelChangeDuration.ipady = 6;
			constraintsJLabelChangeDuration.insets = new java.awt.Insets(1, 5, 3, 5);
			getJPanelChangeMethod().add(getJLabelChangeDuration(), constraintsJLabelChangeDuration);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeDuration = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeDuration.gridx = 2; constraintsJCSpinFieldChangeDuration.gridy = 2;
			constraintsJCSpinFieldChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeDuration.ipadx = 34;
			constraintsJCSpinFieldChangeDuration.ipady = 19;
			constraintsJCSpinFieldChangeDuration.insets = new java.awt.Insets(1, 5, 3, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeDuration(), constraintsJCSpinFieldChangeDuration);

			java.awt.GridBagConstraints constraintsJLabelMinutesChDur = new java.awt.GridBagConstraints();
			constraintsJLabelMinutesChDur.gridx = 3; constraintsJLabelMinutesChDur.gridy = 2;
			constraintsJLabelMinutesChDur.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelMinutesChDur.ipadx = 5;
			constraintsJLabelMinutesChDur.ipady = -2;
			constraintsJLabelMinutesChDur.insets = new java.awt.Insets(5, 1, 5, 2);
			getJPanelChangeMethod().add(getJLabelMinutesChDur(), constraintsJLabelMinutesChDur);

			java.awt.GridBagConstraints constraintsJLabelChangePriority = new java.awt.GridBagConstraints();
			constraintsJLabelChangePriority.gridx = 4; constraintsJLabelChangePriority.gridy = 2;
			constraintsJLabelChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangePriority.ipadx = -13;
			constraintsJLabelChangePriority.ipady = 6;
			constraintsJLabelChangePriority.insets = new java.awt.Insets(1, 3, 3, 2);
			getJPanelChangeMethod().add(getJLabelChangePriority(), constraintsJLabelChangePriority);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangePriority = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangePriority.gridx = 5; constraintsJCSpinFieldChangePriority.gridy = 2;
			constraintsJCSpinFieldChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangePriority.ipadx = 34;
			constraintsJCSpinFieldChangePriority.ipady = 19;
			constraintsJCSpinFieldChangePriority.insets = new java.awt.Insets(1, 3, 3, 8);
			getJPanelChangeMethod().add(getJCSpinFieldChangePriority(), constraintsJCSpinFieldChangePriority);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerNumber.gridx = 1; constraintsJLabelChangeTriggerNumber.gridy = 3;
			constraintsJLabelChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerNumber.ipadx = -45;
			constraintsJLabelChangeTriggerNumber.ipady = 6;
			constraintsJLabelChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 5);
			getJPanelChangeMethod().add(getJLabelChangeTriggerNumber(), constraintsJLabelChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerOffset.gridx = 4; constraintsJLabelChangeTriggerOffset.gridy = 3;
			constraintsJLabelChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerOffset.ipadx = -63;
			constraintsJLabelChangeTriggerOffset.insets = new java.awt.Insets(8, 3, 17, 12);
			getJPanelChangeMethod().add(getJLabelChangeTriggerOffset(), constraintsJLabelChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJTextFieldChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJTextFieldChangeTriggerOffset.gridx = 5; constraintsJTextFieldChangeTriggerOffset.gridy = 3;
			constraintsJTextFieldChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextFieldChangeTriggerOffset.weightx = 1.0;
			constraintsJTextFieldChangeTriggerOffset.ipadx = 31;
			constraintsJTextFieldChangeTriggerOffset.insets = new java.awt.Insets(4, 3, 15, 8);
			getJPanelChangeMethod().add(getJTextFieldChangeTriggerOffset(), constraintsJTextFieldChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeTriggerNumber.gridx = 2; constraintsJCSpinFieldChangeTriggerNumber.gridy = 3;
			constraintsJCSpinFieldChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeTriggerNumber.ipadx = 34;
			constraintsJCSpinFieldChangeTriggerNumber.ipady = 19;
			constraintsJCSpinFieldChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeTriggerNumber(), constraintsJCSpinFieldChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelWhenChange = new java.awt.GridBagConstraints();
			constraintsJLabelWhenChange.gridx = 1; constraintsJLabelWhenChange.gridy = 1;
			constraintsJLabelWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelWhenChange.ipadx = 3;
			constraintsJLabelWhenChange.ipady = 4;
			constraintsJLabelWhenChange.insets = new java.awt.Insets(0, 5, 4, 5);
			getJPanelChangeMethod().add(getJLabelWhenChange(), constraintsJLabelWhenChange);

			java.awt.GridBagConstraints constraintsJComboBoxWhenChange = new java.awt.GridBagConstraints();
			constraintsJComboBoxWhenChange.gridx = 3; constraintsJComboBoxWhenChange.gridy = 1;
			constraintsJComboBoxWhenChange.gridwidth = 3;
			constraintsJComboBoxWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJComboBoxWhenChange.weightx = 1.0;
			constraintsJComboBoxWhenChange.ipadx = 170;
			constraintsJComboBoxWhenChange.ipady = 23;
			constraintsJComboBoxWhenChange.insets = new java.awt.Insets(0, 3, 1, 8);
			getJPanelChangeMethod().add(getJComboBoxWhenChange(), constraintsJComboBoxWhenChange);
			// user code begin {1}
			jComboBoxWhenChange_ActionPerformed(null);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelChangeMethod;
}
/**
 * Return the JTextFieldChangeTriggerOffset property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldChangeTriggerOffset() {
	if (ivjJTextFieldChangeTriggerOffset == null) {
		try {
			ivjJTextFieldChangeTriggerOffset = new javax.swing.JTextField();
			ivjJTextFieldChangeTriggerOffset.setName("JTextFieldChangeTriggerOffset");
			ivjJTextFieldChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJTextFieldChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJTextFieldChangeTriggerOffset.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999.9999, 99999.9999, 4) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldChangeTriggerOffset;
}
/**
 * Return the JTextFieldRampInInterval property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldRampInInterval() {
	if (ivjJTextFieldRampInInterval == null) {
		try {
			ivjJTextFieldRampInInterval = new javax.swing.JTextField();
			ivjJTextFieldRampInInterval.setName("JTextFieldRampInInterval");
			ivjJTextFieldRampInInterval.setPreferredSize(new java.awt.Dimension(58, 20));
			ivjJTextFieldRampInInterval.setMaximumSize(new java.awt.Dimension(61, 20));
			ivjJTextFieldRampInInterval.setMinimumSize(new java.awt.Dimension(58, 20));
			// user code begin {1}
			ivjJTextFieldRampInInterval.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999, 99999) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldRampInInterval;
}
/**
 * Return the JTextFieldRampOutInterval property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldRampOutInterval() {
	if (ivjJTextFieldRampOutInterval == null) {
		try {
			ivjJTextFieldRampOutInterval = new javax.swing.JTextField();
			ivjJTextFieldRampOutInterval.setName("JTextFieldRampOutInterval");
			ivjJTextFieldRampOutInterval.setPreferredSize(new java.awt.Dimension(58, 20));
			ivjJTextFieldRampOutInterval.setMaximumSize(new java.awt.Dimension(61, 20));
			ivjJTextFieldRampOutInterval.setMinimumSize(new java.awt.Dimension(58, 20));
			// user code begin {1}
			ivjJTextFieldRampOutInterval.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999, 99999) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldRampOutInterval;
}
/**
 * getValue method comment.
 */
public Object getValue(Object o) 
{
	com.cannontech.database.db.device.lm.LMProgramDirectGear gear = null;
	
	gear = (LMProgramDirectGear)o;
	
	if( getJComboBoxHowToStop().getSelectedItem() != null )
	{
		gear.setMethodStopType( 
			com.cannontech.common.util.StringUtils.removeChars( ' ', getJComboBoxHowToStop().getSelectedItem().toString() ) );
	}
	
	if(gear.getMethodStopType().compareTo(LMProgramDirectGear.STOP_RAMP_OUT) == 0)
	{
		gear.setRampOutPercent(new Integer(((Number)getJCSpinFieldRampOutPercent().getValue()).intValue()));
		gear.setRampOutInterval(new Integer(getJTextFieldRampOutInterval().getText()));
	}
		
	if(getJCheckBoxRampIn().isSelected())
	{
		gear.setRampInPercent(new Integer(((Number)getJCSpinFieldRampInPercent().getValue()).intValue()));
		gear.setRampInInterval(new Integer(getJTextFieldRampInInterval().getText()));
	}

	gear.setMethodOptionType((String)getJComboBoxCycleCountSndType().getSelectedItem());
	
	gear.setPercentReduction( new Integer( ((Number)getJCSpinFieldPercentReduction().getValue()).intValue() ) );
	
	gear.setChangeCondition( getChangeCondition(getJComboBoxWhenChange().getSelectedItem().toString()) );

	gear.setChangeDuration( new Integer( ((Number)getJCSpinFieldChangeDuration().getValue()).intValue() * 60 ) );
	gear.setChangePriority( new Integer( ((Number)getJCSpinFieldChangePriority().getValue()).intValue() ) );
	gear.setChangeTriggerNumber( new Integer( ((Number)getJCSpinFieldChangeTriggerNumber().getValue()).intValue() ) );
	
	if( getJTextFieldChangeTriggerOffset().getText() == null || getJTextFieldChangeTriggerOffset().getText().length() <= 0 )
		gear.setChangeTriggerOffset( new Double(0.0) );
	else
		gear.setChangeTriggerOffset( Double.valueOf(getJTextFieldChangeTriggerOffset().getText()) );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	String shedTimeString = (String)(getJComboBoxShedTimeDigits().getSelectedItem()) + " " + (String)(getJComboBoxShedTimeUnits().getSelectedItem());	
	t.setShedTime( com.cannontech.common.util.CtiUtilities.getIntervalSecondsValue( shedTimeString ) );

	t.setNumberOfGroups( getJComboBoxNumGroups().getSelectedItem() );

	String sendRateString = (String)(getJComboBoxSendRateDigits().getSelectedItem()) + " " + (String)(getJComboBoxSendRateUnits().getSelectedItem());	
	t.setRefreshRate( com.cannontech.common.util.CtiUtilities.getIntervalSecondsValue( sendRateString ) );
		
	t.setGroupSelectionMethod( StringUtils.removeChars( ' ', getJComboBoxGroupSelection().getSelectedItem().toString() ) );
		
	return t;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	getJCSpinFieldChangeDuration().addValueListener(this);
	getJCSpinFieldChangePriority().addValueListener(this);
	getJCSpinFieldChangeTriggerNumber().addValueListener(this);
	getJCSpinFieldPercentReduction().addValueListener(this);
	getJCSpinFieldRampOutPercent().addValueListener(this);
	getJCSpinFieldRampInPercent().addValueListener(this);
	getJComboBoxWhenChange().addActionListener(this);
	
	getJComboBoxShedTimeDigits().addActionListener(this);
	getJComboBoxShedTimeUnits().addActionListener(this);
	getJComboBoxNumGroups().addActionListener(this);
	getJComboBoxSendRateDigits().addActionListener(this);
	getJComboBoxSendRateUnits().addActionListener(this);
	getJComboBoxGroupSelection().addActionListener(this);
	getJComboBoxHowToStop().addActionListener(this);
	getJTextFieldChangeTriggerOffset().addCaretListener(this);
	
	// user code end
	getJCheckBoxRampIn().addActionListener(ivjEventHandler);
	getJComboBoxWhenChange().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("TimeRefreshGearPanel");
		setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
		setLayout(new java.awt.GridBagLayout());
		setPreferredSize(new java.awt.Dimension(402, 430));
		setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
		setSize(402, 430);
		setMinimumSize(new java.awt.Dimension(0, 0));

		java.awt.GridBagConstraints constraintsJLabelShedTime = new java.awt.GridBagConstraints();
		constraintsJLabelShedTime.gridx = 1; constraintsJLabelShedTime.gridy = 1;
		constraintsJLabelShedTime.ipadx = 83;
		constraintsJLabelShedTime.insets = new java.awt.Insets(11, 10, 7, 1);
		add(getJLabelShedTime(), constraintsJLabelShedTime);

		java.awt.GridBagConstraints constraintsJLabelNumGroups = new java.awt.GridBagConstraints();
		constraintsJLabelNumGroups.gridx = 1; constraintsJLabelNumGroups.gridy = 2;
		constraintsJLabelNumGroups.ipadx = 17;
		constraintsJLabelNumGroups.insets = new java.awt.Insets(6, 10, 5, 1);
		add(getJLabelNumGroups(), constraintsJLabelNumGroups);

		java.awt.GridBagConstraints constraintsJComboBoxNumGroups = new java.awt.GridBagConstraints();
		constraintsJComboBoxNumGroups.gridx = 2; constraintsJComboBoxNumGroups.gridy = 2;
		constraintsJComboBoxNumGroups.gridwidth = 4;
		constraintsJComboBoxNumGroups.weightx = 1.0;
		constraintsJComboBoxNumGroups.ipadx = 1;
		constraintsJComboBoxNumGroups.insets = new java.awt.Insets(2, 1, 2, 97);
		add(getJComboBoxNumGroups(), constraintsJComboBoxNumGroups);

		java.awt.GridBagConstraints constraintsJLabelSendRate = new java.awt.GridBagConstraints();
		constraintsJLabelSendRate.gridx = 1; constraintsJLabelSendRate.gridy = 4;
		constraintsJLabelSendRate.ipadx = 8;
		constraintsJLabelSendRate.insets = new java.awt.Insets(7, 1, 5, 1);
		add(getJLabelSendRate(), constraintsJLabelSendRate);

		java.awt.GridBagConstraints constraintsJLabelGroupSelection = new java.awt.GridBagConstraints();
		constraintsJLabelGroupSelection.gridx = 1; constraintsJLabelGroupSelection.gridy = 5;
		constraintsJLabelGroupSelection.ipadx = 12;
		constraintsJLabelGroupSelection.insets = new java.awt.Insets(7, 10, 5, 1);
		add(getJLabelGroupSelection(), constraintsJLabelGroupSelection);

		java.awt.GridBagConstraints constraintsJComboBoxGroupSelection = new java.awt.GridBagConstraints();
		constraintsJComboBoxGroupSelection.gridx = 2; constraintsJComboBoxGroupSelection.gridy = 5;
		constraintsJComboBoxGroupSelection.gridwidth = 4;
		constraintsJComboBoxGroupSelection.weightx = 1.0;
		constraintsJComboBoxGroupSelection.ipadx = 1;
		constraintsJComboBoxGroupSelection.insets = new java.awt.Insets(3, 1, 2, 59);
		add(getJComboBoxGroupSelection(), constraintsJComboBoxGroupSelection);

		java.awt.GridBagConstraints constraintsJLabelHowToStop = new java.awt.GridBagConstraints();
		constraintsJLabelHowToStop.gridx = 1; constraintsJLabelHowToStop.gridy = 9;
		constraintsJLabelHowToStop.ipadx = 4;
		constraintsJLabelHowToStop.insets = new java.awt.Insets(9, 10, 5, 31);
		add(getJLabelHowToStop(), constraintsJLabelHowToStop);

		java.awt.GridBagConstraints constraintsJLabelPercentReduction = new java.awt.GridBagConstraints();
		constraintsJLabelPercentReduction.gridx = 1; constraintsJLabelPercentReduction.gridy = 12;
		constraintsJLabelPercentReduction.gridwidth = 2;
		constraintsJLabelPercentReduction.ipadx = 53;
		constraintsJLabelPercentReduction.ipady = 3;
		constraintsJLabelPercentReduction.insets = new java.awt.Insets(7, 10, 4, 9);
		add(getJLabelPercentReduction(), constraintsJLabelPercentReduction);

		java.awt.GridBagConstraints constraintsJComboBoxHowToStop = new java.awt.GridBagConstraints();
		constraintsJComboBoxHowToStop.gridx = 2; constraintsJComboBoxHowToStop.gridy = 9;
		constraintsJComboBoxHowToStop.gridwidth = 4;
		constraintsJComboBoxHowToStop.weightx = 1.0;
		constraintsJComboBoxHowToStop.ipadx = 1;
		constraintsJComboBoxHowToStop.insets = new java.awt.Insets(4, 1, 3, 59);
		add(getJComboBoxHowToStop(), constraintsJComboBoxHowToStop);

		java.awt.GridBagConstraints constraintsJCSpinFieldPercentReduction = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldPercentReduction.gridx = 3; constraintsJCSpinFieldPercentReduction.gridy = 12;
		constraintsJCSpinFieldPercentReduction.gridwidth = 3;
		constraintsJCSpinFieldPercentReduction.ipadx = 88;
		constraintsJCSpinFieldPercentReduction.ipady = 20;
		constraintsJCSpinFieldPercentReduction.insets = new java.awt.Insets(5, 9, 3, 121);
		add(getJCSpinFieldPercentReduction(), constraintsJCSpinFieldPercentReduction);

		java.awt.GridBagConstraints constraintsJPanelChangeMethod = new java.awt.GridBagConstraints();
		constraintsJPanelChangeMethod.gridx = 1; constraintsJPanelChangeMethod.gridy = 13;
		constraintsJPanelChangeMethod.gridwidth = 5;
		constraintsJPanelChangeMethod.fill = java.awt.GridBagConstraints.VERTICAL;
		constraintsJPanelChangeMethod.weightx = 1.0;
		constraintsJPanelChangeMethod.weighty = 1.0;
		constraintsJPanelChangeMethod.ipadx = 10;
		constraintsJPanelChangeMethod.insets = new java.awt.Insets(3, 7, 8, 55);
		add(getJPanelChangeMethod(), constraintsJPanelChangeMethod);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateDigits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateDigits.gridx = 2; constraintsJComboBoxSendRateDigits.gridy = 4;
		constraintsJComboBoxSendRateDigits.gridwidth = 3;
		constraintsJComboBoxSendRateDigits.weightx = 1.0;
		constraintsJComboBoxSendRateDigits.insets = new java.awt.Insets(3, 1, 2, 0);
		add(getJComboBoxSendRateDigits(), constraintsJComboBoxSendRateDigits);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateUnits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateUnits.gridx = 5; constraintsJComboBoxSendRateUnits.gridy = 4;
		constraintsJComboBoxSendRateUnits.weightx = 1.0;
		constraintsJComboBoxSendRateUnits.ipadx = 8;
		constraintsJComboBoxSendRateUnits.insets = new java.awt.Insets(3, 1, 2, 70);
		add(getJComboBoxSendRateUnits(), constraintsJComboBoxSendRateUnits);

		java.awt.GridBagConstraints constraintsJComboBoxCycleCountSndType = new java.awt.GridBagConstraints();
		constraintsJComboBoxCycleCountSndType.gridx = 2; constraintsJComboBoxCycleCountSndType.gridy = 3;
		constraintsJComboBoxCycleCountSndType.gridwidth = 4;
		constraintsJComboBoxCycleCountSndType.weightx = 1.0;
		constraintsJComboBoxCycleCountSndType.ipadx = 1;
		constraintsJComboBoxCycleCountSndType.insets = new java.awt.Insets(3, 1, 2, 97);
		add(getJComboBoxCycleCountSndType(), constraintsJComboBoxCycleCountSndType);

		java.awt.GridBagConstraints constraintsJLabelCycleCntSndType = new java.awt.GridBagConstraints();
		constraintsJLabelCycleCntSndType.gridx = 1; constraintsJLabelCycleCntSndType.gridy = 3;
		constraintsJLabelCycleCntSndType.insets = new java.awt.Insets(6, 10, 6, 17);
		add(getJLabelCycleCntSndType(), constraintsJLabelCycleCntSndType);

		java.awt.GridBagConstraints constraintsJCSpinFieldRampOutPercent = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldRampOutPercent.gridx = 2; constraintsJCSpinFieldRampOutPercent.gridy = 10;
		constraintsJCSpinFieldRampOutPercent.gridwidth = 2;
		constraintsJCSpinFieldRampOutPercent.insets = new java.awt.Insets(3, 1, 2, 2);
		add(getJCSpinFieldRampOutPercent(), constraintsJCSpinFieldRampOutPercent);

		java.awt.GridBagConstraints constraintsJLabelRampOutPercent = new java.awt.GridBagConstraints();
		constraintsJLabelRampOutPercent.gridx = 1; constraintsJLabelRampOutPercent.gridy = 10;
		constraintsJLabelRampOutPercent.ipadx = -57;
		constraintsJLabelRampOutPercent.ipady = -111;
		constraintsJLabelRampOutPercent.insets = new java.awt.Insets(7, 10, 4, 22);
		add(getJLabelRampOutPercent(), constraintsJLabelRampOutPercent);

		java.awt.GridBagConstraints constraintsJLabelRampOutPercentSign = new java.awt.GridBagConstraints();
		constraintsJLabelRampOutPercentSign.gridx = 4; constraintsJLabelRampOutPercentSign.gridy = 10;
		constraintsJLabelRampOutPercentSign.gridwidth = 2;
		constraintsJLabelRampOutPercentSign.ipadx = 8;
		constraintsJLabelRampOutPercentSign.insets = new java.awt.Insets(5, 2, 4, 163);
		add(getJLabelRampOutPercentSign(), constraintsJLabelRampOutPercentSign);

		java.awt.GridBagConstraints constraintsJTextFieldRampOutInterval = new java.awt.GridBagConstraints();
		constraintsJTextFieldRampOutInterval.gridx = 2; constraintsJTextFieldRampOutInterval.gridy = 11;
		constraintsJTextFieldRampOutInterval.gridwidth = 2;
		constraintsJTextFieldRampOutInterval.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJTextFieldRampOutInterval.weightx = 1.0;
		constraintsJTextFieldRampOutInterval.insets = new java.awt.Insets(3, 1, 4, 2);
		add(getJTextFieldRampOutInterval(), constraintsJTextFieldRampOutInterval);

		java.awt.GridBagConstraints constraintsJLabelRampOutSec = new java.awt.GridBagConstraints();
		constraintsJLabelRampOutSec.gridx = 4; constraintsJLabelRampOutSec.gridy = 11;
		constraintsJLabelRampOutSec.gridwidth = 2;
		constraintsJLabelRampOutSec.ipadx = 59;
		constraintsJLabelRampOutSec.insets = new java.awt.Insets(5, 2, 6, 100);
		add(getJLabelRampOutSec(), constraintsJLabelRampOutSec);

		java.awt.GridBagConstraints constraintsJLabelRampOutInterval = new java.awt.GridBagConstraints();
		constraintsJLabelRampOutInterval.gridx = 1; constraintsJLabelRampOutInterval.gridy = 11;
		constraintsJLabelRampOutInterval.ipadx = -57;
		constraintsJLabelRampOutInterval.ipady = -111;
		constraintsJLabelRampOutInterval.insets = new java.awt.Insets(5, 10, 8, 22);
		add(getJLabelRampOutInterval(), constraintsJLabelRampOutInterval);

		java.awt.GridBagConstraints constraintsJCheckBoxRampIn = new java.awt.GridBagConstraints();
		constraintsJCheckBoxRampIn.gridx = 1; constraintsJCheckBoxRampIn.gridy = 6;
		constraintsJCheckBoxRampIn.ipadx = 53;
		constraintsJCheckBoxRampIn.ipady = -2;
		constraintsJCheckBoxRampIn.insets = new java.awt.Insets(3, 5, 1, 22);
		add(getJCheckBoxRampIn(), constraintsJCheckBoxRampIn);

		java.awt.GridBagConstraints constraintsJLabelRampInInterval = new java.awt.GridBagConstraints();
		constraintsJLabelRampInInterval.gridx = 1; constraintsJLabelRampInInterval.gridy = 8;
		constraintsJLabelRampInInterval.insets = new java.awt.Insets(6, 10, 7, 28);
		add(getJLabelRampInInterval(), constraintsJLabelRampInInterval);

		java.awt.GridBagConstraints constraintsJTextFieldRampInInterval = new java.awt.GridBagConstraints();
		constraintsJTextFieldRampInInterval.gridx = 2; constraintsJTextFieldRampInInterval.gridy = 8;
		constraintsJTextFieldRampInInterval.gridwidth = 2;
		constraintsJTextFieldRampInInterval.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJTextFieldRampInInterval.weightx = 1.0;
		constraintsJTextFieldRampInInterval.insets = new java.awt.Insets(3, 1, 4, 2);
		add(getJTextFieldRampInInterval(), constraintsJTextFieldRampInInterval);

		java.awt.GridBagConstraints constraintsJLabelRampInSec = new java.awt.GridBagConstraints();
		constraintsJLabelRampInSec.gridx = 4; constraintsJLabelRampInSec.gridy = 8;
		constraintsJLabelRampInSec.gridwidth = 2;
		constraintsJLabelRampInSec.ipadx = 49;
		constraintsJLabelRampInSec.insets = new java.awt.Insets(5, 2, 6, 110);
		add(getJLabelRampInSec(), constraintsJLabelRampInSec);

		java.awt.GridBagConstraints constraintsJLabelRampInPercentSign = new java.awt.GridBagConstraints();
		constraintsJLabelRampInPercentSign.gridx = 4; constraintsJLabelRampInPercentSign.gridy = 7;
		constraintsJLabelRampInPercentSign.gridwidth = 2;
		constraintsJLabelRampInPercentSign.ipadx = 8;
		constraintsJLabelRampInPercentSign.insets = new java.awt.Insets(4, 2, 4, 163);
		add(getJLabelRampInPercentSign(), constraintsJLabelRampInPercentSign);

		java.awt.GridBagConstraints constraintsJCSpinFieldRampInPercent = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldRampInPercent.gridx = 2; constraintsJCSpinFieldRampInPercent.gridy = 7;
		constraintsJCSpinFieldRampInPercent.gridwidth = 2;
		constraintsJCSpinFieldRampInPercent.insets = new java.awt.Insets(2, 1, 2, 2);
		add(getJCSpinFieldRampInPercent(), constraintsJCSpinFieldRampInPercent);

		java.awt.GridBagConstraints constraintsJLabelRampInPercent = new java.awt.GridBagConstraints();
		constraintsJLabelRampInPercent.gridx = 1; constraintsJLabelRampInPercent.gridy = 7;
		constraintsJLabelRampInPercent.insets = new java.awt.Insets(6, 10, 4, 28);
		add(getJLabelRampInPercent(), constraintsJLabelRampInPercent);

		java.awt.GridBagConstraints constraintsJComboBoxShedTimeDigits = new java.awt.GridBagConstraints();
		constraintsJComboBoxShedTimeDigits.gridx = 2; constraintsJComboBoxShedTimeDigits.gridy = 1;
		constraintsJComboBoxShedTimeDigits.gridwidth = 3;
		constraintsJComboBoxShedTimeDigits.weightx = 1.0;
		constraintsJComboBoxShedTimeDigits.insets = new java.awt.Insets(10, 1, 1, 0);
		add(getJComboBoxShedTimeDigits(), constraintsJComboBoxShedTimeDigits);

		java.awt.GridBagConstraints constraintsJComboBoxShedTimeUnits = new java.awt.GridBagConstraints();
		constraintsJComboBoxShedTimeUnits.gridx = 5; constraintsJComboBoxShedTimeUnits.gridy = 1;
		constraintsJComboBoxShedTimeUnits.weightx = 1.0;
		constraintsJComboBoxShedTimeUnits.ipadx = 8;
		constraintsJComboBoxShedTimeUnits.insets = new java.awt.Insets(10, 1, 1, 70);
		add(getJComboBoxShedTimeUnits(), constraintsJComboBoxShedTimeUnits);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	rampItOut(false);
	rampItIn(false);
	
	getJComboBoxWhenChange().setSelectedItem( LMProgramDirectGear.CHANGE_NONE );
	getJComboBoxShedTimeDigits().setSelectedItem("1");
	getJComboBoxShedTimeUnits().setSelectedItem("hours");
	getJComboBoxSendRateDigits().setSelectedItem("30");
	getJComboBoxSendRateUnits().setSelectedItem("minutes");
		try
	{
		initConnections();
	}
	catch(Exception e)	{ }
	// user code end
}
/**
 * Comment
 */
public void jCheckBoxRampIn_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	rampItIn(getJCheckBoxRampIn().isSelected());
	this.fireInputUpdate();
	return;
}
/**
 * Comment
 */
public void jComboBoxWhenChange_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getJLabelChangeDuration().setVisible(false);
	getJCSpinFieldChangeDuration().setVisible(false);
	getJLabelMinutesChDur().setVisible(false);
	
	getJLabelChangePriority().setVisible(false);
	getJCSpinFieldChangePriority().setVisible(false);
	
	getJLabelChangeTriggerNumber().setVisible(false);
	getJCSpinFieldChangeTriggerNumber().setVisible(false);

	getJLabelChangeTriggerOffset().setVisible(false);
	getJTextFieldChangeTriggerOffset().setVisible(false);

	
	if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_NONE )
		 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Manually Only" ) )
	{
		//None
		return;
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_DURATION )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "After a Duration" ) )
	{
		//Duration
		getJLabelChangeDuration().setVisible(true);
		getJCSpinFieldChangeDuration().setVisible(true);
		getJLabelMinutesChDur().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_PRIORITY )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Priority Change" ) )
	{
		//Priority
		getJLabelChangePriority().setVisible(true);
		getJCSpinFieldChangePriority().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_TRIGGER_OFFSET )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Above Trigger" ) )
	{
		//TriggerOffset
		getJLabelChangeTriggerNumber().setVisible(true);
		getJCSpinFieldChangeTriggerNumber().setVisible(true);

		getJLabelChangeTriggerOffset().setVisible(true);
		getJTextFieldChangeTriggerOffset().setVisible(true);
	}
	else
		throw new Error("Unknown LMProgramDirectGear control condition found, the value = " + getJComboBoxWhenChange().getSelectedItem().toString() );


	fireInputUpdate();
	return;
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		TimeRefreshGearPanel aTimeRefreshGearPanel;
		aTimeRefreshGearPanel = new TimeRefreshGearPanel();
		frame.setContentPane(aTimeRefreshGearPanel);
		frame.setSize(aTimeRefreshGearPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
public void rampItIn(boolean rampOrNotToRamp)
{
	getJLabelRampInInterval().setVisible(rampOrNotToRamp);
	getJLabelRampInPercent().setVisible(rampOrNotToRamp);
	getJLabelRampInPercentSign().setVisible(rampOrNotToRamp);
	getJLabelRampInSec().setVisible(rampOrNotToRamp);
	getJCSpinFieldRampInPercent().setVisible(rampOrNotToRamp);
	getJTextFieldRampInInterval().setVisible(rampOrNotToRamp);
}
public void rampItOut(boolean rampOrNotToRamp)
{
	getJLabelRampOutInterval().setVisible(rampOrNotToRamp);
	getJLabelRampOutPercent().setVisible(rampOrNotToRamp);
	getJLabelRampOutPercentSign().setVisible(rampOrNotToRamp);
	getJLabelRampOutSec().setVisible(rampOrNotToRamp);
	getJCSpinFieldRampOutPercent().setVisible(rampOrNotToRamp);
	getJTextFieldRampOutInterval().setVisible(rampOrNotToRamp);
}
/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private void setChangeCondition(String change) 
{
	if( change == null )
		return;

	if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_NONE) )
	{
		getJComboBoxWhenChange().setSelectedItem("Manually Only");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_DURATION) )
	{
		getJComboBoxWhenChange().setSelectedItem("After a Duration");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_PRIORITY) )
	{
		getJComboBoxWhenChange().setSelectedItem("Priority Change");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_TRIGGER_OFFSET) )
	{
		getJComboBoxWhenChange().setSelectedItem("Above Trigger");
	}	
	
}
/**
* @return
*/

/**
* @param box
*/
public void setJComboBoxCycleCountSndType(javax.swing.JComboBox box) 
{
	ivjJComboBoxCycleCountSndType = box;
}
/**
 * setValue method comment.
 */
public void setValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	if( o == null )
	{
		return;
	}
	else
		gear = (LMProgramDirectGear)o;

	getJComboBoxHowToStop().setSelectedItem( StringUtils.addCharBetweenWords( ' ', gear.getMethodStopType() ) );
	
	if(gear.getMethodStopType().compareTo(LMProgramDirectGear.STOP_RAMP_OUT) == 0)
	{
		getJCSpinFieldRampOutPercent().setValue(gear.getRampOutPercent());
		getJTextFieldRampOutInterval().setText(gear.getRampOutInterval().toString());
	}
		
	if(gear.getRampInPercent().intValue() != 0 && gear.getRampInInterval().intValue() != 0)
	{
		getJCheckBoxRampIn().setSelected(true);
		getJCSpinFieldRampInPercent().setValue(gear.getRampInPercent());
		getJTextFieldRampInInterval().setText(gear.getRampInInterval().toString());
	}

	getJCSpinFieldPercentReduction().setValue( gear.getPercentReduction() );
	
	setChangeCondition( gear.getChangeCondition() );
	getJCSpinFieldChangeDuration().setValue( new Integer( gear.getChangeDuration().intValue() / 60 ) );
	getJCSpinFieldChangePriority().setValue( gear.getChangePriority() );
	getJCSpinFieldChangeTriggerNumber().setValue( gear.getChangeTriggerNumber() );	
	getJTextFieldChangeTriggerOffset().setText( gear.getChangeTriggerOffset().toString() );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxShedTimeDigits(), getJComboBoxShedTimeUnits(), t.getShedTime().intValue() );

	getJComboBoxNumGroups().setSelectedItem( t.getNumberOfGroups() );
	
	getJComboBoxCycleCountSndType().setSelectedItem(t.getMethodOptionType());

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxSendRateDigits(), getJComboBoxSendRateUnits(), t.getRefreshRate().intValue() );
		
	getJComboBoxGroupSelection().setSelectedItem( StringUtils.addCharBetweenWords( ' ', t.getGroupSelectionMethod() ) );
	
	
}
/**
 * valueChanged method comment.
 */
public void valueChanged(com.klg.jclass.util.value.JCValueEvent arg1) 
{
	//fire this event for all JCSpinFields!!
	this.fireInputUpdate();
}
/**
 * valueChanging method comment.
 */
public void valueChanging(com.klg.jclass.util.value.JCValueEvent arg1) {}
}
