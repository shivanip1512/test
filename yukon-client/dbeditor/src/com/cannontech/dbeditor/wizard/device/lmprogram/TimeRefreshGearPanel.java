package com.cannontech.dbeditor.wizard.device.lmprogram;

/**
 * Insert the type's description here.
 * Creation date: (8/1/2002 11:56:33 AM)
 * @author: 
 */

import com.cannontech.common.util.StringUtils;
import com.cannontech.database.db.device.lm.LMProgramDirectGear;
 
public class TimeRefreshGearPanel extends GenericGearPanel {
	
	private javax.swing.JComboBox ivjJComboBoxGroupSelection = null;
	private javax.swing.JComboBox ivjJComboBoxHowToStop = null;
	private javax.swing.JComboBox ivjJComboBoxNumGroups = null;
	private javax.swing.JComboBox ivjJComboBoxShedTime = null;
	private javax.swing.JComboBox ivjJComboBoxWhenChange = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeDuration = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangePriority = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeTriggerNumber = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldPercentReduction = null;
	private javax.swing.JLabel ivjJLabelChangeDuration = null;
	private javax.swing.JLabel ivjJLabelChangePriority = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerNumber = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerOffset = null;
	private javax.swing.JLabel ivjJLabelGroupSelection = null;
	private javax.swing.JLabel ivjJLabelHowToStop = null;
	private javax.swing.JLabel ivjJLabelMinutesChDur = null;
	private javax.swing.JLabel ivjJLabelNumGroups = null;
	private javax.swing.JLabel ivjJLabelPercentReduction = null;
	private javax.swing.JLabel ivjJLabelSendRate = null;
	private javax.swing.JLabel ivjJLabelShedTime = null;
	private javax.swing.JLabel ivjJLabelWhenChange = null;
	private javax.swing.JPanel ivjJPanelChangeMethod = null;
	private javax.swing.JTextField ivjJTextFieldChangeTriggerOffset = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateDigits = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateUnits = null;
/**
 * TimeRefreshGearPanel constructor comment.
 */
public TimeRefreshGearPanel() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJComboBoxWhenChange()) 
		connEtoC1(e);
	if (e.getSource() == getJComboBoxShedTime()) 
		connEtoC4(e);
	if (e.getSource() == getJComboBoxNumGroups()) 
		connEtoC5(e);
	if (e.getSource() == getJComboBoxSendRateDigits() || e.getSource() == getJComboBoxSendRateUnits()) 
		connEtoC7(e);
	if (e.getSource() == getJComboBoxGroupSelection()) 
		connEtoC8(e);
	if (e.getSource() == getJComboBoxHowToStop()) 
		connEtoC10(e);
	// user code begin {2}
	// user code end
}
	/**
	 * Called when the caret position is updated.
	 *
	 * @param e the caret event
	 */
public void caretUpdate(javax.swing.event.CaretEvent e) {}
/**
 * connEtoC1:  (JComboBoxWhenChange.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.jComboBoxWhenChange_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jComboBoxWhenChange_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC10:  (JComboBoxHowToStop.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JComboBoxShedTime.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (JComboBoxNumGroups.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC7:  (JComboBoxSendRate.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC8:  (JComboBoxGroupSelection.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G75CDDEAFGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155FD8FDCD45715FFF663F6E9CBDA5B1A06EDEC17A424B10D5B521636B6B1891B52DD131AAE6D1A2DE9E9C29B1B50DD5212568DEECB1A47BF01610F2828282893C50311A0A872CF14BF72D7D1C1D081C7E0E09EB393071949700820283FF36FFD673EB7431BE1085B5F476573B94E3B5FF34E3D671CFB6EFD773DFBE79472F68527A6A66589C2E22AA07FD5A68A4232A9C1683ED0F49631B6A1DEA7287E5E
	81DAAF541ECB014FDE60D5CD456BF2051612F4A85B20BC4F9A2F5B82579B05D3A5D9D63870524EAA0BA0BC3E7115BA5F6DBCF1825BC9236597F4D97019836484EC81D034C05AFFDD17AF63CB201CA3DF93CACC92047909C4E638BFDF0597A6B239E97933A0094824E796487C15009319B82014A4254E8CEA5D5F55D449E5436796892B1F5B1E14CD5AD2550FE412F58364CF3D70908DC43230E66BC9782C6D3CE2BEBE6298AB99B15A6D8E3BA40ED8CACC432249AAB9DCA5D72D570CAED309C97C48BAA21658461C
	AE0759E59C2B2969310E096744D117B8EEE9950D2ECE23DD3489429A6AC3C0FFBA2DDF9042214C6C7DC9F62DEC4F02AB0B046807F23C5ADB1B4C6C9CCAD66C8DBF3FB6B5B70554DD1619A56B8583FFA590EBF3AA935B6C813995D4767EBEA29B8857A1C0CBD35016E36F22AD3D573FA72C99BE1E344E0BAD79294C067AD44596E96815242DB497DA1BC9FFCE83AF98A88CE8A5509A207C35713A6DB487131A5E034F06E16904E3EC4CE1EFF0BA9BEDA657E907C93441F5CD8DF0E46C1CB862F01984016559BD7D45
	9A76A0152EF54FB1A5AFAE8A18970B4FFDDD10247224D48D5F42DE581154A457513BD6710D7975CA8B71EB927085C00B01A200D681252421DF9DCD07E7732B9DF249E5B75A3AA7061DC61754B8E13519C4176CDFE526AF7F340869B54FD90F45E551E1F5DC223EDD171426911728C505C97AB4960F2AB4A5AE2C6D1BDE5B6ECD1B599FF4EC2711BCDC57CF7250865709F20EB2FCAB4543D5B84B7187E85E12F2A4704A53B1EFFBF350070E1487055C32FACD9F021EB91294144E6C89CD776C5B275B487C9285789A
	205C0CF8DD91D09B1089E8B2837B773E2603FE66ED272AEF19EEE773E67894A7A517315DBEAE996DA36285234BEA9C36096302AC5357CCEC9FF6539B2063E9845AE8956D224BA8D99DF6285DB8A6C2A20DB399F373FAA26392A9174CC2504018D340FA9D4D9BC92C0D6352F92749A8090A8463DFEDA6317C48F881EA048A60FAD98609F9881D330260BA8C0845AA361DE0D9BA1807F59817BFB4EF004FD31058222D262649BAC24CB03A26307D5896B217089F09F629C9F40AF693DC0C4B3CBF36E4A8F199F5F01B
	7F0762E40C1CG4347B97EF64BFA06C39D6AA8A3BF2D15700D1264328ECFC8E237A8C9D63BD951DF57CAEC99F79BFE6302BC46CF129C2B823FBA010638FFC12D9BD57EF5B89CD7A61CBD246764B85DCB67D9896483F5F8CF5C54CF6E1121BA4C535F75E21EB6E57F13D07C42F14DBCA59429E3799923739CEB3BE81DCA9B0F7475FA99FB21BA6D31B77739A55CEB9B4937D9BFA196778B9DA46E3919713AE2200ECC0C7B3F376A59F8EBB40E0BB8424E3A2047C41312E5CC7659B66FB99659261DE37F51261DE3D1
	ED3EF3E8D51BD68EB15EFF3511FB0B632ADD1513F1ED9B6898365BC5EAB4D791581A63F7BDA496D63BD53AE8B519C5295BFACD04FE4EA43975849D03A6381E4C44DC3A3A87F329705A23C27860D64D7BD95043D5C91119AC8FD6E5AA3944ECFA231D44DC3409E39028930E893B4470F8BA3EE5DC1EDFFEFBD2DB7677A7C9BEDE9127E439BF1EDCAB10F944B6A1F25FC20D19A446AE6B98F4959930723AEFF126FA5D1712952FA3EB44DE783481B15D273BE001AAE82D2AD85EFC76B431EB9E48878105E6E15EB8CE
	EDD50DD7B9E1CEB8ECB696FE5EAF060EDC520F620793A2CC47E4C01F623E0CF4EC7060DD107DE27CAB9D44AF1BFAAE48A2FE7D142F73483D02E13F25586FA1D85949F86FBD1D2BDE2B1A464BB47B10D0D6365CF7591E772D08B3245EFA40BB335177D7BB54F3D5437838E344CAEF8BF2FF9C1DEC91BE6E7A165E012CA3B356361B33089DE46DEA4A46F5660DFA52B74B209C8D34065BF76F69197975255364A1E3546A9A077511C91C4498871FA631A277AD9946755CA1F56C422377FA0DDDEE8E0BD9E10EE76CF4
	1DB4F600776420ED5B4F2CD7458E561EF01BB6C34F22BD4F1EC9E679AE171FBF130A79AE60FC39BD4BF33E34C07D53B93E676379408F7110D98265659E98DBA31DEFA0310D4EE1EB249D9C37D13CF01D023335535D34AFC859823C1EDC3C178BDDB4866BA1FF56E38C064FE62BE25069305AA56E7F3ACEB23E9DAE2B59EAC7AC0FE230CA27939E3B9F9E2379B084F5CE82B16CB3948B04F2B0472E6490AC824A519CDBFD1DE02B211C35813116E9026921DC45319DB789E6003234816F07179AC8DE84C0B984A882
	A89AC858982FABG2A859A821A868A868A870A81CA4F037BCE9E566122F5F4C25989B49FA894A892A88EA8F7D33C2E9428934889B49FA894E885506ACDD847A76B23D5FDC65A546AF3E22337FC88704173A4E2BB792C75528E2174BCF79E46A4460B4E34879EAD479363262C8FA25CFCDD6F257DD49F764FE59D31C37EDC67C3E63BC7194C53A42737FA115F68D14E10FD5B8434C5D567C6A1350B0C2BC9DE4E2065A959070DC2CF9619470CB62B59CEE637BE38F7ED26631266FE9EDC9781B15907334838319927
	9C93B040D236903925D9F8CF8C8239D02015C0311B593A12697DED8E71456992C7C5975C5558D2C1EE67FEBA1EBA202E5EADA81FB96DE6D3AF4A6E21E3EA9E4885ED417B6DB72F12D80D42DC8F4B1DEE27B8A29872096C65E934EB9948C681A5G95G2FB69F5BA93FC9F4C151BAB6B1C62DE26DF450F19A82F221DCB6321154F53243B8AC5A3AAD22095C61B10677EDA6B9F4921E30069D0D0EC905AD733F65D847F54FCC0C353A9C934EF119771F97B728F595364C4F2DD0358BCB44F370AC043CFFD91B47F9D4
	2BDB14178B0C3F7F7896F55D6EA2F29D0FFD20585666385A6368169CCE19B76D5C4CF91D22EB847A621CE81A1097A4CC26456AE63FD2854646391D723B1DD6FB0BD53419E6D444641E39C66B217768939638070927C54962B0E1BD6F6FF77385C35184733A04312C9C5C2CA5F35ECEC4045C2D24EFC39B72D463E6E5BE4B538412B314BF50286677EEE57C3B36A27F6F37E869AF607C5753347497F17E2B55DA7ACBB97F319AADFEA467479E552AFF9567AF3F2C253F0673FB863478D95B103F3FD22BFEBD67C754
	2A79655B985F821FEC0D7CB7C755EB64E9199F8C1FE13C0E74BE2DB616F37E4A8AADFEB470F749F39F991F78477A7E6EACBDFCFEE07C48D8E23CAA15C08EB89DF64833121E331D038D9D6D2DE7CEB71F69E1EB31602B6A35D8156E005735586AED6C3E113EDDFEA601D9142DCF9A33717DE5BD70A63763FCD4B6C45E4B5035AA9A830BD0175554E8B4F75019132DBFBF151DAE6B07EE47756792DAE78C140502F8DDFE81BEBBCD6E43771C0B3F7A2050F1D71D66BB57681EFDC925854C4E1E82E56D98B074CA527C
	8272CE7CDA2F922F5FDEA771320BD775BCE6CDB0E759494B14227252C3457A7243257B3D473BE67A9D6DF8F7B43774A88197F03DDDFD837DDD8136E46DA01879063A1FC93D17611F9278E47CFFF0632F1775957E0F5C78A4D6FB5D745FF263272A74D9DCFF3497631A7023D041761D773D3E4B6E594162B9091F7F36CD087BDA249C570CFEA5AE467A826FF1ADAD56176EE7F9724751FCF51ECC160CDF059BD8CD8D1BEDD94CDEEBA0B1A37728509D188BB7DA546F5F172E5B1714694566985956741DCAAED4C1AE
	30764D366D5A6D636CA9775B3D0DE8C35BCEFCC77F5496446E62D8E1BAE2CBB836238631B80E7D1AE3C53B905BD30B58904712875265FE8A625897A9C66ED7119C9B2AA498D97B146BF18C5E2C58A7281E972F584CA59F0C1037A5A523648EC41C6437A34C4FBF57E2FBB6DE4F9F77FB69A3FA17E2FA5FBF1AAE67E6089E4771F78DE49C273F8373A6D055BBE8EBDD9FBEF3F6F2ECDDA57A9E768EBE63A4DDA2D8AC1453F763B3CEE05781783CE07CC0FEDB5BCC1FFB698BA6GBBDD8E2768122698CA1F7A6535EE
	DB7647FBBFFF61E36AFDF64EFA6CB930B807442CE8B7FB8ECC6478910A172BF0B67FBE254C3F408B590D31BBECA0FD163EA7DED788D48B5483A4814D5F0331FC212BD418651DF80F4359A1FE844B9E65ED999BFF7FF6C9FD6F487D5226A4344B532F10BD723B7BBD1E6FC40F5F78F8FB9F7F1C06E3BF6C712F89CBBE71FA2237313FCAEEB32510FD667EF89B45D90CB287C80C4A015789A48185828583ADA94498BD5DDB4CE2C4D22AC1120CA3967A768383F441AADED5E03270E63E45B628FDDB8E75C5832D86CA
	5F8B6B6F3DB31F5D18CD9303E42EAE85FE871089E89AE861DE34272BFF56FD2A66C99F7BD4DFEAC43B16C21D11C02BD4362C016B2CFD6E36B13D9FECD17B238719F220B6A08310F35FCCFF185E7EF4541B87B2C1C00BD53261F03DC2333D5DB56A76E2C0A681A877DD48E7202AF73D35771A1BDE87488D81C9C081C08B3D6A955522DEA848C4G2DD449464235D024E5E77A003A3DBC10A9822A15E5BB0B3C35F77F00673BA69348CE4A72019AFA0402818F7360AD03F21426EDE2A55A96A773D376ABF2797B3D59
	A69CC33DE28D19FA40FA00ACAA9E53FB6A285A27E9604F878A116516E854C547866051C02BD57C7477E64A32F9B0AA034CF7856F31F9F08B4763A85E2342597C38145E03C8B990F8ED8770BD4F5999FBA3A945333F37498719E28F39FAA877GD90ABD63114763BF8D3C79C0A1AA19A5F03D5C23AEF99F6C923966FB986CB6A673F2AE1179016CB7D80DB66BB57AFA389B846DE65666A122AA37FFD4F59D116DEDAF68FF03D89B3F7C2B36417C2FB5F85FABBAE1505EABEAB7E86F951DB5785EAB3AE8703ED7B4E0
	D06F953139FB411040F5FFE758ABF8D9274094FD9216D1E707BF90C7249E23196BBFE0A4FD9B8DB911G24FF9F66D8203677F16EAF3B3CDB20F33F46FD2859E496CFB8686E34445F6F8EF80F5576015977348B87487B27E107A4B946C87D083FB7C07ADBF2B8A948300383A446AE2B59A2B1D199BFC2572AB6F114426C7DEFB2DDCB1B40AF69FDFCA7EC98A2D8G1403B976CF948B03F28447B69889968965980EBDB70C6F1893F82CEE8CFA77FD5E20F61EFCEAD0BBCF668F7A5E378E9A7416C74C3EEFB6623B72
	0E9234798BDB510FA10E3D3C95E3A0F16C3DED68DBG476CC7717D79CA0E7D1CBE0B44C2B901E34FB7E1FD3987914BEFA6D8A1144BB9F62399ED296758334D58EE8F476A53510F900E1D5F093ACBB87640CEECF7B947E2F7E2FD519CFBF3827DA8ADC52C1ABE97B5C13907E33F390975D9B8D6FA0BE053D08E64583D375016A00E7D6A96363B18E3FF21EDA4C0B92B8C3102DB58061EE3E60A15C33909E34BF99B1D9C7B21895BB0F12C2E96E3954631AFDEC65DE59C7B75E5ECB70AE36F8FE0FDF19C9B63FDDEFF
	8831DDD42E874AA60E9DB290EC924A73B9F6B745C2209C4631988336914E31A787D0B777B0E26903B4DF20DC4E31B10A55C339D7112B22639C4A819C7B895DBBDD8865459CCB6C676DF26CE50A6516435A299C3169CA0CDFAD471E6CC37BBAB97619C19EFB0EEDB9C6678DA8C7F26C8417DB4531E7E99F159F01F1F98431CF50988CC1F912E351B47601D08E6658A0EDA3824AABB97652711976255551DC83193C8A449E9CC45F0AAA5CED2905F287478E25D2DB20BC4931F92968C7E0852EE5FE1DC15699D1D0CE
	GAA2C04FC85B28185820581C58125D7C19F82F5D6215E1BD44F896579C021C011C0F1C03955B0A601BA011CC07301C22BD16F99C328467D1934CB57EED56EEB9AE21737FB3A29F2A62FC94608AFE8AF7282D572E19A3A1E94D56939A6FBC35376B47953F3BF49577ED6268616A1FF123501FA8F0AD0366A5A579E9812FABF0E757D07B47FA3219FE22AB19F1E21D8821473EB906B28A0D8B1141BB876158A4C1BDE0E69697B15C5D08E67588DAA37824AB19CBBC047E28214730FA2F61A36DB8C65A60E7DA345FA
	216C64D8DC9F36BB0FE335343E95D00EBD0A776BC70D5E6F5721465957AA5F276B82915698BDD3CE11E1CF99691E776868384857C4BFB066F22CFD3C53B1EED5760936B512B3B1238E3B44763FCA69FDDB28057BC4AD6EFF0D8FE96F93FE1A2ED5EAC12E134BC68C117AA4B01C3D9FAD9F9184FCBF3A5F283D377788DD4BCCC39D730122EB69BDEC3849C71EA4FBD0B86890A279C75FB34375A372B5EB6367542F22E3B03E009836F4AB36BB443174ED68537CE3E8CB43B6DF36244AB6606752E30AAD840B04720E
	C4F63E0635F19F1DDB23G0FB906F1FBE30BFBBF2465537B4371F8DD41F1346D4DA6342D63B86A9DECF60FB759B543F63E5A0C7ECD9EC7DF221BE70BAB7A219557C5D04F9E3738DA697AA88C70F0EE674D1D58EEAC471E5B0936975421AD493BE60BEB2A4A1E36BA77389A6ABC633A6BA3520685F0298E6353D9639E57D13A8EDA887CC5F5E8DB4EAD34EDA557EB3D659E571F09CADC1F3A057E255423AFEBEE4D9657B49FF1AD07FAF00F03353F69283B5D87E84E5403DCC7BD5A5D4C6D1E2EC73BEFFA587D27D1
	456E7F66F6AF62F6C719E633BB43075DAB6B593BD7A59FAC741E3E8A70B8EE675317315D028644B287F8AEB720ADCD833365C306AA9FA69B5C73A1904AD637FC78A20DD99060A18D981F0A817738F6D0BB1683FFA517E9B7E84FF7C63AFECCEF84BF9AD176CB8677F86F3010F8B3FF5EB64C965BCC9F31EDEBE47BBECAECDF9D4076FBF87B3B865D5BBFCF3EADA367503CC1FA4641B869F146E1A1DD0B5D85F584AA75D4F9BF27D1C55739CBC0B6024B47743B4771AFF4BD9B877C04C66C4F7C7E597C4FD6752727
	7F45A762F5D7D463E62370E63F76190D9CFACF2F8279269318DF8F537B2D934A539CFB358F633768845A787060ECB9172932F14589771C0B0172185B38ADB966BD0E2DF47D3C9AF404A6EC3F5FE77BE9F20C3C65C8B15473CD785C4F5B0F2E556E73B5F4DCD601FCD393766117873463799D1AE7CE101B663271C7493AE2586122AF8158791F1CDA5C6F8F813925C02B01521B5999B3267751311967066EB906FA7AE6F6EE288ABEBB5C74F656E97BD1C11FADCCA06BEC46FE7D914D6705D0DE540C7A51356E7979
	A675FF85702339CCFB2A76FA44C81FB7F2DB603922857B697E5459F2F91DAAD7FBC04F52427A09FED7842EF13F0635ED35AB67F7581917268976ED89467F76B419D7D51B156EC23C9E111D1D21751C365AA7A4F17C048524105F5B6859CE274B6AF0D925A9F9BE3C20598E8A71F6466A36FA545363321A4D226B4C4458B0FDAF44640E75F811BBABAFC9E53909ECF2B66EE48FCCDC2AE635E5AF776C54325143GA63B35B51737FF51A25A19A863ED995FA8284E88A9EC79FCD0194E73FC8C4947G68BB466FB2F8
	1EFFA17C051C3F24D2CBBF1473072B3478911C7F65BE2D7AD7F27E5395DA7A311CFF4C2C4597DA113F4F4D3E3CD6462F657C2F19345A6F647C4DB34ECF913E09730B8EF81E5DA17C49D69CEF81FD5A7755E0BAAF8702DCB017FD314F7BBC7A87AA3F9CE4D7F279118A6D31FC1DBE5B253441F3DC9B0E656FD44CB66727892AF5E71BB267925C50461EAD8E727C2C3C24BD0F1E2577A58B48CBEDE867028A764CE61548239C13FB0CE2043F104BB5D6FA777F923D37AD8659A5DC5E54276D7FB40D55AA10DB43E53F
	6B259FFECCE50B5AA1A75AB1D6E9BE6F61E9027B3A56526E9E2BE9A8473B452A3BD2BBD6D728CF81A03FG082DE58E13E9CE566B9CA27BGEEE7EBDAE0F2AF5AED329AED8E736EE2FDE9313E6C905C883D1FDBFAF0C8AF4CFECE4C3B7ED3437E1EFB522A0379947CA139E6FB7A3F4A42BD7D02479E921AFE76FAA2BEDBF946F9E9BBFB2713F5D2B9CF90533BB61555299BD7EC8C583A4BB3CE4A9924324315457AC307774B327F3E55DFFF64B562360F973F38BAE6677B1292074E894566ABDBE6BBB745F4E22FAA
	BA7F5C64EFBEB0796CE6FFECE732CFB67B9B97E65736A9452FE357949BCF6E743FAF6E5DB9373E78554E5B6B0B216B0A4DF7CFABB6BFD76DDFDF3CFCD351F971665C7AE26FAD7F7B6205DBF36B0BA455D8BB3EDF31B177565CECB44C41466F1B66E62371BD4546F987949BBFFD59D73ED49ED1674BFFDC1EDB3E6C9E383DFCF924D831793977951BC3AF7B17AF0F15AABA7B8C37BF17CF9A7C7107357D63B2C56FAD3F6240745EB824522B7455B7E5074060727DF2FC724A953DFF6977DF4FD921687DF71F3FB1E2
	3AC1C7157EF922D629A7EB8EF63FF4CC517BD61F7F3978D65F6D65D6E21DE2FBE13DE2C35560CE6FB6D4D501890A7F2D8DCA9D9FB4AAF5DC9F703F0EFBCEA8FA625159721A1D352928456F79B7413DF97AA41E9FFDED8719FC343E37E81E3016CCC8D69B797D8D49A6B64A0F5472D9541B74B9152C8142CE62195245340DD8A8271C0A5795G31363FF38C4FC11683E6BB0567CA5FBA06F5041C42BA8E9CA732D1D0DE8D145501EB2C50A645677B86FD7479618A703A3A94F3E520C551FB2A56175EE1502B2AC43D
	475BD473C06A7F42BC107A7157E4F1F55EF372176D826F930B0E704973FDE18746B8003E8BA46B38G0E7D3E9231F00E7DC3956A2E61580ABE14B31CC66CCD7A8CC0ECD940B1490C581A5318D7FB0B5C3EE3201CCB66CF52CCF7241137F1866B7B158931859CBB5D0058F20E8D9EC0AC652C2F6FDDFC4F2FF14F62A91CD2749AAA7C19DB3C377B790A5B69F3E64F1E8ED2E257DD27153A47ABE69B77CC6E198A7A5E55B5A132BA24B3CA9D0DFE4D1D5E7D7BC25F6DBCE730BAFEF31BF372FDE71578BC5E2954FB2B
	EF367830F3DD0B3A4844D28B79538BB48D34GE891D0B8508A20982084203C4EF8DDB1D0BDD08F1085E892A890A8389377CAFF73A119CF3D1D01173FE4C38F03390C6CBB40EC6F3B36F6367356E11DDA67C8CF4E2A37D31879AC3CDE38FBD6BDCFE2E7B975F4AE0F6C74BC833F1F62D11D1EE7603FD50BF3FF8C70BA3A701C429347665ABE53FB76E36AA59D7FF87E7EA33D9F05F6F97A3B0862CB3BBC7DADBB0E7EAE83DE71B974F7CC67F97EF2BE70C24E4967EF4FF9B9FF8BF83487EFB514533B35F2619E837A
	D8A073CBD5F2CDF05D2B29373AD29D9B9B485C8534C016DD54BD53B6267715AACF1F1602EC24AC3FCAC30F509A4033FA5CF9FAA81777E85976E29F5A56A6738DAAB9A7DC4F53547BF30527EDC1A037D8168D17BFD7F86846C0B941834BBD9F2FAB842ABA6FF9DEE54A6C59C687488C49F2127C99F05E3D3E05D08E7540A2203C92A8F6C69B967E1DG61826365DDD0E40A603A7602167F2F1AD02FD3661BD4F213F09D2829F74E6D3B9141A0938634CC160D3A60AD97CC8778F9F6D9A665226ABCBBDC97DFF457E5
	736552AE6FE7CBFE50B57B591265DD5A67E0FF5AB5739C6C4F3A344F417E127EDE831E03E5582F3B48BA468C73F5AF17FB0DE3FD9C0B25F5926C2255A4D9B87E87EA97415BC452A062EB28DDD7A956ABE3EF2930BE99CBBAC7762340E50B43454F1E535FA19C355AEC2C1CC9E52C76F1D1627148BDC7EC34BA0DAA3BB7F10C58CD76B31205700D59D457E6350BA7582FE0713E5CC71F2F5875C15575125A3F7EB9751F7CFFE86361630ACFDFD7DDD79E7F6B375D79D7ED031D617AACFD8E28077156FB111F132418
	8D4A539CEB263F2F95G65E00E2552B3CEE1D00E6458E57AEC308A4A2BB91640FFBBA43D97315D55740C99141D9C8B214F9F73209C4C3104AA34AF0CE32D55D85FB20E7DAB5D2B4F6F0B571576A11649EDE9625802E96EAF47DE1EC6FFED9C2B3F01EDCCF2AC1C5B32CCE9239AF523B8E62B46D845F0EC389FE31540311FD620FD397D7C6C73F5EC3710E3C51598AB295F7DBCDEG14C3B876CC855A3704E35915D85FF20E7DE79F462A60927FAD17CA54AD65182592FDEB6258331568DBA7473ECB6BB3C1B900E3
	BA6E6FC20ED5F3FFC3157A2E21FD919C4B627E669990DBB9CA77F1205C46317B4DE83301E32FD24C89653BB8F64A02B687F24CD101B687F36C718A34B90CE3177A5066E50AEEAF5A9C45310CFE343978B2E27FD5B15366DB7499369EE48CDC6EA1937A6164586F78D974F99CABEB44FEDB413137CCB8E6E2B8565D0075A5F06C51862CAFF7001FA7B7E1FDC39C33B6203F9247AE65E0FD819C7BAA4596C2F9B147B257E19BCBB8F67DG5A17BE085855E42C2F00E34FA423EEA9471651185E856520C15C677B2ACE
	FB1F6FA9BAE7AD8639F0AE9B2FF3BFC7B42F1B4C5F723B70CC6D3398921D67E2210EB53C1E02E16F7B16C7689CD8B884F68F213CD465FECE63D3F45EB0G5FB204FB109BEF4C654CE2906891A25FC5A24F8B0B61BA7E6D375F4E667EB4D5EB6FC19A68DC348464A338FDCF983C7B33024E41F1A01BB004E7D176D6E3EC0B0CE87FC035BF679C3D595F8375B443673B5C7E177A357B63CD1A83C3A0EFB322BD65B41EC1D08E61581353E8638AA33E87FC043CCE104F2DDD74996F34D96C950659D91737A0662C3D5F
	D6E1FBD943585EF367859E47FBE94C2A0057B40CB6FE1A7A620472B4477ECC6708C5D08E9B4658AE3E6E4B560CD9ECDD85753CA66786EB230B4E27F100A78CE38E2475FB4F81BD3533E8841E33C650CEB61791FF07C6504E42CADFF6E64EE2E7600812832C0D0D6C37CE818F616D36D4E23B11A3986757AFA8F17E83BB538E3CF4937A76FC9FF996004530759A0CC1230D3CC64493622897C367F5E2DF39895BBA4CF28D4AB60E0DD13F03209CE262670D2F4D65DC2C275FAB201EC75C7A678875A19A70D86E436F
	C7B73A795000B31E2C13E1C67B73C534B5420C31EA92311E374C6EF3E0EE2F92BB095E971DA0BB4D6B882A40FA97F16C9576DD82A8C7F3EC9E0DDF56E83CAEFF946372095E597256D7DC5A201E3BA1AE4A5950C334BFFAG9F9AC5FF3E5868BDEF3FC16F0F01A09BB40AF6AEB7E1CCA2381D2962ECF92B36B3EE545D4E94F33C2ECED01FE16D276D6682DEE046F6770984EBA3E50E7DFD835AF21799ED89EF70675C0E577B0059F38CAD267EAE81BC02377BF95AEE9C1493B8B6AF87EDA936E0EC1F4CF14F154364
	91D01EBFF72F1B4BF797BC6D6C3530F7DB995C4E903AAEB0816E3420CD4149E853C28B466745645966ED75F8DBE6F1EFB78A4A679355E7F5DE76F25EB61E66DA8C482F36785A9FF8C127977C5D9F38207A9D1DBF99FD3DBFAFBD2C5E331C3A24681D2B72DF6F20EA8FBBEE7AF67621D8FD67CA146B0903CA5D65867FED8AD26D113FD165E35F321CECA11472338A35557E477909B2454E17D47B5B77D77AEA2FD4EE0F69559CD174827C0E9D13DFB16D3F2D17D57B61429CFC1CDF2568DD74397F6E9E7FEFD7ABFA
	7F6AF30F4ADD6F172A7D76CFDE1F5B3E3DF0DC690FBDF5CABDF7795CC3F2EF3F25DE517BDE050FFEBC8CF9F3D8491B24CA7FE3EAD56D2F872A76579F74559E499BD5FB1767505EB7D4FB710F790CC5399C8BA67BB615D5ED0D16F413FF71E78246699E1A6C47CFD5FB5FA5BE7B3B5CAD5EA52D0A5E135766565FDDEDCA9C25F6251E67C77D77D1EF7647C7A67B8B337FB13F6F24E20F492FF8B059EFD4789F7347D57B401DFE75AB535BFCC6519B691DDB4C2BD5FB198655DEE6749C7A7CD6172297E41AE50C2966
	66D7CC7E445F7BBE6C0367945BFF28FAA63F47178D9E73F5CC0F225756603F6DDFE970BFF7B2AFA8F616DCD45A7B1FFA7F6D7CD41F22F7B6E7EE77157BF37C37F5C93FE26BAFD46B87DB324FFD7BD27519276FA55FDE3F7E452058704E00E2C3EC6FEC7B6B6C7FC5DAFF7A61F5307EFBDDC89DF7899BE64AB6FC66451FAD9EEC4ACB92125A0535963A8752AE24DEA51BA913CED871FD9D6873639F8AB739E902A468486F576A498F5856C84266BDFA47281E7DA42D3E59B8E2C1C69E799DAE235D24BFA70E0B6443
	A891F88B955573DF195533DFF1A58AED0E2BFA4921A7BF8E2B07E9C1F2B9ECGEFE78AA70CCE6308D51A52735F05556F2D812F325DFA7E078F9CF9F579CB97461305356D42D6724228DBF4515F8392CDCDC6897FB31096A143C9FE841CACD75B0514F17A11BAAECD59448EA1EF749C79017CF1C9B4B560AF170CCB42268E5252C1F2A86BE01BF15CC20F669F6D90D26C643FAD91B6B0364DE8B79FE4BFBBF414C4D0C8EC2827E1A39B5382583B115ACBEAA96135ECFCE25D5EF7CE2EDA12ACA43588BA1B43E8EAB1
	0EC88ED73B10A1D948FF91603019A61DF52C22742BA4CF68F782213A6D5CFD62EC89F9B067C6DF197CF2E0F6CCF6CB12A0CC3A0403D412BC0B14F089729D9997B4A53A5AA5725F30B8DC051C77B7BB25FD4F37EEB1A489093213A48DB2A71D1230F654B8E635CD41C5939DE7B4C156C9E02D4BE89F9FF5384640B23D07E548628D14FC615952FB9F7DD3BFEDC0D11504DDAC1420FA50ACBA468EB60C0EDA6DA22FG628A556F60559319928F198D131F5BF472053707A18F1A04643152D27AEF997D779079370CA2
	E594A9BB84410D93FC7EF972A751E71ABCE04FBAEA8F697E129668C169672FBF7B60AFEA63E2413B96A1157E1CBEF4C22EA2453E11740945776E48DC907DE952C7CE12AA13245E0D133CC662E1BB5DE40C7E68F0CD72AB8FA5A789A9B0D85926ABA4AF59B90564F531311B8C0307669DF900A3ABC772501649C7B01996BEC9CBFA19C708FC7BD767BE4AE9A9E3C67E92B4FBE6A292F8BDCF87D24A23221B693FDB679CDC22351D6A6E60B1F9F7125B1D2A72ED2D975F12D43EA55D693E15E97B16F667D9DA25D83A
	F60625640F7442B738CC324CA736A65F693D50287816A137CB16A5295CEE72024429D13A233CB825F811A237CB5ADF6B458B777EA29AB37B0B3C7C6DF56BD362B179BECB0A068C7F63A5D8C9A5DAF88956FD09A76F3C38DDD2627630404661F137A838C78A671787846D4C565658B5A33674CF92F259F7CC757855DDD8782CAD9A335ACB76ABBC7C3AAD705649DFEB55333B089AE1DF0BA588796AAAD9D0B1759A3784B0EB146E286EF0CE3AA59C6EFFA5FA7102FC27747D999A09EE9AC426684E73743A7B64CFEC
	A629127AFF2B3F663977D7326C05377EA2936B1E999A69EE9AC42648CD7F339A25BBAA8A1FD322C0CE56E156264C6A459D6C537D0ACF6457E712E51B523DF8C1C6599E37A8E04F26384994795040F12025F1C74566D1771BAD76377BAD60EBEE8BEE0C06A203FF6C7B3E7BEF29FFBFFC4D5FE5F97D3FA7262758194E79D31E7F8F5861EE5242F240E32670EC7C5D6748E606375FDD6D9EB35AEC1251F62541EEA23F415AB8A5094A6FFCD6F5137A47D1C6E6B2DEDDB7317B83154E7F83D0CB87881B89459ECBA5G
	G70F9GGD0CB818294G94G88G88G75CDDEAF1B89459ECBA5GG70F9GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG05A5GGGG
**end of data**/
}
/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private String getChangeCondition( String change )
{

	if( change.equalsIgnoreCase("After a Duration") )
	{
		return LMProgramDirectGear.CHANGE_DURATION;
	}
	else if( change.equalsIgnoreCase("Priority Change") )
	{
		return LMProgramDirectGear.CHANGE_PRIORITY;
	}
	else if( change.equalsIgnoreCase("Above Trigger") )
	{
		return LMProgramDirectGear.CHANGE_TRIGGER_OFFSET;
	}	
	else
		return LMProgramDirectGear.CHANGE_NONE;

}
/**
 * Return the JComboBoxGroupSelection property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxGroupSelection() {
	if (ivjJComboBoxGroupSelection == null) {
		try {
			ivjJComboBoxGroupSelection = new javax.swing.JComboBox();
			ivjJComboBoxGroupSelection.setName("JComboBoxGroupSelection");
			ivjJComboBoxGroupSelection.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxGroupSelection.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LAST_CONTROLLED ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_ALWAYS_FIRST_GROUP ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LEAST_CONTROL_TIME ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxGroupSelection;
}
/**
 * Return the JComboBoxHowToStop property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxHowToStop() {
	if (ivjJComboBoxHowToStop == null) {
		try {
			ivjJComboBoxHowToStop = new javax.swing.JComboBox();
			ivjJComboBoxHowToStop.setName("JComboBoxHowToStop");
			ivjJComboBoxHowToStop.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_TIME_IN ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RESTORE ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxHowToStop;
}
/**
 * Return the JComboBoxNumGroups property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxNumGroups() {
	if (ivjJComboBoxNumGroups == null) {
		try {
			ivjJComboBoxNumGroups = new javax.swing.JComboBox();
			ivjJComboBoxNumGroups.setName("JComboBoxNumGroups");
			ivjJComboBoxNumGroups.setPreferredSize(new java.awt.Dimension(137, 23));
			ivjJComboBoxNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxNumGroups.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxNumGroups.addItem("All of Them");
			for( int i = 1; i < 26; i++ )
				ivjJComboBoxNumGroups.addItem( new Integer(i) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxNumGroups;
}
/**
 * Return the JComboBoxSendRate property value.
 * @return javax.swing.JComboBox
 */

/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRateDigits() {
	if (ivjJComboBoxSendRateDigits == null) {
		try {
			ivjJComboBoxSendRateDigits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateDigits.setName("JComboBoxSendRateDigits");
			ivjJComboBoxSendRateDigits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setComponentOrientation(java.awt.ComponentOrientation.LEFT_TO_RIGHT);
			ivjJComboBoxSendRateDigits.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxSendRateDigits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setMinimumSize(new java.awt.Dimension(0, 0));
			ivjJComboBoxSendRateDigits.setEditable(true);
			// user code begin {1}
			NewComboBoxEditor ncb = new NewComboBoxEditor();
			ncb.getJTextField().setDocument( 
				  new com.cannontech.common.gui.unchanging.LongRangeDocument(0, 1000) );
         	ivjJComboBoxSendRateDigits.setEditor( ncb );
			
			ivjJComboBoxSendRateDigits.addItem("0");
			ivjJComboBoxSendRateDigits.addItem("1");
			ivjJComboBoxSendRateDigits.addItem("2");
			ivjJComboBoxSendRateDigits.addItem("5");
			ivjJComboBoxSendRateDigits.addItem("8");
			ivjJComboBoxSendRateDigits.addItem("10");
			ivjJComboBoxSendRateDigits.addItem("15");
			ivjJComboBoxSendRateDigits.addItem("20");
			ivjJComboBoxSendRateDigits.addItem("30");
			ivjJComboBoxSendRateDigits.addItem("45");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateDigits;
}
/**
 * Return the JComboBoxSendRate11 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRateUnits() {
	if (ivjJComboBoxSendRateUnits == null) {
		try {
			ivjJComboBoxSendRateUnits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateUnits.setName("JComboBoxSendRateUnits");
			ivjJComboBoxSendRateUnits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setComponentOrientation(java.awt.ComponentOrientation.LEFT_TO_RIGHT);
			ivjJComboBoxSendRateUnits.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxSendRateUnits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxSendRateUnits.addItem("minutes");
			ivjJComboBoxSendRateUnits.addItem("hours");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateUnits;
}
/**
 * Return the JComboBoxShedTime property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxShedTime() {
	if (ivjJComboBoxShedTime == null) {
		try {
			ivjJComboBoxShedTime = new javax.swing.JComboBox();
			ivjJComboBoxShedTime.setName("JComboBoxShedTime");
			ivjJComboBoxShedTime.setPreferredSize(new java.awt.Dimension(137, 23));
			ivjJComboBoxShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxShedTime.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxShedTime.addItem("5 minutes");
			ivjJComboBoxShedTime.addItem("7 minutes");
			ivjJComboBoxShedTime.addItem("10 minutes");
			ivjJComboBoxShedTime.addItem("15 minutes");
			ivjJComboBoxShedTime.addItem("20 minutes");
			ivjJComboBoxShedTime.addItem("30 minutes");
			ivjJComboBoxShedTime.addItem("45 minutes");
			ivjJComboBoxShedTime.addItem("1 hour");
			ivjJComboBoxShedTime.addItem("2 hours");
			ivjJComboBoxShedTime.addItem("3 hours");
			ivjJComboBoxShedTime.addItem("4 hours");
			ivjJComboBoxShedTime.addItem("6 hours");
			ivjJComboBoxShedTime.addItem("8 hours");
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxShedTime;
}
/**
 * Return the JComboBoxWhenChange property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxWhenChange() {
	if (ivjJComboBoxWhenChange == null) {
		try {
			ivjJComboBoxWhenChange = new javax.swing.JComboBox();
			ivjJComboBoxWhenChange.setName("JComboBoxWhenChange");
			ivjJComboBoxWhenChange.setPreferredSize(new java.awt.Dimension(170, 23));
			ivjJComboBoxWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxWhenChange.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxWhenChange.addItem("Manually Only");
			ivjJComboBoxWhenChange.addItem("After a Duration");
			ivjJComboBoxWhenChange.addItem("Priority Change");
			ivjJComboBoxWhenChange.addItem("Above Trigger");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxWhenChange;
}
/**
 * Return the JCSpinFieldChangeDuration property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeDuration() {
	if (ivjJCSpinFieldChangeDuration == null) {
		try {
			ivjJCSpinFieldChangeDuration = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeDuration.setName("JCSpinFieldChangeDuration");
			ivjJCSpinFieldChangeDuration.setPreferredSize(new java.awt.Dimension(45, 20));
			ivjJCSpinFieldChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeDuration.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeDuration.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(3)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeDuration;
}
/**
 * Return the JCSpinFieldChangePriority property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangePriority() {
	if (ivjJCSpinFieldChangePriority == null) {
		try {
			ivjJCSpinFieldChangePriority = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangePriority.setName("JCSpinFieldChangePriority");
			ivjJCSpinFieldChangePriority.setPreferredSize(new java.awt.Dimension(35, 30));
			ivjJCSpinFieldChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangePriority.setMaximumSize(new java.awt.Dimension(40, 30));
			// user code begin {1}
			ivjJCSpinFieldChangePriority.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(9999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(0)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangePriority;
}
/**
 * Return the JCSpinFieldChangeTriggerNumber property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeTriggerNumber() {
	if (ivjJCSpinFieldChangeTriggerNumber == null) {
		try {
			ivjJCSpinFieldChangeTriggerNumber = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeTriggerNumber.setName("JCSpinFieldChangeTriggerNumber");
			ivjJCSpinFieldChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJCSpinFieldChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeTriggerNumber.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(1), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(1)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeTriggerNumber;
}
/**
 * Return the JCSpinFieldPercentReduction property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldPercentReduction() {
	if (ivjJCSpinFieldPercentReduction == null) {
		try {
			ivjJCSpinFieldPercentReduction = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldPercentReduction.setName("JCSpinFieldPercentReduction");
			ivjJCSpinFieldPercentReduction.setPreferredSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMaximumSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJCSpinFieldPercentReduction.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(100), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(100)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));

			ivjJCSpinFieldPercentReduction.setValue( new Integer(100) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldPercentReduction;
}
/**
 * Return the JLabelChangeDuration property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeDuration() {
	if (ivjJLabelChangeDuration == null) {
		try {
			ivjJLabelChangeDuration = new javax.swing.JLabel();
			ivjJLabelChangeDuration.setName("JLabelChangeDuration");
			ivjJLabelChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeDuration.setText("Change Duration:");
			ivjJLabelChangeDuration.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeDuration.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeDuration;
}
/**
 * Return the JLabelChangePriority property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangePriority() {
	if (ivjJLabelChangePriority == null) {
		try {
			ivjJLabelChangePriority = new javax.swing.JLabel();
			ivjJLabelChangePriority.setName("JLabelChangePriority");
			ivjJLabelChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangePriority.setText("Change Priority:");
			ivjJLabelChangePriority.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangePriority.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangePriority;
}
/**
 * Return the JLabelChangeTriggerNumber property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerNumber() {
	if (ivjJLabelChangeTriggerNumber == null) {
		try {
			ivjJLabelChangeTriggerNumber = new javax.swing.JLabel();
			ivjJLabelChangeTriggerNumber.setName("JLabelChangeTriggerNumber");
			ivjJLabelChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerNumber.setText("Trigger Number:");
			ivjJLabelChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerNumber.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerNumber;
}
/**
 * Return the JLabelChangeTriggerOffset property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerOffset() {
	if (ivjJLabelChangeTriggerOffset == null) {
		try {
			ivjJLabelChangeTriggerOffset = new javax.swing.JLabel();
			ivjJLabelChangeTriggerOffset.setName("JLabelChangeTriggerOffset");
			ivjJLabelChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerOffset.setText("Trigger Offset:");
			ivjJLabelChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerOffset.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerOffset;
}
/**
 * Return the JLabelGroupSelection property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelGroupSelection() {
	if (ivjJLabelGroupSelection == null) {
		try {
			ivjJLabelGroupSelection = new javax.swing.JLabel();
			ivjJLabelGroupSelection.setName("JLabelGroupSelection");
			ivjJLabelGroupSelection.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelGroupSelection.setText("Group Selection Method:");
			ivjJLabelGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelGroupSelection;
}
/**
 * Return the JLabelHowToStop property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHowToStop() {
	if (ivjJLabelHowToStop == null) {
		try {
			ivjJLabelHowToStop = new javax.swing.JLabel();
			ivjJLabelHowToStop.setName("JLabelHowToStop");
			ivjJLabelHowToStop.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelHowToStop.setText("How to Stop Control:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHowToStop;
}
/**
 * Return the JLabelMinutesChDur property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMinutesChDur() {
	if (ivjJLabelMinutesChDur == null) {
		try {
			ivjJLabelMinutesChDur = new javax.swing.JLabel();
			ivjJLabelMinutesChDur.setName("JLabelMinutesChDur");
			ivjJLabelMinutesChDur.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMinutesChDur.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelMinutesChDur.setText("(min.)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMinutesChDur;
}
/**
 * Return the JLabelNumGroups property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNumGroups() {
	if (ivjJLabelNumGroups == null) {
		try {
			ivjJLabelNumGroups = new javax.swing.JLabel();
			ivjJLabelNumGroups.setName("JLabelNumGroups");
			ivjJLabelNumGroups.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelNumGroups.setText("# of Groups Each Time:");
			ivjJLabelNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNumGroups;
}
/**
 * Return the JLabelPercentReduction property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPercentReduction() {
	if (ivjJLabelPercentReduction == null) {
		try {
			ivjJLabelPercentReduction = new javax.swing.JLabel();
			ivjJLabelPercentReduction.setName("JLabelPercentReduction");
			ivjJLabelPercentReduction.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelPercentReduction.setText("Group Capacity Reduction %:");
			ivjJLabelPercentReduction.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelPercentReduction.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPercentReduction;
}
/**
 * Return the JLabelSendRate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSendRate() {
	if (ivjJLabelSendRate == null) {
		try {
			ivjJLabelSendRate = new javax.swing.JLabel();
			ivjJLabelSendRate.setName("JLabelSendRate");
			ivjJLabelSendRate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelSendRate.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelSendRate.setText("Command Resend Rate:");
			ivjJLabelSendRate.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSendRate;
}
/**
 * Return the JLabelShedTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelShedTime() {
	if (ivjJLabelShedTime == null) {
		try {
			ivjJLabelShedTime = new javax.swing.JLabel();
			ivjJLabelShedTime.setName("JLabelShedTime");
			ivjJLabelShedTime.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelShedTime.setText("Shed Time:");
			ivjJLabelShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelShedTime;
}
/**
 * Return the JLabelWhenChange property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelWhenChange() {
	if (ivjJLabelWhenChange == null) {
		try {
			ivjJLabelWhenChange = new javax.swing.JLabel();
			ivjJLabelWhenChange.setName("JLabelWhenChange");
			ivjJLabelWhenChange.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelWhenChange.setText("When to Change:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelWhenChange;
}
/**
 * Return the JPanelChangeMethod property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelChangeMethod() {
	if (ivjJPanelChangeMethod == null) {
		try {
			ivjJPanelChangeMethod = new javax.swing.JPanel();
			ivjJPanelChangeMethod.setName("JPanelChangeMethod");
			ivjJPanelChangeMethod.setLayout(new java.awt.GridBagLayout());
			ivjJPanelChangeMethod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJPanelChangeMethod.setMaximumSize(new java.awt.Dimension(360, 90));
			ivjJPanelChangeMethod.setPreferredSize(new java.awt.Dimension(330, 87));
			ivjJPanelChangeMethod.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJPanelChangeMethod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);

			java.awt.GridBagConstraints constraintsJLabelChangeDuration = new java.awt.GridBagConstraints();
			constraintsJLabelChangeDuration.gridx = 1; constraintsJLabelChangeDuration.gridy = 2;
			constraintsJLabelChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeDuration.ipadx = -5;
			constraintsJLabelChangeDuration.ipady = 6;
			constraintsJLabelChangeDuration.insets = new java.awt.Insets(1, 5, 3, 5);
			getJPanelChangeMethod().add(getJLabelChangeDuration(), constraintsJLabelChangeDuration);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeDuration = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeDuration.gridx = 2; constraintsJCSpinFieldChangeDuration.gridy = 2;
			constraintsJCSpinFieldChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeDuration.ipadx = 34;
			constraintsJCSpinFieldChangeDuration.ipady = 19;
			constraintsJCSpinFieldChangeDuration.insets = new java.awt.Insets(1, 5, 3, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeDuration(), constraintsJCSpinFieldChangeDuration);

			java.awt.GridBagConstraints constraintsJLabelMinutesChDur = new java.awt.GridBagConstraints();
			constraintsJLabelMinutesChDur.gridx = 3; constraintsJLabelMinutesChDur.gridy = 2;
			constraintsJLabelMinutesChDur.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelMinutesChDur.ipadx = 5;
			constraintsJLabelMinutesChDur.ipady = -2;
			constraintsJLabelMinutesChDur.insets = new java.awt.Insets(5, 1, 5, 2);
			getJPanelChangeMethod().add(getJLabelMinutesChDur(), constraintsJLabelMinutesChDur);

			java.awt.GridBagConstraints constraintsJLabelChangePriority = new java.awt.GridBagConstraints();
			constraintsJLabelChangePriority.gridx = 4; constraintsJLabelChangePriority.gridy = 2;
			constraintsJLabelChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangePriority.ipadx = -13;
			constraintsJLabelChangePriority.ipady = 6;
			constraintsJLabelChangePriority.insets = new java.awt.Insets(1, 3, 3, 2);
			getJPanelChangeMethod().add(getJLabelChangePriority(), constraintsJLabelChangePriority);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangePriority = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangePriority.gridx = 5; constraintsJCSpinFieldChangePriority.gridy = 2;
			constraintsJCSpinFieldChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangePriority.ipadx = 34;
			constraintsJCSpinFieldChangePriority.ipady = 19;
			constraintsJCSpinFieldChangePriority.insets = new java.awt.Insets(1, 3, 3, 8);
			getJPanelChangeMethod().add(getJCSpinFieldChangePriority(), constraintsJCSpinFieldChangePriority);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerNumber.gridx = 1; constraintsJLabelChangeTriggerNumber.gridy = 3;
			constraintsJLabelChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerNumber.ipadx = -45;
			constraintsJLabelChangeTriggerNumber.ipady = 6;
			constraintsJLabelChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 5);
			getJPanelChangeMethod().add(getJLabelChangeTriggerNumber(), constraintsJLabelChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerOffset.gridx = 4; constraintsJLabelChangeTriggerOffset.gridy = 3;
			constraintsJLabelChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerOffset.ipadx = -63;
			constraintsJLabelChangeTriggerOffset.insets = new java.awt.Insets(8, 3, 17, 12);
			getJPanelChangeMethod().add(getJLabelChangeTriggerOffset(), constraintsJLabelChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJTextFieldChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJTextFieldChangeTriggerOffset.gridx = 5; constraintsJTextFieldChangeTriggerOffset.gridy = 3;
			constraintsJTextFieldChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextFieldChangeTriggerOffset.weightx = 1.0;
			constraintsJTextFieldChangeTriggerOffset.ipadx = 31;
			constraintsJTextFieldChangeTriggerOffset.insets = new java.awt.Insets(4, 3, 15, 8);
			getJPanelChangeMethod().add(getJTextFieldChangeTriggerOffset(), constraintsJTextFieldChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeTriggerNumber.gridx = 2; constraintsJCSpinFieldChangeTriggerNumber.gridy = 3;
			constraintsJCSpinFieldChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeTriggerNumber.ipadx = 34;
			constraintsJCSpinFieldChangeTriggerNumber.ipady = 19;
			constraintsJCSpinFieldChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeTriggerNumber(), constraintsJCSpinFieldChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelWhenChange = new java.awt.GridBagConstraints();
			constraintsJLabelWhenChange.gridx = 1; constraintsJLabelWhenChange.gridy = 1;
			constraintsJLabelWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelWhenChange.ipadx = 3;
			constraintsJLabelWhenChange.ipady = 4;
			constraintsJLabelWhenChange.insets = new java.awt.Insets(0, 5, 4, 5);
			getJPanelChangeMethod().add(getJLabelWhenChange(), constraintsJLabelWhenChange);

			java.awt.GridBagConstraints constraintsJComboBoxWhenChange = new java.awt.GridBagConstraints();
			constraintsJComboBoxWhenChange.gridx = 3; constraintsJComboBoxWhenChange.gridy = 1;
			constraintsJComboBoxWhenChange.gridwidth = 3;
			constraintsJComboBoxWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJComboBoxWhenChange.weightx = 1.0;
			constraintsJComboBoxWhenChange.ipadx = 170;
			constraintsJComboBoxWhenChange.ipady = 23;
			constraintsJComboBoxWhenChange.insets = new java.awt.Insets(0, 3, 1, 8);
			getJPanelChangeMethod().add(getJComboBoxWhenChange(), constraintsJComboBoxWhenChange);
			// user code begin {1}
			jComboBoxWhenChange_ActionPerformed(null);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelChangeMethod;
}
/**
 * Return the JTextFieldChangeTriggerOffset property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldChangeTriggerOffset() {
	if (ivjJTextFieldChangeTriggerOffset == null) {
		try {
			ivjJTextFieldChangeTriggerOffset = new javax.swing.JTextField();
			ivjJTextFieldChangeTriggerOffset.setName("JTextFieldChangeTriggerOffset");
			ivjJTextFieldChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJTextFieldChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJTextFieldChangeTriggerOffset.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999.9999, 99999.9999, 4) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldChangeTriggerOffset;
}
/**
 * getValue method comment.
 */
public Object getValue(Object o) 
{
	com.cannontech.database.db.device.lm.LMProgramDirectGear gear = null;
	
	gear = (LMProgramDirectGear)o;
	
	if( getJComboBoxHowToStop().getSelectedItem() != null )
	{
		gear.setMethodStopType( 
			com.cannontech.common.util.StringUtils.removeChars( ' ', getJComboBoxHowToStop().getSelectedItem().toString() ) );
	}

	gear.setPercentReduction( new Integer( ((Number)getJCSpinFieldPercentReduction().getValue()).intValue() ) );
	
	gear.setChangeCondition( getChangeCondition(getJComboBoxWhenChange().getSelectedItem().toString()) );

	gear.setChangeDuration( new Integer( ((Number)getJCSpinFieldChangeDuration().getValue()).intValue() * 60 ) );
	gear.setChangePriority( new Integer( ((Number)getJCSpinFieldChangePriority().getValue()).intValue() ) );
	gear.setChangeTriggerNumber( new Integer( ((Number)getJCSpinFieldChangeTriggerNumber().getValue()).intValue() ) );
	
	if( getJTextFieldChangeTriggerOffset().getText() == null || getJTextFieldChangeTriggerOffset().getText().length() <= 0 )
		gear.setChangeTriggerOffset( new Double(0.0) );
	else
		gear.setChangeTriggerOffset( Double.valueOf(getJTextFieldChangeTriggerOffset().getText()) );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	t.setShedTime( com.cannontech.common.util.CtiUtilities.getIntervalComboBoxSecondsValue( getJComboBoxShedTime() ) );

	t.setNumberOfGroups( getJComboBoxNumGroups().getSelectedItem() );

	String sendRateString = (String)(getJComboBoxSendRateDigits().getSelectedItem()) + " " + (String)(getJComboBoxSendRateUnits().getSelectedItem());	
	t.setRefreshRate( com.cannontech.common.util.CtiUtilities.getIntervalSecondsValue( sendRateString ) );
		
	t.setGroupSelectionMethod( StringUtils.removeChars( ' ', getJComboBoxGroupSelection().getSelectedItem().toString() ) );
		
	return t;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	getJCSpinFieldChangeDuration().addValueListener(this);
	getJCSpinFieldChangePriority().addValueListener(this);
	getJCSpinFieldChangeTriggerNumber().addValueListener(this);
	getJCSpinFieldPercentReduction().addValueListener(this);
	getJComboBoxWhenChange().addActionListener(this);
	
	getJComboBoxShedTime().addActionListener(this);
	getJComboBoxNumGroups().addActionListener(this);
	getJComboBoxSendRateDigits().addActionListener(this);
	getJComboBoxSendRateUnits().addActionListener(this);
	getJComboBoxGroupSelection().addActionListener(this);
	getJComboBoxHowToStop().addActionListener(this);
	getJTextFieldChangeTriggerOffset().addCaretListener(this);
	
	// user code end
	
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("TimeRefreshGearPanel");
		setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
		setLayout(new java.awt.GridBagLayout());
		setPreferredSize(new java.awt.Dimension(402, 430));
		setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
		setSize(402, 430);
		setMinimumSize(new java.awt.Dimension(0, 0));

		java.awt.GridBagConstraints constraintsJLabelShedTime = new java.awt.GridBagConstraints();
		constraintsJLabelShedTime.gridx = 1; constraintsJLabelShedTime.gridy = 1;
		constraintsJLabelShedTime.ipadx = 83;
		constraintsJLabelShedTime.insets = new java.awt.Insets(11, 10, 7, 1);
		add(getJLabelShedTime(), constraintsJLabelShedTime);

		java.awt.GridBagConstraints constraintsJComboBoxShedTime = new java.awt.GridBagConstraints();
		constraintsJComboBoxShedTime.gridx = 2; constraintsJComboBoxShedTime.gridy = 1;
		constraintsJComboBoxShedTime.gridwidth = 2;
		constraintsJComboBoxShedTime.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxShedTime.weightx = 1.0;
		constraintsJComboBoxShedTime.ipadx = 142;
		constraintsJComboBoxShedTime.ipady = 23;
		constraintsJComboBoxShedTime.insets = new java.awt.Insets(10, 1, 1, 102);
		add(getJComboBoxShedTime(), constraintsJComboBoxShedTime);

		java.awt.GridBagConstraints constraintsJLabelNumGroups = new java.awt.GridBagConstraints();
		constraintsJLabelNumGroups.gridx = 1; constraintsJLabelNumGroups.gridy = 2;
		constraintsJLabelNumGroups.ipadx = 17;
		constraintsJLabelNumGroups.insets = new java.awt.Insets(6, 10, 5, 1);
		add(getJLabelNumGroups(), constraintsJLabelNumGroups);

		java.awt.GridBagConstraints constraintsJComboBoxNumGroups = new java.awt.GridBagConstraints();
		constraintsJComboBoxNumGroups.gridx = 2; constraintsJComboBoxNumGroups.gridy = 2;
		constraintsJComboBoxNumGroups.gridwidth = 2;
		constraintsJComboBoxNumGroups.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxNumGroups.weightx = 1.0;
		constraintsJComboBoxNumGroups.ipadx = 142;
		constraintsJComboBoxNumGroups.ipady = 23;
		constraintsJComboBoxNumGroups.insets = new java.awt.Insets(2, 1, 2, 102);
		add(getJComboBoxNumGroups(), constraintsJComboBoxNumGroups);

		java.awt.GridBagConstraints constraintsJLabelSendRate = new java.awt.GridBagConstraints();
		constraintsJLabelSendRate.gridx = 1; constraintsJLabelSendRate.gridy = 3;
		constraintsJLabelSendRate.ipadx = 8;
		constraintsJLabelSendRate.insets = new java.awt.Insets(7, 10, 5, 1);
		add(getJLabelSendRate(), constraintsJLabelSendRate);

		java.awt.GridBagConstraints constraintsJLabelGroupSelection = new java.awt.GridBagConstraints();
		constraintsJLabelGroupSelection.gridx = 1; constraintsJLabelGroupSelection.gridy = 4;
		constraintsJLabelGroupSelection.ipadx = 12;
		constraintsJLabelGroupSelection.insets = new java.awt.Insets(7, 10, 6, 1);
		add(getJLabelGroupSelection(), constraintsJLabelGroupSelection);

		java.awt.GridBagConstraints constraintsJComboBoxGroupSelection = new java.awt.GridBagConstraints();
		constraintsJComboBoxGroupSelection.gridx = 2; constraintsJComboBoxGroupSelection.gridy = 4;
		constraintsJComboBoxGroupSelection.gridwidth = 2;
		constraintsJComboBoxGroupSelection.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxGroupSelection.weightx = 1.0;
		constraintsJComboBoxGroupSelection.ipadx = 180;
		constraintsJComboBoxGroupSelection.ipady = 23;
		constraintsJComboBoxGroupSelection.insets = new java.awt.Insets(3, 1, 3, 64);
		add(getJComboBoxGroupSelection(), constraintsJComboBoxGroupSelection);

		java.awt.GridBagConstraints constraintsJLabelHowToStop = new java.awt.GridBagConstraints();
		constraintsJLabelHowToStop.gridx = 1; constraintsJLabelHowToStop.gridy = 5;
		constraintsJLabelHowToStop.ipadx = 4;
		constraintsJLabelHowToStop.insets = new java.awt.Insets(5, 11, 9, 30);
		add(getJLabelHowToStop(), constraintsJLabelHowToStop);

		java.awt.GridBagConstraints constraintsJLabelPercentReduction = new java.awt.GridBagConstraints();
		constraintsJLabelPercentReduction.gridx = 1; constraintsJLabelPercentReduction.gridy = 6;
		constraintsJLabelPercentReduction.gridwidth = 2;
		constraintsJLabelPercentReduction.ipadx = 53;
		constraintsJLabelPercentReduction.ipady = 3;
		constraintsJLabelPercentReduction.insets = new java.awt.Insets(6, 11, 4, 8);
		add(getJLabelPercentReduction(), constraintsJLabelPercentReduction);

		java.awt.GridBagConstraints constraintsJComboBoxHowToStop = new java.awt.GridBagConstraints();
		constraintsJComboBoxHowToStop.gridx = 2; constraintsJComboBoxHowToStop.gridy = 5;
		constraintsJComboBoxHowToStop.gridwidth = 2;
		constraintsJComboBoxHowToStop.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxHowToStop.weightx = 1.0;
		constraintsJComboBoxHowToStop.ipadx = 54;
		constraintsJComboBoxHowToStop.insets = new java.awt.Insets(3, 1, 4, 64);
		add(getJComboBoxHowToStop(), constraintsJComboBoxHowToStop);

		java.awt.GridBagConstraints constraintsJCSpinFieldPercentReduction = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldPercentReduction.gridx = 3; constraintsJCSpinFieldPercentReduction.gridy = 6;
		constraintsJCSpinFieldPercentReduction.ipadx = 88;
		constraintsJCSpinFieldPercentReduction.ipady = 20;
		constraintsJCSpinFieldPercentReduction.insets = new java.awt.Insets(4, 9, 3, 121);
		add(getJCSpinFieldPercentReduction(), constraintsJCSpinFieldPercentReduction);

		java.awt.GridBagConstraints constraintsJPanelChangeMethod = new java.awt.GridBagConstraints();
		constraintsJPanelChangeMethod.gridx = 1; constraintsJPanelChangeMethod.gridy = 7;
		constraintsJPanelChangeMethod.gridwidth = 3;
		constraintsJPanelChangeMethod.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelChangeMethod.weightx = 1.0;
		constraintsJPanelChangeMethod.weighty = 1.0;
		constraintsJPanelChangeMethod.ipadx = 5;
		constraintsJPanelChangeMethod.insets = new java.awt.Insets(3, 5, 165, 62);
		add(getJPanelChangeMethod(), constraintsJPanelChangeMethod);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateDigits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateDigits.gridx = 2; constraintsJComboBoxSendRateDigits.gridy = 3;
		constraintsJComboBoxSendRateDigits.gridwidth = 2;
		constraintsJComboBoxSendRateDigits.fill = java.awt.GridBagConstraints.VERTICAL;
		constraintsJComboBoxSendRateDigits.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJComboBoxSendRateDigits.weightx = 1.0;
		constraintsJComboBoxSendRateDigits.ipadx = 83;
		constraintsJComboBoxSendRateDigits.ipady = 23;
		constraintsJComboBoxSendRateDigits.insets = new java.awt.Insets(3, 1, 2, 161);
		add(getJComboBoxSendRateDigits(), constraintsJComboBoxSendRateDigits);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateUnits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateUnits.gridx = 3; constraintsJComboBoxSendRateUnits.gridy = 3;
		constraintsJComboBoxSendRateUnits.fill = java.awt.GridBagConstraints.VERTICAL;
		constraintsJComboBoxSendRateUnits.anchor = java.awt.GridBagConstraints.EAST;
		constraintsJComboBoxSendRateUnits.weightx = 1.0;
		constraintsJComboBoxSendRateUnits.ipadx = 98;
		constraintsJComboBoxSendRateUnits.ipady = 23;
		constraintsJComboBoxSendRateUnits.insets = new java.awt.Insets(3, 56, 2, 64);
		add(getJComboBoxSendRateUnits(), constraintsJComboBoxSendRateUnits);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	getJComboBoxWhenChange().setSelectedItem( LMProgramDirectGear.CHANGE_NONE );
	getJLabelSendRate().setText("Refresh/Resend Rate:");
	getJComboBoxShedTime().setSelectedItem("1 hour");
	getJComboBoxSendRateDigits().setSelectedItem("30");
	getJComboBoxSendRateUnits().setSelectedItem("minutes");
		try
	{
		initConnections();
	}
	catch(Exception e)	{ }
	// user code end
}
/**
 * Comment
 */
public void jComboBoxWhenChange_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getJLabelChangeDuration().setVisible(false);
	getJCSpinFieldChangeDuration().setVisible(false);
	getJLabelMinutesChDur().setVisible(false);
	
	getJLabelChangePriority().setVisible(false);
	getJCSpinFieldChangePriority().setVisible(false);
	
	getJLabelChangeTriggerNumber().setVisible(false);
	getJCSpinFieldChangeTriggerNumber().setVisible(false);

	getJLabelChangeTriggerOffset().setVisible(false);
	getJTextFieldChangeTriggerOffset().setVisible(false);

	
	if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_NONE )
		 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Manually Only" ) )
	{
		//None
		return;
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_DURATION )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "After a Duration" ) )
	{
		//Duration
		getJLabelChangeDuration().setVisible(true);
		getJCSpinFieldChangeDuration().setVisible(true);
		getJLabelMinutesChDur().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_PRIORITY )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Priority Change" ) )
	{
		//Priority
		getJLabelChangePriority().setVisible(true);
		getJCSpinFieldChangePriority().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_TRIGGER_OFFSET )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Above Trigger" ) )
	{
		//TriggerOffset
		getJLabelChangeTriggerNumber().setVisible(true);
		getJCSpinFieldChangeTriggerNumber().setVisible(true);

		getJLabelChangeTriggerOffset().setVisible(true);
		getJTextFieldChangeTriggerOffset().setVisible(true);
	}
	else
		throw new Error("Unknown LMProgramDirectGear control condition found, the value = " + getJComboBoxWhenChange().getSelectedItem().toString() );


	fireInputUpdate();
	return;
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		TimeRefreshGearPanel aTimeRefreshGearPanel;
		aTimeRefreshGearPanel = new TimeRefreshGearPanel();
		frame.setContentPane(aTimeRefreshGearPanel);
		frame.setSize(aTimeRefreshGearPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private void setChangeCondition(String change) 
{
	if( change == null )
		return;

	if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_NONE) )
	{
		getJComboBoxWhenChange().setSelectedItem("Manually Only");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_DURATION) )
	{
		getJComboBoxWhenChange().setSelectedItem("After a Duration");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_PRIORITY) )
	{
		getJComboBoxWhenChange().setSelectedItem("Priority Change");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_TRIGGER_OFFSET) )
	{
		getJComboBoxWhenChange().setSelectedItem("Above Trigger");
	}	
	
}
/**
 * setValue method comment.
 */
public void setValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	if( o == null )
	{
		return;
	}
	else
		gear = (LMProgramDirectGear)o;

	getJComboBoxHowToStop().setSelectedItem( StringUtils.addCharBetweenWords( ' ', gear.getMethodStopType() ) );

	getJCSpinFieldPercentReduction().setValue( gear.getPercentReduction() );
	
	setChangeCondition( gear.getChangeCondition() );
	getJCSpinFieldChangeDuration().setValue( new Integer( gear.getChangeDuration().intValue() / 60 ) );
	getJCSpinFieldChangePriority().setValue( gear.getChangePriority() );
	getJCSpinFieldChangeTriggerNumber().setValue( gear.getChangeTriggerNumber() );	
	getJTextFieldChangeTriggerOffset().setText( gear.getChangeTriggerOffset().toString() );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxShedTime(), t.getShedTime().intValue() );

	getJComboBoxNumGroups().setSelectedItem( t.getNumberOfGroups() );

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxSendRateDigits(), getJComboBoxSendRateUnits(), t.getRefreshRate().intValue() );
		
	getJComboBoxGroupSelection().setSelectedItem( StringUtils.addCharBetweenWords( ' ', t.getGroupSelectionMethod() ) );
	
	
}
/**
 * valueChanged method comment.
 */
public void valueChanged(com.klg.jclass.util.value.JCValueEvent arg1) 
{
	//fire this event for all JCSpinFields!!
	this.fireInputUpdate();
}
/**
 * valueChanging method comment.
 */
public void valueChanging(com.klg.jclass.util.value.JCValueEvent arg1) {}
}
