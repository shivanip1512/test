package com.cannontech.dbeditor.wizard.device.lmprogram;

/**
 * Insert the type's description here.
 * Creation date: (8/1/2002 11:56:33 AM)
 * @author: 
 */

import com.cannontech.common.util.StringUtils;
import com.cannontech.database.db.device.lm.LMProgramDirectGear;
 
public class TimeRefreshGearPanel extends GenericGearPanel {
	private javax.swing.JComboBox ivjJComboBoxGroupSelection = null;
	private javax.swing.JComboBox ivjJComboBoxHowToStop = null;
	private javax.swing.JComboBox ivjJComboBoxNumGroups = null;
	private javax.swing.JComboBox ivjJComboBoxShedTime = null;
	private javax.swing.JComboBox ivjJComboBoxWhenChange = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeDuration = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangePriority = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeTriggerNumber = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldPercentReduction = null;
	private javax.swing.JLabel ivjJLabelChangeDuration = null;
	private javax.swing.JLabel ivjJLabelChangePriority = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerNumber = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerOffset = null;
	private javax.swing.JLabel ivjJLabelGroupSelection = null;
	private javax.swing.JLabel ivjJLabelHowToStop = null;
	private javax.swing.JLabel ivjJLabelMinutesChDur = null;
	private javax.swing.JLabel ivjJLabelNumGroups = null;
	private javax.swing.JLabel ivjJLabelPercentReduction = null;
	private javax.swing.JLabel ivjJLabelSendRate = null;
	private javax.swing.JLabel ivjJLabelShedTime = null;
	private javax.swing.JLabel ivjJLabelWhenChange = null;
	private javax.swing.JPanel ivjJPanelChangeMethod = null;
	private javax.swing.JTextField ivjJTextFieldChangeTriggerOffset = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateDigits = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateUnits = null;
	private javax.swing.JComboBox ivjJComboBoxCycleCountSndType = null;
	private javax.swing.JLabel ivjJLabelCycleCntSndType = null;
/**
 * TimeRefreshGearPanel constructor comment.
 */
public TimeRefreshGearPanel() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJComboBoxWhenChange()) 
		connEtoC1(e);
	if (e.getSource() == getJComboBoxShedTime()) 
		connEtoC4(e);
	if (e.getSource() == getJComboBoxNumGroups()) 
		connEtoC5(e);
	if (e.getSource() == getJComboBoxSendRateDigits() || e.getSource() == getJComboBoxSendRateUnits()) 
		connEtoC7(e);
	if (e.getSource() == getJComboBoxGroupSelection()) 
		connEtoC8(e);
	if (e.getSource() == getJComboBoxHowToStop()) 
		connEtoC10(e);
	if (e.getSource() == getJComboBoxCycleCountSndType()) 
		connEtoC11(e);
	// user code begin {2}
	// user code end
}
	/**
	 * Called when the caret position is updated.
	 *
	 * @param e the caret event
	 */
public void caretUpdate(javax.swing.event.CaretEvent e) {}
/**
 * connEtoC1:  (JComboBoxWhenChange.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.jComboBoxWhenChange_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jComboBoxWhenChange_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC10:  (JComboBoxHowToStop.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

private void connEtoC11(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JComboBoxShedTime.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (JComboBoxNumGroups.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC7:  (JComboBoxSendRate.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC8:  (JComboBoxGroupSelection.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GACCFA9B0GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155FD8FDCD455363F77C5BD3A794AFB33F739E5C50ACAC505C5C5E5E6DEAB6BF2EFE2DA16F423222442229B95F5AD8F4C001810782790519A938D8B91140AG8B94910D0A27247CD39818830C8EB3634CC1D1295E5AFB1F354F19614C9F72F7FF9F1F1F4FF24E7E6E3576DAFB6D357F1C3377B9882BBE8ECECBC9DDA588A9E9027C6F2B94C1E87BD590965C3E550E18614F51BAC175EFBD50F2A12DDE8F3F
	45109712B3CB17ADCC6C4800F48D24B3974F52654075CAA12CE3F29FDCF850B39A722E1AF14B535E75341AD14FE21A9EEB49045F77016AG33GC582E58BF7DAD64B78A8C83FAFDF93CAC995045E4B894F3D152BD578C2192F71F2761BC4F966D8564A796110A6BCB360B766F2254CA5543A734B4B64F45B9FC205240772D23308AED579C815D7B0598E7957A00C230E508949397BC8FE43311EEF3AECFDC5DDC62B55E615442E5EA2D327E8B2CBB6C751C973E92343D4E492CF183B44A2CB1F5DE16BF1987B4A4B
	9B4DFD62FE315BA1BAFB7708C6C70351AADA84E16695248E73ABB3E879029084E9E6EFF4D625EC4F68E321C26C3877BD5A3BEA8C3333EC0CE2EFC26885E971E3C8596FD27F933981C80783B11D35FD2833704AE8DD581584FB3B02701A60FA90E87415E84B0ECF511626B3378B491D5F24AE73E0CB62154C0655D7A9364C78FDFBEAAE0D0579C7C9FBB6C25EG50C820F02019C009C0F9B486471ABF035F6ACEE9172D2F4FE62D365BF7DACC0E6FEDA6518257656510A3E37B45AE1B43A488AC4E92AA8BB56CC14A
	385AB5461438B8A4E0DC046D3FD110245254B40D3AC54CD9173AD6AE2378EA25EE2CDE6751D8EEG5C8294GB486E8B2D04C55D82F8473F6DF755A8B3164309AAD877ABB6DC60734335FECB1098E39FE7ABEEF7553A2A637E258F24CAF215B55FE0939655B54459AFE09894DCFCD167D119D2C7805697E4E236E6260216DC17BF6B009C3EBA509439A38CE11E3146183948FD261AC46850A13F4A864E5DE03F15B74BE5621DEBFD648AE29522CC35034AFD26D57B0FB822FF1EF5BF6AB99DFA2G1F89948FA40C0D
	569900AA019A46E27BFEF5F42B1FF15B20EADBA61BF874C3789587A407F12F55A9992DDD62C12343EC6C3408CEC166F96BA8313D53C56EDD5A1F3AC0479E51AABA0C1259E605520DFDA284121371ACBE361C70B8C41ACBC6A1D050C7A68B163F6C58CA7835981D52CFF613D192958E161FF30C78720471A014888540F570D862F35D8EB2FE5861FAA4907355C89B4162A03D107B650F47D6406FF7905822253C3C465CC54CB0BACE217E1196B21608A7C42BD4A35AC52B89AE1CF25E2516A50ADF3AED5C66BFD31C
	7411DDE0381363D7DB16B39C4AD0FB9973A752FC23A4B94C1D7D12F8C014A43335C7113F095A62F469FECEC16E63F692E3596322F585C0E56330FEE5FDABD5752B37590E755B9BC94B49FE6A2463ECBD701B46611CA8D512B9B2F09C46694BCD9827B5D9B78805F33E510CD3C22163D8FCCE9D675E57FE21E5AABA52AB1BBC743D40F15AFDEF78E34B479EF5684E32FCC24C6FEF9CA7FE0F871B75A1513A7C90743B334F407A5BCE23D3449E762383DACCB4A9D146F84DD64FB1E637EA4758892BF60C8DDA3D47D0
	00D5AB06D85EC5D6B23758CEDAD5B1B94A3A0276E12BD524C6F391012DB9DEEEA43EB0DB4D52A13329C7148E18CF0B504EA1A4365650BED889578DA198CBA7B7E0AC651F3ED6185A1E2BB91F850DAFCB8D8DE1F1B0B9C409A5E6539FEC446722C56C83C76D3275DBA5067F0976EF991747178B6D5A3C1758C9BC9E93CF49FC175A5385B20ED87AC5DE37F063D262E307398F1A0AF4D8F95DF72ACF3D6E0B817B489A31F8FC342E8608495E73BF30C09534D6D5ACEE36BA09DDED40EF878A9C0FF1336CF82E2A3F4A
	81334BE631B07773F6D9F8BC1B3423F83CDF046118F4686FF8DDF40E95EEF98765FA317C258ED2AF0BFAAC98CF6AD5328357DCE42EE0D89D4566C1073AD00FF36F77596A352A49D92259060462463336CB9E6FBEEF19A4D26E6A89B0DECD403ADF60D00FD555CE272D4BCC278539BDAA86EA055F3A3E25B31039EB485A76D9BA7E1135EB6584DCE71E57CA5AA6985211C0B339FDDFB80746D73973BD786DB6BB1C30BEB209836863AAA771951937E49857F35B543E1B9A3B51236F62A7B01FAD1C606E3B6B7A296F
	A6C66B8AA722EDF7B9172BFC87EBCF1826FB20E5519E3324E371AE277B24B40CF781474B78BE7771328A4AEF1C68FDBC6E057CC1B71ED1108EF143589A4959C6FC9BB9112D1156F3FCA44575218A4E56CE975236A0698648EB3B966772609344873D5741DA7DBA74C1EAFF164A878DB633D562753F291F74EF1B435CE336A296C1B1D82553810F4D076FD9C93901D0E6B0A10A35D2AC8252B3B896C3471A84C8E7DC0F5856DC022D05F4A947FEC731BAC8F7F02CA90FE081109EF3BD4E07275A2A60B79C52D1C089
	C099E150B700EA00CCC001C0A1C0B300620132EF00B1872891E8GA87886AC6B0F342C69100E83525F887392D08D1089A8GA884E8BAD09C107EA648872A836A858A848A3D894B3A241584A731C95D1644BEE2132FB91258C5578DB2EF30EC331A27400FF2541461469F62C3BE5C4D76F85907184ED659C3FC5CF843507218AFE6D1DF24E964AD73436E0F655FAC79F73D9C1BEA1E2543708321A5EE6915BE785D57BD64394A872AF42E6A1A0CA76BB44AE0FDE77C89FA4F4E53575274A9D947CAE13D150C0BC60B
	3947CAC64BE6E837F0927BDF533EB48362AB860871BA2C249FDA0C27EC7D50E103A95F05D6759CDB8F188494984E5A06493DE6A33E34BB44EE518133A4DBFA48FAB26DC4CFBCDCA705231E5ADC971B1A1077886D2306C950EFA7617CBD69A4E90BEE18BBE079F440AEF689491388EFD0AE5AE50274GD090D0A4505CC9284716C7E4C1505C575FC72DE2FA7E13767B2A1B23F575B7A36F4C1D242CFD7546CE51F220D7B4119583566FCF9F12B65887F7EC1D361D3681A5DB4E3F59360C4B7E505F3747E16B37BB65
	3C978F2DD04BAA59F2FE7617AA3D30645C8F77D618F7FF7AAA1EC7258E0872720365EF7EA6C7DD36AB0BDC4675C7955B6AECA79BED87A41BDD4E9B34FF48739AC4C7973445FE5154AFAFF06436B23B582F94013E3167517C83F6333556ACDACCC38AE2FC53CE53F2681C3F2B9766C471FBD16A3519301CAD1BDD6A022E2801F9C2C2DFFE557E21964FCFD642A273B4942ED1736CBA55E59169F273005554F84A4EFDEBA97C00571DB129D804301BC91C4CEADB250AFD69E6F6EF96843FACFF7ADEF5FE121C3F7696
	4C7F21CECB3E1867CF2A55122F6179AF3C2FA55F44733FA8554A37707C63CB344A9F4173EF2B51129F4D731F7FD4ABBFD4295F4FDA65CF6679919D6A7C193730FCFD844CEFF47D3E2BDDBD362C0EE07915705B9001E5CCA95752514B73C7B4EB658F727C3D95DA7923F87E618A2DBA06C07E47829B4749D8017F6498339A60772871043148F8D2AA02D8335B2C9073C50DBFB634D7576F5D7343773BFFE8E46B4C60136AF5E659FB1FFBDCE7C6C630B1B5CA7E8DDB11A72F37CBBA4833A53A5EC6253010F618CDBB
	0DBD75F434E6EB68AC3A96A2E56BEF45B5F4853DC72B04F4A31065D63C7F9B58044FEA43A60C956AC7FC2B795CB836F1D3EA402D4C1E50DB1575EF4C6F5BD363EEA54F75577C2278A5BF177845AA1EB4F05F5440B8E9A58F048ACA0B37959ACA3797EF766C577E5C755AFE2D5FDD5B28B8D640FB06A939D85F025BE0DDF79B41462ED137A7A977B07CD7843FACFF36CB7EF2D9DE49CF4FD36793DFEDF411AFF349CFD349B33F7EF5A37AF561DF43854B2DDBBCBE0F8F3DCDEEEF79376A69B5027D7A9FE43FDE7B2B
	62171E56351E7DDADCE8A85E4C6264356E556AB899A8F21E04C9333C1C0DF24CE7CB8E931F11F9D1FFBB46424F356ABD04494BB625AE75E0F3656D4C56365B15D8988931407477D872347563E8AC375B3F76228DE3EE47FD06736B901B4D3178DA44B2A391B3ACC32C06E316D24486B9963A8431880EAD2849105BA901E36B8A88C666487CBB38ADBF930C2CA7836F40F548AFDFEE92D4773C47ACBDC5C73B48931F22EEB26B11CA72A9906373258E54B71517735AE68FEDC4E7C6A6F726BDC30E4D64BB309F2F51
	516794F7427A8BE8641DE86B6B65F85F9C42315B1B316E99F7A1B62282ED296258688A649B388B6F674652FE998E69283B70FE2E70646770FB50F8D4FEB23D1B5E635307E9GB6B8ECF651A11DE2A8FD4201FB8A36616EA930FB501B681815F0973B87CD61F8A44513D5B83BB72D36615E15FEB24C8D1331AE0F2490DFC7C1BA9EC838BBDA379A288C2871EE2CDB7F49E241477378C61B3DDEBC81CBA465C99D6BB78F372A47766C4BBFC8C53B5C6B55FBB76BAF525D6E4FE3CF2D79ED7BAE77AE46BE9BF167F5C2
	64858BD2BC7559D0D9678C79F76ED3EB78BD46F261FA9D71D1B2642D1A823E81EAGB2818DCEC19F357FD248FCC41A38DA120CDD3D74498BBA6820D9BC2940E4114E6A767EE1F55DC6C1F9A1C011C0D1C031D3065E5FB11BBEC8A3E3EC9264E75F83775EC0D5C09D7720BD2F7E6AF30FEC770017BDB2E19F5AB5824A9C8D94FA0FE24BE4381EF90F2BEDCC6E77F56A7A4481CFB2D06654E81D8128F42A277B558535A8D787BCEDC0F695EFGDC87CD555237F119DADF9870CC851A8D948F3450233E6325EA396CFB
	23F579C0E5C075C09D77FA123BE1894AC9409388B4C6459B8E57536F5532731FB5EAFDF301A781C81846F8D7CD73246F13827767DC8540DBA973B7E84891B281BE6016B792524153B45B6CE734ADC24E1F21620B71E8DBE2874AA5EA70687F82E389D061DF14BCA6B722DDDD27AA48EF846A1579867F22DD27D10007GC52A7223B4F859B878F7BA97447E050D03B99CFF06622B27ABB89B9F8D94A76986484B3C8F1FA93DDD6E6E7F997779FE869483BC09EEFC7A7B419FC005773B7BE3F2B37A318A729A01FAD5
	BC03F0BD6AFE2DF6BB3F8265C2A0BF92A8CA4597FB3F27F67BF305BA961300AF638138A783AA862AF9E0281C3C67C72F79FE8D1B46643C9B85B29E113D953351E2BECD9F059FGC6EB8F53F9AB598E1275CFD1DD6F31F95A777AFFC1CCC7473FD5872BFFCC0A67FD31E7D3347745DEC8515E97FBA5457B3E581BA91E77455ECDD16F0B31392214BC321273AFCE5DA8F8D8274014308F16DBBFF69E953B24C6E38F172FDECC5A368962C2828A828A831A7AG4EB551291F88F42E511877F61BFA44DDB63A93AF71E7
	59BA4F3E3ACB67FB7FFE3A0EBC9B6B34C9122D0F140F78C3344FCAB6BB859976B0DD3FBB4CBD3D92E31571B9BA320633085D94E64F3AB752F5FF8C54AB6181FC7EFDBA1D5E034D003EBB83313FD22C9052159CABDECC1F1DC33A03E3719978BCDD1A013EDA1766396E79E95AF172D91AF61C9427F95F23AFCB7394C74C3E1CFD38AFB01D5BFC47C12C47DC0E259DC29FA4F02C619056CDF890312EEE5CABE86058B5741E4584E909E3A539D8DEA04786A9B68652E19CFBBA97ED09645816B528B70AE37ABDD80F35
	8FA136B987E50BB9561F03FAEBB8B6B5874BEB62581745D80FD00ED552FB2A49100E6258F5EB303CD80E3DCE31A4C86B7F0AD8CB9E5A124D3189F928B71FE301749ECD02F4G479696220EA00E6D59C230B0C8CF66D8589654B103E349DBD0C78C4726AFC1DF95C6A1E66BC059AA0E5D5501FA9BB916EE4472FAB9767DC974D5A447166CA6D89424E3B8F6718A02A5C2BA63EF08BDC5313510AE64D84DCA54D126E085A89B4831CBA8B68652E19CCB22D8A424E7F26C06DF69B99AC88BFF67652DA558AAC867F3AC
	0B47C19947FE5DC47757C81AE3577C0C7E0B605824CA34EF864796D6F25FF3ECB175DF6143513A3A07919BDB0DFCED9C7B067ABE8C5253B9E623FCF3A11D284852FBE07DCC981BE6A2361E6A2804F4834702BB075A77A045A4609949791E2F463A85F3EC8155918169699CFBFAB3358552099C5B7E9956C39F0DEB2759BA324EE8043484B486E8B2D08C10FE9634B9D0A3508820B0209933D0AE1E4A45C3BA63913837812A836A858A848A851A81948F14B19B72E7235CA6DD38B0F4FEA6FA49AF516332CE0C763C
	0E0B51481BACE324AEE8AFDF5B292E8BE779DE9FB64EF2DF837E24E97BE27957FD2F4C5B19A02DFDB95CFBA3EB8372CCBFC71517253A76E7EFF0396A1A357DDA7A0C248E5A21E3B646C39F45A4C80F62D8BEFD66928269499CBB510CF1B313E392FD76E51883FDF18EE29BA9DFBD24BBB8768845A4C80F62181E6A8D0174E40E9D2458CCC847F3ECE2856ADD483179CC4723F0EF7FA8E2E3A85FG24C7F36C974A978A69299C1BC9315910CE60587A96BEC7BE06D8B8AD2F81529D9C5BF786E5A50EDDC631C0C887
	F16C6DB328B704E3350328A372B1DCE36CDD6CF90D513058777A2A192EE5C4D897112D9E069DD9CC4FA4F4F7BBC53E0E6BDA1C4D313D4E861B532C6C3BD59EA6E7163AEDD6096DA76E27EB2B0C39513AD5F3F1BF718F695A7B2E575275D58D70B5F15EE752C9F992984E1E7D4E2653934B5B33D8FB2F341D56A3G4A88820A1FCB30C599B5DEE2DB67C6B3C0069069B364FEB1862EA74A57CCC795DDC395BF8EEBC1A006BDF3907576F22C689056A968F134256710B7DB52E49B70F77A630AAD841B8B69F5A96C7C
	9353B1122E3F62GCFFC9C7D96D9675A8EFF276B3155CF405C77845A56120B36B5BE01F217663A7ADBCFDCAC6BF9EF8D56EF4493D8171AB53E7C0A755072EBB8143341452FDB681AEEB260B3381D7BF3D0EF92472E4AC15B736721AD0F657872EB1A4A1E06F92EFEB54DF377EBBBDD8F5A819F1C077EB9304C552FE63ABE8C017C70F9E85BA3EB5036D8AE1719676AD74BD2452F6765E17DB2E330AEF76779726B92AFFE2D04F2F07F06693F3A54556EDB691A338E789AE3506E0DDB506E0098347B4896D73BAF49
	D46C1E33856D8E67F6AFAB72E577D2AFF64746306753CABCACE06BD64013391DC19D28B77FC94462BAF8ACBF09362CB37A0A07252AF8987124EBBC0C063459A59ECE50B5EFB060E1CF22FF8C3BDD7D7AA5DD834F067CD84EB3FE0576F8F7B7DD87E77F836A718F64FDE3052B3FEFA65334406A533A5217EF333C7836619FECCFCB71EDDF816AEF637AA794386AFF1194AD4750524D744C08F1406D4C48863AAE8C04B2C673F2267F6A795C4B13F4EDBE95F823B8FF6BDAD7BF9E27EB75E44857BF056D196F35FF13
	F216295A533D7E25D04EB1012D2D184E7F5E24FD8666C63A7E2F827E7A27B03E9E226B7F81C887F06C09CA74DFB837F1658EDFB1172532B166A95718CB04F41FCB3F7D4868590FDF51B57FC2E2CFAC6A3F235A1BFEBC8766A9C6CA211CC9703B196B7F29C33B4D7BE8FF2B827E7AD8EC438B2A357DF9953D3F98G3EG4EFBC7BBD9D7F45A9C744185BBCFB5131FF988833E69C08B01321FE6E77F18DC19F168B92C9F0DA8D7G3C649CD6957CB63A4845F6EA57A3195E8FD900F760E9EC57E5BB69188E697027D1
	DE5F619A1FEBE87DE3A0BF1E73A4EF56DE0FE453FB24554F403D4FB358CE7BBE73954B4BD5315A86F276E7D8BB11F4GDC631E9653ED36AA67215899221AFE76B68B4B3FE5100C2B2A0DD8D7A6DE0E484EA251F23EB7DB7BA551392B9738B03FE9273B1E86075966B0CB27D87E1787B575A093575377ED2EDBB90D8EF3CF0F6878213F2F13BE4BE2FCBB9ABD707DA8AFC971FCC496B987382F9186AE15DAED5E430D9FE95968E6G634D5D134D759F6A952D0C156565B8D78A2A73D4CA36FCC6EA035E7D7C8C0947
	D14F60799A4B8E77B3C0A4BF0467DF5022A59F4973CF37EA65C7BD23FD3E874B0F6579131A356413F83EE948799F121F71AC663F6AA23F76D916DF43737756EA69EF6279CFF7E915EF617973B25D4FA7117C914FE2FF5BDE21BD2FFEC76F35C683DFA8678D2870BC0EDEC979E783EFAC672FE8566E4B87687DDEE6DC344E9007FD793F1AFD0D79CB84553AB34EED5D99476EAD3672783CE82F76B8BA0E5E9F5B01FFB08E6D2CECE677ECE6095C4A29EDA479A11C6F45E64F7557517B5588601D4A7973AA346B3F1D
	7AAA8178046710374FC3BB1CCFF90B012F66B97455148ADF7313FADDEBFF4E55D78110FE5345D76FB6EB7B6AC3DA27D140BF065BF90B1798082236CE875E191C7FB28FB1F083756FC2604BFE9EF967B7EB7BE091652D823E46675187E5AD3E62E531AADEC6BC6F36AE05B4B98B260C7D8FD4384ECDCF523A8483DF5873B827B94F209DB15C6630B32EEB3DACB254611AEE906B18B19F6DBEBC68EB4E4279CAEBEDD1B6DFB91B42749513AC398E56F4321764F20E2B96AAD4700949EC3458FABEA9B494979ACA36ED
	E6E754354F48CDCDB7883E4F9EFA160F4970770C1DD6992CCECDE4A9A21FC3F9BA934F212C3DFE1CD0735802943C57F577DD4DFC76DCF074FC658C4C2A308B52D81953F2959BEFBC78313B1F1473EEA55B3FAAB4EC5B3ED966FD6B203F75E17C3B8F7DB67FA5FE4B6CFCEE0D620715EB951B375579BA2347E4EE7AC81159186BEFBCB07E63397E584EF8572F7157AF4C2ED99FAB75FA5D205878D10E7FEDE14E99DEDB5C1AF3F6ED317A9345660A8D0A4DFFFB5F3F367853C6C5662AB543EB0B9757785F9617678D
	2FAD6E5C2454ABF033E2E3E26170EC2C5C623F0D89DB06E763751FA9B6BE7E39E2232943DB3CFC7505BADEEE6A98DE3C7C2B636C62E5E121E2F3C811E27365B57E450BD022487C470A339F4BE72F7027BECC7706ED0ADCC0017FF2355B9539313FFAEB1B12EDE0F069E659BF66D2C56E6B357E4B4DA9D764D2F27C759113CD2ED05AA7EF07D2CE494F7E6B7F669BC5EEC2257F3178EA6559451671DB457600AA4506BFD5FF64590632B2B0C1297F44EA250C07F62A7A54B04AD830CB117B345DD7DC3373E1496D78
	DD0CA8181B7571F8D6F97EBAB278E83D675B53EFAE6A174C96723D9A49A26E149FF148671E2B68F3837A0CB69E4FAFDBBB088E8952A301C200186E13C6BC3BBB993024F8BC1BFC0F914BA8FC814BD8C0F9CD109E849A8D446AFC45EE254E732A3D347976AF2156DF97E32CCC29D5641EE977A6379D644A3EC239B5FB9539B91B4FFE9C7874335F3EA6CB7C56F3CC6EA01FA1125B24C5CF7249F331309750476368BB65E49D177DA2E2F737A0D64731C92DA8BB624521674963B896CF6F8308ADEBDFC26C0A8A44C6
	3C04F135314065FD96658CBCFF3241E48B38ADF13C3C9135082DCDC0EC358931C60E2D48C2ECE40237F7F9BAAB7C69774C1F9D5FA9F2394D7E0CAD1E759EEDBE1BB6E7761CD7CFD26CFA4277CA59F94D3E7ABD5AC06F0D9C7DA2AB63419F14B25EAABF3B7A6D2BB81B7B8CD646983F5A4633FF92FED47C336CFF14F237D478B75FEF5B2F48B83D367776AFFD79E37AD934B71671E14B59796327830ABFA67D24147B4D19612DABFFFF469FBB98EF7960705615338F923B58594CE9F48FF9BA745FD8A07D02E85DDA
	20E220BA20B6A0BBD0G509820882099C0B1C009C0424B513AD5C085AF635901ABD713794C53FBAC728BF574C02743483ED9404E2F3C5B6E6B9D0D4A17354EB0E7F678127B48AD4D64F67B14F3A7797CB71DE31BDEF6FFEF66A50A1BDEF6FFEFC66A4039578EF933DF4633C6BF9BFF5BB744AE7A0DF25307AD476AE56CA476173D62DE5F23942FF9453D3E2F7135C68364C53C0275ED573B1F21DE1D982DABCC145F4BCB74708DB240FB5D7286A1BDAAD1AB96C2F770736CF2FE240AAF8A2EE3B5652635381CE787
	1E0CD7219F3CAAFFE36ED5CF6760EFEBF52FD38D70B6497C968DB9C2A3G9F6D16978A69492FFABF23BFD34E0FD371A543F566BF356496B43B5BE6G3ED21937CE7EEDF31335C3BA408D8B02F4985054FF3A1FB98B2EF057B19BF862E53E0572EF76EB2E6565C33A4C8D2B07F48710741A3B0E6DA256BFD04E9B236289076B692FE97A0D3F8FB4D74ECFD07189C9B0EEA5E9492DB329E321GF8AA019AE4DED31227D84849C2398119E7240AB7982EA35CE459F87968A14FE72D1EBC647B2C557307344F32A79C9A
	FA167D55C35AE7595F24E70B70AC3B7C4D25C3E49D598363F59367CBE9C22C19E369CDCBE46C1059A475F2BC3369BD992F9309C244D7B4913BCED22C893FEB27421AE5ECED93591F05AA775A9CA83B3E09BE1FB6DBACAC3D1172182DCED1627E780C5AE8369BD5F6EF6598311B6C6F690429AB33282C45EC95F7312F7671360C6F9078752B2A6B539D7F7EF7CDAE7D7F202327D32913DDF57D16715F2FFBC5673FD3077C9DA2FA9FB6837ADBEC921EF31CC531A4C86BDFC76C2BB4FA6E8252859C0B2777E11510EE
	6258A60AD9A0BD4831A9C7705C64A80E3DC379E2A11D4C31FB687DDF669B20638D446EEFC57BAAB9363C8D4BEB60584F74DCC8B024A3B976F88B5A92453162A33C3E9CBBF3846B1B443198EE3370A6E2F339AD8D9C5B500632A60E8534212F6C9C6B2FC4DF85F06C4F4DE8DF9047EA8F235EB00EA5B6232F963E69FAD6B6BB995685490875F07B2AB8F6F3AB165748314BAA50D7A19CDB560232119CEBE9413AC5F16C2E962C5BDC0E9DE17B13104EFE0B6B2D407A66F3AC1B57370CE37F455B321EE3F13C3EE3B8
	36083ED79E8E69199C1BD601B647F1AC0B7AB9995299EFA36628C41BD7F12C2A99EDAE6058C54DE8F3A547624B5166860E6DBE03B61BB8B62182ED0E6058ED4DC3ED5EA7D21B01A70E73ED2A45FAA4F36CF8AD6A487C97FF4F41046D564631B13558E76C9C93CCD8DEG473EB3E1F9C19C4B2D457262B9D6EA427AAE645817A5D8DE76C244FEC731FCC817F26C799254D1453122AC34EF94473E5C046505A865EDC259C80E7DB7BD7F1571CE344E708E6E1F86693577FC436918D58AFCF51C77853D6BDE6BB4B225
	49770CBF24E91FCD6A26631C84E50C6065ACEA753C073D1A46EF9870C6F27E9D2D2EFB4387E89F0C037C44F7F0DFF74E11611C61B53C8BBEGA29BC4744C98DC3F39E85122ACDE1FD5ED5AFB7205543EAA602FFF976DFBF407677A3CC2476081608DF8977731DFE9C55F063F0B76973479F36E57137DB1F0CD9E12FE4A6D9FDD295D9EE1346F4683FF9237A7155AE3D884E35FA2441A0F200DED0B70B96CF3AD243D193D2FF97577E29F7686AEE2E73F5E811FB3FDA9ED28EFB4571751A6F0BF5EC07327C2DE9437
	71AAB6B6C1DAAF4C1231E9F40CA806F4A5103C67FF581B2DCBFC58EA01F2664B3141F46452B1FBG70GA066EF5F67B24201F7B237F3940F01F8EE67032D5E6CDC6A434ED5A933F88CB09DD328DE836005A928372C8575B681467C7C79E1454FF1B4BFG72C625E05D7AAB483DGAC064D27218F9AAD64B1AE3EB101F22328AEE25FE42EEB9E4562A11D44312FE97B98D24126D42CF708575857892EE7B25C6B5D8665CCF4E91FACDA07DE4025D42C430795ABDD6AD00DA31EACD34C6D8FCEC5DBDF2AC0DFC571F2
	72ABDD47409F0EA83E3B0245A3706AF5D80639994BAD66D884455AA05D4B31656C3C972403F5681736B33E62561BDFE6C2B96701DF1433528FD39DB124FC9D5647A8FA0E5B53F4EEDD251F25B368514E9FEB51A775FA34B33056D75C2A6D9CA065296C9C8969EF8575196E0DD4EF9060A1DC6FFDD46FCCC847F0EC3389ED49C8C3DBBACD7E1CCB72B88F243977211DD4EF956075E92877B055BBG69G0E351720AD91E9685B209257D8B95ECEE2055979CE49F05E65F137B396F460B9B3267F90DD97A4G1E2C58
	3489ED4ACFC77F84ED72B5EE2B7BDBC33AEBDB19A07DD30A7A6C5A8DBFEB4F13775135069D788701BCBF73FEC0EF907C5D1F995D2148BD596A6DF9FD71F6751E71952A3D013CE14825B6AAF2B79FB91BFDC0D65E461F146B3A03CA59BF6E705FA6FB13A2F7D72B17FD63D23205D34C1F692737796F67CB1B95BBEFEBD17419DB3C69AB1675B13958430ADC3E5F3EE37C76A37E5B2AEBD7742C9EC69DB729E2692857F3842E7E5FEBD464AE763AE764AA975E2548159F9E5E3909C7CCCAFB3CA1AA6594D6782FBF37
	C711EB7396B75BA1EE36ABF1B33155FF1FD676AAF6361B95FD231BFD440DCA5F0FFE6D01B19D7FF1D451F1402BAFCAE5DF48F5223C2A2D69228364FF7C5407136EDD497598FFCC511166353DCBDD7C1DE2D564FE57B63C764E37A9FE5CE3D74AC9723AE76BDA47BDFE551171267AF5B6065953FFDC31678B3F7C41F8C7B47B6F73A007EA1C772B4ECCAEC9D2643E76FB4F1349661CD0FCDEFED2A9677AE134796181C5AE2F56C79FD30D4D5D357E785F733E6F08D30A6D63CE2B4687EFB6380D57771FD164DE6F72
	5F76AA137F31734220E2E7266A3B22533D69F333137E9981D96E3312614DABA7CA7C37F554924556DB5ED3F4FE3E496B3909E2751933931B4E2EDD9FDD2A5870D626E24358F2DF679B585FF13B26F6E436A004AD90521C8EE145D05E6A0B9FFFAC2C3DE6D52A103AD7C86F25FBA0FB053413E4B3E5G461D149B017E68BCAE7C42CD93A461BD72FDEC8379C0F639A4FC3841E06BB630CFDE9BF69B3BFAB1E39579F61F51EAB26C971DA279B1CA844E212C867E95EB837BCAB49128331DB4C8B68379783481068549
	E133G1C4784F6996D46AE33F44A403FBBED58C85453CFBB9B6887208D64FB51867256FFB9D4B74BA5A46E3B660B67237EF150299352778A3964C9528151C1BF76A51AEA0C927ED523DAE1091D7CB583320E5DAB681D74A74DA91D320875422A6E7D64AFFDB8A551D40D1FA5F2CA428775C453D6F2DAEEEB1D5159CB5FE129289774D67277170495AC5BE23476ECE55F942BA02E95D22A2B28BFE933023DAB293D2414A2DE4A4A3B16EDDC3FAFAED2A724568A6FD9ECC6D32D31CB32B9768ACB24DE7237CEEC9653
	007DDBD6D086FD31173E188C4565716A134A9611BBF6EE743101ABC7E645E7552642BD0CC358CAB949CDCA9167A0AF13B9C0156858AB113FA7E5F364733C5FFDA4ED7A5B1E1C36D4A1C52EA4090F4C813BA424F79B7B4C16D3F0D1C3BBA00D1CEC892CF5982D4EEE1B238FACB338D906D9DCC151258F96DFF66D5BADD401A2AA899FB3D70268569E515637353A3B5BEC95F98160D7A8FE9DAF1E709439712C987843877B66AC6A04B82891F4FD4545747F927A7FB672FF89C5CAA8D2328D1C1BA8F87D671EBF00F5
	26418376AC23761066AF2A0596141ED8706058F9150989D03BDAA10D7EDD90E804EC050B3D3AF7C158E56B160E0E3D0834111D044AGA9F755GAF1154F0AF5DFD0CBD313DDC776CB8DD2A2007DE4CF6E3A1F84916AA842F03F5EA9D74AA9AF7644E0E8CE764EEEEA96F5AE43C381026702D9CC25D0457357B5354FBC36217206F8F8DC4822F6061C0D29FD0569C7A7F1AE1BB17C82D25329FF11F948CF03B53D4F5CB77D037D4D55DD24F753AED532E5B62F34F522F95CB5307D8CA7E11D63809736864FCE22B6E
	DCEF05DDCA5D1648FA49FAA50D5BCD1E1C58B5D267D4AD6A15DA68E53DC4FF3A07DA38369711985ADE6429F013CB1B927F104528DE03077F632996A83417278EC1EA5F396737B645EF978A2C9FFE636285D7CF6178F20D209D595A929F8F716DD009C04DB1CCF76EF96C58503100FC87A0DD9232592B6586FCE39FD6F06985FDE6EB51E6A58F5F32073CE5725B6C86B6A72A9176B6BCC1489B6BE45D48444BDD4239C7A3F5CE396A7400CB7741ED3E948F35A02F12EF99A21162A2C1F88A4E3D1A1E6FBA15911BC9
	98277D5FEA2F0BDD5BCBA75742D3FB11E9E24390098C978942D360A2FF09C66A1C7242950A9770E3B50474BEEBF18E57E93CD2A7B2D869E41BB2BC540274328DAEDE4016553B7094F81140FE20A5F1CE79669657258336376B74F49D6741177AB3DCF868BF76CE7966DF55FFD7A1797CCC4FFF1BB1E796BB4FAB7FAAFF1BF1E1BDA93EEC75ACDDA390BBEBD9DF3FC5707CFD6883FDC60BC5B2DA0ED5DBCD64DB51BBCFC92272BD62146FC979CE6411B3D9DE4677446E23AA197F85D0CB87884B87BFB059A6GG04
	FFGGD0CB818294G94G88G88GACCFA9B04B87BFB059A6GG04FFGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG93A7GGGG
**end of data**/
}
/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private String getChangeCondition( String change )
{

	if( change.equalsIgnoreCase("After a Duration") )
	{
		return LMProgramDirectGear.CHANGE_DURATION;
	}
	else if( change.equalsIgnoreCase("Priority Change") )
	{
		return LMProgramDirectGear.CHANGE_PRIORITY;
	}
	else if( change.equalsIgnoreCase("Above Trigger") )
	{
		return LMProgramDirectGear.CHANGE_TRIGGER_OFFSET;
	}	
	else
		return LMProgramDirectGear.CHANGE_NONE;

}
/**
 * Return the JComboBoxCycleCountSndType property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxCycleCountSndType() {
	if (ivjJComboBoxCycleCountSndType == null) {
		try {
			ivjJComboBoxCycleCountSndType = new javax.swing.JComboBox();
			ivjJComboBoxCycleCountSndType.setName("JComboBoxCycleCountSndType");
			ivjJComboBoxCycleCountSndType.setPreferredSize(new java.awt.Dimension(136, 23));
			ivjJComboBoxCycleCountSndType.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxCycleCountSndType.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxCycleCountSndType.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.OPTION_FIXED_COUNT ) );
			ivjJComboBoxCycleCountSndType.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.OPTION_COUNT_DOWN ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxCycleCountSndType;
}
/**
 * Return the JComboBoxGroupSelection property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxGroupSelection() {
	if (ivjJComboBoxGroupSelection == null) {
		try {
			ivjJComboBoxGroupSelection = new javax.swing.JComboBox();
			ivjJComboBoxGroupSelection.setName("JComboBoxGroupSelection");
			ivjJComboBoxGroupSelection.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxGroupSelection.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LAST_CONTROLLED ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_ALWAYS_FIRST_GROUP ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LEAST_CONTROL_TIME ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxGroupSelection;
}
/**
 * Return the JComboBoxHowToStop property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxHowToStop() {
	if (ivjJComboBoxHowToStop == null) {
		try {
			ivjJComboBoxHowToStop = new javax.swing.JComboBox();
			ivjJComboBoxHowToStop.setName("JComboBoxHowToStop");
			ivjJComboBoxHowToStop.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_TIME_IN ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RESTORE ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxHowToStop;
}
/**
 * Return the JComboBoxNumGroups property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxNumGroups() {
	if (ivjJComboBoxNumGroups == null) {
		try {
			ivjJComboBoxNumGroups = new javax.swing.JComboBox();
			ivjJComboBoxNumGroups.setName("JComboBoxNumGroups");
			ivjJComboBoxNumGroups.setPreferredSize(new java.awt.Dimension(137, 23));
			ivjJComboBoxNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxNumGroups.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxNumGroups.addItem("All of Them");
			for( int i = 1; i < 26; i++ )
				ivjJComboBoxNumGroups.addItem( new Integer(i) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxNumGroups;
}
/**
 * Return the JComboBoxSendRate property value.
 * @return javax.swing.JComboBox
 */

/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRateDigits() {
	if (ivjJComboBoxSendRateDigits == null) {
		try {
			ivjJComboBoxSendRateDigits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateDigits.setName("JComboBoxSendRateDigits");
			ivjJComboBoxSendRateDigits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxSendRateDigits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setMinimumSize(new java.awt.Dimension(0, 0));
			ivjJComboBoxSendRateDigits.setEditable(true);
			// user code begin {1}
			NewComboBoxEditor ncb = new NewComboBoxEditor();
			ncb.getJTextField().setDocument( 
				  new com.cannontech.common.gui.unchanging.LongRangeDocument(0, 1000) );
         	ivjJComboBoxSendRateDigits.setEditor( ncb );
			
			ivjJComboBoxSendRateDigits.addItem("0");
			ivjJComboBoxSendRateDigits.addItem("1");
			ivjJComboBoxSendRateDigits.addItem("2");
			ivjJComboBoxSendRateDigits.addItem("5");
			ivjJComboBoxSendRateDigits.addItem("8");
			ivjJComboBoxSendRateDigits.addItem("10");
			ivjJComboBoxSendRateDigits.addItem("15");
			ivjJComboBoxSendRateDigits.addItem("20");
			ivjJComboBoxSendRateDigits.addItem("30");
			ivjJComboBoxSendRateDigits.addItem("45");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateDigits;
}
/**
 * Return the JComboBoxSendRate11 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRateUnits() {
	if (ivjJComboBoxSendRateUnits == null) {
		try {
			ivjJComboBoxSendRateUnits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateUnits.setName("JComboBoxSendRateUnits");
			ivjJComboBoxSendRateUnits.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxSendRateUnits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxSendRateUnits.addItem("minutes");
			ivjJComboBoxSendRateUnits.addItem("hours");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateUnits;
}
/**
 * Return the JComboBoxShedTime property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxShedTime() {
	if (ivjJComboBoxShedTime == null) {
		try {
			ivjJComboBoxShedTime = new javax.swing.JComboBox();
			ivjJComboBoxShedTime.setName("JComboBoxShedTime");
			ivjJComboBoxShedTime.setPreferredSize(new java.awt.Dimension(137, 23));
			ivjJComboBoxShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxShedTime.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxShedTime.addItem("5 minutes");
			ivjJComboBoxShedTime.addItem("7 minutes");
			ivjJComboBoxShedTime.addItem("10 minutes");
			ivjJComboBoxShedTime.addItem("15 minutes");
			ivjJComboBoxShedTime.addItem("20 minutes");
			ivjJComboBoxShedTime.addItem("30 minutes");
			ivjJComboBoxShedTime.addItem("45 minutes");
			ivjJComboBoxShedTime.addItem("1 hour");
			ivjJComboBoxShedTime.addItem("2 hours");
			ivjJComboBoxShedTime.addItem("3 hours");
			ivjJComboBoxShedTime.addItem("4 hours");
			ivjJComboBoxShedTime.addItem("6 hours");
			ivjJComboBoxShedTime.addItem("8 hours");
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxShedTime;
}
/**
 * Return the JComboBoxWhenChange property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxWhenChange() {
	if (ivjJComboBoxWhenChange == null) {
		try {
			ivjJComboBoxWhenChange = new javax.swing.JComboBox();
			ivjJComboBoxWhenChange.setName("JComboBoxWhenChange");
			ivjJComboBoxWhenChange.setPreferredSize(new java.awt.Dimension(170, 23));
			ivjJComboBoxWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxWhenChange.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxWhenChange.addItem("Manually Only");
			ivjJComboBoxWhenChange.addItem("After a Duration");
			ivjJComboBoxWhenChange.addItem("Priority Change");
			ivjJComboBoxWhenChange.addItem("Above Trigger");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxWhenChange;
}
/**
 * Return the JCSpinFieldChangeDuration property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeDuration() {
	if (ivjJCSpinFieldChangeDuration == null) {
		try {
			ivjJCSpinFieldChangeDuration = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeDuration.setName("JCSpinFieldChangeDuration");
			ivjJCSpinFieldChangeDuration.setPreferredSize(new java.awt.Dimension(45, 20));
			ivjJCSpinFieldChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeDuration.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeDuration.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(3)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeDuration;
}
/**
 * Return the JCSpinFieldChangePriority property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangePriority() {
	if (ivjJCSpinFieldChangePriority == null) {
		try {
			ivjJCSpinFieldChangePriority = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangePriority.setName("JCSpinFieldChangePriority");
			ivjJCSpinFieldChangePriority.setPreferredSize(new java.awt.Dimension(35, 30));
			ivjJCSpinFieldChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangePriority.setMaximumSize(new java.awt.Dimension(40, 30));
			// user code begin {1}
			ivjJCSpinFieldChangePriority.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(9999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(0)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangePriority;
}
/**
 * Return the JCSpinFieldChangeTriggerNumber property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeTriggerNumber() {
	if (ivjJCSpinFieldChangeTriggerNumber == null) {
		try {
			ivjJCSpinFieldChangeTriggerNumber = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeTriggerNumber.setName("JCSpinFieldChangeTriggerNumber");
			ivjJCSpinFieldChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJCSpinFieldChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeTriggerNumber.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(1), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(1)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeTriggerNumber;
}
/**
 * Return the JCSpinFieldPercentReduction property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldPercentReduction() {
	if (ivjJCSpinFieldPercentReduction == null) {
		try {
			ivjJCSpinFieldPercentReduction = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldPercentReduction.setName("JCSpinFieldPercentReduction");
			ivjJCSpinFieldPercentReduction.setPreferredSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMaximumSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJCSpinFieldPercentReduction.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(100), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(100)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));

			ivjJCSpinFieldPercentReduction.setValue( new Integer(100) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldPercentReduction;
}
/**
 * Return the JLabelChangeDuration property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeDuration() {
	if (ivjJLabelChangeDuration == null) {
		try {
			ivjJLabelChangeDuration = new javax.swing.JLabel();
			ivjJLabelChangeDuration.setName("JLabelChangeDuration");
			ivjJLabelChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeDuration.setText("Change Duration:");
			ivjJLabelChangeDuration.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeDuration.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeDuration;
}
/**
 * Return the JLabelChangePriority property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangePriority() {
	if (ivjJLabelChangePriority == null) {
		try {
			ivjJLabelChangePriority = new javax.swing.JLabel();
			ivjJLabelChangePriority.setName("JLabelChangePriority");
			ivjJLabelChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangePriority.setText("Change Priority:");
			ivjJLabelChangePriority.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangePriority.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangePriority;
}
/**
 * Return the JLabelChangeTriggerNumber property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerNumber() {
	if (ivjJLabelChangeTriggerNumber == null) {
		try {
			ivjJLabelChangeTriggerNumber = new javax.swing.JLabel();
			ivjJLabelChangeTriggerNumber.setName("JLabelChangeTriggerNumber");
			ivjJLabelChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerNumber.setText("Trigger Number:");
			ivjJLabelChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerNumber.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerNumber;
}
/**
 * Return the JLabelChangeTriggerOffset property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerOffset() {
	if (ivjJLabelChangeTriggerOffset == null) {
		try {
			ivjJLabelChangeTriggerOffset = new javax.swing.JLabel();
			ivjJLabelChangeTriggerOffset.setName("JLabelChangeTriggerOffset");
			ivjJLabelChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerOffset.setText("Trigger Offset:");
			ivjJLabelChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerOffset.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerOffset;
}
/**
 * Return the JLabelCycleCntSndType property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCycleCntSndType() {
	if (ivjJLabelCycleCntSndType == null) {
		try {
			ivjJLabelCycleCntSndType = new javax.swing.JLabel();
			ivjJLabelCycleCntSndType.setName("JLabelCycleCntSndType");
			ivjJLabelCycleCntSndType.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelCycleCntSndType.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelCycleCntSndType.setText("Cycle Count Send Type:");
			ivjJLabelCycleCntSndType.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCycleCntSndType;
}
/**
 * Return the JLabelGroupSelection property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelGroupSelection() {
	if (ivjJLabelGroupSelection == null) {
		try {
			ivjJLabelGroupSelection = new javax.swing.JLabel();
			ivjJLabelGroupSelection.setName("JLabelGroupSelection");
			ivjJLabelGroupSelection.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelGroupSelection.setText("Group Selection Method:");
			ivjJLabelGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelGroupSelection;
}
/**
 * Return the JLabelHowToStop property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHowToStop() {
	if (ivjJLabelHowToStop == null) {
		try {
			ivjJLabelHowToStop = new javax.swing.JLabel();
			ivjJLabelHowToStop.setName("JLabelHowToStop");
			ivjJLabelHowToStop.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelHowToStop.setText("How to Stop Control:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHowToStop;
}
/**
 * Return the JLabelMinutesChDur property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMinutesChDur() {
	if (ivjJLabelMinutesChDur == null) {
		try {
			ivjJLabelMinutesChDur = new javax.swing.JLabel();
			ivjJLabelMinutesChDur.setName("JLabelMinutesChDur");
			ivjJLabelMinutesChDur.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMinutesChDur.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelMinutesChDur.setText("(min.)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMinutesChDur;
}
/**
 * Return the JLabelNumGroups property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNumGroups() {
	if (ivjJLabelNumGroups == null) {
		try {
			ivjJLabelNumGroups = new javax.swing.JLabel();
			ivjJLabelNumGroups.setName("JLabelNumGroups");
			ivjJLabelNumGroups.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelNumGroups.setText("# of Groups Each Time:");
			ivjJLabelNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNumGroups;
}
/**
 * Return the JLabelPercentReduction property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPercentReduction() {
	if (ivjJLabelPercentReduction == null) {
		try {
			ivjJLabelPercentReduction = new javax.swing.JLabel();
			ivjJLabelPercentReduction.setName("JLabelPercentReduction");
			ivjJLabelPercentReduction.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelPercentReduction.setText("Group Capacity Reduction %:");
			ivjJLabelPercentReduction.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelPercentReduction.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPercentReduction;
}
/**
 * Return the JLabelSendRate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSendRate() {
	if (ivjJLabelSendRate == null) {
		try {
			ivjJLabelSendRate = new javax.swing.JLabel();
			ivjJLabelSendRate.setName("JLabelSendRate");
			ivjJLabelSendRate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelSendRate.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelSendRate.setText("Command Resend Rate:");
			ivjJLabelSendRate.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSendRate;
}
/**
 * Return the JLabelShedTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelShedTime() {
	if (ivjJLabelShedTime == null) {
		try {
			ivjJLabelShedTime = new javax.swing.JLabel();
			ivjJLabelShedTime.setName("JLabelShedTime");
			ivjJLabelShedTime.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelShedTime.setText("Shed Time:");
			ivjJLabelShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelShedTime;
}
/**
 * Return the JLabelWhenChange property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelWhenChange() {
	if (ivjJLabelWhenChange == null) {
		try {
			ivjJLabelWhenChange = new javax.swing.JLabel();
			ivjJLabelWhenChange.setName("JLabelWhenChange");
			ivjJLabelWhenChange.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelWhenChange.setText("When to Change:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelWhenChange;
}
/**
 * Return the JPanelChangeMethod property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelChangeMethod() {
	if (ivjJPanelChangeMethod == null) {
		try {
			ivjJPanelChangeMethod = new javax.swing.JPanel();
			ivjJPanelChangeMethod.setName("JPanelChangeMethod");
			//ivjJPanelChangeMethod.setBorder(new com.ibm.uvm.abt.edit.DeletedClassView());
			ivjJPanelChangeMethod.setLayout(new java.awt.GridBagLayout());
			ivjJPanelChangeMethod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJPanelChangeMethod.setMaximumSize(new java.awt.Dimension(360, 90));
			ivjJPanelChangeMethod.setPreferredSize(new java.awt.Dimension(330, 87));
			ivjJPanelChangeMethod.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJPanelChangeMethod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);

			java.awt.GridBagConstraints constraintsJLabelChangeDuration = new java.awt.GridBagConstraints();
			constraintsJLabelChangeDuration.gridx = 1; constraintsJLabelChangeDuration.gridy = 2;
			constraintsJLabelChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeDuration.ipadx = -5;
			constraintsJLabelChangeDuration.ipady = 6;
			constraintsJLabelChangeDuration.insets = new java.awt.Insets(1, 5, 3, 5);
			getJPanelChangeMethod().add(getJLabelChangeDuration(), constraintsJLabelChangeDuration);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeDuration = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeDuration.gridx = 2; constraintsJCSpinFieldChangeDuration.gridy = 2;
			constraintsJCSpinFieldChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeDuration.ipadx = 34;
			constraintsJCSpinFieldChangeDuration.ipady = 19;
			constraintsJCSpinFieldChangeDuration.insets = new java.awt.Insets(1, 5, 3, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeDuration(), constraintsJCSpinFieldChangeDuration);

			java.awt.GridBagConstraints constraintsJLabelMinutesChDur = new java.awt.GridBagConstraints();
			constraintsJLabelMinutesChDur.gridx = 3; constraintsJLabelMinutesChDur.gridy = 2;
			constraintsJLabelMinutesChDur.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelMinutesChDur.ipadx = 5;
			constraintsJLabelMinutesChDur.ipady = -2;
			constraintsJLabelMinutesChDur.insets = new java.awt.Insets(5, 1, 5, 2);
			getJPanelChangeMethod().add(getJLabelMinutesChDur(), constraintsJLabelMinutesChDur);

			java.awt.GridBagConstraints constraintsJLabelChangePriority = new java.awt.GridBagConstraints();
			constraintsJLabelChangePriority.gridx = 4; constraintsJLabelChangePriority.gridy = 2;
			constraintsJLabelChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangePriority.ipadx = -13;
			constraintsJLabelChangePriority.ipady = 6;
			constraintsJLabelChangePriority.insets = new java.awt.Insets(1, 3, 3, 2);
			getJPanelChangeMethod().add(getJLabelChangePriority(), constraintsJLabelChangePriority);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangePriority = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangePriority.gridx = 5; constraintsJCSpinFieldChangePriority.gridy = 2;
			constraintsJCSpinFieldChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangePriority.ipadx = 34;
			constraintsJCSpinFieldChangePriority.ipady = 19;
			constraintsJCSpinFieldChangePriority.insets = new java.awt.Insets(1, 3, 3, 8);
			getJPanelChangeMethod().add(getJCSpinFieldChangePriority(), constraintsJCSpinFieldChangePriority);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerNumber.gridx = 1; constraintsJLabelChangeTriggerNumber.gridy = 3;
			constraintsJLabelChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerNumber.ipadx = -45;
			constraintsJLabelChangeTriggerNumber.ipady = 6;
			constraintsJLabelChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 5);
			getJPanelChangeMethod().add(getJLabelChangeTriggerNumber(), constraintsJLabelChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerOffset.gridx = 4; constraintsJLabelChangeTriggerOffset.gridy = 3;
			constraintsJLabelChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerOffset.ipadx = -63;
			constraintsJLabelChangeTriggerOffset.insets = new java.awt.Insets(8, 3, 17, 12);
			getJPanelChangeMethod().add(getJLabelChangeTriggerOffset(), constraintsJLabelChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJTextFieldChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJTextFieldChangeTriggerOffset.gridx = 5; constraintsJTextFieldChangeTriggerOffset.gridy = 3;
			constraintsJTextFieldChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextFieldChangeTriggerOffset.weightx = 1.0;
			constraintsJTextFieldChangeTriggerOffset.ipadx = 31;
			constraintsJTextFieldChangeTriggerOffset.insets = new java.awt.Insets(4, 3, 15, 8);
			getJPanelChangeMethod().add(getJTextFieldChangeTriggerOffset(), constraintsJTextFieldChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeTriggerNumber.gridx = 2; constraintsJCSpinFieldChangeTriggerNumber.gridy = 3;
			constraintsJCSpinFieldChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeTriggerNumber.ipadx = 34;
			constraintsJCSpinFieldChangeTriggerNumber.ipady = 19;
			constraintsJCSpinFieldChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeTriggerNumber(), constraintsJCSpinFieldChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelWhenChange = new java.awt.GridBagConstraints();
			constraintsJLabelWhenChange.gridx = 1; constraintsJLabelWhenChange.gridy = 1;
			constraintsJLabelWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelWhenChange.ipadx = 3;
			constraintsJLabelWhenChange.ipady = 4;
			constraintsJLabelWhenChange.insets = new java.awt.Insets(0, 5, 4, 5);
			getJPanelChangeMethod().add(getJLabelWhenChange(), constraintsJLabelWhenChange);

			java.awt.GridBagConstraints constraintsJComboBoxWhenChange = new java.awt.GridBagConstraints();
			constraintsJComboBoxWhenChange.gridx = 3; constraintsJComboBoxWhenChange.gridy = 1;
			constraintsJComboBoxWhenChange.gridwidth = 3;
			constraintsJComboBoxWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJComboBoxWhenChange.weightx = 1.0;
			constraintsJComboBoxWhenChange.ipadx = 170;
			constraintsJComboBoxWhenChange.ipady = 23;
			constraintsJComboBoxWhenChange.insets = new java.awt.Insets(0, 3, 1, 8);
			getJPanelChangeMethod().add(getJComboBoxWhenChange(), constraintsJComboBoxWhenChange);
			// user code begin {1}
			jComboBoxWhenChange_ActionPerformed(null);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelChangeMethod;
}
/**
 * Return the JTextFieldChangeTriggerOffset property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldChangeTriggerOffset() {
	if (ivjJTextFieldChangeTriggerOffset == null) {
		try {
			ivjJTextFieldChangeTriggerOffset = new javax.swing.JTextField();
			ivjJTextFieldChangeTriggerOffset.setName("JTextFieldChangeTriggerOffset");
			ivjJTextFieldChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJTextFieldChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJTextFieldChangeTriggerOffset.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999.9999, 99999.9999, 4) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldChangeTriggerOffset;
}
/**
 * getValue method comment.
 */
public Object getValue(Object o) 
{
	com.cannontech.database.db.device.lm.LMProgramDirectGear gear = null;
	
	gear = (LMProgramDirectGear)o;
	
	if( getJComboBoxHowToStop().getSelectedItem() != null )
	{
		gear.setMethodStopType( 
			com.cannontech.common.util.StringUtils.removeChars( ' ', getJComboBoxHowToStop().getSelectedItem().toString() ) );
	}

	gear.setMethodOptionType((String)getJComboBoxCycleCountSndType().getSelectedItem());
	
	gear.setPercentReduction( new Integer( ((Number)getJCSpinFieldPercentReduction().getValue()).intValue() ) );
	
	gear.setChangeCondition( getChangeCondition(getJComboBoxWhenChange().getSelectedItem().toString()) );

	gear.setChangeDuration( new Integer( ((Number)getJCSpinFieldChangeDuration().getValue()).intValue() * 60 ) );
	gear.setChangePriority( new Integer( ((Number)getJCSpinFieldChangePriority().getValue()).intValue() ) );
	gear.setChangeTriggerNumber( new Integer( ((Number)getJCSpinFieldChangeTriggerNumber().getValue()).intValue() ) );
	
	if( getJTextFieldChangeTriggerOffset().getText() == null || getJTextFieldChangeTriggerOffset().getText().length() <= 0 )
		gear.setChangeTriggerOffset( new Double(0.0) );
	else
		gear.setChangeTriggerOffset( Double.valueOf(getJTextFieldChangeTriggerOffset().getText()) );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	t.setShedTime( com.cannontech.common.util.CtiUtilities.getIntervalComboBoxSecondsValue( getJComboBoxShedTime() ) );

	t.setNumberOfGroups( getJComboBoxNumGroups().getSelectedItem() );

	String sendRateString = (String)(getJComboBoxSendRateDigits().getSelectedItem()) + " " + (String)(getJComboBoxSendRateUnits().getSelectedItem());	
	t.setRefreshRate( com.cannontech.common.util.CtiUtilities.getIntervalSecondsValue( sendRateString ) );
		
	t.setGroupSelectionMethod( StringUtils.removeChars( ' ', getJComboBoxGroupSelection().getSelectedItem().toString() ) );
		
	return t;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	getJCSpinFieldChangeDuration().addValueListener(this);
	getJCSpinFieldChangePriority().addValueListener(this);
	getJCSpinFieldChangeTriggerNumber().addValueListener(this);
	getJCSpinFieldPercentReduction().addValueListener(this);
	getJComboBoxWhenChange().addActionListener(this);
	
	getJComboBoxShedTime().addActionListener(this);
	getJComboBoxNumGroups().addActionListener(this);
	getJComboBoxSendRateDigits().addActionListener(this);
	getJComboBoxSendRateUnits().addActionListener(this);
	getJComboBoxGroupSelection().addActionListener(this);
	getJComboBoxHowToStop().addActionListener(this);
	getJTextFieldChangeTriggerOffset().addCaretListener(this);
	
	// user code end
	
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("TimeRefreshGearPanel");
		setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
		setLayout(new java.awt.GridBagLayout());
		setPreferredSize(new java.awt.Dimension(402, 430));
		setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
		setSize(402, 430);
		setMinimumSize(new java.awt.Dimension(0, 0));

		java.awt.GridBagConstraints constraintsJLabelShedTime = new java.awt.GridBagConstraints();
		constraintsJLabelShedTime.gridx = 1; constraintsJLabelShedTime.gridy = 1;
		constraintsJLabelShedTime.ipadx = 83;
		constraintsJLabelShedTime.insets = new java.awt.Insets(11, 10, 7, 1);
		add(getJLabelShedTime(), constraintsJLabelShedTime);

		java.awt.GridBagConstraints constraintsJComboBoxShedTime = new java.awt.GridBagConstraints();
		constraintsJComboBoxShedTime.gridx = 2; constraintsJComboBoxShedTime.gridy = 1;
		constraintsJComboBoxShedTime.gridwidth = 2;
		constraintsJComboBoxShedTime.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxShedTime.weightx = 1.0;
		constraintsJComboBoxShedTime.ipadx = 142;
		constraintsJComboBoxShedTime.ipady = 23;
		constraintsJComboBoxShedTime.insets = new java.awt.Insets(10, 1, 1, 102);
		add(getJComboBoxShedTime(), constraintsJComboBoxShedTime);

		java.awt.GridBagConstraints constraintsJLabelNumGroups = new java.awt.GridBagConstraints();
		constraintsJLabelNumGroups.gridx = 1; constraintsJLabelNumGroups.gridy = 2;
		constraintsJLabelNumGroups.ipadx = 17;
		constraintsJLabelNumGroups.insets = new java.awt.Insets(6, 10, 5, 1);
		add(getJLabelNumGroups(), constraintsJLabelNumGroups);

		java.awt.GridBagConstraints constraintsJComboBoxNumGroups = new java.awt.GridBagConstraints();
		constraintsJComboBoxNumGroups.gridx = 2; constraintsJComboBoxNumGroups.gridy = 2;
		constraintsJComboBoxNumGroups.gridwidth = 2;
		constraintsJComboBoxNumGroups.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxNumGroups.weightx = 1.0;
		constraintsJComboBoxNumGroups.ipadx = 142;
		constraintsJComboBoxNumGroups.ipady = 23;
		constraintsJComboBoxNumGroups.insets = new java.awt.Insets(2, 1, 2, 102);
		add(getJComboBoxNumGroups(), constraintsJComboBoxNumGroups);

		java.awt.GridBagConstraints constraintsJLabelSendRate = new java.awt.GridBagConstraints();
		constraintsJLabelSendRate.gridx = 1; constraintsJLabelSendRate.gridy = 4;
		constraintsJLabelSendRate.ipadx = 8;
		constraintsJLabelSendRate.insets = new java.awt.Insets(7, 10, 5, 1);
		add(getJLabelSendRate(), constraintsJLabelSendRate);

		java.awt.GridBagConstraints constraintsJLabelGroupSelection = new java.awt.GridBagConstraints();
		constraintsJLabelGroupSelection.gridx = 1; constraintsJLabelGroupSelection.gridy = 5;
		constraintsJLabelGroupSelection.ipadx = 12;
		constraintsJLabelGroupSelection.insets = new java.awt.Insets(7, 10, 6, 1);
		add(getJLabelGroupSelection(), constraintsJLabelGroupSelection);

		java.awt.GridBagConstraints constraintsJComboBoxGroupSelection = new java.awt.GridBagConstraints();
		constraintsJComboBoxGroupSelection.gridx = 2; constraintsJComboBoxGroupSelection.gridy = 5;
		constraintsJComboBoxGroupSelection.gridwidth = 2;
		constraintsJComboBoxGroupSelection.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxGroupSelection.weightx = 1.0;
		constraintsJComboBoxGroupSelection.ipadx = 180;
		constraintsJComboBoxGroupSelection.ipady = 23;
		constraintsJComboBoxGroupSelection.insets = new java.awt.Insets(3, 1, 3, 64);
		add(getJComboBoxGroupSelection(), constraintsJComboBoxGroupSelection);

		java.awt.GridBagConstraints constraintsJLabelHowToStop = new java.awt.GridBagConstraints();
		constraintsJLabelHowToStop.gridx = 1; constraintsJLabelHowToStop.gridy = 6;
		constraintsJLabelHowToStop.ipadx = 4;
		constraintsJLabelHowToStop.insets = new java.awt.Insets(5, 11, 9, 30);
		add(getJLabelHowToStop(), constraintsJLabelHowToStop);

		java.awt.GridBagConstraints constraintsJLabelPercentReduction = new java.awt.GridBagConstraints();
		constraintsJLabelPercentReduction.gridx = 1; constraintsJLabelPercentReduction.gridy = 7;
		constraintsJLabelPercentReduction.gridwidth = 2;
		constraintsJLabelPercentReduction.ipadx = 53;
		constraintsJLabelPercentReduction.ipady = 3;
		constraintsJLabelPercentReduction.insets = new java.awt.Insets(6, 11, 4, 8);
		add(getJLabelPercentReduction(), constraintsJLabelPercentReduction);

		java.awt.GridBagConstraints constraintsJComboBoxHowToStop = new java.awt.GridBagConstraints();
		constraintsJComboBoxHowToStop.gridx = 2; constraintsJComboBoxHowToStop.gridy = 6;
		constraintsJComboBoxHowToStop.gridwidth = 2;
		constraintsJComboBoxHowToStop.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxHowToStop.weightx = 1.0;
		constraintsJComboBoxHowToStop.ipadx = 54;
		constraintsJComboBoxHowToStop.insets = new java.awt.Insets(3, 1, 4, 64);
		add(getJComboBoxHowToStop(), constraintsJComboBoxHowToStop);

		java.awt.GridBagConstraints constraintsJCSpinFieldPercentReduction = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldPercentReduction.gridx = 3; constraintsJCSpinFieldPercentReduction.gridy = 7;
		constraintsJCSpinFieldPercentReduction.ipadx = 88;
		constraintsJCSpinFieldPercentReduction.ipady = 20;
		constraintsJCSpinFieldPercentReduction.insets = new java.awt.Insets(4, 9, 3, 121);
		add(getJCSpinFieldPercentReduction(), constraintsJCSpinFieldPercentReduction);

		java.awt.GridBagConstraints constraintsJPanelChangeMethod = new java.awt.GridBagConstraints();
		constraintsJPanelChangeMethod.gridx = 1; constraintsJPanelChangeMethod.gridy = 8;
		constraintsJPanelChangeMethod.gridwidth = 3;
		constraintsJPanelChangeMethod.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelChangeMethod.weightx = 1.0;
		constraintsJPanelChangeMethod.weighty = 1.0;
		constraintsJPanelChangeMethod.ipadx = 5;
		constraintsJPanelChangeMethod.insets = new java.awt.Insets(3, 5, 137, 62);
		add(getJPanelChangeMethod(), constraintsJPanelChangeMethod);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateDigits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateDigits.gridx = 2; constraintsJComboBoxSendRateDigits.gridy = 4;
		constraintsJComboBoxSendRateDigits.gridwidth = 2;
		constraintsJComboBoxSendRateDigits.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxSendRateDigits.weightx = 1.0;
		constraintsJComboBoxSendRateDigits.ipadx = 83;
		constraintsJComboBoxSendRateDigits.ipady = 23;
		constraintsJComboBoxSendRateDigits.insets = new java.awt.Insets(3, 1, 2, 161);
		add(getJComboBoxSendRateDigits(), constraintsJComboBoxSendRateDigits);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateUnits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateUnits.gridx = 3; constraintsJComboBoxSendRateUnits.gridy = 4;
		constraintsJComboBoxSendRateUnits.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxSendRateUnits.weightx = 1.0;
		constraintsJComboBoxSendRateUnits.ipadx = 123;
		constraintsJComboBoxSendRateUnits.ipady = 23;
		constraintsJComboBoxSendRateUnits.insets = new java.awt.Insets(3, 31, 2, 64);
		add(getJComboBoxSendRateUnits(), constraintsJComboBoxSendRateUnits);

		java.awt.GridBagConstraints constraintsJComboBoxCycleCountSndType = new java.awt.GridBagConstraints();
		constraintsJComboBoxCycleCountSndType.gridx = 2; constraintsJComboBoxCycleCountSndType.gridy = 3;
		constraintsJComboBoxCycleCountSndType.gridwidth = 2;
		constraintsJComboBoxCycleCountSndType.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxCycleCountSndType.weightx = 1.0;
		constraintsJComboBoxCycleCountSndType.ipadx = 16;
		constraintsJComboBoxCycleCountSndType.insets = new java.awt.Insets(3, 1, 2, 102);
		add(getJComboBoxCycleCountSndType(), constraintsJComboBoxCycleCountSndType);

		java.awt.GridBagConstraints constraintsJLabelCycleCntSndType = new java.awt.GridBagConstraints();
		constraintsJLabelCycleCntSndType.gridx = 1; constraintsJLabelCycleCntSndType.gridy = 3;
		constraintsJLabelCycleCntSndType.insets = new java.awt.Insets(6, 10, 6, 17);
		add(getJLabelCycleCntSndType(), constraintsJLabelCycleCntSndType);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	getJComboBoxWhenChange().setSelectedItem( LMProgramDirectGear.CHANGE_NONE );
	getJLabelSendRate().setText("Refresh/Resend Rate:");
	getJComboBoxShedTime().setSelectedItem("1 hour");
	getJComboBoxSendRateDigits().setSelectedItem("30");
	getJComboBoxSendRateUnits().setSelectedItem("minutes");
		try
	{
		initConnections();
	}
	catch(Exception e)	{ }
	// user code end
}
/**
 * Comment
 */
public void jComboBoxWhenChange_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getJLabelChangeDuration().setVisible(false);
	getJCSpinFieldChangeDuration().setVisible(false);
	getJLabelMinutesChDur().setVisible(false);
	
	getJLabelChangePriority().setVisible(false);
	getJCSpinFieldChangePriority().setVisible(false);
	
	getJLabelChangeTriggerNumber().setVisible(false);
	getJCSpinFieldChangeTriggerNumber().setVisible(false);

	getJLabelChangeTriggerOffset().setVisible(false);
	getJTextFieldChangeTriggerOffset().setVisible(false);

	
	if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_NONE )
		 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Manually Only" ) )
	{
		//None
		return;
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_DURATION )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "After a Duration" ) )
	{
		//Duration
		getJLabelChangeDuration().setVisible(true);
		getJCSpinFieldChangeDuration().setVisible(true);
		getJLabelMinutesChDur().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_PRIORITY )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Priority Change" ) )
	{
		//Priority
		getJLabelChangePriority().setVisible(true);
		getJCSpinFieldChangePriority().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_TRIGGER_OFFSET )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Above Trigger" ) )
	{
		//TriggerOffset
		getJLabelChangeTriggerNumber().setVisible(true);
		getJCSpinFieldChangeTriggerNumber().setVisible(true);

		getJLabelChangeTriggerOffset().setVisible(true);
		getJTextFieldChangeTriggerOffset().setVisible(true);
	}
	else
		throw new Error("Unknown LMProgramDirectGear control condition found, the value = " + getJComboBoxWhenChange().getSelectedItem().toString() );


	fireInputUpdate();
	return;
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		TimeRefreshGearPanel aTimeRefreshGearPanel;
		aTimeRefreshGearPanel = new TimeRefreshGearPanel();
		frame.setContentPane(aTimeRefreshGearPanel);
		frame.setSize(aTimeRefreshGearPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private void setChangeCondition(String change) 
{
	if( change == null )
		return;

	if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_NONE) )
	{
		getJComboBoxWhenChange().setSelectedItem("Manually Only");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_DURATION) )
	{
		getJComboBoxWhenChange().setSelectedItem("After a Duration");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_PRIORITY) )
	{
		getJComboBoxWhenChange().setSelectedItem("Priority Change");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_TRIGGER_OFFSET) )
	{
		getJComboBoxWhenChange().setSelectedItem("Above Trigger");
	}	
	
}
/**
 * setValue method comment.
 */
public void setValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	if( o == null )
	{
		return;
	}
	else
		gear = (LMProgramDirectGear)o;

	getJComboBoxHowToStop().setSelectedItem( StringUtils.addCharBetweenWords( ' ', gear.getMethodStopType() ) );

	getJCSpinFieldPercentReduction().setValue( gear.getPercentReduction() );
	
	setChangeCondition( gear.getChangeCondition() );
	getJCSpinFieldChangeDuration().setValue( new Integer( gear.getChangeDuration().intValue() / 60 ) );
	getJCSpinFieldChangePriority().setValue( gear.getChangePriority() );
	getJCSpinFieldChangeTriggerNumber().setValue( gear.getChangeTriggerNumber() );	
	getJTextFieldChangeTriggerOffset().setText( gear.getChangeTriggerOffset().toString() );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxShedTime(), t.getShedTime().intValue() );

	getJComboBoxNumGroups().setSelectedItem( t.getNumberOfGroups() );
	
	getJComboBoxCycleCountSndType().setSelectedItem(t.getMethodOptionType());

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxSendRateDigits(), getJComboBoxSendRateUnits(), t.getRefreshRate().intValue() );
		
	getJComboBoxGroupSelection().setSelectedItem( StringUtils.addCharBetweenWords( ' ', t.getGroupSelectionMethod() ) );
	
	
}
/**
 * valueChanged method comment.
 */
public void valueChanged(com.klg.jclass.util.value.JCValueEvent arg1) 
{
	//fire this event for all JCSpinFields!!
	this.fireInputUpdate();
}
/**
 * valueChanging method comment.
 */
public void valueChanging(com.klg.jclass.util.value.JCValueEvent arg1) {}

/**
* @return
*/

/**
* @param box
*/
public void setJComboBoxCycleCountSndType(javax.swing.JComboBox box) 
{
	ivjJComboBoxCycleCountSndType = box;
}

}
