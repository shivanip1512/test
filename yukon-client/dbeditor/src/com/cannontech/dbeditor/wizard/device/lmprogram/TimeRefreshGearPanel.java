package com.cannontech.dbeditor.wizard.device.lmprogram;

/**
 * Insert the type's description here.
 * Creation date: (8/1/2002 11:56:33 AM)
 * @author: 
 */

import com.cannontech.common.util.StringUtils;
import com.cannontech.database.db.device.lm.LMProgramDirectGear;
 
public class TimeRefreshGearPanel extends GenericGearPanel {
	private javax.swing.JComboBox ivjJComboBoxGroupSelection = null;
	private javax.swing.JComboBox ivjJComboBoxHowToStop = null;
	private javax.swing.JComboBox ivjJComboBoxNumGroups = null;
	private javax.swing.JComboBox ivjJComboBoxWhenChange = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeDuration = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangePriority = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeTriggerNumber = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldPercentReduction = null;
	private javax.swing.JLabel ivjJLabelChangeDuration = null;
	private javax.swing.JLabel ivjJLabelChangePriority = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerNumber = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerOffset = null;
	private javax.swing.JLabel ivjJLabelGroupSelection = null;
	private javax.swing.JLabel ivjJLabelHowToStop = null;
	private javax.swing.JLabel ivjJLabelMinutesChDur = null;
	private javax.swing.JLabel ivjJLabelNumGroups = null;
	private javax.swing.JLabel ivjJLabelPercentReduction = null;
	private javax.swing.JLabel ivjJLabelSendRate = null;
	private javax.swing.JLabel ivjJLabelShedTime = null;
	private javax.swing.JLabel ivjJLabelWhenChange = null;
	private javax.swing.JPanel ivjJPanelChangeMethod = null;
	private javax.swing.JTextField ivjJTextFieldChangeTriggerOffset = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateDigits = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateUnits = null;
	private javax.swing.JComboBox ivjJComboBoxCycleCountSndType = null;
	private javax.swing.JLabel ivjJLabelCycleCntSndType = null;
	private javax.swing.JCheckBox ivjJCheckBoxRampIn = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldRampInPercent = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldRampOutPercent = null;
	private javax.swing.JLabel ivjJLabelRampInInterval = null;
	private javax.swing.JLabel ivjJLabelRampInPercent = null;
	private javax.swing.JLabel ivjJLabelRampInPercentSign = null;
	private javax.swing.JLabel ivjJLabelRampInSec = null;
	private javax.swing.JLabel ivjJLabelRampOutInterval = null;
	private javax.swing.JLabel ivjJLabelRampOutPercent = null;
	private javax.swing.JLabel ivjJLabelRampOutPercentSign = null;
	private javax.swing.JLabel ivjJLabelRampOutSec = null;
	private javax.swing.JTextField ivjJTextFieldRampInInterval = null;
	private javax.swing.JTextField ivjJTextFieldRampOutInterval = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private javax.swing.JComboBox ivjJComboBoxShedTimeDigits = null;
	private javax.swing.JComboBox ivjJComboBoxShedTimeUnits = null;

class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == TimeRefreshGearPanel.this.getJCheckBoxRampIn()) 
				connEtoC1(e);
			if (e.getSource() == TimeRefreshGearPanel.this.getJComboBoxWhenChange()) 
				connEtoC2(e);
			if (e.getSource() == TimeRefreshGearPanel.this.getJComboBoxCycleCountSndType()) 
				connEtoC3(e);
		};
	};
/**
 * TimeRefreshGearPanel constructor comment.
 */
public TimeRefreshGearPanel() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJComboBoxShedTimeDigits() || e.getSource() == getJComboBoxShedTimeUnits()) 
		connEtoC4(e);
	if (e.getSource() == getJComboBoxNumGroups()) 
		connEtoC5(e);
	if (e.getSource() == getJComboBoxSendRateDigits() || e.getSource() == getJComboBoxSendRateUnits()) 
		connEtoC7(e);
	if (e.getSource() == getJComboBoxGroupSelection()) 
		connEtoC8(e);
	if (e.getSource() == getJComboBoxHowToStop()) 
		connEtoC10(e);
	// user code begin {2}
	// user code end
}
	/**
	 * Called when the caret position is updated.
	 *
	 * @param e the caret event
	 */
public void caretUpdate(javax.swing.event.CaretEvent e) {}
/**
 * connEtoC1:  (JComboBoxWhenChange.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.jComboBoxWhenChange_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jCheckBoxRampIn_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC10:  (JComboBoxHowToStop.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		rampItOut(getJComboBoxHowToStop().getSelectedItem().toString().compareTo("Ramp Out") == 0);
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
private void connEtoC11(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (JComboBoxWhenChange.action.actionPerformed(java.awt.event.ActionEvent) --> TimeRefreshGearPanel.jComboBoxWhenChange_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jComboBoxWhenChange_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (JComboBoxCycleCountSndType.action.actionPerformed(java.awt.event.ActionEvent) --> TimeRefreshGearPanel.jComboBoxCycleCountSndType_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jComboBoxCycleCountSndType_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JComboBoxShedTime.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (JComboBoxNumGroups.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC7:  (JComboBoxSendRate.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC8:  (JComboBoxGroupSelection.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G7B104FB0GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E15DFD8FDC14D556BF9595DBD656D24B6E3AE5C53BD454D2D1D1D1CBC925C5456ED2D95A3E6C2EDB443A3B6C3E6E7B726E327948202222221272AF99158A0BG01E4947C83220221921022C1B2B28FB0BA4C0C4320E0143FF36FFD6EF97E704CB0E87B7B797E78FC8EB367FB4F39775CF37FBC776FB3C2D641647973D23384E15EFCC17A2B1AA78801D102F0685B1C860E19CC0986C171378EE805E02DCE03
	4F86881B735F0906CC6118A19D788E60A3FF13E8D8835FD78996C35BCF610B07F40AA16CD743CD6FFBCFE7FD87CFE7A16577AF4B004FE5C0DD007983451AC87A6232EC898F81FE19741D503CD4C1885AC2E472AA3295F85696A6E703CFBF201A2DC446EFD93E949E8F9811C9864A584AE48B61F391356E722DA6C92E637A90E14EF3A529CBC9DA0A78B979CB3AA15227D1F808BA42A0A4676C034F1A66133D5B3B9D7DA55DE63B5DE1F70B5DFDA5166322456AF638CA4ED84F1ADD16920BF85A5AAD16587A1DAEC7
	2F4B5C3FF5EB1B35DFEC91FBDC62C05FDE516CEAB65BC51BA0E4D713BC54D6245378A18F10E6B0459E29A0FE6B006FEE208955BC9F3FDCDAA35999F8B2C4083FFD1D47FCA4D4B37BB3EA64FCA4347EB3AD320644FFA7AD972257843CBF9033652F4B38AD42B6EE4B41D2A2EB823E99288F7155E5847783BE88A8EC9B37F15B075C46762F9F96120FFF1E3A5C030DD337B15B123649B6F6BC6437A407561DFBBBC97997EF07F401ACC081C0A1C0D30172E81D35F6FC841F35475D3B9C7D7D8EFB2D53D9E7333876BB
	AC228D3EEF5D8AA19256A2F6BBDC96C1E075F2CFC5310EBD1C62372B6BA4A1163743822FC721AD778AEE775E5479BAF98BFF39ACF50E94C77A8EB9EFBBF7903FFDD2C97CD6845F099E310761DBA86E2F40D9D97D02568542CF02B0E1A777F37BB2EECBD35AEDC26626565405BA3684BD5510EA5949EC9859A95B42FC9CF00C78B88470E82019C0F30032EA938D15355C478FF4D40C6563C6E887AE3B5956BAF85CE9F6396B862DB60B6812FC7D73E55EFC2DC7CC6F71F16BB13F04D4A84BE86683AD3AFE1999D215
	5ADC4B7C51D7AB7B05257DDF9E538E289DDDB716E199CE21EDE5D2ADABC38362AFD0BCD40133327D02621407B0E3DD220149DFC55B16FF1D360E5CC471C9F55ABA12DF466BC8B804E56FCAB430727D40CC7A479160030042002682A5G255503DCBDAF63F7BACAFDECC74D0A72E53A8FF72E06CFF1486DB2B75A875CE6FB37F8486C321A0F5B4481C112096AA4369DD769BDCD5BF7B72431D7340BAE335B6A30C36C66FE91AA53G13F931F38511F109B414742210C03FD360713E52398ABEED66817797CE0B59AD
	4A92AC7CB71D24CE1CB69F0298A182D2567544DF1D344FB5417736FA6E2B5663848B85BE9A7DF2642B15707999D4EE5136F5EB3D351B18E1F68D73BADAC15B6CF410775F1DE8B06D61ED734F6D3C8E56AF3DC7A8FE79F35DBAC8A8F98F2BCF19FB35F5F0870D5B84F8BB5050DE7ECCFD3A22DDA79E539E7DFA29C744DE55B3EF374C33B4FE231B4642F134C503061F2F784E7C7DE4B749DF9064AB9CA8EEAF77F960D7C6D6976B4C83A22FFD87DDD0F1C40BDC82CC767AE36459A21E966D6EFA51A95AAD70E5C0AA
	7B20E30B64FA596340BAF3B345C9BF358BAA4EG624147D6B09C62D056F29E9ECA434DEE374BFAFC50AD360AEE37555EAB6B07D3DB86D4DD60001457A9961257591047348668DF9BF8DE37F52DD2542FA607636420330D349C291EAEDDCE6AE491486FEC6065BF2D140C31AC487F1A72F2781725FAE537CC5299CFFF6A39EFF6FBCCC3DB6E671F4644B2BEC6B1C875076113D85F88F989850A43FC2FAFEB5748DF289D23ED2A26E9A86D79AE53E0F5224C6C39CED719756B74B633FE1D5EE576DEE7BFB36B55D996
	56E2A6F9F41C31AB5A40E1B3698F3B9DF63BC89BA22A88EC0C7C67B6128F2B5D6ABEEC35740A6ED66BD99146610D24AE3BE91F1B82651559487B49B39BF8BFD9F876CEA16AD8316EF8AA680E4FD27B9A25B1CC235CCFB21B5A0F137AA05A44FEF054AE47205D4D702FE8FFAE6183860A7DB56FE622DB34EFD71F58FD324EB154824F0AC6FB3119662604FDB40B2E9E072BDF34941DB01FB617184F38CBE8E9145452605D647BC663A71FECB76A8D6B0BCF2863BED62B093449F32C559B8FEDACE375EB15D0F06E27
	122D0E7E638E086FF01FE85F55E736770A5F313D23629F2F4D1B384D6B76052BED5EB55CED93E921345AADED434EFF1369231299EF8E4AD9BF7DDFA29DDFC19D8B831A5A487B69570F13F05ECFCB8F23DD8E1B0DB58388AB5EC76A382BB2CBD1EF639B591CF799065FBCC678F39E43199D4FF6E71276AA1E9A94E118C59E941F0943FC2C543DD293F648EC9B1447E02FF4AF01CF1B62994370E9967D76731205BCD7CEE27C3F36AC9048D80A45495AFB18194469F4D97B6111CC9E1A525C3DF039F26E6E063C11F9
	7ED4781C8944F4FF71B9492BDE39C6FCC662F8290C4F6D6700CE86E0451F31F8EC1FB11FB0396FEF62F2E9CD0906FC201AA6A6B7522414BBDC4E65E2G1F8514361F49556FE7F2137693392BF1BEDE0A58ED94FB8DBA7C4B5378BCE3FF26F2CD41B2D02F5BF751F214621F33DFBB7F7A3817441BF5A051D0F80057357D22F2CCD0BBB060683652612FD4DEA92232DFE3583C1E457059E3F58D40DC4CA28E71B2DF58C3ECA563E389164A6D6E0F378923477B3B69AA869FF26DBAC3DBC71BE3978C519B205A6C42EE
	7F10D5BCA3F0BFFC33C739A69139FCCB6A928FFEB09DE079EFBFA07B418873FDE6D375509E61FC57D7688C425ABDEAED65DABAFEA2EBA4C187783A45CDCBC9FDCF81BE6BA054A9A0B607CA26638AE2CBBDE0A3A40C3649509CE51B8CBF4846E2B3611375F947B6154367783BB5DE96C3666D70F9E1CF8DDE96372D5A496B783D3789B567F2F557DE82169726A69DE4E5105D2CA80BE79DCBAA0118BFA2B7F1FFD8C0E6D2B3774740A225BF62GCF81B2FE4E7D31217C427C3132230E7A63C21FCAFCEE6CD74E73D1
	89B65ABE677938E333B69F24DC03B19FEFDDE0BEEAB6B4AA73F1210FA8ECEF074B157DCED43C49E33F9371B9AB5B184F357D4EF2ABE997890027FC4E7B1DCBFBD6A87A1D96E86960F4F8CA60383457401E8792DF59BB1FBF8F84BE27EBBAC1FC1A5982BE862A876AG9AE961E9BC56BB66DA526EA1AFEBC95FDF2E1DF7CC023843DA3C4FEB22A1FC3AC6E6B670C22B9AE3EBACA54BC9FD49EAE5EBAC5B907F0262C18A1C552FC934BFA1FCFEDB22A17D901F0F3CD326DDC31AF3D81DDEE63B1AE7FA991B34FAEBB5
	FC25C60F55376D0772F87FC9AA52D0494099986BEF5D0AE3DD29CF7CFDCE3AD4171A5A795A47EDA74933519F7849C091C0F1C049C0D9C7928D26A33C7C967769BDB75465676921A14F27D9BE1F9A15CF5F7C93BB26FF5A0F687927576649BFD28B1546AE5DEB15E397679156AF8442E748913ECEFE57A26E4328A33C3C2FA8BF3F7C840E525366A7D9139FE6434C4D4486722C4DBC4A4B71F7B602B5G5FFE1417D9EF5FD2C53BEEF6D86DEEEC53D9D6B226F3382C3DD6BB47F2A8566DF051099F435ACEF81E13FE
	F9C2FFCEEABE21BFA76DBD61FD1D45F142531C152D09BCC81F69FD10BFBFA006AD48A4D8A070A1087DF28541E200CFC06CF7D4AE85782CAFB9D6C9650A005F095812D58433GBF72A5AF5F4A65E47CB49178D02029C089C0E99DB0F683EAG32G85G05G4582A581E5F5C27B816A8272878A850A81CA824A7EAA51D089548E64868A840AG0A83CA864ABF86E3D9202EE33836C3ED7087BE98A89AE896D0DA9758GD48FE48172878A6EE24F65E8781C55A50DF74DA087D48FE48172878A860AB6337175AC78CC
	BB8EB2C075C096A0FF20E02068635C065B16464F73EDBD03586D0B9C566B2F18EF3C4990FF11B240B4BA191FC91978CB3E66E1441F5E62F2FB88A765CA4AF2ACFB5BA5FDD2978AA579881DB8C32430D0295CC95DC8D64811728E50241766C37A0432467017A74A174A26C1A71D9A2CEF6FAD73352C370DB3FD98A6896F0FA1733120DECFAC9058B8037467E43F79BDC55826B162AA7500AF22799C5B5ECF24CF62172552778A9D39F7254F8DC09F82113D75AAC5782782696354BACBFC74D95EF914B321AD5267F2
	1D30EA490F86E15AEA926E042EDA9C208F71FA335BAC053D65A6799A356EF7405CAF8AFC6D6753CD0BA4195DEE472ECD82FF3EA564A81FEF330E337A16ACFDE6F4CBE353EE399ECA6B6DA7BDBFF39EB8297F4CF964A4A91B8147202BDB54BED722CEE6E318BCAAE9F40B7DA49B52DA8855F71BDD3D622867D2AC55E7E11E74DFBB69695945FC74BFAA9F158BFCEC721F9BC95CBAE393BA1BE54F7B9F2FCD176AEAE5B71F4B1E59C14724400781CD6D666D76670B384F63A53F4ED178B75D824F960B3A5DB37B9EAF
	D75AD701E5785B4DBC3EB2502B87EAD7685B603B1FA6BE660F37ECE42CBC047C9FA9BF0C6945ACA76B96E61B3557CED6B30EC0DFE8A1791AC51F710170BD444267E36FE512F1094DBC6C9804810C3FC81F5D19FC2C168DFC99D0BB10CDE436B03D049524CC1DAE31C7F439C48BDB1216521937120E91C0FE3A4853791FCC15CD6DDCF6859DA7247540F33B072FE15DF706345D9E17399F0A2B55A9F68BB3FB086CE7AB38DD8D40F7G0DGCD820A6C61692CDFC5F4C1515ABF58CF2DE269EC25E30F42DE48CFAF17
	0D2DA3F16DEBB29F97ED2DFD22052C1A717C5D6FD80EE187867B773A9C034E81A9AC71B0D99344912E9CAC05E7EED6448BCD2C456C46F81FD91005E1D42BD51416BBD978466DEB14F12BC524B86EBEA15B5660B85366E8F5BB1CD25808F3B50641A4389BFC5DA2DA862585D5A633472A32DF0EC28A7F01B30F0637BA2D76BDD651E699959113FB6AAC0D0736A6361830DFF477B9ACBC1ECFB62A7242DDD18F63E2B777E5553155FAB2DF580908A453DC1C2B1499B56767F23662F7B16FCCC8A1A2493C32BDC71DB7
	32B2F4F050ADE59165EA1648652496E1612606EC8F612DD045194C6DFBE8DAED5023AA132267BAE0060FE9CDB6E6EA63EA953BD91865443B5A30D17A65E7E8FDD02FF5C9E16F17287351E8676AAC3C5810BD4AC62D4C8B9B16EB62G732478BB8A56E84294EE10E49E68499E6DF394E4B257EFD9259F0F944739936A3AA4B5D7D5DD7A412655FAB2D2DDE26BD3F7AED72ECFF57432F928DFAFDF3F322F518B8F4470D75B745637C2B05C30DACFBF9243ABBA7442E3B1BC2EC3AF7ED9987E2777747413B17C7785FA
	6199FDBC7CA613DE7CC68C1F2EDA172D6CE361FD987ED02D1E7E8806E7D56905CF44703733756C8B4670A45D74A3B0DC4C51530F41706EAA3D70F88C3FC595BEC70ABF5F4A4353F5754BB07C8313DEF8BD062F4B538BEF4770E93A695BB03CD0B7FDBF8CBF229B9E086101A6BD7F05E078B7FBF56BA70627656A15DFAC0687176A56CFAB1F634F256BE04940271F605836A3844B873E98315B0E70758193E2E139848BGBE74849FF3CDDE2BDC1B0C82BC8EA861849B0B241C501F27E51E0439A31069249C5EF4F2
	34ACDB03EC6EA5633D2E13EC8DF28D62960A87A9F036B6798D9D9F92BE9642A658387D4F50752B06FE186776F36C2E9E028D81BF91313F77703C87A3764FED841B83FC061DE349F4AD4A88FC8DE27F19CD30E642A3361B7AFC8478C044EE4A61E904A076AF9ADFB270190EC4C3014066CC8463FF2C9F7D67F2A3FC623AB97427CE071D2C1D379DECBED65B543877407E5D875A583A7964B34AF5F353626D9E574D8B9D4C7FA66933ADD51C477C79E8A6BF1362043090879F87EE6AA26B27B8FEA746EC5D3A57E535
	5419FB1B6808150D61D36998126847BB78983EEC8509B35B89ED972841494FC68CFD407755C2FFFA1B50645722FB56B73EEDCBEA171359696F1457791D8F79AD09F212B35A9DEE59DF2FE692FF5945B3C674D9BDBCF76C64F0DCD1E5D9F931313222EC23E7FF972DD8276F6F265DFB5AE4078BFC0D724315BC3FE92720EE1C226B68AB156D12445B897FCA087FE878152A7095123E9C7E08AA1C786AFD157E9FD56173957A4C2F4F3F4F7D1A72FC18E0FBF0276733602724336052E7C22CE5DE40B7CE492FFF9C14
	7DB23C54973FCAF33D9E8FF3BDBA22E0FE0BDF4E57F663CF71B567BB56F0AC5B4531E5DFF02C99312D2BB9960058098E0EC5A1362413E34908952E656B5AE5839C4BB5920C0C2B7A90FB414465E286F89B78F6738702E27F76242D3764C4B7D979AD69A1A3A932500E43AADEBF166772F8525CBC6EBF557274EA907B2C0A6F63CEC64C18436DCF9B645807399C2BC1ECD28E0F4F0D580F2AF83A5387397D6F97295A30DCAEB862E43A2F20EE66E99E5F8E449A906BB471F47D90EB4F6358AC448474E543990EFD09
	7179A1B6913188441EB7717CA6A1963E1727D1B444316ADC0ECDC0ECC6A977E952901FE72E4EA5E7BEFA9CF6B71B0B96D33D3661C4C357B017E9BBC2E45C6094568E161123GC258B0ED1BC76AF55A11322DAF15BE89CD849DC26FCA6DAF983E1F044FFF4D1DBB172575ECAE99A777B9DC5633E01359C60A2259B1E0E5F3C4E6636F280D248C1307797363A9DA0F8B4F42F375AC47EAE9BD6EG5E09D854BA3A4EGFCA8E2EFD3AC8A7869081936713D0459084DAF207D6357707DEB0E3DC34FF39482DF03D8F39F
	FF3EB5FF4D478A07FA49FA4AE4602300920052C7928DC5C04DC0C3C01301E2001201323E61FAA728DEA570EDC0EE20C020F020B820B9C0D95FA69AAA015A3EE5E7E1185EE5BB42F44A0324CBBEC9BACAFC72571E57140BC6C60725CB98498B371707B5AB6407F4F435B4D9A143EC3FDF57F6FE76D23B166A6D7C295EBA6BA2C1FECE10FA38C69136D471DDEF6DD4CB4AF5E4D6FF7F5862F96D69AFF48C6606F2727B16372D5CBE7D7530DF53F1D8A848C581313616516B2D2DAD14EC601F33C1CFB817E8F8DFEAEB
	D9707D0BF9ECDD1C253DF23B7EFA54C75B69588E640B4FF1BB17D7F94ED7916D275AC0368B659767682F292D27FD7384101B0C329DB97ABEF0D359D8101BF50E7B601E9CEFBE18AF65ED11741969276EEF8A7DD81A73508737D5697B60831A27B2102F7163FB2D0F1D217B10407B7B713DD6FBBF5933B8E4BEB17AC495004DAE07D3F4390799CACF67C9F5BCAA737C6E483CF81EFA8BD70CD70F4DB30269D8B5580F4DB366A1FE8F454394B89BAFEFDE41474B1190E63C047BEE769099837983BF99A882A896A889
	A863D26E4B077B4B04B14E9A34B91CCD62E9512658C6E6E33C173ED40E75B3FFD4144A6D52664BF829F47E72D26D7D0B621567F77F684905FCFC997E68DDC24495024773F0DDD21AFE7C73A54BBC7249FC94FD1678A88C42E200120052AF03BE9D2872B26E23DB5D454CC724CA553A5D666EBEFAAA10BB089C5413E132C04D727607654A3CB5C0FC9DC0CEA0FF20204BC67753CC6F2EB5CA3DD0100B820A83CAGCA7128376A8B2E17698F73DDA0133FE23E8B5F3B7C553A529D18554A745CA093GB489A88CA85A
	5FD3FA0E8E255EF4101B8DA4DC8E4FA620224BBD69E5F6F23D9A10E98632A8E407607B044B756C5C38D6195EE41089871AAA494E7418DE01D1FB1EA989E4532E104E66DD217F3CAC86FC27A62C8D783EAB74EC7B15095BB6A205CFD44885437788DD3D2CDC2E9723E3C7BCE0F300522F54BE2F7FD62B4DD33EC2266CCA7DBC55835E2E8933816F8794B8AA0D66AAED9AA18A19C88FE94482BECB93168CFCC600DE7E5FD76DDB9AC126922881288348996029CC0B51EF7E12CC10C2B6943EC7814585E873F4EB0EB6
	CF89A013A249E5FECFBFCF05001BB4E1CD40F7FDCFAFCF37D4295A934884GCD12E443F452E0FAB3D0AFDAC7E6BAE03301042B34F92AD725178561C5C0B512DC73D51E52BBEE527A428232C3127C849DBD5A6EG8F5704CD85FE66D5FA3E684C9B5576C0AE6DEA296DDD6D216D813ED3935686FC5F55FAE94C175B1ECEFC93818B860A38DA6B37AE155FE2A0BC9EE80EA417BE41135FEED4696503DC99D03DA45F6ED1AF966D34C9B2FE8A59C0789E8294B9C1EB67A3FB35BE0C8519D912DC32CEFA04B22E013140
	B56A30CA609B2E5173614EDCED9A9D8AB967B57AE978839E24898B85BE8AA86E9AEDBE62C75DE7CBD04824F8C8A373DAF816DD2B8EB3815F244158BC79DB017C31F16626A36B854DFA519E1860962D37D84DB6C76F7AE2E3D931F1D379C6F666C53B9647623B078CA924B147EFB37818A37F6E5B057AD705D4F27EC4F74CA15996F62DBC5E49BC7C4FB4E96FBB172427D87EA8E9A57FF7B96845DE77GDD671372705ADA329FFF5C612207A458FEFC921E1DCC0078056B20EF82EA3A0E1DC5E3FA6D46517B788EA3
	5733DC477671C760F322CAAF3BC1FFDE10CC6785A1A09BF99D17955653F13CF9C8B30E4FDECF4FBD035C9CA00619695C5EB89166B79339FEFE01FA9D241C4E755BA15C02B26F76694FE9BE21737DC0108B194867A93DFDE32D0B10715C92697BF4501BBD114DD3C87D942E1767ACACED2BDD5EABE57B5975036C8635340FB92259BBD68BE1BCA25B9727716C375A875D62402EBE1062616DF55AF41ADDD6074B6A9EE6611B8F69264305B01D7E9DB91AF85ADC565EDE51F5E0307FB8BDE343643635F910BB5853B3
	A04AFB5E03CB4939A4F9E54E1BECE75BDABD9BB586B0591C3D727E36FC7100052D99207B3E236FA5C87B35F774EA772BC85D4D381E6FC7DD52225D6F2277A6B0FCA8D7CF3F92434BC76D571170868C5FD52597FF8706870D5A0FA461CE8C7FEC54FE9D89774770B9955A7DC0929E04612C2EE8538F1575B768459F85612CBFDBE3107B47DBFA8A347D233C1E3E298ABA47720A0D3AFD23F46E2547A80C3DAFB4DABFE907677EF6EB1A7C3DF33E1C560FEA73BD5B8A1616EDE4BACFAF10F592323D652FF273D8795B
	12636BBE0C67B82E4EB9DF9F317CA4AC147D31E4119CEF0CCFF9134E641DA1F5814F4B31A591FE57718C29AF64AEB1BC932DE7E947558A0276DEE9AECA165B246777830A6FB5ABBC5DCD7FAE082571453FB58D167F3F8FF9BE7F18B224FF7EB1F5D87F4CFD7A3077FB6019431E6F012F99D65E83E7EB9391343CD9784F06491A226E1AD76DF177BE2883870F1F903B5DED66DE54FFFAB1A95BB8E87BC9C0D9B7403CG2866863E2E11B8CC46C7642DA32357B4F6DBFAC5BEA061B63CF056332F624E0E7DFE12B74E
	12E779F1075B6D68A771F37C77E7C9F93B9DCE8AB2AC61AC49BCBCBD7A5CCCD4427FFC1634911B58C3E136761FC277715AA1DFFDB7707D004D9B699EB8700108DDC9319060A3901BCD31E860E7A2967CB15FCBC8C26CC93AAF38737B0906666FF3ACF2ADCF430258C2BA069982BEGB1DB81CFA3903108825C0FC76C23AF787EC7B2E2BF4B653A990138671F4B53B5A236BD0F47D709587D7D7CFE05BFE207683EE59070A108C5AE6271C5A236F0B1DD8786BE9EB15BE2EE4BEC443EDD4A5395EE645895F49F3499
	78AE446ECB63E93891CB21D8G70C108196773B402913BE7BECFA382318FBB392F52EF62D8AA7AB99F318385BC5DB244FE083E2FC7AC221A7BAA90311D34FCC3000FC0ECDE835F4B0AC12C05E27140A7A176F083CFA385B136B7C6F41BFE403189946B825E0958DFA9B682FCA0E21F55D0DB000FC66CA035EFBA7089089DBA0A69A2D6C56BC6D3905453A05CFFB3F17F8DA176D24E68FD3A5CDC9E5F84143B3A0A1F9B19095847D4AE89780C9F62B914AA2EEBC46C936AFBA77081087D017AFE92706108E55591EC
	AA70710809941B83FC460F304D9452F98570B50831BBDB4D04C72C84ED99C12C135A9C837CAC449EE1E7E2004F78B147DCD457883C8931A994EB825E0258B554FFC34087A236064A05G9F051895ED09C36CCD2ADBB88972B109E3B594EB863E8B31CB5B79599EB7E2AFD0ACG78A0444A69F9AAF2AEA89831EF710CD584E23B288F52FF82F36C1FF0AC0F5AE7823E99B19B5AECC16CB9EADFB870B1087D017AAF9E78E44426647078B2EE6658B21A2E9178B24486A8D683FC1BAC37056E7FG6F0F181D469784FC
	88E22F34F37BA2915BC9634B388572F68B479E2A623AA644D6D6F37B1A906B2B6676F5A1B62D1A27E1C36CEFB43EC86027A3A61F351A0D588F29DC4DE4485BE40ECD4E613E6AC30C1DC99881FE82E28E1A6EE460A3900B22D88C70B391FB3F06271B0018BFED6726DB21ACEF65584B9433G6FC6ECAB75339F70C1087D107AAF947829088DD17BE682BF9B31B8740BF09B7A004AB5939E31F3349F9A81BE9031D80A05G9F01582779349F87FEA6E2FB284DC940E75C0EE769D89D823E8C31E12C6375B2C6658201
	8FC5AC1F4697857CCC4476E0DF1704584FE8BEF686A79A5A03B9F6024A590077C76C8C2BD74007A0D6C07D9289FC9CE2CE0AA5G1F0C584B683F34BBB8964A76F70137A0F695159B82FEA2E2B3A8968CFCB8E2BB319EC4A176964DEF66CFE11E78D30E7DBC0747379331FFE05DEDC36C85EACBB07011080567F09F44A2B6E3AF0FEF96E29FB4F07B12913B12E2E9BF0367744F7059C8FDDA86FC93E2F16803AE4436E35E5C087D054AC583BF9331636CF984FCFA88479E48654F0FFC4466507E2A8C78A6446A6819
	1DAE6007908BAC4567A0E2FB775336G7C9C449A29DC7A1D10461DB8AEA923E9G5F00D8AB45BA00F7A356C2638BGBE9831BC9ADF847031087523AD33905BC1F5AB6F02FC5C4577FFB7E4107530AE60C700A683C5G45G4D82CA864A389B1E4DC0A620E6A08B5090508420C9C0E1C051F77379425F66117B041E765D250318F45260B2337B4FECFFBA3B003FFFF1BA4415994A4F023D759E09CF6FDDA43D035612C13755C65E696A3609F5527227F41E2D0B0EA148BADDC3A8BF5FF9ADCD438F78A02030D07E3E
	119F98795E78D44004FB78392C7FB072B8CC7770B8162EA332CE608300A65F636DCC6C72DC23B0763C1E4D5B67AE1575BE5966E55EDE31392C583825EC23B45FDF3FDC567B47DAEFFA9520E72A62FAD3D649FAFF6B3D10B5F096C7FD5F792F03682D7570350DB74974145F3327E73AC806A3300CA2DA88C666017977F26C67F816318DB1AB1E771B0058D9BC471704989B5F92DB0AFE4E31EB2AB8B681310FABD197316B6AB8D69406F2059C6B8A63ED640545DE66480BFD18A353B91688F3DBF2CD09E13FDBCC5F
	9FA0AD38CAF77E96E7A256B840CF6B3172DA1529DED75FC86F6387010D41E1FCDDFD7FC67DF5FE114E0763C0AE81E5EF5E28BE0B38E835DCB78C9F692F4FDFC26750D977A59A0A6E636B730FFDBC567ABCBFCB24F7EE319D626995146B735357287379E7BAC737001C73BE3E6F700735BCBF136F6379D9DB204ECFB1B90EA659FDE38137BB866DFE29E0AC3B97FA31BB8562617BC4AC0DD6BA4FCF3FBF5110F5BF37B3B617273B93317CBCEE3B73FEEE4B97F9E31D45DAA848E731A65D2F36A56CFE79AC96CBE386
	DDA30884FC6A7D5CBF7D2B55FE3D0C2E994C01F06181746BA2EEDB5983685745EA3F9E4CD678F5B14FDF4783BCAFB7AE9D4B2FBC9FFAFE1DG7170F36BAC7D1FF4286DFE002EC38401DCB05A7DFA9A37BB8E6DDEB5DFED77B7B9325DD74D67F68B615C6E6879E3593D440B5DE5616C79AC17C1B3DD4B28813CA11C5B79B156C3B7E2E78A386D41E8CB18573AB9DF32057BB1B6DCED4B2CF0EDFD78AD9DCFA6811E924E7DF3F82D5A2F7D34CD95BD18E828FC105BD6C647F4E4FF5072A05733B6287DBA19DC5B144E
	B03F58B0168FD7F971614487597D8D596E93C61E7EA4CC7FF623BA7DA9246B1462CEDF273FF7E92467122712FCE1BC47EBBC1F437C1A0EC70507E0AC7590176F5178EB047A4B8461758F71F26BBFBAD67E79BB9874726FFE081D61DE0879B91027FF26320776A1FEA0BF61A1DED6AB69DCAF8278E834E7D36ED875E815229EA5BDA45BC342529E565623C769F3B593707C0739DF6AF2BD7B71CB5A7FB500EC5B435C260E2A314E5E66A8FC2075119F44F31F405E01A10DE38A744B3C03362B89A09F043626D46B7B
	B30B16F7B44845226C47F57A4F52DDF44C108CF29991DCF624CE5F06C0AAEB8239FA142DAD746C2F23F46C61845991147F4F4D7A4F62A5EC8D8A64A2A338EFF7FB756DFC292C71DCF3045A3742A36C4C3B5C773AF3757DB5012D4100FC76A3F84FFEB39B63D85DE46843645E2298892FC7396FD5697B75D6B6AF8439BE14FD3DCA5F2FECFDA69064A623ECF00EE73FBECE4708B1A0BB9D65CB2A747D3A07461D76A8646DD16ED7BF2FFED57645049A9ED57B3563D179ECAFCB7BDFB97AFEFD177A358F645D0FF2BB
	DBF3547D0E1566E5B20407BE4A5B7E5DF41D0C1C6F1E09FA335A557D641BE42B1537CB3A1EC24E0E27BF064F6DB16F1FA8C95BAECD904FA72ABC9E7552AF30B541FA50E9FE0C5BDB6E21DE6CE3EBE7A0B791ED3DEC4CFA4E7BB0BDDBA39F531647EFF3746B597FD0DFCF8579B834B3E53307BE045AA9C4C23F90494BE5F68E375D9449755F4F550C3B49918B490E2BF2756D380D7A4B82F1B865F836F8766FF67AAC188432A1A8FF39269E7D185A96876171115C2FFFEA9F2B8E3C6B258EE4BE1EE838EE6E5C399B
	708E52E18F7D070366A79F640B9E673E7A8F567E016FC22C3A9A4B7EF1FE562118CCBD2571C6FC35B7FB970DD58FA0CE7E0ECFE66FA213E71F2E27EBEDD309ED0F7BFE07E20DA2FD61897573B56B89EDBD8C73505F7D1A6DD500FC71935CB753E8793583EFF90217312BCADD4681D4EFA204CFC219AB2A755B594DEC6D996462D17655EA4D585FA87B3E26E6AC5FAB732E75FD46AF928D032A3C7F5824EF5783546F59A0DF7C8BEE57EC135AAE57BA398DFD3EC55F07D65AA65AA18E8B469366250F1AC66B68C410
	1D047257E97CFB87756FD4880F7B852F93FF74DAA78D12DFBC352134A8ED9B3A47433D1A2759D88C64732338FDB765697B70DEBADEECG398E14FDABCF6D439B574BBEEC4A577721052E6187C09C0198CF2717B6F31A2D4703EC8C4ABF2939A779AA75F3B20427BD49FDB8F14CE7518AAFBE2CFCD25B2EA6FA6807C2E85ABBC13E69C9EEDF05177CB4517C8C012CBF5A5AB96698FB05229D04BD296E8322C7597A0407BE005D1D0D857919E86BA59E724576F8521FCAB4E4BD45E52F55545DE036878261CDA83359
	C35FF0007543A0B791E52F54748DB19B643EE176187D3252A7237AE5C8432C7249940D6D2F31F687F2F1E84F2D9EECFF045A1EB68546F3D3386C5FB4367F25D0367D70187D5AF2AF3657CF51BED35E71D21F5650BE2999F4BA2670FEFDFA8E37B7E08A2FE3AB462CE35EEC8A1F222DE333BC5431946A57A8100FC1FB5EE06F7AGBEAD1AE3E98D5C4632E87EDCF612AB6CD27CB7B768477F90556BG1D3EE8BC536C258FBE457678C0F6B2267DAFEAE38C705323F17D4CEB1999A47FF86AAF521F567AE701C93FDD
	2D256DBF8B640DCFF37B07F3756B5D755476A6106BFA1A5BBE13E293008FC27DA5DE6E039632BDB0100DC579A3257A7316D3F47FA88564B21F61FE393BF42CFA435796C95CBB1FD17B256D996DFC702B7D7AFEB9CD77293AC05E768C37332BF474FC70CCA91F8F8621DCCE193E7FB6513D3490100BC45993E57A756AD2AA1BGF2F3D0563A5F33DFAF25769A1F05B14533B87F706057FD5466F61033BD4B7D6A6F552FCB84751A7724E7B56B354FEA6B5BA18FFE35D3BBA3C1FE6A33FCAF22AA4373DE44760C3177
	A276E6681F575B1FB17A3CDECB067EF93D768CE297BF2F47304E8C1267DE1755520EF24791BB02D8AF0D13E0072D96F79F627D54AE02B708A4C10E8FD03B4ED02CDD4206945891897BA6036C27C0167B9C786E65CBB368F343EA33B17E8AAAE3358F08EE74475554C62B532C30FBA2E2C784FEEEF5ED41D8F7DA67BC2BF78727F8CCBD6DBB2B191EB8261E1658FD62D43AB71AB9D5FB4FF889457327EA6F998796703D54A2881BB0153F7760A746733B9FFD77F96A4D9A379E4B57A5F4FFB7E9D4FE2F22F84A287C
	2EDA47731BBE8D5A74B41E5F5F760E3A0F85E13326C9773126F9380F759CBC8B1E535C47823E61B93D3A70F88B4FE307946ED448794377A0DD3D70DC25EFC2C1A68AA8CE12CDF84E535DB47B28FBFAA9A01B79BC13AFFCDEBFCFA6401BB4E1DD403B1F57336D9C5E1B8B1042A7A9644260FB342EDE5C28BB1B53C1EE36A4AB44304F2C9835EE9170B59A2C99F88B50D00C76EE5A8D236E3ACEG194912DC3874B9D5935FCC6013B4D85A8BB0FE84AAFEC11BC6D9A54F7FCEA92CCDA153875FC7DE504BFFE09D571B
	A80587AB64A260FB0C2EDED92132AE44034C9C20749719EC7E0B234B140D4FBEA7CB66527366230D97FEFEE0E423D1B81FBB90DCBF68E3DF4F9FB07B4F111F2B153E4FA8166389DB6BEBDE24753B353E584DE4C38B46E763BB1F48B62EAB15ED1C146B4B3D8EE9DE1E6BEB1A52FCB56F7C4A011F5728AF13ED6E5DA45B7C663B3E58AC6D41D5A84AE351B84BE351B84AE371784A634DCAB9EF3F2A16ED3CA3EDFCB67EB54DF79BEF1DBFBE9B7FDEA35B183DDD36713F3D1D8D5AE42AD45619BA1F6B293496D0F0E1
	F526FA07EC736B9BE41BE35F7345E62637D9B1DF8C6C9CDFF96CED7045FE164E118F65F4AEB17A2EB7D2A46B6D2C71162FCD65E0DCA54F57AD0AFE365EEB992A7596A87A34FDC7FD7587535D2868F71ACA64F806CD3E276FD074D751B93E1423677AF10322CFF9CD5127BC66D33CCCAF25DC565BDA3556331E4984EA32AF8A94ED3E6ED3B90E572BFD0FC35CAC6B6DDDBB569DC54F4F3823F53E573700AAD92F20500B2D1B2B181BA4DB6FB649FA3F5C6C0B1EE7FB57D7DD4819C0E64F0BDBE47F7FF52B9C773DDE
	ED130A1E2F19ED266BF32EC151332D91D53E7BB62BC6563B54EB9DA46F1B146BE055B6D9AF234A97BD4F76F6FE873EBD3ADD766DB7BB643883B67B1E27376BE43D536D636BF71FEA774567CC56F5E4FC4FC1FA2CD97ADE3ADB36B153DB5BA7C7EB4B4B3C56E973B86A09F12FEC432E86B90E573D565DCD128DCC2F27D156EB487145F6A6EB984759636F6D1353B0ECB1FAA9FB9369634BBF156ED107FEA66BF567782E17FEC056FB4E67BA43F4BFBEA87B74C0339C4F1EAA5F53FF30C556DBD0BD3EBA5BD96D3BDF
	27374A367E33CDCE73EA1F4A51F33BDDFBC80E3776309C6F0DDE63D557AB3ABCA5697D51EBFDACD369C59DD514394F3E735C1E9E9C07BFFF7FA551739C57F3A65F63DA50A96BDD1B6BFB5D5978152C57BF0EBAF7F9172CB755E73FB15D9033DC5E4F9F1763394E27B66759DFCF7BB457E3697E39DB562B76BE8E5C229C872E90E53DDB3C4EDB55FAAE07424FBE3F23C75AFBF64A7E0AB8A547936A75192BCEFF06CB115F5C8BEB2F6F8C48762CD33C2B7A1857F8556D357E342C375027E718F41EF6C856DB759D34
	D7F19C6DF54A301C6F16EF64B83E7D8E6C089D079D035F4AF65CFECE0EA3F89C4F533F78740E8E1646B3021C5E5B7364746E9CC77F1CE110753A767AEEE75EB8663225E9F29A1B4751B6DB946FDC19B60EB6F56FC2D92F3CE6FCED7A176932CF67A85EF172165771B7CF5FF3BD8A9947B8E94D92D96FED1F66C6527BEAB2E43D2A528B1BD38514DE78383FF3296CCB3FE5F25C5B3D5A261ED3DDDBBA761C2A214CF75F5E2E384736F73F6F730FE7B2E53D4C528B1BD3193F835F3E3DC276ED06620EDD39CF36315F
	780BDAC58A48EA37D96DA279755E3D22DD606B756944255277950A6FBFAA78773FEB67017F8BE9DC39CE4E53C445771CF57F7E344B7F2DE930BB38867ACEBA725BAEE5AF72FB39ED942B873E8D31C7A856857C90E227F750739E4007A0E625F7D1A2010FC16C4313746E4D170906F8441E781AE0E5AFA59A9ADE423B53746EA4796D198E44227238FDCE44166473787C91BBC24F2E4481BF9B3167F339ADC2AC47B69C6571E5A1E6BF4A73DB0458CB78CE12CA44A622AD7E084D48633AC1085564F3DF854BF2D55C
	D791085D18033EC22C825F85900F58B7395CD7E53FD43F2B209E78AE442E4B61763991FB9D6F4687A0F6E5957755F4447E8BF5E7A3466E37133C893F6298BB2BCD721601987B8D8EA37075085D0279EDC76CC34C2F8D31A1FC87069FE23F4E61790DC56CCDFA57E29670E93F467B7CD55C66EC4466D22C98789A44ACA6EEF383E2A5B95C668E4406F3384DCE44E6EC66B67BA336E3A137B9883135DFF21B9390FB24E2344DFB69BD5D94603363B8D60979A8C66C9C3E3BE4A7E27F4C6165B691313B6BF81B89C62C
	20104797015809C29EDF8CE25B6AF8FC79AF23FD05BC3FE5086DBB45632BC76CC60A35939E31FF1C62E938DF66E7424AE93FC1FE1FA07AE5FE9669E41F7AFC62G3DD3AD0D237B744FC0A550F812A00E940C671A9D1E4FC07D1476CDC52FC07BFD054B7B2DD31F333C0976D5DD90EEFB051FFD5AFEF2BC77FD496FA6A8FFBBE19244735FF3674EDD0A79F979EB7D33CFFF227DDF8848073F02678EDB89968F7CEC445E4E637E4BFE155B38BE5F17F3EF1EEC2C07F848826407E82353246F73G5AEE1AC13E63D5EE
	4F9C767BE64087A256F4944B78D5FEDE72A6F29CCCBAF37A2657FB038B4730B78962A476115FFE114E3C22CFD2B03DC7687DEE69BEB8FBBECC07321F0E3EE5FDG70B6441EE06F6481BEF8BA776DBE2FE733970DE1EB9C447316D47ED2BD247E0A87FC76F4DE8F6F71F2A672995A6E33DFCBB4943E466D0C486179EDFE0D5B79D72FF7B334E77434F60E3CA6578116C698CDB7G70C0CC37A017279B759A7773CC453DF376FC1D8DE1492F613D532A31FF17679B1A96312F70F51E56D4766E9D60BB90EB26798EG
	BE70F51E6F6B463C433350CB3E23A11E1F294AA7057DF68860B3DF67F9785766D52ABC5472D3137CDCB35A1FBE834F91D7F1DFD54E405FCC525C63182B38DBFE8D2B0FA0EB43B88E6770F803903B0DE2514047A216C653CA81BEFDA6774B2105E355DBEFFEB1C1BC1701DF643B30FB69732C9E706619BCBFDFD5FA2E37E768F3ED84E483E6F2BBBB51A761E867CDE35EB5D45A99BFD3ED679C60F77036464E9053BAA83C816311B7F83AF16CDEAA707508B594F2DB1CEFF0DBAEA974653D849E7B7AB734ED280726
	9B82F8B8266B24694683BF9B3101D35C167C5FF05F061ED25715750AFB67ABDC63393B28353361B76C8CA03F4339CAE86CB38A3E4E03F7AB6E1F1F5C61F54ED821DCDB994817753EDA673B5ECB0A7B02F9A74737A673B7FAF70EFDFFD7F1E74A5262FB7AA645BD2187733C2CBFD4FE2ADA679272FD7769179BE4BB3FAD14537B525B7AEB25FA9D75F5457912B5BE1F27E0725DC7FD37B5DDF1CEA4F69C6B739FAB4E0944FA5FDBD6797F40C7325ED55E7732D5FABFAF1175BE9C677A7C2FCA657278FB199C4F8763
	30BBDBF11E435F5B3AEA85541B8A395E3CB40EF55C6A8A594E2FAA65743E76169E29B70A74B60FE3FD71924579121DDEFDD1A979024986D67972DB81AC0DE045D914FC2F65DD29723730C556330DF34FF643D6590FFB946766E6F8BDE7204EE309CFF9E432F34631C7EFD51C65586013BF182CBD47F71FCFD01C7B0875A94FCCAFC1F1A623E26178FC3E24D676F909620C463D953E277F79AED9EF2337BD278AF55F6C76497F1E57D05D0A339BBFD01C5D282E733D3FFEF40F2C17656D7C134676E3053E571DB794
	67BB8445B90DD7B778EEE707628C4576D363FB2EDCF54AF7DB4FB511F456D03DB7AABE4A0171501F047983AEE165E89BEB2FFD6D5550E375D929C2EA2330200F5E0BE994661FA197EC061CB04A3997680601D36C07D49867969636187B1D46C6BB4439D4E57F5337FE7AE64CEF8E8D9804850DC28ED98EE895DD74CD7222255E6CB69F92DDA455BD42A227438A0100B78AE98374E37E00FB58A6B689D9BDAD6229C1F140ADDAEA793B53875C423BCDA425D2729A40528673C09F3D9CD65DA424594D7D22DBD84902
	EDE6FBEFA9FBE1FDB531DF18D73B13D6B83AAF83762E227612D8CAB016D50FADFFFF5D3ED99186A1F50F305866B0DB76183B5D8ED72330485D6792877A9CB64B10F3870BA81D7E82A1FD2393C4170759A719ADA1D3B2B47A6450CFA6ACCDD83AA7D59006DCC2A915A423509214A03F0A610224C4D7A3109912AC4430CB563ABFF8E16F1A0ED4E11E14C9D2888B061CEEE1C10F395FEA9B06AF7534365062D96C86EBDDE67BC00F43558F1699B51671A0CC20647B534AEE3C739FC7E982322ADBA8E02E845552DE51
	51DFDA5B53E3350B9881789522FF8F23A7B2A59A1915C3573F3B6F653947219E548B067E32B27AFF937DDFCE7EEF2248A60AECAA8767A689DE7F3461C3BC4F347200BD4B29BD2478CB76C0893ADF7F53345BE654A44D065C6D91661FA63FF1G0510A9CB315FA039A2744677168446DFCD4A48C92A4A9009F7599046C8F258C82FFD451F2E58EA787D6D06D4A18D1A8A3B868715175CE5034A6BE2AD4760F6B8D93D9364D79998F87B215CDD144B9364EBFC34DBC499C145910D9BD0A3D552A227C452F5E4485FD1
	9069C36EB0F07BA817B62AB590B4FDF435A6F086D6AE42AD2722AB687F2CF1979551DACDF53351439F8EE11EC83AE492C5CE319A5CC2669E6B10E8B13676413FB66826363A05559B0C0E9E63DE17E350B9E05CED6E6E6381D964D7AA4DF60B31C59C90490759CD60B5D45458AA5A44EE32B8E25CAF3A7B9C96225060B8E3F4BB0C2DD0CCC6F8003BDD8E9B40F9CCE11759E96E363A07A1BA4BA053FC9FC2D73608BD249710EC9AF60A94A4DD6041C13731D9F4F5C3CF3C556896663DCFAA2458DD6296D6E1F8239D
	5AB6D4C0A230D26AB8D52024C114D770F00C7462AB3AEDF25111F97CE229CAAE3C78AC2D77E6A979D3B7AE03A0B72ED49D190BAAEF8754F9A3DDCD6A45D98ADF78D28A91233AB8B2F9B06848DCD4F9BBB6BAEFE42C3B886DA62BC8CE9D6E224AC51F1C0BB4A997F4D553C3AE546545DB8DA92FB49D9972C7562D5BD59AA4FEF2E4EC3E0E8C7E29E25B2543A96B8BFD182AE4F62A389E9DCE295FB8CA3F6762AB29F3F2C9AD10CA0A9CC2D902F6136D3E1AB1FCC3E43669E810BFF2F46FA19D6E2272420451751554
	1E05973B5D01EA3BC929848B4AB620AEBDAE63DB69DDD4B93DC5DDCFC98EC4D5CE7FD754339075A01557B3CF39A03D64999D6E224A537DF21E96CAF9A25B898BBC64627F1B9A7944689AC90E1D4F3F78ACFDDA3F17C873D0A64ABEBEF54CB2A1FF7FAB6A692FC677715E6A697F239182CCD7594F119A792F3C4254F0C1D13F55DE32D18E633F4C8AE14B25DFC0B5326587A542FEC115A064D7CE49AC1529EFD5E539D7073B288AAED1AEB8B25063C7E666F94885291A1F0C52182752A0B2C597DFCE7F2E9E7C5386
	A8A89F8F7FAB4A6B9DF5F99924DCF8AAAF325C3DE114C63ACA03489429742F5361AEA6AF4CDBA2FB013F900F3E48FC4CDCDC44F9FAD74E93FF69A531A95DC3AEC8AB5B207282AFD9752327480B86EF87FA9A9715EFB6289FAF3C3C857E5B6E9B4F19A487F5DC9FA2A4DFDE104A3326BDA3E2CAE66F4DE9CA16FF5B1D7D5ED297FDB7FCG6041497C9DECE15564058B1EFE3735355FEC33394D361335F64BBE73E9F35D30DB14FFAFD62CA1718FF099A9100559EA085DA794BA7F87D0CB8788F8656670F9B6GG3C
	40GGD0CB818294G94G88G88G7B104FB0F8656670F9B6GG3C40GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG33B6GGGG
**end of data**/
}
/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private String getChangeCondition( String change )
{

	if( change.equalsIgnoreCase("After a Duration") )
	{
		return LMProgramDirectGear.CHANGE_DURATION;
	}
	else if( change.equalsIgnoreCase("Priority Change") )
	{
		return LMProgramDirectGear.CHANGE_PRIORITY;
	}
	else if( change.equalsIgnoreCase("Above Trigger") )
	{
		return LMProgramDirectGear.CHANGE_TRIGGER_OFFSET;
	}	
	else
		return LMProgramDirectGear.CHANGE_NONE;

}
/**
 * Return the JCheckBoxRampIn property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxRampIn() {
	if (ivjJCheckBoxRampIn == null) {
		try {
			ivjJCheckBoxRampIn = new javax.swing.JCheckBox();
			ivjJCheckBoxRampIn.setName("JCheckBoxRampIn");
			ivjJCheckBoxRampIn.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJCheckBoxRampIn.setText("Ramp In");
			ivjJCheckBoxRampIn.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxRampIn;
}
/**
 * Return the JComboBoxCycleCountSndType property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public javax.swing.JComboBox getJComboBoxCycleCountSndType() {
	if (ivjJComboBoxCycleCountSndType == null) {
		try {
			ivjJComboBoxCycleCountSndType = new javax.swing.JComboBox();
			ivjJComboBoxCycleCountSndType.setName("JComboBoxCycleCountSndType");
			ivjJComboBoxCycleCountSndType.setPreferredSize(new java.awt.Dimension(146, 23));
			ivjJComboBoxCycleCountSndType.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxCycleCountSndType.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxCycleCountSndType.setMinimumSize(new java.awt.Dimension(146, 23));
			// user code begin {1}
			ivjJComboBoxCycleCountSndType.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.OPTION_FIXED_SHED ) );
			ivjJComboBoxCycleCountSndType.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.OPTION_DYNAMIC_SHED ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxCycleCountSndType;
}
/**
 * Return the JComboBoxGroupSelection property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxGroupSelection() {
	if (ivjJComboBoxGroupSelection == null) {
		try {
			ivjJComboBoxGroupSelection = new javax.swing.JComboBox();
			ivjJComboBoxGroupSelection.setName("JComboBoxGroupSelection");
			ivjJComboBoxGroupSelection.setPreferredSize(new java.awt.Dimension(184, 23));
			ivjJComboBoxGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxGroupSelection.setMinimumSize(new java.awt.Dimension(184, 23));
			// user code begin {1}
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LAST_CONTROLLED ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_ALWAYS_FIRST_GROUP ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LEAST_CONTROL_TIME ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxGroupSelection;
}
/**
 * Return the JComboBoxHowToStop property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxHowToStop() {
	if (ivjJComboBoxHowToStop == null) {
		try {
			ivjJComboBoxHowToStop = new javax.swing.JComboBox();
			ivjJComboBoxHowToStop.setName("JComboBoxHowToStop");
			ivjJComboBoxHowToStop.setPreferredSize(new java.awt.Dimension(184, 23));
			ivjJComboBoxHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxHowToStop.setMinimumSize(new java.awt.Dimension(184, 23));
			// user code begin {1}
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_TIME_IN ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RESTORE ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RAMP_OUT) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxHowToStop;
}
/**
 * Return the JComboBoxNumGroups property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxNumGroups() {
	if (ivjJComboBoxNumGroups == null) {
		try {
			ivjJComboBoxNumGroups = new javax.swing.JComboBox();
			ivjJComboBoxNumGroups.setName("JComboBoxNumGroups");
			ivjJComboBoxNumGroups.setPreferredSize(new java.awt.Dimension(146, 23));
			ivjJComboBoxNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxNumGroups.setMinimumSize(new java.awt.Dimension(146, 23));
			// user code begin {1}
			ivjJComboBoxNumGroups.addItem("All of Them");
			for( int i = 1; i < 26; i++ )
				ivjJComboBoxNumGroups.addItem( new Integer(i) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxNumGroups;
}
/**
 * Return the JComboBoxSendRate property value.
 * @return javax.swing.JComboBox
 */

/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRateDigits() {
	if (ivjJComboBoxSendRateDigits == null) {
		try {
			ivjJComboBoxSendRateDigits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateDigits.setName("JComboBoxSendRateDigits");
			ivjJComboBoxSendRateDigits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setMaximumSize(new java.awt.Dimension(67, 23));
			ivjJComboBoxSendRateDigits.setPreferredSize(new java.awt.Dimension(67, 23));
			ivjJComboBoxSendRateDigits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setMinimumSize(new java.awt.Dimension(64, 23));
			ivjJComboBoxSendRateDigits.setEditable(true);
			// user code begin {1}
			NewComboBoxEditor ncb = new NewComboBoxEditor();
			ncb.getJTextField().setDocument( 
				  new com.cannontech.common.gui.unchanging.LongRangeDocument(0, 1000) );
         	ivjJComboBoxSendRateDigits.setEditor( ncb );
			
			ivjJComboBoxSendRateDigits.addItem("0");
			ivjJComboBoxSendRateDigits.addItem("1");
			ivjJComboBoxSendRateDigits.addItem("2");
			ivjJComboBoxSendRateDigits.addItem("5");
			ivjJComboBoxSendRateDigits.addItem("8");
			ivjJComboBoxSendRateDigits.addItem("10");
			ivjJComboBoxSendRateDigits.addItem("15");
			ivjJComboBoxSendRateDigits.addItem("20");
			ivjJComboBoxSendRateDigits.addItem("30");
			ivjJComboBoxSendRateDigits.addItem("45");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateDigits;
}
/**
 * Return the JComboBoxSendRate11 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRateUnits() {
	if (ivjJComboBoxSendRateUnits == null) {
		try {
			ivjJComboBoxSendRateUnits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateUnits.setName("JComboBoxSendRateUnits");
			ivjJComboBoxSendRateUnits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setMaximumSize(new java.awt.Dimension(102, 23));
			ivjJComboBoxSendRateUnits.setPreferredSize(new java.awt.Dimension(102, 23));
			ivjJComboBoxSendRateUnits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setMinimumSize(new java.awt.Dimension(102, 23));
			// user code begin {1}
			ivjJComboBoxSendRateUnits.addItem("minutes");
			ivjJComboBoxSendRateUnits.addItem("hours");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateUnits;
}
/**
 * Return the JComboBoxSendRateDigits1 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxShedTimeDigits() {
	if (ivjJComboBoxShedTimeDigits == null) {
		try {
			ivjJComboBoxShedTimeDigits = new javax.swing.JComboBox();
			ivjJComboBoxShedTimeDigits.setName("JComboBoxShedTimeDigits");
			ivjJComboBoxShedTimeDigits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxShedTimeDigits.setMaximumSize(new java.awt.Dimension(67, 23));
			ivjJComboBoxShedTimeDigits.setPreferredSize(new java.awt.Dimension(67, 23));
			ivjJComboBoxShedTimeDigits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxShedTimeDigits.setMinimumSize(new java.awt.Dimension(64, 23));
			ivjJComboBoxShedTimeDigits.setEditable(true);
			// user code begin {1}
			
			NewComboBoxEditor ncb = new NewComboBoxEditor();
			ncb.getJTextField().setDocument( 
				  new com.cannontech.common.gui.unchanging.LongRangeDocument(0, 1000) );
			ivjJComboBoxShedTimeDigits.setEditor( ncb );
			
			ivjJComboBoxShedTimeDigits.addItem("1");
			ivjJComboBoxShedTimeDigits.addItem("2");
			ivjJComboBoxShedTimeDigits.addItem("3");
			ivjJComboBoxShedTimeDigits.addItem("4");
			ivjJComboBoxShedTimeDigits.addItem("5");
			ivjJComboBoxShedTimeDigits.addItem("6");
			ivjJComboBoxShedTimeDigits.addItem("7");
			ivjJComboBoxShedTimeDigits.addItem("8");
			ivjJComboBoxShedTimeDigits.addItem("10");
			ivjJComboBoxShedTimeDigits.addItem("15");
			ivjJComboBoxShedTimeDigits.addItem("20");
			ivjJComboBoxShedTimeDigits.addItem("30");
			ivjJComboBoxShedTimeDigits.addItem("45");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxShedTimeDigits;
}
/**
 * Return the JComboBoxSendRateUnits1 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxShedTimeUnits() {
	if (ivjJComboBoxShedTimeUnits == null) {
		try {
			ivjJComboBoxShedTimeUnits = new javax.swing.JComboBox();
			ivjJComboBoxShedTimeUnits.setName("JComboBoxShedTimeUnits");
			ivjJComboBoxShedTimeUnits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxShedTimeUnits.setMaximumSize(new java.awt.Dimension(102, 23));
			ivjJComboBoxShedTimeUnits.setPreferredSize(new java.awt.Dimension(102, 23));
			ivjJComboBoxShedTimeUnits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxShedTimeUnits.setMinimumSize(new java.awt.Dimension(102, 23));
			// user code begin {1}
			ivjJComboBoxShedTimeUnits.addItem("minutes");
			ivjJComboBoxShedTimeUnits.addItem("hours");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxShedTimeUnits;
}
/**
 * Return the JComboBoxWhenChange property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxWhenChange() {
	if (ivjJComboBoxWhenChange == null) {
		try {
			ivjJComboBoxWhenChange = new javax.swing.JComboBox();
			ivjJComboBoxWhenChange.setName("JComboBoxWhenChange");
			ivjJComboBoxWhenChange.setPreferredSize(new java.awt.Dimension(170, 23));
			ivjJComboBoxWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxWhenChange.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxWhenChange.addItem("Manually Only");
			ivjJComboBoxWhenChange.addItem("After a Duration");
			ivjJComboBoxWhenChange.addItem("Priority Change");
			ivjJComboBoxWhenChange.addItem("Above Trigger");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxWhenChange;
}
/**
 * Return the JCSpinFieldChangeDuration property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeDuration() {
	if (ivjJCSpinFieldChangeDuration == null) {
		try {
			ivjJCSpinFieldChangeDuration = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeDuration.setName("JCSpinFieldChangeDuration");
			ivjJCSpinFieldChangeDuration.setPreferredSize(new java.awt.Dimension(45, 20));
			ivjJCSpinFieldChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeDuration.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeDuration.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(3)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeDuration;
}
/**
 * Return the JCSpinFieldChangePriority property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangePriority() {
	if (ivjJCSpinFieldChangePriority == null) {
		try {
			ivjJCSpinFieldChangePriority = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangePriority.setName("JCSpinFieldChangePriority");
			ivjJCSpinFieldChangePriority.setPreferredSize(new java.awt.Dimension(35, 30));
			ivjJCSpinFieldChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangePriority.setMaximumSize(new java.awt.Dimension(40, 30));
			// user code begin {1}
			ivjJCSpinFieldChangePriority.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(9999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(0)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangePriority;
}
/**
 * Return the JCSpinFieldChangeTriggerNumber property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeTriggerNumber() {
	if (ivjJCSpinFieldChangeTriggerNumber == null) {
		try {
			ivjJCSpinFieldChangeTriggerNumber = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeTriggerNumber.setName("JCSpinFieldChangeTriggerNumber");
			ivjJCSpinFieldChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJCSpinFieldChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeTriggerNumber.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(1), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(1)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeTriggerNumber;
}
/**
 * Return the JCSpinFieldPercentReduction property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldPercentReduction() {
	if (ivjJCSpinFieldPercentReduction == null) {
		try {
			ivjJCSpinFieldPercentReduction = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldPercentReduction.setName("JCSpinFieldPercentReduction");
			ivjJCSpinFieldPercentReduction.setPreferredSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMaximumSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJCSpinFieldPercentReduction.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(100), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(100)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));

			ivjJCSpinFieldPercentReduction.setValue( new Integer(100) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldPercentReduction;
}
/**
 * Return the JCSpinFieldRampInPercent property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldRampInPercent() {
	if (ivjJCSpinFieldRampInPercent == null) {
		try {
			ivjJCSpinFieldRampInPercent = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldRampInPercent.setName("JCSpinFieldRampInPercent");
			ivjJCSpinFieldRampInPercent.setPreferredSize(new java.awt.Dimension(60, 20));
			ivjJCSpinFieldRampInPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldRampInPercent.setMaximumSize(new java.awt.Dimension(61, 20));
			ivjJCSpinFieldRampInPercent.setMinimumSize(new java.awt.Dimension(60, 20));
			// user code begin {1}
			ivjJCSpinFieldRampInPercent.setDataProperties(
								new com.klg.jclass.field.DataProperties(
									new com.klg.jclass.field.validate.JCIntegerValidator(
									null, new Integer(0), new Integer(100), null, true, 
									null, new Integer(1), "#,##0.###;-#,##0.###", false, 
									false, false, null, new Integer(100)), 
									new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
									new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
									new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldRampInPercent;
}
/**
 * Return the JCSpinFieldRampOutPercent property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldRampOutPercent() {
	if (ivjJCSpinFieldRampOutPercent == null) {
		try {
			ivjJCSpinFieldRampOutPercent = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldRampOutPercent.setName("JCSpinFieldRampOutPercent");
			ivjJCSpinFieldRampOutPercent.setPreferredSize(new java.awt.Dimension(60, 20));
			ivjJCSpinFieldRampOutPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldRampOutPercent.setMaximumSize(new java.awt.Dimension(61, 20));
			ivjJCSpinFieldRampOutPercent.setMinimumSize(new java.awt.Dimension(60, 20));
			// user code begin {1}
			ivjJCSpinFieldRampOutPercent.setDataProperties(
						new com.klg.jclass.field.DataProperties(
							new com.klg.jclass.field.validate.JCIntegerValidator(
								null, new Integer(0), new Integer(100), null, true, 
								null, new Integer(1), "#,##0.###;-#,##0.###", false, 
								false, false, null, new Integer(100)), 
								new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
								new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
								new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldRampOutPercent;
}
/**
 * Return the JLabelChangeDuration property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeDuration() {
	if (ivjJLabelChangeDuration == null) {
		try {
			ivjJLabelChangeDuration = new javax.swing.JLabel();
			ivjJLabelChangeDuration.setName("JLabelChangeDuration");
			ivjJLabelChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeDuration.setText("Change Duration:");
			ivjJLabelChangeDuration.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeDuration.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeDuration;
}
/**
 * Return the JLabelChangePriority property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangePriority() {
	if (ivjJLabelChangePriority == null) {
		try {
			ivjJLabelChangePriority = new javax.swing.JLabel();
			ivjJLabelChangePriority.setName("JLabelChangePriority");
			ivjJLabelChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangePriority.setText("Change Priority:");
			ivjJLabelChangePriority.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangePriority.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangePriority;
}
/**
 * Return the JLabelChangeTriggerNumber property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerNumber() {
	if (ivjJLabelChangeTriggerNumber == null) {
		try {
			ivjJLabelChangeTriggerNumber = new javax.swing.JLabel();
			ivjJLabelChangeTriggerNumber.setName("JLabelChangeTriggerNumber");
			ivjJLabelChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerNumber.setText("Trigger Number:");
			ivjJLabelChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerNumber.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerNumber;
}
/**
 * Return the JLabelChangeTriggerOffset property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerOffset() {
	if (ivjJLabelChangeTriggerOffset == null) {
		try {
			ivjJLabelChangeTriggerOffset = new javax.swing.JLabel();
			ivjJLabelChangeTriggerOffset.setName("JLabelChangeTriggerOffset");
			ivjJLabelChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerOffset.setText("Trigger Offset:");
			ivjJLabelChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerOffset.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerOffset;
}
/**
 * Return the JLabelCycleCntSndType property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCycleCntSndType() {
	if (ivjJLabelCycleCntSndType == null) {
		try {
			ivjJLabelCycleCntSndType = new javax.swing.JLabel();
			ivjJLabelCycleCntSndType.setName("JLabelCycleCntSndType");
			ivjJLabelCycleCntSndType.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelCycleCntSndType.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelCycleCntSndType.setText("Refresh Shed Type:");
			ivjJLabelCycleCntSndType.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCycleCntSndType;
}
/**
 * Return the JLabelGroupSelection property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelGroupSelection() {
	if (ivjJLabelGroupSelection == null) {
		try {
			ivjJLabelGroupSelection = new javax.swing.JLabel();
			ivjJLabelGroupSelection.setName("JLabelGroupSelection");
			ivjJLabelGroupSelection.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelGroupSelection.setText("Group Selection Method:");
			ivjJLabelGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelGroupSelection;
}
/**
 * Return the JLabelHowToStop property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHowToStop() {
	if (ivjJLabelHowToStop == null) {
		try {
			ivjJLabelHowToStop = new javax.swing.JLabel();
			ivjJLabelHowToStop.setName("JLabelHowToStop");
			ivjJLabelHowToStop.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelHowToStop.setText("How to Stop Control:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHowToStop;
}
/**
 * Return the JLabelMinutesChDur property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMinutesChDur() {
	if (ivjJLabelMinutesChDur == null) {
		try {
			ivjJLabelMinutesChDur = new javax.swing.JLabel();
			ivjJLabelMinutesChDur.setName("JLabelMinutesChDur");
			ivjJLabelMinutesChDur.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMinutesChDur.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelMinutesChDur.setText("(min.)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMinutesChDur;
}
/**
 * Return the JLabelNumGroups property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNumGroups() {
	if (ivjJLabelNumGroups == null) {
		try {
			ivjJLabelNumGroups = new javax.swing.JLabel();
			ivjJLabelNumGroups.setName("JLabelNumGroups");
			ivjJLabelNumGroups.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelNumGroups.setText("# of Groups Each Time:");
			ivjJLabelNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNumGroups;
}
/**
 * Return the JLabelPercentReduction property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPercentReduction() {
	if (ivjJLabelPercentReduction == null) {
		try {
			ivjJLabelPercentReduction = new javax.swing.JLabel();
			ivjJLabelPercentReduction.setName("JLabelPercentReduction");
			ivjJLabelPercentReduction.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelPercentReduction.setText("Group Capacity Reduction %:");
			ivjJLabelPercentReduction.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelPercentReduction.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPercentReduction;
}
/**
 * Return the JLabelRampInInterval property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampInInterval() {
	if (ivjJLabelRampInInterval == null) {
		try {
			ivjJLabelRampInInterval = new javax.swing.JLabel();
			ivjJLabelRampInInterval.setName("JLabelRampInInterval");
			ivjJLabelRampInInterval.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampInInterval.setText("Ramp In Interval: ");
			ivjJLabelRampInInterval.setMaximumSize(new java.awt.Dimension(119, 14));
			ivjJLabelRampInInterval.setPreferredSize(new java.awt.Dimension(119, 14));
			ivjJLabelRampInInterval.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampInInterval.setMinimumSize(new java.awt.Dimension(119, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampInInterval;
}
/**
 * Return the JLabelRampInPercent property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampInPercent() {
	if (ivjJLabelRampInPercent == null) {
		try {
			ivjJLabelRampInPercent = new javax.swing.JLabel();
			ivjJLabelRampInPercent.setName("JLabelRampInPercent");
			ivjJLabelRampInPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampInPercent.setText("Ramp In Percent: ");
			ivjJLabelRampInPercent.setMaximumSize(new java.awt.Dimension(119, 14));
			ivjJLabelRampInPercent.setPreferredSize(new java.awt.Dimension(119, 14));
			ivjJLabelRampInPercent.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampInPercent.setMinimumSize(new java.awt.Dimension(119, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampInPercent;
}
/**
 * Return the JLabelRampInPercentSign property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampInPercentSign() {
	if (ivjJLabelRampInPercentSign == null) {
		try {
			ivjJLabelRampInPercentSign = new javax.swing.JLabel();
			ivjJLabelRampInPercentSign.setName("JLabelRampInPercentSign");
			ivjJLabelRampInPercentSign.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampInPercentSign.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampInPercentSign.setText("%");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampInPercentSign;
}
/**
 * Return the JLabelRampInSec property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampInSec() {
	if (ivjJLabelRampInSec == null) {
		try {
			ivjJLabelRampInSec = new javax.swing.JLabel();
			ivjJLabelRampInSec.setName("JLabelRampInSec");
			ivjJLabelRampInSec.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampInSec.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampInSec.setText("sec.");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampInSec;
}
/**
 * Return the JLabelRampOutInterval property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampOutInterval() {
	if (ivjJLabelRampOutInterval == null) {
		try {
			ivjJLabelRampOutInterval = new javax.swing.JLabel();
			ivjJLabelRampOutInterval.setName("JLabelRampOutInterval");
			ivjJLabelRampOutInterval.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampOutInterval.setText("Ramp Out Interval: ");
			ivjJLabelRampOutInterval.setMaximumSize(new java.awt.Dimension(182, 125));
			ivjJLabelRampOutInterval.setPreferredSize(new java.awt.Dimension(182, 125));
			ivjJLabelRampOutInterval.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampOutInterval.setMinimumSize(new java.awt.Dimension(182, 125));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampOutInterval;
}
/**
 * Return the JLabelRampOutPercent property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampOutPercent() {
	if (ivjJLabelRampOutPercent == null) {
		try {
			ivjJLabelRampOutPercent = new javax.swing.JLabel();
			ivjJLabelRampOutPercent.setName("JLabelRampOutPercent");
			ivjJLabelRampOutPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampOutPercent.setText("Ramp Out Percent: ");
			ivjJLabelRampOutPercent.setMaximumSize(new java.awt.Dimension(182, 125));
			ivjJLabelRampOutPercent.setPreferredSize(new java.awt.Dimension(182, 125));
			ivjJLabelRampOutPercent.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampOutPercent.setMinimumSize(new java.awt.Dimension(182, 125));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampOutPercent;
}
/**
 * Return the JLabelRampOutPercentSign property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampOutPercentSign() {
	if (ivjJLabelRampOutPercentSign == null) {
		try {
			ivjJLabelRampOutPercentSign = new javax.swing.JLabel();
			ivjJLabelRampOutPercentSign.setName("JLabelRampOutPercentSign");
			ivjJLabelRampOutPercentSign.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampOutPercentSign.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampOutPercentSign.setText("%");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampOutPercentSign;
}
/**
 * Return the JLabelRampOutSec property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRampOutSec() {
	if (ivjJLabelRampOutSec == null) {
		try {
			ivjJLabelRampOutSec = new javax.swing.JLabel();
			ivjJLabelRampOutSec.setName("JLabelRampOutSec");
			ivjJLabelRampOutSec.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelRampOutSec.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelRampOutSec.setText("sec.");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRampOutSec;
}
/**
 * Return the JLabelSendRate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSendRate() {
	if (ivjJLabelSendRate == null) {
		try {
			ivjJLabelSendRate = new javax.swing.JLabel();
			ivjJLabelSendRate.setName("JLabelSendRate");
			ivjJLabelSendRate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelSendRate.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelSendRate.setText("Command Resend Rate:");
			ivjJLabelSendRate.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSendRate;
}
/**
 * Return the JLabelShedTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelShedTime() {
	if (ivjJLabelShedTime == null) {
		try {
			ivjJLabelShedTime = new javax.swing.JLabel();
			ivjJLabelShedTime.setName("JLabelShedTime");
			ivjJLabelShedTime.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelShedTime.setText("Fixed Shed Time:");
			ivjJLabelShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelShedTime;
}
/**
 * Return the JLabelWhenChange property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelWhenChange() {
	if (ivjJLabelWhenChange == null) {
		try {
			ivjJLabelWhenChange = new javax.swing.JLabel();
			ivjJLabelWhenChange.setName("JLabelWhenChange");
			ivjJLabelWhenChange.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelWhenChange.setText("When to Change:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelWhenChange;
}
/**
 * Return the JPanelChangeMethod property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelChangeMethod() {
	if (ivjJPanelChangeMethod == null) {
		try {
			ivjJPanelChangeMethod = new javax.swing.JPanel();
			ivjJPanelChangeMethod.setName("JPanelChangeMethod");
			ivjJPanelChangeMethod.setLayout(new java.awt.GridBagLayout());
			ivjJPanelChangeMethod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJPanelChangeMethod.setMaximumSize(new java.awt.Dimension(360, 90));
			ivjJPanelChangeMethod.setPreferredSize(new java.awt.Dimension(330, 87));
			ivjJPanelChangeMethod.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJPanelChangeMethod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);

			java.awt.GridBagConstraints constraintsJLabelChangeDuration = new java.awt.GridBagConstraints();
			constraintsJLabelChangeDuration.gridx = 1; constraintsJLabelChangeDuration.gridy = 2;
			constraintsJLabelChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeDuration.ipadx = -5;
			constraintsJLabelChangeDuration.ipady = 6;
			constraintsJLabelChangeDuration.insets = new java.awt.Insets(1, 5, 3, 5);
			getJPanelChangeMethod().add(getJLabelChangeDuration(), constraintsJLabelChangeDuration);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeDuration = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeDuration.gridx = 2; constraintsJCSpinFieldChangeDuration.gridy = 2;
			constraintsJCSpinFieldChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeDuration.ipadx = 34;
			constraintsJCSpinFieldChangeDuration.ipady = 19;
			constraintsJCSpinFieldChangeDuration.insets = new java.awt.Insets(1, 5, 3, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeDuration(), constraintsJCSpinFieldChangeDuration);

			java.awt.GridBagConstraints constraintsJLabelMinutesChDur = new java.awt.GridBagConstraints();
			constraintsJLabelMinutesChDur.gridx = 3; constraintsJLabelMinutesChDur.gridy = 2;
			constraintsJLabelMinutesChDur.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelMinutesChDur.ipadx = 5;
			constraintsJLabelMinutesChDur.ipady = -2;
			constraintsJLabelMinutesChDur.insets = new java.awt.Insets(5, 1, 5, 2);
			getJPanelChangeMethod().add(getJLabelMinutesChDur(), constraintsJLabelMinutesChDur);

			java.awt.GridBagConstraints constraintsJLabelChangePriority = new java.awt.GridBagConstraints();
			constraintsJLabelChangePriority.gridx = 4; constraintsJLabelChangePriority.gridy = 2;
			constraintsJLabelChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangePriority.ipadx = -13;
			constraintsJLabelChangePriority.ipady = 6;
			constraintsJLabelChangePriority.insets = new java.awt.Insets(1, 3, 3, 2);
			getJPanelChangeMethod().add(getJLabelChangePriority(), constraintsJLabelChangePriority);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangePriority = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangePriority.gridx = 5; constraintsJCSpinFieldChangePriority.gridy = 2;
			constraintsJCSpinFieldChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangePriority.ipadx = 34;
			constraintsJCSpinFieldChangePriority.ipady = 19;
			constraintsJCSpinFieldChangePriority.insets = new java.awt.Insets(1, 3, 3, 8);
			getJPanelChangeMethod().add(getJCSpinFieldChangePriority(), constraintsJCSpinFieldChangePriority);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerNumber.gridx = 1; constraintsJLabelChangeTriggerNumber.gridy = 3;
			constraintsJLabelChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerNumber.ipadx = -45;
			constraintsJLabelChangeTriggerNumber.ipady = 6;
			constraintsJLabelChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 5);
			getJPanelChangeMethod().add(getJLabelChangeTriggerNumber(), constraintsJLabelChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerOffset.gridx = 4; constraintsJLabelChangeTriggerOffset.gridy = 3;
			constraintsJLabelChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerOffset.ipadx = -63;
			constraintsJLabelChangeTriggerOffset.insets = new java.awt.Insets(8, 3, 17, 12);
			getJPanelChangeMethod().add(getJLabelChangeTriggerOffset(), constraintsJLabelChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJTextFieldChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJTextFieldChangeTriggerOffset.gridx = 5; constraintsJTextFieldChangeTriggerOffset.gridy = 3;
			constraintsJTextFieldChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextFieldChangeTriggerOffset.weightx = 1.0;
			constraintsJTextFieldChangeTriggerOffset.ipadx = 31;
			constraintsJTextFieldChangeTriggerOffset.insets = new java.awt.Insets(4, 3, 15, 8);
			getJPanelChangeMethod().add(getJTextFieldChangeTriggerOffset(), constraintsJTextFieldChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeTriggerNumber.gridx = 2; constraintsJCSpinFieldChangeTriggerNumber.gridy = 3;
			constraintsJCSpinFieldChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeTriggerNumber.ipadx = 34;
			constraintsJCSpinFieldChangeTriggerNumber.ipady = 19;
			constraintsJCSpinFieldChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeTriggerNumber(), constraintsJCSpinFieldChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelWhenChange = new java.awt.GridBagConstraints();
			constraintsJLabelWhenChange.gridx = 1; constraintsJLabelWhenChange.gridy = 1;
			constraintsJLabelWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelWhenChange.ipadx = 3;
			constraintsJLabelWhenChange.ipady = 4;
			constraintsJLabelWhenChange.insets = new java.awt.Insets(0, 5, 4, 5);
			getJPanelChangeMethod().add(getJLabelWhenChange(), constraintsJLabelWhenChange);

			java.awt.GridBagConstraints constraintsJComboBoxWhenChange = new java.awt.GridBagConstraints();
			constraintsJComboBoxWhenChange.gridx = 3; constraintsJComboBoxWhenChange.gridy = 1;
			constraintsJComboBoxWhenChange.gridwidth = 3;
			constraintsJComboBoxWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJComboBoxWhenChange.weightx = 1.0;
			constraintsJComboBoxWhenChange.ipadx = 170;
			constraintsJComboBoxWhenChange.ipady = 23;
			constraintsJComboBoxWhenChange.insets = new java.awt.Insets(0, 3, 1, 8);
			getJPanelChangeMethod().add(getJComboBoxWhenChange(), constraintsJComboBoxWhenChange);
			// user code begin {1}
			jComboBoxWhenChange_ActionPerformed(null);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelChangeMethod;
}
/**
 * Return the JTextFieldChangeTriggerOffset property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldChangeTriggerOffset() {
	if (ivjJTextFieldChangeTriggerOffset == null) {
		try {
			ivjJTextFieldChangeTriggerOffset = new javax.swing.JTextField();
			ivjJTextFieldChangeTriggerOffset.setName("JTextFieldChangeTriggerOffset");
			ivjJTextFieldChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJTextFieldChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJTextFieldChangeTriggerOffset.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999.9999, 99999.9999, 4) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldChangeTriggerOffset;
}
/**
 * Return the JTextFieldRampInInterval property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldRampInInterval() {
	if (ivjJTextFieldRampInInterval == null) {
		try {
			ivjJTextFieldRampInInterval = new javax.swing.JTextField();
			ivjJTextFieldRampInInterval.setName("JTextFieldRampInInterval");
			ivjJTextFieldRampInInterval.setPreferredSize(new java.awt.Dimension(60, 20));
			ivjJTextFieldRampInInterval.setMaximumSize(new java.awt.Dimension(61, 20));
			ivjJTextFieldRampInInterval.setMinimumSize(new java.awt.Dimension(60, 20));
			// user code begin {1}
			ivjJTextFieldRampInInterval.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999, 99999) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldRampInInterval;
}
/**
 * Return the JTextFieldRampOutInterval property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldRampOutInterval() {
	if (ivjJTextFieldRampOutInterval == null) {
		try {
			ivjJTextFieldRampOutInterval = new javax.swing.JTextField();
			ivjJTextFieldRampOutInterval.setName("JTextFieldRampOutInterval");
			ivjJTextFieldRampOutInterval.setPreferredSize(new java.awt.Dimension(60, 20));
			ivjJTextFieldRampOutInterval.setMaximumSize(new java.awt.Dimension(61, 20));
			ivjJTextFieldRampOutInterval.setMinimumSize(new java.awt.Dimension(60, 20));
			// user code begin {1}
			ivjJTextFieldRampOutInterval.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999, 99999) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldRampOutInterval;
}
/**
 * getValue method comment.
 */
public Object getValue(Object o) 
{
	com.cannontech.database.db.device.lm.LMProgramDirectGear gear = null;
	
	gear = (LMProgramDirectGear)o;
	
	if( getJComboBoxHowToStop().getSelectedItem() != null )
	{
		gear.setMethodStopType( 
			com.cannontech.common.util.StringUtils.removeChars( ' ', getJComboBoxHowToStop().getSelectedItem().toString() ) );
	}
	
	if(gear.getMethodStopType().compareTo(LMProgramDirectGear.STOP_RAMP_OUT) == 0)
	{
		gear.setRampOutPercent(new Integer(((Number)getJCSpinFieldRampOutPercent().getValue()).intValue()));
		gear.setRampOutInterval(new Integer(getJTextFieldRampOutInterval().getText()));
	}
		
	if(getJCheckBoxRampIn().isSelected())
	{
		gear.setRampInPercent(new Integer(((Number)getJCSpinFieldRampInPercent().getValue()).intValue()));
		gear.setRampInInterval(new Integer(getJTextFieldRampInInterval().getText()));
	}

	gear.setMethodOptionType(com.cannontech.common.util.StringUtils.removeChars( ' ', (String)getJComboBoxCycleCountSndType().getSelectedItem()));
	
	gear.setPercentReduction( new Integer( ((Number)getJCSpinFieldPercentReduction().getValue()).intValue() ) );
	
	gear.setChangeCondition( getChangeCondition(getJComboBoxWhenChange().getSelectedItem().toString()) );

	gear.setChangeDuration( new Integer( ((Number)getJCSpinFieldChangeDuration().getValue()).intValue() * 60 ) );
	gear.setChangePriority( new Integer( ((Number)getJCSpinFieldChangePriority().getValue()).intValue() ) );
	gear.setChangeTriggerNumber( new Integer( ((Number)getJCSpinFieldChangeTriggerNumber().getValue()).intValue() ) );
	
	if( getJTextFieldChangeTriggerOffset().getText() == null || getJTextFieldChangeTriggerOffset().getText().length() <= 0 )
		gear.setChangeTriggerOffset( new Double(0.0) );
	else
		gear.setChangeTriggerOffset( Double.valueOf(getJTextFieldChangeTriggerOffset().getText()) );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	String shedTimeString = (String)(getJComboBoxShedTimeDigits().getSelectedItem()) + " " + (String)(getJComboBoxShedTimeUnits().getSelectedItem());	
	t.setShedTime( com.cannontech.common.util.CtiUtilities.getIntervalSecondsValue( shedTimeString ) );


	t.setNumberOfGroups( getJComboBoxNumGroups().getSelectedItem() );

	String sendRateString = (String)(getJComboBoxSendRateDigits().getSelectedItem()) + " " + (String)(getJComboBoxSendRateUnits().getSelectedItem());	
	t.setRefreshRate( com.cannontech.common.util.CtiUtilities.getIntervalSecondsValue( sendRateString ) );
		
	t.setGroupSelectionMethod( StringUtils.removeChars( ' ', getJComboBoxGroupSelection().getSelectedItem().toString() ) );
		
	return t;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	getJCSpinFieldChangeDuration().addValueListener(this);
	getJCSpinFieldChangePriority().addValueListener(this);
	getJCSpinFieldChangeTriggerNumber().addValueListener(this);
	getJCSpinFieldPercentReduction().addValueListener(this);
	getJCSpinFieldRampOutPercent().addValueListener(this);
	getJCSpinFieldRampInPercent().addValueListener(this);
	getJComboBoxWhenChange().addActionListener(this);
	
	getJComboBoxShedTimeDigits().addActionListener(this);
	getJComboBoxShedTimeUnits().addActionListener(this);
	getJComboBoxNumGroups().addActionListener(this);
	getJComboBoxSendRateDigits().addActionListener(this);
	getJComboBoxSendRateUnits().addActionListener(this);
	getJComboBoxGroupSelection().addActionListener(this);
	getJComboBoxHowToStop().addActionListener(this);
	getJTextFieldChangeTriggerOffset().addCaretListener(this);
	
	// user code end
	getJCheckBoxRampIn().addActionListener(ivjEventHandler);
	getJComboBoxWhenChange().addActionListener(ivjEventHandler);
	getJComboBoxCycleCountSndType().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("TimeRefreshGearPanel");
		setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
		setLayout(new java.awt.GridBagLayout());
		setPreferredSize(new java.awt.Dimension(402, 430));
		setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
		setSize(402, 430);
		setMinimumSize(new java.awt.Dimension(402, 430));

		java.awt.GridBagConstraints constraintsJLabelShedTime = new java.awt.GridBagConstraints();
		constraintsJLabelShedTime.gridx = 1; constraintsJLabelShedTime.gridy = 2;
		constraintsJLabelShedTime.ipadx = 51;
		constraintsJLabelShedTime.insets = new java.awt.Insets(7, 10, 5, 1);
		add(getJLabelShedTime(), constraintsJLabelShedTime);

		java.awt.GridBagConstraints constraintsJLabelNumGroups = new java.awt.GridBagConstraints();
		constraintsJLabelNumGroups.gridx = 1; constraintsJLabelNumGroups.gridy = 3;
		constraintsJLabelNumGroups.ipadx = 17;
		constraintsJLabelNumGroups.insets = new java.awt.Insets(7, 10, 5, 1);
		add(getJLabelNumGroups(), constraintsJLabelNumGroups);

		java.awt.GridBagConstraints constraintsJComboBoxNumGroups = new java.awt.GridBagConstraints();
		constraintsJComboBoxNumGroups.gridx = 2; constraintsJComboBoxNumGroups.gridy = 3;
		constraintsJComboBoxNumGroups.gridwidth = 4;
		constraintsJComboBoxNumGroups.weightx = 1.0;
		constraintsJComboBoxNumGroups.ipadx = 1;
		constraintsJComboBoxNumGroups.insets = new java.awt.Insets(2, 1, 3, 97);
		add(getJComboBoxNumGroups(), constraintsJComboBoxNumGroups);

		java.awt.GridBagConstraints constraintsJLabelSendRate = new java.awt.GridBagConstraints();
		constraintsJLabelSendRate.gridx = 1; constraintsJLabelSendRate.gridy = 4;
		constraintsJLabelSendRate.ipadx = 8;
		constraintsJLabelSendRate.insets = new java.awt.Insets(7, 9, 5, 2);
		add(getJLabelSendRate(), constraintsJLabelSendRate);

		java.awt.GridBagConstraints constraintsJLabelGroupSelection = new java.awt.GridBagConstraints();
		constraintsJLabelGroupSelection.gridx = 1; constraintsJLabelGroupSelection.gridy = 5;
		constraintsJLabelGroupSelection.ipadx = 12;
		constraintsJLabelGroupSelection.insets = new java.awt.Insets(7, 10, 5, 1);
		add(getJLabelGroupSelection(), constraintsJLabelGroupSelection);

		java.awt.GridBagConstraints constraintsJComboBoxGroupSelection = new java.awt.GridBagConstraints();
		constraintsJComboBoxGroupSelection.gridx = 2; constraintsJComboBoxGroupSelection.gridy = 5;
		constraintsJComboBoxGroupSelection.gridwidth = 4;
		constraintsJComboBoxGroupSelection.weightx = 1.0;
		constraintsJComboBoxGroupSelection.ipadx = 1;
		constraintsJComboBoxGroupSelection.insets = new java.awt.Insets(3, 1, 2, 59);
		add(getJComboBoxGroupSelection(), constraintsJComboBoxGroupSelection);

		java.awt.GridBagConstraints constraintsJLabelHowToStop = new java.awt.GridBagConstraints();
		constraintsJLabelHowToStop.gridx = 1; constraintsJLabelHowToStop.gridy = 9;
		constraintsJLabelHowToStop.ipadx = 4;
		constraintsJLabelHowToStop.insets = new java.awt.Insets(9, 10, 5, 31);
		add(getJLabelHowToStop(), constraintsJLabelHowToStop);

		java.awt.GridBagConstraints constraintsJLabelPercentReduction = new java.awt.GridBagConstraints();
		constraintsJLabelPercentReduction.gridx = 1; constraintsJLabelPercentReduction.gridy = 12;
		constraintsJLabelPercentReduction.gridwidth = 2;
		constraintsJLabelPercentReduction.ipadx = 53;
		constraintsJLabelPercentReduction.ipady = 3;
		constraintsJLabelPercentReduction.insets = new java.awt.Insets(7, 10, 4, 9);
		add(getJLabelPercentReduction(), constraintsJLabelPercentReduction);

		java.awt.GridBagConstraints constraintsJComboBoxHowToStop = new java.awt.GridBagConstraints();
		constraintsJComboBoxHowToStop.gridx = 2; constraintsJComboBoxHowToStop.gridy = 9;
		constraintsJComboBoxHowToStop.gridwidth = 4;
		constraintsJComboBoxHowToStop.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxHowToStop.weightx = 1.0;
		constraintsJComboBoxHowToStop.ipadx = 1;
		constraintsJComboBoxHowToStop.insets = new java.awt.Insets(4, 1, 3, 59);
		add(getJComboBoxHowToStop(), constraintsJComboBoxHowToStop);

		java.awt.GridBagConstraints constraintsJCSpinFieldPercentReduction = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldPercentReduction.gridx = 3; constraintsJCSpinFieldPercentReduction.gridy = 12;
		constraintsJCSpinFieldPercentReduction.gridwidth = 3;
		constraintsJCSpinFieldPercentReduction.ipadx = 88;
		constraintsJCSpinFieldPercentReduction.ipady = 20;
		constraintsJCSpinFieldPercentReduction.insets = new java.awt.Insets(5, 9, 3, 121);
		add(getJCSpinFieldPercentReduction(), constraintsJCSpinFieldPercentReduction);

		java.awt.GridBagConstraints constraintsJPanelChangeMethod = new java.awt.GridBagConstraints();
		constraintsJPanelChangeMethod.gridx = 1; constraintsJPanelChangeMethod.gridy = 13;
		constraintsJPanelChangeMethod.gridwidth = 5;
		constraintsJPanelChangeMethod.fill = java.awt.GridBagConstraints.VERTICAL;
		constraintsJPanelChangeMethod.weightx = 1.0;
		constraintsJPanelChangeMethod.weighty = 1.0;
		constraintsJPanelChangeMethod.ipadx = 10;
		constraintsJPanelChangeMethod.insets = new java.awt.Insets(3, 7, 8, 55);
		add(getJPanelChangeMethod(), constraintsJPanelChangeMethod);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateDigits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateDigits.gridx = 2; constraintsJComboBoxSendRateDigits.gridy = 4;
		constraintsJComboBoxSendRateDigits.gridwidth = 3;
		constraintsJComboBoxSendRateDigits.weightx = 1.0;
		constraintsJComboBoxSendRateDigits.ipadx = 3;
		constraintsJComboBoxSendRateDigits.insets = new java.awt.Insets(3, 1, 2, 1);
		add(getJComboBoxSendRateDigits(), constraintsJComboBoxSendRateDigits);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateUnits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateUnits.gridx = 5; constraintsJComboBoxSendRateUnits.gridy = 4;
		constraintsJComboBoxSendRateUnits.weightx = 1.0;
		constraintsJComboBoxSendRateUnits.insets = new java.awt.Insets(3, 1, 2, 73);
		add(getJComboBoxSendRateUnits(), constraintsJComboBoxSendRateUnits);

		java.awt.GridBagConstraints constraintsJComboBoxCycleCountSndType = new java.awt.GridBagConstraints();
		constraintsJComboBoxCycleCountSndType.gridx = 2; constraintsJComboBoxCycleCountSndType.gridy = 1;
		constraintsJComboBoxCycleCountSndType.gridwidth = 4;
		constraintsJComboBoxCycleCountSndType.weightx = 1.0;
		constraintsJComboBoxCycleCountSndType.ipadx = 1;
		constraintsJComboBoxCycleCountSndType.insets = new java.awt.Insets(8, 1, 2, 97);
		add(getJComboBoxCycleCountSndType(), constraintsJComboBoxCycleCountSndType);

		java.awt.GridBagConstraints constraintsJLabelCycleCntSndType = new java.awt.GridBagConstraints();
		constraintsJLabelCycleCntSndType.gridx = 1; constraintsJLabelCycleCntSndType.gridy = 1;
		constraintsJLabelCycleCntSndType.ipadx = 22;
		constraintsJLabelCycleCntSndType.insets = new java.awt.Insets(11, 10, 6, 17);
		add(getJLabelCycleCntSndType(), constraintsJLabelCycleCntSndType);

		java.awt.GridBagConstraints constraintsJCSpinFieldRampOutPercent = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldRampOutPercent.gridx = 2; constraintsJCSpinFieldRampOutPercent.gridy = 10;
		constraintsJCSpinFieldRampOutPercent.gridwidth = 2;
		constraintsJCSpinFieldRampOutPercent.insets = new java.awt.Insets(3, 1, 2, 1);
		add(getJCSpinFieldRampOutPercent(), constraintsJCSpinFieldRampOutPercent);

		java.awt.GridBagConstraints constraintsJLabelRampOutPercent = new java.awt.GridBagConstraints();
		constraintsJLabelRampOutPercent.gridx = 1; constraintsJLabelRampOutPercent.gridy = 10;
		constraintsJLabelRampOutPercent.ipadx = -57;
		constraintsJLabelRampOutPercent.ipady = -111;
		constraintsJLabelRampOutPercent.insets = new java.awt.Insets(7, 10, 4, 22);
		add(getJLabelRampOutPercent(), constraintsJLabelRampOutPercent);

		java.awt.GridBagConstraints constraintsJLabelRampOutPercentSign = new java.awt.GridBagConstraints();
		constraintsJLabelRampOutPercentSign.gridx = 4; constraintsJLabelRampOutPercentSign.gridy = 10;
		constraintsJLabelRampOutPercentSign.gridwidth = 2;
		constraintsJLabelRampOutPercentSign.ipadx = 7;
		constraintsJLabelRampOutPercentSign.insets = new java.awt.Insets(5, 1, 4, 164);
		add(getJLabelRampOutPercentSign(), constraintsJLabelRampOutPercentSign);

		java.awt.GridBagConstraints constraintsJTextFieldRampOutInterval = new java.awt.GridBagConstraints();
		constraintsJTextFieldRampOutInterval.gridx = 2; constraintsJTextFieldRampOutInterval.gridy = 11;
		constraintsJTextFieldRampOutInterval.gridwidth = 2;
		constraintsJTextFieldRampOutInterval.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJTextFieldRampOutInterval.weightx = 1.0;
		constraintsJTextFieldRampOutInterval.insets = new java.awt.Insets(3, 1, 4, 1);
		add(getJTextFieldRampOutInterval(), constraintsJTextFieldRampOutInterval);

		java.awt.GridBagConstraints constraintsJLabelRampOutSec = new java.awt.GridBagConstraints();
		constraintsJLabelRampOutSec.gridx = 4; constraintsJLabelRampOutSec.gridy = 11;
		constraintsJLabelRampOutSec.gridwidth = 2;
		constraintsJLabelRampOutSec.ipadx = 58;
		constraintsJLabelRampOutSec.insets = new java.awt.Insets(5, 1, 6, 101);
		add(getJLabelRampOutSec(), constraintsJLabelRampOutSec);

		java.awt.GridBagConstraints constraintsJLabelRampOutInterval = new java.awt.GridBagConstraints();
		constraintsJLabelRampOutInterval.gridx = 1; constraintsJLabelRampOutInterval.gridy = 11;
		constraintsJLabelRampOutInterval.ipadx = -57;
		constraintsJLabelRampOutInterval.ipady = -111;
		constraintsJLabelRampOutInterval.insets = new java.awt.Insets(5, 10, 8, 22);
		add(getJLabelRampOutInterval(), constraintsJLabelRampOutInterval);

		java.awt.GridBagConstraints constraintsJCheckBoxRampIn = new java.awt.GridBagConstraints();
		constraintsJCheckBoxRampIn.gridx = 1; constraintsJCheckBoxRampIn.gridy = 6;
		constraintsJCheckBoxRampIn.ipadx = 53;
		constraintsJCheckBoxRampIn.ipady = -2;
		constraintsJCheckBoxRampIn.insets = new java.awt.Insets(3, 9, 1, 23);
		add(getJCheckBoxRampIn(), constraintsJCheckBoxRampIn);

		java.awt.GridBagConstraints constraintsJLabelRampInInterval = new java.awt.GridBagConstraints();
		constraintsJLabelRampInInterval.gridx = 1; constraintsJLabelRampInInterval.gridy = 8;
		constraintsJLabelRampInInterval.insets = new java.awt.Insets(6, 10, 7, 28);
		add(getJLabelRampInInterval(), constraintsJLabelRampInInterval);

		java.awt.GridBagConstraints constraintsJTextFieldRampInInterval = new java.awt.GridBagConstraints();
		constraintsJTextFieldRampInInterval.gridx = 2; constraintsJTextFieldRampInInterval.gridy = 8;
		constraintsJTextFieldRampInInterval.gridwidth = 2;
		constraintsJTextFieldRampInInterval.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJTextFieldRampInInterval.weightx = 1.0;
		constraintsJTextFieldRampInInterval.insets = new java.awt.Insets(3, 1, 4, 1);
		add(getJTextFieldRampInInterval(), constraintsJTextFieldRampInInterval);

		java.awt.GridBagConstraints constraintsJLabelRampInSec = new java.awt.GridBagConstraints();
		constraintsJLabelRampInSec.gridx = 4; constraintsJLabelRampInSec.gridy = 8;
		constraintsJLabelRampInSec.gridwidth = 2;
		constraintsJLabelRampInSec.ipadx = 48;
		constraintsJLabelRampInSec.insets = new java.awt.Insets(5, 1, 6, 111);
		add(getJLabelRampInSec(), constraintsJLabelRampInSec);

		java.awt.GridBagConstraints constraintsJLabelRampInPercentSign = new java.awt.GridBagConstraints();
		constraintsJLabelRampInPercentSign.gridx = 4; constraintsJLabelRampInPercentSign.gridy = 7;
		constraintsJLabelRampInPercentSign.gridwidth = 2;
		constraintsJLabelRampInPercentSign.ipadx = 7;
		constraintsJLabelRampInPercentSign.insets = new java.awt.Insets(4, 1, 4, 164);
		add(getJLabelRampInPercentSign(), constraintsJLabelRampInPercentSign);

		java.awt.GridBagConstraints constraintsJCSpinFieldRampInPercent = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldRampInPercent.gridx = 2; constraintsJCSpinFieldRampInPercent.gridy = 7;
		constraintsJCSpinFieldRampInPercent.gridwidth = 2;
		constraintsJCSpinFieldRampInPercent.insets = new java.awt.Insets(2, 1, 2, 1);
		add(getJCSpinFieldRampInPercent(), constraintsJCSpinFieldRampInPercent);

		java.awt.GridBagConstraints constraintsJLabelRampInPercent = new java.awt.GridBagConstraints();
		constraintsJLabelRampInPercent.gridx = 1; constraintsJLabelRampInPercent.gridy = 7;
		constraintsJLabelRampInPercent.insets = new java.awt.Insets(6, 10, 4, 28);
		add(getJLabelRampInPercent(), constraintsJLabelRampInPercent);

		java.awt.GridBagConstraints constraintsJComboBoxShedTimeDigits = new java.awt.GridBagConstraints();
		constraintsJComboBoxShedTimeDigits.gridx = 2; constraintsJComboBoxShedTimeDigits.gridy = 2;
		constraintsJComboBoxShedTimeDigits.gridwidth = 3;
		constraintsJComboBoxShedTimeDigits.weightx = 1.0;
		constraintsJComboBoxShedTimeDigits.ipadx = 3;
		constraintsJComboBoxShedTimeDigits.insets = new java.awt.Insets(3, 1, 2, 1);
		add(getJComboBoxShedTimeDigits(), constraintsJComboBoxShedTimeDigits);

		java.awt.GridBagConstraints constraintsJComboBoxShedTimeUnits = new java.awt.GridBagConstraints();
		constraintsJComboBoxShedTimeUnits.gridx = 5; constraintsJComboBoxShedTimeUnits.gridy = 2;
		constraintsJComboBoxShedTimeUnits.weightx = 1.0;
		constraintsJComboBoxShedTimeUnits.insets = new java.awt.Insets(3, 1, 2, 73);
		add(getJComboBoxShedTimeUnits(), constraintsJComboBoxShedTimeUnits);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	rampItOut(false);
	rampItIn(false);
	
	getJComboBoxWhenChange().setSelectedItem( LMProgramDirectGear.CHANGE_NONE );
	getJComboBoxShedTimeDigits().setSelectedItem("1");
	getJComboBoxShedTimeUnits().setSelectedItem("hours");
	getJComboBoxSendRateDigits().setSelectedItem("30");
	getJComboBoxSendRateUnits().setSelectedItem("minutes");
		try
	{
		initConnections();
	}
	catch(Exception e)	{ }
	// user code end
}
/**
 * Comment
 */
public void jCheckBoxRampIn_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	rampItIn(getJCheckBoxRampIn().isSelected());
	this.fireInputUpdate();
	return;
}
/**
 * Comment
 */
public void jComboBoxCycleCountSndType_ActionPerformed(java.awt.event.ActionEvent actionEvent) {

	if(LMProgramDirectGear.OPTION_DYNAMIC_SHED.compareTo(com.cannontech.common.util.StringUtils.removeChars( ' ', (String)getJComboBoxCycleCountSndType().getSelectedItem())) == 0)
	{
		getJComboBoxShedTimeDigits().setVisible(false);
		getJComboBoxShedTimeUnits().setVisible(false);
		getJLabelShedTime().setVisible(false);
	}
	else
	{
		getJComboBoxShedTimeDigits().setVisible(true);
		getJComboBoxShedTimeUnits().setVisible(true);
		getJLabelShedTime().setVisible(true);
	}
	
	fireInputUpdate();
	return;
}
/**
 * Comment
 */
public void jComboBoxWhenChange_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getJLabelChangeDuration().setVisible(false);
	getJCSpinFieldChangeDuration().setVisible(false);
	getJLabelMinutesChDur().setVisible(false);
	
	getJLabelChangePriority().setVisible(false);
	getJCSpinFieldChangePriority().setVisible(false);
	
	getJLabelChangeTriggerNumber().setVisible(false);
	getJCSpinFieldChangeTriggerNumber().setVisible(false);

	getJLabelChangeTriggerOffset().setVisible(false);
	getJTextFieldChangeTriggerOffset().setVisible(false);

	
	if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_NONE )
		 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Manually Only" ) )
	{
		//None
		return;
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_DURATION )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "After a Duration" ) )
	{
		//Duration
		getJLabelChangeDuration().setVisible(true);
		getJCSpinFieldChangeDuration().setVisible(true);
		getJLabelMinutesChDur().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_PRIORITY )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Priority Change" ) )
	{
		//Priority
		getJLabelChangePriority().setVisible(true);
		getJCSpinFieldChangePriority().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_TRIGGER_OFFSET )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Above Trigger" ) )
	{
		//TriggerOffset
		getJLabelChangeTriggerNumber().setVisible(true);
		getJCSpinFieldChangeTriggerNumber().setVisible(true);

		getJLabelChangeTriggerOffset().setVisible(true);
		getJTextFieldChangeTriggerOffset().setVisible(true);
	}
	else
		throw new Error("Unknown LMProgramDirectGear control condition found, the value = " + getJComboBoxWhenChange().getSelectedItem().toString() );


	fireInputUpdate();
	return;
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		TimeRefreshGearPanel aTimeRefreshGearPanel;
		aTimeRefreshGearPanel = new TimeRefreshGearPanel();
		frame.setContentPane(aTimeRefreshGearPanel);
		frame.setSize(aTimeRefreshGearPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
public void rampItIn(boolean rampOrNotToRamp)
{
	getJLabelRampInInterval().setVisible(rampOrNotToRamp);
	getJLabelRampInPercent().setVisible(rampOrNotToRamp);
	getJLabelRampInPercentSign().setVisible(rampOrNotToRamp);
	getJLabelRampInSec().setVisible(rampOrNotToRamp);
	getJCSpinFieldRampInPercent().setVisible(rampOrNotToRamp);
	getJTextFieldRampInInterval().setVisible(rampOrNotToRamp);
}
public void rampItOut(boolean rampOrNotToRamp)
{
	getJLabelRampOutInterval().setVisible(rampOrNotToRamp);
	getJLabelRampOutPercent().setVisible(rampOrNotToRamp);
	getJLabelRampOutPercentSign().setVisible(rampOrNotToRamp);
	getJLabelRampOutSec().setVisible(rampOrNotToRamp);
	getJCSpinFieldRampOutPercent().setVisible(rampOrNotToRamp);
	getJTextFieldRampOutInterval().setVisible(rampOrNotToRamp);
}
/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private void setChangeCondition(String change) 
{
	if( change == null )
		return;

	if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_NONE) )
	{
		getJComboBoxWhenChange().setSelectedItem("Manually Only");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_DURATION) )
	{
		getJComboBoxWhenChange().setSelectedItem("After a Duration");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_PRIORITY) )
	{
		getJComboBoxWhenChange().setSelectedItem("Priority Change");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_TRIGGER_OFFSET) )
	{
		getJComboBoxWhenChange().setSelectedItem("Above Trigger");
	}	
	
}
/**
* @return
*/

/**
* @param box
*/
public void setJComboBoxCycleCountSndType(javax.swing.JComboBox box) 
{
	ivjJComboBoxCycleCountSndType = box;
}
/**
 * setValue method comment.
 */
public void setValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	if( o == null )
	{
		return;
	}
	else
		gear = (LMProgramDirectGear)o;

	getJComboBoxHowToStop().setSelectedItem( StringUtils.addCharBetweenWords( ' ', gear.getMethodStopType() ) );
	
	if(gear.getMethodStopType().compareTo(LMProgramDirectGear.STOP_RAMP_OUT) == 0)
	{
		getJCSpinFieldRampOutPercent().setValue(gear.getRampOutPercent());
		getJTextFieldRampOutInterval().setText(gear.getRampOutInterval().toString());
	}
		
	if(gear.getRampInPercent().intValue() != 0 && gear.getRampInInterval().intValue() != 0)
	{
		getJCheckBoxRampIn().setSelected(true);
		getJCSpinFieldRampInPercent().setValue(gear.getRampInPercent());
		getJTextFieldRampInInterval().setText(gear.getRampInInterval().toString());
	}

	getJCSpinFieldPercentReduction().setValue( gear.getPercentReduction() );
	
	setChangeCondition( gear.getChangeCondition() );
	getJCSpinFieldChangeDuration().setValue( new Integer( gear.getChangeDuration().intValue() / 60 ) );
	getJCSpinFieldChangePriority().setValue( gear.getChangePriority() );
	getJCSpinFieldChangeTriggerNumber().setValue( gear.getChangeTriggerNumber() );	
	getJTextFieldChangeTriggerOffset().setText( gear.getChangeTriggerOffset().toString() );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	if(t.getMethodOptionType().compareTo(LMProgramDirectGear.OPTION_DYNAMIC_SHED) == 0)
	{
		getJComboBoxShedTimeDigits().setVisible(false);
		getJComboBoxShedTimeUnits().setVisible(false);
		getJLabelShedTime().setVisible(false);
	}
	else
	{
		com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxShedTimeDigits(), getJComboBoxShedTimeUnits(), t.getShedTime().intValue() );
	}
	
	getJComboBoxNumGroups().setSelectedItem( t.getNumberOfGroups() );
	
	getJComboBoxCycleCountSndType().setSelectedItem(StringUtils.addCharBetweenWords( ' ', t.getMethodOptionType()));

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxSendRateDigits(), getJComboBoxSendRateUnits(), t.getRefreshRate().intValue() );
		
	getJComboBoxGroupSelection().setSelectedItem( StringUtils.addCharBetweenWords( ' ', t.getGroupSelectionMethod() ) );
	
	
}
/**
 * valueChanged method comment.
 */
public void valueChanged(com.klg.jclass.util.value.JCValueEvent arg1) 
{
	//fire this event for all JCSpinFields!!
	this.fireInputUpdate();
}
/**
 * valueChanging method comment.
 */
public void valueChanging(com.klg.jclass.util.value.JCValueEvent arg1) {}
}
