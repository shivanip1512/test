package com.cannontech.dbeditor.wizard.device.lmprogram;

/**
 * Insert the type's description here.
 * Creation date: (8/1/2002 11:56:33 AM)
 * @author: 
 */

import com.cannontech.common.util.StringUtils;
import com.cannontech.database.db.device.lm.LMProgramDirectGear;
 
public class TimeRefreshGearPanel extends GenericGearPanel {
	private javax.swing.JComboBox ivjJComboBoxGroupSelection = null;
	private javax.swing.JComboBox ivjJComboBoxHowToStop = null;
	private javax.swing.JComboBox ivjJComboBoxNumGroups = null;
	private javax.swing.JComboBox ivjJComboBoxShedTime = null;
	private javax.swing.JComboBox ivjJComboBoxWhenChange = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeDuration = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangePriority = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeTriggerNumber = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldPercentReduction = null;
	private javax.swing.JLabel ivjJLabelChangeDuration = null;
	private javax.swing.JLabel ivjJLabelChangePriority = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerNumber = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerOffset = null;
	private javax.swing.JLabel ivjJLabelGroupSelection = null;
	private javax.swing.JLabel ivjJLabelHowToStop = null;
	private javax.swing.JLabel ivjJLabelMinutesChDur = null;
	private javax.swing.JLabel ivjJLabelNumGroups = null;
	private javax.swing.JLabel ivjJLabelPercentReduction = null;
	private javax.swing.JLabel ivjJLabelSendRate = null;
	private javax.swing.JLabel ivjJLabelShedTime = null;
	private javax.swing.JLabel ivjJLabelWhenChange = null;
	private javax.swing.JPanel ivjJPanelChangeMethod = null;
	private javax.swing.JTextField ivjJTextFieldChangeTriggerOffset = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateDigits = null;
	private javax.swing.JComboBox ivjJComboBoxSendRateUnits = null;
	private javax.swing.JComboBox ivjJComboBoxCycleCountSndType = null;
	private javax.swing.JLabel ivjJLabelCycleCntSndType = null;
/**
 * TimeRefreshGearPanel constructor comment.
 */
public TimeRefreshGearPanel() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJComboBoxWhenChange()) 
		connEtoC1(e);
	if (e.getSource() == getJComboBoxShedTime()) 
		connEtoC4(e);
	if (e.getSource() == getJComboBoxNumGroups()) 
		connEtoC5(e);
	if (e.getSource() == getJComboBoxSendRateDigits() || e.getSource() == getJComboBoxSendRateUnits()) 
		connEtoC7(e);
	if (e.getSource() == getJComboBoxGroupSelection()) 
		connEtoC8(e);
	if (e.getSource() == getJComboBoxHowToStop()) 
		connEtoC10(e);
	if (e.getSource() == getJComboBoxCycleCountSndType()) 
		connEtoC11(e);
	// user code begin {2}
	// user code end
}
	/**
	 * Called when the caret position is updated.
	 *
	 * @param e the caret event
	 */
public void caretUpdate(javax.swing.event.CaretEvent e) {}
/**
 * connEtoC1:  (JComboBoxWhenChange.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.jComboBoxWhenChange_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jComboBoxWhenChange_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC10:  (JComboBoxHowToStop.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

private void connEtoC11(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JComboBoxShedTime.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (JComboBoxNumGroups.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC7:  (JComboBoxSendRate.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC8:  (JComboBoxGroupSelection.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GB201D9B0GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155FD8FD894573937F9EA721154B636A537B4575B0FB4B6A539B4318D6D25AD3D2129C9CCE29FB7ADE9CCC39212D0C3D2CDC80389C9C8B330E0D0B120E2C4C533AAAAA4489F799BC0C1DC918D9AA2C481E9F4E187D8D9F6575DA12C0A663E671CF94F4CAE334B92EF3F474F67F91DB93F733E677DF35EB9F3E64E59C1487DA0B4A3B5ADD790D2B38479DFCD2AA064CD93046B0EF785A3B6677185FAC175EF
	AB50EA2164D0BA9C2321AE31CB274F91CE77E7C2B9864A2D2DBA7DFAB8DFAB187B07ECF062C3CF93547D3E69684B7E755CE2C6BD6F52724A4AACB83E8734903094226FAF8BC07F764ABC99B7C079BD791CD0EA1AA0A4D31E621ABC95BEC3660B170F531FA0BC7BAA73657AA6A8931EAEB8DA1FD05ADCCE2D3B362ED6AE77FEA7CCC8FAE8D35AAA22CB55BE52FCD9B6D1BE9A04DBE9A074C27206A3F0ECE89F9E5C57EF9FA969B759ECF61BA4768F15187BC433C532BBCB46AC97CCCEF309D97C5252AF16D8C79CCE
	7B2053B4D2D757E999910F0B83CE51B5F4C8B4B95BCDB651AA88E7E2098F47EBB2E97B02D088E5E66FA32B9AE4FB0207430438DB5F73E96F6CD8E6673CD8455E026BB2B25CCF123687E97C09DCA6141B00184E3BAAD1E794E08DCF91CC2CA63CC9D04E02F241D3E84B5EDDE8CB57457F92127B7625E57B30E55AD34C06302794DB06F27A749BE8AE6C9EA07D998FF519CFAF506783B5811D811A86340966E00279C3B86E6F138E58C7C66C367D8EC733556CBCEAB70BD6B82F2B039A99BBAE765B1DE6C1E0F9F632
	26D8439E241027BDF3CC490B138266C57871BB85C92ACC4B5070AD62514DE961F29B51CFAB3EB13F9E9CA4FE45811E82149B37C0DF8C5486E40DC33F7608951379F598F249E9B3D9BBC67B9CA62754BCEA311AC5276C5FC825BF7F340849DD1C329C0BCBD805BAAE31F7B7263D2B91175830023420B8960F50B8A5AECCF704CF5D51F1937B03DE5BF1A48F9F27F998836729F20EB27CB90A97BE2360AC4707A9CE4A35D0B76B994C5B2E77500736749F89B965CD1ABE045CDB15A6BC4B6C49FB563BEFFFECA1630B
	9170B3C0EE2019C0F300668345BD0B7DFBC9AC8DB0EF5BD5FD4BE42B875E072368161C2643B617E432750BA7CCCE0B294FAA3A841927F100585E67A1E72457D3BF68B8A45AC427C93258ED503AE9C404C4F2B11E23832B890FD32435E4948285A38E815B7DFCE0AD9C2DA617743943EC12C40503557FF3004472CB5389E8919A00733267C84CEDF44C9260BC9F08456A0FE789A6C1F946F398170583EB607889A436E82D2BB3DA7A0999A667F9547F47C1B21608DF0AB649A8BAC41B99CEDCF25D63034B15388C58
	394DCFD31CDCA38740F097477FBA381A615006BA4AD83F04561BA449E9699B15448ED112AC36C1C5FEA9354565F1793984799A9FA6B9968AFEC5824D637EDD9EDA2B722F4DEE9F9EF5F4121E136374B09DE7E361BC69B93CA7BEDDCD6E11F9711827AFF5E11E9AD77DD4A8FEF41FE61E922A0DE779599E6FFD2D3DC05BD4F41C2B6E72F16D6545EBDFFBD39FDBEE7029C3FF056D93E2F1EF98A1F1F7034D41C091719877DF8D99587556ECF209F805FD6A049E934DCA16B15E3BAC3EF36C17966D9C0B32E867583D
	967FB97410C5AB07D85DA396F2EF310F59D4B979E74B9AFA8D5BECA2B51A0B88EC4E71D2A7090545E611CEDA4C032254E139A0C2BF47135C3A16DE037361BC0E675258F64C25028B378B5127B7E85E4FC2FEDC1BD67BD71687EDFFD5F209597458D992F351AA0EC0208E58C7ED92431F2457370C4B634B02E1ED5EC707C9BE8E0B67E53E47071789E49C310E0A5C37B92615A446CE4B88F49539E065F95F33156AF91F956CA3F344E8B846GB159FBBE03892A20B52BE2F9B3EAA3F6AD86FEE15182FD5EA24C1B4F
	E9BDDE2FF2429C30DB2DAC7C3CDF1AC7F2C8BF0A67C6C5980E49857D89776570489A2F3A9332DF2C7E33916217D5BD96ACA2FE4D6273BCF22FE0585D94FB82AE28EB53715EFBB4C7BDD7B53B4AB57B1010340875DD50A26F7B569DF652EE9860115C7779A36A31EA3F4BE56F37505B025C9F756E96616B4EEF699D4852BFE1EE5BD6C56CA0F357790BF01E69AEA6FDD376BCBC8BG1DF99E6D3BE81B18DF53ECAB60B8E0F13AE0FEE4965D98636BECA4D6643EA543B81F5B230EDDF45C8E1F31F3BF4FE2B663F96F
	58A5BAE86CG0F6236255AD72BE287F3CF38CD8FC24F22BDF75975AC5F65725D768C4CF781474B4F2A3C47CB9D349F7F3C7F71B8996A3392BCF98CD02E7442589CE9E8B709EDEB821BA3ED6578B5948FD661EC6EF4197685A947C15D629770DE3E689C09C1720BB0D77F9B46205531CA9503F63B45A6F17F17BA4875EDF7DA86ADB6445E24984C526900476E07AE1A8FF950E699A10A4D2518914ADD9CBBC82F0BF1A807F0AC5DC230F0A84F6558890AAD04F2A247F68F93ACF7B14C4397637D50363B890ECDD06E
	859A878A810A840A81CA824ADB82B1856A82F2830582C5834583E53E84ED3F04ED7D9F5AD6A714A520E02088209820A4205C17219D20CEA089A898A882E8A1D0B2D0DE6282FDEDA236B53D18A4A731C95D176332CD135DA309DD6498A373929B094DEA1E48G5A7138B7F871D7AE71AF5F64456F16E30865D055F91E9CCF6D794483B496999AF55981587D01FCDCA59F374A392966D9B905B890DA6ED5DEBB893F773C073CD7D927AAEFD01D1371E433C69B6C5A795BB9F21D3AF979E5DABEAF6BD8AB5CD0C546C5
	1355B2E8A323E5B774DBA2497D9F51EB298B4E2DC00C7709AAF29DDACD676D23F041163DC2787EDE253E474682EFBA60F92F303EE1F23DB5A4168E27B8A0BA61AE49269E321ED1FAFD3A01FF7AAB28E713454326AE642D2057689C601B7B8A5E3FFFB6C67AE2G6E9DB0FD6AF0087DC2505F896F08856DCA825ECC408A01DA01067E0EFA0C43C49684ADA323A354AA262717DE77BA600B653C3AE6525611B6D31FE86D98924DE446007EFD7FFD5287C760092D4F5EECF7AB55F27D4F6D59DC76586848A127FD5461
	126BDEBC39C6AD2BD44B75B955AA3DB065BC8E4FD6D8F77F32DCDEC725BAC4F97A416A0B762DD7376D49A237711FE7955BDA6DE31D768E496E106B469D6F733AF651598FFDF1DCB40F4A939C4653E27130DFE982E36358C46BBB9C96DB0BC5341AA7B444786E3DC05B21777C83C3F0CF940F0A52105D0C6D6CAE727085C3E1047B0404312CB97D3E964F67B642A2733497EFD4739CB85FEF9569F43343E66EBC6F603135962F633EB3A6950B5070AA491387F6672AF2BF7DD576ECD688C7D6FF73D6F57DF439BE1C
	57070DE949C773FAE70116FC8C2FDF36C7CBBE015717B4EA5527707A9FFF2155FECE9256DBB4658BF87D7D1FEA555772FAFD0DD67BED3C7E1F8D6A7AB3C92CBE980EEC7E9ED2279EDB42647A79F00C63EDD4F6EB69C86675FF2B522A4FDA0A75AFE8569BF87D4BD5DABED6C27D87829B47697B8B799F4B1DDFD59960F85674252944B4A615C02EB96CB64879124ECF5BCF6FEFBBFC6858510347BA59BCB3F4CCBD4F2CDD71114FF9E66BD2B626764A477C37B74A736D72B3645D921DEF23D218C8BBAD66E653E09B
	9D2D599C7A4B6ACC396D6025B8071ECD5FF94D07F2BCD04AD2FC7EF36F44F73561377DC8E81B5628795EB82EF3E7DA6EEB4C1E5A5714796FF8CE1FDEFA0D3C579FBE2F44658D7A2CED93478CBCB6C698A7ED6405D0E1E5591EE2C3E5C5D9116F389E31EC550EEB5B4116CEA53082BEB3FC4F027EC602AD092F91EC6C2C3ABFC93B7F047FCA60486AEF7728DFAD4BAB75CFF85413D86D7010DFB52C2E4FD0493338BE3C83631A72709C417A0B5DBE5F47573EAE7737FC1C7370C621577C199C57B7AFA8F169AD4E77
	9D5732E2C3D9914B13D769FBBE1EA76E9257985CB46B6A58A847E2760F5DA4E6643E987CBA66422596759AC2D4764E3415BEEC1EAF5B3A78F5A5970AA197187EC16BA6ED7DB89A4B7D7648D63421B89957991E9EC34C4C315B8B901B45313DFB900B61185808D8569B0845FE011811E321140F78BC4E3137BFA59839C7C6F02C0E4ED948FCB26FCD1C07DC2E5EA9281EF9072D03A5E77B499B1F1281F257A3CE72DBA066E7F0836AEB676D3CDA64230F681D1149696AB2655C8CFA932F6307CF517794D0CEFFEB01
	BE7FAD34F5389B1F1BABB9362D9A31900E992A5116940E6D2C4698D52660735C2B9789E605F2D08ABE4FB91D9F417104692C7CE67AA0FD4627AF53GECF75A9D22D3BA4FD07A068357942A273A26401EC173EA082FE1A96C99B41563DBA99E21425933699D5538F6958DF585EF23AF8517C82C0320BC9BA88AA886A889A8679F685BEF1CE542A46F63BB6D0EB671CB18A2A9EF6A58F5336014FAEC4F39F9DD9A5A656DD741BF64672EFFF83F0FBDF6766B2D3B7C6EDD3CE6A3FEFD0790F95D12D4DF572CD956B9DD
	BE36BE3411BFE32C96D2AE1398C5C01D8EA889A86B9D38BF82553E03B11AF33E184508F471FEC9B2758F51B7AF98209396F1CC0149A41D7926AFD17B56866D1D8112000200E63DB371790E59B4A010B1F68E544F870A87CA814A97F432BD4D97A7DDA3BB687633C676672DE8D78334598EE486C29B5CF0BEC3D5FECF40674E78B135BF21409381B48FA896A851CBC6113B33G6552D3F57ABC2062D40537894EBBD33574B56FD16B9B821EF12019C03301A2D3FD69BB5B28161B8FFCF1C0C9C019E9BAFDFE1AAF39
	E73EC039B260B182F529F82DF0BEADCD4B4E9FFB688B861EB020A819D767D3DFDA3B77FB2EF860CD167933749365683583F825D7DDAB14FB75DA36B57275DE07DCBFDD4597222103497D20816542B5F822810B81CAD055B139C76B54BE25C0FDCE3ACEDF104E78EA5335FDEA837C8C10242A8F5260E56360334B49F8B78B6A49753E1E632FD1BCC60533717191FA6FA0652C8C48D7A0E62B235BBB7E5317E95B272690608977620B06F28CD042B26FF86C1A307613226249F9D7DBDF816035DEF5EDD0BE732ED69F
	6F607799896A0300E6297866E868E0F29FF95C1F66825FC22045C0C226CE1F1BB9D10E0DBF499749B9DF5BE137BC396E1D0BE46CA26BB0961355F2013EB66FGC65BA0533925C6D0E223BA1F63F30D6CFF03180E877F25BA187F3BAF79DEC32B3C243D06D6F7C9FB8D2D69127FB53456CB3E5750BE3D24DEC3E37715EB49E501EB4317F688BE66B4F07BB882D333CF7B4E0A7DD227E9104BFF17ECF6928AA1AF0CC0C3C063C0B3B3713E346D72B6015E17B46E11874D036281BBDD351750060C2FFC47AA6B2B4957
	7A57FDC55E237559A549BEC25AC7FC53D7243FA53B03028CB3FCC5E26C348C8EC90CD546F7FEC567FB62G0559FB710DA5747DB9789585443030B27A4E8C4A899CFB03E2A9D04EDA0E589765743DBDA9F36C7D8AFC77EEDC0E3132893EFD9F9534736422201DA757887E57732F97FC659133EF49D6DCC38866B64756219FE19CAB2C4798C4F14CD50F3E69B876ECAE2EAB98D6A07696FD3E29043211E33F7C985B6B62D8AA55EB0572B8478638ADC19C7BF99D6A1D45317B8A500F459CFB339AE50515083554205E
	DC0EFD27865BAB6418AD9B7DF0F32C1BBEFF4D0072AC0EE59E477666F02C03E2F3219C43314863E8CB9C4752BBD0EF92472E214FE946AC1897E5717EA8C19DC39C5BD5CA7D05728C0E4DA8C59DA19CDBD80ABA42B9167C8546AA05E3BD0DA81B338A315B9AD1EF8147DEE94476EAB936E68CE3954431A84AB78B4A619CF39691AC9A4A8BB976FB0AAD06F28A478ABFC49D196FA1D6500E32DD9C33D34C8A65F10E45D0AC884A219C5BC57BB7824ABA0E7D2907E071D0CE62D8F3B7571B0D586AD3F42DG4A8E0E1D
	606BEE53B976039E34AF04E371BDBC769C1BC31F0BD3201C1703580327112F18E333A95FB81403B976906D37B0A8C7F36CF5FAAD44C0B901E3DFD2592C55BA3DE1B5E2CB77CE34EF4BBE1AEB40534B796EBE0D3EB9B896C72F7369D08E665871F4EA8B1423B9B6BB9D7D08D90D732C0465E41ED130862EFDA0AB508C20F020982094200235709C82B48E94329665D228DCA4149782A5836565423C88288B488D948294893490A8B997659EBBB5C7637ECC7412A35163B157DA63FB4E972ED1B7C34608AFE8AF5645
	2878D37C344BF52F751EAFAE6B55327DDD79683D2E66EF7F10569A9E2E53113981F97F3FDED537CAF59E48BA62EA55B96B7B6F52EBA7EF9D6442BA4C0767A8E60472990EDD20EBEF9214E7F0ECFE9566CDA8476E233209D04EFC9F311914AF1F14B9F6180E71C6A877F26CE60AB9209C44314B343DD9D00E645889A35D9B8465F80E05995116E40EA5D35956756047FA449A288E894AB3B9360E724D06F2944786A92603F28247A279B8134231E65ADEDB9E781107D869C514F5F06C824526C3B918E3CFDFC43D21
	9C7BE89CF5C464613C6366B45F730EDB52A61FF35D11C6771E40DC09AC9549FBBA52681E060181174867F691E9B99CBB6CEA373BAC4A3ADDF9895973B4E037C9ECBD72903D3725EF007B8E90633927CCFB5D76B1BA67EA823ECE4E1BD3CE5A1340F0766EF887A94A6F0EC74B3557DA3FC567E953200DE020F822DB58DDE174136FFAAF1A8BB20448F5C4A6568B617CA772B953717EB62223F8A30CD9C08C4B28C73DE60EFDD60FBE85EFC4DBEE2877E7CB06EC433B72B1FA23E28B290B01728729EC7F945331F29D
	51918778620D9837B5EE4FFEA8F453FB78A638E7ECC25B1E7E98EDEB5F04F2F9F51E717E1C7E7E01715FD8077E0DEFC2DF9E2C1BAC2E680FD6DC43211D6D9EF1FD094E73A2811F4B6D5CDE03FA93B9E62FC15B8D79E8CBD84DE4F14DD04535AD5FB32EE7723D637AFDBAC734826E4E4778B876F84675BABAE78C057A70FC342D7CB85A964B654E9E770C6BEF17A9F1FD66B87A173999FD5954B1D9DC177B09EBAD34036BBFCCFFC823275DF732F9A87035EF6679DB0AF6CF5B0CF66FAB7534BB6EDD456EDF14225D
	615C6E17CBA733FB259F3BE3211D8D9E7930154ED792GCF62F6FE2391759A36A036201167729634A533E932FCD8294A0771AD1E79B0934A439E79D0CF674133G8F5B02717913D7DCDFE0F3EA280F65BC5797E90FF7375039F15687604787487B17A24FF833E5AC66CF63071345F6151F5836010E659E31BD5A0E7A3B387E6B5ABD75579353659C7ADBBB5DF3E2F2FB6DB951FFC66FD95046CC5E4EBEBF7BE6CE52EBB78AF867F17E97FBBC63A850F9F992548B866C4F6E6E497C4F961471465B7FB2E8E7D8555F
	EB0542D35AFBE81A286E8660EFB5E0FEFDC5ED1620BC0DE37776E07C42390DEF75CC16F32BD4B6ACB4F8665CE2A85BBD2E5B879AFC47B10EBE87A403CC7AD6549FF75A1FFE5CC766B3C6504E4F60D844757F26C13B4F7FC4F5B7GFF6BD66C43E73E500E679B7439C6823EE91C773DFAB2G76591D74E5865B0F35239E77CC0481DFB4D0B2D056B69D5DBB48643E55B0F19F576C8614ABGDE320F2B810E6D9EF2D57B347DB8CA1F110600D75A067D9ACB471CD0A807EFC3FBDF2F774C4FD5547F05D09F4FF9AC69
	5A7311EB68F3D36EF61D3EF0BB7653EF52A74BE5B2FE63985F85F2566D2C1FC8F99A1C635A3B2C5B266C27E2FB100C236C57B02C7E6EF1B22E2A96F2BD19F8BBA25B4BC45BB9EA310DCA226B4090F0E1FDD733371EF627456E34C867D9FD7589CDBD4844750CB4EE70EA2753E9999C941D47C6C77A687BAD46373753875F2772149467022B48BE42A31DB0F02954EA737E33F30B160DDE86B05E8D07F2387E13C3220D31323A752E3502EABF16D2AD6F312AD9613D7F0664638C68BBD69FF54AFB8F91298F65750F
	D4EB49C7707AEBEB346A67717ADB3A355A0F6575CFCF589FC46A93F97D12EE2D7A74822C2F7430AF2F00DDEFCD3C7E8633167ECEDEDF5624557E902FDFDC6C3D3F09540F976075F6FB3776FD75F77479EBA6704D663CEFF67B9EC75752F1DC873C311C7FBBD55A57726D7499B5F307CE1F3F832F65672AA69B73172B465C369DDE734E9DBA3E664FF447F6EB0F23C954AFAB703BF7201DBF29E24FEC9609BC4AB13E7F2698291F4D794ED4EB474ACD1FCBA300EF9E677DD93576D879A065CD82BEE1A7725E64A72E
	F7D2FB0B013716730F983563FAADFDAEB7831FFBA746759E233F38AE97BC6740E1BBBD639A3553BB2E59BD5AF15DC57BFF9E7047F0BBBB2AFD7BE525F190F6413DE9977297F7EB7BE524B128853EB64EFB59C75E7E9B659D873E193BB0868B7C4EF970F9866793D13BBCE3205B25BCDFB15D5D551E77B1BB75A5967892F6617D2F6BA25A11D7482F070B1E73C2FA2B176D4E9CC79F0D05E8F77378E477B734D9EB9EA295AAFD4774DDC306E15907D9E5E4AD4AE34FD88BB8D4384DECB1D96D035B0A8DE5450672BD
	C5ECBF3C76FE3C174A8C42647B9CFD4B2F2888F4BF1FD69B4C275B89AC6FF9F9A68B773C647F672D027131A52958EF5E311BD6A86FBD100FE43FCD5B7599992C4D356B949B9F297B40BBCE4A5E3A720A1AE2431E0AA219B73FBED0FF987FD07D570BDFE2A333337AFDA58E5D6B951BE70CCD369F1049AC5D20485C71F120794078DF7BB8905B996FEDF5014605591537C9712BBEDF3171656A407B222EE6EAFDF1DD4D157545971B951B2F5922587CE2F9E0FD11E0D0E4D2BE1BDADF349E8F3CAF120FCF2DAFD6EE
	D37CFA3CC031D1D7B2B59B73CB8337F1FE6954ECCC5921587861AE4546CF9B7D65CBCD15BADFEEEE1CDA3EACEA3C32FCB9DA28583C34C83179E8E3E07972D931A2B3D0F465E3F9E4D1A07EB05D52EEC54E5C9E385C77CB94397C9AFFFDD33E878C2EAC1263736BD2C5EEDECF60F2BB2B95396A6EC0E344E48F57A87DE32DD55AD964F78C7254FF63470A5C377D5A6D190B0F77DCD9EE7D3CCE317D51FA45067FBE3D45378D3535E00262FFF203524626FDCA9B77FC91F89B7B9A9539713A49721A6DC5BBDA0F5F60
	48AC52691B00581C7F794D64A2517ACD71602825E4D432D84937F1A42B58AC3F8E1177D85FC4578E68DEE0E80B6D157EBD55B1874A73006200186E798D38CFB89930328FF572BE685C3D5846500758C673DE7A9D87A8C7826900184F0B1B941F43CE7B69730AEA707A63B24C156CE6C56E51FAFFF295A0D7DB03F243C6C52EA57D4A470110742FBFA7CBEC741D135FBEA870BE312DA075649DDA820F712B74FDA1194735FD04D8E68DE253B996D50332D19CDB580DFC06E2443652B9B931250BE385BD08C595E3DE
	6DA874786D0C325F1E3F85117751737D71065D585E6F4C08F5F1EC308931199C5B3E9B31F900790E7D426EC02EFB964F1F35A8F276AABF57E4CDAD9BDA7C74F9F4551574B933A76690A9317357DB15362F8D48B6B96F2B687311F3D474ED6B0D550147E86391C54E556DEF7CA53FBDA206B0393D1FA8F21F98831173ED6FAC63154776CC1B925BEF9CD55A1EDF9538CF379DD364D6780DC5C575E4BE1D6A3E1267B65646CF834AF55FB1F970D3A5A6BB0EAB6DEE3FB835F9297DE2A0F6B05E8F4627B6AF35F6903B
	585E501ECEBAD017687479C0CDC0DDC0D62069C0A1C061C051C08B01920152CBF57ABC20E2208620F6A0F3A96ED3F8E9AD399F7A7A4D0D7C63BF3A2154E9E25FD7E07BE7BA6AA77BBD093BD4EB8F35E9D239ADDEE5A6F77324F25E44762A5750FBF1F0294E6BB7BECD948FD5616C5E7DE0BD5E3B4321AE278C77BA7D31E12A7A19DC5C57145B30776B797BCBBA1F104A3C7D3D0762534A3C7DED5D0B7E4E003AC46E2FEB05779E6E4EF21DFE281C7569F839761E2B19004F762A0B04727CF22DDCC8BE05BE464975
	C9AA3E4CBD1063FB3464D6F9FCDB2F8CF80CC0DDB22FF50F2FFD783F2B7176E99A70864B7CE19AF20422G57F95545C3B9D95336A73B51362C8A791DD00542D789672D95DAF2BBA76C196F85BE074CBBDDBE06F84906C3B95A8B0B01F282D0CA05771E37229EEF9DB915BAFDC1257C1B917958D669595E99A8CBDED89014E7814D2974567165FE74FF2EDC37D04533984E05AAAD7F6FB723DC2EDCDF2862EB0073F6CDB9EB13BA974C4063861AA17306D6794A05425DA897A1734CD3714642F922172C3C1F3C534F
	FE724E4977F5DD6E545ECBBF3DF362DE7A6BBB3577525F58C9579E643D748C8B6EA47350C1982F3BB85F8FB8564D319F52B689F652E21606B8BE1B5AC570D611A8647B5028DDE3946B42EF8B2930EE5C0756C956024165A13B93E5FF55C95FEFDB2CD6D67EAD653158DC224463F1AF355162B0296CFE00E344EE72C2CCAFC42FDDC5E52D961BF800FDE1107765DE7A0C494EDBD4678B6A7F753FF5C978FF20A3EA2F6253FD2A73E3FB7F753A877F25BA587E491B68F3DCFAB50C77553827F291454A205C4431CFD6
	52FD1BD0B6F3AC45C4B0B71403B9A651E73BB0A8C7F2EC69E55C23B91FE367EA699E579A1D3E3286316CDE3A7F944AE60E69EB51BEB7470E55E2FBB3B8F68FFDAE0C05F292478A38AD193508DD9A677EF2EC5EB87ADB463122CB282301E34F55206C8C0E155422ECA847EE2C45D805F32C3787E3954D3104AA34AF06E3F7DDC43D899C5BD00D312A7D98B136865A8665A10EAD28C27B46B936319A5B1B493158EE0CD59C47DA2BD1B609E35F2BC65FB26B385EEA74AD17E37FCE5BAB04F29B47DE6EC6FF4FF0ECD7
	B57AABF16C398BE8DF90478C5C5F059C8B226DAD06F2D6BD4F499E34594031FF23D8A5140D9CFB2B87EDEE6758E8955AEC66D8F4955A6CD6F4F4234DB3B8F669A45A9C4A31E5BDE8F3A2475E281AE8733776D31B9B4066867E7B93B37AD14931D74C282315E34776E33F05F06CC9B3DEB3619C33B4E1FB519C0BE84276E2B8B6EA46768A76A2760DA6743716E326ECEC2F0DE36194BB83E58747D667200EF10EB56EC67B66F36C029E5B0B6358FDFA14CD6258829AD363BE1D3EF79F2E3F062F50DEB31ECB47AC87
	70CD673CEF2F70DC2B2DBEC146EFD65737D2FBED7F829D6766C09BD13C1D35FD3E57400B7B88FF8270A6F17EEF56F82EAD5FC2478DC3A3BC87B6623AF056D7D359AF5C8BF20448A289F9DEF040796B6F3C734EAA6ECFD02D761AFEA89D0B4601BF28916D5B596B5B1FC6BA86C7GEFF4A32E039757E2EC97F37B455AC076987B32BF2FC927A7AF93F7F17B7F5C235D9FAF519CA8G7E32A63467A80DE7AF1407B8F65BB85A9852046FF13BCF127EE676B6DD1AECBF20BFFB67C21B443E37A166CCDF960F090E6B9B
	A737EB596EC8DA1F82F5197B5146EB59588465A60E2D26E31D954A6E7D985B7BAFCE365F431F2DE1504E73F2EEB09D6CB7979100C76F479CD85963BB8758BB5645401B4C6DCC2EC2FF8B1A514E72EAFFF62E1C444E76E6A58764FD57D4EFAF60C34D2877DCB56A8DEE46B85F512D44F9B34D05E8281B5F0C3E7D3C1BBC8B40E458F2812EC113153C8646DFE7205C9F6838CE6CCB663A72D82E9D00DCBB00D8BB555F8B65218368771B97263227435B6F90E867A79E7D43FE5BB39B70B98750077F5B3D5643077DB8
	6249B23F627647F2DB259E0CD526915B79E90F679878079EA5F68574FDFDA570B699310D9FD6E13BD60E3DC03190A84F661844FE6F8365D8A346A57864E4F96BAFAED987F57AEFC0DC14FD5925541FBC408B8E22BF33777B4E5B5F527BE3BB70769E647B614D98132003FCBF3CB8D95E2A6D0CB868E967BCA8B78A6A7D63E3D4EF8C60F1DC6FB211E0D9ADBAFDDE8BE25FEDC2DB0CADE84B43136E4D7797B3C70B77B574C36A6FB860C1DCEFB8559B8165E80E5D100D36A436E0ECFF1F6D19AB0927C82EB0BB8BF3
	26723BA1EFBB738F31F7DB4B391DC3F4DED088F865A13469D6BD5AF4669046A7D6BF59382D3E5EE69C72549B8A654F655FAE48EB3FBE763E7D0366DAB870C79E72373E73448A0390685A452FD56F34DFB179FD4FDF21DEF3FE32C3113378DDE377147BD8B53FF96172152CA33276FACFAA67533B153603CF85EE53CFFA9439649ABF6BC815E4793C0C3F53BFD09BF81C9FBA25583924D75197D16DCFDF192C0F49EDBB23481D9B1F5A7A43EF4783377520C95133FD8ABE8E75A9F21F795D0760997FEF76ABF2CF7A
	DFEB7210FBDED464EE8DF8BD06492E98D47AE37710524EF47F6BF79E7A5BAD0A5CDCFF6B0F9510B795CA5EE4CFE1ED51F5D6317316E1C55F3D7E74113CD1698B1A023E39D6C547CC3F312814E341F863A92FEAE93B24037C0F1F9AF15135AB6C3791C5C73E5FFDAE159E71BE60D0649E3BB0357E9EB8274471FA27524E25A978288B48C77979AA203DB54C1EF017E24FD93F796FE94FAF2A820F7982C9515194104FCC6E23B15518F3F2EAB1BF66D6E2FECE75FD4E1782721149852B3EBF796F66C92EB155583C48
	9CC87CFD2F7B7E57C545763F0CABB60C783341EB3CFE7B12A277C5D360365F5E94F86E983ED26CBCA0A87A567A5367E567EC556F86BF4F1E5AFD65166C40EDFDE025E26B0BD90ACE3B5E6F1E35B2751E35DF6B2F2CDFD73D2758D0162D581057BD593EB176B7676E5FFFF38EDC31CB048C17D3D8B311F77F379FFFAC7C34B1B7CDC8BBACAC9B22EBA007050CB13218620671AB75CE206F3A4E891739E902A42CA05F72B6100FF957C9427B5B8D7681837BBC37612029FF88ABF249F786CDB633613868924941A491
	F8BDE5B570AFEE9B58972D09C02BFD4CA0598D64C359869896A4275D8A70A6A6F04064B075DB2473867E0DEC438E221EFE065AC0BFD6EDA05F36B610AF8C54013B2BBCD2623EDB2A964DFF6A04CBAFACBBACECA0EF12BAC4A77D5818E8B61AA47C8BCCAD42F287794B8BE49EFBD8C8F751C306CBBAEF955B045C0163642F1238A4513C9FBF0B641204F5EDC4D3A959EDD75AEAF28D515F4B54378969B672372204B52C5AEA328D1632EF1A5513508A297B1BE8BCE9EA013DEB293D2415925E4A5A5FE46F58FAA4BE
	D2AF243588AB2CF613394554AF591D0705655290793BACF62B596DE8E48DE5720F416A2139CD5CFD62EC89F9E267C68F3B7FE3462A04D5ADE90260F68A251413BC2414F08E7243B5A728921D07A572372F6C4E82DEF74D96E9679F8E2D6FCD93D2E5A7C9FEE4399D1230EC40B4E2311E0793A33DGE96664C8E02D53E4F38D581DA3E019414BB22C628ACA3E77E059CD373F59C395A8221270818BA508168E0A7611527D8383961B489B0038C2731BF9730427440BE70D7BBB6B0EBC7ACE9F6401D1500F1415517F
	4B697FFB487F6594A927C8799E88EE2260771FF73D9BFD26498376E4D3FBC8771734C08FCAFFD972600F1EE8C8DC8C5E35889974EF18C0A764A8DC6CE70257055F34F9E5F05CB7C99FB9C82A38C93B39EE5EA27170B0DDFD0C7B3222CE7F5C2D7AB4A19D2EE2369A8B49CB16D4A1F91D6C225643D5C5730EBC5911A114BC4D2D6417B699AF2E27252DF29DA1B2E5DD61F97953520A8979CB5077A6A6A2015770F4A025F514F5BD7DFF631403CB2472296C969E13C2B737BBC3655BB29F3E2529FCCB3B5AFD5B236D
	5B3BD71F259FAB16AE1BE0A979C7FA61AE4E23176B49FB9F7D555E8B87945F164BFA49FCA5035BCDEE538E0D52D565C51B62C53A2C1768DF66438B4F7EA292937B0B3C956E7268D3929FB2F9CE5760617FF829879A9D622513D0BAF275452DD7095B75823B8E77FAC401C46A580471C570410325810D12DA3EF1023C27C4106608263F7A62E71DB8B210AF90AC13049C7623F683FEABG66F34B8AC7AC3612A2258EFF5F8FF559726F688D6C8E29C6586F7089C2FEABCFE611CC3C4EA33987B5CAD7D528AEAA21A2
	9793AE7A257A70027C08FD778409D48F897A71552B4F536BBCEFEC44E61246997FFF75570D1E7D25173D7055DF642631FD02C426078461A974103FD123F4D5C5E11692857C848C2174C93D380AFD3ACD71098CD6FA5926CC9FDE102BEC3BC79430E753BDF88A7DC860F520A5F1D545A642F3A2017D2D5C56496D698E4E031F88487460117F315F2897FD257E1B904957E6797CFBBF155DEC9FEBEB37729BF576DB029D2DC441F440C33B7177G2307480FB2FDFD2F3AE344E435CAA66B70FE1B19FC3B3A793CA4AA
	5FC77E3015346FC29E3912551537923B4F2AE47E87D0CB8788C8AB2C787BA6GGC000GGD0CB818294G94G88G88GB201D9B0C8AB2C787BA6GGC000GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGB5A7GGGG
**end of data**/
}

/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private String getChangeCondition( String change )
{

	if( change.equalsIgnoreCase("After a Duration") )
	{
		return LMProgramDirectGear.CHANGE_DURATION;
	}
	else if( change.equalsIgnoreCase("Priority Change") )
	{
		return LMProgramDirectGear.CHANGE_PRIORITY;
	}
	else if( change.equalsIgnoreCase("Above Trigger") )
	{
		return LMProgramDirectGear.CHANGE_TRIGGER_OFFSET;
	}	
	else
		return LMProgramDirectGear.CHANGE_NONE;

}
/**
 * Return the JComboBoxCycleCountSndType property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public javax.swing.JComboBox getJComboBoxCycleCountSndType() {
	if (ivjJComboBoxCycleCountSndType == null) {
		try {
			ivjJComboBoxCycleCountSndType = new javax.swing.JComboBox();
			ivjJComboBoxCycleCountSndType.setName("JComboBoxCycleCountSndType");
			ivjJComboBoxCycleCountSndType.setPreferredSize(new java.awt.Dimension(136, 23));
			ivjJComboBoxCycleCountSndType.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxCycleCountSndType.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxCycleCountSndType.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.OPTION_FIXED_COUNT ) );
			ivjJComboBoxCycleCountSndType.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.OPTION_COUNT_DOWN ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxCycleCountSndType;
}

/**
 * Return the JComboBoxGroupSelection property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxGroupSelection() {
	if (ivjJComboBoxGroupSelection == null) {
		try {
			ivjJComboBoxGroupSelection = new javax.swing.JComboBox();
			ivjJComboBoxGroupSelection.setName("JComboBoxGroupSelection");
			ivjJComboBoxGroupSelection.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxGroupSelection.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LAST_CONTROLLED ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_ALWAYS_FIRST_GROUP ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LEAST_CONTROL_TIME ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxGroupSelection;
}
/**
 * Return the JComboBoxHowToStop property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxHowToStop() {
	if (ivjJComboBoxHowToStop == null) {
		try {
			ivjJComboBoxHowToStop = new javax.swing.JComboBox();
			ivjJComboBoxHowToStop.setName("JComboBoxHowToStop");
			ivjJComboBoxHowToStop.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_TIME_IN ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RESTORE ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxHowToStop;
}
/**
 * Return the JComboBoxNumGroups property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxNumGroups() {
	if (ivjJComboBoxNumGroups == null) {
		try {
			ivjJComboBoxNumGroups = new javax.swing.JComboBox();
			ivjJComboBoxNumGroups.setName("JComboBoxNumGroups");
			ivjJComboBoxNumGroups.setPreferredSize(new java.awt.Dimension(137, 23));
			ivjJComboBoxNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxNumGroups.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxNumGroups.addItem("All of Them");
			for( int i = 1; i < 26; i++ )
				ivjJComboBoxNumGroups.addItem( new Integer(i) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxNumGroups;
}
/**
 * Return the JComboBoxSendRate property value.
 * @return javax.swing.JComboBox
 */

/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRateDigits() {
	if (ivjJComboBoxSendRateDigits == null) {
		try {
			ivjJComboBoxSendRateDigits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateDigits.setName("JComboBoxSendRateDigits");
			ivjJComboBoxSendRateDigits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setPreferredSize(new java.awt.Dimension(78, 23));
			ivjJComboBoxSendRateDigits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateDigits.setMinimumSize(new java.awt.Dimension(78, 23));
			ivjJComboBoxSendRateDigits.setEditable(true);
			// user code begin {1}
			NewComboBoxEditor ncb = new NewComboBoxEditor();
			ncb.getJTextField().setDocument( 
				  new com.cannontech.common.gui.unchanging.LongRangeDocument(0, 1000) );
         	ivjJComboBoxSendRateDigits.setEditor( ncb );
			
			ivjJComboBoxSendRateDigits.addItem("0");
			ivjJComboBoxSendRateDigits.addItem("1");
			ivjJComboBoxSendRateDigits.addItem("2");
			ivjJComboBoxSendRateDigits.addItem("5");
			ivjJComboBoxSendRateDigits.addItem("8");
			ivjJComboBoxSendRateDigits.addItem("10");
			ivjJComboBoxSendRateDigits.addItem("15");
			ivjJComboBoxSendRateDigits.addItem("20");
			ivjJComboBoxSendRateDigits.addItem("30");
			ivjJComboBoxSendRateDigits.addItem("45");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateDigits;
}

/**
 * Return the JComboBoxSendRate11 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRateUnits() {
	if (ivjJComboBoxSendRateUnits == null) {
		try {
			ivjJComboBoxSendRateUnits = new javax.swing.JComboBox();
			ivjJComboBoxSendRateUnits.setName("JComboBoxSendRateUnits");
			ivjJComboBoxSendRateUnits.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setMaximumSize(new java.awt.Dimension(102, 23));
			ivjJComboBoxSendRateUnits.setPreferredSize(new java.awt.Dimension(102, 23));
			ivjJComboBoxSendRateUnits.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRateUnits.setMinimumSize(new java.awt.Dimension(102, 23));
			// user code begin {1}
			ivjJComboBoxSendRateUnits.addItem("minutes");
			ivjJComboBoxSendRateUnits.addItem("hours");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRateUnits;
}

/**
 * Return the JComboBoxShedTime property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxShedTime() {
	if (ivjJComboBoxShedTime == null) {
		try {
			ivjJComboBoxShedTime = new javax.swing.JComboBox();
			ivjJComboBoxShedTime.setName("JComboBoxShedTime");
			ivjJComboBoxShedTime.setPreferredSize(new java.awt.Dimension(137, 23));
			ivjJComboBoxShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxShedTime.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxShedTime.addItem("5 minutes");
			ivjJComboBoxShedTime.addItem("7 minutes");
			ivjJComboBoxShedTime.addItem("10 minutes");
			ivjJComboBoxShedTime.addItem("15 minutes");
			ivjJComboBoxShedTime.addItem("20 minutes");
			ivjJComboBoxShedTime.addItem("30 minutes");
			ivjJComboBoxShedTime.addItem("45 minutes");
			ivjJComboBoxShedTime.addItem("1 hour");
			ivjJComboBoxShedTime.addItem("2 hours");
			ivjJComboBoxShedTime.addItem("3 hours");
			ivjJComboBoxShedTime.addItem("4 hours");
			ivjJComboBoxShedTime.addItem("6 hours");
			ivjJComboBoxShedTime.addItem("8 hours");
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxShedTime;
}
/**
 * Return the JComboBoxWhenChange property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxWhenChange() {
	if (ivjJComboBoxWhenChange == null) {
		try {
			ivjJComboBoxWhenChange = new javax.swing.JComboBox();
			ivjJComboBoxWhenChange.setName("JComboBoxWhenChange");
			ivjJComboBoxWhenChange.setPreferredSize(new java.awt.Dimension(170, 23));
			ivjJComboBoxWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxWhenChange.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxWhenChange.addItem("Manually Only");
			ivjJComboBoxWhenChange.addItem("After a Duration");
			ivjJComboBoxWhenChange.addItem("Priority Change");
			ivjJComboBoxWhenChange.addItem("Above Trigger");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxWhenChange;
}
/**
 * Return the JCSpinFieldChangeDuration property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeDuration() {
	if (ivjJCSpinFieldChangeDuration == null) {
		try {
			ivjJCSpinFieldChangeDuration = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeDuration.setName("JCSpinFieldChangeDuration");
			ivjJCSpinFieldChangeDuration.setPreferredSize(new java.awt.Dimension(45, 20));
			ivjJCSpinFieldChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeDuration.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeDuration.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(3)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeDuration;
}
/**
 * Return the JCSpinFieldChangePriority property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangePriority() {
	if (ivjJCSpinFieldChangePriority == null) {
		try {
			ivjJCSpinFieldChangePriority = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangePriority.setName("JCSpinFieldChangePriority");
			ivjJCSpinFieldChangePriority.setPreferredSize(new java.awt.Dimension(35, 30));
			ivjJCSpinFieldChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangePriority.setMaximumSize(new java.awt.Dimension(40, 30));
			// user code begin {1}
			ivjJCSpinFieldChangePriority.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(9999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(0)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangePriority;
}
/**
 * Return the JCSpinFieldChangeTriggerNumber property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeTriggerNumber() {
	if (ivjJCSpinFieldChangeTriggerNumber == null) {
		try {
			ivjJCSpinFieldChangeTriggerNumber = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeTriggerNumber.setName("JCSpinFieldChangeTriggerNumber");
			ivjJCSpinFieldChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJCSpinFieldChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeTriggerNumber.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(1), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(1)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeTriggerNumber;
}
/**
 * Return the JCSpinFieldPercentReduction property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldPercentReduction() {
	if (ivjJCSpinFieldPercentReduction == null) {
		try {
			ivjJCSpinFieldPercentReduction = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldPercentReduction.setName("JCSpinFieldPercentReduction");
			ivjJCSpinFieldPercentReduction.setPreferredSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMaximumSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJCSpinFieldPercentReduction.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(100), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(100)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));

			ivjJCSpinFieldPercentReduction.setValue( new Integer(100) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldPercentReduction;
}
/**
 * Return the JLabelChangeDuration property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeDuration() {
	if (ivjJLabelChangeDuration == null) {
		try {
			ivjJLabelChangeDuration = new javax.swing.JLabel();
			ivjJLabelChangeDuration.setName("JLabelChangeDuration");
			ivjJLabelChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeDuration.setText("Change Duration:");
			ivjJLabelChangeDuration.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeDuration.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeDuration;
}
/**
 * Return the JLabelChangePriority property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangePriority() {
	if (ivjJLabelChangePriority == null) {
		try {
			ivjJLabelChangePriority = new javax.swing.JLabel();
			ivjJLabelChangePriority.setName("JLabelChangePriority");
			ivjJLabelChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangePriority.setText("Change Priority:");
			ivjJLabelChangePriority.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangePriority.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangePriority;
}
/**
 * Return the JLabelChangeTriggerNumber property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerNumber() {
	if (ivjJLabelChangeTriggerNumber == null) {
		try {
			ivjJLabelChangeTriggerNumber = new javax.swing.JLabel();
			ivjJLabelChangeTriggerNumber.setName("JLabelChangeTriggerNumber");
			ivjJLabelChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerNumber.setText("Trigger Number:");
			ivjJLabelChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerNumber.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerNumber;
}
/**
 * Return the JLabelChangeTriggerOffset property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerOffset() {
	if (ivjJLabelChangeTriggerOffset == null) {
		try {
			ivjJLabelChangeTriggerOffset = new javax.swing.JLabel();
			ivjJLabelChangeTriggerOffset.setName("JLabelChangeTriggerOffset");
			ivjJLabelChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerOffset.setText("Trigger Offset:");
			ivjJLabelChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerOffset.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerOffset;
}
/**
 * Return the JLabelCycleCntSndType property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCycleCntSndType() {
	if (ivjJLabelCycleCntSndType == null) {
		try {
			ivjJLabelCycleCntSndType = new javax.swing.JLabel();
			ivjJLabelCycleCntSndType.setName("JLabelCycleCntSndType");
			ivjJLabelCycleCntSndType.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelCycleCntSndType.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelCycleCntSndType.setText("Cycle Count Send Type:");
			ivjJLabelCycleCntSndType.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCycleCntSndType;
}
/**
 * Return the JLabelGroupSelection property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelGroupSelection() {
	if (ivjJLabelGroupSelection == null) {
		try {
			ivjJLabelGroupSelection = new javax.swing.JLabel();
			ivjJLabelGroupSelection.setName("JLabelGroupSelection");
			ivjJLabelGroupSelection.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelGroupSelection.setText("Group Selection Method:");
			ivjJLabelGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelGroupSelection;
}
/**
 * Return the JLabelHowToStop property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHowToStop() {
	if (ivjJLabelHowToStop == null) {
		try {
			ivjJLabelHowToStop = new javax.swing.JLabel();
			ivjJLabelHowToStop.setName("JLabelHowToStop");
			ivjJLabelHowToStop.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelHowToStop.setText("How to Stop Control:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHowToStop;
}
/**
 * Return the JLabelMinutesChDur property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMinutesChDur() {
	if (ivjJLabelMinutesChDur == null) {
		try {
			ivjJLabelMinutesChDur = new javax.swing.JLabel();
			ivjJLabelMinutesChDur.setName("JLabelMinutesChDur");
			ivjJLabelMinutesChDur.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMinutesChDur.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelMinutesChDur.setText("(min.)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMinutesChDur;
}
/**
 * Return the JLabelNumGroups property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNumGroups() {
	if (ivjJLabelNumGroups == null) {
		try {
			ivjJLabelNumGroups = new javax.swing.JLabel();
			ivjJLabelNumGroups.setName("JLabelNumGroups");
			ivjJLabelNumGroups.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelNumGroups.setText("# of Groups Each Time:");
			ivjJLabelNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNumGroups;
}
/**
 * Return the JLabelPercentReduction property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPercentReduction() {
	if (ivjJLabelPercentReduction == null) {
		try {
			ivjJLabelPercentReduction = new javax.swing.JLabel();
			ivjJLabelPercentReduction.setName("JLabelPercentReduction");
			ivjJLabelPercentReduction.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelPercentReduction.setText("Group Capacity Reduction %:");
			ivjJLabelPercentReduction.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelPercentReduction.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPercentReduction;
}
/**
 * Return the JLabelSendRate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSendRate() {
	if (ivjJLabelSendRate == null) {
		try {
			ivjJLabelSendRate = new javax.swing.JLabel();
			ivjJLabelSendRate.setName("JLabelSendRate");
			ivjJLabelSendRate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelSendRate.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelSendRate.setText("Command Resend Rate:");
			ivjJLabelSendRate.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSendRate;
}
/**
 * Return the JLabelShedTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelShedTime() {
	if (ivjJLabelShedTime == null) {
		try {
			ivjJLabelShedTime = new javax.swing.JLabel();
			ivjJLabelShedTime.setName("JLabelShedTime");
			ivjJLabelShedTime.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelShedTime.setText("Shed Time:");
			ivjJLabelShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelShedTime;
}
/**
 * Return the JLabelWhenChange property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelWhenChange() {
	if (ivjJLabelWhenChange == null) {
		try {
			ivjJLabelWhenChange = new javax.swing.JLabel();
			ivjJLabelWhenChange.setName("JLabelWhenChange");
			ivjJLabelWhenChange.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelWhenChange.setText("When to Change:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelWhenChange;
}
/**
 * Return the JPanelChangeMethod property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelChangeMethod() {
	if (ivjJPanelChangeMethod == null) {
		try {
			ivjJPanelChangeMethod = new javax.swing.JPanel();
			ivjJPanelChangeMethod.setName("JPanelChangeMethod");
			ivjJPanelChangeMethod.setLayout(new java.awt.GridBagLayout());
			ivjJPanelChangeMethod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJPanelChangeMethod.setMaximumSize(new java.awt.Dimension(360, 90));
			ivjJPanelChangeMethod.setPreferredSize(new java.awt.Dimension(330, 87));
			ivjJPanelChangeMethod.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJPanelChangeMethod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);

			java.awt.GridBagConstraints constraintsJLabelChangeDuration = new java.awt.GridBagConstraints();
			constraintsJLabelChangeDuration.gridx = 1; constraintsJLabelChangeDuration.gridy = 2;
			constraintsJLabelChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeDuration.ipadx = -5;
			constraintsJLabelChangeDuration.ipady = 6;
			constraintsJLabelChangeDuration.insets = new java.awt.Insets(1, 5, 3, 5);
			getJPanelChangeMethod().add(getJLabelChangeDuration(), constraintsJLabelChangeDuration);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeDuration = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeDuration.gridx = 2; constraintsJCSpinFieldChangeDuration.gridy = 2;
			constraintsJCSpinFieldChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeDuration.ipadx = 34;
			constraintsJCSpinFieldChangeDuration.ipady = 19;
			constraintsJCSpinFieldChangeDuration.insets = new java.awt.Insets(1, 5, 3, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeDuration(), constraintsJCSpinFieldChangeDuration);

			java.awt.GridBagConstraints constraintsJLabelMinutesChDur = new java.awt.GridBagConstraints();
			constraintsJLabelMinutesChDur.gridx = 3; constraintsJLabelMinutesChDur.gridy = 2;
			constraintsJLabelMinutesChDur.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelMinutesChDur.ipadx = 5;
			constraintsJLabelMinutesChDur.ipady = -2;
			constraintsJLabelMinutesChDur.insets = new java.awt.Insets(5, 1, 5, 2);
			getJPanelChangeMethod().add(getJLabelMinutesChDur(), constraintsJLabelMinutesChDur);

			java.awt.GridBagConstraints constraintsJLabelChangePriority = new java.awt.GridBagConstraints();
			constraintsJLabelChangePriority.gridx = 4; constraintsJLabelChangePriority.gridy = 2;
			constraintsJLabelChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangePriority.ipadx = -13;
			constraintsJLabelChangePriority.ipady = 6;
			constraintsJLabelChangePriority.insets = new java.awt.Insets(1, 3, 3, 2);
			getJPanelChangeMethod().add(getJLabelChangePriority(), constraintsJLabelChangePriority);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangePriority = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangePriority.gridx = 5; constraintsJCSpinFieldChangePriority.gridy = 2;
			constraintsJCSpinFieldChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangePriority.ipadx = 34;
			constraintsJCSpinFieldChangePriority.ipady = 19;
			constraintsJCSpinFieldChangePriority.insets = new java.awt.Insets(1, 3, 3, 8);
			getJPanelChangeMethod().add(getJCSpinFieldChangePriority(), constraintsJCSpinFieldChangePriority);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerNumber.gridx = 1; constraintsJLabelChangeTriggerNumber.gridy = 3;
			constraintsJLabelChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerNumber.ipadx = -45;
			constraintsJLabelChangeTriggerNumber.ipady = 6;
			constraintsJLabelChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 5);
			getJPanelChangeMethod().add(getJLabelChangeTriggerNumber(), constraintsJLabelChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerOffset.gridx = 4; constraintsJLabelChangeTriggerOffset.gridy = 3;
			constraintsJLabelChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerOffset.ipadx = -63;
			constraintsJLabelChangeTriggerOffset.insets = new java.awt.Insets(8, 3, 17, 12);
			getJPanelChangeMethod().add(getJLabelChangeTriggerOffset(), constraintsJLabelChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJTextFieldChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJTextFieldChangeTriggerOffset.gridx = 5; constraintsJTextFieldChangeTriggerOffset.gridy = 3;
			constraintsJTextFieldChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextFieldChangeTriggerOffset.weightx = 1.0;
			constraintsJTextFieldChangeTriggerOffset.ipadx = 31;
			constraintsJTextFieldChangeTriggerOffset.insets = new java.awt.Insets(4, 3, 15, 8);
			getJPanelChangeMethod().add(getJTextFieldChangeTriggerOffset(), constraintsJTextFieldChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeTriggerNumber.gridx = 2; constraintsJCSpinFieldChangeTriggerNumber.gridy = 3;
			constraintsJCSpinFieldChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeTriggerNumber.ipadx = 34;
			constraintsJCSpinFieldChangeTriggerNumber.ipady = 19;
			constraintsJCSpinFieldChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeTriggerNumber(), constraintsJCSpinFieldChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelWhenChange = new java.awt.GridBagConstraints();
			constraintsJLabelWhenChange.gridx = 1; constraintsJLabelWhenChange.gridy = 1;
			constraintsJLabelWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelWhenChange.ipadx = 3;
			constraintsJLabelWhenChange.ipady = 4;
			constraintsJLabelWhenChange.insets = new java.awt.Insets(0, 5, 4, 5);
			getJPanelChangeMethod().add(getJLabelWhenChange(), constraintsJLabelWhenChange);

			java.awt.GridBagConstraints constraintsJComboBoxWhenChange = new java.awt.GridBagConstraints();
			constraintsJComboBoxWhenChange.gridx = 3; constraintsJComboBoxWhenChange.gridy = 1;
			constraintsJComboBoxWhenChange.gridwidth = 3;
			constraintsJComboBoxWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJComboBoxWhenChange.weightx = 1.0;
			constraintsJComboBoxWhenChange.ipadx = 170;
			constraintsJComboBoxWhenChange.ipady = 23;
			constraintsJComboBoxWhenChange.insets = new java.awt.Insets(0, 3, 1, 8);
			getJPanelChangeMethod().add(getJComboBoxWhenChange(), constraintsJComboBoxWhenChange);
			// user code begin {1}
			jComboBoxWhenChange_ActionPerformed(null);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelChangeMethod;
}

/**
 * Return the JTextFieldChangeTriggerOffset property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldChangeTriggerOffset() {
	if (ivjJTextFieldChangeTriggerOffset == null) {
		try {
			ivjJTextFieldChangeTriggerOffset = new javax.swing.JTextField();
			ivjJTextFieldChangeTriggerOffset.setName("JTextFieldChangeTriggerOffset");
			ivjJTextFieldChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJTextFieldChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJTextFieldChangeTriggerOffset.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999.9999, 99999.9999, 4) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldChangeTriggerOffset;
}
/**
 * getValue method comment.
 */
public Object getValue(Object o) 
{
	com.cannontech.database.db.device.lm.LMProgramDirectGear gear = null;
	
	gear = (LMProgramDirectGear)o;
	
	if( getJComboBoxHowToStop().getSelectedItem() != null )
	{
		gear.setMethodStopType( 
			com.cannontech.common.util.StringUtils.removeChars( ' ', getJComboBoxHowToStop().getSelectedItem().toString() ) );
	}

	gear.setMethodOptionType((String)getJComboBoxCycleCountSndType().getSelectedItem());
	
	gear.setPercentReduction( new Integer( ((Number)getJCSpinFieldPercentReduction().getValue()).intValue() ) );
	
	gear.setChangeCondition( getChangeCondition(getJComboBoxWhenChange().getSelectedItem().toString()) );

	gear.setChangeDuration( new Integer( ((Number)getJCSpinFieldChangeDuration().getValue()).intValue() * 60 ) );
	gear.setChangePriority( new Integer( ((Number)getJCSpinFieldChangePriority().getValue()).intValue() ) );
	gear.setChangeTriggerNumber( new Integer( ((Number)getJCSpinFieldChangeTriggerNumber().getValue()).intValue() ) );
	
	if( getJTextFieldChangeTriggerOffset().getText() == null || getJTextFieldChangeTriggerOffset().getText().length() <= 0 )
		gear.setChangeTriggerOffset( new Double(0.0) );
	else
		gear.setChangeTriggerOffset( Double.valueOf(getJTextFieldChangeTriggerOffset().getText()) );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	t.setShedTime( com.cannontech.common.util.CtiUtilities.getIntervalComboBoxSecondsValue( getJComboBoxShedTime() ) );

	t.setNumberOfGroups( getJComboBoxNumGroups().getSelectedItem() );

	String sendRateString = (String)(getJComboBoxSendRateDigits().getSelectedItem()) + " " + (String)(getJComboBoxSendRateUnits().getSelectedItem());	
	t.setRefreshRate( com.cannontech.common.util.CtiUtilities.getIntervalSecondsValue( sendRateString ) );
		
	t.setGroupSelectionMethod( StringUtils.removeChars( ' ', getJComboBoxGroupSelection().getSelectedItem().toString() ) );
		
	return t;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	getJCSpinFieldChangeDuration().addValueListener(this);
	getJCSpinFieldChangePriority().addValueListener(this);
	getJCSpinFieldChangeTriggerNumber().addValueListener(this);
	getJCSpinFieldPercentReduction().addValueListener(this);
	getJComboBoxWhenChange().addActionListener(this);
	
	getJComboBoxShedTime().addActionListener(this);
	getJComboBoxNumGroups().addActionListener(this);
	getJComboBoxSendRateDigits().addActionListener(this);
	getJComboBoxSendRateUnits().addActionListener(this);
	getJComboBoxGroupSelection().addActionListener(this);
	getJComboBoxHowToStop().addActionListener(this);
	getJTextFieldChangeTriggerOffset().addCaretListener(this);
	
	// user code end
	
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("TimeRefreshGearPanel");
		setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
		setLayout(new java.awt.GridBagLayout());
		setPreferredSize(new java.awt.Dimension(402, 430));
		setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
		setSize(402, 430);
		setMinimumSize(new java.awt.Dimension(0, 0));

		java.awt.GridBagConstraints constraintsJLabelShedTime = new java.awt.GridBagConstraints();
		constraintsJLabelShedTime.gridx = 1; constraintsJLabelShedTime.gridy = 1;
		constraintsJLabelShedTime.ipadx = 83;
		constraintsJLabelShedTime.insets = new java.awt.Insets(11, 10, 7, 1);
		add(getJLabelShedTime(), constraintsJLabelShedTime);

		java.awt.GridBagConstraints constraintsJComboBoxShedTime = new java.awt.GridBagConstraints();
		constraintsJComboBoxShedTime.gridx = 2; constraintsJComboBoxShedTime.gridy = 1;
		constraintsJComboBoxShedTime.gridwidth = 3;
		constraintsJComboBoxShedTime.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxShedTime.weightx = 1.0;
		constraintsJComboBoxShedTime.ipadx = 143;
		constraintsJComboBoxShedTime.ipady = 23;
		constraintsJComboBoxShedTime.insets = new java.awt.Insets(10, 1, 1, 101);
		add(getJComboBoxShedTime(), constraintsJComboBoxShedTime);

		java.awt.GridBagConstraints constraintsJLabelNumGroups = new java.awt.GridBagConstraints();
		constraintsJLabelNumGroups.gridx = 1; constraintsJLabelNumGroups.gridy = 2;
		constraintsJLabelNumGroups.ipadx = 17;
		constraintsJLabelNumGroups.insets = new java.awt.Insets(6, 10, 5, 1);
		add(getJLabelNumGroups(), constraintsJLabelNumGroups);

		java.awt.GridBagConstraints constraintsJComboBoxNumGroups = new java.awt.GridBagConstraints();
		constraintsJComboBoxNumGroups.gridx = 2; constraintsJComboBoxNumGroups.gridy = 2;
		constraintsJComboBoxNumGroups.gridwidth = 3;
		constraintsJComboBoxNumGroups.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxNumGroups.weightx = 1.0;
		constraintsJComboBoxNumGroups.ipadx = 143;
		constraintsJComboBoxNumGroups.ipady = 23;
		constraintsJComboBoxNumGroups.insets = new java.awt.Insets(2, 1, 2, 101);
		add(getJComboBoxNumGroups(), constraintsJComboBoxNumGroups);

		java.awt.GridBagConstraints constraintsJLabelSendRate = new java.awt.GridBagConstraints();
		constraintsJLabelSendRate.gridx = 1; constraintsJLabelSendRate.gridy = 4;
		constraintsJLabelSendRate.ipadx = 8;
		constraintsJLabelSendRate.insets = new java.awt.Insets(7, 10, 5, 1);
		add(getJLabelSendRate(), constraintsJLabelSendRate);

		java.awt.GridBagConstraints constraintsJLabelGroupSelection = new java.awt.GridBagConstraints();
		constraintsJLabelGroupSelection.gridx = 1; constraintsJLabelGroupSelection.gridy = 5;
		constraintsJLabelGroupSelection.ipadx = 12;
		constraintsJLabelGroupSelection.insets = new java.awt.Insets(7, 10, 6, 1);
		add(getJLabelGroupSelection(), constraintsJLabelGroupSelection);

		java.awt.GridBagConstraints constraintsJComboBoxGroupSelection = new java.awt.GridBagConstraints();
		constraintsJComboBoxGroupSelection.gridx = 2; constraintsJComboBoxGroupSelection.gridy = 5;
		constraintsJComboBoxGroupSelection.gridwidth = 3;
		constraintsJComboBoxGroupSelection.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxGroupSelection.weightx = 1.0;
		constraintsJComboBoxGroupSelection.ipadx = 181;
		constraintsJComboBoxGroupSelection.ipady = 23;
		constraintsJComboBoxGroupSelection.insets = new java.awt.Insets(3, 1, 3, 63);
		add(getJComboBoxGroupSelection(), constraintsJComboBoxGroupSelection);

		java.awt.GridBagConstraints constraintsJLabelHowToStop = new java.awt.GridBagConstraints();
		constraintsJLabelHowToStop.gridx = 1; constraintsJLabelHowToStop.gridy = 6;
		constraintsJLabelHowToStop.ipadx = 4;
		constraintsJLabelHowToStop.insets = new java.awt.Insets(5, 11, 9, 30);
		add(getJLabelHowToStop(), constraintsJLabelHowToStop);

		java.awt.GridBagConstraints constraintsJLabelPercentReduction = new java.awt.GridBagConstraints();
		constraintsJLabelPercentReduction.gridx = 1; constraintsJLabelPercentReduction.gridy = 7;
		constraintsJLabelPercentReduction.gridwidth = 2;
		constraintsJLabelPercentReduction.ipadx = 53;
		constraintsJLabelPercentReduction.ipady = 3;
		constraintsJLabelPercentReduction.insets = new java.awt.Insets(6, 11, 4, 8);
		add(getJLabelPercentReduction(), constraintsJLabelPercentReduction);

		java.awt.GridBagConstraints constraintsJComboBoxHowToStop = new java.awt.GridBagConstraints();
		constraintsJComboBoxHowToStop.gridx = 2; constraintsJComboBoxHowToStop.gridy = 6;
		constraintsJComboBoxHowToStop.gridwidth = 3;
		constraintsJComboBoxHowToStop.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxHowToStop.weightx = 1.0;
		constraintsJComboBoxHowToStop.ipadx = 55;
		constraintsJComboBoxHowToStop.insets = new java.awt.Insets(3, 1, 4, 63);
		add(getJComboBoxHowToStop(), constraintsJComboBoxHowToStop);

		java.awt.GridBagConstraints constraintsJCSpinFieldPercentReduction = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldPercentReduction.gridx = 3; constraintsJCSpinFieldPercentReduction.gridy = 7;
		constraintsJCSpinFieldPercentReduction.gridwidth = 2;
		constraintsJCSpinFieldPercentReduction.ipadx = 88;
		constraintsJCSpinFieldPercentReduction.ipady = 20;
		constraintsJCSpinFieldPercentReduction.insets = new java.awt.Insets(4, 9, 3, 121);
		add(getJCSpinFieldPercentReduction(), constraintsJCSpinFieldPercentReduction);

		java.awt.GridBagConstraints constraintsJPanelChangeMethod = new java.awt.GridBagConstraints();
		constraintsJPanelChangeMethod.gridx = 1; constraintsJPanelChangeMethod.gridy = 8;
		constraintsJPanelChangeMethod.gridwidth = 4;
		constraintsJPanelChangeMethod.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelChangeMethod.weightx = 1.0;
		constraintsJPanelChangeMethod.weighty = 1.0;
		constraintsJPanelChangeMethod.ipadx = 6;
		constraintsJPanelChangeMethod.insets = new java.awt.Insets(3, 5, 137, 61);
		add(getJPanelChangeMethod(), constraintsJPanelChangeMethod);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateDigits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateDigits.gridx = 2; constraintsJComboBoxSendRateDigits.gridy = 4;
		constraintsJComboBoxSendRateDigits.gridwidth = 2;
		constraintsJComboBoxSendRateDigits.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxSendRateDigits.weightx = 1.0;
		constraintsJComboBoxSendRateDigits.insets = new java.awt.Insets(3, 1, 2, 0);
		add(getJComboBoxSendRateDigits(), constraintsJComboBoxSendRateDigits);

		java.awt.GridBagConstraints constraintsJComboBoxSendRateUnits = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRateUnits.gridx = 4; constraintsJComboBoxSendRateUnits.gridy = 4;
		constraintsJComboBoxSendRateUnits.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxSendRateUnits.weightx = 1.0;
		constraintsJComboBoxSendRateUnits.insets = new java.awt.Insets(3, 1, 2, 63);
		add(getJComboBoxSendRateUnits(), constraintsJComboBoxSendRateUnits);

		java.awt.GridBagConstraints constraintsJComboBoxCycleCountSndType = new java.awt.GridBagConstraints();
		constraintsJComboBoxCycleCountSndType.gridx = 2; constraintsJComboBoxCycleCountSndType.gridy = 3;
		constraintsJComboBoxCycleCountSndType.gridwidth = 3;
		constraintsJComboBoxCycleCountSndType.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxCycleCountSndType.weightx = 1.0;
		constraintsJComboBoxCycleCountSndType.ipadx = 17;
		constraintsJComboBoxCycleCountSndType.insets = new java.awt.Insets(3, 1, 2, 101);
		add(getJComboBoxCycleCountSndType(), constraintsJComboBoxCycleCountSndType);

		java.awt.GridBagConstraints constraintsJLabelCycleCntSndType = new java.awt.GridBagConstraints();
		constraintsJLabelCycleCntSndType.gridx = 1; constraintsJLabelCycleCntSndType.gridy = 3;
		constraintsJLabelCycleCntSndType.insets = new java.awt.Insets(6, 10, 6, 17);
		add(getJLabelCycleCntSndType(), constraintsJLabelCycleCntSndType);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	getJComboBoxWhenChange().setSelectedItem( LMProgramDirectGear.CHANGE_NONE );
	getJLabelSendRate().setText("Refresh/Resend Rate:");
	getJComboBoxShedTime().setSelectedItem("1 hour");
	getJComboBoxSendRateDigits().setSelectedItem("30");
	getJComboBoxSendRateUnits().setSelectedItem("minutes");
		try
	{
		initConnections();
	}
	catch(Exception e)	{ }
	// user code end
}

/**
 * Comment
 */
public void jComboBoxWhenChange_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getJLabelChangeDuration().setVisible(false);
	getJCSpinFieldChangeDuration().setVisible(false);
	getJLabelMinutesChDur().setVisible(false);
	
	getJLabelChangePriority().setVisible(false);
	getJCSpinFieldChangePriority().setVisible(false);
	
	getJLabelChangeTriggerNumber().setVisible(false);
	getJCSpinFieldChangeTriggerNumber().setVisible(false);

	getJLabelChangeTriggerOffset().setVisible(false);
	getJTextFieldChangeTriggerOffset().setVisible(false);

	
	if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_NONE )
		 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Manually Only" ) )
	{
		//None
		return;
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_DURATION )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "After a Duration" ) )
	{
		//Duration
		getJLabelChangeDuration().setVisible(true);
		getJCSpinFieldChangeDuration().setVisible(true);
		getJLabelMinutesChDur().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_PRIORITY )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Priority Change" ) )
	{
		//Priority
		getJLabelChangePriority().setVisible(true);
		getJCSpinFieldChangePriority().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_TRIGGER_OFFSET )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Above Trigger" ) )
	{
		//TriggerOffset
		getJLabelChangeTriggerNumber().setVisible(true);
		getJCSpinFieldChangeTriggerNumber().setVisible(true);

		getJLabelChangeTriggerOffset().setVisible(true);
		getJTextFieldChangeTriggerOffset().setVisible(true);
	}
	else
		throw new Error("Unknown LMProgramDirectGear control condition found, the value = " + getJComboBoxWhenChange().getSelectedItem().toString() );


	fireInputUpdate();
	return;
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		TimeRefreshGearPanel aTimeRefreshGearPanel;
		aTimeRefreshGearPanel = new TimeRefreshGearPanel();
		frame.setContentPane(aTimeRefreshGearPanel);
		frame.setSize(aTimeRefreshGearPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private void setChangeCondition(String change) 
{
	if( change == null )
		return;

	if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_NONE) )
	{
		getJComboBoxWhenChange().setSelectedItem("Manually Only");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_DURATION) )
	{
		getJComboBoxWhenChange().setSelectedItem("After a Duration");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_PRIORITY) )
	{
		getJComboBoxWhenChange().setSelectedItem("Priority Change");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_TRIGGER_OFFSET) )
	{
		getJComboBoxWhenChange().setSelectedItem("Above Trigger");
	}	
	
}
/**
 * setValue method comment.
 */
public void setValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	if( o == null )
	{
		return;
	}
	else
		gear = (LMProgramDirectGear)o;

	getJComboBoxHowToStop().setSelectedItem( StringUtils.addCharBetweenWords( ' ', gear.getMethodStopType() ) );

	getJCSpinFieldPercentReduction().setValue( gear.getPercentReduction() );
	
	setChangeCondition( gear.getChangeCondition() );
	getJCSpinFieldChangeDuration().setValue( new Integer( gear.getChangeDuration().intValue() / 60 ) );
	getJCSpinFieldChangePriority().setValue( gear.getChangePriority() );
	getJCSpinFieldChangeTriggerNumber().setValue( gear.getChangeTriggerNumber() );	
	getJTextFieldChangeTriggerOffset().setText( gear.getChangeTriggerOffset().toString() );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxShedTime(), t.getShedTime().intValue() );

	getJComboBoxNumGroups().setSelectedItem( t.getNumberOfGroups() );
	
	getJComboBoxCycleCountSndType().setSelectedItem(t.getMethodOptionType());

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxSendRateDigits(), getJComboBoxSendRateUnits(), t.getRefreshRate().intValue() );
		
	getJComboBoxGroupSelection().setSelectedItem( StringUtils.addCharBetweenWords( ' ', t.getGroupSelectionMethod() ) );
	
	
}
/**
 * valueChanged method comment.
 */
public void valueChanged(com.klg.jclass.util.value.JCValueEvent arg1) 
{
	//fire this event for all JCSpinFields!!
	this.fireInputUpdate();
}
/**
 * valueChanging method comment.
 */
public void valueChanging(com.klg.jclass.util.value.JCValueEvent arg1) {}

/**
* @return
*/

/**
* @param box
*/
public void setJComboBoxCycleCountSndType(javax.swing.JComboBox box) 
{
	ivjJComboBoxCycleCountSndType = box;
}

}
