package com.cannontech.dbeditor.wizard.device.lmprogram;
/**
 * Insert the type's description here.
 * Creation date: (8/1/2002 11:56:33 AM)
 * @author: 
 */
import java.awt.Dimension;
import com.cannontech.database.db.device.lm.LMProgramDirectGear;
import com.cannontech.common.util.StringUtils;
 
public class TimeRefreshGearPanel extends GenericGearPanel {
	private javax.swing.JComboBox ivjJComboBoxGroupSelection = null;
	private javax.swing.JComboBox ivjJComboBoxHowToStop = null;
	private javax.swing.JComboBox ivjJComboBoxNumGroups = null;
	private javax.swing.JComboBox ivjJComboBoxSendRate = null;
	private javax.swing.JComboBox ivjJComboBoxShedTime = null;
	private javax.swing.JComboBox ivjJComboBoxWhenChange = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeDuration = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangePriority = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeTriggerNumber = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldPercentReduction = null;
	private javax.swing.JLabel ivjJLabelChangeDuration = null;
	private javax.swing.JLabel ivjJLabelChangePriority = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerNumber = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerOffset = null;
	private javax.swing.JLabel ivjJLabelGroupSelection = null;
	private javax.swing.JLabel ivjJLabelHowToStop = null;
	private javax.swing.JLabel ivjJLabelMinutesChDur = null;
	private javax.swing.JLabel ivjJLabelNumGroups = null;
	private javax.swing.JLabel ivjJLabelPercentReduction = null;
	private javax.swing.JLabel ivjJLabelSendRate = null;
	private javax.swing.JLabel ivjJLabelShedTime = null;
	private javax.swing.JLabel ivjJLabelWhenChange = null;
	private javax.swing.JPanel ivjJPanelChangeMethod = null;
	private javax.swing.JTextField ivjJTextFieldChangeTriggerOffset = null;

/**
 * TimeRefreshGearPanel constructor comment.
 */
public TimeRefreshGearPanel() {
	super();
	initialize();
}

/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJComboBoxWhenChange()) 
		connEtoC1(e);
	if (e.getSource() == getJComboBoxShedTime()) 
		connEtoC4(e);
	if (e.getSource() == getJComboBoxNumGroups()) 
		connEtoC5(e);
	if (e.getSource() == getJComboBoxSendRate()) 
		connEtoC7(e);
	if (e.getSource() == getJComboBoxGroupSelection()) 
		connEtoC8(e);
	if (e.getSource() == getJComboBoxHowToStop()) 
		connEtoC10(e);
	// user code begin {2}
	// user code end
}


	/**
	 * Called when the caret position is updated.
	 *
	 * @param e the caret event
	 */
public void caretUpdate(javax.swing.event.CaretEvent e) {}


/**
 * connEtoC1:  (JComboBoxWhenChange.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.jComboBoxWhenChange_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jComboBoxWhenChange_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC10:  (JComboBoxHowToStop.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC4:  (JComboBoxShedTime.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC5:  (JComboBoxNumGroups.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC7:  (JComboBoxSendRate.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC8:  (JComboBoxGroupSelection.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G90D485ADGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155FD8FF8D45535AFD56C655DC71556E873B477AB3D2245167652AB6D4D3574B67543BE50D4D0020D1AEA2A29249884CBEC230DF8721799121089848292E440908206E482289123A4A17C890C90E1107CA5B3491CA4A31319F466048C98702E3D77D97B1C191C19CC7475FDDE3EEFE54E7E6D35767A33575EE71F33778CC2717669B9991945021011A3487F5E4B9004B8C99086EE39749344AA66B7688555
	3F9DC0C5422E11EC782C053A323AC63DC10890F4D0B6C3F9C6E5233E842EB788DE0B598E97C17414C15D01475C432175181BD04F9ADA7EF1E5BEFC2E83EA81CC820A81B2888FD6EE1671C8A82F132F89E5E48A4250824273CE7EE6951E3D0071F54A1F6914A73132D42E0F06B261D9841434C0E91399F95321DA395C796D88A17521724C8222CB55BED253C3CCF6C07EB48ABF2101489252361C044F3A16CB7D9F753A872BFAEDAE175BA5093D83D5769E516E105C1E2A9147D51B47DEE597AFBBFA45AA67601047
	5D6F318D9EBAE4F18C0AE745BE0F689DB8AE5ABCADB6176894047807088F9D79BA5A3EA0CC07B233775102BA591E08CB91C262DDDB025ADB7AB033337EE1455E51458319AB9FA6ED6B77654BF213209C8D44F4FE328FF59E0CED504F09A518AB0F70BA61FAB2D0D4AC5A7261EE342575733B0469F526B505C1ECC90B15ED782DE24B22766AB5DBE8AE449FA57D5989F51300A20022016201520036529C3C35E9AFFCB674C8C75C0303EED74350D023536E7958ED971DF0FD6890544858D931576D011CE4F9E64D2F
	543087497008FF0EA9F9F1C1403C18F5768EE16E4FEE494C5170ED4E120A4CB2390D5AC7945F18DF52F162D7AB609250D42099C07300129EC13FFE5FF4E0BC3F1AA117BCAE1B735CF04F104DA3B58EBB1CF651A37BD738AF14FFDA446436CDD80E45E56681F5DC926EBB1939C6A3AE89B32BB30505AC9E1B97AAF1E13ABF8D2A3BF661587E20E3F3A14943E7E99E1A61BAC34ED10627D0FC3A8AE7B9AED11C14E7C3DD71A24C5B56F56803B97BE641D0F3CA530748876AB3FD0B18BD53968576EDCBB319DF66829E
	8F3492C877E8033E8228892875D16C5F0A2355E166ED0B2AEF196C9F0EEE02CF51A7F9EC4DAE2FE4F3750A1F5ABC8EDB0FD3748AB24F322344769EBF3995F4BC75020E6322CB7458A4075B852D5B86C5C8A4AF63C9BBDAC4F8BCA22DA53390A8989C9230DD6198106034F92573C3F61BA4AA9C2CDEF70C4472326DD3E8919AA01971A80979881D33FCF09D8144E2F56DA441D2201C7D98466546E36B617394A43668BCF4284951CB4C30F92E207EEB4749DCA2DE96DDD213B8A43A6CF061156BA69F57ABF169F3F3
	1B7F1962E40C9C81433D9C1FF63C08615006BA4AD89FC96BED1264F1748CCB62B9D1129C2EFEC5FEBA35456BB77C3C02BC46CF119C5B8CFE19006A39FFFBCEECD079E7F63BAF8D8FD9C84F49F19A24732C85781D0F61BDB1B90F5CA327BD06F97AE2AB66E9D3417F91AA17B4EB66A921590F317C1C7FD860D87BB3EDD351F1B52FB548581B761876581B785CF2EBD09DD9DF31FDC2AC6ECB4DA46EAB41667C458D7A4A4598F77B89A39BEF0DB62F08A36C0C87FACC34ABD946F85B1B0367182DD9BB477A1B35F3EC
	30B9F48E8DB7EB65902B9BEDA677967708CB15135FE8DECF47304BA5D223390840569CAFDAC8AC9CAE07F441E16F9725F30E2BA27473E212DBB753B15884572D0BB117C65E42DCAA3BFA1B9053DD26F9BF0B3C7BC8666C45AC8F66ADD6F20959F443C992F351A98EC2200E3807DD9243275071AD63727CF27514B66F24D3A49FAF09D7E43E4927F285B20FB807C56E5BECDB9E093147B188DDC5862C3C6E1B3CCF3D6ECB827B489A31B62EC1EF86E2323F7A24180CAB0DD5954B9B63E9E2179D78FDC05362B0EF84
	739655F8159366085B69E461677D325CECA07DA87EFDD80469188C68D35C17D4737A003ACFE53FD8FD3A197865D44F85F1442F59FC1DC76E958C7B3F94DB8183EAC1B65EFBBFB628572A1B8B2FE876A12114B856F74212407B5679B324DDA36026A5687B48476A392A416BF577BA68EDC16E0F8FFC4704AF3B3E25F7A0C76F18356D0BF47EA3EB5726A5384EDCFE0D744DCCA847G45F37B4ACF0F4D2F37CF2F054FBE07478B6BA33B684398571CA631A277AD9946755CFEF56CE292CDC1E337D20ED9766301313B
	3305468E70030F23ED33CE9729E287EBCF38CD77C34F22BD6DE732D83E4B650BE7F2B05F851CAFD76D8B1CAFCFC07B1D0F071E0F0720FEF2GCFA414E785E0EC0D741F57C9ECE39EE7EB242D9CDFC8F161F78A4E56CE2BE8DF10F2BD541546633D7C5B1F109824C1D9778446E0551982D58CDA5C8E17447D1F5EC246375B6368F738903B1BE230CA27939E3B9FEE2CA26DEE06B6CDC08CFB1CE2CDD0EE6558859341C6219C29703593EC961467F12C2203E071D0DE493157BB89D67CA45CAF1E447B612F2E9FA4BE
	C23993E894A892A89AA88EA8952878A918E300ACC0BE20C8201827D0FE8915CF0432105020B7825583D901A681CD870A81CA8492FE8F75C075C0565F237CAB579611796A2950FDCD6C426B7AA74772925BFD321D01F551328F01F81CC6BB0408EF29C16AE80E0DE3EBA40F2D69BA71EDE388DEDCB304DA9F1071425EC30C2D4B23FA466285C1F4117CAB8CE14B16F1EC55733C3E7D93B2DEFC3CFC87ADDF11FD58A0D4D611794966F4743B482C558677535F139C1CC3F3FAB2DCC782B15E65D5E4BCB8EDD75C43B0
	F0BA1FA6FC59556AFB1D8EB093D05353AC76CC4EE5A2FE8EF944BE5183F7AB368410757C939DA7B300FF7653DCCF3B1FCD2D481BC347CA82702DFC9A6F23BF9DA1316D03B99C16B1670644DEE14EB30477F0875AE50472C1A08B108494718C6A5954C5E4C150B1B8BCC82DE2FA2A3A081EF46053A5A26F22C65256C9332DC7F41E9B906D644E0D7EFDF793695B1370645463EEF47B14EA397E5F5D05DC76747060F10FFBF848AB57AD3B30DEAD2BD44B7506F7D5FAE169F7961EF130EE6391FF3D3CDA2E7FCDEEB1
	17252D1E9365E5822B5F73D109DA5E1FC5EE63C71FA9361FF00FD85C67A47710DCB7BA34095735081EDE682B3322FDD8DE08B01EE38EBF7F14A6B0F6C3DBE97D39A1076B18C3F45A47B444789E38CA5B217766A383F06F92BF96258137DD908692C91F2D7F22D8150726C4763CE201CFD63F46202E1FAD574773FA33CDCBBE05577F3ACBCBDE788356C76B35640BF97D329AAD798ADE7F54C5AD79BADE3FCF5012EF61752305DA72F6DE5FDD29D56F6375B5B62D7627727AA43F7A69FFE075F17049563C3F6DD64F
	8349F2FD7E33F0AF815AAE30F9110CAB7C477A7561AAA3FCFEE63BEC2B320DC8D510A7C3EE9774FF1565CCCBF703397978690F0F1E363035517491755A28F66D3BC157C6354F327947ACFFBA5FE9135F0156D8497B903AC6C425307873B86C0D36FEB31D59583AEFCA35CEEEFB7233386E7BF9B5D9EB4C05F29CD04A33784C62AB47770B336E39D9B0CFBA29792EB351D213197D9C332762B9E54D1654DE3D467E9CF9973D23CD9517F6929717B8E26431E902B945C5DEE2D49CB46D2FB49EBCE05A93BC2E259DBB
	3463EABEFA4C2284D640F52E58017E4E84DB921FA3D8F3273A4FC93BDD70270A78C26BBF772BAF1265157A9F7B5513D86D7213FF462FBEC7A54F627A70AE0CEB7A43D10273E735C15FA1D7A4497DADFF8A59ED99A9EFBAB2D9DCE737ABF1F974DAE970381AAA0D26BDACCFD675EDD667092F4ABB82B718C30758EC47E2567C8509993907CCCE42DC38F6CC7D5EFBEEE1CDE6DE901B674A36A6A4A939908139407477BB37EA6B4719D46E370F8CE8C3699F715D780DB644AC9CCB6BC2ECAA47D668911B4731DC9DE2
	699CDB5F0D58416791338B08B9B9F6DF21CE6E3B999C3B3D12E0649E12403181EA9FD9CF55AF457B7875F74B8555335BA5E7FF55E73D644DC5D59F39AB904779AD82F3F6EB8F6A7371F6D66D8952EF744E4164F22CBAB9DFE7AF4531ADF41131DD1C8CEBEE2026E4FC0EC8246322934A3EE4FC0E58F676ED787C5476197CC674A8FD3624AFF1GEC713807C40FF405217449DAFEFE7AD675C45FE533E71F3DA6E2DBE4B2FB76496078810A4FD0616C19E8EEB56E194C063A62BF21AFC5DDA4B6BEA8C7G4D821A87
	1484A4ACC35F7A4E1A04F15E83DB5CC3E671B25C7215B7C4AC7797F62867E7439D46CC34AB502F62E5F24EAF8BFC8FE86C7CF26F7BFF3D86475D1C7BEF97223F191691EC5CD9E41D127C9919591601EB6AA261CF97C90CE6C0DD8CD092D0BA10618538D73F40E354D649E2C43A38C112EC3D8374099F837429C39CD1E032A8E53E1D7EC26DDB9D345782E4877281CDFDE16C738A33691C154C135321FEAED09CD08AD0FE8A5A1356BE6E5E4CD1DF083D19A386342B925A2C873224A8368C4075E80A3FEDCCEE0ACD
	6D4FB4601981948D948B1418B2569FA677DA974A25820FEEB9BC37AFD7F8CDF05D34DCCBDF2ADE2D2F95F81CC01300A200E6AE8F26AFCF07F2F301E791D0120AB78D2E73DF5452D7522D56E7841E03C0A700BA0106DE8C264FA1205CE46009841A25620D016BB8CDFD5105EAFD4940138EE4D841F84BD68453F7E7E560FB19DA60B54B7CD68DB91A7F00CF89280B02726C95DA368D723E1EA757472B78D2025AE66CC1B9E165D81EE240AA006AD4F5CCEE2DD56DD38B545B01FCB25FD40D3688CD87FC8E50FCD5FD
	0286AF1BBF6750B9FF65CAB6FF16F0FCBE45ABDED2F0B62F66D21C142DD0D77AE79CFFFF6CA0ED72F76AEC4A171F37D3BA4858A56F3F9D70C0FB153E2EBC870C2EFE795D8319EEE51F5FD7DDBFD09DECEF627F85B19DCF7DC3F5B07F5F688A3EF73123CBFB6FE2F717765E453E2E50FB976FF4855F3B286BD26FDD30F955E39338ECEC57AEA148BD9D264F133014B8537399BC99DBEC7DDC7E0B9E523771108729C01BD7415A8128FE9566C561451D821D17B56E91C76D7D6291B75DAD155006BFDF8C9E2BD7AE0E
	3F471A59CD5E1B7438A549BDC85AC7DC57CD7A9B9E3AA9483002EE92E30F23FFC0E22CB23E012E751CE29F05597BC8112EF3BB41AF67AAFCC7792D8B841B8465C80EBDCD31D9D01E4B31A32D841B8F65C40E7D2D8D5FF92672D8F5D8037B5EE3554E13812BF61E382C2177D1AFDB036591332F5D006FEE1BD25166EBB6742315E3F1B60C0113E35BFB5037C99CB32C4777390BB876BDAA1B8465D40E3D7C913627FB99317A4384AB05F2A5476EBE0C3654F26C254328574C31620B68C79447E2F7206CEC0EED5E09
	FA67F12CF7A736974F31528E742362AF08652DA5D89D144D9C7BDE9B36E76558B20AC9D01E4C31B36DE84BB40E5D590EFAE7F0EC278E7DC865185E0A323A3FA2F65E0AFACBB9B65D0A6D19B87617C274E392472AE85EC7C0F9864722F6E3FB519CDBCA31D8A8A7F04CDC0136A4F36C2E8A541B4E31C9827AE1CE63B9D40832D60E998D28D76258A58336B705E3072D68C7BC47965276D2201C4E31D56788E6F8857A6D95441AAC345F20EC66583D9654514A31DFD6226CCC0E69681E58DCA847F20C1D93080772CA
	0E9551FD0C6CD79B7446D7915BDFC03003D0EE6258CB9FF03D9C7B6B86024D04F28C47A65BB0FEF19C7B2FA234AF19E37A75BC769CFB0F0ECB735F9A7483FF6363288879C6B9360D7245C2B909E3BBA9DF9A148D6908D5525817C13916E3BF2276F5C2F908E3FBFB475AF70EE29140B30B737DF6BD7A964331CFE8FBF1D0CE62D8FE8D35854A0657903BD803FE143D06FB9A7753B5368465882039C089C069C0E52B214F01A42069C031C0492BD16E91AA27FB9DF285688450G50942019C073011201F4C2233E82
	688490134B6F1AAD0CDD83903DF4DD365AFF8DA63D96FCEFA6DD23AEC14608AFE8AF5615292E4D2B03374BF52F8EDCEBFE20E9BB6E77846E6704BA9B1227016965CF327EA0FBCCA52ABA757ECF287D9EA4759E923B177DD3CF707B664DBD632F993ECB73DD04FB3D654A104830289E3A975A576795795A647BBD860EB5FBDB5CDE07320FB07A85B9AB5167F6C9EC7F64BBF43DB0G39A181B11E99973477196652B5438C600B663CAFDFA06DC9E0B8FBFF371E1C6A155F5F3537EA6F8DF968BAA3895AC8A3F919C1
	4E882FEFEF8A914B2CG2AG99C2E49DC8567DF5F07D83791A6938114E4153G0F82E258CFED28F7BE47DE3321CFE999E84B3BBD21EC4911ED404F32CCFFDBEA213CA1031D3BE0BA5E2773C59360AD1998371F5B7C7BA1165A61037A4919E85B1B075136B9DC6E42E17FF8B71265202C67114368DFE2A67A222B9FAF2E6807D6DC8DD90D7A377C627AA1DD271482DE1105F63E3C8375DAB8563093ED1F1C0536DC5DB9DEDCF3D4764C4E7237E5DED6E0DC0F52B54EA2409332B0BEBB577A4735162EF93233C1FFB6
	5AB63F8DED2B4FC6390CF67F387E2CCF092B2F9D7DF3E623AF7FBEEE3E2E899157A8E8875F41B39D27683AE9A660F3381D7B2D3CBFB9F65D0A369BF250167F300E9757B52A385665785B528265EE3F38EE27E3279370019C0C4F51EE7F38F650B558B4280F4AC15B9E5C0D3645F239553B7D639A5F2F44F5D2851F8738AF77D70C97D7FD0838D664B6527727CADC6F256B380300576772B1DF487B13E34D8634BDAA97ED3941B0DEDC752A384E4F7537A5A1B7B02E83346F1281CF4D4578BCDF689F57F4EADB699A
	E8EB8D722C35E84F47BB699A3095781C1C3743629F6F3F8D10F8B3FFE2AC6345B6AFC4ECA3C1075EAF364FD7227E99DC7F76FD7E7ABF7ACC9070FEB0F99F5D4337798276702368FAF4913411405B29688CFE8E21012ED5F53AC6FD318E791B8B7C6358CD572E75D0EF56713930EEBC7F8BD47D99687FA834F3C9B52EB7886B0A354FA41497935DD300BFC2077975E3BA3F47C0B916E3CB0BB0FEE95CC6637A71F2AECFE5E319BE605E8365DE791A59F83AA7F89C7B69FA2289E4DA7428FFEED1A87DEB6498854B11
	D1E867277039076BBF58235D67E62AFB8A70C768318F5FAF520E67A7B4CEB140974BF90FD8493A27476D21AF8B587916F6AB6EEB2782DF7E5AC6FD93D0AB10151F0BF940B676DC4C93B6149B82DEF2AEE68AFCC67949FD562B6D478D7479E08E70462C45FE7D8B3D5F27C0B9EDAD5ABB90F03F3FCE7321AC2FD1EF4AC31E37EA3457CB9F50E786AB70C9F958CF43B56365F221AAD7E700DCF41E52CF31F00D7BBDCC3743251CBFE1E7B61A0659A9FFD6FF5FA819D7D59BFB7ECC3C9D111D7D206DFC6CF08DCB2277
	48GF0E1FDEBE3201E960F436DF1C8D7D87D3B1FEA6AC1A62EE770701600F6AC9EC7FF3F68B9BDBC58C35F9FB13E8FADC1784E48CBE619EF38E09B6133404425D22B4D5BE5F9D34B46G83986F1663862E7F420068E22C2C2E443BC1D01D37D12A65F3B27AB167CCC8BE46C35F317A3F94841E73A075A93C7EDFBB356405FC2C5F5625D5DF4C6BDF4E53EA3F0257BBBB34646BF83DB9DF2B3E05573F50262E37673371B615576716E8691F4E6B87C42D7667707A440E40F3B224FEBE5433FB53B972FAD26E27EFDC
	A06FFF7D4E9A9C0341DA31536E30B95D7DBBAB0D26CAE34DFE1858021F63D8FC41A80CFFBEA6387C0A36F04F01E83541FCFA18243E3C4F7A07FC5CE7AD7D51ADC2536F52B2F0AD9FB8DFA4C0CC48E7E5C1A35F63EDF2FDCBBE13D1FAD93151E35B9E98A765CCC64D0177AA0D7B8F6C11F9675B427507719777FC39782DBC4C6CBCB922444167D3ECB65946BBC742E476FE2E487C6923F07301713FF3B89C5B996F9F8F079B97E65747230ADFC357949BFF3DA37C3E485FB9313EE85D79557A62566B0A4D3F7EC231
	B9CA9FDEDFBCB42A485C5AB6313EF826AD7C3E3825FDE2FD11F6CD71EB2B4A2F555D217A623DF754FD51EC1DD8DF5CE67DEAFD512C1A9FA6E5A8B67F6AE2F8FDF1A8DB111936FBE2FD1130BB7C3E78EE45447A02EE934A5706B50A0D8B8A436F0BE243447A42EA78EAFDF1C02758EC53ABB6DB8B436B0B45F90A4C52F3DF7D1E753EA59CFF186E0C82C56E354A70654A56A9F2391D217A26E6BF98FCF00F9C9F7A95C9D9EEF7C178F2B3B7AAF25557430D9113FDFC1352BF2F14A86D94073C6F796BAF5D22485DD7
	94FEAE2EAE7AEA39F5728D45F65FD64506BB0A5E8CEEC3EDAD182078FFCF2952C6771BCA9BA593E863066D0A5CCF3B474BEBF6DE6386ABFE2F5A8EEB10A8A0760C3BF49BF916547A1ED87F3023EAD8F2B8496F9DC8CE31D1FE94144F9BBEC45F351049AE8E5AE2678653280E7CF50D7AB220BAA026BB23874F60D9G1B8AA41F996D41B6662D43B6C6A8EFBA140B8B9B75150538163C5B28787C407A90FDFE60DD707AFD93664A629D0A5C31D0B9F660G48553E07F255E50A1CD07355670133B5DFFE6D3972F070
	1CBCCB9EB965BE29276F0E4920EEAA44986FDBC7B0B2914E6458931D08A5F24C5205321B8D08D566A35FA8476E226F0409ADF3B8F6E3BEE21B0BB02FF6D5781DADD74E1E72A7C0A63B331D6BA84276BEACC1EC8E473EA7A2164231926EC7597AC679DC6729F2725C5E89E59FD094509C2079C009C029C03A8D0D7AD22003C0E6A0AB1084B485A892E896D08C905B6BB1F8497888F63ED5BEACCF8F2FF8EC6CBBF472F9C06BF8E7B763B6B4EA1CAD3BFDDC39B7834ACCEE6138F201444EF7B9ED745C570646007334
	4394CFD761ECAC2F3662D85695B76A1D4538673926E7227A195C46AFA9F7FA42F24C2F97687C3228B8505FD40AA794877AFB0D4FDD49D0E75E087E9E3D98F8DEECB6544D5B487AB4FEE323665EEB8A6042A67F3AE2A8D7EC524A057D6B5047BA393EC545E707EB1F265C53FE670627824FF420B9B26F7CCDE3EDE3F2EDDD01BEA5G6FCA19BF3BC45B274D00D7865455C359D222E5DB8D7FED178139FED445B78D2EE7E84A4D6C8834AD9A78E2E55EC479B3B5C0D63799467AE6FF4C8465A620D695AE0F597CC09D
	CE6019A473C5481FB3835A1B8B65C581D8921453007237846A585D0E7E9B653A03AA1E93F05D39C54B7F4692149B126BA72B78A261FA16265C8CD11D8BB140938714AC7326EF89168B25BC078CEFB01E32B7945EDA38B63F61AF4B664B6E7260FB70FD65636F413B4B354F6D8D170FBD37F735DC7B5C5E24F2F2DF40F3FB8C3B291C5C177AE13EEE65FC7F4C31B60E5DC25BA4588507DD9A6078ED54AE021F9009C2446F24F60DD02C953FBF2D425A707B5365643DB838BC6076206C8F4B69BBEB0753494ABF21BC
	8E17D714F8BC6E23B6BA06ECAA3B23B9C66CA66FD53304188D85D45669F009C7582F48703EE4E7BB5975672A6BEC5BBF7EDC6D367F8FBADE6AD1FCFAD5F5FDE34FBFDEF754BFD487BB5354CF57F5D698EFBEA006C5D3ECAA1423B8360D6E994F04F28C47D650FD3AB8A82F64D8A4DD6BE5EF05B576D644922A715CD485474ED39DBEA8CF63D8B3DDCF4E00F28C47CCDDE8DF9C47BE6F427612B916CDED29ADED543714A276F2A75AE267183B1A7B4B317B2B515F299C5BEAC29D11257EFA09ECB247FE530532699C
	5BFF91E3255B065813F9982BD20E1D6CC07BCC9CFB2A8A75B6F16C618E0CD58447CE50F571CCA84F63D8DC875A974F316D1D58DE8A470E66E32C6A5EC46CA1AE5B42310D1D681B1DE317BB5137A10E7D97EDEFB2A9F3ECBD4F0D399C7BF9BB7A3B08E3855C5FA40EB5F2FF8FEEC7ECA90D5F89A88FF06C0779E873A847DE2658B4A8CF67D8FB815ABC0BE367BB5066980E5D5307B647F1EC51A634B919E34F597939C70E5DDB05B61B0D084DEE9BEB73C7B486D6609965FC4BF6219F53B876CEB96A1841314EEB58
	EF299CEBAB41B1235B417D90313DD20E3DA4E2FBA60EFD3B845B1B4431DF0868EF84470A2B303D199C6B2658DCA847F2EC9E6F4BF80E9D68C47BAAF6A236BA8F5B2B63D8F3BE4A36F06C17340F26C3B9FAA76E33DE3F28FD1E62F6BA66E201AF1173AE3C68FF1EE1F785193F653D6D6EA0FB5BF41E4BFF2BD13F79ADECA7F7DD70FD786DF44EEA825E964E7FEFDD7E7B458F52B9E2946A273C05FB402B2AA7F236AB9A648871BDE0387E6B6B2F3FDE407DF1DE545EFF1FCC63928F7CC95CBEEB88FF2ED0FF8CE510
	BBE538A75E560531BDD10676FF27AB1C73E0416C17201D2370391B5B3F35C03BBF8E5031BB897827F2FB5E2476C413B247A22B514654B2FC2FF31EBCDE4B67E7761B46BB9B914ADE632EC6BD316FB508B953B7034724F2976A73111F24146D6E20F1EFA5F53B5046ACB6B7C1B90AE3DE1A6373219C378BE37B672AD0366A4731B53B3CD13FD44E8D26A3156AB0GDEDA0EB9501D9FBC87FC544E9340EBA967672EBA505FC9657C2CE5E7A8BB734631F3D6391283CC070B6A0DA6BA395ED5DC6F4AF20C73BDEFABF1
	7E9E1DDFCAF7437C329BFDDB12CF1E85E0B16C388AE35066A42F0570A4AD4A2D243A08FD165D286B8316EBD01E4A31E768FC9DCD4A3B516F32107D93F8FEB0506FD4E86787FE7DF3097AA8D440B3DD85BFFB1737414F07861C71E4194D5C7E5A8A34F5F1BE464A4E5B49AF701F8397D4AA313B117ABB8DF823F89B57BB305D799CDBC86F0B29D09676A0768A3DAFD6C239F68F4665D57BF8F99BAAAE83504E0D9097650C5AE374FEA281BEE98F7AF33EBDF85E3A586FBE81EFB437F3C3B946A4095BE9AE9FAFEF55
	F69A767A5BD9866543027AAC5DCD743EEC823CEEAF6A3D015EDB8720ACF1EC210836CC5F4B4F357505F37EB368FDE0EF60983A1F6A0D87BC096BCD22FA8DEF4378FF9B318F2B5096735B985B4BD57E397257FDA4D7181DCF0D1B73D9A16C743D4D5EED69391D1DF45CCE86FC9A37E9B74F5F39EFE3FC2C79634D5B6A71167C363F5EF4A81F174FF1B29F63BA346F13A9B46FF515705C82947CDD7B0FAF9A05F0774EF6D5ABF2C9A17740CC8754FBD0A7CC0A5C373A4217EBB92348AD2A7EAA7B8A2C3D6BAD4A7577
	BFD15AFEE2823E4CBB2B486D6A8A318FF510EC2719785E73D0D778F1DEFACE31F36DF9C55FCD1D217419E4FDCCEE7402A2579BF66C6475DEF578367E30D551730B8978982F7A4D1A05F96147BF37C311BB5C913E1C6722CADF554476E1FB2DCAFFFC53263493BF813B6F6DD16496F40468478310B787143CA96E8CBF26313D0A1DABD45FFDB993CA9F499B153E359350372DCF51F1DFFE28D89C14E341F8575071265A6A2ABAC77E62571A3DF41FCF76233EDF51712376F0F4B0399FB894390C897677124F14B826
	DDD25AC988595F7EBED6670763A363DD169FFE4C4B87434DFFFFFB6E6C8BBF664DAEC547031B420F795DC30A5C6F6C930B797C3FABB1FF412334F3F7DB787A57C90A5CB33B4699E32A39F9EFF9B8718F3E2FDCB32C58EED11DCF7C532670676B1191C56ECEB1FC5B1F97434F1DBBFC0A1D3F3C2268BB95CADF001D552A33F03A304795633704751BED72DE3D6AEC5B70F5C5672A10E370BD137A8C4BC7E10D2B607DFA57970A8D3F91949B4E660DF70E047D1EE77A5F3D0530FEDFAE64F8BD427A313C8DB7BF713B
	D95DCD4519C2E63310BBC077C01A051C913219620331147193206FF87FAEDC6726891230167CCE24117CD064A1C9587416515DE7E4BF7DE8BCEA6B9D400AE2721BBEB6175DF8D6740A6443A6913804329A792FB59A592FA19201936E912364B6129FD9B44234A0F95CCE0037B201A336A1DB2FC33AE2643F2FE85CF5883CAA706B79873F7F4E7331CFFF6A4D92F21B05AD640551B951C3FF3FC434B759A47CB17DE302FE087C08AED92EB68B59DE7A1163152EB8C533D05CF7167C4034D7926D8D78CB8BDEC958E8
	A61A2A49A11B6A93B66F00C4F642BEB08B59AE72337F42FAD66D34397A2B594F24FCC0A2A8E4B4545330519F8186FBB7D0FBC9ABD53C158D3FA85C3563E4D2F41610F9CCD86BF45B6C47EC3D125B53AC68258172935BEE275DB7F418B5249BA1F9C23F1B844DED656E93E72B4803B9B77A126FDF2696A4979C4B0447850FD0CDB94933C89567A0E775BD20CA74B4CB643FB1F0FB4AF85DB75E144AFFFB3C24B3D348101DA4E910679B12045CBE5B2043F985AE1A68B82389D2A801359E1B4B5B67768C02E546G4B
	300AAB283AF5016936FBDFED278A94D1C9584EC28922557D22FB303A212F4F6192F98390D7E8FE9BEF1E70D485702C77FDFB6349A52F77C09EB489D903A6937DDBC37F6EA7FFEBA8D2C3111A7D905C15C248FF0175BE7419A68F58D3C86DA15DDFF58CFAD0FAF27902FFFD2AEEE58AF8F7CC4821BFC78D1DE0D03858B7A33EB96B36EDF991097F1B745190C9959FE9F7030F37C8BCEC261B0C09178F9C4AFA6E2E2CCCA19B86AB5BF40564A5BB27103C9EB6F633E070503CA38FF06445AEF9E84B63A318CC8B7F0B
	160CF29DA13242D86BBF4AE9C9BFA6FF89DAB0B69189DC445301140AA96BA67AF74B0403CB2436D259EDBCA63BFD5C6E9C15EF39C1FC4BD4791679F5772DC65B37B5FE3E7D5B985F480B0A2C2F3BEF9FA83E650661DB567FA45F0EAA3E69E53DE4A113436DA62FD406B4CADFABAFCEABDEE44BFA097E5CA0DE78779711985BDF64F5F12BDF1F920F490AAFDB03077F6325F6E8F40017AEC0696457AFEE9715385DAD3011FB04681684837B661A913F90884B185C0AC1072BEA0FD207DF62033AC2794BF2C6F6CFD0
	A36C4BF684A1DF08A34BA3A6FE482FF37AB5CADF2BD08D7A7C1281F733B202F8C13E2936EF0CC4061F846129787AF96A731F4A094DE43A4E791F55DF5F706F2FAC590BE07DC5A63D3746C8687CA488CF051F7CAD9A252FD594EED622C04E49E156E60F6B45575827C845A7721B9BD932CD3AA0DE10D17616DF9430E7337DF8AAC2C860B8501278DA45669E7F9BA17637F2DBA2373E9F7AAD1FB19A8A8F7BC73F4CA46C79C27D3B42E9B715847D5D7701BA79FCED1D721DD3F6C6FE370F6E17829ED707675CC7C648
	C6D2305FFCBCB7E8F3BAA51B73D2034BCEFE7F31710AA4AA3FB1D869A36DFB11C72EE4F587FC446E4FD4B27F8DD0CB87881E04D63873A3GG7CF4GGD0CB818294G94G88G88G90D485AD1E04D63873A3GG7CF4GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGADA4GGGG
**end of data**/
}

/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private String getChangeCondition( String change )
{

	if( change.equalsIgnoreCase("After a Duration") )
	{
		return LMProgramDirectGear.CHANGE_DURATION;
	}
	else if( change.equalsIgnoreCase("Priority Change") )
	{
		return LMProgramDirectGear.CHANGE_PRIORITY;
	}
	else if( change.equalsIgnoreCase("Above Trigger") )
	{
		return LMProgramDirectGear.CHANGE_TRIGGER_OFFSET;
	}	
	else
		return LMProgramDirectGear.CHANGE_NONE;

}


/**
 * Return the JComboBoxGroupSelection property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxGroupSelection() {
	if (ivjJComboBoxGroupSelection == null) {
		try {
			ivjJComboBoxGroupSelection = new javax.swing.JComboBox();
			ivjJComboBoxGroupSelection.setName("JComboBoxGroupSelection");
			ivjJComboBoxGroupSelection.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxGroupSelection.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LAST_CONTROLLED ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_ALWAYS_FIRST_GROUP ) );			
			ivjJComboBoxGroupSelection.addItem( StringUtils.addCharBetweenWords( ' ', com.cannontech.database.db.device.lm.LMProgramDirectGear.SELECTION_LEAST_CONTROL_TIME ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxGroupSelection;
}

/**
 * Return the JComboBoxHowToStop property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxHowToStop() {
	if (ivjJComboBoxHowToStop == null) {
		try {
			ivjJComboBoxHowToStop = new javax.swing.JComboBox();
			ivjJComboBoxHowToStop.setName("JComboBoxHowToStop");
			ivjJComboBoxHowToStop.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_TIME_IN ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RESTORE ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxHowToStop;
}

/**
 * Return the JComboBoxNumGroups property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxNumGroups() {
	if (ivjJComboBoxNumGroups == null) {
		try {
			ivjJComboBoxNumGroups = new javax.swing.JComboBox();
			ivjJComboBoxNumGroups.setName("JComboBoxNumGroups");
			ivjJComboBoxNumGroups.setPreferredSize(new java.awt.Dimension(137, 23));
			ivjJComboBoxNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxNumGroups.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxNumGroups.addItem("All of Them");
			for( int i = 1; i < 26; i++ )
				ivjJComboBoxNumGroups.addItem( new Integer(i) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxNumGroups;
}

/**
 * Return the JComboBoxSendRate property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxSendRate() {
	if (ivjJComboBoxSendRate == null) {
		try {
			ivjJComboBoxSendRate = new javax.swing.JComboBox();
			ivjJComboBoxSendRate.setName("JComboBoxSendRate");
			ivjJComboBoxSendRate.setPreferredSize(new java.awt.Dimension(175, 23));
			ivjJComboBoxSendRate.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxSendRate.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxSendRate.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxSendRate.addItem("1 minute");
			ivjJComboBoxSendRate.addItem("2 minutes");
			ivjJComboBoxSendRate.addItem("5 minutes");
			ivjJComboBoxSendRate.addItem("10 minutes");
			ivjJComboBoxSendRate.addItem("15 minutes");
			ivjJComboBoxSendRate.addItem("20 minutes");
			ivjJComboBoxSendRate.addItem("30 minutes");
			ivjJComboBoxSendRate.addItem("45 minutes");
			ivjJComboBoxSendRate.addItem("1 hour");
			ivjJComboBoxSendRate.addItem("2 hours");
			ivjJComboBoxSendRate.addItem("3 hours");
			ivjJComboBoxSendRate.addItem("4 hours");
			ivjJComboBoxSendRate.addItem("5 hours");
			ivjJComboBoxSendRate.addItem("6 hours");
			ivjJComboBoxSendRate.addItem("7 hours");
			ivjJComboBoxSendRate.addItem("8 hours");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxSendRate;
}

/**
 * Return the JComboBoxShedTime property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxShedTime() {
	if (ivjJComboBoxShedTime == null) {
		try {
			ivjJComboBoxShedTime = new javax.swing.JComboBox();
			ivjJComboBoxShedTime.setName("JComboBoxShedTime");
			ivjJComboBoxShedTime.setPreferredSize(new java.awt.Dimension(137, 23));
			ivjJComboBoxShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJComboBoxShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxShedTime.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxShedTime.addItem("5 minutes");
			ivjJComboBoxShedTime.addItem("7 minutes");
			ivjJComboBoxShedTime.addItem("10 minutes");
			ivjJComboBoxShedTime.addItem("15 minutes");
			ivjJComboBoxShedTime.addItem("20 minutes");
			ivjJComboBoxShedTime.addItem("30 minutes");
			ivjJComboBoxShedTime.addItem("45 minutes");
			ivjJComboBoxShedTime.addItem("1 hour");
			ivjJComboBoxShedTime.addItem("2 hours");
			ivjJComboBoxShedTime.addItem("3 hours");
			ivjJComboBoxShedTime.addItem("4 hours");
			ivjJComboBoxShedTime.addItem("6 hours");
			ivjJComboBoxShedTime.addItem("8 hours");
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxShedTime;
}

/**
 * Return the JComboBoxWhenChange property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxWhenChange() {
	if (ivjJComboBoxWhenChange == null) {
		try {
			ivjJComboBoxWhenChange = new javax.swing.JComboBox();
			ivjJComboBoxWhenChange.setName("JComboBoxWhenChange");
			ivjJComboBoxWhenChange.setPreferredSize(new java.awt.Dimension(170, 23));
			ivjJComboBoxWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJComboBoxWhenChange.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJComboBoxWhenChange.addItem("Manually Only");
			ivjJComboBoxWhenChange.addItem("After a Duration");
			ivjJComboBoxWhenChange.addItem("Priority Change");
			ivjJComboBoxWhenChange.addItem("Above Trigger");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxWhenChange;
}

/**
 * Return the JCSpinFieldChangeDuration property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeDuration() {
	if (ivjJCSpinFieldChangeDuration == null) {
		try {
			ivjJCSpinFieldChangeDuration = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeDuration.setName("JCSpinFieldChangeDuration");
			ivjJCSpinFieldChangeDuration.setPreferredSize(new java.awt.Dimension(45, 20));
			ivjJCSpinFieldChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeDuration.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeDuration.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(3)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeDuration;
}

/**
 * Return the JCSpinFieldChangePriority property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangePriority() {
	if (ivjJCSpinFieldChangePriority == null) {
		try {
			ivjJCSpinFieldChangePriority = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangePriority.setName("JCSpinFieldChangePriority");
			ivjJCSpinFieldChangePriority.setPreferredSize(new java.awt.Dimension(35, 30));
			ivjJCSpinFieldChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangePriority.setMaximumSize(new java.awt.Dimension(40, 30));
			// user code begin {1}
			ivjJCSpinFieldChangePriority.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(9999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(0)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangePriority;
}

/**
 * Return the JCSpinFieldChangeTriggerNumber property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeTriggerNumber() {
	if (ivjJCSpinFieldChangeTriggerNumber == null) {
		try {
			ivjJCSpinFieldChangeTriggerNumber = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeTriggerNumber.setName("JCSpinFieldChangeTriggerNumber");
			ivjJCSpinFieldChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJCSpinFieldChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeTriggerNumber.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(0)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeTriggerNumber;
}

/**
 * Return the JCSpinFieldPercentReduction property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldPercentReduction() {
	if (ivjJCSpinFieldPercentReduction == null) {
		try {
			ivjJCSpinFieldPercentReduction = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldPercentReduction.setName("JCSpinFieldPercentReduction");
			ivjJCSpinFieldPercentReduction.setPreferredSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMaximumSize(new java.awt.Dimension(88, 22));
			ivjJCSpinFieldPercentReduction.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJCSpinFieldPercentReduction.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(100), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(100)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));

			ivjJCSpinFieldPercentReduction.setValue( new Integer(100) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldPercentReduction;
}

/**
 * Return the JLabelChangeDuration property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeDuration() {
	if (ivjJLabelChangeDuration == null) {
		try {
			ivjJLabelChangeDuration = new javax.swing.JLabel();
			ivjJLabelChangeDuration.setName("JLabelChangeDuration");
			ivjJLabelChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeDuration.setText("Change Duration:");
			ivjJLabelChangeDuration.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeDuration.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeDuration;
}


/**
 * Return the JLabelChangePriority property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangePriority() {
	if (ivjJLabelChangePriority == null) {
		try {
			ivjJLabelChangePriority = new javax.swing.JLabel();
			ivjJLabelChangePriority.setName("JLabelChangePriority");
			ivjJLabelChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangePriority.setText("Change Priority:");
			ivjJLabelChangePriority.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangePriority.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangePriority;
}


/**
 * Return the JLabelChangeTriggerNumber property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerNumber() {
	if (ivjJLabelChangeTriggerNumber == null) {
		try {
			ivjJLabelChangeTriggerNumber = new javax.swing.JLabel();
			ivjJLabelChangeTriggerNumber.setName("JLabelChangeTriggerNumber");
			ivjJLabelChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerNumber.setText("Trigger Number:");
			ivjJLabelChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerNumber.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerNumber;
}


/**
 * Return the JLabelChangeTriggerOffset property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerOffset() {
	if (ivjJLabelChangeTriggerOffset == null) {
		try {
			ivjJLabelChangeTriggerOffset = new javax.swing.JLabel();
			ivjJLabelChangeTriggerOffset.setName("JLabelChangeTriggerOffset");
			ivjJLabelChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerOffset.setText("Trigger Offset:");
			ivjJLabelChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerOffset.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerOffset;
}


/**
 * Return the JLabelGroupSelection property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelGroupSelection() {
	if (ivjJLabelGroupSelection == null) {
		try {
			ivjJLabelGroupSelection = new javax.swing.JLabel();
			ivjJLabelGroupSelection.setName("JLabelGroupSelection");
			ivjJLabelGroupSelection.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelGroupSelection.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelGroupSelection.setText("Group Selection Method:");
			ivjJLabelGroupSelection.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelGroupSelection;
}


/**
 * Return the JLabelHowToStop property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHowToStop() {
	if (ivjJLabelHowToStop == null) {
		try {
			ivjJLabelHowToStop = new javax.swing.JLabel();
			ivjJLabelHowToStop.setName("JLabelHowToStop");
			ivjJLabelHowToStop.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelHowToStop.setText("How to Stop Control:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHowToStop;
}


/**
 * Return the JLabelMinutesChDur property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMinutesChDur() {
	if (ivjJLabelMinutesChDur == null) {
		try {
			ivjJLabelMinutesChDur = new javax.swing.JLabel();
			ivjJLabelMinutesChDur.setName("JLabelMinutesChDur");
			ivjJLabelMinutesChDur.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMinutesChDur.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelMinutesChDur.setText("(min.)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMinutesChDur;
}


/**
 * Return the JLabelNumGroups property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNumGroups() {
	if (ivjJLabelNumGroups == null) {
		try {
			ivjJLabelNumGroups = new javax.swing.JLabel();
			ivjJLabelNumGroups.setName("JLabelNumGroups");
			ivjJLabelNumGroups.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelNumGroups.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelNumGroups.setText("# of Groups Each Time:");
			ivjJLabelNumGroups.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNumGroups;
}


/**
 * Return the JLabelPercentReduction property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPercentReduction() {
	if (ivjJLabelPercentReduction == null) {
		try {
			ivjJLabelPercentReduction = new javax.swing.JLabel();
			ivjJLabelPercentReduction.setName("JLabelPercentReduction");
			ivjJLabelPercentReduction.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelPercentReduction.setText("Group Capacity Reduction %:");
			ivjJLabelPercentReduction.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelPercentReduction.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPercentReduction;
}


/**
 * Return the JLabelSendRate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSendRate() {
	if (ivjJLabelSendRate == null) {
		try {
			ivjJLabelSendRate = new javax.swing.JLabel();
			ivjJLabelSendRate.setName("JLabelSendRate");
			ivjJLabelSendRate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelSendRate.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelSendRate.setText("Command Resend Rate:");
			ivjJLabelSendRate.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSendRate;
}


/**
 * Return the JLabelShedTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelShedTime() {
	if (ivjJLabelShedTime == null) {
		try {
			ivjJLabelShedTime = new javax.swing.JLabel();
			ivjJLabelShedTime.setName("JLabelShedTime");
			ivjJLabelShedTime.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelShedTime.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelShedTime.setText("Shed Time:");
			ivjJLabelShedTime.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelShedTime;
}


/**
 * Return the JLabelWhenChange property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelWhenChange() {
	if (ivjJLabelWhenChange == null) {
		try {
			ivjJLabelWhenChange = new javax.swing.JLabel();
			ivjJLabelWhenChange.setName("JLabelWhenChange");
			ivjJLabelWhenChange.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelWhenChange.setText("When to Change:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelWhenChange;
}


/**
 * Return the JPanelChangeMethod property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelChangeMethod() {
	if (ivjJPanelChangeMethod == null) {
		try {
			ivjJPanelChangeMethod = new javax.swing.JPanel();
			ivjJPanelChangeMethod.setName("JPanelChangeMethod");
			//ivjJPanelChangeMethod.setBorder(new com.ibm.uvm.abt.edit.DeletedClassView());
			ivjJPanelChangeMethod.setLayout(new java.awt.GridBagLayout());
			ivjJPanelChangeMethod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJPanelChangeMethod.setMaximumSize(new java.awt.Dimension(360, 90));
			ivjJPanelChangeMethod.setPreferredSize(new java.awt.Dimension(330, 87));
			ivjJPanelChangeMethod.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJPanelChangeMethod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);

			java.awt.GridBagConstraints constraintsJLabelChangeDuration = new java.awt.GridBagConstraints();
			constraintsJLabelChangeDuration.gridx = 1; constraintsJLabelChangeDuration.gridy = 2;
			constraintsJLabelChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeDuration.ipadx = -5;
			constraintsJLabelChangeDuration.ipady = 6;
			constraintsJLabelChangeDuration.insets = new java.awt.Insets(1, 5, 3, 5);
			getJPanelChangeMethod().add(getJLabelChangeDuration(), constraintsJLabelChangeDuration);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeDuration = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeDuration.gridx = 2; constraintsJCSpinFieldChangeDuration.gridy = 2;
			constraintsJCSpinFieldChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeDuration.ipadx = 34;
			constraintsJCSpinFieldChangeDuration.ipady = 19;
			constraintsJCSpinFieldChangeDuration.insets = new java.awt.Insets(1, 5, 3, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeDuration(), constraintsJCSpinFieldChangeDuration);

			java.awt.GridBagConstraints constraintsJLabelMinutesChDur = new java.awt.GridBagConstraints();
			constraintsJLabelMinutesChDur.gridx = 3; constraintsJLabelMinutesChDur.gridy = 2;
			constraintsJLabelMinutesChDur.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelMinutesChDur.ipadx = 5;
			constraintsJLabelMinutesChDur.ipady = -2;
			constraintsJLabelMinutesChDur.insets = new java.awt.Insets(5, 1, 5, 2);
			getJPanelChangeMethod().add(getJLabelMinutesChDur(), constraintsJLabelMinutesChDur);

			java.awt.GridBagConstraints constraintsJLabelChangePriority = new java.awt.GridBagConstraints();
			constraintsJLabelChangePriority.gridx = 4; constraintsJLabelChangePriority.gridy = 2;
			constraintsJLabelChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangePriority.ipadx = -13;
			constraintsJLabelChangePriority.ipady = 6;
			constraintsJLabelChangePriority.insets = new java.awt.Insets(1, 3, 3, 2);
			getJPanelChangeMethod().add(getJLabelChangePriority(), constraintsJLabelChangePriority);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangePriority = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangePriority.gridx = 5; constraintsJCSpinFieldChangePriority.gridy = 2;
			constraintsJCSpinFieldChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangePriority.ipadx = 34;
			constraintsJCSpinFieldChangePriority.ipady = 19;
			constraintsJCSpinFieldChangePriority.insets = new java.awt.Insets(1, 3, 3, 8);
			getJPanelChangeMethod().add(getJCSpinFieldChangePriority(), constraintsJCSpinFieldChangePriority);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerNumber.gridx = 1; constraintsJLabelChangeTriggerNumber.gridy = 3;
			constraintsJLabelChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerNumber.ipadx = -45;
			constraintsJLabelChangeTriggerNumber.ipady = 6;
			constraintsJLabelChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 5);
			getJPanelChangeMethod().add(getJLabelChangeTriggerNumber(), constraintsJLabelChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerOffset.gridx = 4; constraintsJLabelChangeTriggerOffset.gridy = 3;
			constraintsJLabelChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerOffset.ipadx = -63;
			constraintsJLabelChangeTriggerOffset.insets = new java.awt.Insets(8, 3, 17, 12);
			getJPanelChangeMethod().add(getJLabelChangeTriggerOffset(), constraintsJLabelChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJTextFieldChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJTextFieldChangeTriggerOffset.gridx = 5; constraintsJTextFieldChangeTriggerOffset.gridy = 3;
			constraintsJTextFieldChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextFieldChangeTriggerOffset.weightx = 1.0;
			constraintsJTextFieldChangeTriggerOffset.ipadx = 31;
			constraintsJTextFieldChangeTriggerOffset.insets = new java.awt.Insets(4, 3, 15, 8);
			getJPanelChangeMethod().add(getJTextFieldChangeTriggerOffset(), constraintsJTextFieldChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeTriggerNumber.gridx = 2; constraintsJCSpinFieldChangeTriggerNumber.gridy = 3;
			constraintsJCSpinFieldChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeTriggerNumber.ipadx = 34;
			constraintsJCSpinFieldChangeTriggerNumber.ipady = 19;
			constraintsJCSpinFieldChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 15, 1);
			getJPanelChangeMethod().add(getJCSpinFieldChangeTriggerNumber(), constraintsJCSpinFieldChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelWhenChange = new java.awt.GridBagConstraints();
			constraintsJLabelWhenChange.gridx = 1; constraintsJLabelWhenChange.gridy = 1;
			constraintsJLabelWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelWhenChange.ipadx = 3;
			constraintsJLabelWhenChange.ipady = 4;
			constraintsJLabelWhenChange.insets = new java.awt.Insets(0, 5, 4, 5);
			getJPanelChangeMethod().add(getJLabelWhenChange(), constraintsJLabelWhenChange);

			java.awt.GridBagConstraints constraintsJComboBoxWhenChange = new java.awt.GridBagConstraints();
			constraintsJComboBoxWhenChange.gridx = 3; constraintsJComboBoxWhenChange.gridy = 1;
			constraintsJComboBoxWhenChange.gridwidth = 3;
			constraintsJComboBoxWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJComboBoxWhenChange.weightx = 1.0;
			constraintsJComboBoxWhenChange.ipadx = 170;
			constraintsJComboBoxWhenChange.ipady = 23;
			constraintsJComboBoxWhenChange.insets = new java.awt.Insets(0, 3, 1, 8);
			getJPanelChangeMethod().add(getJComboBoxWhenChange(), constraintsJComboBoxWhenChange);
			// user code begin {1}
			jComboBoxWhenChange_ActionPerformed(null);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelChangeMethod;
}

/**
 * Return the JTextFieldChangeTriggerOffset property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldChangeTriggerOffset() {
	if (ivjJTextFieldChangeTriggerOffset == null) {
		try {
			ivjJTextFieldChangeTriggerOffset = new javax.swing.JTextField();
			ivjJTextFieldChangeTriggerOffset.setName("JTextFieldChangeTriggerOffset");
			ivjJTextFieldChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJTextFieldChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJTextFieldChangeTriggerOffset.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999.9999, 99999.9999, 4) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldChangeTriggerOffset;
}

/**
 * getValue method comment.
 */
public Object getValue(Object o) 
{
	com.cannontech.database.db.device.lm.LMProgramDirectGear gear = null;
	
	gear = (LMProgramDirectGear)o;
	
	if( getJComboBoxHowToStop().getSelectedItem() != null )
	{
		gear.setMethodStopType( 
			com.cannontech.common.util.StringUtils.removeChars( ' ', getJComboBoxHowToStop().getSelectedItem().toString() ) );
	}

	gear.setPercentReduction( new Integer( ((Number)getJCSpinFieldPercentReduction().getValue()).intValue() ) );
	
	gear.setChangeCondition( getChangeCondition(getJComboBoxWhenChange().getSelectedItem().toString()) );

	gear.setChangeDuration( new Integer( ((Number)getJCSpinFieldChangeDuration().getValue()).intValue() * 60 ) );
	gear.setChangePriority( new Integer( ((Number)getJCSpinFieldChangePriority().getValue()).intValue() ) );
	gear.setChangeTriggerNumber( new Integer( ((Number)getJCSpinFieldChangeTriggerNumber().getValue()).intValue() ) );
	
	if( getJTextFieldChangeTriggerOffset().getText() == null || getJTextFieldChangeTriggerOffset().getText().length() <= 0 )
		gear.setChangeTriggerOffset( new Double(0.0) );
	else
		gear.setChangeTriggerOffset( Double.valueOf(getJTextFieldChangeTriggerOffset().getText()) );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	t.setShedTime( com.cannontech.common.util.CtiUtilities.getIntervalComboBoxSecondsValue( getJComboBoxShedTime() ) );

	t.setNumberOfGroups( getJComboBoxNumGroups().getSelectedItem() );

	t.setRefreshRate( com.cannontech.common.util.CtiUtilities.getIntervalComboBoxSecondsValue( getJComboBoxSendRate() ) );
		
	t.setGroupSelectionMethod( StringUtils.removeChars( ' ', getJComboBoxGroupSelection().getSelectedItem().toString() ) );
		
	return t;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	getJCSpinFieldChangeDuration().addValueListener(this);
	getJCSpinFieldChangePriority().addValueListener(this);
	getJCSpinFieldChangeTriggerNumber().addValueListener(this);
	getJCSpinFieldPercentReduction().addValueListener(this);
	getJComboBoxWhenChange().addActionListener(this);
	
	getJComboBoxShedTime().addActionListener(this);
	getJComboBoxNumGroups().addActionListener(this);
	getJComboBoxSendRate().addActionListener(this);
	getJComboBoxGroupSelection().addActionListener(this);
	getJComboBoxHowToStop().addActionListener(this);
	getJTextFieldChangeTriggerOffset().addCaretListener(this);
	
	// user code end
	
}

/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("TimeRefreshGearPanel");
		setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
		setLayout(new java.awt.GridBagLayout());
		setPreferredSize(new java.awt.Dimension(402, 430));
		setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
		setSize(402, 430);
		setMinimumSize(new java.awt.Dimension(0, 0));

		java.awt.GridBagConstraints constraintsJLabelShedTime = new java.awt.GridBagConstraints();
		constraintsJLabelShedTime.gridx = 1; constraintsJLabelShedTime.gridy = 1;
		constraintsJLabelShedTime.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelShedTime.ipadx = 83;
		constraintsJLabelShedTime.insets = new java.awt.Insets(11, 10, 7, 1);
		add(getJLabelShedTime(), constraintsJLabelShedTime);

		java.awt.GridBagConstraints constraintsJComboBoxShedTime = new java.awt.GridBagConstraints();
		constraintsJComboBoxShedTime.gridx = 2; constraintsJComboBoxShedTime.gridy = 1;
		constraintsJComboBoxShedTime.gridwidth = 2;
		constraintsJComboBoxShedTime.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxShedTime.weightx = 1.0;
		constraintsJComboBoxShedTime.ipadx = 137;
		constraintsJComboBoxShedTime.ipady = 23;
		constraintsJComboBoxShedTime.insets = new java.awt.Insets(10, 1, 1, 107);
		add(getJComboBoxShedTime(), constraintsJComboBoxShedTime);

		java.awt.GridBagConstraints constraintsJLabelNumGroups = new java.awt.GridBagConstraints();
		constraintsJLabelNumGroups.gridx = 1; constraintsJLabelNumGroups.gridy = 2;
		constraintsJLabelNumGroups.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelNumGroups.ipadx = 17;
		constraintsJLabelNumGroups.insets = new java.awt.Insets(6, 10, 5, 1);
		add(getJLabelNumGroups(), constraintsJLabelNumGroups);

		java.awt.GridBagConstraints constraintsJComboBoxNumGroups = new java.awt.GridBagConstraints();
		constraintsJComboBoxNumGroups.gridx = 2; constraintsJComboBoxNumGroups.gridy = 2;
		constraintsJComboBoxNumGroups.gridwidth = 2;
		constraintsJComboBoxNumGroups.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxNumGroups.weightx = 1.0;
		constraintsJComboBoxNumGroups.ipadx = 137;
		constraintsJComboBoxNumGroups.ipady = 23;
		constraintsJComboBoxNumGroups.insets = new java.awt.Insets(2, 1, 2, 107);
		add(getJComboBoxNumGroups(), constraintsJComboBoxNumGroups);

		java.awt.GridBagConstraints constraintsJLabelSendRate = new java.awt.GridBagConstraints();
		constraintsJLabelSendRate.gridx = 1; constraintsJLabelSendRate.gridy = 3;
		constraintsJLabelSendRate.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelSendRate.ipadx = 8;
		constraintsJLabelSendRate.insets = new java.awt.Insets(7, 10, 5, 1);
		add(getJLabelSendRate(), constraintsJLabelSendRate);

		java.awt.GridBagConstraints constraintsJComboBoxSendRate = new java.awt.GridBagConstraints();
		constraintsJComboBoxSendRate.gridx = 2; constraintsJComboBoxSendRate.gridy = 3;
		constraintsJComboBoxSendRate.gridwidth = 2;
		constraintsJComboBoxSendRate.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxSendRate.weightx = 1.0;
		constraintsJComboBoxSendRate.ipadx = 175;
		constraintsJComboBoxSendRate.ipady = 23;
		constraintsJComboBoxSendRate.insets = new java.awt.Insets(3, 1, 2, 69);
		add(getJComboBoxSendRate(), constraintsJComboBoxSendRate);

		java.awt.GridBagConstraints constraintsJLabelGroupSelection = new java.awt.GridBagConstraints();
		constraintsJLabelGroupSelection.gridx = 1; constraintsJLabelGroupSelection.gridy = 4;
		constraintsJLabelGroupSelection.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelGroupSelection.ipadx = 12;
		constraintsJLabelGroupSelection.insets = new java.awt.Insets(7, 10, 6, 1);
		add(getJLabelGroupSelection(), constraintsJLabelGroupSelection);

		java.awt.GridBagConstraints constraintsJComboBoxGroupSelection = new java.awt.GridBagConstraints();
		constraintsJComboBoxGroupSelection.gridx = 2; constraintsJComboBoxGroupSelection.gridy = 4;
		constraintsJComboBoxGroupSelection.gridwidth = 2;
		constraintsJComboBoxGroupSelection.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxGroupSelection.weightx = 1.0;
		constraintsJComboBoxGroupSelection.ipadx = 175;
		constraintsJComboBoxGroupSelection.ipady = 23;
		constraintsJComboBoxGroupSelection.insets = new java.awt.Insets(3, 1, 3, 69);
		add(getJComboBoxGroupSelection(), constraintsJComboBoxGroupSelection);

		java.awt.GridBagConstraints constraintsJLabelHowToStop = new java.awt.GridBagConstraints();
		constraintsJLabelHowToStop.gridx = 1; constraintsJLabelHowToStop.gridy = 5;
		constraintsJLabelHowToStop.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelHowToStop.ipadx = 4;
		constraintsJLabelHowToStop.insets = new java.awt.Insets(5, 11, 9, 30);
		add(getJLabelHowToStop(), constraintsJLabelHowToStop);

		java.awt.GridBagConstraints constraintsJLabelPercentReduction = new java.awt.GridBagConstraints();
		constraintsJLabelPercentReduction.gridx = 1; constraintsJLabelPercentReduction.gridy = 6;
		constraintsJLabelPercentReduction.gridwidth = 2;
		constraintsJLabelPercentReduction.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelPercentReduction.ipadx = 53;
		constraintsJLabelPercentReduction.ipady = 3;
		constraintsJLabelPercentReduction.insets = new java.awt.Insets(6, 11, 4, 8);
		add(getJLabelPercentReduction(), constraintsJLabelPercentReduction);

		java.awt.GridBagConstraints constraintsJComboBoxHowToStop = new java.awt.GridBagConstraints();
		constraintsJComboBoxHowToStop.gridx = 2; constraintsJComboBoxHowToStop.gridy = 5;
		constraintsJComboBoxHowToStop.gridwidth = 2;
		constraintsJComboBoxHowToStop.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxHowToStop.weightx = 1.0;
		constraintsJComboBoxHowToStop.ipadx = 49;
		constraintsJComboBoxHowToStop.insets = new java.awt.Insets(3, 1, 4, 69);
		add(getJComboBoxHowToStop(), constraintsJComboBoxHowToStop);

		java.awt.GridBagConstraints constraintsJCSpinFieldPercentReduction = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldPercentReduction.gridx = 3; constraintsJCSpinFieldPercentReduction.gridy = 6;
		constraintsJCSpinFieldPercentReduction.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJCSpinFieldPercentReduction.ipadx = 88;
		constraintsJCSpinFieldPercentReduction.ipady = 20;
		constraintsJCSpinFieldPercentReduction.insets = new java.awt.Insets(4, 9, 3, 121);
		add(getJCSpinFieldPercentReduction(), constraintsJCSpinFieldPercentReduction);

		java.awt.GridBagConstraints constraintsJPanelChangeMethod = new java.awt.GridBagConstraints();
		constraintsJPanelChangeMethod.gridx = 1; constraintsJPanelChangeMethod.gridy = 7;
		constraintsJPanelChangeMethod.gridwidth = 3;
		constraintsJPanelChangeMethod.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJPanelChangeMethod.weightx = 1.0;
		constraintsJPanelChangeMethod.weighty = 1.0;
		constraintsJPanelChangeMethod.insets = new java.awt.Insets(3, 5, 165, 67);
		add(getJPanelChangeMethod(), constraintsJPanelChangeMethod);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	getJComboBoxWhenChange().setSelectedItem( LMProgramDirectGear.CHANGE_NONE );
	getJLabelSendRate().setText("Refresh/Resend Rate:");
	getJComboBoxShedTime().setSelectedItem("1 hour");
	getJComboBoxSendRate().setSelectedItem("30 minutes");
		try
	{
		initConnections();
	}
	catch(Exception e)	{ }
	// user code end
}

/**
 * Comment
 */
public void jComboBoxWhenChange_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getJLabelChangeDuration().setVisible(false);
	getJCSpinFieldChangeDuration().setVisible(false);
	getJLabelMinutesChDur().setVisible(false);
	
	getJLabelChangePriority().setVisible(false);
	getJCSpinFieldChangePriority().setVisible(false);
	
	getJLabelChangeTriggerNumber().setVisible(false);
	getJCSpinFieldChangeTriggerNumber().setVisible(false);

	getJLabelChangeTriggerOffset().setVisible(false);
	getJTextFieldChangeTriggerOffset().setVisible(false);

	
	if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_NONE )
		 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Manually Only" ) )
	{
		//None
		return;
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_DURATION )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "After a Duration" ) )
	{
		//Duration
		getJLabelChangeDuration().setVisible(true);
		getJCSpinFieldChangeDuration().setVisible(true);
		getJLabelMinutesChDur().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_PRIORITY )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Priority Change" ) )
	{
		//Priority
		getJLabelChangePriority().setVisible(true);
		getJCSpinFieldChangePriority().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_TRIGGER_OFFSET )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Above Trigger" ) )
	{
		//TriggerOffset
		getJLabelChangeTriggerNumber().setVisible(true);
		getJCSpinFieldChangeTriggerNumber().setVisible(true);

		getJLabelChangeTriggerOffset().setVisible(true);
		getJTextFieldChangeTriggerOffset().setVisible(true);
	}
	else
		throw new Error("Unknown LMProgramDirectGear control condition found, the value = " + getJComboBoxWhenChange().getSelectedItem().toString() );


	fireInputUpdate();
	return;
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		TimeRefreshGearPanel aTimeRefreshGearPanel;
		aTimeRefreshGearPanel = new TimeRefreshGearPanel();
		frame.setContentPane(aTimeRefreshGearPanel);
		frame.setSize(aTimeRefreshGearPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private void setChangeCondition(String change) 
{
	if( change == null )
		return;

	if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_NONE) )
	{
		getJComboBoxWhenChange().setSelectedItem("Manually Only");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_DURATION) )
	{
		getJComboBoxWhenChange().setSelectedItem("After a Duration");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_PRIORITY) )
	{
		getJComboBoxWhenChange().setSelectedItem("Priority Change");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_TRIGGER_OFFSET) )
	{
		getJComboBoxWhenChange().setSelectedItem("Above Trigger");
	}	
	
}


/**
 * setValue method comment.
 */
public void setValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	if( o == null )
	{
		return;
	}
	else
		gear = (LMProgramDirectGear)o;

	getJComboBoxHowToStop().setSelectedItem( StringUtils.addCharBetweenWords( ' ', gear.getMethodStopType() ) );

	getJCSpinFieldPercentReduction().setValue( gear.getPercentReduction() );
	
	setChangeCondition( gear.getChangeCondition() );
	getJCSpinFieldChangeDuration().setValue( new Integer( gear.getChangeDuration().intValue() / 60 ) );
	getJCSpinFieldChangePriority().setValue( gear.getChangePriority() );
	getJCSpinFieldChangeTriggerNumber().setValue( gear.getChangeTriggerNumber() );	
	getJTextFieldChangeTriggerOffset().setText( gear.getChangeTriggerOffset().toString() );

	com.cannontech.database.data.device.lm.TimeRefreshGear t = (com.cannontech.database.data.device.lm.TimeRefreshGear)gear;

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxShedTime(), t.getShedTime().intValue() );

	getJComboBoxNumGroups().setSelectedItem( t.getNumberOfGroups() );

	com.cannontech.common.util.CtiUtilities.setIntervalComboBoxSelectedItem( 
			getJComboBoxSendRate(), t.getRefreshRate().intValue() );
		
	getJComboBoxGroupSelection().setSelectedItem( StringUtils.addCharBetweenWords( ' ', t.getGroupSelectionMethod() ) );
	
	
}


/**
 * valueChanged method comment.
 */
public void valueChanged(com.klg.jclass.util.value.JCValueEvent arg1) 
{
	//fire this event for all JCSpinFields!!
	this.fireInputUpdate();
}
/**
 * valueChanging method comment.
 */
public void valueChanging(com.klg.jclass.util.value.JCValueEvent arg1) {}
}