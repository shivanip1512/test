package com.cannontech.dbeditor.wizard.device.lmprogram;
/**
 * Insert the type's description here.
 * Creation date: (8/1/2002 3:39:47 PM)
 * @author: 
 */
import com.cannontech.common.util.StringUtils;
import com.cannontech.database.db.device.lm.LMProgramDirectGear;
 
  public class MasterCycleGearPanel extends GenericGearPanel {
	private javax.swing.JComboBox ivjJComboBoxHowToStop = null;
	private javax.swing.JComboBox ivjJComboBoxWhenChange = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeDuration = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangePriority = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldChangeTriggerNumber = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldControlPercent = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldCyclePeriod = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldPercentReduction = null;
	private javax.swing.JLabel ivjJLabelChangeDuration = null;
	private javax.swing.JLabel ivjJLabelChangePriority = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerNumber = null;
	private javax.swing.JLabel ivjJLabelChangeTriggerOffset = null;
	private javax.swing.JLabel ivjJLabelControlPercent = null;
	private javax.swing.JLabel ivjJLabelCyclePeriod = null;
	private javax.swing.JLabel ivjJLabelHowToStop = null;
	private javax.swing.JLabel ivjJLabelMinutesChDur = null;
	private javax.swing.JLabel ivjJLabelPercentReduction = null;
	private javax.swing.JLabel ivjJLabelWhenChange = null;
	private javax.swing.JPanel ivjJPanelChangeMethod = null;
	private javax.swing.JTextField ivjJTextFieldChangeTriggerOffset = null;

/**
 * MasterCycleGearPanel constructor comment.
 */
public MasterCycleGearPanel() {
	super();
	initialize();
}

/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	if (e.getSource() == getJComboBoxWhenChange()) 
		connEtoC1(e);
	if (e.getSource() == getJComboBoxHowToStop()) 
		connEtoC10(e);
	// user code end
	
	// user code begin {2}
	// user code end
}


/**
 * connEtoC1:  (JComboBoxWhenChange.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.jComboBoxWhenChange_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jComboBoxWhenChange_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC10:  (JComboBoxHowToStop.action.actionPerformed(java.awt.event.ActionEvent) --> DirectModifyGearPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GD8D085ADGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155FC8FDCDC4575EF5AC61BDFCD95AB36442691B5FD6635340D9AEBCC5046CAABEAD42AD12946CAADAAAAD17A020AB6B69782018D8BACFF929345383510922530A498B1D2C292A4A4920302CA42A6303097F613E5F733FB89CBA449BBB3F34F5C3B4B5DE551CF5F474767F358BB5FB9E74E19B3E77E5C1959954A5E0C4E494CAA93044C9CC17EFBAFD390220E8B42ADEFA657A316762BA61D207A7B87D031
	602848A60979CD3A791BF6698CC2ECF69EA44BA01D1C3FCB77AABC178A37E4477590D0DB4FEC485BE16E688A2D67A58F6A4925690B867570D988349130C62099C086616A410DB25E8769C27919D0E616A0B4DCC3F83A8D9BD578D2192F629A7699C7F9FEBBD8AE67CF03B46109024F18EB14B21911676DEC1053660BA30574BB36E49590DD2A72117457B2D9137CE994FEC99D31C6585EFAGBE9BBBCE8CB58D3806EB86ACCE274BA90983369AEB3FE835CBAECF4D287D3445E32D310A276C83E20DE3586DF18DF9
	AC43BBF79E34F8A55133F7EC40A16E93AD1E8E0BD3F488C27435248EE78DF934FCC130C11A597B0702C6591E489311C252D51B025A1BAC5B19F71DE26F78FD362C055711321F217EA7F2ED101E8644F4EE9FC21D2BG9BDFC0305B6B88EFBDBC3783D99720AD7F79975A527D65D5C2F423A937A808ADCB96B09BD296A836A49C294D5DC4E3611391521E9557B7695A004CC05300220116G3DCEE330597BB6FC6E6E17763A0607DD4E5DEE779E0755F350E5959D703CF3A76448582762004BE3958496E75FB1D4EB
	580314F83DFF0CA9F1710500F1917369E5C26C7597E565E854ED417DD5D929F299422F153A31FA2DB8C56AE5843C91288B4881B493A86657D82F6FF937CFD62F7D90CB9E274551B9526F36F824BDA3F607D57448757B6BE0287AE99113DBBDE5B96617F95B55FED9FE5D012CDC8D3FAC1FD71B95AF7BA3C96597263BE1A818EE6106096DC17B768DA48EF38CA48E4B60B9D30ED10697D15C2642D90C5FC3631624FD10377C860C5B6EC22CC3FB760502216EA34DBAC47D36B92BF9A13327FBE1E05B5E6EA3634BF4
	4023019682A5G258169EFEC5299EF44763DC22A8DB3EEBBD4ED4BE40F0CEC00CF51A7F9AC7B1DDE49629C90BF37F86C16FE076895E41E0191E2FB3F1F1C0D7627815031CFF40A9E0BE4F7B921F44B30880164E5BCA7C70A890FC72439DD76E191948C3B85ACF7EC2494BE9DB0BAFD6636DAA4D161E0795F9AA13EBCE5799CCA04826059FDA37179E5F44CEA06E7B39073558BE384DBG69255CAF2BC6CA6073A388EC5131F3E70BFD0018E1710C217E97CE1131C4BCA5BA259651ADBA2D70601573DEB925D37CB2
	6862B62F99A5B869A3FB41F0AF47F523458C07B254DE467CE21AEF11A40F3DFFC492BBC5C932BB079479CD2344962FDF77738AF29FBFCDE2AC896A15811437886BF765E8292AFE6DAE570991F797E9B959CF0768B8DB8E7C750BF0CE4CB710B932FB914669335D9827AD8533046A7B77EB46A9A15FA2961F910B827B5AFADA2622637E3A6EA9767B6EC55AFDB27858726C14F52C1982AF73FB5FB8717BC230ED99D0BA777BA323C6565F76D83CA27630C39EE8B1512AC499633D4F97BC469E72E947D812CFBB461E
	70050E21E7FDDAB144721E77113945B56AD445644B3E925A071DCE119A4DC5843666F8360B78426E34CBDF582DC32254E9BFADC2BBAFA631F58D6D03FAF8B6AE46D89A7DA746D24569CB05A53D951A73D954CF77E6799633761E39D809A5E6535F46084FC507B88C0E5A6B9AF1CA8C4FBC1D27607278327234B66FCB27C9BC1E9047E43ED7CE2F9548B8629891F95D66DB72090FBD76E1E8AA52E165F55F6010FA5D97837611B522905B24AB83E2322FEC00852A20352AE2F1B36B8C312B9A781B013AE3B1EE463E
	5C246A2FF2406CF5B99C4C7D3CDD86478D249D4513A3A28C4724C3FF446BB2BCDE92107739DCAF16BFB2CE6A65D00F853124DE71FC1DC7668A06BDCA316720C35D1E0DF36FC103FA2D3A31E8CC338D693AA41635DDFCEC603CF577D9D2EE8A60993C6EE9636A31EA37576B9A3053E9C1EE0F8FFC2D42D7DD5F529948BEB0E1ED1BC047BF628F7DCD384E34D9C85B34C05A8CA45D0476DDFEE6E2FC4DBD338EBE876D9EAF2C0F2C228FFD7C33B344D7E45E12E1DC4FEDD37BEEC912A9286FE65E44FC96FDD3206F4A
	84E2C7AC60895C364A3345AA5F415A932669A1E8D934673E33EBD83C4B69874F66E03C8BB8DE5E4F57C349D0EE86107EE6683BB7B37D75B7CF9CFF593AA73B1F782B6DE6366EA96578860A7BD4B8DB8FB929FFC9FA9E64357C866767F51924DEC910CE7B8D564BF12EC0D52F8E175DA971BAED92C81FF5F96CC3F6A7E21BA986ABEFBA0831B9AE1536313024C9D78E44301E2384B3C13A0DE3794788E6A6E90E557492AC9252B19CBBC731A510CEDC0273593A7E8A78DCC5F45C82F58232814DG1A8B9487148AE4
	78AD7217D3FE9324BB005CC091C07301920052008C37B669CC37A23FE409500891B559E49DC4B7E26537E84F19B3E4DB083DEAFC2E0ABFAE086C44F97647135A2623FC0C9F311CA03C79F2EC844E45852A6722C974957298A94AA431676369D21A9E134B07351A0D146B7608032287C6DAB6FD89B3EFA56DDCEEA36D5C854FFDC00C5FF31474F70B43BE64A423C0B7722650F8CA0067E44E7B56B1920B8E4B18EB84025696C7785EBF261EBB4AGEB846A08E33EE6F29F767A69B80CBA0E52381B8F3CF1F1B84FDC
	B3CA7CB588E39CCC731DEEF1C0187EBB427B43DE5413863C5900D5G35GD9FF07762DD8CB6628836D16FE513197C6D20F4B51A1FA86C0A54B4F4AA17D72405ECE375D59EA979DD6FFA6EE6F66368D81FCE44283AE3B4B0ABC9B0F96AB3A5459F27E4F0F97717CB657E8172BD3F239653CD6FB89AD5FB55C6F5A6372A959F27E0F5C2F7B6B178D7CD4340E30D913710D3BB7F09D93D8E41E5F1E263A689C315786E328F8D014EC44506C5F933FFE56DF26EA3F253FE36B66B478E479DDA6F5FE7B6FD97E345FE37E
	7AE3DA7911BC7F33822D7267717CE70EE9654772FCDB1FBABFC1AEBF036747EA6A575F0679AF74E815EF04FC3676B9172F0E5F7A5BD8FEB7FCBA00265FC6765C7ECE3AB94672D1A3FCBA45D163F14BA9CB0DE5D42AE901D7B8A7F9D92B2AB7ED2BB656EFB7EDE5F3E37428FAEEECD837A3685C98FF9B6BAF4B65CF473B07B35F14478DBA564BFF4C0655C7495E9F578FF164F6B92171EB5ABFEC6D6A5D5D3EFF5F4787BF7C18EC9C32BED557C75E2969BA8305E0816131DB77D8065AE9EFE6EB07DEBADF907B4A62
	F16D707DE3E4EEEB073415E071386E75ED41BD2A187FF52150BE6D0066FED9D2D7DDD6E4BC2B5342F8E55ECFBED21B9B3CFED22FD13BFEDD07BA146AB11BE3FB5166F4A83F7AF602C57B458CA973A87C2B01CF16FF2FDFFE31AC2F64E7DB5479243E15FE72BB7C72F3D4724CB7F7D622EFD65DB9DBF0DC5F90F4AFD13A1D79A4CA7E94328FE726EE36E731F6DBC977ECF93B79EA3C23B0A86E5C49FABC2B7F4C7EBC398E8937E35B1CE9D56FE5469655E5658751DFFF87535BF50752B61150B6CC7F599DDB84557A
	7404E3286678GF9BB2B99A4239298228CD1387E3C40046B4F48BBF06F337D98E2CBB9B633G6D4E3E933137E8DB12BA586E4479E048713A368FF0741475DE5EC7E4C9C70D66652DBC0665A5F26C5FE6021131593094F52C5C9A444FF454E4F2B764233D52D26C9B5BAAC85FC804F49AD05EDD687FFBFA547D5EF019B1ABB3087F0DF7B13FD75F9538A6FEF39D5157877878DD38F65C1B778EFCFEEEB9AE6FECFDC85F91684BB8009D9E17DB74C8E38C25EFC872FA46FAEC2AFB12EC3D1B59CB6AB77BAE365E4D64
	78BA0A4FD361EC9DFC49B15C7BDEGF99B6F46F5F08F9DE347A19D85B49FA89EA885A87B9E2C5B0F72CC42A47BF9DDAEF73BF88A26BA65CD1F55EF346F2B6D395E120B7DE441229F8A8B4F4F488C56CFB65E435A27C17E0C4ABA1CC9BED97D1E55137A59A0EFBA50BC20A5C04B00D2F97D9E4D2BE675A34D33DB12AC83B67A5605157B5CAE0EAAB0D978303ADD5C9F3867A3A440FBF9823323AAC1FBCD5B88F88710D5156F036719817C4C7E01C2B21EC5C3DEAC50B220D4A07D9F50762D3AC97752BF740558CB0F
	B0E17BD4C3194DC0DDFFD06C304173789F7C6DE2F21F70380D007C39C08BD5FCCB61B9C9D36E8BC3204F5201AF6FDE46DBFE2F364FCC0037GF52B729D70BC6DDEAD9D7F6AD547DCA4704C830A15F993B4F4B03939BCD613E51E8C952F7E3EE0F2995C97C68D1EFA405A004C2ABCA6374D9C688BB770CC177922B44AA294837812003CE510CE39CF4B97FB0A55BAD6810FE1992C4F1749FDE619360EF6407B00A4D57E8C8DDEB666BCC1475A594B581873AA47DF2678B2954E4622860A13347EFE98EF6E4731685B
	E468175F1DCE6AAA05A063A9047481188A8E759F978724AE4B901729D8C7EC627B11EC181573F62CA37D086C9D5A61E567B45D6A6984C6679073D3EE2F40FDE6D0BD4FBAB655FD5D299053F16DFFD5872B3FB5BF783E6F09FC6DFD5F13795A7B3E23792177FD4F65875F77BDBFDF3D6F4B5A7DA283E91B698F40BAGA88EA891A875819C634A74EF89F40C53981BBF348E09702AC8CE0AA4547F22BEF8DD7F2E1F7CFCA937003C93773BA449B5CC4AC73C200034973C8CD210E1A58544C79E7B10CDE22CB23E112E
	219C62A00559DE4EF5F4BD1877A03C63BC087BBB5983842B07F48B476C946B00340DE345741DFF9C52D19CBBC957F3B1100E6558C32DF4EFG52A99C2B5E07FBC82BB876A25D27EACF04F9A8917DFC22B0385FBC055AB162AB540E113305214F1F4EAF8C96C34C3E2BCD380F66CBC41B7F76A941E6C2FAAE478EF622CF97F2AC2A936B3B14E3FFF9071EBD7D915EA17F08186D986AE863D8EDB97A4F4C31AF4BD1071BE33FAFC79D53B9B60B3651B2C827F2EC4C003242C30845D12C8C52959C5BDACC7788A15D46
	316DEC0F9052BE0E790A288FA0BD1BE3BD825ABC1FE3D78BE8DF9C47BE2732E58F433B584308B551F5FDB324BBB8B6270EE0D6C80FF36CB90AC5C0BA1AE3BB72D0C78C47967721CFD7F14CDD04659916F33EA2142D60D89135C502F48447E2B85FDC0EFD2B07E0691056BF02587BFA0299A15D4031AEB36AED675865946BA3E90EE5333E8569C80EDDC55FA966C1BA0EE38F9CA1D8A224D3B8F6E18D6FDB9C5BCA6DEB7F93742DBFA1E6256D6B0374CC0E7D25046E31C1BA0EE3EB4BA67A2A16E2A940A3BC0AD83A
	857DDC4631B5343CAAC8B7F06CA9E68B242D9C7B400CB67B9E45BD5F548A32060907F48A10A129C9E7826AG7281C58345832583997F5C24EB7CB34A8915C44E8C69F12059C031C04B01D68115BF863CC0E620F120590F21DCD345FC0D390A6825EB42A47F358631AB587C5611B4B14FA4E324AEE8AF6679D47C519A3201941F9438EE9B56349D771BCB8370D0673C799A18CE7EA47364FA012D13B0EF2A7B52452AE779DD4E90FC0C1FE318FCEE3C1A0EDDA24CE9DDE3EE11E1B186FAB6B2B86895799CFC0D4140
	317D5E8E1757CED6DCEC8F690EFE6DBD6747687C988BB11270986E9B3FBEC04ECEA5B00A6D77FDCA36CC653D28E98344FF43961FFDF8E4186E2633F222687C398A4A487B8B16D3F5B4785E7BEE5A7F6B013719734FB0913D03AE2744F8665079488179BE4E7357D66D7DF99D1DEF6781DFAC10BE19E0FB773504E827B581148AF204489A182C1D85A8E3656A552BB3F95D8BED346E3020752F7B96F60EG7CFDC08CCB20364F04F4D4B25ADE5229ED7B5B1DE8FB9C17BF55096D121E0C7579D5E7287A6448F66684
	290F7171A69DD9E47F0B576765F7345B32241A682E867E0647511E0B693CE805341BE35D65E877EC0E4DADC73B17BE0EF6BFD2BE195DB9A16C4E18E0777C235AF64753184AFE821E1FC0FB2EB420BD0DCFE0BBBCEC700FEFFA85C9AE3B39D83B6CEEBA1758208C0917F360D870789E207E0A865E984EFFD111FFFC7F144E3309101F4C6D1DAE20CF4B1EC47F5DACCC964768BBAD7F35C0B9AF794571F011F69C1FC76D69GFE7313E873E73D7EB61F206B0599109F49F92E2F539EDB6E226B17B860CB643CEB3779
	7B7E2764B5C4E075BC18B7D9BDF3C354B3BB056DB7E672B6C8266BA2836065A9685FD9C5E8D3DB8A7A775E22D0FAF38374CAA97EFAE7C09A6F2332BAEE698D9E973B58F9B348C4F37D37CE2ADF97225ECB211C81785C4A75C775E84770FC3AAEC9847E6494EC0F8E3DF6ACF8695A4E7094786EA9745D99B37A2E65A9147F35593FBD8BB6A8FD6975A07DF4BB6D27EEA8E31C1733A8BF384F6EE36BC260DD4079D79C710F4BB534EEC9101F7A947A7527B5134513CE88BE6E14BF5D24BB21EAFB989BFA34FD55CDF5
	D781FF7D53E85F1745E4FE6EF7F9688B98BB9B7EC1B13FF38EFCBE2079C0F1CF33FBG7218DCB271CC3938B470CCF9B94824BD2DBED3EEAD537675B13A0E4DFB864613E7309D5F20F3FEB3245B1FC13D2F15787B53C45735BE481F4EF98433767C3511464582600BFF86FD7F29F9B25F672BFC1BC164D2D5F3D52A32174EF45B1D2A33ECFAEE5BB242EE1C327C6B46834F327D18F8B9A2BB7F25659C34BB61B5583B5786DC185F3DA7D0CF07476E725825B1163F63F3CDBD4844758C6F5A94D0CE1747BEB4A4FABE
	9E996E276F640C6FBFDDC1788E49CBBB19EF24608D4257859DCD25D61B77E857E6AD9B838CE03C1B7699387EAFEC221331323CD73D25026ADCDE49164F4ABF288CBCCBA6F1DC1D0AE74D571E89BC0BA6794DBC7F67FAAD79AE1EEFA8544A37717C5A9E2D7247F97E924D72A3F8FE09D9ABFFAE4F9F7413DF184A7213F87EC71A7A53F97EFB9B344A4FDB01799F54841E65137CF2488FFE967CD23FD1187CAC180D4526D7953935C7C919C14E696B6A36D59B6B6A378ACC2EF323A2B7E88ADF4E7306A2F7F76BDB01
	F22DB038D43DE535DB9C2E21372A0DA6905D8613D6703A9A7705FB2E2FD5863369F1529564732DBF6B71FC2B7C679789AD8FE6E47ED350BE5FB22DE0E36B34954AB9E40B737BD92C4CC3C645467726621FFFA8F2E91FEE8EAED75FD0ED5CE65A0A3C3BBB437583637FFEE778B1F2D905622B1BAA957BB20E06E39F13FBE60BA2D7D19EFE3DDC65D32B576272706B75F115D22F13DB957B9A8A42376FC6C3787AAEFFDB51D1F5AC7C18386B9DC5EE38A8FC39DDB50A5CA1A15C3E4678FFAC046BF7262B3FD67165F9
	A6D59F1FC2BD0777ABF2BF287B7AE3C3F2DD78ED732B830A7D77FE2414A1067477766D908C5B3762BBE7D1B87AA65A1B36CB9ED38FAAB61C7AD831610A22D071783EDFBF1BF5C8A9A336C3A923C69F220CF7CDFEE5BC7A09A277D0CFF9F0B990B3EDE5FC116670FDDD5029149F159FFEFCDC5F25485DF9A4FC3972AF9439EF57049BD7F29F6AD67CB9FCD8A927BFAC3B59396A22E27C6E57C218AB52D6609D1AA75FA0030E56DD762191FB4D08E4F76C5C59E5179C629E7995C13E3713D50277372A1E45FBB52692
	22238F52BE2008E7716E4EFB2548BB0F730A2574FBC2104EGB2BC07F776FEFCC4295FD31690755B3E7D5DEAE3C3837A77669EC5AE23B8FC394AE30A5CA3BDDF3F3F571A3F7ADAA0EDD770FE59C64F1D19BFBD15F8972A6AB97471D3E7704E54CC0EBD26C7AC0EE37B8AD1F6954786FB102FAF8D319729AC31A50AE37B4D082DCA4378292C723B23285C4162EFGCC76A75C163E3FE2F95F66FA23B8665C00D88247BCB5F8C7AC6F7F60FD009DFD643D2D9952E620E9C0D1C0B1C0F1C009C029C0424AA65DC6A093
	D08BD0B71083E89CA882E86ECABC5FFC7BCD528F025D5112AFDD5243E40F055D7DE77B7DCB0AA73B4334F025565D0B3BA7155B9C10166FA214FC35BBE1F3E95FDC36B270CE58AFA81E34B270CE580E923C93168AF99D69F8B653D87A55747F1176778569017A9F23781274C07DA7CAD17FD248B3BD0F7AC7AB836FC3C4C25E3C67190FE31F57BE33C9GBCB9A0AF83527A97345A6659B37C4E0E1CDF2F62EB03E733265C13FA35EF5C40B39DA8CA660DF9A1589D21764240BAAD815EE5B2FF0A069C21D5009BDE74
	4F2B00F4430BDA361D68C15B5A657CBE951F844FB3B465D66983ED1B8DFC73E55EB879B3B1C0B69552C206BFD68669AA20460C40B3330FA75CF56AG9E2B4C6713BFE78614978D698581D8BC24178325CD50F1A5EF1B6C17D85E4617941EEAF8EEFEC92B7E5F65FE6B1273EDAA3EF1F80E501473EED04742DC60D98834D466CDFAA9D8AC0C5620DC3A4C1377326AFBB4AFCF14E36357013E60E7F71F74CDFEF6F724CF7BDECBDF5F44FBADE21F763D1693FD6AFBAD8CF37711F9E288464FEE4EB74231439CBBCD4B
	A45897F62BE46378B4EA97415BC422105F9121F60DD22CDB46AED0E107E5AC220F6CD3C215EDAE8F4ADE5AC777906D8E87CB4F22BCF627D71438BF66D09B6DEE0B4A6E2BB8C66CA61B88EB04A52585D456E1F70AFB59B74CF9DB7E0C1EC732676BD44F0DA57F7DFBE31F7DBF5071E829D22794557349527F3E6E6F7DD7F548F7F668BA4B84FD2E6DE53C9F71B4454C10F6F06C50963A878D69880E8D507558DCC8AF615879F49D3C8C52499C5B493F431741B18FAD2F6DEFCD3A3E3FA116F3966FF4C89CFB278C6D
	1B4131D3E5D85EEC0E3DCB57ED29104EDE05585F75E84BC60EF51E43722AB9B6679C563719E32B4F210EF60EB98BD1F6B647EEACC459799CFB2D88FD954B31AB4C682B840E7D025B174C311F1D613E6258F985682B36D790E36BCAB324FD9CAB5323FDB3B9562B477222B95651033ECA63586682144D7EBB3F07D700F55B4831BB8A30EE959CEB2065B5C05A4C3119BDD8DFB7479AF9FD27F36C2F63E8DF94479CFA2CEF8A47FEC14BDB856972557CDE1599EDB6F1ECB145DAA05D45B163D134390FE39764234D92
	479E48C71BE7F06C19A3E873EC0E1556224D73B9965903B6433BAC462EFE224DB7D22C8CF8CC1C2F31876B5142316F76200EEE0E5597E03B4D63581C9E6CB3319C7BCFBE161740319979D8DEB247EAF81F294FC46CFB9B303EED9C3B430A6519B936DE246706101E463153A26A1849B1F6BF0C58371CE32907313CB40E3DF784E53333F649E7DC73AB354F326369785485FCB64E1B39457F6C730DFE22D65EB75F22FD9EF7160EC111D0C6B4AF67741960E71F17503E3994F893B97FCFCA7D4F6A2E2363DF761ADD
	BA8390BBFF7B24776B5C99E806F2DEDC3DFAF5812F4F7FEC51BE7B3C0256279D783B0198D6C3475469100E60D8D7997AAF165B787D32F06E058433B1854A79D0D05F8BE9B7EB7B5CCAE3AE9D7805EC3467DFB42E2BA15D403171F33C0D81E3ED5ACC0E56657B899BC25E43481D445EC8A81358778A7815697BD1A16A0B667A8648D7E6E53B7752B1FDA964A5F29B6F20F5494E01364EC16C815A3F9BA15D16033E3D65CCA8DBF513586A03F21E145B1F6978A57557F440A3F2B08EE775840F5BEB6998918B3C715C
	4E7F68313E695C4ED37AD0F666CFE227F16DAE5D87F28CB09DE3D4EFB5608DEBD16F3E8254EBDD0BFE7E21DD7173CA1A9F81F93357E25D8E751035BDACEE6D27211FD99CE45B85EF54215CF12A0B58974FF5DD4F6E49C2DA48C5CC24752E06F4C3AE56BBAFE47BCCF657458665DC6D57BE51D407847834DC2CC3DCCF29DF9DF66328A64B7C095B9F43ED1DE5C6DFA572F26E8D386391F7DC715DFEF667AA8F62B18F4BD8100F65B6F2ECB545EC1016B8D6C675C7C3BAA68F7D72F66DE4F19B4AAF4B211C6F48F71D
	180E1B280E9440537330BE897A60F17B943B532C5B252B5671766BC11FF46B504EB9BD13452D5A4E69A02736B38A526F8A6A3BCAC7E98C4E85FCBE57FB9B553B9C52A99C9B4CC7DB4A5621AD1767CFB60E0672D973BAE59CE5BA3E20B1508EF877BA54FB9D1D2327C3BA02E3AB2DE84B12F5685BEA51BFD61EA4D7E8647173E2716B5C47CC859DF8970A693F014E739900E76723CD6B0F20CD26FC744F47C74239B709F72C4C797EED6506748572F3707D69C7AB0DC238E7A451430ADC7719D0E78D266D6A330E3B
	1D0A5C1725614B3DFBD2112B691D5A99C9B7B91A101F3F74AA65DCBA853B67C80A1C31AC44D995B9C2D01D3F1EA88B5F27CBC794BB1FBB25683BB05459D83D7F5918E3CC115BF7EEEAE72A171C8B5F564BCEABFAFED9983E5CCDDFAAF2BFB4076F7F24F1C56ECAFD78F2FD679439B9E72696B7978ACAFBBC2C52DF52933EFE5DD9C5CE972A9D371B7C6226CB9F3ECF771CD36CF42B7A73D513454DF6C55F31027075DD12296878F7C8DF544B3EE03C5F223C2A23201ACE729F3F06672567E0F2BDFE1D2568288B59
	5E75FE7E7E77DAC56E71712935F7CF2E62477F49D3455B946A78FCD8F5145F5326F0A69D23D36C199672EC575F1EBB73437779BD6B949DC9A14F2F7DFD1EDD28486556CE4D675B0A941F7799D4E36C945A7CBB452AD869893F0F0D7704637F60672E5714A836BF2A3AFFDF934A060071BAEB3DA237ADBF7CF965CCFE7831D339C13133CDF51F6E358D615B792BCD0A5C4D56294DAB6B4470ED3D77B545567CF2C5678307C345437B6F2A6F39D49F79FA6D7ABE3D8348FE4FFB711B3F0105F64C8AA1476B91CAA66A
	5EFD619F9F0C69EDA94B9232768BEBED74FCE13F10B3CA8EAAFCB098E77E92688712E010FF174AA87F2853CEC9A8203FB1E5E4BFB2856932B65728D1F299494FC699E5F600DF5F67F10DGE0F1DB866C5218117F9C1431F2277724C0679736B19D10728885FE6D733BAB5EFDE2691FBE772E91566E97B6112D17CED0CD3E55AEDADBAC927EBCED2B20F3131F30A32F947B05ECAF7D4871CAE38E31DDA89B7C147CE423D7922D3B71BB38DEC9D85FCEB45512ABA135ED962FCDA267C79F348B59CE72C33AC2894BF6
	D81CC3356C4B739F905F88193B1B293D64B8D7GFBCB293D24149ADECA6962224AFF9CC8DE38C648EA9556B9DC96EB2BE5C0F2F9768BBA4966913DB617436AF36FE285650D1256A4EFAEEB203857F975C9E5EB486BAFB77A046FA7B38BD28ADAE11A71F904DA4AC9D67CB51C035CB87600AA5133DFA2BF8C6C72D4703CEFED16365C356FD5F31610A9D71238FE1D4FAD89EB87AD43F64798BC34505EC09B25D082EBBD9627F7506599864B0C8116E196D7D0F3496D26CB7F774BC72882C5D4925EE42E84515AA151
	B5DC3BFBF0506E94F98160D7A87E8DDEBC61298960A971DD3C7E407D2B7BA18EDA04B543A6937DDFC77FEFA37F6BA8D2C7113AED605CB4A164DFE03E8F6BCC03876CA9227610662FE90596149EDAF17B158FB72625C26DDA059C7A830F508886050B5D6FBEBF6652B772A313AEA0ED64A62162A3651678F80924067B6951DC52296DBB577C652AB5D9C2B6F4C3F6D48941CB4E9BA1F8BD2CD72E010EC5630E2C9148DCC7466F42A0FD08DCEBB6519499A832650162FEA22941B3D1A2D3A51193C4C22B5712D45E04
	3EC1D07D44A0A73001079AC915D25675747F46A9B79C11FA0D4A16F3FFD77BF81DF2E43F11B9BB771BEEF73DE2F72EECB779DC4B6DA6837CF9FEF5A3C42EDFE57A35D79D6741AD67F9FE65901EEDBCA570FA7B7B669B6C293D0A2732E5CF11DA668529C5B718FEC8A3750D2A53C125CE0F4875E9A23A49CCCC3F7FE1442F5540943B36EA586E2C592A6461D7E1A02FC87E4A09110DC9EA04FDE505A064EBA5E46AE6627E537210C66A9B65AA33EFC200535F3F8BD28B926E7F1CA011A584F61B2AEFDECD077C07B2
	DE5B7F3F5A4B6D5FDEEB654FD06D3559CF02D01E1F84F98F2872133FC8A3750D724299458B64359123B6FB52DAFC036B74DD25CEE4E9C2DA166C7267852905FF4B92AFE04BE67B71D479257EB941EFD9C1A43ED13E3954FF124276D626DAB21D5F6A377CA2792F53BC765D292D67543F6118F15E2BC1FF3BB5FD53AEF63F6E35DD813F616824E768AD007781313BDFB7D77CDB887E1BE31D439607C332B8CE6CF6DA496F0F6D9913C465770E3C1524FCAF724819723D37CAE277F1154C7F85D0CB8788F9ABBB39E5
	A1GG40EAGGD0CB818294G94G88G88GD8D085ADF9ABBB39E5A1GG40EAGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG1FA1GGGG
**end of data**/
}

/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private String getChangeCondition( String change )
{

	if( change.equalsIgnoreCase("After a Duration") )
	{
		return LMProgramDirectGear.CHANGE_DURATION;
	}
	else if( change.equalsIgnoreCase("Priority Change") )
	{
		return LMProgramDirectGear.CHANGE_PRIORITY;
	}
	else if( change.equalsIgnoreCase("Above Trigger") )
	{
		return LMProgramDirectGear.CHANGE_TRIGGER_OFFSET;
	}	
	else
		return LMProgramDirectGear.CHANGE_NONE;

}


/**
 * Return the JComboBoxHowToStop property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxHowToStop() {
	if (ivjJComboBoxHowToStop == null) {
		try {
			ivjJComboBoxHowToStop = new javax.swing.JComboBox();
			ivjJComboBoxHowToStop.setName("JComboBoxHowToStop");
			ivjJComboBoxHowToStop.setPreferredSize(new java.awt.Dimension(133, 23));
			ivjJComboBoxHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_TIME_IN ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RESTORE ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxHowToStop;
}

/**
 * Return the JComboBoxWhenChange property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxWhenChange() {
	if (ivjJComboBoxWhenChange == null) {
		try {
			ivjJComboBoxWhenChange = new javax.swing.JComboBox();
			ivjJComboBoxWhenChange.setName("JComboBoxWhenChange");
			ivjJComboBoxWhenChange.setPreferredSize(new java.awt.Dimension(195, 23));
			ivjJComboBoxWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			// user code begin {1}
			ivjJComboBoxWhenChange.addItem("Manually Only");
			ivjJComboBoxWhenChange.addItem("After a Duration");
			ivjJComboBoxWhenChange.addItem("Priority Change");
			ivjJComboBoxWhenChange.addItem("Above Trigger");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxWhenChange;
}

/**
 * Return the JCSpinFieldChangeDuration property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeDuration() {
	if (ivjJCSpinFieldChangeDuration == null) {
		try {
			ivjJCSpinFieldChangeDuration = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeDuration.setName("JCSpinFieldChangeDuration");
			ivjJCSpinFieldChangeDuration.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJCSpinFieldChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeDuration.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeDuration.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(3)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeDuration;
}

/**
 * Return the JCSpinFieldChangePriority property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangePriority() {
	if (ivjJCSpinFieldChangePriority == null) {
		try {
			ivjJCSpinFieldChangePriority = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangePriority.setName("JCSpinFieldChangePriority");
			ivjJCSpinFieldChangePriority.setPreferredSize(new java.awt.Dimension(30, 20));
			ivjJCSpinFieldChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangePriority.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangePriority.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(9999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(0)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangePriority;
}

/**
 * Return the JCSpinFieldChangeTriggerNumber property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldChangeTriggerNumber() {
	if (ivjJCSpinFieldChangeTriggerNumber == null) {
		try {
			ivjJCSpinFieldChangeTriggerNumber = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldChangeTriggerNumber.setName("JCSpinFieldChangeTriggerNumber");
			ivjJCSpinFieldChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(35, 20));
			ivjJCSpinFieldChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJCSpinFieldChangeTriggerNumber.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(99999), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(0)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldChangeTriggerNumber;
}

/**
 * Return the JCSpinFieldControlPercent property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldControlPercent() {
	if (ivjJCSpinFieldControlPercent == null) {
		try {
			ivjJCSpinFieldControlPercent = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldControlPercent.setName("JCSpinFieldControlPercent");
			ivjJCSpinFieldControlPercent.setPreferredSize(new java.awt.Dimension(48, 20));
			ivjJCSpinFieldControlPercent.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJCSpinFieldControlPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldControlPercent.setMaximumSize(new java.awt.Dimension(48, 20));
			// user code begin {1}
			ivjJCSpinFieldControlPercent.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(5), new Integer(100), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(50)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldControlPercent;
}

/**
 * Return the JCSpinFieldCyclePeriod property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldCyclePeriod() {
	if (ivjJCSpinFieldCyclePeriod == null) {
		try {
			ivjJCSpinFieldCyclePeriod = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldCyclePeriod.setName("JCSpinFieldCyclePeriod");
			ivjJCSpinFieldCyclePeriod.setPreferredSize(new java.awt.Dimension(48, 20));
			ivjJCSpinFieldCyclePeriod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJCSpinFieldCyclePeriod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJCSpinFieldCyclePeriod.setMaximumSize(new java.awt.Dimension(48, 20));
			// user code begin {1}
			ivjJCSpinFieldCyclePeriod.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(5), new Integer(60), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(30)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldCyclePeriod;
}

/**
 * Return the JCSpinFieldPercentReduction property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldPercentReduction() {
	if (ivjJCSpinFieldPercentReduction == null) {
		try {
			ivjJCSpinFieldPercentReduction = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldPercentReduction.setName("JCSpinFieldPercentReduction");
			ivjJCSpinFieldPercentReduction.setPreferredSize(new java.awt.Dimension(49, 20));
			ivjJCSpinFieldPercentReduction.setMaximumSize(new java.awt.Dimension(50, 20));
			ivjJCSpinFieldPercentReduction.setMinimumSize(new java.awt.Dimension(0, 0));
			// user code begin {1}
			ivjJCSpinFieldPercentReduction.setDataProperties(
					new com.klg.jclass.field.DataProperties(
						new com.klg.jclass.field.validate.JCIntegerValidator(
						null, new Integer(0), new Integer(100), null, true, 
						null, new Integer(1), "#,##0.###;-#,##0.###", false, 
						false, false, null, new Integer(100)), 
						new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(0)), new com.klg.jclass.field.JCInvalidInfo(true, 2, 
						new java.awt.Color(0, 0, 0, 255), new java.awt.Color(255, 255, 255, 255))));

			ivjJCSpinFieldPercentReduction.setValue( new Integer(100) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldPercentReduction;
}

/**
 * Return the JLabelChangeDuration property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeDuration() {
	if (ivjJLabelChangeDuration == null) {
		try {
			ivjJLabelChangeDuration = new javax.swing.JLabel();
			ivjJLabelChangeDuration.setName("JLabelChangeDuration");
			ivjJLabelChangeDuration.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeDuration.setText("Change Duration:");
			ivjJLabelChangeDuration.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangeDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeDuration.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeDuration;
}


/**
 * Return the JLabelChangePriority property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangePriority() {
	if (ivjJLabelChangePriority == null) {
		try {
			ivjJLabelChangePriority = new javax.swing.JLabel();
			ivjJLabelChangePriority.setName("JLabelChangePriority");
			ivjJLabelChangePriority.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangePriority.setText("Change Priority:");
			ivjJLabelChangePriority.setMaximumSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setPreferredSize(new java.awt.Dimension(103, 14));
			ivjJLabelChangePriority.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangePriority.setMinimumSize(new java.awt.Dimension(103, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangePriority;
}


/**
 * Return the JLabelChangeTriggerNumber property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerNumber() {
	if (ivjJLabelChangeTriggerNumber == null) {
		try {
			ivjJLabelChangeTriggerNumber = new javax.swing.JLabel();
			ivjJLabelChangeTriggerNumber.setName("JLabelChangeTriggerNumber");
			ivjJLabelChangeTriggerNumber.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerNumber.setText("Trigger Number:");
			ivjJLabelChangeTriggerNumber.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerNumber.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerNumber.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerNumber;
}


/**
 * Return the JLabelChangeTriggerOffset property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelChangeTriggerOffset() {
	if (ivjJLabelChangeTriggerOffset == null) {
		try {
			ivjJLabelChangeTriggerOffset = new javax.swing.JLabel();
			ivjJLabelChangeTriggerOffset.setName("JLabelChangeTriggerOffset");
			ivjJLabelChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelChangeTriggerOffset.setText("Trigger Offset:");
			ivjJLabelChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelChangeTriggerOffset.setMinimumSize(new java.awt.Dimension(143, 14));
			ivjJLabelChangeTriggerOffset.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelChangeTriggerOffset;
}


/**
 * Return the JLabelControlPercent property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelControlPercent() {
	if (ivjJLabelControlPercent == null) {
		try {
			ivjJLabelControlPercent = new javax.swing.JLabel();
			ivjJLabelControlPercent.setName("JLabelControlPercent");
			ivjJLabelControlPercent.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelControlPercent.setText("Control Percent:");
			ivjJLabelControlPercent.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelControlPercent.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelControlPercent.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelControlPercent.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJLabelControlPercent.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelControlPercent;
}


/**
 * Return the JLabelCyclePeriod property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCyclePeriod() {
	if (ivjJLabelCyclePeriod == null) {
		try {
			ivjJLabelCyclePeriod = new javax.swing.JLabel();
			ivjJLabelCyclePeriod.setName("JLabelCyclePeriod");
			ivjJLabelCyclePeriod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelCyclePeriod.setText("Cycle Period:");
			ivjJLabelCyclePeriod.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelCyclePeriod.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelCyclePeriod.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelCyclePeriod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJLabelCyclePeriod.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCyclePeriod;
}


/**
 * Return the JLabelHowToStop property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHowToStop() {
	if (ivjJLabelHowToStop == null) {
		try {
			ivjJLabelHowToStop = new javax.swing.JLabel();
			ivjJLabelHowToStop.setName("JLabelHowToStop");
			ivjJLabelHowToStop.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHowToStop.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelHowToStop.setText("How to Stop Control:");
			// user code begin {1}
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_TIME_IN ) );
			ivjJComboBoxHowToStop.addItem( StringUtils.addCharBetweenWords( ' ', LMProgramDirectGear.STOP_RESTORE ) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHowToStop;
}


/**
 * Return the JLabelMinutesChDur property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMinutesChDur() {
	if (ivjJLabelMinutesChDur == null) {
		try {
			ivjJLabelMinutesChDur = new javax.swing.JLabel();
			ivjJLabelMinutesChDur.setName("JLabelMinutesChDur");
			ivjJLabelMinutesChDur.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelMinutesChDur.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelMinutesChDur.setText("(min.)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMinutesChDur;
}


/**
 * Return the JLabelPercentReduction property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPercentReduction() {
	if (ivjJLabelPercentReduction == null) {
		try {
			ivjJLabelPercentReduction = new javax.swing.JLabel();
			ivjJLabelPercentReduction.setName("JLabelPercentReduction");
			ivjJLabelPercentReduction.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelPercentReduction.setText("Group Capacity Reduction %:");
			ivjJLabelPercentReduction.setMaximumSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setPreferredSize(new java.awt.Dimension(112, 14));
			ivjJLabelPercentReduction.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelPercentReduction.setMinimumSize(new java.awt.Dimension(112, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPercentReduction;
}


/**
 * Return the JLabelWhenChange property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelWhenChange() {
	if (ivjJLabelWhenChange == null) {
		try {
			ivjJLabelWhenChange = new javax.swing.JLabel();
			ivjJLabelWhenChange.setName("JLabelWhenChange");
			ivjJLabelWhenChange.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelWhenChange.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJLabelWhenChange.setText("When to Change:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelWhenChange;
}


/**
 * Return the JPanelChangeMethod property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelChangeMethod() {
	if (ivjJPanelChangeMethod == null) {
		try {
			ivjJPanelChangeMethod = new javax.swing.JPanel();
			ivjJPanelChangeMethod.setName("JPanelChangeMethod");
			//ivjJPanelChangeMethod.setBorder(new com.ibm.uvm.abt.edit.DeletedClassView());
			ivjJPanelChangeMethod.setLayout(new java.awt.GridBagLayout());
			ivjJPanelChangeMethod.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJPanelChangeMethod.setMaximumSize(new java.awt.Dimension(335, 88));
			ivjJPanelChangeMethod.setPreferredSize(new java.awt.Dimension(335, 88));
			ivjJPanelChangeMethod.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJPanelChangeMethod.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);

			java.awt.GridBagConstraints constraintsJLabelChangeDuration = new java.awt.GridBagConstraints();
			constraintsJLabelChangeDuration.gridx = 1; constraintsJLabelChangeDuration.gridy = 2;
			constraintsJLabelChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeDuration.ipadx = -5;
			constraintsJLabelChangeDuration.ipady = 6;
			constraintsJLabelChangeDuration.insets = new java.awt.Insets(1, 5, 3, 5);
			getJPanelChangeMethod().add(getJLabelChangeDuration(), constraintsJLabelChangeDuration);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeDuration = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeDuration.gridx = 2; constraintsJCSpinFieldChangeDuration.gridy = 2;
			constraintsJCSpinFieldChangeDuration.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeDuration.ipadx = 34;
			constraintsJCSpinFieldChangeDuration.ipady = 19;
			constraintsJCSpinFieldChangeDuration.insets = new java.awt.Insets(1, 5, 3, 2);
			getJPanelChangeMethod().add(getJCSpinFieldChangeDuration(), constraintsJCSpinFieldChangeDuration);

			java.awt.GridBagConstraints constraintsJLabelMinutesChDur = new java.awt.GridBagConstraints();
			constraintsJLabelMinutesChDur.gridx = 3; constraintsJLabelMinutesChDur.gridy = 2;
			constraintsJLabelMinutesChDur.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelMinutesChDur.ipadx = 5;
			constraintsJLabelMinutesChDur.ipady = -2;
			constraintsJLabelMinutesChDur.insets = new java.awt.Insets(5, 3, 5, 5);
			getJPanelChangeMethod().add(getJLabelMinutesChDur(), constraintsJLabelMinutesChDur);

			java.awt.GridBagConstraints constraintsJLabelChangePriority = new java.awt.GridBagConstraints();
			constraintsJLabelChangePriority.gridx = 4; constraintsJLabelChangePriority.gridy = 2;
			constraintsJLabelChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangePriority.ipadx = -13;
			constraintsJLabelChangePriority.ipady = 6;
			constraintsJLabelChangePriority.insets = new java.awt.Insets(1, 6, 3, 3);
			getJPanelChangeMethod().add(getJLabelChangePriority(), constraintsJLabelChangePriority);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangePriority = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangePriority.gridx = 5; constraintsJCSpinFieldChangePriority.gridy = 2;
			constraintsJCSpinFieldChangePriority.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangePriority.ipadx = 29;
			constraintsJCSpinFieldChangePriority.ipady = 19;
			constraintsJCSpinFieldChangePriority.insets = new java.awt.Insets(1, 3, 3, 8);
			getJPanelChangeMethod().add(getJCSpinFieldChangePriority(), constraintsJCSpinFieldChangePriority);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerNumber.gridx = 1; constraintsJLabelChangeTriggerNumber.gridy = 3;
			constraintsJLabelChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerNumber.ipadx = -45;
			constraintsJLabelChangeTriggerNumber.ipady = 6;
			constraintsJLabelChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 16, 5);
			getJPanelChangeMethod().add(getJLabelChangeTriggerNumber(), constraintsJLabelChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJLabelChangeTriggerOffset.gridx = 4; constraintsJLabelChangeTriggerOffset.gridy = 3;
			constraintsJLabelChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelChangeTriggerOffset.ipadx = -63;
			constraintsJLabelChangeTriggerOffset.insets = new java.awt.Insets(8, 6, 18, 13);
			getJPanelChangeMethod().add(getJLabelChangeTriggerOffset(), constraintsJLabelChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJTextFieldChangeTriggerOffset = new java.awt.GridBagConstraints();
			constraintsJTextFieldChangeTriggerOffset.gridx = 5; constraintsJTextFieldChangeTriggerOffset.gridy = 3;
			constraintsJTextFieldChangeTriggerOffset.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJTextFieldChangeTriggerOffset.weightx = 1.0;
			constraintsJTextFieldChangeTriggerOffset.ipadx = 26;
			constraintsJTextFieldChangeTriggerOffset.insets = new java.awt.Insets(4, 3, 16, 8);
			getJPanelChangeMethod().add(getJTextFieldChangeTriggerOffset(), constraintsJTextFieldChangeTriggerOffset);

			java.awt.GridBagConstraints constraintsJCSpinFieldChangeTriggerNumber = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldChangeTriggerNumber.gridx = 2; constraintsJCSpinFieldChangeTriggerNumber.gridy = 3;
			constraintsJCSpinFieldChangeTriggerNumber.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJCSpinFieldChangeTriggerNumber.ipadx = 34;
			constraintsJCSpinFieldChangeTriggerNumber.ipady = 19;
			constraintsJCSpinFieldChangeTriggerNumber.insets = new java.awt.Insets(4, 5, 16, 2);
			getJPanelChangeMethod().add(getJCSpinFieldChangeTriggerNumber(), constraintsJCSpinFieldChangeTriggerNumber);

			java.awt.GridBagConstraints constraintsJLabelWhenChange = new java.awt.GridBagConstraints();
			constraintsJLabelWhenChange.gridx = 1; constraintsJLabelWhenChange.gridy = 1;
			constraintsJLabelWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJLabelWhenChange.ipadx = 3;
			constraintsJLabelWhenChange.ipady = 4;
			constraintsJLabelWhenChange.insets = new java.awt.Insets(0, 5, 4, 5);
			getJPanelChangeMethod().add(getJLabelWhenChange(), constraintsJLabelWhenChange);

			java.awt.GridBagConstraints constraintsJComboBoxWhenChange = new java.awt.GridBagConstraints();
			constraintsJComboBoxWhenChange.gridx = 2; constraintsJComboBoxWhenChange.gridy = 1;
			constraintsJComboBoxWhenChange.gridwidth = 4;
			constraintsJComboBoxWhenChange.anchor = java.awt.GridBagConstraints.NORTHWEST;
			constraintsJComboBoxWhenChange.weightx = 1.0;
			constraintsJComboBoxWhenChange.ipadx = 69;
			constraintsJComboBoxWhenChange.insets = new java.awt.Insets(0, 5, 1, 27);
			getJPanelChangeMethod().add(getJComboBoxWhenChange(), constraintsJComboBoxWhenChange);
			// user code begin {1}
			jComboBoxWhenChange_ActionPerformed(null);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelChangeMethod;
}

/**
 * Return the JTextFieldChangeTriggerOffset property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldChangeTriggerOffset() {
	if (ivjJTextFieldChangeTriggerOffset == null) {
		try {
			ivjJTextFieldChangeTriggerOffset = new javax.swing.JTextField();
			ivjJTextFieldChangeTriggerOffset.setName("JTextFieldChangeTriggerOffset");
			ivjJTextFieldChangeTriggerOffset.setPreferredSize(new java.awt.Dimension(30, 20));
			ivjJTextFieldChangeTriggerOffset.setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
			ivjJTextFieldChangeTriggerOffset.setMaximumSize(new java.awt.Dimension(40, 20));
			// user code begin {1}
			ivjJTextFieldChangeTriggerOffset.setDocument( new com.cannontech.common.gui.unchanging.DoubleRangeDocument(-99999.9999, 99999.9999, 4) );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldChangeTriggerOffset;
}

/**
 * getValue method comment.
 */
public Object getValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	gear = (LMProgramDirectGear)o;
	
	if( getJComboBoxHowToStop().getSelectedItem() != null )
	{
		gear.setMethodStopType( 
			com.cannontech.common.util.StringUtils.removeChars( ' ', getJComboBoxHowToStop().getSelectedItem().toString() ) );
	}

	gear.setPercentReduction( new Integer( ((Number)getJCSpinFieldPercentReduction().getValue()).intValue() ) );
	
	gear.setChangeCondition( getChangeCondition(getJComboBoxWhenChange().getSelectedItem().toString()) );
	
	gear.setChangeDuration( new Integer( ((Number)getJCSpinFieldChangeDuration().getValue()).intValue() * 60 ) );
	gear.setChangePriority( new Integer( ((Number)getJCSpinFieldChangePriority().getValue()).intValue() ) );
	gear.setChangeTriggerNumber( new Integer( ((Number)getJCSpinFieldChangeTriggerNumber().getValue()).intValue() ) );
	
	if( getJTextFieldChangeTriggerOffset().getText() == null || getJTextFieldChangeTriggerOffset().getText().length() <= 0 )
		gear.setChangeTriggerOffset( new Double(0.0) );
	else
		gear.setChangeTriggerOffset( Double.valueOf(getJTextFieldChangeTriggerOffset().getText()) );

	com.cannontech.database.data.device.lm.MasterCycleGear s = (com.cannontech.database.data.device.lm.MasterCycleGear)gear;

	s.setControlPercent( new Integer( 
		((Number)getJCSpinFieldControlPercent().getValue()).intValue() ) );

	s.setCyclePeriodLength( new Integer( 
		((Number)getJCSpinFieldCyclePeriod().getValue()).intValue() * 60 ) );		
	return s;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	getJCSpinFieldChangeDuration().addValueListener(this);
	getJCSpinFieldChangePriority().addValueListener(this);
	getJCSpinFieldChangeTriggerNumber().addValueListener(this);
	getJCSpinFieldControlPercent().addValueListener(this);
	getJCSpinFieldCyclePeriod().addValueListener(this);
	getJCSpinFieldPercentReduction().addValueListener(this);
	getJComboBoxWhenChange().addActionListener(this);
	getJComboBoxWhenChange().addActionListener(this);
	getJTextFieldChangeTriggerOffset().addCaretListener(this);
	getJComboBoxWhenChange().addActionListener(this);
	getJComboBoxHowToStop().addActionListener(this);
	
	// user code end
	
}

/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("MasterCycleGearPanel");
		setPreferredSize(new java.awt.Dimension(402, 430));
		setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
		setLayout(new java.awt.GridBagLayout());
		setAlignmentY(java.awt.Component.TOP_ALIGNMENT);
		setSize(402, 430);

		java.awt.GridBagConstraints constraintsJLabelControlPercent = new java.awt.GridBagConstraints();
		constraintsJLabelControlPercent.gridx = 1; constraintsJLabelControlPercent.gridy = 1;
		constraintsJLabelControlPercent.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelControlPercent.ipadx = -7;
		constraintsJLabelControlPercent.insets = new java.awt.Insets(14, 10, 6, 18);
		add(getJLabelControlPercent(), constraintsJLabelControlPercent);

		java.awt.GridBagConstraints constraintsJCSpinFieldControlPercent = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldControlPercent.gridx = 2; constraintsJCSpinFieldControlPercent.gridy = 1;
		constraintsJCSpinFieldControlPercent.gridwidth = 2;
		constraintsJCSpinFieldControlPercent.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJCSpinFieldControlPercent.ipadx = 47;
		constraintsJCSpinFieldControlPercent.ipady = 19;
		constraintsJCSpinFieldControlPercent.insets = new java.awt.Insets(10, 8, 4, 213);
		add(getJCSpinFieldControlPercent(), constraintsJCSpinFieldControlPercent);

		java.awt.GridBagConstraints constraintsJCSpinFieldCyclePeriod = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldCyclePeriod.gridx = 2; constraintsJCSpinFieldCyclePeriod.gridy = 2;
		constraintsJCSpinFieldCyclePeriod.gridwidth = 2;
		constraintsJCSpinFieldCyclePeriod.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJCSpinFieldCyclePeriod.ipadx = 47;
		constraintsJCSpinFieldCyclePeriod.ipady = 19;
		constraintsJCSpinFieldCyclePeriod.insets = new java.awt.Insets(5, 8, 1, 213);
		add(getJCSpinFieldCyclePeriod(), constraintsJCSpinFieldCyclePeriod);

		java.awt.GridBagConstraints constraintsJLabelCyclePeriod = new java.awt.GridBagConstraints();
		constraintsJLabelCyclePeriod.gridx = 1; constraintsJLabelCyclePeriod.gridy = 2;
		constraintsJLabelCyclePeriod.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelCyclePeriod.ipadx = -4;
		constraintsJLabelCyclePeriod.insets = new java.awt.Insets(7, 10, 5, 15);
		add(getJLabelCyclePeriod(), constraintsJLabelCyclePeriod);

		java.awt.GridBagConstraints constraintsJLabelHowToStop = new java.awt.GridBagConstraints();
		constraintsJLabelHowToStop.gridx = 1; constraintsJLabelHowToStop.gridy = 3;
		constraintsJLabelHowToStop.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelHowToStop.ipadx = 4;
		constraintsJLabelHowToStop.insets = new java.awt.Insets(6, 10, 7, 7);
		add(getJLabelHowToStop(), constraintsJLabelHowToStop);

		java.awt.GridBagConstraints constraintsJComboBoxHowToStop = new java.awt.GridBagConstraints();
		constraintsJComboBoxHowToStop.gridx = 3; constraintsJComboBoxHowToStop.gridy = 3;
		constraintsJComboBoxHowToStop.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJComboBoxHowToStop.weightx = 1.0;
		constraintsJComboBoxHowToStop.ipadx = 7;
		constraintsJComboBoxHowToStop.insets = new java.awt.Insets(1, 5, 5, 84);
		add(getJComboBoxHowToStop(), constraintsJComboBoxHowToStop);

		java.awt.GridBagConstraints constraintsJCSpinFieldPercentReduction = new java.awt.GridBagConstraints();
		constraintsJCSpinFieldPercentReduction.gridx = 3; constraintsJCSpinFieldPercentReduction.gridy = 4;
		constraintsJCSpinFieldPercentReduction.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJCSpinFieldPercentReduction.ipadx = 49;
		constraintsJCSpinFieldPercentReduction.ipady = 20;
		constraintsJCSpinFieldPercentReduction.insets = new java.awt.Insets(6, 5, 3, 168);
		add(getJCSpinFieldPercentReduction(), constraintsJCSpinFieldPercentReduction);

		java.awt.GridBagConstraints constraintsJLabelPercentReduction = new java.awt.GridBagConstraints();
		constraintsJLabelPercentReduction.gridx = 1; constraintsJLabelPercentReduction.gridy = 4;
		constraintsJLabelPercentReduction.gridwidth = 2;
		constraintsJLabelPercentReduction.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJLabelPercentReduction.ipadx = 53;
		constraintsJLabelPercentReduction.ipady = 3;
		constraintsJLabelPercentReduction.insets = new java.awt.Insets(8, 10, 4, 5);
		add(getJLabelPercentReduction(), constraintsJLabelPercentReduction);

		java.awt.GridBagConstraints constraintsJPanelChangeMethod = new java.awt.GridBagConstraints();
		constraintsJPanelChangeMethod.gridx = 1; constraintsJPanelChangeMethod.gridy = 5;
		constraintsJPanelChangeMethod.gridwidth = 3;
		constraintsJPanelChangeMethod.anchor = java.awt.GridBagConstraints.NORTHWEST;
		constraintsJPanelChangeMethod.weightx = 1.0;
		constraintsJPanelChangeMethod.weighty = 1.0;
		constraintsJPanelChangeMethod.insets = new java.awt.Insets(3, 5, 221, 62);
		add(getJPanelChangeMethod(), constraintsJPanelChangeMethod);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	getJComboBoxWhenChange().setSelectedItem( LMProgramDirectGear.CHANGE_NONE );
	
	try
	{
		initConnections();
	}
	catch(Exception e)	{ }
	
	// user code end
}

/**
 * Comment
 */
public void jComboBoxWhenChange_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getJLabelChangeDuration().setVisible(false);
	getJCSpinFieldChangeDuration().setVisible(false);
	getJLabelMinutesChDur().setVisible(false);
	
	getJLabelChangePriority().setVisible(false);
	getJCSpinFieldChangePriority().setVisible(false);
	
	getJLabelChangeTriggerNumber().setVisible(false);
	getJCSpinFieldChangeTriggerNumber().setVisible(false);

	getJLabelChangeTriggerOffset().setVisible(false);
	getJTextFieldChangeTriggerOffset().setVisible(false);

	
	if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_NONE )
		 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Manually Only" ) )
	{
		//None
		return;
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_DURATION )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "After a Duration" ) )
	{
		//Duration
		getJLabelChangeDuration().setVisible(true);
		getJCSpinFieldChangeDuration().setVisible(true);
		getJLabelMinutesChDur().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_PRIORITY )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Priority Change" ) )
	{
		//Priority
		getJLabelChangePriority().setVisible(true);
		getJCSpinFieldChangePriority().setVisible(true);
	}
	else if( getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( LMProgramDirectGear.CHANGE_TRIGGER_OFFSET )
				 || getJComboBoxWhenChange().getSelectedItem().toString().equalsIgnoreCase( "Above Trigger" ) )
	{
		//TriggerOffset
		getJLabelChangeTriggerNumber().setVisible(true);
		getJCSpinFieldChangeTriggerNumber().setVisible(true);

		getJLabelChangeTriggerOffset().setVisible(true);
		getJTextFieldChangeTriggerOffset().setVisible(true);
	}
	else
		throw new Error("Unknown LMProgramDirectGear control condition found, the value = " + getJComboBoxWhenChange().getSelectedItem().toString() );


	fireInputUpdate();
	return;
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		MasterCycleGearPanel aMasterCycleGearPanel;
		aMasterCycleGearPanel = new MasterCycleGearPanel();
		frame.setContentPane(aMasterCycleGearPanel);
		frame.setSize(aMasterCycleGearPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.dbeditor.wizard.device.lmprogram.GenericGearPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Insert the method's description here.
 * Creation date: (2/12/2002 12:36:14 PM)
 * @param change java.lang.String
 */
private void setChangeCondition(String change) 
{
	if( change == null )
		return;

	if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_NONE) )
	{
		getJComboBoxWhenChange().setSelectedItem("Manually Only");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_DURATION) )
	{
		getJComboBoxWhenChange().setSelectedItem("After a Duration");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_PRIORITY) )
	{
		getJComboBoxWhenChange().setSelectedItem("Priority Change");
	}
	else if( change.equalsIgnoreCase(LMProgramDirectGear.CHANGE_TRIGGER_OFFSET) )
	{
		getJComboBoxWhenChange().setSelectedItem("Above Trigger");
	}	
	
}


/**
 * setValue method comment.
 */
public void setValue(Object o) 
{
	LMProgramDirectGear gear = null;
	
	if( o == null )
	{
		return;
	}
	else
		gear = (LMProgramDirectGear)o;

	getJComboBoxHowToStop().setSelectedItem( StringUtils.addCharBetweenWords( ' ', gear.getMethodStopType() ) );

	getJCSpinFieldPercentReduction().setValue( gear.getPercentReduction() );
	
	setChangeCondition( gear.getChangeCondition() );
	
	getJCSpinFieldChangeDuration().setValue( new Integer( gear.getChangeDuration().intValue() / 60 ) );
	getJCSpinFieldChangePriority().setValue( gear.getChangePriority() );
	getJCSpinFieldChangeTriggerNumber().setValue( gear.getChangeTriggerNumber() );	
	getJTextFieldChangeTriggerOffset().setText( gear.getChangeTriggerOffset().toString() );

	com.cannontech.database.data.device.lm.MasterCycleGear s = (com.cannontech.database.data.device.lm.MasterCycleGear)gear;

	getJCSpinFieldControlPercent().setValue( s.getControlPercent() );

	getJCSpinFieldCyclePeriod().setValue( new Integer( s.getCyclePeriodLength().intValue() / 60 ) );
	
}

public void valueChanged(com.klg.jclass.util.value.JCValueEvent arg1) 
{
	//fire this event for all JCSpinFields!!
	this.fireInputUpdate();
}
}