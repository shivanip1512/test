package com.cannontech.dbeditor.editor.device.lmcontrolarea;

import com.cannontech.database.db.*;
import com.cannontech.common.gui.util.DataInputPanel;

/**
 * This type was created in VisualAge.
 */
public class LMControlAreaEditor extends com.cannontech.common.editor.PropertyPanel implements com.cannontech.common.editor.IMultiPanelEditor
{
	private DataInputPanel[] inputPanels;
	private String[] inputPanelTabNames;
	
	private javax.swing.JTabbedPane ivjStateEditorTabbedPane = null;
public LMControlAreaEditor() {
	super();
	initialize();
}
/**
 * Insert the method's description here.
 * Creation date: (3/15/2002 1:17:24 PM)
 * @return Object[]
 * 
 *  This method should return an object array with 2 elements,
 *   Object[0] is a DataInputPanel
 *   Object[1] is a String (Tab Name)
 */
public Object[] createNewPanel(int panelIndex)
{
	Object[] objs = new Object[2];
	
	switch( panelIndex )
	{
		case 0: 
			objs[0] = new com.cannontech.dbeditor.wizard.device.lmcontrolarea.LMControlAreaBasePanel();
			objs[1] = "General";
			break;

		case 1:
			objs[0] = new com.cannontech.dbeditor.wizard.device.lmcontrolarea.LMControlAreaTriggerPanel();
			objs[1] = "Triggers";
			break;

		case 2:
			objs[0] = new com.cannontech.dbeditor.wizard.device.lmcontrolarea.LMControlAreaProgramPanel();
			objs[1] = "Programs";
			break;
	}
		
	return objs;
}
/**
 * This method was created in VisualAge.
 * @return DataInputPanel[]
 */
public DataInputPanel[] getInputPanels() {
	//At least guarantee a non-null array if not a meaningful one
	if( this.inputPanels == null )
		this.inputPanels = new DataInputPanel[0];
		
	return this.inputPanels;
}
/**
 * This method was created in VisualAge.
 * @return java.awt.Dimension
 */
public java.awt.Dimension getPreferredSize() {
	return new java.awt.Dimension( 400, 450 );
}
/**
 * Return the RouteEditorTabbedPane property value.
 * @return javax.swing.JTabbedPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTabbedPane getStateEditorTabbedPane() {
	if (ivjStateEditorTabbedPane == null) {
		try {
			ivjStateEditorTabbedPane = new javax.swing.JTabbedPane();
			ivjStateEditorTabbedPane.setName("StateEditorTabbedPane");
			ivjStateEditorTabbedPane.setPreferredSize(new java.awt.Dimension(400, 350));
			ivjStateEditorTabbedPane.setFont(new java.awt.Font("dialog", 0, 14));
			ivjStateEditorTabbedPane.setBounds(0, 0, 400, 350);
			ivjStateEditorTabbedPane.setMaximumSize(new java.awt.Dimension(400, 350));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateEditorTabbedPane;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.String[]
 */
public String[] getTabNames() {
	if( this.inputPanelTabNames == null )
		this.inputPanelTabNames = new String[0];
		
	return this.inputPanelTabNames;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("RouteEditorPanel");
		setPreferredSize(new java.awt.Dimension(400, 350));
		setLayout(null);
		setSize(400, 350);
		setMaximumSize(new java.awt.Dimension(400, 350));
		add(getStateEditorTabbedPane(), getStateEditorTabbedPane().getName());
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val) 
{	
	//Vector to hold the panels temporarily
	java.util.Vector panels = new java.util.Vector();
	java.util.Vector tabs = new java.util.Vector();
	DataInputPanel tempPanel;
	final int PANEL_COUNT = 3;

 	for( int i = 0; i < PANEL_COUNT; i++ )
 	{
		Object[] panelTabs = createNewPanel(i);

		tempPanel = (DataInputPanel)panelTabs[0];
		panels.addElement( tempPanel );
		tabs.addElement( panelTabs[1] );
 	}
	
	this.inputPanels = new DataInputPanel[panels.size()];
	panels.copyInto( this.inputPanels );

	this.inputPanelTabNames = new String[tabs.size()];
	tabs.copyInto( this.inputPanelTabNames );
	
	//Allow super to do whatever it needs to
	super.setValue( val );
}
/**
 * This method was created in VisualAge.
 * @return java.lang.String
 */
public String toString() {
	return "Control Area Editor";
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G88F954ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135998BF0D45595AB52CCEB1DD8F106E13093ADE234314A009D2620558CF57CD025AD0C29BA9DE61A6950A9AA1DE1DA35CCFBF7C316C0B690A1A2A256GC103A61BA0D85398ADA191498FC2FEE6F4113C4D5ECDDE72763D47FBEF333BA4061EF36F3B3B1BF5B708454C1CFD6F1EF36FBD5FFB4E39AF246C0D2CC207330C90C7A1317F5EF79032778DC2F606568C8A5C8C1A6BA289FF7BGDEA23FA85E844F
	CC20AD3FBA57D5CAFE60A80271FC98DBB3F2DD2F407BCE72C34772BD7012064FBC20FDB9CB7FECFABEDF348ABE1B5938436B0667B600EC4061F383C57E543B5B462F3071829CCE4085F04E8C6FDE9BD78763CE00AC004501787CAD0C73B575F57658FBFD96597048DB4E925CA7E1CF81E5C3FCED1D7DACA7F7B9568CA12F5B191C38C607F1B6GAADFC0666DEA06E7C3676850C703DA50B3A8292A26DAF4F058C37D3225999EBF9D138729C7898E825E50944920D2FDFDFBC7939FB64270E3B653BB0CFC7E62ADE2
	7B92D28163358C7707F1641D856FCBGD682F03DBEFC2B41163BFF7CAE32718935E0FB9A3D2AE42ECF0F9C57EBF668454D2FB29F7C288DED1D893445G8F812C83F00F643A2AGDEE33E3F3575EDF8B67A2CA6AD985454C6DDBF2E780D8E4DCF95F82F2F870A0D6B22031A61A7047B77AEEFD58AF926833E6E5E4BDE47ED12FDC478BA27EB81F9FAD11BF3F38A1BBC1DDD6BEC9E6136700E44ED42F97FB5AD6F09112931B8157727A411773AD9DAC1E18A5E0BD79FF2E65A7B4CCF603DEA84FD7D69847AFAB93CBB
	6CB860F80961F70F4671BCAE7F44E2834715C03BF6D444C67FB6A1CB7B26392474F0FBCABB4C49EDF42E9F65B294A9F1D9F8DC5C5601676BA860BB810681E6GE481AC83D8290858F8363566EB46C627E4D847C33262278661EBEFEB5B85CF9A318C29C5B5ADC99D24FD12A1CBBE051A441EF3F79B4A6E1B326E9E9633034063932AD2C332E4CD055D25A03528E172B977353D04F36004A135C78ED2E0905409587741361D70D4A4536A557D12C563B3B87D31B63465185487BB4286704E6D326A945AFCBD68DF94
	4CF56D8E8ABB343463FEED54D02982C7DC53C6C3FA8FEAC20603682B1233F8362B603D99006F3572B462F2E03CBC364F0C769D897BB44B03A83EE4C44559B8BB01B9B4AFA8FC7DEC3F70F5F3492D24EAF5EBCADF335C9A64BEF62B49B1BF4476C439787839717E946B730229637FF20173A81AC84523608A6C3FAD662B0F4E202F0E023E1DG3AAAEC3C343D1C476CF14924A2CACF9B90E0549F37B81F3B308373AA9D232A55CCF52A7A614534E3E4C94716F87C8634D8EC5D4770BA44FB9384189943AF6F401814
	AC4B10FDA10BF6D34B125521B8FD8563E506FCFA7C2888DE3F6D40FC2205A15EE37373BAF630F3202A14899DDBE2531FE431CA959A84211B3410EAF17C1AD3686FD19A354FCA7EA9970BF5A504670E57363B25E254411003E08ABC3AE41D0AF1DCF1D654E6048C40E10D3E9F1E2BD491136183A2A6ABAE5CCC6EBFF75019AA974E393559F9D463B1F5D20B47A417E975695432BF454E0C0DB7392CF56ED2F8F6E9E0D3DECEBBA5B8BDBC8642DD384FB06CBF81B0DB93B170E9672B89674CF6FE1326A85C14B19BB7
	1F413DCDFABEC4A1BD6101EE0B592D6D4C0EA4DA1FEDC3CE6FBE03B6D492F28117F77273C3E43A3E213E3E5350F4EAD8D126884C657D41F5AC07200DF3B4519F3C6FC67D72E13C9120CC97BE78F509688FE60FE611B5BF5E13366F2952396DBB75388F4A2F967D41835D48B393E8D93A305DE3E792F3DD23E9EA03B2CB33365EDFF6A57A08633E5335951E8159B02D96B8C491E1230CAE149773300D3673438DE7C59DDEEC4B75109E4FBFCF437BFAFDEABE623572A74C9E1B4EA75750FB983E6CFCF28D7D50ADEA
	E88550B24E0B5C7C0F9E0C73F5B0AEB2F2DD65GF5G7DG91C35821347B8839C46DEB813F9A2A24F4CFB9542286F59770F3E80F9F69AE946790E316550DBB184FE7834F3B81B8EE5ED644AD07F1DE8C97F5A3EEA30C4BCC011BDB0238BA98F71AA237AFF46359774746CB59B8A3B6EEF2274A4B7F8FA02F29395FFB45F9A4568DEE4B4D3D697376365E54F93B2CB7F55E5E537B9247439E09DD0C206F6F1DBE2F3F5D1BAA2F97B05A83E771DC6A868DD083B2D037FC81FD1FEF227F1EE43E4F0177A5GFC7E222D
	AEF6DE22106D60DEE0613C4AE21113ABE1FC8C40824830F82F41F34E42B06622GB4C9A0DA37CE8749C48857E63A455A35B0FFA340DE40B7GF8C302674292DC9B14A2F2B094E492F279AEEEE3F18873D6466656C5DF06E737A509DC8C094FC77D184870BC319A324E1DD8C3B606381C15E3409720E78C6F0EFB3C44766BCEF27D56F2F82AB4DCBEA20DC99EA9ECF91A21DDD331B12BBCDADBDBD5FE643D5AC3BC6FE505936FFBF5DB5FCFD9FBD87D9963F119E3BF17FD77001D93BA0B45FDAF9FE8FB434206C37B
	8F12043CAD7B021E50D850A379AC16386B6BCF0594255DF60D1D3367949759FB7504C54EFE106DFFAD0C6783AC8B0B1C9DF9D3646C1C85F3C97B0C3614B9FBCD4F3B4ED5E1AE737361F84E4E06BB9D6779B33760F9B4126BD2A2084BF717A51D17FB61AE6D41D8E274DDA509F40CE72CD1F17A49A9F414F7DFC1A27D4294FAE142FA2E5B238705EE9B9F4DA64ABD7FC9DB0F96C738CEF97633336FG29785E5FB77338287FA29E97FB5CDFA7AE386F5EA9FADD788EA7C7BCE6988EC2FDFD6B147864762BA891F536
	B4AAFCD64B6EDAA7E1BCG90098A1FBD7EF9E23C154E5D67F42451ABB34A751997CD3EEBD51DC3FEAB813FAEAAEA4BB96FBB706C13C66C2A428F93ABAB00947D8147322E434E2DFD455F6C4E6D7F066BEE3A6CF53C9E57333A6B3E406B31A306EFE2785D89F8FEA6D7444EE48550B2AE08BAFDF60055E998970DC31D8628836887304605AD333D356492F53AC7535B21D8A88969DD5447EF76AD62014DA25E977F7C9632E4568B0E62B4F111B14E63A15BFE2E6DB94070DC3F75926A1787348DG3BA7F2DD35G4D
	G5E89215FFA764D823440F0E834ACE9F018F5DEC239BE190663E8CC7EDC37C3A5C2B79D761AB9B1351F1A83631C09D4BD56FCF6966E1FC8765D1D8C3FE2A259F77F9E973E4B83DA431742F7BB59F7C92E436497875345BBE8508AC77634EF84FA739EE9A8366670B914A9D6F779B130E9F567B09F492AEC4912A2DFE06DE9B7CCD407386E47D0A4BB06DB925EFFD3FC25FB132F1E19BFFF2BBC387E0101747DCFF0A0F57FE38E246EFF22835377B7D78D243F37E68CA45EDB395F4B7D681BAC0803E5GEBGB6G
	94CD0AF85EA56D67711CA216BF768F51A60DFDAD32847F9724743A925F253FB1ED71615D4427D91696447D85FE3B8F7DE5E9BAC35ABD228FEDE448C343961FAAFAC49F66F00586981A775F47CAC46FDEB1A9FA72672AD8CF8E6313B11C3FDA746E5E986E9A0F685DE7CC0A5E7C0E71F81CAECAF8EFC8793D664A46EC6F374A035B30521F5E0FB57ECB7B314E4F6E1DE07F1E28CEB96EC3BF764BDAA0E052D83C9C771746F0ADE627E64A189DF8CFABF31F014D33A6C5CF6B2A46BBD2G6E68FC4EDE662F95C04F83
	60FD74F83568E90BAEC24F8850G608518G606BFE4AFCBA8F465997C51F3B88C3486EE7722B4A49257B993E6EEFA371F57D557B13571DGE1AB777BA177E9C37B2B4AE169612307C4FFF3F335688FD7DD947D6163555377078ECFF2FF086B6374A31E697BC36AC96E8F45FA3B5FD7627A5C997DBAF660F139207AF26BB37FFF561DDB1A01D94EB32450B4480E2F72E93C6EF7CF641CEBAEF392E78BF18DD3BC70AD24B0AC7B2D61088E52C39F6A48B44F13C914BB6548A0A5D37C714B1B5F7B630A5F7719854455
	C2DE45F06A26862BCE545FACD962D3738932C557E4A0823E05ECB259235034228AEDA7E501AE7C5CE4DA545FA87231E911175B11D3CD4812151A1312B9EC613978201DECD27123B85941490A248E5570A278816AC09C0D83A8AFB38B81F9F7B2F9F197CFEC171DCB379F5C571A3F2400B8CF102D0AA679CFC803D01ADB4896EB582066302678A37AFF0F310D0A4298D958699440F62F4554C7E5BDBDF0FAE3C20FC6EE3A36E4ED4989883208C1EA58CC8BA6F8E2B37CCD4312812C2851E261C7FE4D2808512E7A17
	75662FBEF9456BA48EDBC9B43DAB22DB449500AB2E9205979E7D4CA9DBAD105610D4B32099C1102CBCC9B2C10AB1705C70F06D0D373F7899E390DFEA11B738A9E1E94D905502B50D01002C525886E0D7587E755876B84713B4E7C7647A17DBD77F5387F150CC8A0235356C77B07BFD97FF8FB34CE106B97CAE98F7BD1976AF199E91BA336081F936B3F9507D1E9360C16B49E79E3E652906756BC03B932410FDF082A71446E71D8A85FD541815F3636B453357FC9FFD24E328C4F05FED1129F14E7B5DC397936FC1
	4FDF33BB6D3D3BE8A66FA9774ECC3E8771FBEBBF602D192297F0392BC97A3E30BBA8A90AA5A9230D2A9FFB4463D10B467B1225EE5C5F94F3ECA227653AD16E1104B57F83D0CB8788C1ADE8361A8CGGC49FGGD0CB818294G94G88G88G88F954ACC1ADE8361A8CGGC49FGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG548CGGGG
**end of data**/
}
}
