package com.cannontech.dbeditor.editor.device.customercontact;

import com.cannontech.database.db.*;
import com.cannontech.common.gui.util.DataInputPanel;

/**
 * This type was created in VisualAge.
 */
public class CICustomerEditor extends com.cannontech.common.editor.PropertyPanel implements com.cannontech.common.editor.IMultiPanelEditor
{
	private DataInputPanel[] inputPanels;
	private String[] inputPanelTabNames;
	
	private javax.swing.JTabbedPane ivjStateEditorTabbedPane = null;
public CICustomerEditor() {
	super();
	initialize();
}
/**
 * Insert the method's description here.
 * Creation date: (3/15/2002 1:17:24 PM)
 * @return Object[]
 * 
 *  This method should return an object array with 2 elements,
 *   Object[0] is a DataInputPanel
 *   Object[1] is a String (Tab Name)
 */
public Object[] createNewPanel(int panelIndex)
{
	Object[] objs = new Object[2];
	
	switch( panelIndex )
	{
		case 0: 
			objs[0] = new com.cannontech.dbeditor.wizard.device.customer.CICustomerBasePanel();
			objs[1] = "General";
			break;

		case 1:
			objs[0] = new com.cannontech.dbeditor.wizard.device.customer.CustomerAddressPanel();
			objs[1] = "Address";
			break;

		case 2:
			objs[0] = new com.cannontech.dbeditor.wizard.device.customer.CustomerContactPanel();
			objs[1] = "Contacts";
			break;

		case 3:
			objs[0] = new com.cannontech.dbeditor.wizard.device.customer.CustomerGraphListEditorPanel();
			objs[1] = "Trends";
			break;

		case 4:
			objs[0] = new com.cannontech.dbeditor.wizard.device.customer.CustomerMeterListEditorPanel();
			objs[1] = "Meters";
			break;
			
		case 5:
			objs[0] = new com.cannontech.dbeditor.wizard.device.customer.CustomerBaseLinePanel();
			objs[1] = "Base Line";
			break;
	}
		
	return objs;
}
/**
 * This method was created in VisualAge.
 * @return DataInputPanel[]
 */
public DataInputPanel[] getInputPanels() {
	//At least guarantee a non-null array if not a meaningful one
	if( this.inputPanels == null )
		this.inputPanels = new DataInputPanel[0];
		
	return this.inputPanels;
}
/**
 * This method was created in VisualAge.
 * @return java.awt.Dimension
 */
public java.awt.Dimension getPreferredSize() {
	return new java.awt.Dimension( 400, 450 );
}
/**
 * Return the RouteEditorTabbedPane property value.
 * @return javax.swing.JTabbedPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTabbedPane getStateEditorTabbedPane() {
	if (ivjStateEditorTabbedPane == null) {
		try {
			ivjStateEditorTabbedPane = new javax.swing.JTabbedPane();
			ivjStateEditorTabbedPane.setName("StateEditorTabbedPane");
			ivjStateEditorTabbedPane.setPreferredSize(new java.awt.Dimension(400, 350));
			ivjStateEditorTabbedPane.setFont(new java.awt.Font("dialog", 0, 14));
			ivjStateEditorTabbedPane.setBounds(0, 0, 400, 350);
			ivjStateEditorTabbedPane.setMaximumSize(new java.awt.Dimension(400, 350));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateEditorTabbedPane;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.String[]
 */
public String[] getTabNames() {
	if( this.inputPanelTabNames == null )
		this.inputPanelTabNames = new String[0];
		
	return this.inputPanelTabNames;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("RouteEditorPanel");
		setPreferredSize(new java.awt.Dimension(400, 350));
		setLayout(null);
		setSize(400, 350);
		setMaximumSize(new java.awt.Dimension(400, 350));
		add(getStateEditorTabbedPane(), getStateEditorTabbedPane().getName());
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}

	//this editor will have CICustomerBase DBPersistant objects AND
	//  CustomerContact DBPersistant objects!!!
	super.setHasMultipleUpdates(true);
	
	// user code end
}
/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val) 
{	
	//Vector to hold the panels temporarily
	java.util.Vector panels = new java.util.Vector();
	java.util.Vector tabs = new java.util.Vector();
	
	DataInputPanel tempPanel;
	final int PANEL_COUNT = 6;
	
 	for( int i = 0; i < PANEL_COUNT; i++ )
 	{
		Object[] panelTabs = createNewPanel(i);

		tempPanel = (DataInputPanel)panelTabs[0];
		panels.addElement( tempPanel );
		tabs.addElement( panelTabs[1] );
 	}
	
	this.inputPanels = new DataInputPanel[panels.size()];
	panels.copyInto( this.inputPanels );

	this.inputPanelTabNames = new String[tabs.size()];
	tabs.copyInto( this.inputPanelTabNames );
	
	//Allow super to do whatever it needs to
	super.setValue( val );
}
/**
 * This method was created in VisualAge.
 * @return java.lang.String
 */
public String toString() {
	return "CI Customer Editor";
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G75F854ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135998DECDB4539C001ECE3D3514A04AAB685C6D936C58234CEAADBA7E8D62682E5142D9DE1B0D6CD5528D0E11DD47137E8DC1C46C9CBD292B705945AB54D8F34901C24BFA38BE11046F5635889DE935288B24A0BFDF6DE727C5E4BFB4F311D06F45F5D3DFBF60C1D362CD47AF26F3E6F6E3E5F7B3E6FDCD433BF373458D603D0F1A9B27F3DD30C505E7D88ADBE771D959C37G9758D14A3F83G55684A78
	B6989781ED55958576AAB4A017437CE6189B8B8A6C2F4077AEB4AC2FFA95BE32703981E8DE5B127767677344F14E270C4E7759ABE05C891087B8B2EE45047FB1FB2D09DFE362B9945BG97A2EB7C763DA62E9D66FE00DC00E521647A6D1473159D6D66FC645ADC34755EB7EC15641C14B3B95404595EF6F32CC33796EF8893DE89AAA7592342BC8F00A8DF024EEC6F063153BF917EF7C009B88302ACAB320183E3CE9C948DC5F386711498404EC0D4B714885682C09582C6C7C737275BC41D208B514898613352DE
	CE4FC52891661BA86E8EAF611D8B5F4B815682B03D5EFB235314FB786C2D2868A1396425ACFAB50BCC1FC1B12957626873E5FB288F5EF491DBAF825AB20055G1B81AA468B6C4DG2FD15F37F53F89E35728512DC4A20A5C252A47252056278431845F9D9DC0B1F127F0C0510288B17F1E33B7E710E7BEE07B3EF9517B18CD720EF0DF671F3A85BD7A932F2DAC03CD9E4DEB35394619ADC64613B6E13CFF1515774C785CD81C4B7BB4CA653D79AA2524B4836FE56B8F599619675C1C42FB5DB871755BBE626BD570
	DDEC4681433FC3713593C9BC0B4BBBE9EC1079C120DDB341E3E3F8A7174537ED892AEA73E534437585DD36AD93CC06F2A9A98B0B0BA3EEF23F0E825E8FB08630GA097E08540DA094746F4F74B854606DF500C63D1D18AE28D313DC7DCAF43086306A6F8E45D9064G9E92B4D19815300E4CB51DAEA27B681CFDDDB4E6834063A41631A69822A24369C2849BD853591ADED7B5D923E1CA9D94A39898C4D4444FBD655A8523A46846C7EAD0B0F0F28523FF6CA2361C920660C4B8G3E19DDA6CE921BEF817D4BA385
	765A883743FAFA1E97EBB216BABAFC0AB291D58709A6E8ACC2FC7587FA371B615B85404E8A7790DCBE4CD7D967D41CF0241C639283C4FCC1CB703BF144C7F2E8E1047B7A29E16EEBD765D2543C3EB7232FE9EE0DB09FD74869B17F9EBD13484566F7FB07B36CAF0CE40E7F0B854663310CBCCAAE4179BBADDF2D7790DF9D85FD7DG2A4CEDFC72C49D0B5963020EF914FE28C10061E05262EC6DFBEE12D77194168D97D6319C048F5D0C9117FBFBB2FEC30A95DB3D942FC23CF7C30069965E6FA6B1A99806A60EC6
	8DBC008DC31443C97AB06525C7C75564D5613C4E38C9BED1E2906F567A205BC16F01ACE3AA34354524CF52D845920E00505DCAD4B698BEF61278FB82A74C3BF276241D463A94A5770E55365B0497098E1A9881D3102B0BB64BA40E37DA3519C08E60C80D3E8B46F5B20F49D8830F4946699B51DDE71AEC19F26175CBDD36238A0B299EA59913CCA629A7336C9A3DB3A6DEE73236D7D441F8CA811B32FA6A976076309858C9F364981CBF8330D861B170D44F1E14FBE6BA3FDB11A4E6CA4B460FF84859BA1E0CE2C8
	CF64C2FBAD3B7D4963C8238D19B6E474A7BC4406D2CAAEE0724EFEF2884D57B7F4F478B5C5451A11200A40DA569FFCDAC6F4A7B64ED7F8FF300D6A379166C5GB5AA774103153CBFD8BC110BB6FC7F552CFDCF334AEC6FD713BE283B02778743BE42F39150F2D5EEBB5C1B1A6B3AF4DD8908B44D1AFA57F8D3FD44F0FB3CBBE08C091AEEF8609245390D76FB093CA48F1BE8B3BF844AF89DDEE64A35DACD661FC761FB0BBAB79F31DA99277658B619DEC3AF27781A49749A3A432A210DC04B196439793ABE92671B
	E1DE2E95586BG5A810681629A37438F3CC750F9EA1F877C2A4902B4B067D21B3A7F57D7426E21B997FC257C9E121825F5E31A7AFCB1703C8D0061CE55935CAA1897DA3816C602AB02F90D4EF17EA602EB0739DF6739FD56CB6EFE501A6750F90EB52F4A18177F9FA03C66667EC3171CC7EA5DE0367CDEDF763C3D34AFF35E7EF1DF663CFDFBDFB543439929DD8C275F51B7FFDEDF5917A92F17D05A35E564DE2A9A8EE18DB25000B8CDFC3FD1A77E7B9175FDBEFCAF87E06B45FABB3DAF8948F670AEB0483A476A
	F9CEBE88738FG8C009C03759AAC675C9EA339A884CD9208B62062G1A09123D6EC63EF7932CAF82588B78CE0011A86799EEA2FBA3C2DC0CC4A3D4C2A65F3157E99C423A35565A7644EE98878C0167E2C8FC23B8C8929939CFB2FB5324561022A8137360947085981CA2EF475B871169D7285775F5B04AB8D6B7AECC89CEA1E6B8DD502E4924B1BBF8343535396E483156C3AC6F6546D25FFB6DBB5E49D8FBE87D19E2F119EF0EAB2EEEB0F3023D013F77B682EDEF0C5BB0DC5F04D27236B89AF1C627A2CEE15420
	093B2323BFAAC9BE53B5E64E6EEFA8B74F9A0C711CBDC34F3F8666B7832C08711C9DFF1D676C7CDB16A05F82EF461C3DE17030EDDD0C497CECAC19337360CD47F8CA0D1C6751F801DD0A935C12461A347B728BF8CBBBC9ACD17A1AB9F4924F24C6A569FF1FC3A7729EA8C92537B62552CBD376B35D6EEB623A955D1707241F7EABEBBDDA96E7BA951A23FF2881B5FE7DEFE5ACAE9E9CCA4645633D9792974CF7EF156F633EA30B63CEBD8697212323F7CEFCB27B7D554B6BECD5027B4CCE6BC48F4CBF8308A7384F
	9E78A4B55E2A169C3095E751EBD10269F3C3A27D2D754B53045FDA40EFCE705A727460DBB08E8963E6D5E117091695C0727E00E1E957E166560A06AF7766FE75CB6E9B3868FD2C9EEF21F720E21A5563E28B7F9C45572660591D3C5C3A130DC04B1966F53A1A55E918171F05BA8D508EB08CE01C6536FC7F23D6F41EBABD2828BEA896D2CAFAE77ACDB6FE395FA2D61671F8DF76331B50722B1EABFEB1CBDC641CE57110E70E1B869BA81E69F7EBBF512F90E8DB81EAE78A6C2DGAE0011992E5F559FB5B37DC8B8
	F499069098231D97D7EEC84431A41AA4FF265B53DE2E1B8AE7AD1C195BCFDD8F737C19CCBD56B43D8BF74D247B6E8A0ADFB3136E3B8AAF77DDA150BABF673E7B4D0744D2CC075D271B3245BBE8508BD7764351F1684D87053035E775E9A213D5F759B5B0E98F1CA679C814C5C394A4F11A36278330D08E1B3AB7A0AB06DFC8794EE938543D49976F4C0DDFA98F26FF53BC7DCFF3167E67F0167E277DBC7D4D87997B9B732D5D177AEEE5FE7F231F78A69762E0854086002DG653356EFA9FD75AC1EB3447209E098
	F7AB7457A20373DF5E1FDD57BB7B4F7F9B536AFE72B699D58CC3091073B97E577D44DF0622D2A4437D361F58C89343E386DBEA629F6EA7B9DC42A10AE67DF7250F776E0D333CA7AF243DFBBB4CFBAC5C6F2AF96FBEE2611EF1705EFD41AC6F4D97F813F17A3514EF47A56F273F9833EFFD25BC188D9F77E77763D37E737B7199BFFDF7027D8793AAE638A2BF691715D0C847D63C947F274A42F9F43F220BA4BB301E761F4CE7E0735CD95E537E251E3C11C270C6E7EBCAE9CF37866805G2C0FFE321A7734656720
	E784688498811881E07B6AF611FDB740BC6F9C6FF3BFBFC57C48785CFFC1FDAE5B3772F4F25F3D5575697B5CA06C417AA064BEA5DC5FDC87DB5B0E9E627D4DAE876F8F571D637DE117E37E7ED0F7247707E4FF123E54B1FFFF7810A33DBF647B19BE9B07137A44BD97E2879617350E0B2D4F6C7F3374A997B04BFF92156A9AF2FC11CF57379EFEA87F0C2B4606EC9EE49F436442FBD0E9CC8C9AE3F195247F94E011BE09E6095C99E79A2A1C630F3BEFBC7667B50F8D69A5486EC1FBC8B88DE00DD6A79CF489867F
	29590D362B0A88C440FB50B61D8E253A1110308F5504CE111F1BF483873BF8BE568D345BC7B835C48DD1EA699174B1035C0BF7FDE81BCCFE94C78EC61684B95C420A603BC487D45C759911171A85013C3B283C649427F54A2E1F3F54F420F7637292E4F3239D12A2845DC2GCA3387EDB746B42C0FA9D2B02E3E7F81BD28BCC6A20BF4BAA5F05CEB167AC4D967A05CDECB680978F72F295CD46906A00BEB28052EB4E00153DA916C9E93B4E005B50FC1FE64D734C60BF659BF0C576FBF794A088D951BCA92535B63
	2A016CA1F862CA8978E051CF1D3243GE9B5C156C30A9681496A52A463A40B01735B7734DE774367BF268C12DB8D341F19923636043192E9698A05C499DB8700DD6178FD5671E40DB3ED0DA3FE6D6E5E75AF0CC29C38D0C92435157EED23FF8F133FED9453C6B1ED074138DB503C7F5269F12EB38D9E1067A5AA8FF13F538D9EB4FE7F64BDB7BD5239E5B3E867C6257487A7F0C2D5F2D5FFB4B20A352B722F5B7762628D5FA0BED2C928444939BB63F3631C753B074E253E031E3D32B66B3B3BFCA16BA977AECCFF
	874DA4C8748C835ED848FB01B57137D1763EF0A0A2C812A1C893DDF2107408479386CE76A517A54879BADFE39299ADA7C1649ECF5973BFD0CB87880CE40A9E0D8CGGC49FGGD0CB818294G94G88G88G75F854AC0CE40A9E0D8CGGC49FGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG478CGGGG
**end of data**/
}
}
