package com.cannontech.dbeditor.editor.device;

/**
 * Insert the type's description here.
 * Creation date: (11/19/2004 9:07:11 AM)
 * @author: 
 */
public class DeviceMCT400SeriesOptionsPanel extends com.cannontech.common.gui.util.DataInputPanel {
	private javax.swing.JLabel ivjJLabelDisconnectAddress = null;
	private javax.swing.JPanel ivjJPanelDisconnect = null;
	private javax.swing.JTextField ivjJTextFieldDisconnectAddress = null;

class IvjEventHandler implements javax.swing.event.CaretListener {
		public void caretUpdate(javax.swing.event.CaretEvent e) {
			if (e.getSource() == DeviceMCT400SeriesOptionsPanel.this.getJTextFieldDisconnectAddress()) 
				connEtoC1(e);
		};
	};
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
/**
 * DeviceMCT400SeriesOptionsPanel constructor comment.
 */
public DeviceMCT400SeriesOptionsPanel() {
	super();
	initialize();
}
/**
 * connEtoC1:  (JTextFieldDisconnectAddress.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceMCT400SeriesOptionsPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GF8CFF3B1GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E13DBB8BF4D455353804BE1625BEEAD1310BEA8454A001868915CF509023868C3F77D0F8CA5B58D24BEA234DDB7A56627972644CCC02C9C8C200E082A2060FB223B8C9G1FD9E92A0444C8E854D42698DBDCF2E766E666121939634C0D19C8A0EF6FF36E3977E6B2138428E539F36F59676CF34E5EE7FF4F9DC9456B8985A6F385A12682227EFB4FC44858FAC2FE35E2CCB547155F11EEA206FF7B813613AC
	EBBEBC2B21AF7509F4D3B9C929AC0476F1E8B72ECEB7D5427BCE3220B22F8EDE622C33867A264C7E03BC7CBA5B0F71F5DE26ED3FD4824FB200FA401D83C83C83579FA7D52978B150AED35F91CCE6C20289B8C670D49970B96A3896686B84705D09E392243DEA7FFC402D8230823E71CEB656814FA23A3BF18D756A38F3BFCCA4AFAC3B51DC0AEB9966671022522ED31F556495B38A42C23A7C27615958516DF95FA57B6DAEA19010830A68725A5DCE51ADA9F2485EABFDAB045CF637780D64929B9ADA687363E647
	715A5AB3E2C892431F8695C98E04BB040068A36454D46461DFBC05F4FE10A93457D05CE68F4AED823CCF87C81D4A79D8DD5A286EF3D2F7A2491EF6DDDCBE2A26317DB7CE537958BB6B25021CE9B87FD2FAAEC8578F6D94G46638EF1C49E55471571387D826731F6BA67711C93776005769800499A7E208B7149504E84481E4EF97F53E14EFB67457B49A6679C7336B83CEF1A2E72FC174E7B2A7FBEE359CDF5F25CC5542BF350B786E09240FC00F5G1BGDE253650F96CADF8B6B915E6596F1783CD4160C91FBB
	74316C96FD705E50GBDAA6EB351A5075C04B0FD1F60B992E3BF9C4A6F9E2C6B880C374F89574F244FE693C539076ADCB4EFA90FCFB49FD267283FDB674DFBB74AAD6CC539F5423BC915B543DF2278A4831E69C08145E3BB957A2A6F61F26EAC63FBE94F1FCA4A6B661ADF0E311749690966317730BDCC39C75F8B1371D717D04619005FG1087D01118EEBA8E60C864B21EFA6C58C8B2EE835D8B85845F199EE7D088A9A7FBA41FDB8C2932DEA98DA76BD84068FEFE45F4CCAE09470CE734FE6EFDB16532BE71D6
	F3B01149E3FC22AE973676AB97622D1D18B8D4B74A34B3DCC5EDA5B5B17AEC1F24782C446833F5BA79592E073E93B352CDEC7C17DD081FBEA3FA9E8F45274C081E47666273E4C01F755EF493BB5F7F3D0CFEF78234938152G5681EC8228188963E672B3FE76D84DA86D2843F03E0C76460B2F40D30CA8A121AD90D60400CBBCAB04A441699343C49DF36BC5142BF3905D94EA5FAED863A3B1A0068474C6B03B6097C11942EC4CDD9737631810C8FB9D12DF04857CC142671DF5F1A7BCFDC2D879EB50ADA822BE02
	754F3B08BA710DF096E6048960BDB29365B50D7A72D3706E1E49E57596C1DCAA3457E8F2296D5F814FBF03F20BBE7021128B37A1047A380E76F9B10EEE1C49ED7239CE2EFBAD2533481147674454BD047EA426C7131222F56FFABAE7EA920F4DDB3D1D4368BC2EFDA5B6925B568E8D3B06659A66C7E0721DECC29DDD8FFCED82281A45E55C5DDF4DF46F2490963936FD9A82C5915D3A4459D86FA50CA562B7E2C0E99103E2408DAFE1752C65CBC53A9EF6491A0E74D0BC7A25E6D01430063FF8E9BB43439CC62D66
	7D5753FEC1D1C21233C7914F080AA285BCBA7D7769DE4203DCDED8657547E6643596F8BC85502971DAF1F927C11F5AE5393BA768C0CBD175729D9AFFFDB0FE6CACFE7ECFB8D19F9235F6B6ED6B7DDE67F0E7B792603CA36B47F5573446C87A4356F0F5A1DFA62D6D276DB59A1FB52ECE925B167E914056B8C55738D6FD0F87CC87DE9E082F43E58331F538E2A0368E6F9998DEC78F8C4452D156E79B405CC56E8D98F45EBE007E4EA58782A2B5BC0D04303C73B98772A185A465F3496D9115B35237A2A107E6236E
	AE24BEB58F4E2BFCB677073D8739BFBC746D8C12765504187952643BE61A3D33199E764F567DA15BD38DC1DB92FD229F8455AC77849406FF177AEB959F36D0DCFF49B824351EF6008CDBA551879EA42C325364F60744F078088BACDE31533FACE8D8AF885F8891FB3897C4E72767E2EF465E8F7155D67D4EBB6FD78F1FBD9F6912C2E2DBA05843A7341D3555926E7716DBF07FD3002FE4004C595C974C217D5C97288E2FD976791868216F48CFE98D682DB048AAFBB62B4FF4FD3A9D4640990BDF770890FA51197C
	D96C63715334A32A6F2C606B516372AC53D6F87A8CFE0861934C31E5FE3799ED32DB1B7FDE73960271154D49F4A4D940B903A1498FEE9B9D2BDAA736DCB056098A7006B5E58ABCB3FF4A6B1A234EFD709C29D6D112F13E5B3BF8CD198D741BG2A12591C0EE4A61FB4BAEE35D63755E8380D947787B07A1F64733C7163F2E36D698ECF0F292B8879F3587CD5F32273E9F3814EDB8F78D3F378B99F3298FDFED3B8AC3BA41A4E28327EF70BD10F99EE1D25981E20D6E1482D5DE2041F57AFAC38D74CF7D434AA7319
	EF7F098C4D5FBE24A5A08F294D3DD4219DF2B324DC2760481BB5B3BFAB093D044B61D22B31F6CD5DF61BF9EB9CB91CD3796FB748E19254EFECCF37B5E05D902BC6F551CD5ABDBD123DC711B0319294015A8FBBE0D60B4E26319067CA1D43EB4ECCBF6A658B50AE39AF5DF48800653F0F523C9847B682CE81E0361397B05ACE926057GEC82E07E426EC11D38C20F204ABC4336031DD11469F3B9CE5DF9C2DDB7EB76D452B870ED4CBAF87C3631661239CCFE47676AF25CD85EEC4983D06B4E23C65DCC4B1E9CD7B7
	4728F3CC1A9B2D1B4FECC1F9A683BEE3AE574DAF72379BF493EAE4C85FBD608534D8D5E0E1762E36379694F0FB577C5B41C21471BA187385001294B8970016943E46CD85A3560F9FC606299F678E29455CA9FA4E92C9991A3F30DA29B1C06FE6D222EB28D60A1F1292DDC32D70739AAA897A4A67713CE3F9D7747A4A3C41EBCE0CEAB33A27065059235AA9D1F4CC2F5E306E65F6E3D0430686BD26B1FFFAA9E07427D973D84E188B4F7C1F017F2176F2CCAED46DFA6F4FF81D53D70473BB209D84988FB09DA093E0
	83C0617D7C5C1EAE0865D3861FDBBC07226752EC4D8545388FAB4CDD2F4D7F7E16D2036EF548D2C051746E77DBB02E48A149A385B8AE1762DCF208A6AC8C77F6E17CDC6AE8E16CDC2A3EB0F6AE75FE617075C0EBE13CDC0B656E4B283FBA857C1D83E0381BFD089B836D4977F3FDBA9920751D56EE27ED74CB2C3D46FFAD39F619BA7770F96E33573C46F0B972EB34FF69AB5B28BC43E1B1CC95853D3C5A77DBE5970911E7FE82453FBA77CE126FA9D247FC28484DF51AFDBCEF2B0AED9FB4F8B03D1F97C039637A
	6B6E673143D305765DB89F7283G5FFCAE6FFA195B695879C365B699F0C9GE906BE35BEAC0A2FFBB79445563D09C52873E139A7649223756B5622AA2DCF3724B6C57423D8543C0C52ABC288F26FE87AFBA8BD6B0BC71FDCB4FC3D70C0B17A440856CE276DBE6DCC1E3E00B668937A649EB056938BD02E1B343CEE8D48A8872082705685CCDE6C4C6674E28E5195927C305C192068A2FB97A2ED120F530E0771D3GD281568364AD60B17AC0B366376CF475EC1E1D5D4200D10F5DB0E7E421FECE93964636038440
	27C475E5C2FBFD940E450B27285E64AEE47122C043BFC371790BF4BC0BA37EAA1E0BD4C1DF7FA26E8BBE253EB89B5AF99A6EB9BF778F65299CC76838735856F0B73891B7815A53D3F94ED35D4D3F8D4C87DCEEAA4F216B4E8F0A9FF621D7E9E878A8A439CF8A1EF6FAF24CC63C5D05AA3DF5B13711DB681C67219D8118381857F111B7F9CE18F477D452BE663E185FB3329D37199397B399E6AD56730F8D109332B57F4D4757ACFCA05DF462814A2F5F182361192FB633D8497A0F8E6AC77D3591E33FFBD0BF6EF7
	71A07ADB867597986899EF0F3D41F94BFBAC197866A5447DD6B37E8146D3127AACCC2AA49D0FB6DB58992D27BEE78374EDFA001F5BC5AB6276BE18EE2AFD1063B65A7879BAB4DCC391578D2F061BC67335FEE8CF50F0D34B393EA4E8384782DCB7F29F64BE6D69AA446527019D26F1DC8E45F52431DA096142D5230983B8874EF525B1C27D56B22AB58A48555D3BB09F71976A9703A131CB8CC1954D2EA5C8E29A4AA7C26DA9886F7DG55CB68B715C04BA87642A1876888509DD47BAA16B01BB7E96BEF3621FF73
	8B91495F63272B3335EDF4EDAF0CD716F0FF762BG9DAB8522464E25B61EG6312167073F9337B6A3E1D9C3FCABA7F9553B1DF6875215FD8E7108B43FFCD719B8CF8663B26E83EAB977A9C69BCB7D5CAB09E4C07769A009C007C07201EGB871904F9BBF5A0AF7AB4366258EB9588E0159E7C86398FFEBFDD777CDE9494B5CC724AC3C174C7F5E7938B53163A1E6A70A7ACC3837126299FFAF17A1FF5321AF8DE083C09EC0F98658E986676FDF379EE17CE1795E24A8024BCBEF86B8F3D82C6BE88C26CC2F1E8FE0
	ECF64AA11A943058DC5A4B63EBA34C6FG1888B0BD036D0D515DE49D9A53E7D8B9DDEA860B69EB6039D125E37ADA79966AABF998EABEG063BC07DD8BD34DB9E667A3EF08B6637DDD07B33B12B28DF8BC2FF7F435C9E97148FE70F16A8C8823AB400DDEAFB4D433AFE31B5DE24BEB19B70B95ABE963F073F1FB85DAEB80DF904FAAB284AE25C97F886435C9E2AF7F27BF69BE3CA55A36CDE21911E9D0F606FAD5E422D29F37E5A7FBABC83E2EFB58F477696890E8EBFC8D96B5E2DBBD2FD3456266AD9C22F314E2F
	AF3EBDEE1DBF699175AC54277273CA72BADD0F50FBD176AF770321B80881F40FAF61E7BBF55D27CB38FE6F1DB90D342CBDEFBE98E75DECF53D5AC775785E127CD2811B3327CA67FB40BD9A3E995D645DBA5D874E5150B1FB8E78100E3D779A5E27F6DFEBFDB3322FDC741D2E41FC41251278B546581258B5468DA5316B5B09A543677E13CB62FFAB382344782D0079B26F9E3481AF6841D800C400D400D50FF2BF76CE6981C27DD88C9F76215B03B58EFEADD6787A65E571F92DAC9B799BF3F5995E19BAE5C5117D
	B8BF473FD906672548C10AD46F8D4AD0C6A14963D558D095DFD7C63F3F09DD944DE2556FFB793DD08E70F6A81367590B0BB18E0D6AFE53A1A9BE71A4754C6A3DCC045FED1E4B6439771307F11DC950CE82484864F97EEAAB0F156B81D731145F6D6C3671DC3AFDA91F63A39B0E9D8B6DA9GA9CB39BF7A1FD7F57B2AA92A0EEFDF470E9FBFD2DD77DE3D0D5159DE53690E960C1E6E7C7F69F437146F0F26EB85C1D98FB441817A8EG997CF794F37251792F5C8F589A573F07AD767E03CB7AFA272BC633CF75AE21
	AB4EDD820D92CC4EFF5D0DEBE3FE19351457C3AB7FEE745365BF9EEF6671A75A0EEB17293F6FDA96FD9FBBF01946C140CFD846EDC65E75B6BC4F8A97065E608332A3A487451052473074CB0EEA0B0B86B0FEA641BC19GB9G790F251B2AGEA81DAGBA81FCGE38126GA483E4G2C8358881087D01E457751DCE99BE69FEAB1C98DB8A4986F6D02FB625BF06F1E11EDF84C9E7AAD84EC4F5197D46FAC466D21F701DDDDE1D17395B76CA957F0ED618EB9AC61DD87734B7F59BBD20EF7A8AB56FD6D66916976C5
	35557B2388521D489ADDFD6448623F7179045A35B7ABBAE77E1C62152C681CB97BB07783E320EFC3962F9156DA2FAE577F4DD5526D33DDDD0D30087A26D34B23794D20F84772E8FEBF36F1FE4FC3DF46F24E6F5FF6470A3B56952A1D2D08FD8E9D00F7C775C520BDA18A476CE9BF7D4DAC533555175E08E78B9049CE035B7854F981B2C4076051E846DE463934D84BCC157FEE64B246CD7C068E6ECF7A16FE8ABC8383839E563FF2185F87BCB1B0328D7DF2A0F69C7C4D4050B8783B0158F1B0F7409887996E3F68
	6F85BCE07B1D5A3897B55C979AEEB31D93F11FCBEE452B618BC8310ABFA562029C3F156AD5AF45F572DC40007BC2456DA2688700E52F2C5D7F6FA1343610FCBE565EC747C881F08B1ABC8E52B8AB8585433E2D9A8E774D6E2453F616D2DA1F94901B592F52883F5B7F14466B84501579AB783D0B73B06232201D3D026B2643CAB4BB7952707E4C616FBE9F5D7CCFD8E309CD67E919617D0C6D3BDF5B771D2E414E341F467A9CB84FBC6D1C1F5E4D6F6B8AD7F2DCE4BF3F2F5B2B61CE6E6377F5359A6EF9933F2FEB
	51F0C95AFD5D24153CB66D0A204DA818A6E2EEC4F89DFB196ADDA20CCB5146769DAE60E3894FFF1EB19342731F9F6DC61BD040C9303EB2B489F53EE29ADFB740DC39ABF94DFEA765E56F2AF413F59547F5D3DE9C50BE3F0A57684566AB2951713E0C5F1921B31D38AA3AC6FF1C4AE18A2E390A672977966AFC1CBDBC0A3C7138CD134172A21D563FFF389A72B8D256735AB337D827FBEF5F68695ACBF53A5F1A8E445E2B9B36AAFBE033356AE6992D0CA2D35FEF5A264F734B40E856E77F9F087D4DB0A8C2523324
	A09CA2BB060EEF3A71BF56A6FD55D2E1A666B63245CBFDE99BA968C5279C411F50E2983A95E837E934ED54F1E6FFF32C41726BE996B34987C296C85AC8BEC683208F31F9AC90C868ACFFD7B70F9F9D1A43DF134B480DBAF76C56FD20851DD12D90A99DA439076FFC77192CDF1C8DDB4816B6329BAF0F7007C098AFC5B7FEC7D4FF505BCA0A027861982FD1E10BE17AA888ABFDBE311DD4F4FD06BFFC8AAB223B09C76230C2F63563CAB5D819551C9242DE8523679F5BC9FEGFFFACCF630EE1F90705430307CC74A
	272969845DAFCDCAE03FBB69FEF1963BB64B4EC55B5E58FFFA43FC8BB13712E21FAC38DB8597A48BED24C871064430D77639A3418F58C4053D286CF80F188F533D2A310F4C5A7186CA5BF4F764A793CAB716360211C7C224060EC47B36EBA35C4DDEA184CB0921B685FFCAAD078EE9FD576DD35EDC7ED165B9B3B129CC22680BA3C105EC69927C122F8FDEDA281E52C3A903A60B3C1AEE20B06C2D400F726433CB27BE55181B83133512827AC39058D239BE6A139E3FD38CFDAF69665736CE4A7EBE6EB8086C7219
	0BA0F389043B64109FA62F0E6219F7E9DB377FE8E96D4DB3DE7C9B5D3ACE2A105759A181E90DC7147DB5CDDDDD903535896044E07A573469F10CBDEA4C0E488FF71DFEFC3393B42C05D87C353574EF9D7DFB947F56D1CC9D45549D05E34BA5437E0B6E0FF01E29DA5246AE5421883E6DE03D6836678260933D36E530D9A824D83F01D4C8055E28D66FA39B2AA9853D89E8BACFA94B2802A236E42826A13ADCBBEFEC6D44BF1578270A926D21FFDF3BE2EE116AF5154B73EA5B9A5178415FCA7DA0C6ABFA67A44E4E
	ADC3F77E0F5FEF2DFEAADF2A3BC45756BCF85F6A1D29ED40F88730E95CC05C3BDA3216559895EB236FG9E22F7B89D00772D653577CE5BBBA4FE3DF146AF78FC0A606BEE8A383176B85927087A9DDE268D678F73B1EA27DAD758F05F978CB47F8FD0CB8788E05B59130794GG2CB8GGD0CB818294G94G88G88GF8CFF3B1E05B59130794GG2CB8GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG4194GGGG
**end of data**/
}
/**
 * Return the JLabelDisconnectAddress property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelDisconnectAddress() {
	if (ivjJLabelDisconnectAddress == null) {
		try {
			ivjJLabelDisconnectAddress = new javax.swing.JLabel();
			ivjJLabelDisconnectAddress.setName("JLabelDisconnectAddress");
			ivjJLabelDisconnectAddress.setText("Disconnect Address: ");
			ivjJLabelDisconnectAddress.setMaximumSize(new java.awt.Dimension(141, 18));
			ivjJLabelDisconnectAddress.setPreferredSize(new java.awt.Dimension(141, 18));
			ivjJLabelDisconnectAddress.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelDisconnectAddress.setMinimumSize(new java.awt.Dimension(141, 18));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelDisconnectAddress;
}
/**
 * Return the JPanelDisconnect property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelDisconnect() {
	if (ivjJPanelDisconnect == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder.setTitle("Disconnect");
			ivjJPanelDisconnect = new javax.swing.JPanel();
			ivjJPanelDisconnect.setName("JPanelDisconnect");
			ivjJPanelDisconnect.setBorder(ivjLocalBorder);
			ivjJPanelDisconnect.setLayout(new java.awt.GridBagLayout());
			ivjJPanelDisconnect.setMaximumSize(new java.awt.Dimension(344, 178));
			ivjJPanelDisconnect.setPreferredSize(new java.awt.Dimension(344, 178));
			ivjJPanelDisconnect.setFont(new java.awt.Font("Arial", 1, 12));
			ivjJPanelDisconnect.setMinimumSize(new java.awt.Dimension(344, 178));

			java.awt.GridBagConstraints constraintsJLabelDisconnectAddress = new java.awt.GridBagConstraints();
			constraintsJLabelDisconnectAddress.gridx = 1; constraintsJLabelDisconnectAddress.gridy = 1;
			constraintsJLabelDisconnectAddress.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelDisconnectAddress.insets = new java.awt.Insets(67, 18, 93, 3);
			getJPanelDisconnect().add(getJLabelDisconnectAddress(), constraintsJLabelDisconnectAddress);

			java.awt.GridBagConstraints constraintsJTextFieldDisconnectAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldDisconnectAddress.gridx = 2; constraintsJTextFieldDisconnectAddress.gridy = 1;
			constraintsJTextFieldDisconnectAddress.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldDisconnectAddress.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldDisconnectAddress.weightx = 1.0;
			constraintsJTextFieldDisconnectAddress.insets = new java.awt.Insets(67, 3, 91, 28);
			getJPanelDisconnect().add(getJTextFieldDisconnectAddress(), constraintsJTextFieldDisconnectAddress);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelDisconnect;
}
/**
 * Return the JTextFieldDisconnectAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldDisconnectAddress() {
	if (ivjJTextFieldDisconnectAddress == null) {
		try {
			ivjJTextFieldDisconnectAddress = new javax.swing.JTextField();
			ivjJTextFieldDisconnectAddress.setName("JTextFieldDisconnectAddress");
			ivjJTextFieldDisconnectAddress.setPreferredSize(new java.awt.Dimension(151, 20));
			ivjJTextFieldDisconnectAddress.setMaximumSize(new java.awt.Dimension(151, 20));
			ivjJTextFieldDisconnectAddress.setMinimumSize(new java.awt.Dimension(151, 20));
			// user code begin {1}
			ivjJTextFieldDisconnectAddress.setDocument( new com.cannontech.common.gui.unchanging.LongRangeDocument(0, 4194304) );
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldDisconnectAddress;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param o java.lang.Object
 */
public Object getValue(Object o) {
	return o;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getJTextFieldDisconnectAddress().addCaretListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("DeviceMCT400SeriesOptionsPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(350, 360);

		java.awt.GridBagConstraints constraintsJPanelDisconnect = new java.awt.GridBagConstraints();
		constraintsJPanelDisconnect.gridx = 1; constraintsJPanelDisconnect.gridy = 1;
		constraintsJPanelDisconnect.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelDisconnect.weightx = 1.0;
		constraintsJPanelDisconnect.weighty = 1.0;
		constraintsJPanelDisconnect.insets = new java.awt.Insets(3, 2, 179, 4);
		add(getJPanelDisconnect(), constraintsJPanelDisconnect);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		DeviceMCT400SeriesOptionsPanel aDeviceMCT400SeriesOptionsPanel;
		aDeviceMCT400SeriesOptionsPanel = new DeviceMCT400SeriesOptionsPanel();
		frame.setContentPane(aDeviceMCT400SeriesOptionsPanel);
		frame.setSize(aDeviceMCT400SeriesOptionsPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * This method was created in VisualAge.
 * @param o java.lang.Object
 */
public void setValue(Object o) {}
}
