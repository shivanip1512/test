package com.cannontech.dbeditor.editor.device.capcontrol;

import com.cannontech.database.data.capcontrol.CapBankController;
import com.cannontech.database.data.capcontrol.ICapBankController;
import com.cannontech.database.data.device.DeviceFactory;
import com.cannontech.database.data.pao.DeviceTypes;

/**
 * This type was created in VisualAge.
 */
public class DeviceCapBankControllerEditorPanel extends com.cannontech.common.gui.util.DataInputPanel implements java.awt.event.ActionListener, javax.swing.event.CaretListener 
{
	private int paoID = -1;
   private int cbcType = 0;
	private javax.swing.JPanel ivjConfigurationPanel = null;
	private javax.swing.JCheckBox ivjControlInhibitCheckBox = null;
	private javax.swing.JCheckBox ivjDisableFlagCheckBox = null;
	private javax.swing.JPanel ivjIdentificationPanel = null;
	private javax.swing.JLabel ivjNameLabel = null;
	private javax.swing.JTextField ivjNameTextField = null;
	private javax.swing.JLabel ivjTypeLabel = null;
	private javax.swing.JLabel ivjTypeTextField = null;
	private javax.swing.JComboBox ivjCommunicationRouteComboBox = null;
	private javax.swing.JLabel ivjCommunicationRouteLabel = null;
	private javax.swing.JLabel ivjSerialNumberLabel = null;
	private javax.swing.JTextField ivjSerialNumberTextField = null;
	private javax.swing.JLabel ivjJLabelMillis = null;
	private javax.swing.JLabel ivjJLabelPostCommWait = null;
	private javax.swing.JLabel ivjJLabelSlaveAddress = null;
	private javax.swing.JTextField ivjJTextFieldPostCommWait = null;
	private javax.swing.JTextField ivjJTextFieldSlaveAddress = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public DeviceCapBankControllerEditorPanel() {
	super();
	initialize();
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getDisableFlagCheckBox()) 
		connEtoC1(e);
	if (e.getSource() == getControlInhibitCheckBox()) 
		connEtoC4(e);
	if (e.getSource() == getCommunicationRouteComboBox()) 
		connEtoC5(e);
	// user code begin {2}
	// user code end
}

   /**
    * Insert the method's description here.
    * Creation date: (4/27/2001 3:51:49 PM)
    * @return int
    */
   public int getCbcType() {
      return cbcType;
   }
   
   /**
    * Insert the method's description here.
    * Creation date: (4/27/2001 3:51:49 PM)
    * @param newCbcType int
    */
   public void setCbcType(int newCbcType) 
   {
      cbcType = newCbcType;
      
      getJTextFieldPostCommWait().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJLabelMillis().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJLabelPostCommWait().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJTextFieldSlaveAddress().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJLabelSlaveAddress().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      
      getSerialNumberTextField().setName(
         (cbcType == DeviceTypes.DNP_CBC_6510)
         ? "Master Address"
         : "Serial Number" );
         
      getSerialNumberLabel().setText(
         (cbcType == DeviceTypes.DNP_CBC_6510)
         ? "Master Address:"
         : "Serial Number:" );            

      getCommunicationRouteLabel().setText(
         (cbcType == DeviceTypes.DNP_CBC_6510)
         ? "Communication Channel:"
         : "Communication Route:" );


      getCommunicationRouteComboBox().removeAllItems();
      com.cannontech.database.cache.DefaultDatabaseCache cache = com.cannontech.database.cache.DefaultDatabaseCache.getInstance();
      synchronized(cache)
      {         
         java.util.List list = 
            (cbcType == DeviceTypes.DNP_CBC_6510)
            ? cache.getAllPorts()
            : cache.getAllRoutes();
         
         for( int i = 0; i < list.size(); i++ )
            getCommunicationRouteComboBox().addItem( list.get(i) );
      }

      //set our type field
      getTypeTextField().setText( com.cannontech.database.data.pao.PAOGroups.getDeviceTypeString(cbcType) );
   }
   
/**
 * Method to handle events for the CaretListener interface.
 * @param e javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void caretUpdate(javax.swing.event.CaretEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getNameTextField()) 
		connEtoC2(e);
	if (e.getSource() == getSerialNumberTextField()) 
		connEtoC3(e);
	// user code begin {2}
	// user code end
}


/**
 * Insert the method's description here.
 * Creation date: (4/30/2002 1:16:35 PM)
 */
private boolean checkCBCSerialNumbers( int serialNumber_ )
{
	try
	{
		String[] devices = com.cannontech.database.db.capcontrol.DeviceCBC.isSerialNumberUnique(
					serialNumber_, new Integer(paoID));

		if( devices != null )
		{
			String devStr = new String();
			for( int i = 0; i < devices.length; i++ )
				devStr += "          " + devices[i] + "\n";

			int res = javax.swing.JOptionPane.showConfirmDialog(
							this, 
							"The " + getSerialNumberTextField().getName() +
                     " '" + serialNumber_ + "' is already used by the following devices,\n" + 
							"are you sure you want to use it again?\n" +
							devStr,
							getSerialNumberTextField().getName() + " Already Used",
							javax.swing.JOptionPane.YES_NO_OPTION,
							javax.swing.JOptionPane.WARNING_MESSAGE );

			if( res == javax.swing.JOptionPane.NO_OPTION )
			{
				setErrorString(null);
				return false;
			}
			

		}
		
	}
	catch( java.sql.SQLException sq )
	{
		com.cannontech.clientutils.CTILogger.error( sq.getMessage(), sq );
		return false;
	}

	return true;
}


/**
 * connEtoC1:  (DisableFlagCheckBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (PasswordTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceTapTerminalEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC3:  (BankAddressTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC4:  (ControlInhibitCheckBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC5:  (OperationStateComboBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GFBCFA3AEGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155DD8DFC94553547E7EA73FEC69FED31E29F352858E26135D8E9CDAD56D413A71608C023C69AA1589431A22698A5EA1049A6E1933279G928892E08981C28DE1C3B6A1C0D4A0A1A498A5C0005597EAB659C9F6E1333B5D1D4002D15E391FB33B195DFC3434155F6FB0FB7E771EFB4E39775C4F3983C241167199291A82C1C84D90681FFD2902B05EAB887DD34F6EE41875D711DAC171E7AB50EAE16515F4
	F8FAA14DD095254D970A4EE4829F867C7812A86DFA783DD658F4A63387FE8450935FAD883672DDDF8657B36ABD26C70BF97BD7BAF866820D86ECAA121996897AC33EAA22F8ACE03974B722D48DE0B84F2906A2855EB00D641B8C4F88207E07D11E9FFCD5CC53754023BC3570ECF918643540B38BDB770D8335B4DF7B37A68AC93FAD5764A0DD0A7299C5D259C574299726620AC893628C1F42332E75E24F87DD4E5E0AAE334361F4C8E217354252A9DAEC1253DDC19F9671122DCB049C2EAE4861F65A8F9CE840D0
	3D59F5446C38D8CFD03B68BE0A85DA4D8E518EE51BFE0DFC72B6E4E2FD209B78840CA5B620FA9C873F2782C57F1A79B5BB270E5ABD6662C4A17E1EAD817DAAFB04785372086C57188B7352D39EC165CF476D046442000F84A23664DFE3369C0AE036949AD1DEAF702301A6F2BC8E6391404782A5C6B09B5F5F49ECB4FD7120507F5B9999F981EC4C7C8D314D709B59464C737352B760D8526DC671E0073451C093002683AD824AFCB4D23B914770636F7D851E07BB25FAE7EF2F53F15865BAE23738BFF6DAC4BB7C
	BEF0GD2A8F6CA6CF23AAD02C062744B06F295FB98699F750DD1C44437F3820B2B4927FEA2582FC4E7E42878B675698A0D11165174286CDB6823285EACC7D13DD961B7124B86A2389B63518A1C34559BB896903F9852DA9FE375EC4AE53634245FAD64D71E54E8D5EC997BE823E66AE344066847E4DBC89DAF2CC0F51C8CF8C1E424369C288148829492496AF8F5F955E0F55C8C7D426DB05BCF77F53A4CEE69C81F4DEE915D342EE7FE952C2E550848458DDB0E544B44AAE59B45BD502ADAAFF1932BB563A3C9FD
	04C74A75C2F497DE8B24BBB6F2E0EC6472B67CCF5CA796C712B6CC6378F7B01E2240C95BEE44B862F5D111DA9790495FDA0D7018A87F9879AB4613227CE36485A30B11027F0D54FA01C87B069850F89987FCB2D07E63115AB220A6A08B1077F156466D65FB06580FDA956DCBE48BF72F032768155C66E607C7B2BB3A4433E6374D5CE997BD824D33F9B72A57CE9F39ED38FFF7010EE322C3F41BA51B5381251BFBC588A68F49D33EFBB54A6396F1EA1B2DD784853DAE0115EB5C3D961EF633C7BA633218A5D14EC1
	526BF6231838E4BE8BA5C28170FB7A63283E4660B1F7AC7C1E7AB82B2B7BAB91261B9E29AD1D4E6A65415DEB60799184370886F5DB97B2436C3E42E27442D118B805DA48BF9D287509C8EDBC1074DB56C71718D8ACB6647C0FD07E748955D8C4241BC1622AF406FFACFA310E96406DC0E1C0130122E730B9B7254164D796522F6411DD3954CE741CBEDDBD06631F9808537EF054DFC736CA3EDC9A4B681991240F7AE3247E37D4613E83FEE5C6C31CC633B6D83ADBCFE2730859A332E8BC6106C092ADF20B103C2F
	D62039C63CA4BA248651A5BAAC7043C3E3610D0AACB9CE3B1DBC06D2B00E462DFA88A48F47B5FBD6939C4AD0C6BDCBDF05534D126436F576C962E9D112EC0E9ED9FE4D9EE40B47E7C874D0DF37627EFA88FCB481D9392F7F3DE72DA25EDA1C4E0BFD2EB65413E85C166379399F720F09E66D7FDFC634868B677C9D181753379A7D5BEEA8044A9B7AD8FDE0C4BA5206180F68B8DB0D7A819BBFB3A81E4553ADB8BD9E6C4EFC92563DC0A620D1CF32FAD804EDD4139F2E5D01EDCC2DB629146F5FD7C6CAA4C6EEB584
	0E715B8C6AB17E5F8675983F4B90BC066FB32845B0C91BE2C0BEBAAFBB94FD626786B4DE42AA58A1620E49C5843226DE52067C30B9EC52B91B25C714CE5B2E0A02B06BC9945B137018BC91FECFFB120D1F1737317133746AFDC24467FF51282D37465E5B2CA918C96235EC26BCFE921BFED1097A1AE897FB21226A1DFD8E09605370F8CFF1CF9A46122590A4DB56E07320DE57E8B77754DB452E0BC71C5EF2B3762802BCDAC5F737535DABDA4AAE18AF19AB4C17258A5CA29507F172D174FB17FE776E8F74036F84
	4A3BEDEE3159616A2313D8592E333B8C441E5B0B3F4076FC8233E29BB4EB23CD34DB4A3BE0CC12AA705FD48299612D70DC064623F65423543F5B0CCA0158313565C6EC47E991A6F67BA7FD3D1D227BDFE14FDEEA4FDC691B589EAA586C305ABAED523F26292A28CDB15E1B29CD3D3DFD8EDB97DE321CF2C23782245379CF374BC8671AB63CE6EC02FE518EA44DE4F3CD6DDE144E669ABA2156231231FEC80B1D097A657F6075876BEBE1B3493EBE1727BFB7C8FAC6E370744AC1524F87CCA7FEEC2F4AC7E3147837
	BE91161E285BFEA4DEE16B472AB5FEE9E74D76BEF9DDEA2CC2E333DDB14F92FC27D1FD4C580D67560B3C7CCA63CA812DAFC919E40C1BE2C6E53A5C36DED816200583BD5F283F26BC5F50BF857BE67023831E929011955C28DC525E9F23F570B137334F25BCB5A81D054A3A231A1D0304016C8420C8DADE7AAC3A0E44794E5730FCAE60C301A64ED24B3763884B17GFCCA40FCF3F93E625911DA636CC0FAEF2DE7795AA00F9DA8EC36EF3E6859A85F237C6CE38F471E43D8A5CC1E2F2431BD5D47794A739C436DDF
	294E83087267D0BB66786FF57F3386155BGF85B9C5687A699156B2D439E0F334B067BAD0D034F2A15F38441BE2FDE85CF68F09E5877DAC4AF0BA5319A590A76A2942671B0693D770501FBAB5226ECB9DBFF99F777B6E7BDEC071AA09C6B7994FA56A6DE96D8BDFC5928BC7F191637CF139D209E2C547FD0C5BD0CEF1F17CEEC3A63G5A532B1DEDF5E1A3ABFA7AEC95FD128DEDFA4C12990FACA47E48B9D1B8DE072232264FE167C1F3B4284F883F0B5496819900485E74D1BC7E203CCD000D82A27D3ABFCF592F
	43FFC756347170A463692E1A3D709C7E10496ABDF2579A52CEFE83A32B4B3B579E223A23FFF237D0F72DC823F6CE951AD722C97A9D2943629839AEC74D6E57942D1CCF4F53EE2AE1BEDAA14F789866638BB5CA9FE381971E067D65534C47D7EAD05C8FF37E24FB7E93C7184EDAA84F75B453D9E57457B99152221FE66D11D64F646281ABFA0649AD98509EC82E7599A677A01733GB60E4BFDD927140BF9064825BC43FC5C5CB052F624E7EEFB15FDBFA23EA6F05FFF16767DE77D7BFEEFAD0A57C30037BD4B7AFE
	FC75EAC55FBF853D4D6C680199002F33EB107DB056D37E5BB5C8AF9E6B8536E77D71FE643B954A8C819A87B495A8066B5830EF503333235EA0E7E78F8FB807CAFAD65E17E5468E5C2311F32246B454D64531641CC84B71D398B7AAF0523631386FA23E8552264432BD5374EAFF7D854F796AB47871C46E1981F295FEFC1B1F9C69339F1C5D4846A5C597B8F060B8DB5A51716701BC541E05C0766758790DF0904DB93300DF8C14BEB7D22B87EAG6AG8A194B5A443ACFEDBC76ED13C00331FC86C07C8C2B99D97D
	FCEF001CFF7DCC182BD6BF5B4B0A556B07AF4649DA6366B465DAE35ADCBA3642B3E9AEBB6B5F308F55A1FAFF207BBDEB6FB3C7C666CF57GB9FFFFDC3F7715A3F63E29D333B394720E7BBD3373021159B9155B19D5BFB2BB578F10733733A84ED70E5830AD1F451BA10E59707088ED18B1288DE362545A3E479E28EF506D8535F5EA9D32950D1D1363D85FB8043184601362D8BF085A076A140DFF2DCE1BC3925858672EC56BDA275B56E3F3B06CB2463A1CEE3C61A7584F7687BE0B7865FE753308C7762B1FC5C4
	6D8FFE5E76647EC0E79564ECAC862FC9521F07B98D08E0BFC8C5D89D70ED4F33F6EB41E320977831C0619CB7E19C4D4FE8BD0D66B0024F538CF636054A8A16BED6119E7E3CDACCAC9BD447E0E7E599FEE5AA53B6E179A75665617A75F8C48F9E60504A0E263DA8958AAA67B66858016ADEAB2C406BDB146728642C2F6436076729599ECB7DDCCC1F42BC596F8278DD86D4B74F37AEDA0137GF9014266A977F82B8E860E3355875563EC7DC1945F9EE71F3BCB740F254D870BF81ABC3AB7CBE2AFF2196E81313CE4
	F6770883E231824B1334C0727B8E860AD7D21F0F55A86BF3AF6F672F6DAAD26F67F881CE7A78E3E919347E474FE36BEFD3B60A5FD8609301B26733785D3CAFD8EC69677B36011172CD70EC77CBF3819F620791DF420EA8FDC1EB9EE2E7E58E33F36CFCE66742DCE467AC60978189714CCEE750B36422F8DF3D6514BF844FB63FB4AB707D71EAF69E2AD75AE964B1DC162F26FBB4ADE382FD06AB4A0C065F71C0C9FEFAB297C4EA0B018CC08D8BC89A511D64233B1A6B7EE59D1B8FCC105F3E40373CD1400F7143C8
	FC9D2DC3EBB8AF671BB1FF056BFB799A9A2F6D66AB4EBE98588BDEC0F52F9158FCBB914A0CGDA8414C24BA771F77FE534276CF61BFBA16CCE3B44AEA1914B7EA2154936836F829A8DB485E8568BEC2D7F7099341FEEC65D5356CD0F40483E112493D2B9DD25698F1EC0FBB668D15D361EBE37C21C0E71F3713A2F768F115A26BF30B15E096766F660A50EBD04777A2140CF60583BF83D937E873276A5D8AD46E2GCB6479AEE39D6989115A028406BDFF96E1E54057F1EC3E8EE1CD40F7F0AC8B2FD52484F21EC3
	30B2A31B0346A470F5F51AF28D10GF8F2025C463ABF86DA57C763BE2E7FA371A10B634FE13CCE0113F57DDFB10EF89324CD7BA3337350BED6E77A058CBB037DB6825F4431BB73D87D34F3AC3A06550F0BE33D154C47900EBD310F55CF4CC266F7CD0E526FC50027AC14FD4DFFB1105F3766A1BFCADFA47E95F27CAE0C1B94B871FBB19EE3909F86E9350B18CD5FB2B23F93B8B6C9477CCE66582BBA66376EA5063DD9457C56F36C418A663711E34F9A195FA19CBB1E4F62F6AC47A671381D4031BC9E37619C3B2B
	E6E05C0657B07B22F93EE7F219FD719C93CC8363F61709591744735DDAB0B0EE6FADE03EE57E09651B055711A660A50E6D4179C2019F4731CBDCF6B2475231EC8A7085AF33B3053F886C9ED299E09DAF33F3504A8E1FFD8EBAA1B8F060185BE6B9E26EE941A39A19DF5CC2A6159F7BB21BDF4663B2E7813F88C8D84C5EA5F9F730333349BF3CDBE899552AFAF7AA3EED1F26E8B109433A4572B9C27179F969C4E7DCAA53690574A90B9136CA23BC83C1E359B28DD9571374BA1FF434AE58A6A8539DBE69485E0F52
	146963FD52D19D6D24724437995B19EFA9B32688761FFF9070DED8B275297895FA9720EF1BE02C1C1FCE465FBF672173ED8996D37D2FA03DDA9C23ED703B6395B6466FBE056607DE3357565B570BDF60113CE3F15E88789D4D734E2EC1F610C39F345DB6BBAC40137CFF2AE1E5A7737C15F8CF5269C4AFA3DA4D30A391AD821B4FDEA8C1E9AE3758AD3A5D22053CBA24E51971D8D330847A6692D65615634817EE27037AB29E0FE5AD10EE62F9124E2E443E3871BEA7F4893A63B837DE60BA6718302FB6071F2F19
	F8DD938D79E3F9D9FAFC16EC05CD53D550E9369F365BFA9C685CD8A8FD9549FCE8ECD0E98FE54CE86993D1BA48A05AC65B3188FE1B69EFBA7F60B5209D70D12F32BE36E8BB42A6G9F4E311E1D2CAF463D4A4661B959681DC9F9A20C75C09DC05EC416B69F270D81FEAAD0CCA2F9EFC05F31E77B2F13109CDEAF4233BCF160785D210285A2FAB7EF008E760E1E3EA3D1159B2A8E52FEB69CAFC9E01B70E756FE76BCD4CE17535E576B7050FCB762185982E404FC84FB9CE38D4037F26CF59C4B7D40078211768E29
	8C565E998AFF90CD8339D9C00594CF005F775376A6BA16E21B9381CF79B3EB5B0FF3D88C14ADE5588367D88C34F0EC6327AC86DCCBD9DB0E49ABC37D957884A05DEB30E685EA85120046G05834582253C46E4FE04E50C741DCEC1924CFBC964FDD19BBCA520B1C0D301E212184C525C7154E7D4AE733F15161D2B30413F0E42DFD30F1DB1FE38C1A51F4E8FCB89D016EF6CED4AE33666A852328532EEE57DD46DEE536AG6566850865E071DBB82498FE882FB312201E0557D99C4668F83CF22C8847C883702D9C
	AB41327D40073E4E62F5E645D06215456C3457657189E133007F1BCF3C8A785DD99C600B109EBC36AEC7AAE8FA8C1EAF8A5E00B17B8DE6D7AD6EC7AD401BB836GE3DE60C3B836822FF526GBF0DE327703AE6B17049EFB01F26958CB666AA47DD7FB137F4D9245613AA5F99DAAB3CD897F88E925EC77A8DA0D3370C0DA90D85E8FEA17399447FB27CCE36G4DCB56E54C46DB025A486E9131FA8FDF66DB6F514B64FAA7BAB756294FD9D5F87D958B799316313EE990C6F6B77703914ADD9E369C3D9B1D0A56F479
	49E48D1C4A71AFB0DE2C40493A7207723A9252421259B9E87CD13407CD84DE77A654BFD09DD0BB1077CDF6AEBA334EA08C72FE204D69EA91AF09F645B1A571EFC16A486EAC7FC64B56EFD39F7A3190FE53BB29015E6B063DC93F0B204F8EE99B4609FF1EE3483FB8C8CB86AAFE8B46E720A6200E3718FF6B5EAFA77E21D75007A5495CE545EF3719F36805338C2383G52F757B78BBC462C79E80DD0C2B7727402CA8971E57CE5657B3A5AD5F5815F57C9EF51F75474E97C51B63A867B5DF1D957CFEB50F86690AF
	6B794B42869B1806AE7416D56E2DAC576F2D59C5732E5D27E697A9730D0F64B26DF9C3A91348A5354AF2334F16784BB542E22F2C44E2B35B1DBDA565FAC3393E52485FDDBE75FF4A3A487F5E8ECDEA003A0820F5907D1662FB812C3F7D142C7F1D2A21583DC5A073D526A07FA1E5DDBBAD7018DB20E3B1D7BC699E216159F7D2378530CDF81B58547A36ECDB641DEC4F70C61AF20CA367CC797C3DCEA8480C870A83CAFC1B3C7F2667495B871ECF2D5B4164B2D34879149E1E46947A5E9C0F17DF6D9C4A184E2885
	E4BBD248F809F889FE3F32E2450AECDE271AD2B42637DDF149B76CF89A29AB1456E26E445F6CA8F1F4566B0F67D0DCD996F9CF3ED6275C430D22BECDC8E16F51371DD4CB8F67699D8635746894B6373EFFC60E13263C9D0163E4EF25F11F31362A46388F4245300B49FCAF8F362CC2E5B50B150E33F2F93F895A872B76120208DC56B5D92E23F23BFAFF71189D9E0F6836F5AB3A0CCA5CA6FE98B8164B953FCF244ABABF8F5A37192DA45EAE6530F80BCFA1F11A8CCF5DF2727E076409BB477214AEA7B1D9874F56
	65742E810E493D1F8E96134A353E95E47B174BB1B9FAB9094985C0AC0E50B7956A379B79BC5F7FAE4E936836A14B774D1C752A79C86412BC6E3F20752B72F627EFDC67DA8A7D5287761586FC5F66B896BCEDB7DF928FDBACEE913D60A3695DDA64137C26DAAD4F45EA390CD62787CF41674CB609255F5066DB06DA1EC3D7F53C0C0FEDF63B4DC37A4F72827F7E035AF85CF2563F6E7DC2ADFD8ACF4F4BD1CB0F6469BD2A77EEE2F97A83837ABFCADF4C531FD415975EE169BFD615AFF807757FCB9A398F5C299BFE
	7FFFD9675B7F6FC8134BDB92F45E29B6A87BFF76CAD96E4795FFEF7FA7E5D6E8653EFEB2D3AEFF29AE18DD869F3B24ACD9AEBD781A42281C7FEFDFA54B5DD1037AC9896D18FA5AB3CB38ED8FE54BF9E7648EDDC7E82EAC17F4EE28EB8CA27B0BBCD9F679B0F4BE17AF57E94AEA390C5202C15B3A1A2D37BCA8A469FA62FD51670E6697ABB5A80F6A37296F506F115E1157FD015B7E4535321D2B8AE5BB63035AE920F652EF28707CC0FE5F2078BDD99849F7AB435B73C4DDD79DE4CD7F5251406F47930F2A3F9FFF
	63287ABD0C1423413F89C9EF8C7CCDC8F623721B9032A719DB086F48C1DB07GCD841A86B46B9D369F39239145BB7A42F060DE642825873D1FC7DF95CACCFF7F31403E5EF8EC70EF91430E218E5D6914A4E7AFAA1F615FBE065ACBF23AB0C8305B0F21BAF25BFA2C9249CA716F9F4367EEE2B706091F4B5661738770ABF3857F2E3279BDF81EB5DF98F86B9740D63753A53A25AB8445B753E91DADC5D3B655D5FBF2FB20B220060EC36C1F683CA0F6C9ED669EDE67E59B50FA248C6CE8G32820D829A83B499A882
	A886E8518A54272234C5C065C007005A00ACC0DE20B0A0E243D327F78571033E18418D65B613FBC4E49F3EC4473EEF9D8FE5458211F550432B509EFBC8770F5BEC12DDBC02F797647DCBCD8E3BFB1C1F9AC55F79D4EF475FB8G5F816485A27ABF58414E81C683B69D0814F1538E768EC75030B226623C35403782D90106369EE563D4BA2AAAF60723BB409D8E3CAAA1B69C5731FBDA23B44C2E4FCE323BEE619C3B5D403062B466571DB92CDEC781961E4672AE64F51318467C924E213CE569503EC026F4D6C63A
	09550D8B3009692C0C96932B1B78F4D646D51C37A8A3CAEBGEA4A98EE5D6CC42F73681D90E3A13B93521141F446FD41FC9C4B31469C0625F06CCEFE9730E3A5437E24E3D8A447522B99D626E558821EAF8CB052CFE20A51D9DC2216457907EBCA0244B93A8FFA9A06C5C78F6B1BAF94869E0BDEAA9CFCACDA0A6BC204B1846DB189362C905F3D6B6E7608FC4CCBA94C67D83387D63DB6340C27E96B50BC4047EBB20CD0393475E86CC55F5B415A41F695AF7E0987747B688D016D2F5FB0387DAD9B544752D39B86
	0E2567B6280F2567B7A847D202F5EEC0B15C83630A09676B6158279C3363B291F64EE6112C9CF7E33B905EA4A2058C77E23BAEE34CC431AF955827947B0F8D288D40E52B135FF57C66867CBE91F694043F996731B920C9F8FD0C46B65ADCE6055D37F16CD3012D8912F4031D9326E7C6295C9354648CA637590FA7F287311C5E2F4CC0E404FC64FC75BEB22E826FFB6E7AB30C37A9F0B2269C5C4E46148EC80B84A27A9BF60C6C3C78548865EE9E369C712BECA79EAB337C7D2D4438B14B5F5F07787CF28852A6E4
	B1FFCF70764DDC9525ADDEC56A5DC01F8D2B863683117B7C245ADA51C4735BD564900D82FC0CDF5AC460272DD20B21F186B59D33E85E04GBA128157E57B266901B7E62B6918B0E81C2A47774FC6985FAFE339266C2145F7FBB60BEF894F0D2EEC7F767E92637D597E6D3D729CEB6FD0C8DB1C4D5AFB15E9E4F1DAB4C239134316A3FEAD4173F82B4E5F5FE598EF57797BBB0A2F912C10962DE37E6EAFD46AB764503826CFD3CE2078DE7005DA6C59E97ED1AAF20846GBE51AFED9A7033F254E268239CB59D89B4
	EFF2G9D3A5CA82DBE57B74D88FCD32E1A0EFB025ED5ED7713F1D1BE841EE37D52A6839F212A63D51D1A0E981AF7D12E3A9FA900676779261582DF1B2726A32BBA189FADFEB29D141760996A17B68E78A92ABA962A7A91C9734666297B3198F0A15FB72DG78B2BF0C4C313145E8AE7650359939539E31962D75EC8E3B4DA15613FFE5C6E0F7E7CE6135E59D145586C43007CB91E6853EBF1F4579CF51560B5DF3D77CBE3C7D7A1F9BFC76CF50D131D376E91F62F7440E6B2F7B396B2A0334E9B7DE7307C2FB0E63
	6DDCC86E8EG9F41314BFAFC1F9278840E4569591D19C40E5D0077E707D6439EF1B543561DE277B8AD9C1BD1426EE7FAB956F91C5D4F8C63D8DEAE53B11EE33F6277B393B976EB83531B3E06E1A7AA195EA20EE573FB21659CFB145F8BBD443127CC7C3B980E7565B33D93B82649E57DA41CE3371CE57DA4FA8D6BA7D74F4931F32362376E5C750F236D7F849DC9A65927650A5FB7192E3F6E9FDCD79D24CDDB71BEB4965AF391EF67CF4E637B3A406B56B26C0173ACEE0AB816564FE2534AB1CBBF3F134F318FCF
	33588C65587EB5ACB647F1AC6CB326E38A4766D73258948A98560B47708260CBB9B687E386601BB8E6A0F73E0177F26C5BF8DC8883FE9C47324EF23D9C5B064B938A2334C5058C0BB2B29D659C7BA1AE6F9070ED9CA3F74811DEAB4716D5B13D7D9C7B853FC3BE1AE39F9B195EF80E2D4636A4811F3E0EE117B0168FFC9947D6136F8D00B7F16CAEEC0B9D78FE0EA51E61FAB976C71CAF9E78E40E3DD74DF46856B36CBE1CCF8F3C11E3CBF5CCEF934784A3535B4E31FB393FAE0E9DB5B23D919CA3F7ECE300CFD8
	6F5B660940E796B1EC852E53E260EBB9B6965B5282FCBB4752F87B3AB876B24E9781FCAC90F92FE04BC1E78A92BAF6C46FDD84F63F6B862CFBB164CB66F9E3CAB3D8DE013D23B80036A8749D4517BAFC1663B27F8D1D4910F246E01DA83DEC83AB27BC57772E7291BC6E56C2FA834FF32B1E5D4DA6FA2C68380D3EFFFECDBF589DB2651D08D90A3B26789EBB6878A57C58456D9EFB52779E78CF703C978279C683916CA81E77A6839F4E3137713C17GFCA2477E8B4FFB456FC20C8291FBF7648E678E073F3D26F7
	65FD8A3DCB0E67B38B602EF7195E97711CB98E78099C7362F1A49278D99CB362B9B385784C0D8CFB99573F9178C39B194D8BCD43F9476FEF33EB233F4DF76279369F70D02E77BD2CF7AA709188476DFC33DE0E271EC25FB879920F5B0910B7E5A30B93713CEF1C7CE42B9CA73FBD7F775CC1AFAFD66C9BF1593351F1A9756796BC6657C21E06E2660F950F79AE44F32C930F7993011FDA4C6A761E4F06D3377EF6A5C0B99F7A54ED66DEDCAF00279433FA8949712D1724EDF23D3E14237ECDC3AAEE0F32CDB04EED
	E2659CB3863E835A0147318E48EB67796F53793659A3387F0F0574891B187F7A3303791F95447F18CD327FC467019C75BB20E45F938F7997EFE26D31845BDC3499EC594CECFED8B770AE3CFC375834B94A67EE3195F809E3FADC5EF860A7EFE67EBDB9685D62ACC59B47031C720EEB92703EF70BAF1179F18B4CC9DB184DE5FE6D3BFE3B5C3E3784E85FFB317D35D0C603DCCE1076BD0C753AA0EFBF4F9F6E573EB3F1BDCD047429DB187F5AC15B175DC7D30D6FAD7E6D1B22D3EF5F82B2BFC27E14AD2CBD5A707C
	DD26079856B31BA3D45A77D95E3ED6BD135D084B73829F4231DD388E26GBFCD4F7C1BB6E87BAA7DCB547B36EF7A56A86D5BABD62C105B5701F56483DE3C15593C452FFD8F6C105BB7A4C07B0E4376B7C199ED3C1CF5C15AF78F56BB8A7206717CBF75EB5FA8DCCF61109E3915797FEE5076558E523EC9D04E37287F74CEE2007E7BAED90F16C05C173079613BE5F2BD5CDFBA543BA3A47FA46C1B646E93C9D9376E114B3A205F992C2C0ACE275D8285D61282097CB474DA177E1EDFA91715F78A55C389390F2BC7
	6F3A8E1430FC1AAAB9DFC449E6FF1D721D0E5AAAD0D5436F3DECB74AF2670E8FDD6E069AD9AEADF7F8F7EDFE3ACF76EFCE2DDCCE3DE1687ADF5FAF4BB5D5AA6B855D9B156B2568201CCF2889D67EBE1F728F5649F28F668EDD6E6E8FE43947CC432B1717BE146BC5F7D8AEA7EA98F6DB6BE5399B06FC4F1A48BEF5D416BDF2FEF832CB9BE55B8B1B64F20C27035DAF2A5CCB0C27F7EF957755AB568CDD4E7D31ACB76A336159FD5BA7325D0F1D104BD9E79C3A7E050A3B6D5B07A1172538137E4D20F770FC6544B6
	D9EE791961799BFAC676F71262EE7271E158BD671CACF747BF600E646BA6393C454338A3F9727FE4397B7EC1F7A425F639FEEEBFAF177F5DE15C11FC682F325C4AE1546B731F8FD51F2F5C7ECED9AEE11871505EA57BFB4DA217B3E598F67FD01465460DA09E16784543935DF2F92F8FA39E365BE439317F20F8E83AA0574F450BF279378CA39EEE354BF2C9C17D712D577BFB072A4FD7EE0DD716DBB64CF8283EA27BEB3AAA1713BCA43B497F09F3076746FCC1187C0A1061F18BF9BCFFB33E6491FF296AC05A9F
	6EC95388694D42CAF26925D9C8C7B7D71A058CFC3125D9C8131CAEAF7A8F8AB4CA1204FC76CD923DBB6C1104DC5F4F14C0631A01969E3E7539E7A7FF5ED02091B42054AA92AD991751F5972C87FD84F04573B761ABA11DF3EEA147274E226E2ADE98BD6F2CA7CDD859ACECC0CBD9F2159F961696742FC0517F9E21D148F221FF868CADB841B18FFEE4F824ABF631C5A868BE057E99DD0FA4DA8E333BC660C4E18B5234875D555B53E476D8A564514196A15D017EA387E18DC9361B9DBDFB48452303586A54439DB8
	D85172C7GFB57E2FBD1A9953C14353F4A5B3E75F8C2F81A20E994D6591DE6CB2339CBF23A1B05AC496A96BDD6D800FADD9F9E4285E5DEC6BDG2F3221380D5CFD64EC857ADE009BFD517B7D301CC5B90D50B0DE37308767C43B0A8A1E43D2EFB53BC11568EE1650FFCC61F41772349BB6CBBB1EBC363EDDA324D2A7D155E7F9DD1230325B5CEB33DF019FA4C2F12364C8E02D9BFAAE7A87AF41B23D1FE5AC09AB28784E93065B6EFB6BB32CC0961504AD24AAC1F4CF0F686C5DF3383B5B6690F981D02FD07CA6DE
	BC4AD36117E70D77DB05471FDE5189F150A024759A8C786FCA7C77DE74F7A5C6AAB1D23997AAB7D1887A47BF5D4BFC4641437B90EA7E0AC6E8C1E96EABCF5C7D7B3A444560DD2310017FB1CDE804FCB997793A64264937ED4A9E93FFB3EAA3978A95AFAAF73557AF4E91077E68857251740B282F71BC8557E0CFA5F3C077E2CEBBA07E901ABDB010901C876D4787DE842C41398B705F6B07DDBFC8EA83165D485DAA75F2C7502DB534A3AE42F12CB4BD64EB67D6056C967BF09CEDF853FDCC377834E83FA46479FD
	DB611BBEA2C7E9F73CBEDE6E772AD8087EB08F114FEBF89EF46D743BBC8FBB584487A1BEF9ACBC8F1ABFD0EC17A2EFD5D118DDF2FD7F49AD89D603C20E4FBF23A58985BE1F006971B7E087C014CC85FA5271B000BE4C5253AF33G48C3DFD96911349EFDE785C8E6D9AF7E30EA57485A2361BA3647A7DED51BD28358146EEB939B3ED6126B2024ECA4F3FD0CED738E88855C73A5C127BCAA611101AE811FD6617E2DFA045957A934304207573EF64BAE62D38F1F44F3AA5C3F150BF659C59DF5B1E3000BA3347BFA
	F68EC93DF37CCBED3AAA57A5FAD7DAC06BB25327AEDDAA5C3FD5C45CA8FB21D5F831F2D0AF7E0DFD3AC57609CDE641FC7A3A2CCBEE175D5288032FCB3E96CDF5176CD305A0B7D57A573C29A649EE15D31750BB924D573929FE6E5BD4A884FD438F5BCD3F295DF5CD79CDED72B7B6857E37D42A483D58D07A147F6F0365D7701D8740632B58F7CE9FDF59AD847E2670F42F59EE174C760B079D9674FD6111AB122878FF712E2272BDAC8FCDA4E9D9D7115D9794B27F8FD0CB87883FF2C35DFCA4GG48F8GGD0CB
	818294G94G88G88GFBCFA3AE3FF2C35DFCA4GG48F8GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG36A4GGGG
**end of data**/
}


/**
 * Return the OperationStateComboBox property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getCommunicationRouteComboBox() {
	if (ivjCommunicationRouteComboBox == null) {
		try {
			ivjCommunicationRouteComboBox = new javax.swing.JComboBox();
			ivjCommunicationRouteComboBox.setName("CommunicationRouteComboBox");
			ivjCommunicationRouteComboBox.setPreferredSize(new java.awt.Dimension(150, 25));
			ivjCommunicationRouteComboBox.setMinimumSize(new java.awt.Dimension(100, 25));
			// user code begin {1}         
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCommunicationRouteComboBox;
}

/**
 * Return the OperationalStateLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getCommunicationRouteLabel() {
	if (ivjCommunicationRouteLabel == null) {
		try {
			ivjCommunicationRouteLabel = new javax.swing.JLabel();
			ivjCommunicationRouteLabel.setName("CommunicationRouteLabel");
			ivjCommunicationRouteLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjCommunicationRouteLabel.setText("Communication Route:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCommunicationRouteLabel;
}

/**
 * Return the ConfigurationPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getConfigurationPanel() {
	if (ivjConfigurationPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder1.setTitle("Configuration");
			ivjConfigurationPanel = new javax.swing.JPanel();
			ivjConfigurationPanel.setName("ConfigurationPanel");
			ivjConfigurationPanel.setBorder(ivjLocalBorder1);
			ivjConfigurationPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsControlInhibitCheckBox = new java.awt.GridBagConstraints();
			constraintsControlInhibitCheckBox.gridx = 1; constraintsControlInhibitCheckBox.gridy = 1;
			constraintsControlInhibitCheckBox.gridwidth = 3;
			constraintsControlInhibitCheckBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsControlInhibitCheckBox.ipadx = 185;
			constraintsControlInhibitCheckBox.insets = new java.awt.Insets(5, 20, 4, 35);
			getConfigurationPanel().add(getControlInhibitCheckBox(), constraintsControlInhibitCheckBox);

			java.awt.GridBagConstraints constraintsCommunicationRouteComboBox = new java.awt.GridBagConstraints();
			constraintsCommunicationRouteComboBox.gridx = 2; constraintsCommunicationRouteComboBox.gridy = 3;
			constraintsCommunicationRouteComboBox.gridwidth = 2;
			constraintsCommunicationRouteComboBox.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsCommunicationRouteComboBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsCommunicationRouteComboBox.weightx = 1.0;
			constraintsCommunicationRouteComboBox.ipadx = 56;
			constraintsCommunicationRouteComboBox.insets = new java.awt.Insets(5, 5, 3, 35);
			getConfigurationPanel().add(getCommunicationRouteComboBox(), constraintsCommunicationRouteComboBox);

			java.awt.GridBagConstraints constraintsCommunicationRouteLabel = new java.awt.GridBagConstraints();
			constraintsCommunicationRouteLabel.gridx = 1; constraintsCommunicationRouteLabel.gridy = 3;
			constraintsCommunicationRouteLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsCommunicationRouteLabel.insets = new java.awt.Insets(8, 20, 6, 5);
			getConfigurationPanel().add(getCommunicationRouteLabel(), constraintsCommunicationRouteLabel);

			java.awt.GridBagConstraints constraintsSerialNumberLabel = new java.awt.GridBagConstraints();
			constraintsSerialNumberLabel.gridx = 1; constraintsSerialNumberLabel.gridy = 2;
			constraintsSerialNumberLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsSerialNumberLabel.ipadx = 31;
			constraintsSerialNumberLabel.insets = new java.awt.Insets(6, 20, 7, 5);
			getConfigurationPanel().add(getSerialNumberLabel(), constraintsSerialNumberLabel);

			java.awt.GridBagConstraints constraintsSerialNumberTextField = new java.awt.GridBagConstraints();
			constraintsSerialNumberTextField.gridx = 2; constraintsSerialNumberTextField.gridy = 2;
			constraintsSerialNumberTextField.gridwidth = 2;
			constraintsSerialNumberTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsSerialNumberTextField.anchor = java.awt.GridBagConstraints.WEST;
			constraintsSerialNumberTextField.weightx = 1.0;
			constraintsSerialNumberTextField.ipadx = 56;
			constraintsSerialNumberTextField.insets = new java.awt.Insets(4, 5, 5, 35);
			getConfigurationPanel().add(getSerialNumberTextField(), constraintsSerialNumberTextField);

			java.awt.GridBagConstraints constraintsJLabelSlaveAddress = new java.awt.GridBagConstraints();
			constraintsJLabelSlaveAddress.gridx = 1; constraintsJLabelSlaveAddress.gridy = 4;
			constraintsJLabelSlaveAddress.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelSlaveAddress.ipadx = 31;
			constraintsJLabelSlaveAddress.insets = new java.awt.Insets(6, 20, 4, 5);
			getConfigurationPanel().add(getJLabelSlaveAddress(), constraintsJLabelSlaveAddress);

			java.awt.GridBagConstraints constraintsJTextFieldSlaveAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldSlaveAddress.gridx = 2; constraintsJTextFieldSlaveAddress.gridy = 4;
			constraintsJTextFieldSlaveAddress.gridwidth = 2;
			constraintsJTextFieldSlaveAddress.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldSlaveAddress.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldSlaveAddress.weightx = 1.0;
			constraintsJTextFieldSlaveAddress.ipadx = 56;
			constraintsJTextFieldSlaveAddress.insets = new java.awt.Insets(4, 5, 2, 35);
			getConfigurationPanel().add(getJTextFieldSlaveAddress(), constraintsJTextFieldSlaveAddress);

			java.awt.GridBagConstraints constraintsJLabelPostCommWait = new java.awt.GridBagConstraints();
			constraintsJLabelPostCommWait.gridx = 1; constraintsJLabelPostCommWait.gridy = 5;
			constraintsJLabelPostCommWait.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelPostCommWait.ipadx = 31;
			constraintsJLabelPostCommWait.insets = new java.awt.Insets(4, 20, 46, 5);
			getConfigurationPanel().add(getJLabelPostCommWait(), constraintsJLabelPostCommWait);

			java.awt.GridBagConstraints constraintsJTextFieldPostCommWait = new java.awt.GridBagConstraints();
			constraintsJTextFieldPostCommWait.gridx = 2; constraintsJTextFieldPostCommWait.gridy = 5;
			constraintsJTextFieldPostCommWait.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldPostCommWait.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldPostCommWait.weightx = 1.0;
			constraintsJTextFieldPostCommWait.ipadx = -3;
			constraintsJTextFieldPostCommWait.insets = new java.awt.Insets(2, 5, 44, 1);
			getConfigurationPanel().add(getJTextFieldPostCommWait(), constraintsJTextFieldPostCommWait);

			java.awt.GridBagConstraints constraintsJLabelMillis = new java.awt.GridBagConstraints();
			constraintsJLabelMillis.gridx = 3; constraintsJLabelMillis.gridy = 5;
			constraintsJLabelMillis.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelMillis.ipadx = -56;
			constraintsJLabelMillis.insets = new java.awt.Insets(4, 2, 46, 35);
			getConfigurationPanel().add(getJLabelMillis(), constraintsJLabelMillis);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjConfigurationPanel;
}


/**
 * Return the ControlInhibitCheckBox property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getControlInhibitCheckBox() {
	if (ivjControlInhibitCheckBox == null) {
		try {
			ivjControlInhibitCheckBox = new javax.swing.JCheckBox();
			ivjControlInhibitCheckBox.setName("ControlInhibitCheckBox");
			ivjControlInhibitCheckBox.setText("Disable Controls");
			ivjControlInhibitCheckBox.setMaximumSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setActionCommand("Control Inhibit");
			ivjControlInhibitCheckBox.setBorderPainted(false);
			ivjControlInhibitCheckBox.setPreferredSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setFont(new java.awt.Font("dialog", 0, 14));
			ivjControlInhibitCheckBox.setMargin(new java.awt.Insets(2, 2, 2, 2));
			ivjControlInhibitCheckBox.setMinimumSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setHorizontalAlignment(2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjControlInhibitCheckBox;
}

/**
 * Return the DisableFlagCheckBox property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getDisableFlagCheckBox() {
	if (ivjDisableFlagCheckBox == null) {
		try {
			ivjDisableFlagCheckBox = new javax.swing.JCheckBox();
			ivjDisableFlagCheckBox.setName("DisableFlagCheckBox");
			ivjDisableFlagCheckBox.setText("Disable Device");
			ivjDisableFlagCheckBox.setMaximumSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setActionCommand("Disable Device");
			ivjDisableFlagCheckBox.setBorderPainted(false);
			ivjDisableFlagCheckBox.setPreferredSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setFont(new java.awt.Font("dialog", 0, 14));
			ivjDisableFlagCheckBox.setMargin(new java.awt.Insets(2, 2, 2, 2));
			ivjDisableFlagCheckBox.setMinimumSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setHorizontalAlignment(2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDisableFlagCheckBox;
}

/**
 * Return the IdentificationPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getIdentificationPanel() {
	if (ivjIdentificationPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder.setTitle("Identification");
			ivjIdentificationPanel = new javax.swing.JPanel();
			ivjIdentificationPanel.setName("IdentificationPanel");
			ivjIdentificationPanel.setBorder(ivjLocalBorder);
			ivjIdentificationPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsTypeTextField = new java.awt.GridBagConstraints();
			constraintsTypeTextField.gridx = 2; constraintsTypeTextField.gridy = 1;
			constraintsTypeTextField.ipadx = 220;
			constraintsTypeTextField.ipady = 20;
			constraintsTypeTextField.insets = new java.awt.Insets(3, 5, 3, 24);
			getIdentificationPanel().add(getTypeTextField(), constraintsTypeTextField);

			java.awt.GridBagConstraints constraintsTypeLabel = new java.awt.GridBagConstraints();
			constraintsTypeLabel.gridx = 1; constraintsTypeLabel.gridy = 1;
			constraintsTypeLabel.insets = new java.awt.Insets(3, 23, 3, 9);
			getIdentificationPanel().add(getTypeLabel(), constraintsTypeLabel);

			java.awt.GridBagConstraints constraintsNameLabel = new java.awt.GridBagConstraints();
			constraintsNameLabel.gridx = 1; constraintsNameLabel.gridy = 2;
			constraintsNameLabel.insets = new java.awt.Insets(3, 23, 12, 5);
			getIdentificationPanel().add(getNameLabel(), constraintsNameLabel);

			java.awt.GridBagConstraints constraintsNameTextField = new java.awt.GridBagConstraints();
			constraintsNameTextField.gridx = 2; constraintsNameTextField.gridy = 2;
			constraintsNameTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsNameTextField.weightx = 1.0;
			constraintsNameTextField.ipadx = 88;
			constraintsNameTextField.insets = new java.awt.Insets(3, 5, 10, 24);
			getIdentificationPanel().add(getNameTextField(), constraintsNameTextField);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjIdentificationPanel;
}

/**
 * Return the JLabelMillis property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMillis() {
	if (ivjJLabelMillis == null) {
		try {
			ivjJLabelMillis = new javax.swing.JLabel();
			ivjJLabelMillis.setName("JLabelMillis");
			ivjJLabelMillis.setText("(millis)");
			ivjJLabelMillis.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjJLabelMillis.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjJLabelMillis.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelMillis.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMillis;
}

/**
 * Return the JLabelPostCommWait property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPostCommWait() {
	if (ivjJLabelPostCommWait == null) {
		try {
			ivjJLabelPostCommWait = new javax.swing.JLabel();
			ivjJLabelPostCommWait.setName("JLabelPostCommWait");
			ivjJLabelPostCommWait.setText("Post Comm Wait:");
			ivjJLabelPostCommWait.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjJLabelPostCommWait.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjJLabelPostCommWait.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelPostCommWait.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPostCommWait;
}

/**
 * Return the JLabelSlaveAddress property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSlaveAddress() {
	if (ivjJLabelSlaveAddress == null) {
		try {
			ivjJLabelSlaveAddress = new javax.swing.JLabel();
			ivjJLabelSlaveAddress.setName("JLabelSlaveAddress");
			ivjJLabelSlaveAddress.setText("Slave Address:");
			ivjJLabelSlaveAddress.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjJLabelSlaveAddress.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjJLabelSlaveAddress.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelSlaveAddress.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSlaveAddress;
}

/**
 * Return the JTextFieldPostCommWait property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldPostCommWait() {
	if (ivjJTextFieldPostCommWait == null) {
		try {
			ivjJTextFieldPostCommWait = new javax.swing.JTextField();
			ivjJTextFieldPostCommWait.setName("JTextFieldPostCommWait");
			ivjJTextFieldPostCommWait.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjJTextFieldPostCommWait.setColumns(15);
			ivjJTextFieldPostCommWait.setPreferredSize(new java.awt.Dimension(150, 20));
			ivjJTextFieldPostCommWait.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjJTextFieldPostCommWait.setMinimumSize(new java.awt.Dimension(100, 20));
			// user code begin {1}
         
         ivjJTextFieldPostCommWait.setDocument( new com.cannontech.common.gui.unchanging.LongRangeDocument(-99999999, 99999999) );
         
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldPostCommWait;
}

/**
 * Return the JTextFieldSlaveAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldSlaveAddress() {
	if (ivjJTextFieldSlaveAddress == null) {
		try {
			ivjJTextFieldSlaveAddress = new javax.swing.JTextField();
			ivjJTextFieldSlaveAddress.setName("JTextFieldSlaveAddress");
			ivjJTextFieldSlaveAddress.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjJTextFieldSlaveAddress.setColumns(15);
			ivjJTextFieldSlaveAddress.setPreferredSize(new java.awt.Dimension(150, 20));
			ivjJTextFieldSlaveAddress.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjJTextFieldSlaveAddress.setMinimumSize(new java.awt.Dimension(100, 20));
			// user code begin {1}
         
         ivjJTextFieldSlaveAddress.setDocument( new com.cannontech.common.gui.unchanging.LongRangeDocument(-999999999, 999999999) );
         
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldSlaveAddress;
}

/**
 * Return the NameLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getNameLabel() {
	if (ivjNameLabel == null) {
		try {
			ivjNameLabel = new javax.swing.JLabel();
			ivjNameLabel.setName("NameLabel");
			ivjNameLabel.setText("Device Name:");
			ivjNameLabel.setMaximumSize(new java.awt.Dimension(87, 16));
			ivjNameLabel.setPreferredSize(new java.awt.Dimension(87, 16));
			ivjNameLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjNameLabel.setMinimumSize(new java.awt.Dimension(87, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameLabel;
}


/**
 * Return the NameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getNameTextField() {
	if (ivjNameTextField == null) {
		try {
			ivjNameTextField = new javax.swing.JTextField();
			ivjNameTextField.setName("NameTextField");
			ivjNameTextField.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjNameTextField.setColumns(15);
			ivjNameTextField.setPreferredSize(new java.awt.Dimension(132, 20));
			ivjNameTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjNameTextField.setMinimumSize(new java.awt.Dimension(132, 20));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameTextField;
}


/**
 * Return the BankAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getSerialNumberLabel() {
	if (ivjSerialNumberLabel == null) {
		try {
			ivjSerialNumberLabel = new javax.swing.JLabel();
			ivjSerialNumberLabel.setName("SerialNumberLabel");
			ivjSerialNumberLabel.setText("Serial Number:");
			ivjSerialNumberLabel.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjSerialNumberLabel.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjSerialNumberLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjSerialNumberLabel.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSerialNumberLabel;
}

/**
 * Return the BankAddressTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getSerialNumberTextField() {
	if (ivjSerialNumberTextField == null) {
		try {
			ivjSerialNumberTextField = new javax.swing.JTextField();
			ivjSerialNumberTextField.setName("SerialNumberTextField");
			ivjSerialNumberTextField.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjSerialNumberTextField.setColumns(15);
			ivjSerialNumberTextField.setPreferredSize(new java.awt.Dimension(150, 20));
			ivjSerialNumberTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjSerialNumberTextField.setMinimumSize(new java.awt.Dimension(100, 20));
			// user code begin {1}

			ivjSerialNumberTextField.setDocument(new com.cannontech.common.gui.unchanging.LongRangeDocument(-999999999, 999999999));

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSerialNumberTextField;
}

/**
 * Return the TypeLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getTypeLabel() {
	if (ivjTypeLabel == null) {
		try {
			ivjTypeLabel = new javax.swing.JLabel();
			ivjTypeLabel.setName("TypeLabel");
			ivjTypeLabel.setText("Device Type:");
			ivjTypeLabel.setMaximumSize(new java.awt.Dimension(83, 16));
			ivjTypeLabel.setPreferredSize(new java.awt.Dimension(83, 16));
			ivjTypeLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjTypeLabel.setMinimumSize(new java.awt.Dimension(83, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTypeLabel;
}


/**
 * Return the TypeTextField property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getTypeTextField() {
	if (ivjTypeTextField == null) {
		try {
			ivjTypeTextField = new javax.swing.JLabel();
			ivjTypeTextField.setName("TypeTextField");
			ivjTypeTextField.setOpaque(true);
			ivjTypeTextField.setFont(new java.awt.Font("dialog.bold", 1, 14));
			ivjTypeTextField.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTypeTextField;
}

public com.cannontech.database.data.device.DeviceBase createNewCBC( 
         final com.cannontech.database.data.multi.MultiDBPersistent multiVal )
{
   com.cannontech.database.data.device.DeviceBase capBankController = null;
   
   if( getCbcType() == com.cannontech.database.data.pao.PAOGroups.CBC_FP_2800 )
      capBankController = DeviceFactory.createDevice(com.cannontech.database.data.pao.PAOGroups.CBC_FP_2800);
   else if( getCbcType() == com.cannontech.database.data.pao.PAOGroups.CAPBANKCONTROLLER )
      capBankController = DeviceFactory.createDevice(com.cannontech.database.data.pao.PAOGroups.CAPBANKCONTROLLER);
   else if( getCbcType() == com.cannontech.database.data.pao.PAOGroups.DNP_CBC_6510 )
      capBankController = DeviceFactory.createDevice(com.cannontech.database.data.pao.PAOGroups.DNP_CBC_6510);
   else
      throw new IllegalStateException("CBC type of: " + getCbcType() + " not found");


   //get a new PAOID for the CBC
   capBankController.setDeviceID( com.cannontech.database.db.pao.YukonPAObject.getNextYukonPAObjectID() );
   
   //add the CBC to the Multi
   multiVal.getDBPersistentVector().add(capBankController);

   //a status point is automatically added to all capbank controllers
   com.cannontech.database.data.point.PointBase newPoint =
   	CapBankController.createStatusControlPoint( 
   			capBankController.getDevice().getDeviceID().intValue() );

   multiVal.getDBPersistentVector().add(newPoint);      

   return capBankController;
}

/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param val java.lang.Object
 */
public Object getValue(Object val) 
{
   com.cannontech.database.data.device.DeviceBase capBankController = (com.cannontech.database.data.device.DeviceBase)val;
   com.cannontech.database.data.multi.MultiDBPersistent multiVal = null;
   
   if( capBankController == null )   
   {   
      multiVal = new com.cannontech.database.data.multi.MultiDBPersistent();
            
      capBankController = createNewCBC( multiVal );
   }
   
   
   Integer serialNumber = new Integer(getSerialNumberTextField().getText());
   

   if( capBankController instanceof ICapBankController )
   {
   	Integer comID = new Integer(0);
   	
      if( getCommunicationRouteComboBox().getSelectedItem() != null )
      	comID = new Integer(
      		((com.cannontech.database.data.lite.LiteYukonPAObject)
      				getCommunicationRouteComboBox().getSelectedItem()).getYukonID());

      ICapBankController cntrler = 
            (ICapBankController)capBankController;

   	cntrler.assignAddress( serialNumber );
   
  		cntrler.setCommID( comID );
  		      
      //be sure our serial number or our master address is unique
      //checkCBCSerialNumbers( serialNumber.intValue() );

		if( capBankController instanceof com.cannontech.database.data.capcontrol.CapBankController6510 )
	   {
	      
	      Integer slave = 
	            (getJTextFieldSlaveAddress().getText() == null 
	               || getJTextFieldSlaveAddress().getText().length() <= 0)
	            ? new Integer(0)
	            : new Integer(getJTextFieldSlaveAddress().getText());
	            
	      Integer postWait = 
	            (getJTextFieldPostCommWait().getText() == null
	               || getJTextFieldPostCommWait().getText().length() <= 0)
	            ? new Integer(0)
	            : new Integer(getJTextFieldPostCommWait().getText());
	
	      com.cannontech.database.data.capcontrol.CapBankController6510 tempController 
	            = (com.cannontech.database.data.capcontrol.CapBankController6510)capBankController;
	
	      tempController.getDeviceDNP().setSlaveAddress( slave );
	      tempController.getDeviceDNP().setPostCommWait( postWait );
	   }
   }   
   else
      throw new IllegalStateException("CBC class of: " + capBankController.getClass().getName() + " not found");



   /*  All the DeviceBase getters go below */
   capBankController.setPAOName( getNameTextField().getText() );

	if( getControlInhibitCheckBox().isSelected() )
		capBankController.getDevice().setControlInhibit( com.cannontech.common.util.CtiUtilities.getTrueCharacter() );
	else
		capBankController.getDevice().setControlInhibit( com.cannontech.common.util.CtiUtilities.getFalseCharacter() );
      

	if( getDisableFlagCheckBox().isSelected() )
		capBankController.setDisableFlag( com.cannontech.common.util.CtiUtilities.getTrueCharacter() );
	else
		capBankController.setDisableFlag( com.cannontech.common.util.CtiUtilities.getFalseCharacter() );
   

   if( multiVal != null )
      return multiVal;
   else
	  return val;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}


/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getDisableFlagCheckBox().addActionListener(this);
	getNameTextField().addCaretListener(this);
	getSerialNumberTextField().addCaretListener(this);
	getControlInhibitCheckBox().addActionListener(this);
	getCommunicationRouteComboBox().addActionListener(this);
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("DeviceMeterGroupEditorPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(421, 379);

		java.awt.GridBagConstraints constraintsIdentificationPanel = new java.awt.GridBagConstraints();
		constraintsIdentificationPanel.gridx = 1; constraintsIdentificationPanel.gridy = 1;
		constraintsIdentificationPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsIdentificationPanel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsIdentificationPanel.weightx = 1.0;
		constraintsIdentificationPanel.weighty = 1.0;
		constraintsIdentificationPanel.ipadx = -10;
		constraintsIdentificationPanel.ipady = 5;
		constraintsIdentificationPanel.insets = new java.awt.Insets(14, 21, 2, 5);
		add(getIdentificationPanel(), constraintsIdentificationPanel);

		java.awt.GridBagConstraints constraintsDisableFlagCheckBox = new java.awt.GridBagConstraints();
		constraintsDisableFlagCheckBox.gridx = 1; constraintsDisableFlagCheckBox.gridy = 3;
		constraintsDisableFlagCheckBox.anchor = java.awt.GridBagConstraints.WEST;
		constraintsDisableFlagCheckBox.ipadx = 48;
		constraintsDisableFlagCheckBox.insets = new java.awt.Insets(2, 21, 32, 231);
		add(getDisableFlagCheckBox(), constraintsDisableFlagCheckBox);

		java.awt.GridBagConstraints constraintsConfigurationPanel = new java.awt.GridBagConstraints();
		constraintsConfigurationPanel.gridx = 1; constraintsConfigurationPanel.gridy = 2;
		constraintsConfigurationPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsConfigurationPanel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsConfigurationPanel.weightx = 1.0;
		constraintsConfigurationPanel.weighty = 1.0;
		constraintsConfigurationPanel.ipadx = -10;
		constraintsConfigurationPanel.ipady = -16;
		constraintsConfigurationPanel.insets = new java.awt.Insets(2, 21, 2, 5);
		add(getConfigurationPanel(), constraintsConfigurationPanel);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}


/**
 * This method was created in VisualAge.
 * @return boolean
 */
public boolean isInputValid() 
{
	if( getSerialNumberTextField().getText() == null
		 || getSerialNumberTextField().getText().length() < 1 )
	{
		setErrorString("The " + getSerialNumberTextField().getName() + " text field must be filled in");
		return false;
	}


   if( !getJTextFieldSlaveAddress().isVisible() )
   	return checkCBCSerialNumbers(
   			Integer.parseInt(getSerialNumberTextField().getText()) );
   else
	  return true;
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		DeviceCapBankControllerEditorPanel aDeviceCapBankControllerEditorPanel;
		aDeviceCapBankControllerEditorPanel = new DeviceCapBankControllerEditorPanel();
		frame.setContentPane(aDeviceCapBankControllerEditorPanel);
		frame.setSize(aDeviceCapBankControllerEditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}

/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val) 
{
   com.cannontech.database.data.device.DeviceBase capBankController = (com.cannontech.database.data.device.DeviceBase)val;
   setCbcType( com.cannontech.database.data.pao.PAOGroups.getDeviceType(capBankController.getPAOType()) );   
   Integer comboID = new Integer(0);
   
   if( capBankController instanceof ICapBankController )
   {
      ICapBankController cntrler = 
            (ICapBankController)capBankController;

      Integer serialNumber = cntrler.copiableAddress();
      comboID = cntrler.getCommID();
   
      getSerialNumberTextField().setText( serialNumber.toString() );

	   if( capBankController instanceof com.cannontech.database.data.capcontrol.CapBankController6510 )
	   {      
	      com.cannontech.database.data.capcontrol.CapBankController6510 tempController 
	            = (com.cannontech.database.data.capcontrol.CapBankController6510)capBankController;
	
	      getSerialNumberTextField().setText( tempController.getDeviceDNP().getMasterAddress().toString() );
	      getJTextFieldSlaveAddress().setText( tempController.getDeviceDNP().getSlaveAddress().toString() );
	      getJTextFieldPostCommWait().setText( tempController.getDeviceDNP().getPostCommWait().toString() );	      
	   }
   }
   else
      throw new IllegalStateException("CBC class of: " + capBankController.getClass().getName() + " not found");



   //DeviceBase setters go below
   paoID = capBankController.getPAObjectID().intValue();
   String deviceName = capBankController.getPAOName();
   
	getNameTextField().setText( deviceName );

   //set our selected comb index   
   for( int i = 0; i < getCommunicationRouteComboBox().getItemCount(); i++ )
      if( ((com.cannontech.database.data.lite.LiteYukonPAObject)getCommunicationRouteComboBox().getItemAt(i)).getYukonID() 
           == comboID.intValue() )
      {
         getCommunicationRouteComboBox().setSelectedIndex(i);
         break;
      }
   
	if( Character.toUpperCase(capBankController.getPAODisableFlag().charValue() )
		                       == com.cannontech.common.util.CtiUtilities.getTrueCharacter().charValue() )
	{
		getDisableFlagCheckBox().doClick();
	}

   if( Character.toUpperCase(capBankController.getDevice().getControlInhibit().charValue() )
                             == com.cannontech.common.util.CtiUtilities.getTrueCharacter().charValue() )
   {
      getControlInhibitCheckBox().doClick();
   }
	
	
}
}