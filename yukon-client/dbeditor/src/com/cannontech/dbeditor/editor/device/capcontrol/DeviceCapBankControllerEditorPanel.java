package com.cannontech.dbeditor.editor.device.capcontrol;

import com.cannontech.database.data.capcontrol.CapBankController;
import com.cannontech.database.data.capcontrol.ICapBankController;
import com.cannontech.database.data.device.DeviceFactory;
import com.cannontech.database.data.pao.DeviceTypes;

/**
 * This type was created in VisualAge.
 */
public class DeviceCapBankControllerEditorPanel extends com.cannontech.common.gui.util.DataInputPanel implements java.awt.event.ActionListener, javax.swing.event.CaretListener 
{
	private int paoID = -1;
   private int cbcType = 0;
	private javax.swing.JPanel ivjConfigurationPanel = null;
	private javax.swing.JCheckBox ivjControlInhibitCheckBox = null;
	private javax.swing.JCheckBox ivjDisableFlagCheckBox = null;
	private javax.swing.JPanel ivjIdentificationPanel = null;
	private javax.swing.JLabel ivjNameLabel = null;
	private javax.swing.JTextField ivjNameTextField = null;
	private javax.swing.JLabel ivjTypeLabel = null;
	private javax.swing.JLabel ivjTypeTextField = null;
	private javax.swing.JComboBox ivjCommunicationRouteComboBox = null;
	private javax.swing.JLabel ivjCommunicationRouteLabel = null;
	private javax.swing.JLabel ivjSerialNumberLabel = null;
	private javax.swing.JTextField ivjSerialNumberTextField = null;
	private javax.swing.JLabel ivjJLabelMillis = null;
	private javax.swing.JLabel ivjJLabelPostCommWait = null;
	private javax.swing.JLabel ivjJLabelSlaveAddress = null;
	private javax.swing.JTextField ivjJTextFieldPostCommWait = null;
	private javax.swing.JTextField ivjJTextFieldSlaveAddress = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public DeviceCapBankControllerEditorPanel() {
	super();
	initialize();
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getDisableFlagCheckBox()) 
		connEtoC1(e);
	if (e.getSource() == getControlInhibitCheckBox()) 
		connEtoC4(e);
	if (e.getSource() == getCommunicationRouteComboBox()) 
		connEtoC5(e);
	// user code begin {2}
	// user code end
}

   /**
    * Insert the method's description here.
    * Creation date: (4/27/2001 3:51:49 PM)
    * @return int
    */
   public int getCbcType() {
      return cbcType;
   }
   
   /**
    * Insert the method's description here.
    * Creation date: (4/27/2001 3:51:49 PM)
    * @param newCbcType int
    */
   public void setCbcType(int newCbcType) 
   {
      cbcType = newCbcType;
      
      getJTextFieldPostCommWait().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJLabelMillis().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJLabelPostCommWait().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJTextFieldSlaveAddress().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJLabelSlaveAddress().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      
      getSerialNumberTextField().setName(
         (cbcType == DeviceTypes.DNP_CBC_6510)
         ? "Master Address"
         : "Serial Number" );
         
      getSerialNumberLabel().setText(
         (cbcType == DeviceTypes.DNP_CBC_6510)
         ? "Master Address:"
         : "Serial Number:" );            

      getCommunicationRouteLabel().setText(
         (cbcType == DeviceTypes.DNP_CBC_6510)
         ? "Communication Channel:"
         : "Communication Route:" );


      getCommunicationRouteComboBox().removeAllItems();
      com.cannontech.database.cache.DefaultDatabaseCache cache = com.cannontech.database.cache.DefaultDatabaseCache.getInstance();
      synchronized(cache)
      {         
         java.util.List list = 
            (cbcType == DeviceTypes.DNP_CBC_6510)
            ? cache.getAllPorts()
            : cache.getAllRoutes();
         
         for( int i = 0; i < list.size(); i++ )
            getCommunicationRouteComboBox().addItem( list.get(i) );
      }

      //set our type field
      getTypeTextField().setText( com.cannontech.database.data.pao.PAOGroups.getDeviceTypeString(cbcType) );
   }
   
/**
 * Method to handle events for the CaretListener interface.
 * @param e javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void caretUpdate(javax.swing.event.CaretEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getNameTextField()) 
		connEtoC2(e);
	if (e.getSource() == getSerialNumberTextField()) 
		connEtoC3(e);
	// user code begin {2}
	// user code end
}


/**
 * Insert the method's description here.
 * Creation date: (4/30/2002 1:16:35 PM)
 */
private boolean checkCBCSerialNumbers( int serialNumber_ )
{
	try
	{
		String[] devices = com.cannontech.database.db.capcontrol.DeviceCBC.isSerialNumberUnique(
					serialNumber_, new Integer(paoID));

		if( devices != null )
		{
			String devStr = new String();
			for( int i = 0; i < devices.length; i++ )
				devStr += "          " + devices[i] + "\n";

			int res = javax.swing.JOptionPane.showConfirmDialog(
							this, 
							"The " + getSerialNumberTextField().getName() +
                     " '" + serialNumber_ + "' is already used by the following devices,\n" + 
							"are you sure you want to use it again?\n" +
							devStr,
							getSerialNumberTextField().getName() + " Already Used",
							javax.swing.JOptionPane.YES_NO_OPTION,
							javax.swing.JOptionPane.WARNING_MESSAGE );

			if( res == javax.swing.JOptionPane.NO_OPTION )
			{
				setErrorString(null);
				return false;
			}
			

		}
		
	}
	catch( java.sql.SQLException sq )
	{
		com.cannontech.clientutils.CTILogger.error( sq.getMessage(), sq );
		return false;
	}

	return true;
}


/**
 * connEtoC1:  (DisableFlagCheckBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (PasswordTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceTapTerminalEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC3:  (BankAddressTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC4:  (ControlInhibitCheckBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC5:  (OperationStateComboBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G18C387ADGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155FD8FDCD45715BFC90CF1D35A5216B44625ADE9CCBE7C9A1A1ADF4CAEED4CAE6D127ECCE3DB5A1ADFE8B61B35ADCDED57A42441042424BE06BFB3849490D494C4D4B4A08481D1892200A0020E868515349A9D18870C8CB35319878CEA1ABD775EF76EFB73F8433F56367173B9F9F33F771EFB4E39775C3F6FBCA264ED8BCDCDB26489C2D22AA07FBB18A488C1E30250D8F9F191E2263813C6C175EFBBD0
	0E501816824FFC480B6CB79B330550DE9324ABA0DDF55EEC5C843FF3057BFB93C47861C7CEB464EDF969EA4864F2FE560CF20CB47DBBC3A6BC5781D581568D948A14AD64A6674B3897526B645F04128C003DC24ABCD31E2F42E365F2E6483B82D478DBD226B239D04E0F840C140901672AD7D85994A813CE353B3D3ECEAEF771F321C27C778A8DEB09ACD57DC8565FB25EF97233D8D8C89BA2D9F82E6A83F8B6F48E8D9C69F38ED776D99C8E27C3927B86AB2D3D2255A6B95D157243AA0E5A7AC4A8616A0392EE27
	3D3E3E15C2AD9657D10BE3280521F651FD0CB2F4DA9C229D6ACE20B63DD5EE227240A6C84FF915E0A395249D9B60F7B7107DD5346BC7EB9BE43D0307C2059577E57935EB692B4C1ED52FAAF6159EFFB9B5A41E54FFA1B9D3662B00349508697215E454E5C5BC6A322000144DDF8D3E83543E9AF1CBA1412FC05A8B94349AF5BC7C8E6A58F37D9B4272E71ECF4E7223E358EA26DB74EAC5471077DECE5DCCFDE9380578C366EBA0972895E890E89ED098D08175615223FB60595CAB35B807071D0EE6176B285D6ABE
	65340AF678DDDF8FB9B2F6D66CF33A2D02407C54D0D121238FD264EB3EBECA0859F6C1C03F8ABF7B0090B5773F13D3F5ECDB7CF411E139DC474A57D46D7FBAE937DF533EB541EF421781447057A9EED7612C2F2ED31C2483A1AF6EF5EC671EF5280BB9E50110DD5DECB06A68B27FBB878C5D89CC87FB02228BEB636347C89B4F87FCB150B220D82014B7CE9ACB5E40B6F69F5DB7D59BF74038F0BBAC762E11DE1745AD9D9D31592D22DBEE6BCB491335359EB13E21997331F6895B276E23679EE952ED176742F699
	1A5EE06D51730652AECC76C23F323DEFCC740DF53C8F5751B19178866B43E40E67D3BCC405333E8D25E30B2443A1AF7B4D13C6D67EE9DADEFAD36BA33F20F8701BDA9F99A8C49FD98CF9793FBBE9E47D7B4BB6B2DF5E0074FC20C5C0CB01D68225A4C239C46C63470F6E1D66B86AD475AF639DED5988CF51AB39AD9D8E0FE4F1740967ADEE1B2557AEFA84394C47AD24DDFBFD786650715D87B20E0B8E51ED11ECCE8754EE99964119BC2C4C27DBF2C89937C8F33BED43A28898F689D86FDDAD39442FAD9E691C4B
	EA11C425844B7FD28B7109D14BF92891AA005F0309243DB6D710F92E8EFEF7A7E2DB2DEFA7D8B82423F83B64372E0767C9F0EE11CC6A36BE220645BD0EBE7AF285AC1CC28C149FFC8B46A6D0406FCF9A73566098FD2987FD31F56D7DC245530D3A3EC8FDF58D732B28B5DADFFC0B4AD885F826E0B6D6G19016CC0AC7F160A9ECDDDF9EBFCFD146835CE5613BC875F5277E1223B7ED8DCB0C1C606CE39F532AF13E76AA4E3D40B31768F6820E3876C8A83DA8A447A202B35187966D10BC7C4EFFC5F8D0EA4DA159E
	E1E5BB0F1135C69C959DD22B68929DD6786111FD614231F445CF7B1D5C07AED11C4CDBAD60C89E0E779D4BE1B8542176FA4C9F227996C9F25BFAC7A431CB14A41BE3C06177D0DDBCBED322C736755693445695E0E38210A989EDCDBC162B72B73353B9B4626AA6A3C9765B47687ADC8865EB13307F738A499E2C07270BE8DA49FF20C05BF753A1D25F74676AFF1F150C64E916E3B27E33100C831CBFD3E5BC1D677F1A6687005EE1C051C089C04586EC0761429EBF7CB3555B3F0EF3298CED7D5A31B2DBE2BE72F2
	1BFF9FFF2DCD5F47935B74FD5CF0FCF29FFE7B381E8F333C1C6344C66718C3B5A6B69EA773A56C029DA29D181CC5E0FB6A173A099DB607CD3AE0338E08D2176D9A1CB3DC86F2C62922F3F2BB7C3E8844664F311DB8FF16DC3BD7083C3C4520375F1AFF7FFB064586662FCB65A719BF19CE1B5A49D8936D62B0B4D40BF344A1B1FCAB1D6FE55C13CC3184E98E61ADED35F94828EB33DB86DA86453E2123CEEF0505DAD4499E1D223B5F699E962D25D7AD2316CA4B18D4C9FB243219E69FA33F4B0A5FFD77C87154A7
	010AFE1BDB6CF038C664C52C346CFCD99553676E426BD41F5330AAF6C3373659C43B35228F66A429127ED766A0CAF8ABBDE350F9329EADA477AFD623DAE0FAECB75FC6756892E1E1371F9E996E955DFF8FFDEAE4FD1E156E207A480C9D0EC1DB2FCD7A7BF455BED927655ECF49BA8D8F0FB8ECFDF44BF25689438A10DE675FDC2FDAF92DF974A4717F15B0AE92017212F12D39271D6463DAA3AF28AD24E6AA9F723C49E4DC563C1B279AEB9500F54BE7F3167F619479F7CE117FAFD3647F5CEFBE33E3EEC7B61923
	44BF0D083075A4437624B80E7B470E751A3C73967B0832AF3D2B034C4DF655BA4B70F9A774670C4F1CA0EB6B902F7F73A75284323FE4F532B9EE11055469F25B06E1DBC2B68E727D460F1355779B11E087398B91D220CF00982F60A675327EBEC57641475D4E91177A56A0AA0534C951D63C872900F4AB10B5055537B0054DFF2C5C4FF9396CD433319428BDD52F5C7DC5D8EE8E640778ADF7F98F16DB82794BD37D494DAD47F271D0A6B38D762DE93E656CE9245C718A3CEF584B318FA976BAAC1E77A563196ED4
	367ABE2769CBF65DF5005022B4D90FB433662C7B9BB329B7967078B49C8319A7557B2DE60F4759E72363D6760347CE2A578806C51EFC9B1EB060BCF06E350ADE74256F1EA43A1233088C4B7E70E079E1E162590A75A9EEE7DB4668F06FF63640F1289D5C3105AF2167ED6218006D70D11B7A7EE7C956BB068CBF6DE0B2B27BCB0DCABB543E77F2AA53691EFAF226573B5B6A23CAD68E0C58AAC7A49BB974D8A48B1DD9187F31FB22069413EC5FA0544F6E03B20DE44C04C2BA82A89A081DCD0FEF4D144B2E842C58
	84FEC047750DF175386EB131BDEDGBC59FC7A50569AF84EFC4A44F60FAADB4F7AC9B3B1E2DBFEB537C9163D6C2185C24347A6035EBD553C2C7506E093EB43A5A625AD2565D78DCBFF0E77E999C5E823A95DECECCAC79B4F9529ED74829E8A94150EB63A0B085F4FF07D144F7CBF60B2E3203E6C37D1E661F62D4CF648333F0D7DB1EF8F7285G9641793EBF2A6D8F429747799A4A11AFA543ECEC48C03EE7F62A79248C46971201B65ED7BE5BFE146F5CEA54E3BFF245EE7FE3BFC39E7B995A317F035344DFD7G
	9E1F01E33F591C239A7BE7E134D99C83F6F2A5AE6F334DC4FF186B65742BE6A2174E75821ED9B3BA096D26CC3331842881289BC84AC49957CECDF9F7F64CBB495DD9F30A769EAAB8D3B91705E5CEBC2331FB22GBA9617C0BEE9A7A34783A93EDC05333EDDCFF112DE85F91DEB714CF4EA2BD67E62353EB223B5E946774789FC151AF43C060F0D59A3678BF0DED28D017A7A93383513671FC746C9FFEEG4ADCE7166FEFACE7481A6302F4A050C220C820D8A0A18B7AA78B7B6449D3FA7331EF1F781B0C15BBGE6
	E7CE516C5AE75B84BEED7B34E669354F2E52C27D76611BF13657F842285EEBDC4C1267D6F8868331B63C3B0834A1F9FF901E057D7DEC596C6CD9B901CFEBCFF636AF1F7C4EC7525333944AB6E4231EDD5BD14F6EEC5473B3FBE627E74884BE2D1E919ABD198EA9E368EF51DC072365335321F3821FD6075A9C3D3E9F307B9B9B7271C256F5DD8951154C1D669C9C9B771EA5589CC8876760B858FD1A34A94EFF1DCE1BC392F06E7B49E9322FF53AED83B687E2B1946BF33A69011FE1391D7E6FA236F46A5FC594F7
	6A5FC56C6E1C7C3E2D32535FDD853B9B6B21FB1205E0DF8490432E27926CB9C84767E03F4D25F3DD7EFA33318E28E7BD621FE77B17F4361FA6EB9843730DD35DED113AA64B2FD365772C5773096AA9E5CCF5D7162A29D31D371572BF39B10B362F47A3FA6884C7F6F6F25E2F248D024E3D8D39F610E5678AF336264BE50EC94E16EA2EFB44381E6EDE594EC079992A32FBB17CDE8A741C26AD62A01D12EBB66683D5641AD5E73C21B37E7D4CFDC65F4F3CE708FFFB1CA36EBED16BCB9F1F4967F94A6C5EA1094344
	E4798CC879A50BFBC01C600B1F257CAC4F9F7F7CB37E7C1535E7FB113ABDEB78B8FF35ACDFFF1C538D387C4E58E8125B3FA997775FBF3CCA7C578B69A02030DC745F102249FCABB257378F164B691570CC5464E56741BA1A670BB1DBF27628EDA1FB9E26E756886AD91707FA7EF80468690274BC2050BC5433E77BE4FAC6E864AE1353AB60992F49B3EDB09B8BB7686979040F1E355C07534774E4D749F5344A4F9ED51DF6789DG942C11938669A5C051C031F29E13BDDE2E163D1F4B4EAD4175A0814AE7EE742D
	2F9852359A0C795783E7499E4E4B53DF2369F1AE4F19C266EB3BE55CB98293FB48C632D71F1B22DEEF5B81F3814D116BE77E777098B9D3763BAD4360F6DDAE31CF70EEA23C1FCFC55ED8A81FG148FF89DD04FA65C6BBFFE0E1C27BB487034754BD7E06C5C487299695C2E4A797F7ABEB93341086A378D0C38D56C729C7FAC5D77C5023C68CDB847BB2F51F3BD2493B936006EED3273E19E49C76CCD0AB565333DAF437237916CA2E0DEDE6E1FC789968869900EFD50C430C5100E6258B609E05110DE4931DB8A88
	16184F6EF39896DA00EBD061E674F503C93D8730839E30D96963604D93579336FFEF99A2E3A7ECB333A11D631D940FD261ECDF7FB41D93C8FA856435EEC1BD7F2D885BAC0CE3CB285DCBA09D4D3154B1EC1FD80EDDAD4276C96018B39FED4CACC02CF79B364F45827E2EEAC4ED378B70B9850A2D738B7C59FDED145891DE406C5B4071CFD3FC058AE7F64750B90624738A619CD008BADD5B0EF65B37A2F62704F687F06C87925A9D4CB1C7815A9D4631FF5F00F6AF615831C234BB33883172B1745BE20E850E21AE
	959C73EEC53FED62585BBAFE3B3D88756B6665DE99C17D86B9162E6337B5CD285F8DDE2EF4F4225FB60E22EDC13C5C9E3A37DC8169C40577BA55F99B2C8D5B38BFDCC75EDA0E39F752BDA824C33661FDE775951F738C3989282FBF6E36D90FDA864CF466E26BC8B85D5B917B97ED43F5645994FA2F8DE921986622E2FCE7645D0DF7E4618FAC904C81CD3AB1D2AB3A5FB1D495B3FF6BAED66E8B963D77F2AA1339B18DE586C17E52E2B2873626296FBA481C753A016D5FD97E28CFBED97FF78A6A7CB01FFC226FED
	496A7CE7FD72C99B3DA373B35B1E5A0536A5BE95A6589F2D749B7F153D1D59D4ABBF05761DC26C5A38D4B64F3EB2CE6E31A558B485EFA7F20DF48E3543EF6FF61C4B3FE8A66B403045EB9B9E9926AF6AD8597934EC8C7C0E65E59FAEA2FA304B9DF22C36B82CE49E23653FD704F5E76F4072B95BC879DEA7F96950E9011307E895F05D7A72B849F33945FE516D962D6C9521DCD7B31DD3AA201EBADE572F4E91DB7A1D8E5916A86A37D648F771B22E26B4EA0B1B1EE7C281970436BF88DC661F0FD1DBED8E0D2D6D
	F49E080572F13C2E7985E48D9B044351B510E931B75BED838EF2BFACB46CA4BC7FDA502A539FEA1FB14ACFC20540C3E8275C0FD5705BA27F16E3D5CCF45CGBEFFA70E258732681C8569E80E6D4A61E71D1DB85FF68C11F7A32DA5E66395A0AFD0D089661D27F96110DE86342A043D9F105F35DF556E07889FF912FADACBA64E53DE9D4C9FB1997193E4603BF879DD08AE5FF4E5307E7B95753D4CDDB0BF6C427E7B49A829274FE99F99F6F864F23F21BE338D488C6598D64956BEC88FF26C8B343EE0C80782317E
	1E1BBFD9FF272A6CA1349C78D682ED1071C4787D305C5FCC4697290F1BF61B0DF93B797AB102BE504431AD0D6883D60E55B5218F4C5B0DFD99B0DACA46AB249301CA5E0133AD50A0D0A0D0B8D0B4D09CD0DEA972FC0172AC47F7B7001BCB59FBA1BBBC8301420116812D62BC4F0F044AB613FA517EC1396EF5AA9D34ED947D0E3E6F04EB70F61DF2A59A0C58B0356F250F222EEBD5F999825B1F62B8550BE14A71D3EF169FDF1E4CFFB7CC4B076F23FB164CB27061B27443C7A46E2F9CFB1D6DD9A0BD48313B691E
	A5985221E5682F7FFF43F47C95FDF6F919B2BF51F7B8103E4D47DF9DF43F938F3830876450395576C70167BFCA47D18564556DC13D6E257B9CAB24DD9CBBC147D69024C3B836050E4B2510DE4E31BFD29FCFA9075F65E85379512966DCB5E9675C06F23637425820DC2139447F9A74873A87EA871E6EF21CD39A2F1375052DE7607F65D4276BE4DD8A60BA4E3DBED53B9BD56D9EDD6E5B6E3165CA3BB3197F34D3FF4D3A176E336220FCE2B90E4D07A73CC7180A587E7AF4AA59E315D6A86D43708B942FD561EC5F
	3DA285634A1BA0EFE1855EBF1AAF12332369DD18FF009A003A01A42020F771BEF2EFD715B0453DFC3753E596C7C53B6AFA1059D710B63BD861EF9BF1BF3578DBDF95A2663E14646FFD6A42F765F7CB72F3FE5BCE0AB37B7E7B9231AF9E7232ABE14F8BE4863A82642DC47B463AAA18FD6455EF33A4D97A8669DBE5B40E3C68D5E0F270E6E349FBD960FDBEF80D2C59BB6483349C9832035992BA26FECFD677F6055F77E40115721D1C7C340F6F1477C43596C556E70B487C6290470A79CB3AD69B28C682E9CB2BEB
	2AAB0AEB8E1449E5DFAD52530B55F921D729B3E8F4BAF5B23EAB838A5F29269DDA3EB658FC156E305AACF667400E0A622A0A626ADA7E4E7007FFD437C576020D06A4BFED91A337C1EC25F286E072178EAA72C78B262377B6012D9FA6C179476A7A9F1B40FD6EE71968F3058F7E33507A4CCBC9BB7D68163F1769B438D7514DFA837770D5A6751C436EF7CEE4639DCDA870C4G4583192A5477D00FE7CD3C97DA1E05FC45D0165C8B554153DC455ED733792BA1E7A6F32C95F83DD5EC7EA269C0787D621AB5EBB6F0
	BD8CF40E6D9EF7A911EDBC0F359549B3DBFA6937B2EA1C5C31EA7135B22E2ECB0EBF9AD21F29664BB6AD2942775701A7757223F97E07177572E32BF02D7B721062A75F985D6D5FCFEA2AEB8F56566DBBD0FB905C252A8CF912466088A9D46FC7DF7936DD296F7224E3F0DF8D2B0871757EC9616B4D5F25BFDEBC960747A33AED7D2AA1236337F10D7EFDB9482D7CFE442352F5FCBA3AB2FF6B9EC1FFCB28E2FE1ADD8DEBC3B573D3D62625D1FBD759G791DF29966136FB7CD65136A3D77A0705E28D6FCB2281A2D
	5F3F863FC4BFA25FB268C795221D85B73650B27E227C305C9DEBB76916E31EAB47FF6CA17BC9F5D4252FDF2F33EE5064CF9CAB2DB44E6584E56C32DBC645E62B55AD1297EBAC3F5FC8ECD25E906B15995A2F5451697450A5780245A6E17EAD5D3EF56815E93A16496BB8E5335BED9EB6FE3A2EEB478F0D8F294671155927173F086797C8FA79D1BCFFCE01DE3CCB8C4FDF6C5163DF45736F516597EAB07F5FF47973EAF07CBFABA9E360A3E966637FFB126F78FFEBC4292FEF52F5E7FF15FA7CDB3D8A5F7F5D7017
	0EFFD6679D634AD87F5AB5257E5FFBA6532B4AC72F186B8A5F7056C95751DA757A7F3B9B8A1F21080C139D7240AC16C7668E2EDB511F1532AF0CCCDF46AAC161FB2BF13AFB8C461BE5D0F837CE3E2F7111D9132C34A93D3A42BA2ECF59577BF13FE527EDAAFFEFA92A77BAD557DFCBA2E574769325B5EC6E2C2BD176FD7E7B1EDE1949FA769995BD8FCC2AE7152CA75B17F753EF0A656FGD53FDFC8194D77A253A5A6E34DCD1541767467AE7AFFAFFD71227EFB695E0B7A718F0397A77F9643F5517F3798E39755
	5FE230B349BE93193786212F67G0581AD810A2E4173C86AA5626F644B3E09E711E3568172DE1CFC4DA7217C15177C5B7A7225293F81CC38C462E6FB1D12649CA675A37E7BCB243FA4270B028CCB7E1034115BB6B0A83122B21E7EA13DCB967BA94C6C6CCCA758AA304B348FEDFB7CF2B9BC4FDB2ECE0C368530536DF409EEE91C21B4A2DCEEB39A5AAB4BDAB8304BDF9D50C2A740775F6F3DAA76C95D16815E662399E4BFD28AFA34828D8285G85830583C582AD87DA89A4541A0D79C095C0CDC05DC0D6A0AFD0
	E0AD5AD1F535EC92BB6497A534235C96963F434E616EEC7C2EB4946A0A294577AD0F3FCD4E58530A7B6D36C9F671A8BDDD3077A12E9C0C794D5E0F6FE05EDCC76434C37A8A10F7BF460AA6E661BDC090E0CB77E3ACD7EBB63ED3918EE09DCC57BAC8F7828D82CDEFBF0A7354D93275475809FEBF3193F4D742F478769046C7859CC03D7E63A44618C5F06C2E4B08959EC43BEE0CE03B86G96F1904BC60DE05B449DC43B460F503B13BA68DF201EBAACEBEB44B6F055E1593B9B69FBDDC8C78245544D348DC64814
	A447DC5CF99DE3AE62384C16BE342574BD444ECA0885F26C31824462B876BF9E9EFFD70FD8B4AF974131553CDC61A13C775911C56F408E21BF4FCF59B109BF13F84BAE187E9C83B8868F197C4FB9C7CDD34FB9A7693B9391668AF216143F912567E6E7FF3FC764F35BB9D3B647BABC303B35116D3A1C17CE9A174F4BEC3A40B9BE1D4C3164FBB658A3582E51CDBE3300655F1961DF7F4FE5CC2D7F028C7DB9B3B4E3621CF9FF067E1C79E006FA4EE458228C622B83B0FF7470F20FF26C830EFD0B56C9308BB62BB4
	4871C82A97415BC5A210FF83C1759A23D80F0CBD2542BE1031688C5287E07220134792BE1DC15F6341490125FFCA4B589C50A53CBD1E27BA5ADC96155E3F605887822E7D15B9D35D87869F520B43EB18122FC813E6FCA314EF5121693D830B02F26C9EF51C4E13B10734772B37D2BC761076FEB5034F2BF110575D4063C932E777B79632E74957B1E3BEE6578BF42E0FE8505A7BB245239A3476FA33515EE8482BBD0C76FEF788654F87AC7CB0EB77C879397C7044FEE0FCCBCF6A6D89D74A6593F57888E59FB19B
	CB0E786655C15AFCC44F0796DC5613F1C5AEAB9D5117B18F7090CD5EA2C8C7694A38F5E4F67E9DB4A51F3EFFBFC979E27C682E25D5C7503FDF24EB2050286D6F57A81E59286D6F0F0FE0FF67C35E0DC66CEFC7636C7CAD23094687CD101FC771D59364FF299165A7C05E45A6147F596BEA7911CD321F494F15CD7E7C2D3DCF4F97926572594D7A6DD982F81DA64F8C69AB4DFAFDFAC15213A149E5677911918278A2CDDE9424E3F4E5C4CE7AFD7FAA8D0FF014257360D9FA54B72F81521DC775E444F974E4D86532
	5E237AF684829E2A49DB8C69253AB21E1E540E67B4BCF1F2BA2585766AAD3EF99510EEEA511371262E9D5DF2594196FDBBEEG9E2449DB8869888DA6474A53BBFC0F3CD7E2B15C1139E46FE5F358ED8E31057DD59581E3C882695EFD9954955B023182372EA3D88224B3DB514FBFA65B95590EF92A5FB9D9B77F3C3E67EFA0E3D536E253EA556FBFE75FFC59F75FD4992CCF7F0B1EED7221BFABDA311FF75BE97CA024BBB976AD83FD7F8EE909E35B12B1F6A400E33F216722E8C82F605847E60CDB0C67589D6398
	0FE8BA06D874B90CC7AC64D82591E5D4F1EC609846A386F0EC49E5149B4C31D3D7F84CAA470403A8F789473E4F63A023B9B64463E2E2B94662AF095C5AB644D60C60B8E967D85A919CA7975BF01C3CFAC4711DC4556F5B0F5CFCBF7A725FC0C6CE13E25396556F7B9AEF3E6CA5B7D5069CBFC74F4803501FDE5E4FD7DB295FC0BA04E3BFECC53F89D34A7521EFA6F06C29BE744D1463085DD70F3E194F313363681B959CFB2C99E5B4F1ECD9BE7AE690474669F9FDA12497F36CF90AC5C2BA06E3DF24E773D510B6
	35A396C14F6605102E6058FB0739DC0EB5537A02A09D46311F97200CA59C3B0756978D69D8251C8765A6F06C5385A8B73383318B9BD1EEB147228AD02E0BE36B29AEF3A09D4C31B10A05C2BA02E317A86FB2C82F6458B729AE09104EBC0118446DAD66983B33F0C1FA9E47DEAFC099A19C7BBDAD378852D19CBBAE215C980E4DABC0392BB876900F9197CEA296D300F2BBB9D6C86B33C2DA6258AD948B0074FC0E39A9EFB82417AA98AD779C24D7F16CF6EE2FE0C64CC84BF5123419FF1F1DC34E7892396EA36FBB
	840CF3FA0C6E99EEC039F93C6CBD6BD2312C006F866651F51465478F513B951765CF640E045513C1579F129F416BB9EC770D597D66B00D73027C653C4C0F8C98234C64BCC82E4765773E8712270A25D247A22CD445DC123D3D69145978CD78D14675CEB27B46C3EF22EBDC9E14ABBE05F1E78FD12C81526D9C7B8E9D4F922483B87696DD7742A19DF18AE3A70E99E792BB2155F765A9651CA2470852B5B39EF061B44A7DA5DDB3ABA0DD4731D13AE6F6C37A8A474A681A998869799CFB0D2EFBD1100EBE0DBA5FBA
	23F76BDA1D057735BA33B840CC40735FC73969B43E2F95521D6F637B549F2CD77C69716B3EFE7293BAEF87C059407751CFEEE9757513D7F295BFF92175AF0945DE223201551DC74C136D0927F37ED2A8331C5B330C4E79B0400C191D08DD27BED2876956CEEC5B9FB74F24ED35FAC9D0CF23CF5B2E266BC5G60011D58AEC112EF3B9C5C28346BEAC9BF36FFAD75038828A30A577375827F31105F25F3D19C14CD6465FF68716D33DF523933748C6C334E207D1D072732BFFD927B2DE7947B194C9EC9BF9652C567
	BB97143FF1867BA303462B06C1FA719954F911E7E2CC787F73E00C6DCA05175617G691433087D8BED03AAC8B71CC57B9C9B271A1F52D5FD6CBA6B9B6BB9672CB64676C536BE829EF296F5AE53746F9FB6A97D7B99BF7D7BG55FFA954311C57A3CD523FEC7D963A401F3B30FC3426FFDF206DD487792DDDE87F27266C5F0C497C3BCB5B3F19FE7A37042D0FD0BE308B7B231876EF842423384E9B24097DDB41E32893B8AF7397D3375918570D5843348D1AA0ED6EC67B1E18B206DAEDDFC037EF7F86C39A3F5BE1
	B212284E210007F7234E7BB47D7BD13E523F737D746FA22AFF8C54914B6B7927C97A772B54366CF3205FB9DEDE726D5F2F50BA5BA13F7B9C5A9FB2E97F9A27685FB9D04F67562CD92374EF111F7EBD407623D0BE649C2E8FBF5D223443683A6946EC3072BB683EC3F20F082C2E9FEDD76A7A3A611D496A2A6CF55A2DD0E1B52B1071479371726FCDA5CADDDEB3E9079DAC8E36183CFB2A5F01656AF7A965EE0C97E9E5AA3194F57BC054819EEFF2E937427744396973FD33D4615BE11CD90C4BF3E50AFDEB76A875
	B4DF1E3E7C9D958ADF5B95F53B10F8CD25DD0E3D2B14DBFDE0327A8F7A54BFD82970FDE7E47AFCD1D58A5F65E94797B35E0C9A25DDAA77A9755495CDDF7E1D7B953EB78F4FCC7E8B87955E8FDBE7467B3D77945DDF2CD74DA975134575D457B065995F06438A5F71C963BEFD799A1B943EEFB44FCC6F5EE6C56FDF5814FA5694CFDFFE1AAAD677D313465679721529E2F23FBEE96C1BAFDF10C361FBF706FD7C08D33177E7AE251E019968EDF2ABFC011E1947A6BE6F710DCDACD7457B5EBA035844BBD4B10DA7B6
	7EF5E2933FB62A344F7747147A6F1EC1EC626FD4B113E7E7502EC52AD84807E6608F372BE29A87E7688FE19FA976BE250AF73CB1833DFF7B3142774AAC7C21C5932BDA1C245477518C7C61C63242F76FDFA9D675ABA9CA7BFCA7D5D57F8C7C6117E9339CE7A6951FB4FDBEC9F5569D1F21BF5C1D2B587B2D3C6976834AE77F8F187F92EE4B9604709705D40FDB486265BBE850450A51FD75493F38AF59A024F488E9AC8825C3C8A111A49DC2AA8DB4699012A5274BCBE6A7031AA4A19B3F8512E3F6BD12304E7773
	A01038FE22064D1F7969B36117DB738C0281048E0ACCCA6A9889BF21F2486EEF5C73A7614FC28ACF390535BEED76443D7BDFD8767CF9CF321056A1ECA6DBD996C28F9BCBAB792BC7727F8E20CDC8F711BFFBC5B61CE01807BED2BD5238DDB48BF97DE7491F0D75C8223599E3FF40088DE6A2E9AF09115B5BEE718CCA4422C3E6A145C17E478542FA16ED37B8867632C020C3D46B2466AB54D94976C7GFDF3293E2416CADECB6EE3D93B361F080DC8968CED425BF627455AE669131C6E8EA1DD9AF40B1EC15800FA
	DDEC8995CC74B6056E32213A82EEBEB136124469F325073CDF8ADC3BF2ED9B799F6D38053D34A4B9D5D472925616C10B9BC4096E8E097C0F981C6E921EF7CB11347B7B47B7DDB488C932112469533DAEC9C86B378C5B6C637003F9A86D143592E86B0611CB7E40A3E8D62C518C3338004AAFBCD9F5577FF9738FD40042AA895BD8D3826B5E8151B93C37393F5F6690F985502ED07DD6DEBDA9D329A9335E7B398DA71EDE538BFE50AAA48FD7D5517FD6537F56107FD6D3241AA255B55038F142247F3479DE3419BA
	8F9FC3247BAB5B208725E7DFFC722B7F5990378A2CEB93D2699F0F04CE48D6CA312FBA66065F35B5A3F84527C89F39082BF8C93DB9DE0D1F139479C702DBE166C8A233150117497B984ED4CA8A68FE1AB2CE70BF02E6CCF4A482E7C17F710917G6BE969BC7A5FCDB3EE9F4235197296F033CA3C5C9092C5C6266AFC6A47EA5567FC624C2AD44C428F28C990E40A0F6AD61F9E3DA189D91AEF9AFC73E7E528BC9CEF0E156FF9F5B4A47F88C23A13F4E5AAAFC3DA600B3C8CDEECEE1ED0466AD3063494596DEF62E8
	128ACD01254477CFCCC930128AEBFD7EEC14A46479FCFAD5CC3F3D2A87D63694943301C78172C1D4317CC594GD9646B26E242DDCC3EEF8244D4BACCBFE8AA1BDDFF345E447EB86D5555A9490FCEA93EBA6174154642B3D95D046766A85B6D1D608AF464CBC2267A2A04FB86F9335425137A079A9196DF2348460ADEDE7B6A2D18C8EFBDFCB2AF68247E21CC34ABA6E64AA626CEB0F116FA5F4C41A1698F0E3F2BCE571436A44BB72E00A61F36F469247E21BC62B6458A234A0A34A92D78873669530ACD3818CDE6
	53A7E5DFF237E216C118FADF7209682AFB951B48A9983BAA65935ED58FAAE66548A6110D0F61135CD50F7AF695F1C1DF7723FA4B5F3216FD2C7E16B5617635FE7F06C94AG0B0B4D9F507E2D7F83B446309BF057GFEF7B4B70D3CDC7077ADDF573045EE17AC7621E60715FC57F7F4DC92156FAE8F517ABDD8C64E143FC122FFF3702A0A67FF81D0CB8788639B645FCDA4GG38F7GGD0CB818294G94G88G88G18C387AD639B645FCDA4GG38F7GG8CGGGGGGGGGGGGGGGGGE2F5E9
	ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG07A4GGGG
**end of data**/
}

/**
 * Return the OperationStateComboBox property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getCommunicationRouteComboBox() {
	if (ivjCommunicationRouteComboBox == null) {
		try {
			ivjCommunicationRouteComboBox = new javax.swing.JComboBox();
			ivjCommunicationRouteComboBox.setName("CommunicationRouteComboBox");
			ivjCommunicationRouteComboBox.setPreferredSize(new java.awt.Dimension(150, 25));
			ivjCommunicationRouteComboBox.setMinimumSize(new java.awt.Dimension(100, 25));
			// user code begin {1}         
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCommunicationRouteComboBox;
}

/**
 * Return the OperationalStateLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getCommunicationRouteLabel() {
	if (ivjCommunicationRouteLabel == null) {
		try {
			ivjCommunicationRouteLabel = new javax.swing.JLabel();
			ivjCommunicationRouteLabel.setName("CommunicationRouteLabel");
			ivjCommunicationRouteLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjCommunicationRouteLabel.setText("Communication Route:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCommunicationRouteLabel;
}

/**
 * Return the ConfigurationPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getConfigurationPanel() {
	if (ivjConfigurationPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder1.setTitle("Configuration");
			ivjConfigurationPanel = new javax.swing.JPanel();
			ivjConfigurationPanel.setName("ConfigurationPanel");
			ivjConfigurationPanel.setBorder(ivjLocalBorder1);
			ivjConfigurationPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsControlInhibitCheckBox = new java.awt.GridBagConstraints();
			constraintsControlInhibitCheckBox.gridx = 1; constraintsControlInhibitCheckBox.gridy = 1;
			constraintsControlInhibitCheckBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsControlInhibitCheckBox.insets = new java.awt.Insets(5, 10, 4, 24);
			getConfigurationPanel().add(getControlInhibitCheckBox(), constraintsControlInhibitCheckBox);

			java.awt.GridBagConstraints constraintsCommunicationRouteComboBox = new java.awt.GridBagConstraints();
			constraintsCommunicationRouteComboBox.gridx = 2; constraintsCommunicationRouteComboBox.gridy = 3;
			constraintsCommunicationRouteComboBox.gridwidth = 2;
			constraintsCommunicationRouteComboBox.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsCommunicationRouteComboBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsCommunicationRouteComboBox.weightx = 1.0;
			constraintsCommunicationRouteComboBox.ipadx = 65;
			constraintsCommunicationRouteComboBox.insets = new java.awt.Insets(5, 5, 3, 25);
			getConfigurationPanel().add(getCommunicationRouteComboBox(), constraintsCommunicationRouteComboBox);

			java.awt.GridBagConstraints constraintsCommunicationRouteLabel = new java.awt.GridBagConstraints();
			constraintsCommunicationRouteLabel.gridx = 1; constraintsCommunicationRouteLabel.gridy = 3;
			constraintsCommunicationRouteLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsCommunicationRouteLabel.insets = new java.awt.Insets(8, 10, 6, 5);
			getConfigurationPanel().add(getCommunicationRouteLabel(), constraintsCommunicationRouteLabel);

			java.awt.GridBagConstraints constraintsSerialNumberLabel = new java.awt.GridBagConstraints();
			constraintsSerialNumberLabel.gridx = 1; constraintsSerialNumberLabel.gridy = 2;
			constraintsSerialNumberLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsSerialNumberLabel.ipadx = 31;
			constraintsSerialNumberLabel.insets = new java.awt.Insets(6, 10, 7, 5);
			getConfigurationPanel().add(getSerialNumberLabel(), constraintsSerialNumberLabel);

			java.awt.GridBagConstraints constraintsSerialNumberTextField = new java.awt.GridBagConstraints();
			constraintsSerialNumberTextField.gridx = 2; constraintsSerialNumberTextField.gridy = 2;
			constraintsSerialNumberTextField.gridwidth = 2;
			constraintsSerialNumberTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsSerialNumberTextField.anchor = java.awt.GridBagConstraints.WEST;
			constraintsSerialNumberTextField.weightx = 1.0;
			constraintsSerialNumberTextField.ipadx = 65;
			constraintsSerialNumberTextField.insets = new java.awt.Insets(4, 5, 5, 25);
			getConfigurationPanel().add(getSerialNumberTextField(), constraintsSerialNumberTextField);

			java.awt.GridBagConstraints constraintsJLabelSlaveAddress = new java.awt.GridBagConstraints();
			constraintsJLabelSlaveAddress.gridx = 1; constraintsJLabelSlaveAddress.gridy = 4;
			constraintsJLabelSlaveAddress.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelSlaveAddress.ipadx = 31;
			constraintsJLabelSlaveAddress.insets = new java.awt.Insets(6, 10, 4, 5);
			getConfigurationPanel().add(getJLabelSlaveAddress(), constraintsJLabelSlaveAddress);

			java.awt.GridBagConstraints constraintsJTextFieldSlaveAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldSlaveAddress.gridx = 2; constraintsJTextFieldSlaveAddress.gridy = 4;
			constraintsJTextFieldSlaveAddress.gridwidth = 2;
			constraintsJTextFieldSlaveAddress.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldSlaveAddress.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldSlaveAddress.weightx = 1.0;
			constraintsJTextFieldSlaveAddress.ipadx = 65;
			constraintsJTextFieldSlaveAddress.insets = new java.awt.Insets(4, 5, 2, 25);
			getConfigurationPanel().add(getJTextFieldSlaveAddress(), constraintsJTextFieldSlaveAddress);

			java.awt.GridBagConstraints constraintsJLabelPostCommWait = new java.awt.GridBagConstraints();
			constraintsJLabelPostCommWait.gridx = 1; constraintsJLabelPostCommWait.gridy = 5;
			constraintsJLabelPostCommWait.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelPostCommWait.ipadx = 31;
			constraintsJLabelPostCommWait.insets = new java.awt.Insets(4, 10, 19, 5);
			getConfigurationPanel().add(getJLabelPostCommWait(), constraintsJLabelPostCommWait);

			java.awt.GridBagConstraints constraintsJTextFieldPostCommWait = new java.awt.GridBagConstraints();
			constraintsJTextFieldPostCommWait.gridx = 2; constraintsJTextFieldPostCommWait.gridy = 5;
			constraintsJTextFieldPostCommWait.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldPostCommWait.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldPostCommWait.weightx = 1.0;
			constraintsJTextFieldPostCommWait.ipadx = 6;
			constraintsJTextFieldPostCommWait.insets = new java.awt.Insets(2, 5, 17, 1);
			getConfigurationPanel().add(getJTextFieldPostCommWait(), constraintsJTextFieldPostCommWait);

			java.awt.GridBagConstraints constraintsJLabelMillis = new java.awt.GridBagConstraints();
			constraintsJLabelMillis.gridx = 3; constraintsJLabelMillis.gridy = 5;
			constraintsJLabelMillis.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelMillis.ipadx = -56;
			constraintsJLabelMillis.insets = new java.awt.Insets(4, 2, 19, 25);
			getConfigurationPanel().add(getJLabelMillis(), constraintsJLabelMillis);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjConfigurationPanel;
}

/**
 * Return the ControlInhibitCheckBox property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getControlInhibitCheckBox() {
	if (ivjControlInhibitCheckBox == null) {
		try {
			ivjControlInhibitCheckBox = new javax.swing.JCheckBox();
			ivjControlInhibitCheckBox.setName("ControlInhibitCheckBox");
			ivjControlInhibitCheckBox.setText("Disable Controls");
			ivjControlInhibitCheckBox.setMaximumSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setActionCommand("Control Inhibit");
			ivjControlInhibitCheckBox.setBorderPainted(false);
			ivjControlInhibitCheckBox.setPreferredSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setFont(new java.awt.Font("dialog", 0, 14));
			ivjControlInhibitCheckBox.setMargin(new java.awt.Insets(2, 2, 2, 2));
			ivjControlInhibitCheckBox.setMinimumSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setHorizontalAlignment(2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjControlInhibitCheckBox;
}

/**
 * Return the DisableFlagCheckBox property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getDisableFlagCheckBox() {
	if (ivjDisableFlagCheckBox == null) {
		try {
			ivjDisableFlagCheckBox = new javax.swing.JCheckBox();
			ivjDisableFlagCheckBox.setName("DisableFlagCheckBox");
			ivjDisableFlagCheckBox.setText("Disable Device");
			ivjDisableFlagCheckBox.setMaximumSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setActionCommand("Disable Device");
			ivjDisableFlagCheckBox.setBorderPainted(false);
			ivjDisableFlagCheckBox.setPreferredSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setFont(new java.awt.Font("dialog", 0, 14));
			ivjDisableFlagCheckBox.setMargin(new java.awt.Insets(2, 2, 2, 2));
			ivjDisableFlagCheckBox.setMinimumSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setHorizontalAlignment(2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDisableFlagCheckBox;
}

/**
 * Return the IdentificationPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getIdentificationPanel() {
	if (ivjIdentificationPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder.setTitle("Identification");
			ivjIdentificationPanel = new javax.swing.JPanel();
			ivjIdentificationPanel.setName("IdentificationPanel");
			ivjIdentificationPanel.setBorder(ivjLocalBorder);
			ivjIdentificationPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsTypeTextField = new java.awt.GridBagConstraints();
			constraintsTypeTextField.gridx = 2; constraintsTypeTextField.gridy = 1;
			constraintsTypeTextField.ipadx = 220;
			constraintsTypeTextField.ipady = 20;
			constraintsTypeTextField.insets = new java.awt.Insets(3, 5, 3, 24);
			getIdentificationPanel().add(getTypeTextField(), constraintsTypeTextField);

			java.awt.GridBagConstraints constraintsTypeLabel = new java.awt.GridBagConstraints();
			constraintsTypeLabel.gridx = 1; constraintsTypeLabel.gridy = 1;
			constraintsTypeLabel.insets = new java.awt.Insets(3, 23, 3, 9);
			getIdentificationPanel().add(getTypeLabel(), constraintsTypeLabel);

			java.awt.GridBagConstraints constraintsNameLabel = new java.awt.GridBagConstraints();
			constraintsNameLabel.gridx = 1; constraintsNameLabel.gridy = 2;
			constraintsNameLabel.insets = new java.awt.Insets(3, 23, 12, 5);
			getIdentificationPanel().add(getNameLabel(), constraintsNameLabel);

			java.awt.GridBagConstraints constraintsNameTextField = new java.awt.GridBagConstraints();
			constraintsNameTextField.gridx = 2; constraintsNameTextField.gridy = 2;
			constraintsNameTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsNameTextField.weightx = 1.0;
			constraintsNameTextField.ipadx = 88;
			constraintsNameTextField.insets = new java.awt.Insets(3, 5, 10, 24);
			getIdentificationPanel().add(getNameTextField(), constraintsNameTextField);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjIdentificationPanel;
}

/**
 * Return the JLabelMillis property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMillis() {
	if (ivjJLabelMillis == null) {
		try {
			ivjJLabelMillis = new javax.swing.JLabel();
			ivjJLabelMillis.setName("JLabelMillis");
			ivjJLabelMillis.setText("(millis)");
			ivjJLabelMillis.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjJLabelMillis.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjJLabelMillis.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelMillis.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMillis;
}

/**
 * Return the JLabelPostCommWait property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPostCommWait() {
	if (ivjJLabelPostCommWait == null) {
		try {
			ivjJLabelPostCommWait = new javax.swing.JLabel();
			ivjJLabelPostCommWait.setName("JLabelPostCommWait");
			ivjJLabelPostCommWait.setText("Post Comm Wait:");
			ivjJLabelPostCommWait.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjJLabelPostCommWait.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjJLabelPostCommWait.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelPostCommWait.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPostCommWait;
}

/**
 * Return the JLabelSlaveAddress property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSlaveAddress() {
	if (ivjJLabelSlaveAddress == null) {
		try {
			ivjJLabelSlaveAddress = new javax.swing.JLabel();
			ivjJLabelSlaveAddress.setName("JLabelSlaveAddress");
			ivjJLabelSlaveAddress.setText("Slave Address:");
			ivjJLabelSlaveAddress.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjJLabelSlaveAddress.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjJLabelSlaveAddress.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelSlaveAddress.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSlaveAddress;
}

/**
 * Return the JTextFieldPostCommWait property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldPostCommWait() {
	if (ivjJTextFieldPostCommWait == null) {
		try {
			ivjJTextFieldPostCommWait = new javax.swing.JTextField();
			ivjJTextFieldPostCommWait.setName("JTextFieldPostCommWait");
			ivjJTextFieldPostCommWait.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjJTextFieldPostCommWait.setColumns(15);
			ivjJTextFieldPostCommWait.setPreferredSize(new java.awt.Dimension(150, 20));
			ivjJTextFieldPostCommWait.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjJTextFieldPostCommWait.setMinimumSize(new java.awt.Dimension(100, 20));
			// user code begin {1}
         
         ivjJTextFieldPostCommWait.setDocument( new com.cannontech.common.gui.unchanging.LongRangeDocument(-99999999, 99999999) );
         
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldPostCommWait;
}

/**
 * Return the JTextFieldSlaveAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldSlaveAddress() {
	if (ivjJTextFieldSlaveAddress == null) {
		try {
			ivjJTextFieldSlaveAddress = new javax.swing.JTextField();
			ivjJTextFieldSlaveAddress.setName("JTextFieldSlaveAddress");
			ivjJTextFieldSlaveAddress.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjJTextFieldSlaveAddress.setColumns(15);
			ivjJTextFieldSlaveAddress.setPreferredSize(new java.awt.Dimension(150, 20));
			ivjJTextFieldSlaveAddress.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjJTextFieldSlaveAddress.setMinimumSize(new java.awt.Dimension(100, 20));
			// user code begin {1}
         
         ivjJTextFieldSlaveAddress.setDocument( new com.cannontech.common.gui.unchanging.LongRangeDocument(-999999999, 999999999) );
         
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldSlaveAddress;
}

/**
 * Return the NameLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getNameLabel() {
	if (ivjNameLabel == null) {
		try {
			ivjNameLabel = new javax.swing.JLabel();
			ivjNameLabel.setName("NameLabel");
			ivjNameLabel.setText("Device Name:");
			ivjNameLabel.setMaximumSize(new java.awt.Dimension(87, 16));
			ivjNameLabel.setPreferredSize(new java.awt.Dimension(87, 16));
			ivjNameLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjNameLabel.setMinimumSize(new java.awt.Dimension(87, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameLabel;
}


/**
 * Return the NameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getNameTextField() {
	if (ivjNameTextField == null) {
		try {
			ivjNameTextField = new javax.swing.JTextField();
			ivjNameTextField.setName("NameTextField");
			ivjNameTextField.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjNameTextField.setColumns(15);
			ivjNameTextField.setPreferredSize(new java.awt.Dimension(132, 20));
			ivjNameTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjNameTextField.setMinimumSize(new java.awt.Dimension(132, 20));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameTextField;
}


/**
 * Return the BankAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getSerialNumberLabel() {
	if (ivjSerialNumberLabel == null) {
		try {
			ivjSerialNumberLabel = new javax.swing.JLabel();
			ivjSerialNumberLabel.setName("SerialNumberLabel");
			ivjSerialNumberLabel.setText("Serial Number:");
			ivjSerialNumberLabel.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjSerialNumberLabel.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjSerialNumberLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjSerialNumberLabel.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSerialNumberLabel;
}

/**
 * Return the BankAddressTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getSerialNumberTextField() {
	if (ivjSerialNumberTextField == null) {
		try {
			ivjSerialNumberTextField = new javax.swing.JTextField();
			ivjSerialNumberTextField.setName("SerialNumberTextField");
			ivjSerialNumberTextField.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjSerialNumberTextField.setColumns(15);
			ivjSerialNumberTextField.setPreferredSize(new java.awt.Dimension(150, 20));
			ivjSerialNumberTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjSerialNumberTextField.setMinimumSize(new java.awt.Dimension(100, 20));
			// user code begin {1}

			ivjSerialNumberTextField.setDocument(new com.cannontech.common.gui.unchanging.LongRangeDocument(-999999999, 999999999));

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSerialNumberTextField;
}

/**
 * Return the TypeLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getTypeLabel() {
	if (ivjTypeLabel == null) {
		try {
			ivjTypeLabel = new javax.swing.JLabel();
			ivjTypeLabel.setName("TypeLabel");
			ivjTypeLabel.setText("Device Type:");
			ivjTypeLabel.setMaximumSize(new java.awt.Dimension(83, 16));
			ivjTypeLabel.setPreferredSize(new java.awt.Dimension(83, 16));
			ivjTypeLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjTypeLabel.setMinimumSize(new java.awt.Dimension(83, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTypeLabel;
}


/**
 * Return the TypeTextField property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getTypeTextField() {
	if (ivjTypeTextField == null) {
		try {
			ivjTypeTextField = new javax.swing.JLabel();
			ivjTypeTextField.setName("TypeTextField");
			ivjTypeTextField.setOpaque(true);
			ivjTypeTextField.setFont(new java.awt.Font("dialog.bold", 1, 14));
			ivjTypeTextField.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTypeTextField;
}

public com.cannontech.database.data.device.DeviceBase createNewCBC( 
         final com.cannontech.database.data.multi.MultiDBPersistent multiVal )
{
   com.cannontech.database.data.device.DeviceBase capBankController = null;
   
   if( getCbcType() == com.cannontech.database.data.pao.PAOGroups.CBC_FP_2800 )
      capBankController = DeviceFactory.createDevice(com.cannontech.database.data.pao.PAOGroups.CBC_FP_2800);
   else if( getCbcType() == com.cannontech.database.data.pao.PAOGroups.CAPBANKCONTROLLER )
      capBankController = DeviceFactory.createDevice(com.cannontech.database.data.pao.PAOGroups.CAPBANKCONTROLLER);
   else if( getCbcType() == com.cannontech.database.data.pao.PAOGroups.DNP_CBC_6510 )
      capBankController = DeviceFactory.createDevice(com.cannontech.database.data.pao.PAOGroups.DNP_CBC_6510);
   else
      throw new IllegalStateException("CBC type of: " + getCbcType() + " not found");


   //get a new PAOID for the CBC
   capBankController.setDeviceID( com.cannontech.database.db.pao.YukonPAObject.getNextYukonPAObjectID() );
   
   //add the CBC to the Multi
   multiVal.getDBPersistentVector().add(capBankController);

   //a status point is automatically added to all capbank controllers
   com.cannontech.database.data.point.PointBase newPoint =
   	CapBankController.createStatusControlPoint( 
   			capBankController.getDevice().getDeviceID().intValue() );

   multiVal.getDBPersistentVector().add(newPoint);      

   return capBankController;
}

/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param val java.lang.Object
 */
public Object getValue(Object val) 
{
   com.cannontech.database.data.device.DeviceBase capBankController = (com.cannontech.database.data.device.DeviceBase)val;
   com.cannontech.database.data.multi.MultiDBPersistent multiVal = null;
   
   if( capBankController == null )   
   {   
      multiVal = new com.cannontech.database.data.multi.MultiDBPersistent();
            
      capBankController = createNewCBC( multiVal );
   }
   
   
   Integer serialNumber = new Integer(getSerialNumberTextField().getText());
   

   if( capBankController instanceof ICapBankController )
   {
   	Integer comID = new Integer(0);
   	
      if( getCommunicationRouteComboBox().getSelectedItem() != null )
      	comID = new Integer(
      		((com.cannontech.database.data.lite.LiteYukonPAObject)
      				getCommunicationRouteComboBox().getSelectedItem()).getYukonID());

      ICapBankController cntrler = 
            (ICapBankController)capBankController;

   	cntrler.assignAddress( serialNumber );
   
  		cntrler.setCommID( comID );
  		      
      //be sure our serial number or our master address is unique
      //checkCBCSerialNumbers( serialNumber.intValue() );

		if( capBankController instanceof com.cannontech.database.data.capcontrol.CapBankController6510 )
	   {
	      
	      Integer slave = 
	            (getJTextFieldSlaveAddress().getText() == null 
	               || getJTextFieldSlaveAddress().getText().length() <= 0)
	            ? new Integer(0)
	            : new Integer(getJTextFieldSlaveAddress().getText());
	            
	      Integer postWait = 
	            (getJTextFieldPostCommWait().getText() == null
	               || getJTextFieldPostCommWait().getText().length() <= 0)
	            ? new Integer(0)
	            : new Integer(getJTextFieldPostCommWait().getText());
	
	      com.cannontech.database.data.capcontrol.CapBankController6510 tempController 
	            = (com.cannontech.database.data.capcontrol.CapBankController6510)capBankController;
	
	      tempController.getDeviceDNP().setSlaveAddress( slave );
	      tempController.getDeviceDNP().setPostCommWait( postWait );
	   }
   }   
   else
      throw new IllegalStateException("CBC class of: " + capBankController.getClass().getName() + " not found");



   /*  All the DeviceBase getters go below */
   capBankController.setPAOName( getNameTextField().getText() );

	if( getControlInhibitCheckBox().isSelected() )
		capBankController.getDevice().setControlInhibit( com.cannontech.common.util.CtiUtilities.getTrueCharacter() );
	else
		capBankController.getDevice().setControlInhibit( com.cannontech.common.util.CtiUtilities.getFalseCharacter() );
      

	if( getDisableFlagCheckBox().isSelected() )
		capBankController.setDisableFlag( com.cannontech.common.util.CtiUtilities.getTrueCharacter() );
	else
		capBankController.setDisableFlag( com.cannontech.common.util.CtiUtilities.getFalseCharacter() );
   

   if( multiVal != null )
      return multiVal;
   else
	  return val;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}


/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getDisableFlagCheckBox().addActionListener(this);
	getNameTextField().addCaretListener(this);
	getSerialNumberTextField().addCaretListener(this);
	getControlInhibitCheckBox().addActionListener(this);
	getCommunicationRouteComboBox().addActionListener(this);
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("DeviceMeterGroupEditorPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(449, 379);

		java.awt.GridBagConstraints constraintsIdentificationPanel = new java.awt.GridBagConstraints();
		constraintsIdentificationPanel.gridx = 1; constraintsIdentificationPanel.gridy = 1;
		constraintsIdentificationPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsIdentificationPanel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsIdentificationPanel.weightx = 1.0;
		constraintsIdentificationPanel.weighty = 1.0;
		constraintsIdentificationPanel.ipadx = -10;
		constraintsIdentificationPanel.ipady = 10;
		constraintsIdentificationPanel.insets = new java.awt.Insets(23, 20, 3, 65);
		add(getIdentificationPanel(), constraintsIdentificationPanel);

		java.awt.GridBagConstraints constraintsDisableFlagCheckBox = new java.awt.GridBagConstraints();
		constraintsDisableFlagCheckBox.gridx = 1; constraintsDisableFlagCheckBox.gridy = 3;
		constraintsDisableFlagCheckBox.anchor = java.awt.GridBagConstraints.WEST;
		constraintsDisableFlagCheckBox.ipadx = 48;
		constraintsDisableFlagCheckBox.insets = new java.awt.Insets(2, 18, 43, 262);
		add(getDisableFlagCheckBox(), constraintsDisableFlagCheckBox);

		java.awt.GridBagConstraints constraintsConfigurationPanel = new java.awt.GridBagConstraints();
		constraintsConfigurationPanel.gridx = 1; constraintsConfigurationPanel.gridy = 2;
		constraintsConfigurationPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsConfigurationPanel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsConfigurationPanel.weightx = 1.0;
		constraintsConfigurationPanel.weighty = 1.0;
		constraintsConfigurationPanel.ipadx = 1;
		constraintsConfigurationPanel.ipady = -12;
		constraintsConfigurationPanel.insets = new java.awt.Insets(4, 20, 1, 65);
		add(getConfigurationPanel(), constraintsConfigurationPanel);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * This method was created in VisualAge.
 * @return boolean
 */
public boolean isInputValid() 
{
	if( getSerialNumberTextField().getText() == null
		 || getSerialNumberTextField().getText().length() < 1 )
	{
		setErrorString("The " + getSerialNumberTextField().getName() + " text field must be filled in");
		return false;
	}


   if( !getJTextFieldSlaveAddress().isVisible() )
   	return checkCBCSerialNumbers(
   			Integer.parseInt(getSerialNumberTextField().getText()) );
   else
	  return true;
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		DeviceCapBankControllerEditorPanel aDeviceCapBankControllerEditorPanel;
		aDeviceCapBankControllerEditorPanel = new DeviceCapBankControllerEditorPanel();
		frame.setContentPane(aDeviceCapBankControllerEditorPanel);
		frame.setSize(aDeviceCapBankControllerEditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}

/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val) 
{
   com.cannontech.database.data.device.DeviceBase capBankController = (com.cannontech.database.data.device.DeviceBase)val;
   setCbcType( com.cannontech.database.data.pao.PAOGroups.getDeviceType(capBankController.getPAOType()) );   
   Integer comboID = new Integer(0);
   
   if( capBankController instanceof ICapBankController )
   {
      ICapBankController cntrler = 
            (ICapBankController)capBankController;

      Integer serialNumber = cntrler.copiableAddress();
      comboID = cntrler.getCommID();
   
      getSerialNumberTextField().setText( serialNumber.toString() );

	   if( capBankController instanceof com.cannontech.database.data.capcontrol.CapBankController6510 )
	   {      
	      com.cannontech.database.data.capcontrol.CapBankController6510 tempController 
	            = (com.cannontech.database.data.capcontrol.CapBankController6510)capBankController;
	
	      getSerialNumberTextField().setText( tempController.getDeviceDNP().getMasterAddress().toString() );
	      getJTextFieldSlaveAddress().setText( tempController.getDeviceDNP().getSlaveAddress().toString() );
	      getJTextFieldPostCommWait().setText( tempController.getDeviceDNP().getPostCommWait().toString() );	      
	   }
   }
   else
      throw new IllegalStateException("CBC class of: " + capBankController.getClass().getName() + " not found");



   //DeviceBase setters go below
   paoID = capBankController.getPAObjectID().intValue();
   String deviceName = capBankController.getPAOName();
   
	getNameTextField().setText( deviceName );

   //set our selected comb index   
   for( int i = 0; i < getCommunicationRouteComboBox().getItemCount(); i++ )
      if( ((com.cannontech.database.data.lite.LiteYukonPAObject)getCommunicationRouteComboBox().getItemAt(i)).getYukonID() 
           == comboID.intValue() )
      {
         getCommunicationRouteComboBox().setSelectedIndex(i);
         break;
      }
   
	if( Character.toUpperCase(capBankController.getPAODisableFlag().charValue() )
		                       == com.cannontech.common.util.CtiUtilities.getTrueCharacter().charValue() )
	{
		getDisableFlagCheckBox().doClick();
	}

   if( Character.toUpperCase(capBankController.getDevice().getControlInhibit().charValue() )
                             == com.cannontech.common.util.CtiUtilities.getTrueCharacter().charValue() )
   {
      getControlInhibitCheckBox().doClick();
   }
	
	
}
}