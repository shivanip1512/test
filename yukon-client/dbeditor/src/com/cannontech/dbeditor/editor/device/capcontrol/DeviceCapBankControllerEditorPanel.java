package com.cannontech.dbeditor.editor.device.capcontrol;

import com.cannontech.database.data.capcontrol.CapBankController;
import com.cannontech.database.data.capcontrol.ICapBankController;
import com.cannontech.database.data.device.DeviceFactory;
import com.cannontech.database.data.pao.DeviceTypes;
import com.cannontech.common.gui.util.TextFieldDocument;

/**
 * This type was created in VisualAge.
 */
public class DeviceCapBankControllerEditorPanel extends com.cannontech.common.gui.util.DataInputPanel implements java.awt.event.ActionListener, javax.swing.event.CaretListener 
{
	private int paoID = -1;
   private int cbcType = 0;
	private javax.swing.JPanel ivjConfigurationPanel = null;
	private javax.swing.JCheckBox ivjControlInhibitCheckBox = null;
	private javax.swing.JCheckBox ivjDisableFlagCheckBox = null;
	private javax.swing.JPanel ivjIdentificationPanel = null;
	private javax.swing.JLabel ivjNameLabel = null;
	private javax.swing.JTextField ivjNameTextField = null;
	private javax.swing.JLabel ivjTypeLabel = null;
	private javax.swing.JLabel ivjTypeTextField = null;
	private javax.swing.JComboBox ivjCommunicationRouteComboBox = null;
	private javax.swing.JLabel ivjCommunicationRouteLabel = null;
	private javax.swing.JLabel ivjSerialNumberLabel = null;
	private javax.swing.JTextField ivjSerialNumberTextField = null;
	private javax.swing.JLabel ivjJLabelMillis = null;
	private javax.swing.JLabel ivjJLabelPostCommWait = null;
	private javax.swing.JLabel ivjJLabelSlaveAddress = null;
	private javax.swing.JTextField ivjJTextFieldPostCommWait = null;
	private javax.swing.JTextField ivjJTextFieldSlaveAddress = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public DeviceCapBankControllerEditorPanel() {
	super();
	initialize();
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getDisableFlagCheckBox()) 
		connEtoC1(e);
	if (e.getSource() == getControlInhibitCheckBox()) 
		connEtoC4(e);
	if (e.getSource() == getCommunicationRouteComboBox()) 
		connEtoC5(e);
	// user code begin {2}
	// user code end
}


   /**
    * Insert the method's description here.
    * Creation date: (4/27/2001 3:51:49 PM)
    * @return int
    */
   public int getCbcType() {
      return cbcType;
   }
   
   /**
    * Insert the method's description here.
    * Creation date: (4/27/2001 3:51:49 PM)
    * @param newCbcType int
    */
   public void setCbcType(int newCbcType) 
   {
      cbcType = newCbcType;
      
      getJTextFieldPostCommWait().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJLabelMillis().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJLabelPostCommWait().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJTextFieldSlaveAddress().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      getJLabelSlaveAddress().setVisible( cbcType == DeviceTypes.DNP_CBC_6510 );
      
      getSerialNumberTextField().setName(
         (cbcType == DeviceTypes.DNP_CBC_6510)
         ? "Master Address"
         : "Serial Number" );
         
      getSerialNumberLabel().setText(
         (cbcType == DeviceTypes.DNP_CBC_6510)
         ? "Master Address:"
         : "Serial Number:" );            

      getCommunicationRouteLabel().setText(
         (cbcType == DeviceTypes.DNP_CBC_6510)
         ? "Communication Channel:"
         : "Communication Route:" );


      getCommunicationRouteComboBox().removeAllItems();
      com.cannontech.database.cache.DefaultDatabaseCache cache = com.cannontech.database.cache.DefaultDatabaseCache.getInstance();
      synchronized(cache)
      {         
         java.util.List list = 
            (cbcType == DeviceTypes.DNP_CBC_6510)
            ? cache.getAllPorts()
            : cache.getAllRoutes();
         
         for( int i = 0; i < list.size(); i++ )
            getCommunicationRouteComboBox().addItem( list.get(i) );
      }

      //set our type field
      getTypeTextField().setText( com.cannontech.database.data.pao.PAOGroups.getPAOTypeString(cbcType) );
   }
   
/**
 * Method to handle events for the CaretListener interface.
 * @param e javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void caretUpdate(javax.swing.event.CaretEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getNameTextField()) 
		connEtoC2(e);
	if (e.getSource() == getSerialNumberTextField()) 
		connEtoC3(e);
	if (e.getSource() == getJTextFieldSlaveAddress()) 
		connEtoC6(e);
	if (e.getSource() == getJTextFieldPostCommWait()) 
		connEtoC7(e);
	// user code begin {2}
	// user code end
}



/**
 * Insert the method's description here.
 * Creation date: (4/30/2002 1:16:35 PM)
 */
private boolean checkCBCSerialNumbers( int serialNumber_ )
{
	try
	{
		String[] devices = com.cannontech.database.db.capcontrol.DeviceCBC.isSerialNumberUnique(
					serialNumber_, new Integer(paoID));

		if( devices != null )
		{
			String devStr = new String();
			for( int i = 0; i < devices.length; i++ )
				devStr += "          " + devices[i] + "\n";

			int res = javax.swing.JOptionPane.showConfirmDialog(
							this, 
							"The " + getSerialNumberTextField().getName() +
                     " '" + serialNumber_ + "' is already used by the following devices,\n" + 
							"are you sure you want to use it again?\n" +
							devStr,
							getSerialNumberTextField().getName() + " Already Used",
							javax.swing.JOptionPane.YES_NO_OPTION,
							javax.swing.JOptionPane.WARNING_MESSAGE );

			if( res == javax.swing.JOptionPane.NO_OPTION )
			{
				setErrorString(null);
				return false;
			}
			

		}
		
	}
	catch( java.sql.SQLException sq )
	{
		com.cannontech.clientutils.CTILogger.error( sq.getMessage(), sq );
		return false;
	}

	return true;
}


/**
 * connEtoC1:  (DisableFlagCheckBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (PasswordTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceTapTerminalEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC3:  (BankAddressTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC4:  (ControlInhibitCheckBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC5:  (OperationStateComboBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G831842AEGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155FD8FDCD4D57AB73D6BEE6E3BFEDAFB3322DDF6575DF5F77D3D6BEED63AE9316F4B36D41AD420D4D62CE1D1D119D1D1D1D2DE8698C0D1D1D0D150C82C3088D14190D1C1D041C6E1F5D4AAD2C6668223732F190B0ECA79FB4EB977B9774E658E7F76E73B7979BC4E1C6FB94FF97E1C677C3D678EC25E3BE353D38CF9021012AE487FBECD910438DEC118F343899FE2C9B7C79985553F7700168B8B2A5360
	B3F3E214B12DF426B1C748D8158969C2C8CB85B30D2B61FB2E103D4AF4963E84103311645DE07EF17FF2E61DC7B999B49DA2E44367D220A2409A00C68365881304FC996F0674D279BB219483E03710B27BCE662B70E839DC8D6435GE55FCA4ABCA8944A799381A3E52641E74CAD2CECA2FCE6D16DFED8DDA517EB3B76A6A1713E0F8DCB08ACD57DC866DB992FCF7EAC92EE230EC895E24ABFA772DB4EF66D6EF0B94ABAACCE274BA9099D5DE556532255A639BCE57207D5BCE76B9021043B83CAF8DC766A6A868A
	55DB5CFBAD4E33758C350B1EFD14214562946DD0F7BC35696C49CCAA8FEC0234F49B411EBAC97CD88A5F9B005AEEC33B22165448FA0FB9FB13907B5B75816D1AF29B33A766B6452E10BF4FB70C1AC46ACF226DC4788AA1ED86E23A542620AE1113D017AE93A91BB9B94AD884D4B5997132C384EF01F4B7D050E454F1570728E36B257102EF791F8D4B826898BC196996B6D951B15674A7439A9ACB27AE10F8C8A6F27F92E52CGEA8572818583955098DE6B7B88BE6BCECB75AE0743652CF33B775A2D1EC3AE2BE8
	076F555510A3E3C7448E1747AA88ACCE5DA7CBF574C11A78977F98A544ECBBA1E0DCCDB872ABA1EDC9DEEA3A0EED139E7A4490AE57B17BAF0AEDC537D3FF1EA2FECB821C70915FB07CBC452D37ABB8EB2B67E8AC50B464E5CEC1BF37AEC5DDCCE95789B9DBDA8C99BA3A845F354FB0E28A53A1E40A228B73710ECB444753G0F83CA864A1B8A3E86B2CFC59FDBFD5B8672F193748B0F53E2BF5AF35AED71C8FBFBECF62B6811FD7D0E501F2F750871E5278C150F79E57CB6F59B455C562C6B171871958677D4660F
	11D3953FB0597B824A9EBF35EFECAC65ED78B86DAB21D3D99B26F27CE90AC728F056368E0A13F48C64555E8131CE4B5FCA7B5638BB34B1F29745A36E5046C845A10C11C448F35F99E5E46D7BC8AF99AF67C1BAB3946A862A82EA851200C606E29B5F6C5BBC48FE5422EADF465BFDE195FC0ABE49E3E9F2FAA50B33C3BCEE7158AC276D22D7104BFCFD017875349F5FB95A3FBBC0468151A9FAAC124D65045AAD8E9102494B4ADC3E301C147108B457ECF308A0406196305E2BAF6442275D62150E392D96C9D4CA30
	7C1FDEA0B1F14EF29CEA048AC8FF8CA57E3A1A0E396361FBF8A87AAA6DDBBAC77E95627F2F6817C597D74067E7905CA29954ED9DC48D0B67824628639471EFA3141F8D547E7F220C89C0A37EFF1431B0AC4AB8B18C7B6A7CD60C4906A53F94CA9FBA2C9B13B47FEFAC3E5A7E260D49EF282C91000F838A870A83CA3BAB4A38912861AE1C03DFBA695654C974A23A905D164A7A6A4570EC8D0EF68C3E4FAEBD25151DA147E5161CCE8D401F2EC9AF86DAB2883904D87BF9AE5371937C9084B476AEEC43FD970BD8EC
	6F35F8C50C66E68F8422E8D5DA14155DFB0968AA1E931DD20368961DD6786215E32969D21692671DAE9E034D94A763DEBD8422176347AEADE7B854216EB5187F954D37C81247F63AC7920F0A12E4F3F6A97CA255456BB724FAE5DBA5BAFFCF819BA301E2392D73AF652A625564F21D6DF11BC9CF14633E0D4E6F09D0BE7B6F98AFF3CDE48DD74E53AF5034126FB5358E329D54C46A9BFC5C0C9A160CC03124AFE34AA152FFF07CCD1771ACD52C31F253E839D650BF88E8BCD0A4D092D0D1F81431B19C7DD2FD48BD
	C0FDC335E77036FCCEE587123B6C8A49E6B1B637B7F09F096F556FA373FB757BC8E2EF7FFDA039D72F8F303C54EF086D2E73CED51F4A7C060C57308AF70A34E3F396012D69671B099DB627CDBAE133F60952D15BC59156C86124EF7C124E89EE78BEA29C476D7345B8EEEF3C78B3A16C54A6035EFAAF78F70D0618F0966F89614A384DF44A7A1674D551AEBA40D1752E9E274470E5F43E11F1EFAA455E5DBD027016B4583C24576E37DB3A6A3B450E33FBDD3ED28B35280CFD34081ECE1747A1DACB4ED84ED94AAC
	6725B25AA2E5F5B4FB9F793E296813CFF6978D3C93A96D34F944A6273BC71EC4CBB69D5FD44E74195CF5096AF398E6E5B3B46BFE1BE83716F64018A615517FE58E22042F4CFB9E9ACF56231E647E4BEAEC91189E9B73FEC075B8AA424242FE3847F1DA747CBB7459AA6BF34B6E2B29BEB2E313335BF65AA67DFB1AEA1B2C5369B3BF11F5F2B8FA1C368E3AE4BA6202EE8548E957F72ED7052C570F8FB3DF9D648DF654EEB9A756D92D9E516B7DEEF52A14F53AED15D627961717AEFECFD8EC52F72B53F6F9CE7FC3
	8A99A7F26E06759CD04D5DB8277F64DB120FF33A3CF029A7B5D37910B776EEFA46F2AACFB5A6196FE667AFCBF9FE6CG79596D7D67D78D10EF9DA0FF74G79213A79715C8F3E4BB9E4AE903F6E91E10BC106474F448B38CF383CC213F75CE26FD1769FD7DFA6F323DD359EE278C5C1FFEC8E92489A68AC2FFF04C08E3F4E49F53239E42205546976589C30FCA48BBC799C4B1B22BE47CA867D4919D74DBDD14696A046ABF8C83DACDE8E117D4E810F2B476DF7BAF4AF29EB61A1BC6F6A865EA0203177307AE26FE1
	3EE3657EFE984B19A0ED859AF12FDE399B3F40F2E1101E9D305C71AF31DC92C9CF8BA4F7D19B16AB07B20DC05D53744ABD404B0D077CB020D85DF257FE05658A2743BEECFA5FF26669245CE4FEE63619E39194FB8996C3535370AC60D00E7A9CB0E669BB3A73B71D4327337AA7CC571E114498C83D910047CC47D8FCC7D02F336B3CDED7070D0E37F2DC7DA9C5BD37B36C5614C570898300D7EA02C5138FE3F3CA8A51156CE1E5D80E2FBFFE3CCB683BA7E7B1025B187A73F478B13B6AE19B5D8861DD4F17BE47ED
	62F9817D704DFE7539E168326D0645817C10A05B1FF31F6207F126BF995879602B6D6877167BB016EF2AA667C3FA67249DD471322E9EDBD90FE4A39BE80BE421239F0BF1D667BF282FC8DDA36F4333452CF452AF43A0BD9BA881081DF3149C4E164BE64E08B256823131234D2B9EBBFCB3587EE6ACFC32717E27073742675007F5EC0B70CDABD85BE986EF746FEFF2EBE55991FF3ECE28393CDA774CF36432778C13E6486732B3947F36C8FFB2D801180D73380DA591D146768834B1FF3D5A46E040430062A25046
	234D24AF8CF1ADA41F9F4D7882E5A6C1FD6577234CE50734B23BA1EF547D589E173FC43E31004D66FCFFD827ED8F421773G72EDEBC33E0D0035BD00FC89E6B55F188798DF6883E8634F5A065B0ECC6E9BDCEEA4541979A04AF518746C2CFD90651E7CEA783E3D63AB14E9067AC6F119593A3E8DFF90779EA7362A472E30584A00E3576C87D9AC4DFBD0BBF60525113E159999E5AC0C4431EB1BE139EA6CBA822305455985B3A25F5F99084DB07749692729DCBA7789F85672F6BA513D9C6AB481D901FA01C2388C
	FB6A00E7467BFC7D1C99A7358F656CB7B4927764CF76B9370D0CD44EA162A27B1EC930F355EF68F81394494ED5B3B87EE30A67C4A9B8EB53E594A76992489B9505724B8EEB65A7C4794B4C1E691FE6FCB5FD784AB469F28D9F9B17F69FA77E26E32FAA942B2B8F62D6C49EE32F7312B8D88954B8934FBB0FE61039F6822427814582A583954D02358AD07BACEC4BBBD37566A17F368CB489A9E7DE4C4ED706699F21F9A07F844D52734F7BA5057A7E616BFE36E63BABDD3DE68B1E45660FD0780C1C054F461A5793
	9F12731578D9585ED1DF8C4F1EA77A70E96DB1C57B73B1BDCB6CFAFADA212CAF9A755CFF88759C9D0DFA7E704B6169F9DD9FBE2D1E099ABD198EF356E13CE5BF04BA6CE89B1E8E877A70E9F5F0BF245776DD76C0FDC35E8E4B3AFEF80C68CA465C11DC573707296B622F8652B56CA1BDFF0DB3E11B4D66BA047529EBF0BABCB0208EB58F6B69D04F63467CB00E9157E592EC8A2427BD0C63C1FE9AA90373C70B4B6614841CBB6ECEA37BA4174756E5F3A2F69F45BADC9EFAD04730F4E360B344EC237E99628A237E
	99E23E317FF376A2E320B3C6F6A63E4CC2EC1C8D76A582B16CCD3AA64DFC84664DC790FBB815E03510EEFD845B6887F49E6805F488D0A847FF4A562F91EC4FC666F5062FCC9F681C1B5455DFFE08AABF74913D76AF9BD046C06766691ABA55F96BA87F74D54B284F3DDE51CB87FF323217731E15D68ABAE7306488D1161DAB08073364B27BA4D77D962EFB30D7CF7798594E8479B3ED36E2F7BEFCAF852A1D6D6F8BB3243B01FA01C64BF972F3170C4031E74D500F3DB399A4663D2E9ECF07280D2F2FB372F91EB2
	73B5C9220318AC1FB3D0FE496269927B4467D5141F6585627F5F9901E21879F3D3335A1FDB859C83DF5DC46A56998369860C757B3752B3E57F0F1B0D7B2FC574ACAA865209C0590FE27C1A577797DB9B9F75EF03AAB9ED024FF6CD1E8469119A0C591279255A96320EE4FA365BD14F10C7D14F8905C44FE8C84F83CAFB8C757C6CD0FFFA96BE66AF37DCCEB740E72BA64F8E69204774748C755333024770D36B74E40F116B98AFFF062A6A0C046FF1C0C99AB9590F43FA8C28822871F11647E43B5B5432AB396C52
	E3B87637C1F977631A6739108EFEDC4F160A2F5475ED67757DD73F4F65A6E86A8A13535170992F49CB06F4CE0C1E6CB77CE4FF4AE5B7765B069BB5F5D549E993FC36EB72A4C80F54E02CDF85E712F53D0F27C3E87A826FBFE29D6527FDF31F53AACFF66C3C6983BAEFECCB93042BD250169C83196B6C168B2E9EA817798F3A3EB0601AAD84F41884948314904356EECC4EAD6749F9CC274762006EF954ADF688F1147745D464ED013495E88450B82070FF605E742F4748D9D4939946EC1D7231BFBBDFE1790CF41E
	A8497937B713338D98F9BAEDDDBD9E953BBCBF5EC1778E25F3E0DFB0876742E609E0AD106E66D8F7B141FAA19D4C31E9941BB0076D1F98768C45268196474B15B9891684694CA7903BF7973D0F8169F20EDD6AA1D88D244D9C0BA9A2D877934C178CDBD004F37548A7F0CCD8182EDE974D86FC5E93CACC88310176065F5231B0AF16591045711FD03CDC05333DE18E45C95A84F993E3D14FF36B51E7F9F3911B5FCC3092C857F06C539674CF8B470475689FAB47F2FDE8230FE3699F22FF264DC53BC53B5A6E9840
	9366AA3626BD9948EE73BAE2C77E134C3E159C6F2238C905B33BEF25E3B1C987C1DE69D3281363905ABD1BE33B8A506EF99C3B2AG6D9662907B4604F667F16C78EE343B04E35B8F215DBE0E252F47389D4531CE5E86419C7B75E10C5B899C5B565CB7EE8FB623FEE13C5C865EAE519C9B6F6E9B37D1EE54AF1E17BBD85CB7EEAD45E8DBB2AFD7CF77A72627212FBD4DFD457A9A24C7BF6D5F57886FD80EF51A8916G694CE7901BC1FDDA88698A0E15D35FB7C23A0DE397A8660674A80E1D253CE3A1BD11E3B53C
	BD42B9F6A7AD1777AC444133081D21EDD48B69D60E7D064A30C3BA08E3AFD0EC8C24A7F22C0156978E69E80E7DFC974A0D675884DA2EAA9E7ACEBC1EB5B69B702E2B953010F89CF337347B1D8D1013436A6A839E1BF52F254BC4C7F0366E38111E7F937E68F8DCF75CCD6B4CFEAE4A38912866B9BC3373FD00676C93FEFF1DE08AEA563D1F9BEB5EEEB0BFA75FBBFECEB933CB64676C39E9A8F392644FFB0EE0F5E96A73C2B2F63FE1E0FBBB166F754BA76B45E2C11D7FBB3FFC226FE7296A7CC77C72090FBE1479
	19EDB35EC75B12E77CDA30CF5E95706EF145734C26D679D3C8BB19127D56FC831BEF223C64591A840B6CA94F93394F5279E5B4FC8FF99E6734B915E4BEF4D8FCB6C70F03DE52E0E5FDF45EC9066F19AFE0594B45C48FF698CC0E28ACCEAB24D97960E22C3B0217FF0216BF6DA28FD2DBACB0210BD681676F159DA44F6D91BBC50FC734326BA1F2DD4BB65231836AE963F5551590DBBADDCE591693F49E9B8979E3F819B93B0C54968F5D93073FC06E515713C719324C2BD6D3DBEDCE0D2D6368DC17B98F463EF9D8
	572BC5E4AE6F068D76C510E9315759EDDDCE720CC9E81FC7F8D63C5720539E6A184910BF8955828F21E2399D4D705DA2FFE77DE915115E1384BCF49E7631209D840B05F4A24796D6E3DF4CFF91671D91A94448EEC80FG8A811A44732E25F91110CEG4A194F1ED9323CD5A95AF59F61236BD7786CFE316FFC95220385A2A6E3F39F99F8BFD1FEBE2B4BB7D8992C7DFEC56706F2302DE6BE36DFFA8B292743E56FF1B83DF239C2BA5F3FCB628E4AB12C1DE2C1109E4531CD343EA9108E87E26D7D112F3F76CED759
	C3A8897832DF0AB22E1471A278FE0B5C5ECCC699DDBF1482DE759236ED2F9DE3404A31CDFBB086C6F26C3735988393DE42367CE2DD89692F10AECA00BD8C109DE89450C420C820C4203C17C15E4B486320BCB972736496405DAF33E75523DFE64F0EA73E4C1E8DC7F21EA905E3E51BC93DE87FA8396E25AA9D34BECA544188C5EAF03BCE39C68DD675F27FF1A86F8F392E6ABB020B8536CE47FE2A3D8F0BE33ADE3D5A7BFED981E42B53AB879543B750B9BB816CCAFE99633033G63357C95447EAF45EAA1ED6258
	6F69DC6C037408D7B0DE9D3B87932F9833D3DED146A702C5C07AEB3FF8BDC5751B8DF89C909BDBBB091B647C1F52BE1373EA143170D5546BBE3A5EEB043419E3DE3A3613A09D44314FA86F84126658DBF49D978F6944D751A6DF71C0E32EFA5C550E39C509D1C6EF0AF20FB4D77862D860B948CB57022540D31508E3CAF0B119DF58FC86FC09245C4D45E4DE32A6220ECF742BA35EA1C53FCFCA74777B34C4456FCC66B7E67DB96BFA3A5E0C067231DC3F08C27D39BC1146C776EBB0E73C06E58F94749D9FCF72F8
	B371F2B718827B082DA95B20ECB7AF5FD860BFCF0F213247C07E585750C7C7870C4DAC150F22DF7377D17CEBDA9FEDA95477D19C151D88650557D13FAF827868BA9A5F25D02E0A171D2A6323C86EA3BBAF17540F0F728A697E814A0E64650FEBFC6420FACE027C305751C7376E9A48C70BD5B11F783A3F0FB25F08B2AED838F021AA0E8A74FD74905BBFC07922B7F00CBFE6985EFBC49D43648B99B29F5B9F5F18CA7747EF303DE38A4747D23CD5054BF7AF147D8964CDFB831F3DB42DA0E7BF25C9B08F82358379
	000201A6A561331877324A05811E4D1ADDEE13F8CE342B9E0DB07B72530677FE555FB2F09FB0690E1F8BD3FE74F6CA203BC4531258FC98AFFF869BCE2610CF79DED5AE31AF7FCD184B01DA015CC0A300C25EC47B242CD2E69F3976D4A7C9160EEEFA238A0DA3171C94189C1C31B92007CCEFF20CB5CAE42D39C1BEG13AFE9EEE0360CBD2F3EE3D135E8E740BB96935FE4B6044B1F764A13A9CCD64DEAC556D745248FBA4573C57CB2CA038DD4A3AF9F15EC593A2534E86B76CDF2593F956B69456ABC152F54D96C
	9CCC1D0C6F5BF58A5F1D3BB6E87976C367AE59E035D96C2E2E8D25C56525C5DBAAB6E13BBE78255A97B9BFFB5F1092409749328FB25FD2762ECC7EB36B9579D1C503517BDD012DFBB285659F2BAB2BC860B1B7B79BE32E700FE30406C75ECEA98E20DB0D2C53A815EE9327AFCFE5BAFDE2D44F156CFC364108E72C61409383143FA04AD83A005D2FE2FCB76E68FB2E7B679D485730001D6B364127DB66E363652A1D03D99BA00D845E1085EC3C246F83437797E13C44B1B5D7B0EC244FE7AF38155B78BC0F790A64
	19AC27697B45EA1CBCCB5262CBE4DCDD973B1BF4F70A7AACA0D436A9F6815EDD0A2E504BCF647921CE3D7C4CE4DC23053E2744495C668F82474956AD951FD6D4ED5BDE71A904CB79A6645956E2004FAD1598ABCFECD06AFBEDDDFFF137EDAB2B08715D702142E7743D2F5FDF3C962757ABFAEC1D2AAE23933789FB8247725492657B331B9419FB3C035115455B6F785D0F42E49627957059184C1EAF33B2C776E01976E49613BE789CA517E1B1F9C76DC0B1295EB30E835EA949CACCC6A433181C8B04F1C45E7F54
	FF93826DAC68DDCB4B84FAB3814BDD3DE435EEB996392C0C67A33240D73F89629F57CB2DABB579FD7BCA833D4FF910B22A5FC6407C4E8CE2137E9B8BD866EC25D2077A6D81FE2EE3762FC32FCC6D45ECDE47A11B5DEE734A7DEB03367F10761B1D0C7D6BEC1EDE7EBC1E7FCA01DE3E70B66687696667717C6505FA79A5EFE37FDD733192436585C36F3F5F9478775F1AD225BE0F293FBED1D92E6E3F3FADD3781AF67F2B7D1755F94FE6252FBED72E547FD0C1FFFA157B69153DD5613B61F03F73E005FA7E5E3CCD
	617B381944798639E39549BDEB83576D2B8A256C6A750317E17AD4618BF18FF60D40F8AFD6A93CD37B9DE77DE50E5F21787461EA250EF37D2E17E8DBD762FA69EEB284496B01DD22FA2DD2FEA91D1EAD6B2E875E161F8B3F2D2C5B8237FDC40D2267CB3B94BDEF5FB0E05BD7222D2B76A8FC4543689BBD1A3E3123D6292FFD88FD63AFFB953E4D7FC3FDA32EDE71CF46BE257E0EA1740D327D8A5F7543704F339A7F7C7300D25F0EA1786756C38A5FB53B7EE77C93FBD871CFEA0BD2FF62207C4376E53FA0AC7277
	5F2B3EC79906730E7450763C4FDFD199ECCFF7E4C5607BD71F2F503FFFF5EA057E5DBFF1C57F6F8FBBD684FEFFD8DA21FEFF186DC9E73510F92F97460AE020D020C8203837F1BFEA48A563A579B50C3EFB51FD56AEF27F0B7C820604721F4E8DEC6B3C5C01FFB76335DC724E50E917A4399C24FE449764127612DCEE8AB2CC48A3BE72583A3AA5D6D4460DF974992B58C9E1E6E742BFE96C3E93E5ACFC87ED3BE3A519540FDB4E74FD538840960F4BADFA248B8C25EF5749BEFB7D0840E55D356E7DC0F500078EC2
	6CB71FBEA3F6C8E6CB977779FBE6329E2D81BDDA01FA0146G0D878A830A860A87CA864ADB887BB220DAA0B3D0B7108FE894505805E8476122CD7D58A1BF60258D6531303B2B6C9CE6C3867E964BA428EB5EC2FCCE7C57C5E491B028771B4CB649AE6E253BCB769C77CC863E5B34D118A9BFBB3E3F0A48E9A3E920D104287C07F760B950B840E200D89D6B2B71D9F0DE8A56E12A26E7CC10368275828DEEBF0263D466F1C160F784BB835C91242BD226C3F28A5E119E1302FAAD2E447B42919CFB5509D839816D3A
	5F0EFE9D83D804814B2EF420EF52D2512EF33BC9599AC81B016C29D84745BD681B91000526E29DF76DC15FA472BA92E8595234194686203634217A666393A4A55BD80CF78E25B414791BBC34F18247B695A216130E586D8508C99CEB6465E68346627F2993645C3546B8D30E5FB5BBB774933F649D0B23B05CB93B304FBD5E92F80CF932E560B166857A2CD10431011C9DB0AC21055E636E6C740AFCACFB2DA507E3CDDE584D584876CC4E7BA7995F79B84C06877C8D07FF12B1157C66822CA9ED9769260ED94072
	AB4D01752FB18F2C7FBE337E987919396F9859E2569FA30F1B55E3A4433EB413586C0271221517EB6758679C93E91D84BBE133CA5D9CBFCB75A2F823C884727B42D42F7394EB455FC2D2E11F4B58A5B3E983B0395B456F4D87196999BD6C94657712E9991B931A047B6347D4C71B5B22527B9A0EFDAE60DCDF12B15079EF8B44E45FB54276817956EB520C4FC5796C1ABA83D19014E36766F5F4DC9C83E97F737403949F2B4259D8B12B8A470A89101713B1D3FEFE9033E3F84F811E9FA6DFF175701E9F045131DD
	4A505ABB1D62C199DAFB0FD4233D23A0AF015B1B421FDF18B3E79A3BB3195FFB654F5119FD5B017165D46A2D81474965276870910AGBCD6131788694CAC3D98CAF26A49A8144B16E7694BE8G3CD513E707F4102E0CD9766145775C81797463FB2D03700D89203B1646E7E1FCBFCF673C50ACEDFB3FCA71E9D95A766E5D0D6D9D8DF9D50B303D03768CAFCE2F99A65F3DC366E3F6D9EB097EA10B3476BAA8BEFE11565E57795CBF89727297233DB945EA793D0B653816BF47AD8E945FFF48530B3DA9F279889DBE
	C23100A7EA72B233E79A8B3375E2282CD0CFC639DC36A1DBDFC6AB60F6CDDE902447684A88AD5013B1DEAE9B9AC0C6A460F11A3CA4C8E7AF5113F1C8570EA239EC4592FD990D0037E9725C109E2141585C746C89B207F965B58DFB07A8AC172C11ECCE3B4DA95633DF889470CE5A0F681ABA986A1A884430E3D574FEA8C9AF4178B8C04F1C5877965577C72B2E7CBE7A156FC046BD550ACD8F2A3E37D6DFF959DFDFD1992CCD73693D5BB8E84FA45E4E7752F7703217C23FDB0A5813F46DD68E69DA0E9DB806F751
	CC9C5BCA77ABA1101E4031FBAB71BEF898475EB90D773C23B976D1895E730E67D824075F5566581955F84F5B348C3135AE145B4E31BF3AD02E44316CF7D16EC80EFD580CF2C3B836268E65CE64185402F2059C4436B8301F64F1ACF5B77613129C6CA7893B1558F9D3757DFF6D3E72F174736FC04619DA45A62F6AFB721EABAFFBE56D156FA79F52BDEA8534E783EF67B45A762D106E66184D01F1A3F1ECFA9E46E6B847BEDA093199493186BB46E69C479EAB4258CC625807B614113D9C3136BA0C4DB60E3550FD
	309B52C19C1BDC086FA50C6258E5933E03B016E3DB8A709D04C99C6BF5215CE99CDBDB086FA0642FC0EC8E65AD05F48D476A8B713D04C60E4DB561BB88ED9C5BD3006FA038B9760D93650E60983B9FC95EC10866180B4A0807F4924722A916168BE3D9AEE2D6AA379C52A60E9D217535C35A4D31DFAAF2B9361B56978D69F9C06C5C799774FDD6099CCB1173EC816FFFCD26F328108773FE9E1635D725E3D901BFD7A75BC5FC06C05FEDF339ADDF133DBD2BE7BF9D23C9FE8D2FE7CE2A7FBD32C4BAE61BA03F1517
	F9530C6FGB0B906AF099C76FC7A6431016E18296FCC107B4CF827192E99C146D47832096B5DD4697F3E41A9BA6687C339F1C08CFB1DE2E1100E60D8D9870DEFC8272DC46C841D874AA1DD834474FD56B314BB9EDAFD6DAB1575AE13F1931DC3FC000F60F26BE9FCCF04F4A84722A9B69B52F19C2B24F3C84EAA0829D5083550B924915266D528F3F95DD06EGE8F59E31CA2B73AF687CB39A7090AE778BBA5ECC03F4B490EB67775B14F85ADD6C9FA7E6BA0E252D06BD7BEA0C138207FF1CB4FE2544C91063DFF9
	5721F635E2832B7B6CC9015BF3140E01A6A8533A9A6DF150B1F08424C7F3AC75BD0205C2FA5AEA746DEE5BD0FC2B55AB896A5963675B9F5271B3AD9F7C120FFE69AA74774BB527945D6368B8D083E59B73D14F1B6938A2C1BA08E36CDE6D84124EC75D2FF38D24FBD6BF3A4767EBF5EF223AA482AE2CC15DDFAB70577D16F6C5F78FADDF8AE52B56201E4B699DD8AB245D9C33D35DC3A0BDFE8D6ABE46B9106E0B7B51FD769A2D6E57D399F100A7F05DFF2471FB34C5096797825C61CD253F05D2389656DCEB311E
	CB7D5C4DE5F7134DD0361D1737E96E66DE263A0D027C6035E87F64FE6D4F98407EE9D04F35FEF7F30F85383F6CE0738C140FDD0B7DFA27D571C3D355E06F9448F7A68D54271E9E1155955E2954751079437E6AAABB6D32DB2142AD2CC2467F8AF934044F4EEDCADDE115448F9B58BD4BA2F256DD3D814B351DD14A3DFAFA3DD626722C36EA9B085A4E6FC3DCBE2B703DDBB2F83E179D8ADF38E7E8F7B0BEF2A976353A15FAFE659C3C7CCBDFABFC63DCEA3F107B000ADFFE69D14A253C5BDF7D1F7A555F152B7095
	B68F1E6F39D58A5F123A2179E5F53E62174C35CABD8B568DDE3E35D061FBE35077E7996F8C555D57A47B50F8673F2B683EDCF5B7F2073D3FFB83DB36B26599DF056A8E64037D5E3D75678B5D28709558062677936FABFA9BD4F7A9DF69779E063F7C77CB94BEE988FC0D2AFB149F74FB3F421F6FE6555DB537EBE8767E23D431F7F119D2CF4B9074AE5B2C70BDBC843EB655DD340AA1587BF755DD342F1DC3337719ED0A3DD915CABDAF8DC16F526D8A5F61A170B52B6E299D98023DF756A9FC7FE708764E592B58
	1B5D2054F3F0D0FA333F2BF5D3658FF2E0DD7522106E75884BF879A67A10AE765C366A5427FE1BEA90521A84A3FBE859A42411A70FCDC2BAFDB059A424CAAE370F0C6C86B5C9C28E3EABA05F8974CA42D27F5787C0620A3E9A56DD7368A393CEB564998483886D961914747364F1A515C3C64B8B5E2F05EF694F9E3314C7D86267333BFFDD79CC441C635ED44158A42CA1CB91F645969686D6726BCF721FD859AFE439492F241085839866259F69DE6902DDB489F91DC748CFB4FBA551DA074F0A410815A6A2E9B3
	39C3313951626D1608C5BBCDC21A137CB198E1854B36DB1CDD1B5903631DD46B143AF652C2F4F9A3003E39D4DFD2CB992FA5774EE56F3FF7B0EECA2AE058AFAC323BAC567D168E4965E9923224EE0F686D0685044F3D2716D614F91E2CEC68AA892AAB606693E34B48BDDE2E74D95FAFC6AD09DF329F9A466791B65312E4D5D846CBD86B3BAD9E90A5FA1AA47247EDDC1E0DBC6F2A755287779FD85DE690D2E4A3096B33FCEEC9B0F6DA9CB67B857842A214B64A92893475D81CDE72C32720D911C6B34C62824A2E
	1BDEFE7DFF3D7585952030CA423B4C15403A39CBF4B9B657F5F65A1CA22FG7C8A552F635513B2E51AB2ABFC572EBC7850425390878DC22A233C1C7E3F057E3F157C3F05A2DBA832E5ABB8B7C168771FB65F07B6536061FD08B4FF59FEE8C1693197277F66711A04F9E05DFEA11D7EB0A9B4C20ED20A5D7A7E51046B57AD9E937B9352C6EE92AABED26FF21FA64EC90A7CAB9258CB314F123E464B64DD06B53112827A9DCDE57409BF02AE6E9BC884DE866D47AF9292E085AD1DC77FDFBDE47F902EB51437001B35
	51478DA1378E488EB31F4631DA75915FBB334A94337045E032E1C973D35D6A57223D1230CCF3E75ABFFFD8064A5D714AD839432723A1790796921BD770B2645A508D3C8C9EA810B269FEE52C5F3B665E2FB437C19838393FAFE635A8E6154AE611ED36C147ACB41D0CC4E4DD3ED497053540D27F9F7C12E087ADAC717B91AFC94873FB1126083EC9D38D2CEC62AEE243A485486BADC5727BADGACA36F2A94916EA272368AA019A58E7AFA4A2661751E06AB58FBCE7BF4F5CA8920D31A3FCEB859985965ABD6B761
	39B24AF6AB21009D170E5392ACB7D58793BCB248153B23BA297F28712B475FA8328C2647047EFAABA652B3863F4C93BA297FA89303949333E593537B18B8CC3D2FE46798295FB97E2DBADD237812BCD14A13FD196967CB37CE6ABFAAA2EED42C48D0D9E19C500A7FE01BFE2D58045352775E26BFAAB61529ECCA7BBE5BB4595FA632B470DFA7D13D65F765B6DDD63FAB17744342003FF150D84A6EE735491F4A5F11F8E5A7FDE68A7824D23C273EF767A7C260F7BD0EBAACF63BE4311F2DF3DA49FB9FFBAFC82272
	DE4E9BBBC97DDEACA3E74AFFDBE7A7517B0C0A673F81D0CB8788075469D3ECA5GG8CFDGGD0CB818294G94G88G88G831842AE075469D3ECA5GG8CFDGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG26A5GGGG
**end of data**/
}



/**
 * Return the OperationStateComboBox property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getCommunicationRouteComboBox() {
	if (ivjCommunicationRouteComboBox == null) {
		try {
			ivjCommunicationRouteComboBox = new javax.swing.JComboBox();
			ivjCommunicationRouteComboBox.setName("CommunicationRouteComboBox");
			ivjCommunicationRouteComboBox.setPreferredSize(new java.awt.Dimension(150, 25));
			ivjCommunicationRouteComboBox.setMinimumSize(new java.awt.Dimension(100, 25));
			// user code begin {1}         
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCommunicationRouteComboBox;
}

/**
 * Return the OperationalStateLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getCommunicationRouteLabel() {
	if (ivjCommunicationRouteLabel == null) {
		try {
			ivjCommunicationRouteLabel = new javax.swing.JLabel();
			ivjCommunicationRouteLabel.setName("CommunicationRouteLabel");
			ivjCommunicationRouteLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjCommunicationRouteLabel.setText("Communication Route:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCommunicationRouteLabel;
}

/**
 * Return the ConfigurationPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getConfigurationPanel() {
	if (ivjConfigurationPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder1.setTitle("Configuration");
			ivjConfigurationPanel = new javax.swing.JPanel();
			ivjConfigurationPanel.setName("ConfigurationPanel");
			ivjConfigurationPanel.setBorder(ivjLocalBorder1);
			ivjConfigurationPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsControlInhibitCheckBox = new java.awt.GridBagConstraints();
			constraintsControlInhibitCheckBox.gridx = 1; constraintsControlInhibitCheckBox.gridy = 1;
			constraintsControlInhibitCheckBox.gridwidth = 3;
			constraintsControlInhibitCheckBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsControlInhibitCheckBox.ipadx = 185;
			constraintsControlInhibitCheckBox.insets = new java.awt.Insets(18, 20, 4, 35);
			getConfigurationPanel().add(getControlInhibitCheckBox(), constraintsControlInhibitCheckBox);

			java.awt.GridBagConstraints constraintsCommunicationRouteComboBox = new java.awt.GridBagConstraints();
			constraintsCommunicationRouteComboBox.gridx = 2; constraintsCommunicationRouteComboBox.gridy = 3;
			constraintsCommunicationRouteComboBox.gridwidth = 2;
			constraintsCommunicationRouteComboBox.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsCommunicationRouteComboBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsCommunicationRouteComboBox.weightx = 1.0;
			constraintsCommunicationRouteComboBox.ipadx = 56;
			constraintsCommunicationRouteComboBox.insets = new java.awt.Insets(5, 5, 3, 35);
			getConfigurationPanel().add(getCommunicationRouteComboBox(), constraintsCommunicationRouteComboBox);

			java.awt.GridBagConstraints constraintsCommunicationRouteLabel = new java.awt.GridBagConstraints();
			constraintsCommunicationRouteLabel.gridx = 1; constraintsCommunicationRouteLabel.gridy = 3;
			constraintsCommunicationRouteLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsCommunicationRouteLabel.insets = new java.awt.Insets(8, 20, 6, 5);
			getConfigurationPanel().add(getCommunicationRouteLabel(), constraintsCommunicationRouteLabel);

			java.awt.GridBagConstraints constraintsSerialNumberLabel = new java.awt.GridBagConstraints();
			constraintsSerialNumberLabel.gridx = 1; constraintsSerialNumberLabel.gridy = 2;
			constraintsSerialNumberLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsSerialNumberLabel.ipadx = 31;
			constraintsSerialNumberLabel.insets = new java.awt.Insets(6, 20, 7, 5);
			getConfigurationPanel().add(getSerialNumberLabel(), constraintsSerialNumberLabel);

			java.awt.GridBagConstraints constraintsSerialNumberTextField = new java.awt.GridBagConstraints();
			constraintsSerialNumberTextField.gridx = 2; constraintsSerialNumberTextField.gridy = 2;
			constraintsSerialNumberTextField.gridwidth = 2;
			constraintsSerialNumberTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsSerialNumberTextField.anchor = java.awt.GridBagConstraints.WEST;
			constraintsSerialNumberTextField.weightx = 1.0;
			constraintsSerialNumberTextField.ipadx = 56;
			constraintsSerialNumberTextField.insets = new java.awt.Insets(4, 5, 5, 35);
			getConfigurationPanel().add(getSerialNumberTextField(), constraintsSerialNumberTextField);

			java.awt.GridBagConstraints constraintsJLabelSlaveAddress = new java.awt.GridBagConstraints();
			constraintsJLabelSlaveAddress.gridx = 1; constraintsJLabelSlaveAddress.gridy = 4;
			constraintsJLabelSlaveAddress.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelSlaveAddress.ipadx = 31;
			constraintsJLabelSlaveAddress.insets = new java.awt.Insets(6, 20, 4, 5);
			getConfigurationPanel().add(getJLabelSlaveAddress(), constraintsJLabelSlaveAddress);

			java.awt.GridBagConstraints constraintsJTextFieldSlaveAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldSlaveAddress.gridx = 2; constraintsJTextFieldSlaveAddress.gridy = 4;
			constraintsJTextFieldSlaveAddress.gridwidth = 2;
			constraintsJTextFieldSlaveAddress.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldSlaveAddress.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldSlaveAddress.weightx = 1.0;
			constraintsJTextFieldSlaveAddress.ipadx = 56;
			constraintsJTextFieldSlaveAddress.insets = new java.awt.Insets(4, 5, 2, 35);
			getConfigurationPanel().add(getJTextFieldSlaveAddress(), constraintsJTextFieldSlaveAddress);

			java.awt.GridBagConstraints constraintsJLabelPostCommWait = new java.awt.GridBagConstraints();
			constraintsJLabelPostCommWait.gridx = 1; constraintsJLabelPostCommWait.gridy = 5;
			constraintsJLabelPostCommWait.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelPostCommWait.ipadx = 31;
			constraintsJLabelPostCommWait.insets = new java.awt.Insets(4, 20, 46, 5);
			getConfigurationPanel().add(getJLabelPostCommWait(), constraintsJLabelPostCommWait);

			java.awt.GridBagConstraints constraintsJTextFieldPostCommWait = new java.awt.GridBagConstraints();
			constraintsJTextFieldPostCommWait.gridx = 2; constraintsJTextFieldPostCommWait.gridy = 5;
			constraintsJTextFieldPostCommWait.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldPostCommWait.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldPostCommWait.weightx = 1.0;
			constraintsJTextFieldPostCommWait.ipadx = -3;
			constraintsJTextFieldPostCommWait.insets = new java.awt.Insets(2, 5, 44, 1);
			getConfigurationPanel().add(getJTextFieldPostCommWait(), constraintsJTextFieldPostCommWait);

			java.awt.GridBagConstraints constraintsJLabelMillis = new java.awt.GridBagConstraints();
			constraintsJLabelMillis.gridx = 3; constraintsJLabelMillis.gridy = 5;
			constraintsJLabelMillis.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelMillis.ipadx = -56;
			constraintsJLabelMillis.insets = new java.awt.Insets(4, 2, 46, 35);
			getConfigurationPanel().add(getJLabelMillis(), constraintsJLabelMillis);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjConfigurationPanel;
}



/**
 * Return the ControlInhibitCheckBox property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getControlInhibitCheckBox() {
	if (ivjControlInhibitCheckBox == null) {
		try {
			ivjControlInhibitCheckBox = new javax.swing.JCheckBox();
			ivjControlInhibitCheckBox.setName("ControlInhibitCheckBox");
			ivjControlInhibitCheckBox.setText("Disable Controls");
			ivjControlInhibitCheckBox.setMaximumSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setActionCommand("Control Inhibit");
			ivjControlInhibitCheckBox.setBorderPainted(false);
			ivjControlInhibitCheckBox.setPreferredSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setFont(new java.awt.Font("dialog", 0, 14));
			ivjControlInhibitCheckBox.setMargin(new java.awt.Insets(2, 2, 2, 2));
			ivjControlInhibitCheckBox.setMinimumSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setHorizontalAlignment(2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjControlInhibitCheckBox;
}

/**
 * Return the DisableFlagCheckBox property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getDisableFlagCheckBox() {
	if (ivjDisableFlagCheckBox == null) {
		try {
			ivjDisableFlagCheckBox = new javax.swing.JCheckBox();
			ivjDisableFlagCheckBox.setName("DisableFlagCheckBox");
			ivjDisableFlagCheckBox.setText("Disable Device");
			ivjDisableFlagCheckBox.setMaximumSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setActionCommand("Disable Device");
			ivjDisableFlagCheckBox.setBorderPainted(false);
			ivjDisableFlagCheckBox.setPreferredSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setFont(new java.awt.Font("dialog", 0, 14));
			ivjDisableFlagCheckBox.setMargin(new java.awt.Insets(2, 2, 2, 2));
			ivjDisableFlagCheckBox.setMinimumSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setHorizontalAlignment(2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDisableFlagCheckBox;
}

/**
 * Return the IdentificationPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getIdentificationPanel() {
	if (ivjIdentificationPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder.setTitle("Identification");
			ivjIdentificationPanel = new javax.swing.JPanel();
			ivjIdentificationPanel.setName("IdentificationPanel");
			ivjIdentificationPanel.setBorder(ivjLocalBorder);
			ivjIdentificationPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsTypeTextField = new java.awt.GridBagConstraints();
			constraintsTypeTextField.gridx = 2; constraintsTypeTextField.gridy = 1;
			constraintsTypeTextField.ipadx = 220;
			constraintsTypeTextField.ipady = 20;
			constraintsTypeTextField.insets = new java.awt.Insets(3, 5, 3, 24);
			getIdentificationPanel().add(getTypeTextField(), constraintsTypeTextField);

			java.awt.GridBagConstraints constraintsTypeLabel = new java.awt.GridBagConstraints();
			constraintsTypeLabel.gridx = 1; constraintsTypeLabel.gridy = 1;
			constraintsTypeLabel.insets = new java.awt.Insets(3, 23, 3, 9);
			getIdentificationPanel().add(getTypeLabel(), constraintsTypeLabel);

			java.awt.GridBagConstraints constraintsNameLabel = new java.awt.GridBagConstraints();
			constraintsNameLabel.gridx = 1; constraintsNameLabel.gridy = 2;
			constraintsNameLabel.insets = new java.awt.Insets(3, 23, 12, 5);
			getIdentificationPanel().add(getNameLabel(), constraintsNameLabel);

			java.awt.GridBagConstraints constraintsNameTextField = new java.awt.GridBagConstraints();
			constraintsNameTextField.gridx = 2; constraintsNameTextField.gridy = 2;
			constraintsNameTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsNameTextField.weightx = 1.0;
			constraintsNameTextField.ipadx = 88;
			constraintsNameTextField.insets = new java.awt.Insets(3, 5, 10, 24);
			getIdentificationPanel().add(getNameTextField(), constraintsNameTextField);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjIdentificationPanel;
}

/**
 * Return the JLabelMillis property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelMillis() {
	if (ivjJLabelMillis == null) {
		try {
			ivjJLabelMillis = new javax.swing.JLabel();
			ivjJLabelMillis.setName("JLabelMillis");
			ivjJLabelMillis.setText("(millis)");
			ivjJLabelMillis.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjJLabelMillis.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjJLabelMillis.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelMillis.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelMillis;
}

/**
 * Return the JLabelPostCommWait property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPostCommWait() {
	if (ivjJLabelPostCommWait == null) {
		try {
			ivjJLabelPostCommWait = new javax.swing.JLabel();
			ivjJLabelPostCommWait.setName("JLabelPostCommWait");
			ivjJLabelPostCommWait.setText("Post Comm Wait:");
			ivjJLabelPostCommWait.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjJLabelPostCommWait.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjJLabelPostCommWait.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelPostCommWait.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPostCommWait;
}

/**
 * Return the JLabelSlaveAddress property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSlaveAddress() {
	if (ivjJLabelSlaveAddress == null) {
		try {
			ivjJLabelSlaveAddress = new javax.swing.JLabel();
			ivjJLabelSlaveAddress.setName("JLabelSlaveAddress");
			ivjJLabelSlaveAddress.setText("Slave Address:");
			ivjJLabelSlaveAddress.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjJLabelSlaveAddress.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjJLabelSlaveAddress.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelSlaveAddress.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSlaveAddress;
}

/**
 * Return the JTextFieldPostCommWait property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldPostCommWait() {
	if (ivjJTextFieldPostCommWait == null) {
		try {
			ivjJTextFieldPostCommWait = new javax.swing.JTextField();
			ivjJTextFieldPostCommWait.setName("JTextFieldPostCommWait");
			ivjJTextFieldPostCommWait.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjJTextFieldPostCommWait.setColumns(15);
			ivjJTextFieldPostCommWait.setPreferredSize(new java.awt.Dimension(150, 20));
			ivjJTextFieldPostCommWait.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjJTextFieldPostCommWait.setMinimumSize(new java.awt.Dimension(100, 20));
			// user code begin {1}
         
         ivjJTextFieldPostCommWait.setDocument( new com.cannontech.common.gui.unchanging.LongRangeDocument(-99999999, 99999999) );
         
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldPostCommWait;
}

/**
 * Return the JTextFieldSlaveAddress property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldSlaveAddress() {
	if (ivjJTextFieldSlaveAddress == null) {
		try {
			ivjJTextFieldSlaveAddress = new javax.swing.JTextField();
			ivjJTextFieldSlaveAddress.setName("JTextFieldSlaveAddress");
			ivjJTextFieldSlaveAddress.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjJTextFieldSlaveAddress.setColumns(15);
			ivjJTextFieldSlaveAddress.setPreferredSize(new java.awt.Dimension(150, 20));
			ivjJTextFieldSlaveAddress.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjJTextFieldSlaveAddress.setMinimumSize(new java.awt.Dimension(100, 20));
			// user code begin {1}
         
         ivjJTextFieldSlaveAddress.setDocument( new com.cannontech.common.gui.unchanging.LongRangeDocument(-999999999, 999999999) );
         
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldSlaveAddress;
}

/**
 * Return the NameLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getNameLabel() {
	if (ivjNameLabel == null) {
		try {
			ivjNameLabel = new javax.swing.JLabel();
			ivjNameLabel.setName("NameLabel");
			ivjNameLabel.setText("Device Name:");
			ivjNameLabel.setMaximumSize(new java.awt.Dimension(87, 16));
			ivjNameLabel.setPreferredSize(new java.awt.Dimension(87, 16));
			ivjNameLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjNameLabel.setMinimumSize(new java.awt.Dimension(87, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameLabel;
}


/**
 * Return the NameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getNameTextField() {
	if (ivjNameTextField == null) {
		try {
			ivjNameTextField = new javax.swing.JTextField();
			ivjNameTextField.setName("NameTextField");
			ivjNameTextField.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjNameTextField.setColumns(15);
			ivjNameTextField.setPreferredSize(new java.awt.Dimension(132, 20));
			ivjNameTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjNameTextField.setMinimumSize(new java.awt.Dimension(132, 20));
			// user code begin {1}
			ivjNameTextField.setDocument(
					new TextFieldDocument(
						TextFieldDocument.MAX_DEVICE_NAME_LENGTH,
						TextFieldDocument.INVALID_CHARS_PAO) );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjNameTextField;
}


/**
 * Return the BankAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getSerialNumberLabel() {
	if (ivjSerialNumberLabel == null) {
		try {
			ivjSerialNumberLabel = new javax.swing.JLabel();
			ivjSerialNumberLabel.setName("SerialNumberLabel");
			ivjSerialNumberLabel.setText("Serial Number:");
			ivjSerialNumberLabel.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjSerialNumberLabel.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjSerialNumberLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjSerialNumberLabel.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSerialNumberLabel;
}

/**
 * Return the BankAddressTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getSerialNumberTextField() {
	if (ivjSerialNumberTextField == null) {
		try {
			ivjSerialNumberTextField = new javax.swing.JTextField();
			ivjSerialNumberTextField.setName("SerialNumberTextField");
			ivjSerialNumberTextField.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjSerialNumberTextField.setColumns(15);
			ivjSerialNumberTextField.setPreferredSize(new java.awt.Dimension(150, 20));
			ivjSerialNumberTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjSerialNumberTextField.setMinimumSize(new java.awt.Dimension(100, 20));
			// user code begin {1}

			ivjSerialNumberTextField.setDocument(new com.cannontech.common.gui.unchanging.LongRangeDocument(-999999999, 999999999));

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSerialNumberTextField;
}

/**
 * Return the TypeLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getTypeLabel() {
	if (ivjTypeLabel == null) {
		try {
			ivjTypeLabel = new javax.swing.JLabel();
			ivjTypeLabel.setName("TypeLabel");
			ivjTypeLabel.setText("Device Type:");
			ivjTypeLabel.setMaximumSize(new java.awt.Dimension(83, 16));
			ivjTypeLabel.setPreferredSize(new java.awt.Dimension(83, 16));
			ivjTypeLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjTypeLabel.setMinimumSize(new java.awt.Dimension(83, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTypeLabel;
}


/**
 * Return the TypeTextField property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getTypeTextField() {
	if (ivjTypeTextField == null) {
		try {
			ivjTypeTextField = new javax.swing.JLabel();
			ivjTypeTextField.setName("TypeTextField");
			ivjTypeTextField.setOpaque(true);
			ivjTypeTextField.setFont(new java.awt.Font("dialog.bold", 1, 14));
			ivjTypeTextField.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTypeTextField;
}

public com.cannontech.database.data.device.DeviceBase createNewCBC( 
         final com.cannontech.database.data.multi.MultiDBPersistent multiVal )
{
   	com.cannontech.database.data.device.DeviceBase capBankController = null;
   
   	if( getCbcType() == com.cannontech.database.data.pao.PAOGroups.CBC_FP_2800 )
      	capBankController = DeviceFactory.createDevice(com.cannontech.database.data.pao.PAOGroups.CBC_FP_2800);
   	else if( getCbcType() == com.cannontech.database.data.pao.PAOGroups.CAPBANKCONTROLLER )
      	capBankController = DeviceFactory.createDevice(com.cannontech.database.data.pao.PAOGroups.CAPBANKCONTROLLER);
   	else if( getCbcType() == com.cannontech.database.data.pao.PAOGroups.DNP_CBC_6510 )
      	capBankController = DeviceFactory.createDevice(com.cannontech.database.data.pao.PAOGroups.DNP_CBC_6510);
	else if( getCbcType() == com.cannontech.database.data.pao.PAOGroups.CBC_EXPRESSCOM )
		capBankController = DeviceFactory.createDevice(com.cannontech.database.data.pao.PAOGroups.CBC_EXPRESSCOM);
	else if( getCbcType() == com.cannontech.database.data.pao.PAOGroups.CBC_7010 )
		capBankController = DeviceFactory.createDevice(com.cannontech.database.data.pao.PAOGroups.CBC_7010);
   	else
    	throw new IllegalStateException("CBC type of: " + getCbcType() + " not found");


   //get a new PAOID for the CBC
   capBankController.setDeviceID( com.cannontech.database.db.pao.YukonPAObject.getNextYukonPAObjectID() );
   
   //add the CBC to the Multi
   multiVal.getDBPersistentVector().add(capBankController);

   //a status point is automatically added to all capbank controllers
   com.cannontech.database.data.point.PointBase newPoint =
   	CapBankController.createStatusControlPoint( 
   			capBankController.getDevice().getDeviceID().intValue() );

   multiVal.getDBPersistentVector().add(newPoint);      

   return capBankController;
}

/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param val java.lang.Object
 */
public Object getValue(Object val) 
{
   com.cannontech.database.data.device.DeviceBase capBankController = (com.cannontech.database.data.device.DeviceBase)val;
   com.cannontech.database.data.multi.MultiDBPersistent multiVal = null;
   
   if( capBankController == null )   
   {   
      multiVal = new com.cannontech.database.data.multi.MultiDBPersistent();
            
      capBankController = createNewCBC( multiVal );
   }
   
   
   Integer serialNumber = new Integer(getSerialNumberTextField().getText());
   

   if( capBankController instanceof ICapBankController )
   {
   	Integer comID = new Integer(0);
   	
      if( getCommunicationRouteComboBox().getSelectedItem() != null )
      	comID = new Integer(
      		((com.cannontech.database.data.lite.LiteYukonPAObject)
      				getCommunicationRouteComboBox().getSelectedItem()).getYukonID());

      ICapBankController cntrler = 
            (ICapBankController)capBankController;

   	cntrler.assignAddress( serialNumber );
   
  		cntrler.setCommID( comID );
  		      
      //be sure our serial number or our master address is unique
      //checkCBCSerialNumbers( serialNumber.intValue() );

		if( capBankController instanceof com.cannontech.database.data.capcontrol.CapBankController6510 )
	   {
	      
	      Integer slave = 
	            (getJTextFieldSlaveAddress().getText() == null 
	               || getJTextFieldSlaveAddress().getText().length() <= 0)
	            ? new Integer(0)
	            : new Integer(getJTextFieldSlaveAddress().getText());
	            
	      Integer postWait = 
	            (getJTextFieldPostCommWait().getText() == null
	               || getJTextFieldPostCommWait().getText().length() <= 0)
	            ? new Integer(0)
	            : new Integer(getJTextFieldPostCommWait().getText());
	
	      com.cannontech.database.data.capcontrol.CapBankController6510 tempController 
	            = (com.cannontech.database.data.capcontrol.CapBankController6510)capBankController;
	
	      tempController.getDeviceAddress().setSlaveAddress( slave );
	      tempController.getDeviceAddress().setPostCommWait( postWait );
	   }
   }   
   else
      throw new IllegalStateException("CBC class of: " + capBankController.getClass().getName() + " not found");



   /*  All the DeviceBase getters go below */
   capBankController.setPAOName( getNameTextField().getText() );

	if( getControlInhibitCheckBox().isSelected() )
		capBankController.getDevice().setControlInhibit( com.cannontech.common.util.CtiUtilities.getTrueCharacter() );
	else
		capBankController.getDevice().setControlInhibit( com.cannontech.common.util.CtiUtilities.getFalseCharacter() );
      

	if( getDisableFlagCheckBox().isSelected() )
		capBankController.setDisableFlag( com.cannontech.common.util.CtiUtilities.getTrueCharacter() );
	else
		capBankController.setDisableFlag( com.cannontech.common.util.CtiUtilities.getFalseCharacter() );
   

   if( multiVal != null )
      return multiVal;
   else
	  return val;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}


/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getDisableFlagCheckBox().addActionListener(this);
	getNameTextField().addCaretListener(this);
	getSerialNumberTextField().addCaretListener(this);
	getControlInhibitCheckBox().addActionListener(this);
	getCommunicationRouteComboBox().addActionListener(this);
	getJTextFieldSlaveAddress().addCaretListener(this);
	getJTextFieldPostCommWait().addCaretListener(this);
}



/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("DeviceMeterGroupEditorPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(421, 379);

		java.awt.GridBagConstraints constraintsIdentificationPanel = new java.awt.GridBagConstraints();
		constraintsIdentificationPanel.gridx = 1; constraintsIdentificationPanel.gridy = 1;
		constraintsIdentificationPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsIdentificationPanel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsIdentificationPanel.weightx = 1.0;
		constraintsIdentificationPanel.weighty = 1.0;
		constraintsIdentificationPanel.ipadx = -10;
		constraintsIdentificationPanel.ipady = 5;
		constraintsIdentificationPanel.insets = new java.awt.Insets(14, 21, 2, 36);
		add(getIdentificationPanel(), constraintsIdentificationPanel);

		java.awt.GridBagConstraints constraintsDisableFlagCheckBox = new java.awt.GridBagConstraints();
		constraintsDisableFlagCheckBox.gridx = 1; constraintsDisableFlagCheckBox.gridy = 3;
		constraintsDisableFlagCheckBox.anchor = java.awt.GridBagConstraints.WEST;
		constraintsDisableFlagCheckBox.ipadx = 48;
		constraintsDisableFlagCheckBox.insets = new java.awt.Insets(2, 21, 32, 231);
		add(getDisableFlagCheckBox(), constraintsDisableFlagCheckBox);

		java.awt.GridBagConstraints constraintsConfigurationPanel = new java.awt.GridBagConstraints();
		constraintsConfigurationPanel.gridx = 1; constraintsConfigurationPanel.gridy = 2;
		constraintsConfigurationPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsConfigurationPanel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsConfigurationPanel.weightx = 1.0;
		constraintsConfigurationPanel.weighty = 1.0;
		constraintsConfigurationPanel.ipadx = -10;
		constraintsConfigurationPanel.ipady = -16;
		constraintsConfigurationPanel.insets = new java.awt.Insets(2, 21, 2, 36);
		add(getConfigurationPanel(), constraintsConfigurationPanel);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}



/**
 * This method was created in VisualAge.
 * @return boolean
 */
public boolean isInputValid() 
{
	if( getSerialNumberTextField().getText() == null
		 || getSerialNumberTextField().getText().length() < 1 )
	{
		setErrorString("The " + getSerialNumberTextField().getName() + " text field must be filled in");
		return false;
	}

	String breakfastSerial = getSerialNumberTextField().getText();
		
	if(breakfastSerial.length() != 9 || !breakfastSerial.startsWith("7", 0))
	{
		setErrorString("A 7000 series CBC needs a nine digit serial number that begins with a 7");
		return false;
	}

   	if( !getJTextFieldSlaveAddress().isVisible() )
   		return checkCBCSerialNumbers(
   			Integer.parseInt(getSerialNumberTextField().getText()) );
   else
	  return true;
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		DeviceCapBankControllerEditorPanel aDeviceCapBankControllerEditorPanel;
		aDeviceCapBankControllerEditorPanel = new DeviceCapBankControllerEditorPanel();
		frame.setContentPane(aDeviceCapBankControllerEditorPanel);
		frame.setSize(aDeviceCapBankControllerEditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}

/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val) 
{
   com.cannontech.database.data.device.DeviceBase capBankController = (com.cannontech.database.data.device.DeviceBase)val;
   setCbcType( com.cannontech.database.data.pao.PAOGroups.getDeviceType(capBankController.getPAOType()) );   
   Integer comboID = new Integer(0);
   
   if( capBankController instanceof ICapBankController )
   {
      ICapBankController cntrler = 
            (ICapBankController)capBankController;

      Integer serialNumber = cntrler.copiableAddress();
      comboID = cntrler.getCommID();
   
      getSerialNumberTextField().setText( serialNumber.toString() );

	   if( capBankController instanceof com.cannontech.database.data.capcontrol.CapBankController6510 )
	   {      
	      com.cannontech.database.data.capcontrol.CapBankController6510 tempController 
	            = (com.cannontech.database.data.capcontrol.CapBankController6510)capBankController;
	
	      getSerialNumberTextField().setText( tempController.getDeviceAddress().getMasterAddress().toString() );
	      getJTextFieldSlaveAddress().setText( tempController.getDeviceAddress().getSlaveAddress().toString() );
	      getJTextFieldPostCommWait().setText( tempController.getDeviceAddress().getPostCommWait().toString() );	      
	   }
   }
   else
      throw new IllegalStateException("CBC class of: " + capBankController.getClass().getName() + " not found");



   //DeviceBase setters go below
   paoID = capBankController.getPAObjectID().intValue();
   String deviceName = capBankController.getPAOName();
   
	getNameTextField().setText( deviceName );

   //set our selected comb index   
   for( int i = 0; i < getCommunicationRouteComboBox().getItemCount(); i++ )
      if( ((com.cannontech.database.data.lite.LiteYukonPAObject)getCommunicationRouteComboBox().getItemAt(i)).getYukonID() 
           == comboID.intValue() )
      {
         getCommunicationRouteComboBox().setSelectedIndex(i);
         break;
      }
   
	if( Character.toUpperCase(capBankController.getPAODisableFlag().charValue() )
		                       == com.cannontech.common.util.CtiUtilities.getTrueCharacter().charValue() )
	{
		getDisableFlagCheckBox().doClick();
	}

   if( Character.toUpperCase(capBankController.getDevice().getControlInhibit().charValue() )
                             == com.cannontech.common.util.CtiUtilities.getTrueCharacter().charValue() )
   {
      getControlInhibitCheckBox().doClick();
   }
	
	
}

/**
 * connEtoC6:  (JTextFieldSlaveAddress.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}

 
/**
 * connEtoC7:  (JTextFieldPostCommWait.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
}