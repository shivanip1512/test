package com.cannontech.dbeditor.editor.device.capcontrol;
/**
 * This type was created in VisualAge.
 */
public class DeviceCapBankEditorPanel extends com.cannontech.common.gui.util.DataInputPanel implements java.awt.event.ActionListener, javax.swing.event.CaretListener {

   private class NewComboBoxEditor extends javax.swing.plaf.basic.BasicComboBoxEditor
   {
      public javax.swing.JTextField getJTextField()
      {
         //create this method so we don't have to cast the getEditorComponent() call
         return editor;
      }
      
   }
	private javax.swing.JLabel ivjBankAddressLabel = null;
	private javax.swing.JLabel ivjBankSizeLabel = null;
	private javax.swing.JPanel ivjConfigurationPanel = null;
	private javax.swing.JCheckBox ivjControlInhibitCheckBox = null;
	private javax.swing.JComboBox ivjControlPointComboBox = null;
	private javax.swing.JLabel ivjControlPointLabel = null;
	private javax.swing.JCheckBox ivjDisableFlagCheckBox = null;
	private javax.swing.JPanel ivjIdentificationPanel = null;
	private javax.swing.JLabel ivjTypeLabel = null;
	private javax.swing.JLabel ivjTypeTextField = null;
	private javax.swing.JComboBox ivjControlDeviceComboBox = null;
	private javax.swing.JLabel ivjControlDeviceLabel = null;
	private java.util.List points = null;
	private javax.swing.JLabel ivjJLabelKVAR = null;
	private javax.swing.JComboBox ivjJComboBankSize = null;
	private javax.swing.JComboBox ivjJComboBoxBankOperation = null;
	private javax.swing.JLabel ivjJLabelBankName = null;
	private javax.swing.JLabel ivjJLabelBankOperation = null;
	private javax.swing.JTextField ivjJTextFieldAddress = null;
	private javax.swing.JTextField ivjJTextFieldName = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public DeviceCapBankEditorPanel() {
	super();
	initialize();
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getDisableFlagCheckBox()) 
		connEtoC1(e);
	if (e.getSource() == getControlInhibitCheckBox()) 
		connEtoC4(e);
	if (e.getSource() == getControlPointComboBox()) 
		connEtoC6(e);
	if (e.getSource() == getControlDeviceComboBox()) 
		connEtoC8(e);
	if (e.getSource() == getJComboBoxBankOperation()) 
		connEtoC9(e);
	if (e.getSource() == getJComboBankSize()) 
		connEtoC5(e);
	// user code begin {2}
	// user code end
}


/**
 * Method to handle events for the CaretListener interface.
 * @param e javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void caretUpdate(javax.swing.event.CaretEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJTextFieldName()) 
		connEtoC2(e);
	if (e.getSource() == getJTextFieldAddress()) 
		connEtoC3(e);
	// user code begin {2}
	// user code end
}


/**
 * connEtoC1:  (DisableFlagCheckBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (PasswordTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceTapTerminalEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC3:  (BankAddressTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC4:  (ControlInhibitCheckBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC5:  (JComboBankSize.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC6:  (ControlPointComboBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankControllerEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC8:  (ControlDeviceComboBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		if( getControlPointComboBox().getModel().getSize() > 0 )
			getControlPointComboBox().removeAllItems();

		int deviceID = ((com.cannontech.database.data.lite.LiteYukonPAObject)getControlDeviceComboBox().getSelectedItem()).getYukonID();
		com.cannontech.database.data.lite.LitePoint litePoint = null;
		for(int i=0;i<points.size();i++)
		{
			litePoint = (com.cannontech.database.data.lite.LitePoint)points.get(i);
			if( litePoint.getPaobjectID() == deviceID &&
					litePoint.getPointType() == com.cannontech.database.data.point.PointTypes.STATUS_POINT)
			{
				getControlPointComboBox().addItem(litePoint);
			}
		}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC9:  (OperationalStateComboBox.action.actionPerformed(java.awt.event.ActionEvent) --> DeviceCapBankEditorPanel.operationalStateComboBox_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC9(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.operationalStateComboBox_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Return the BankAddressLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getBankAddressLabel() {
	if (ivjBankAddressLabel == null) {
		try {
			ivjBankAddressLabel = new javax.swing.JLabel();
			ivjBankAddressLabel.setName("BankAddressLabel");
			ivjBankAddressLabel.setText("Street Location:");
			ivjBankAddressLabel.setMaximumSize(new java.awt.Dimension(112, 16));
			ivjBankAddressLabel.setPreferredSize(new java.awt.Dimension(112, 16));
			ivjBankAddressLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjBankAddressLabel.setMinimumSize(new java.awt.Dimension(112, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjBankAddressLabel;
}


/**
 * Return the BankSizeLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getBankSizeLabel() {
	if (ivjBankSizeLabel == null) {
		try {
			ivjBankSizeLabel = new javax.swing.JLabel();
			ivjBankSizeLabel.setName("BankSizeLabel");
			ivjBankSizeLabel.setText("Bank Size:");
			ivjBankSizeLabel.setMaximumSize(new java.awt.Dimension(138, 16));
			ivjBankSizeLabel.setPreferredSize(new java.awt.Dimension(138, 16));
			ivjBankSizeLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjBankSizeLabel.setMinimumSize(new java.awt.Dimension(138, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjBankSizeLabel;
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GE606A2AEGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155DD8BDCD457192729495216F6CDEBF65D2C3BB546E4E9C373339B5A1ADD3B35A9691A465D1A7E6C46F627DB535A2D3BB1ADED4D2ECDCCF2F9238E02028693222828901167709009028E880A0A0208A9AA83F30111E1E61C39A89A547D3EF36EF76E1D614E70E852DF565F6F634E791F4777B85FF95EEFC6A9EB476C243878ACC90ACB1254FFD5F112D4F2CB12969F5A32043056F4D30A247B3793E81374
	130AC4F8F6C3DEE438A9A5C39A5E148AE98552B3EE18D25E044F19522DCDD98370A1881FD57D12E4FEFF4F6A50FC2E0D921F94165EBAE80667C6209140E6812DCCC77EC50359AA3E90529B554FC8F17112941D01E51A1B32F5F8E186AF978E4FD9C01D1BD819419CB5FFADE0D8A68B707CCD3CEC9DBC57B1696E2D29D64BF55D9FA92D7EDEE1FC9A725235CFB4DB2D9B23BEF325E8E608846953F9E760D95BBA58FF3857BDD454EBF3395CAEC56E9DA8327748F607627696298F3BFC5D51ABC389CFAF14703A1DB5
	B5D6869D33F90E5ADC038D2CD82B4DA5BBA54BE654435D144AF8009E40F7A143FE5904369B014F5301A2B713AE4F25552A324E980C1416BF3CA328AE0919DC077CCCCD1798671524E519583E17758D569B0074ECA0AE4B5303A4CBCE9649723795D8369D52CE20E98217AB911F8569E82045D9A463FB7BC8464E8F3EA1B91F13B7248711F1C596174D3CC513317A4A1524ED4CFFDE3B0DBE5084F9CE20B02039C0B1C0AB005EE6FEBBFF74DDF85677A8475CC3C3EED73D47F354E9771EF25BE5A7FC2E29019C95BB
	A7773A3DF6C9623E29B4959A48C334F60B3FDFA2F15DAEC864CBD1679E173A427AB6A49968967D4322780C2D3C0D3C2D1AEE1E2DE8379B4DE8B7ABFC0EE332C8924743999E2D43F9DF3D44FC81534BA14F79A65939F3A3495212B8C74AA8BD9B1FE2A04B4C279A63573C49E5484856E461B6FE7EAE5A389670CEA08FD0B8D0A45022EC32F17C6D7271EC5C8CE3416B32B95B06FBBCB62FF2F45861344BDE55561F9C8CE5EBA362756E1FF4BDEE1748F2FD9F191EE8B5340BA932A2FE05EA0F35BA3BF05E5F8B4ABB
	E75BD85F58A87AF0B39B93A55BF89FA688BC0761F5BA1C776DDCB636B05D8AF951C03C7C4B2CFC76DB01BE12DC45FC672DC09F992CA49F71C05EDAA05E3F43F1B8C7063F8DE387E88150D22055C099B926143C9C6A63D3370BA7B80EDAF57D4B6BA65F598ACFF9C4715A1ADDBE45666A15BBECDE072D47A97BA435CC7A9D34EB0FDF3D2CBB68FB3D4063386C123DB64561F6C16B36A1991C49474B3CF387F56A754AAC375DB1A48303A10FC46D6E391389CF274D271C7758ED0A2C156079876E20CFDC37F5C00B50
	GFCD6F250DE1FE1F32E95BEF767102D6644A3B69F52CB04DDA26FEC0667C9F0EE99A7F2C7AF0AE1735EA49F3D5D1C8B4F95D05E790EA9E59510E7BB589FE85A8ED30AB9976645DC9A2F3F6AA43F3426FDC5AA7C6199C33FC4EA5D49FDECE0E720DFFE0E711B8E78BC20A5C031C0993BCCA9A5C02DC01EDD347E7E2EA9CCED8FE599B347ED57B014B15438B29B64231E28B36A0EFA079E4BDB1BC916B403B29BF41FB7051083A95DGC37BA62963A8A5C4DD5E4F9909B8D626031D2200966F223E7E791DDCBE860E
	5AFCB2F97D99AFB82CEC57FA1E17DDFE9765102F4BAE45AAFBE4179DBE78D41F7B655DF55AF868F38BDFFD0961B8BF9E830775897CF7F7B7F19C5A500FAE4AFF15655B94456B6899D664B6D9D19C2EFE2DFE8233094FEF6A75293AEECEC2DDD7000EEB014C3BC95788A9D36757ADEE776030279DC72CBABEDEE07B00DCA8DF3D1B7CA93B9277F7DDA23D0B25357CAFD7F40E53F7C6046DCDFCCD784E14F8A4CC309C6771EAA57A814D53C9AA3EC175BD6C0B5D222C398A4BCE839D220016822D854A4BB32534GA9
	C0337248BE57AA438C5A557BBF35BF1E1C3B27E083FF9DE7B0D974F22C8B10A5CDB29EEB01B491F9039177453BF1414752FDF146E3A9A24EF8ACFDBEAE74D8F9B04EE82C703C0758DE5FFD43259BFB0F46617C8FBBF9174CA6GD1C51DEFFE550EFAB8DC8E6502435EAFABED0EDBB21C1772F08C4DE1EBCC8CFCDE16C7EB400D5D3486645D7A1234704A3B71C67B47190FB447176C6163423AC7DB8338CCFF970FE3DAF64AC3E028E36EE11742712F3075CB45FD898C3B1AFD8B6B66DB9DBE9C5D0DCEDB7F318139
	F77028FB245046B4AA620FD6595B67768E49767C2B366B36A25B8D250875C8D1BD4BEE404F8539878E9C4E8DF61AA96CF3F865E617E7D8DD0A738BBA8ACA380FE5CA570EF8199CA75A21AF9B9D3253FE9A567942DE187414A276D72D045CC70AFCB72057D4810EE16E947917927F234AF0G7FFA3B5DAB7BFC9F3988E5924930786D5BCC06E37CDC586C9AF074B814BFE5F7148BD97AF7FE201725556DC0D79A6AF17F09A429D065786D09D13D9CEA93FFC2C12A389C77A77FBD778F620DD54FF854DD6907AE081B
	DA06A31382129057AB75819CDA0233B88452D7D3FF6E2F392E179F5861CC7427B0E0E9956D2B9A12F1DE3243FCB582B4FD8F6DB58A92B01F769A6A066A185B6964D3AA642D5E037365F71B33F4F3E0649EFEE734D1647FF61C7C6DA7C2671F98A77F7AB879F346497F57F172DF891A4F6D34B5B18357A6795A308CC7A81C2ECF4AB7699C1438B9A02F43669C564ED7FB92F15DF66A76F19C4FCEB2DEAB36A7615EEDD0343FABA9D942F392EF132FED73EC5826476B9802EDAFEECC553B39B5037A3B395A3D26943C
	479B0567F4A0F59F6E45F6399F1D42735CF12FFB58233F7B2A5B07EDD92B688EAF925B81DA2E36173BCF3D47E365D22B29DC84246782456CB3AA772CA8A7651BD2327303153BFB104AD5C319567CE0FC4BEB281C874A0483C5669B15FB2D014A2D04FC29G728B0C4AFD3B114AF5C37E8850CC355C3282FD39FB0FD33942F7CDA9D6A07B3B7E6D4DFD974BBDA96E8E0B853604E1253029FBA9016EC4CEE5686FC0BDFF7906613E03497F2EFAA772EE60DD512D94ECB7E73FA925F0BF0D6DD9C97AF3C43D4F676EF5
	3009CD753F13497ABD8947DA1357439326921F528C1B3D9172610EE414954F72AA2C7A61E37B5F13465ECDF0DF22E35A319BEC7AEAF79FF35B65A698864744162D43A15F10488E379B7577278B522B62B78431C35DFE2EFF77FE4D8ECBAEDFC962B27DD58D2E25C677413DCC48227EE1C751306240CB831BE2E3F3267E4E3747192A6AB7FBBF5D271639F12CAE03F4ACD0EAA178843B5B99E2F7BED8B69730CEA0BE1F7C34DCBF1FCCAF64E735797064EB4252AA5CFBCCFE89A03B4794EC667D94B06513AD67E456
	293C97BFBEC72A3D1B9DEFF44F9B1E3EABFEF121BA8F96EA361C7E5CEB71CD295D6AFDF4E9B569D8F7G46458152719133DE47F900AF83DAFB00F41CD90DFEBF49BD1CFAE736DA704CA8B225B495914F77530DF80695D1FFC49E24FAB3GDBAC6A2D4B8A6C0F44E2D3CAFEB1556BE920FA3500A945D46FD01A3EDED4B12F373418F4FC26E12A7D48796EEDA43EAB214D5C92627BCB0B915F4E92627B5946BF0E6FFF8B3ECEE8F32E60FB3E4D082FC970BDFB7C0F735BF31D476179A1ED31D4DD9EBFCE3A44021C79
	25244B2F4DC63AF41712AEDB1A262A0B7A3E21CCBFEFAFDCDE99F45ED6CA55F7E42501737665F5B8574C85FCFEA94D5B4FA5EF524D5B67E02634397AE157A04E64CCFE589F2869CF32F51D6D8FA45A6F7D75FA54FDB1343992C8AA037596283A0CF82CCF9D773DC143C80877867D4E40BB784EB26D2E48D9E6F0A7496E489FE573E8D8993FA3CF91785FB3FC268E67FDDB4DF0CC4F033C2CF23A2F71D585729FA97767B9A3A04D6BFDE2CC3D2200747C00FA5CEF8FF7205D581A221B3EEAEACE5091D1DDBB36DA30
	BF713D6D12F23A3B7E4D865CAFD8AC3017819AG1A86948994833452C2FDF2B155E8AD756F13E08B29F6AF49752C2A1E1AFD9A46548B34CFEA0511FD766467985BC71C69797E74C537FEFF1ADB4157C5ABBCBBAB68BD27490CB644BBAECF857577ABD354A77560F87AAC8D50074BF0FFBA4930CA4870781836A6A64302F1E5E82D742F47EDF55EE2E42B81A8BBDAC9362A4BA2FF1BD1C9F28EB4CCCD4E6BE36A854A392652286F7B1D414606BA2D2BB67526212C38274B28A2D98B9B27A6EB4D18FA0132AAD5C67D
	3A3D0276F691C20658A94A707A18FA5B8352B106B2C434119DCCC2066863D3136129B175826D10D5EDA443DE51970555B4CF15B24C8EE9251A66242F276298203508DDC5C9348E752E43F3295B6B68F738889BE0D82F5B4BAEEAB976707A60F748DFDEEFFC07BCEF3D719D72575707FE9F73CF6B035DB173F7A7F7585EFE9A68B79375E458C3C308AD007452EA6A0FA8366E2C01F476C198F787891F4F4F818778F99877939CBF6C9E6F5D471A6A31EB221E108FFD2EBEE85457974665B15E3B142400B675F96F30
	7A4FECCDE7767579E49FDBEC700424667DD259A2995C3763E531C4F7DDDF2EDA2716E9D05C47CA056CEFDB82E56F849D1D2A1EE16AF306CE6FC8783CGE8C900ADD6C0FA8D103986764BB57ABB1AD7B7847733F833311F251A513FFD6EE1EF2F9C68CB6966EC11272D344D0ABC04AA2BF7B82C3EE273764BE3FCF1872B4F7302554FB78773D7EECFD7355E1EE5924D393FABE031A1E367DCF61065E3FC37A7D5353F25064E31559674DFA72427814D2AA17FFD419C4A3722EB7C7BE0111AB641B3B6A0AF71900C19
	C37E9857257420DE17F2619BFF119E0AF7E1C0DBF5EA3A9D1E8381F923101EEE487B97FE3CAD924D031F35100D669EA29BED4CC49B19A03D9A48DCCBB6EA488A14B38F722AEBB93F967559DD2B71D760F3B8502CDAFF1966C1BA86E89950AAB50F4B7945863D1C1542C6B752C259C8FA4FF8EE4982BCBFA02F96522D6F99592837D14F3BDA705EDD21DFE36C81F5C78CF87376769D5737F7D034F7FF9B359781F5E783C56B5AD8841FCD06723D6857DE05E8EFFF9A35978B75928F7B574D06F4A1D01D8E67E32FB2
	8D4F9AA3A2DD4352B7853F871C3816B9EDB75D433068C59EC65F08F26A77E46D000D82CDD75B66E3732BB7F0DD6D735A06E0C836F964DEE95A912CBBFF086A46C279C44072002CC076A3F4A67D66F93C33EB46294B516768D563EE70EE0A67F3B2F8E32866FF638C5E8B41EC5367689F766A2A2B6B5FFB4C5F97833F65C7E87D3B0FE12BA11DD8C7580B8C4B00F43E407E1C6D4BEBA15DA930FDEC4F602C6367B60EB5B0AC9C3039229CBF974D0774A2013595A3E602F42C406EE16556C2BA2B1E30790CEFFEBD3F
	3F665873E6DA331B6AE9FC66FB74FEBA937028FA2D4F97560F75D3FE761C4766442575DC07B401FF0B61EBF4B8BF139EE6B826F30E4278BECAF2A624114DD68B6CFFAA91CBBDE6CA49B9C65811AA32CF0940BE13CE76318A2C71A26958A9306FE610FDA285B6BF1D78AE905813026F92013DD6C9FCD7886C3A19782E9158EF4E93DF3315309F1909EF17156C7DF90B5E5E9E4027D9B59B4F3486337757597C9AE565F65DA270E7983EDC07F3FBE7B19C53D98DB0C7B710CC7DD9644B4EC6429E4BA2DF8E9318F98B
	59A7C2E05B8F11AF4F96583CC3E3FD791F8F114D22C53922CC614B823BF8494017AF114DCC22DC5C68D8DF4E9EA5FB470AF2FF45FC296EB8747DF1423E484606935261824BE365E6C1BACAE07BBB283D05826B623E5984633909309AF6962A05F40B4062CA28EE3740A259F9E59E24978B6CBEE6036510DEAD30FF492476921B8913AED1FB59825BF49B3181C807896CA813EF862467896C69F2962381692582FB3C8831151016CE9076CD8B714892584B4CDF6D109EBDC16F3DCA3B7D6EA870F62F26663857E1BF
	EA6BEFE133BC5F937C001D915087261F20BD01B404BE3888524B01561C201811113D744EA26A51B9D2CBD82BE14C7772762A780C13FCBCD8CEEAF700ADD72EA4F11E35AE6269017C481308DDF5696FAFF1FE7F5FF8FE3E6379337C72F19FD9A069737F55AF9F657DE402BEDFF26B7313F47539EE4F6EA15D56BEBBCFF2FE6DF050F876D8D5272C967E1CF9FE37E4AF6FCE62EBD2BB6B1FA117BC64F6B9FA3BDAD8CCAC431E86EAE921356FEFAC785ED301CD7A6C967C8E43CC94CFDD575EAA42B5F548B662989A9E
	E201BC3C1DAC6643AB60F32CE867D136A767973AF815E6F359A14D4BFF0B79C54EA9988727287C61B4AC5F6346175F2DB6B8614AF64157F1162D87DE39CF76FAE5BB8FA1D25BF2B11F35C2BB2D222DD75AD107BE37CB61E50EB0BDC7A1BFDC1439DA1C4CF47132F3B357B5EE2B266BC3F9CCD707ABC05747789A8A6D4408363EEF467D40G9C42EF81CF1B335E6968F7617BBCA963B456791559EA50DFFA1FCAD11FC83150AE52EE351F93210D336AE7F56DE2E70ACE401D27E92C55DEE3BAC2FA3A407E51CBE3B2
	7AB42D97DFE777D909E7605C86D48D548E64810AB8C3E51EE6E522A03D98E855997EBE595C4A5F9773B2D6CBF790FDF25576305DE0BA93A59A1409D031EAA14F15203CF03CEC1034583CD0E4F4AE27D85B9461CF054C1F8AC1576AD66A5F34AA4C6FF5BB0707DCBE35DC9E5BBF6CGF2C2B90E8DB0EC945261820BE67B02E8C8AF84627EF069E2A8FFC81234D8DD2455D0AF75AC778744F360732FD5FF60BCFE4D76A37900DB4E925F97985FEEC8BB857633CA12F9364076B21967C1FA01403E484667CAC82FBECB
	B227F60CA7335E07734F794BDC8B692F4569E50EE7F6EE823C7D9C796B17AC6457E18263FBE0665782DBD7A97C7A9C7948024CFC7427B618D300DA001CC091C0D1C00B00D6GA536C3FEBB5579BE2B03318D98E7D087F8F7BB0FE188EB67B185335BF92C42C2D1672D4C596427ED467E1D286248CB0FBB834A678724DB0234E7C4D13A3228DB3E0E976A291E15052C9B0234C3E3A2B3G8F9CCFC98169D0B164414698925E8DED5125B789FF184E760C4FC838CE035D59FC1C07D76AEAFE855BBF46C25E5AF67253
	63ECDF18FF9E7C7EBCE1318CEB07F43740AE30BDD18424E78A6CB136A7DA8469256749470BC7471B2775F3F560BCADF518D21E08536217B325839D466B65D34C774DD0BE3B036698FBDA70B5EE919B83CDD036DD14FF4C623F461DE2ED06C1FEC48769F3F45CB12B7FDE40028ECD9F4416C03AD7526BF32442F8CD3C1771B6C17915C23E95197E727532BDC25685D8F7AE10FC59A59319D3C83E568B7E7259A17D85BF793E55965C064B587E5983F5C6AF083DCEA66E81781E8366688BEC3EE6F2C7DEA0BFF90579
	4E9AC8A7F6125CEFDE1A487CCDF2DBBA7D65EE6A8C34EB7EEDE33B5631BDFABB146F6EA419AF0670937EEEA7824A4E9465CD657E7D70DB3E1F077CA5224C53C176F5BFE17B7C440B7079A2693E54B21E6E9BF4E345FA51DF77CEC83F66273BB94DD8F7FE2632C3F94FC51A4F1E9F733EFBBC62E7DA051D9BE6DD64E74AB8015FE6F8248E67E75D64A17A6EE7B464E53FCF6FE6D232F1DFB48A6919C0730096812D84CA7C833D2B79D6DA09B44E7B63F63727C53EAEBBF52FCE38FE752E29FD1F6F5BA9F4C6087E07
	AFCB736FFBBDAED84CD6769F543D157AACE95F4DF02E5F035BD03F81481B8694893490E8A950AA21DF4A46C22E9F061755AB0A2DF700C52E11F298CC2641F871467B799E8BBE77756CD3E51EFDC39F37D13D3EB6E85C0654251EEB54E7621F6DD65B787E9F74EDE4BC38B7BEAEC89BADEA5D4EAE6D5C4757187DF89CD5FDF11A9977C6AE79C62E88BC31BAC08D7CE2DCFEE9D9E9E1EED9E501FAD6B87D0ED6AFB78D63D2F7299702EAF070AEDE6E5AF62D5C864B445B0F5C2D55BBDE3CAB30DEA38C687CDDF6074D
	696E5FD518DBD218DBEAA920F34C33F9DA5D2FCCC8279D925F8324CA5ABF5ED679DEC978598BE672331C479E162C4F3F9EC7EBDF203DA3D4BB1BF476CEFC084E229D1E31736E108767292CCBB4A735DD9BFB6FFB759A5D5D66C2B93C772D06E74BA59EFF4667279FF8A732069359216E48A5BEBFE1BA82BE5743738D784765084F4379367D26C796C19442365CAE1857E26B416BDD7A9E43E964F5020198A04EDF4E713C7091166777AD8F4AFBE4837A9156D03FFB41DA60F9CF8CEE722B271610A8F67AD53FD835
	192ACD96DC22B82CAF6EB74ADFA27237F799652F907985D5C679EBAE51DE6D21FD1A4F7DD7655E60BED7D6EA2932D417D7DA2A4075CA8A284E212AF8F816D6105F4564EB6D052507726172B25E902FB738DF2BF770629E63F1633339FCBE596B68538D9D03B190FBA4783878DC2176792B87B41E662A094B3A2CC82B97B5851B7D3E525FE62F96EB6D8D1A3787EF2F3CDCED07577B29C52B37627C9FEBB35EE6FC25E61FBDD5DA7BCF15CFC4AEBEA77C006DF14D17E1ADBA4C6F19825F7BE4C3DE61E5753B7BEC7C
	67D60EB77E75E7EBAB546D3C2C0DFF67E5EDAFC0E39CAF050C3F11C4E5CE55E29963EF46086FD795E47A4D89DA811E7F1D66CD9A9F966261BF277C66DCD6C0BE31637951B5E96A5C011BA87F3A1F985828492716203C93764DDA3BFC65D2AB2B67927B1640FC91D1C4E5644B6B05EEA7BB6A4F511C747B3640B983E3B5C6AE531C52F65EA8BFC2648F0D1953B0FF36485FE2189FAD72258A237CC517E90D793BAC36A7316FD37D3429DA73534CC3A157CD0BFE2D9EBC28550BBC047D38CBB5D82E6AB13B34F923C6
	AB3BBBF362BC3A5E536A1D3AB4397D405D43DA5D7F79E062BC679C51467009FA2D0DAFD8F6069843E5D515B8CDD594083AC3C7353A5B52C2712FA861B5F93DE72CDA3D9D9D9351392CA0541C342AC153A77D3856F6EB48FD193FCC034DDA3D17A734AF8BAD5367CEE8B2FD7524567687A1FD03E462E53F07CD2BFB3477E47D1E38640364788449F80FE6D2674DD51735FDB517237534A6476A2EBFDE47574FE8BA6EBC2B35EDEA1B385D2D6734FA7FB021B504571B5D2E55FB28E802EBDB19663B7FFCDE2BBF4FB2
	19B5BA38BD7E3BC333878BA9D15BDFB3A13D78D971569056D3FFBFC67759BCB4156F7FCF14B80FBD9FA98FFE4E4C488E9EC776E636F19C59BB5946710A3B33C3FF67FDFFF6706F3C17E56B3F734E4F49BF6944F5A5678A1CBF003A00BCC0532E5099F9E1B60E997CC51831676386FBBF4631612F40A8A2B6F3DB08584CED637FF64C935BF07D6DF1AB0AFB885BA77C49ED58DF0A5B43C0B5B6F39B5A486B689FD0F8D1950F59465EEB4BFD8C66FA3E42E29FE603DE8B04EE5DEF61863B43F6F56C374CGEC756237
	CA141B9CE55F40D4ED76727B12607568DBFB02358196BA813EFF26672A5C2B345B7A054DF33BF0B1B0019CEB00F23ACDA99620A620EEA085A89CE896D0B450E22065C02B01D2ED30CF84AA842A33119EA3FB8BC268213E10E69D653571F8DBBEC6BF09BF2D235E93FD7E9A5D9335C33B91B60A877F71B5FA0F9CE323F75729DEAC3B9652D9BDA08B50444E9BB4E72C3D04A9B56E30AFC85CA15B01F1994A58FDAB76353507642ABDC071742382BB5FC558F201F5D791E66D253D52CAF6C66079BCE681750B6CA57D
	86586FB4AD07749A208C7BE4755BF1C5EB3F241D6281736DA453274F13CC5D821BEBA1ACC6E0ADA216B0DFA62C2A0230EE196E7296DF413345CC197CE17549DDA17C813F6B518653072B1FFC78971D41476C2A4E71476C4B1DA8138CE38D6F8FB876CAA70B656E6B7349E2EEF823B3C3E04D3ED6374F010786B56F62C67D3C46079B7D66547BB8C7616FEE40BA6D38450E9ADC831EEF698AAE7F212E716537F6994FB9A73A464EB9E73A0C679C6EFBB467F06C7DAE7471FE98FF1D225C9501DD94181D3509588507
	DD999078D5A69762CDB2B2A45C43643A4130CE959B56E197D56CD697768128BC60963173F73B589D3A4369D43F6B454AB8DC50A5429E61CCC6074726137B33823BA8515AB9735A54FE6B6D51A9567B69246B713B71D1B6DFC54901F76677B2FC3E9CF8E73E51CBF3E18C646577511DFD1508DB0DGECF69F5FEBC62B4FC5FDE35FF92AF761870C7698A635FC2CC1BD36076D07393E5FBF2F9052F581986771FE17910FF6356CC03FB10FD1402787644D0574FCC39EF215910F45EA5965C1F82C86BCF540BFAF8752
	A583C6BC0ED4CC2D0FCDEC4E368E847671AF985EBA9058472E8A6A63AE48DBB8C0FDDC512E671F67D05FB1284F96C730BE7E7373C63669D64BAB86751042811F9510B78F52B18EA35BFCE94CF79E101629E5D78561A1DD05F57AEA407BFAC857DEB562F156AF8633D5ADE3D71FA3D70369DF6B57EF91EA39596AB35A209E1FD716DC417947272EC73C2DFBF0FB2AFE7E0C6EF3167723BF8F9C78C8F970180F53EC8DDF84B6B1DD25B8103FE4D8AC2425C1429E3132774C104E93587A860A97A991D8AF5B8B05C1FA
	3A40920AA8C6F52E404E1D25585379827BF9BB451EAE965852D26231DCE01F4E23585392A7E123DD4457AA301FF4915FD6015DF31D785A85F66194719D91D83108950D90D83D085FB6896C4F2A08EF2C40D6D6915F3582FBAC1D78E68C9196D3C9FC7384F6D268DBAD3097AA09EF78904D8DBF2B50FC71C55DE7E5CA3FD3B7B93F7C6CC74A036B5C42FCE196689BA56C709D765EFEA1241788AC7F8E594BA4302F32BDED218B66951708516F201863A60171588E0CB96E92588C8B459CFB84D6DBCCBC2689AC3F02
	E20E178A6CD9D6F7A52457882C0415CBF443594ACDD8B963DB82699601BD4762873AA16D9158A70A84DF01D5B29ECBA13DCAE0838C13BC7059C358B5D6B78F5296017D1BE82FCEE0EDCC3E69101EAD30C626EFB424E38476183041928F1DDD648A362F76582E617E1847970C3276B0BF779A15FB3C42BFD6A20615A9017CDAD1E60155BFBE364C06AA71F78FBB9B460B0D503FFB4478B8FD0C1C87F87CEF9C0F7F653CEE9DA0DEEA0C941B33C621DC78B50ACFA9E3361A8B69F9823B074DD9A6C82F94D8867335AC
	2FA9A557CB6FCADFAC1D4C3BD23D3C3887E875EA7B834E63C9B65FF581BE6025770267FBA4111F4CE22EE6E01ED744E131F9EEB1241789AC0C4DF309BE786CA3D99BC3468A853E578914354E97A86BD5660BAD00F77AC85611DECD56CD5518BF8D72267BC82E25ECEEDCG69C582FB094DF92BA1ADA9A4EB4F38F6CD89A1EB0992A86BFAB6CF57825E24109F3A82E21C2731F9C8017CB0D16647377DFD752F6D1A2F9E39B399FB86463A4DD3825F13ADBA6F4F6B092B1AAD9B78F7A1204EA2056CF61B4DAD2BA1AD
	8D9376ED56A705102E9EA6DB36950FA7673A90F28E8C875A72829B538A60E143E4271F85443C7F5B20A474BADEE19C9BF505359385ED4C976D1C88911B554B74DD81E5E3C579158131D92F3339B567BA1C1F2E137EB30B4653FFC3887DBB2F877653A90BF13C154CECEF07721E6BA45F5D00984387781A83791122CCF8113F6DFE6F54FC6C25F1E58F95773E8CF8347949FEB5E0FE8E635FBB00F231C21ECB457E726438B4F91E8A69CBA96358B27706A9856F11DF9531A1DFE072A85EE1D90D5971E8FEB3530A81
	91C15F1B9475381D76DD0539257CC51D9A37F38D6B734F3F72EAED2DBD00726D62EFDFF3713E28E697155B2468FC75EC0877875565402AD23C97318CEB751635CF3C5E83A3DA3DC52513FB8FB97F26265F3F5F525A096B1AB87F57BF506A5D389E2ADE15DF3D1D3735FAAD27A6DE0F3D12237735A5135357952769FBFF3C56CEF828580CG7E5189DA3D59A163E0CA4BF8C5DE6F79C42D5E1315932FD71E2255BBB2497EE5533C7A7966BA2D1D77A6A1778FB7E8753EF1FBF27C5718B57EEFEF545AB99A721DF3F9
	351E7F61F42D5E27C23E97762F7760A62DDE49A463753E39D913FBF926564E76C9481D30C52B17BF09FAFBF55FF97AEE79446B5D132D559BAE1A1C3E0FEC5374DD7416564E8FC246AA7A734F5345DF4A1364FFFC3B467F61DC2D1D1AC9765BF7B18CC2627FBF507BA5296081D1AFC9C90AE426C8D08C3671F925F451DCB33BB3DEFE3D3CA661678FA744CB094DD2B23FC3EF169271A23CD9CAE277644DD20262760C6002922FA7C54A20465590939FB058BC56DE751F7B5173D1D72CD971D2BC709810F923C9B770
	321CB50BF63F29C89B7D23D6FD5724BBD2A2E5C353E9FE26F87A210A7FDC7C9F9D3E84A939D95A06ABF11B6CE5AF98E4BB7EC8097A3FC8B4CA6BBC9822047B8BD04C479EC9BE6526D3EE11327A4E612F347A9459DECF2FAEFC0A34057D4CDCB17EA4E4F1134DB72020D407DA24C4977EFF9752E61E6D34397A0B79FB0CC3CC0D387AEEB6C333618E72E6B2F93115A251CA66BF266F59F9E2457C84A93ED1DA6FF45B6C0D36DE456DED1656A983DE59B7GEB710867C89DEBA875864EE2ECA3G4D3DAD54C7E50BB0
	7CD288BDB872B791E9AB539A21E3C63CD2B1AB099B0FA2D142FEEC406685D63237D941F0AF37B7CF64FDE23B3277DF0E3F5995AF4529CA2269570FF894EEB061B728F2D1A3C82D7C7825E7667CFBED6CAA2852A8A5315F1A834699DA295343C3BD32773E28875E59B0E379E7D0AE8F1A07F56AC6C5CA6E338DB91C5069495C2189DF27F8EDAE9F7E669EB04D8D5018320460C5DFF8266401AF3D72BE93DC2B2AC8BBF897C15562FE59BDD4DC5F5767F049228168AFE87E9D51BC16A98AA833F9647EADA7FE78C68F
	7817D5CA98AAA9E1FFCB595FB27CDB4A10D2061416C12745CAA17F85660F0C204EEF0E8478B926589ECFE26FA663F0F20B97E5326E4216CFCB81BD42D229E37C8FD173D8C7C2B803E5EE466278E18B18DD041DA0104D725FE2FF5F191ADAFBC704A2F4004B74D7C442A36D7FB735CAB4355E52291568A77ACE3F9E9DD524740090BC7F7C8FC3D1F594FDC8DA9E9AB110103A924F1527014C228CAC21F75F5027243F506944B5B0CFD427BACDA76B0729D3033FC3A21D726B390F295C27B439937FBF49FD5E585E89
	86F25338B97AE1E8312E8D06FC5B07B864AFEB03C11B25D02D9D2ADA71FEEAE993G29CE41AF71820D532109F0E8D6247538BD4B45AFE05440368AB695322C643638796F7DG144E72C520B6A09BE9CEE18158B55484EEF3EAF4B38E5FCA811208515006D3CDDC9083A78619EA2CFE8BF6B20FD9604530098F496C57B47FC18353CC3B9537343A4B87E1F78CCDE9B3C8FD2CA656BB7E0399F963B6BFBB0496978CD29FAB1D42B51D12D41D70CC1398C28B0FC16AE3255367B51DF2D41DD037640FC06E8FF552FDD0
	139B6FCEF029467046A4BF39BFED107AD8D97FE1CD8B8A2A43A9A0F5DCADBE46BAFDC553E927CEA7231E79D8497D35319E05F227FC7CFCFF01A6E92EAAA5DE31A7736FA2945C55FF97E14D3D6F847D0E6F2AF09E6BA2FDAA703759173277EB3500F7FE0AE2B573AA718BF74162075B06ECCE27E2F38E563B6C98CBFC7426A2EB315EBF2A4476FDD4C64DD47F4F42CA147B2A2E4E7F81D0CB8788F562C7ECA4A5GGD8FAGGD0CB818294G94G88G88GE606A2AEF562C7ECA4A5GGD8FAGG8CGGGGG
	GGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGDEA5GGGG
**end of data**/
}

/**
 * Return the ConfigurationPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getConfigurationPanel() {
	if (ivjConfigurationPanel == null) {
		try {
			ivjConfigurationPanel = new javax.swing.JPanel();
			ivjConfigurationPanel.setName("ConfigurationPanel");
			ivjConfigurationPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsControlInhibitCheckBox = new java.awt.GridBagConstraints();
			constraintsControlInhibitCheckBox.gridx = 1; constraintsControlInhibitCheckBox.gridy = 1;
			constraintsControlInhibitCheckBox.gridwidth = 3;
			constraintsControlInhibitCheckBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsControlInhibitCheckBox.ipadx = 217;
			constraintsControlInhibitCheckBox.insets = new java.awt.Insets(12, 13, 3, 78);
			getConfigurationPanel().add(getControlInhibitCheckBox(), constraintsControlInhibitCheckBox);

			java.awt.GridBagConstraints constraintsJComboBoxBankOperation = new java.awt.GridBagConstraints();
			constraintsJComboBoxBankOperation.gridx = 2; constraintsJComboBoxBankOperation.gridy = 2;
			constraintsJComboBoxBankOperation.gridwidth = 2;
			constraintsJComboBoxBankOperation.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJComboBoxBankOperation.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJComboBoxBankOperation.weightx = 1.0;
			constraintsJComboBoxBankOperation.ipadx = 49;
			constraintsJComboBoxBankOperation.insets = new java.awt.Insets(3, 3, 3, 77);
			getConfigurationPanel().add(getJComboBoxBankOperation(), constraintsJComboBoxBankOperation);

			java.awt.GridBagConstraints constraintsJLabelBankOperation = new java.awt.GridBagConstraints();
			constraintsJLabelBankOperation.gridx = 1; constraintsJLabelBankOperation.gridy = 2;
			constraintsJLabelBankOperation.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelBankOperation.insets = new java.awt.Insets(5, 13, 7, 37);
			getConfigurationPanel().add(getJLabelBankOperation(), constraintsJLabelBankOperation);

			java.awt.GridBagConstraints constraintsControlPointLabel = new java.awt.GridBagConstraints();
			constraintsControlPointLabel.gridx = 1; constraintsControlPointLabel.gridy = 4;
			constraintsControlPointLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsControlPointLabel.insets = new java.awt.Insets(8, 13, 8, 2);
			getConfigurationPanel().add(getControlPointLabel(), constraintsControlPointLabel);

			java.awt.GridBagConstraints constraintsControlPointComboBox = new java.awt.GridBagConstraints();
			constraintsControlPointComboBox.gridx = 2; constraintsControlPointComboBox.gridy = 4;
			constraintsControlPointComboBox.gridwidth = 2;
			constraintsControlPointComboBox.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsControlPointComboBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsControlPointComboBox.weightx = 1.0;
			constraintsControlPointComboBox.ipadx = 49;
			constraintsControlPointComboBox.insets = new java.awt.Insets(4, 3, 3, 77);
			getConfigurationPanel().add(getControlPointComboBox(), constraintsControlPointComboBox);

			java.awt.GridBagConstraints constraintsBankSizeLabel = new java.awt.GridBagConstraints();
			constraintsBankSizeLabel.gridx = 1; constraintsBankSizeLabel.gridy = 5;
			constraintsBankSizeLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsBankSizeLabel.insets = new java.awt.Insets(5, 13, 33, 2);
			getConfigurationPanel().add(getBankSizeLabel(), constraintsBankSizeLabel);

			java.awt.GridBagConstraints constraintsJComboBankSize = new java.awt.GridBagConstraints();
			constraintsJComboBankSize.gridx = 2; constraintsJComboBankSize.gridy = 5;
			constraintsJComboBankSize.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJComboBankSize.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJComboBankSize.weightx = 1.0;
			constraintsJComboBankSize.ipadx = 126;
			constraintsJComboBankSize.insets = new java.awt.Insets(3, 3, 31, 2);
			getConfigurationPanel().add(getJComboBankSize(), constraintsJComboBankSize);

			java.awt.GridBagConstraints constraintsControlDeviceLabel = new java.awt.GridBagConstraints();
			constraintsControlDeviceLabel.gridx = 1; constraintsControlDeviceLabel.gridy = 3;
			constraintsControlDeviceLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsControlDeviceLabel.ipadx = 41;
			constraintsControlDeviceLabel.insets = new java.awt.Insets(7, 13, 7, 2);
			getConfigurationPanel().add(getControlDeviceLabel(), constraintsControlDeviceLabel);

			java.awt.GridBagConstraints constraintsControlDeviceComboBox = new java.awt.GridBagConstraints();
			constraintsControlDeviceComboBox.gridx = 2; constraintsControlDeviceComboBox.gridy = 3;
			constraintsControlDeviceComboBox.gridwidth = 2;
			constraintsControlDeviceComboBox.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsControlDeviceComboBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsControlDeviceComboBox.weightx = 1.0;
			constraintsControlDeviceComboBox.ipadx = 73;
			constraintsControlDeviceComboBox.insets = new java.awt.Insets(4, 3, 4, 77);
			getConfigurationPanel().add(getControlDeviceComboBox(), constraintsControlDeviceComboBox);

			java.awt.GridBagConstraints constraintsJLabelKVAR = new java.awt.GridBagConstraints();
			constraintsJLabelKVAR.gridx = 3; constraintsJLabelKVAR.gridy = 5;
			constraintsJLabelKVAR.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelKVAR.ipadx = 8;
			constraintsJLabelKVAR.ipady = -3;
			constraintsJLabelKVAR.insets = new java.awt.Insets(6, 2, 32, 68);
			getConfigurationPanel().add(getJLabelKVAR(), constraintsJLabelKVAR);
			// user code begin {1}

			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("dialog.bold", 1, 14));
			ivjLocalBorder1.setTitle("Configuration");
			ivjConfigurationPanel.setBorder(ivjLocalBorder1);
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjConfigurationPanel;
}

/**
 * Return the ControlDeviceComboBox property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getControlDeviceComboBox() {
	if (ivjControlDeviceComboBox == null) {
		try {
			ivjControlDeviceComboBox = new javax.swing.JComboBox();
			ivjControlDeviceComboBox.setName("ControlDeviceComboBox");
			ivjControlDeviceComboBox.setFont(new java.awt.Font("dialog", 0, 12));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjControlDeviceComboBox;
}


/**
 * Return the ControlDeviceLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getControlDeviceLabel() {
	if (ivjControlDeviceLabel == null) {
		try {
			ivjControlDeviceLabel = new javax.swing.JLabel();
			ivjControlDeviceLabel.setName("ControlDeviceLabel");
			ivjControlDeviceLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjControlDeviceLabel.setText("Control Device:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjControlDeviceLabel;
}


/**
 * Return the ControlInhibitCheckBox property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getControlInhibitCheckBox() {
	if (ivjControlInhibitCheckBox == null) {
		try {
			ivjControlInhibitCheckBox = new javax.swing.JCheckBox();
			ivjControlInhibitCheckBox.setName("ControlInhibitCheckBox");
			ivjControlInhibitCheckBox.setMnemonic('d');
			ivjControlInhibitCheckBox.setText("Disable Controls");
			ivjControlInhibitCheckBox.setMaximumSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setActionCommand("Control Inhibit");
			ivjControlInhibitCheckBox.setBorderPainted(false);
			ivjControlInhibitCheckBox.setPreferredSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setFont(new java.awt.Font("dialog", 0, 14));
			ivjControlInhibitCheckBox.setMargin(new java.awt.Insets(2, 2, 2, 2));
			ivjControlInhibitCheckBox.setMinimumSize(new java.awt.Dimension(124, 26));
			ivjControlInhibitCheckBox.setHorizontalAlignment(2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjControlInhibitCheckBox;
}


/**
 * Return the ControlPointComboBox property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getControlPointComboBox() {
	if (ivjControlPointComboBox == null) {
		try {
			ivjControlPointComboBox = new javax.swing.JComboBox();
			ivjControlPointComboBox.setName("ControlPointComboBox");
			ivjControlPointComboBox.setMaximumSize(new java.awt.Dimension(32767, 25));
			ivjControlPointComboBox.setPreferredSize(new java.awt.Dimension(150, 25));
			ivjControlPointComboBox.setFont(new java.awt.Font("dialog", 0, 12));
			ivjControlPointComboBox.setMinimumSize(new java.awt.Dimension(150, 25));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjControlPointComboBox;
}


/**
 * Return the ControlPointLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getControlPointLabel() {
	if (ivjControlPointLabel == null) {
		try {
			ivjControlPointLabel = new javax.swing.JLabel();
			ivjControlPointLabel.setName("ControlPointLabel");
			ivjControlPointLabel.setText("Control Point:");
			ivjControlPointLabel.setMaximumSize(new java.awt.Dimension(138, 16));
			ivjControlPointLabel.setPreferredSize(new java.awt.Dimension(138, 16));
			ivjControlPointLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjControlPointLabel.setMinimumSize(new java.awt.Dimension(138, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjControlPointLabel;
}


/**
 * Return the DisableFlagCheckBox property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getDisableFlagCheckBox() {
	if (ivjDisableFlagCheckBox == null) {
		try {
			ivjDisableFlagCheckBox = new javax.swing.JCheckBox();
			ivjDisableFlagCheckBox.setName("DisableFlagCheckBox");
			ivjDisableFlagCheckBox.setMnemonic('b');
			ivjDisableFlagCheckBox.setText("Disable Bank");
			ivjDisableFlagCheckBox.setMaximumSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setActionCommand("Disable Device");
			ivjDisableFlagCheckBox.setBorderPainted(false);
			ivjDisableFlagCheckBox.setPreferredSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setFont(new java.awt.Font("dialog", 0, 14));
			ivjDisableFlagCheckBox.setMargin(new java.awt.Insets(2, 2, 2, 2));
			ivjDisableFlagCheckBox.setMinimumSize(new java.awt.Dimension(121, 26));
			ivjDisableFlagCheckBox.setHorizontalAlignment(2);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDisableFlagCheckBox;
}


/**
 * Return the IdentificationPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getIdentificationPanel() {
	if (ivjIdentificationPanel == null) {
		try {
			ivjIdentificationPanel = new javax.swing.JPanel();
			ivjIdentificationPanel.setName("IdentificationPanel");
			ivjIdentificationPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsTypeTextField = new java.awt.GridBagConstraints();
			constraintsTypeTextField.gridx = 2; constraintsTypeTextField.gridy = 1;
			constraintsTypeTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsTypeTextField.anchor = java.awt.GridBagConstraints.WEST;
			constraintsTypeTextField.ipadx = 251;
			constraintsTypeTextField.ipady = 20;
			constraintsTypeTextField.insets = new java.awt.Insets(22, 5, 2, 19);
			getIdentificationPanel().add(getTypeTextField(), constraintsTypeTextField);

			java.awt.GridBagConstraints constraintsTypeLabel = new java.awt.GridBagConstraints();
			constraintsTypeLabel.gridx = 1; constraintsTypeLabel.gridy = 1;
			constraintsTypeLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsTypeLabel.insets = new java.awt.Insets(24, 8, 4, 34);
			getIdentificationPanel().add(getTypeLabel(), constraintsTypeLabel);

			java.awt.GridBagConstraints constraintsJLabelBankName = new java.awt.GridBagConstraints();
			constraintsJLabelBankName.gridx = 1; constraintsJLabelBankName.gridy = 2;
			constraintsJLabelBankName.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelBankName.insets = new java.awt.Insets(4, 8, 5, 30);
			getIdentificationPanel().add(getJLabelBankName(), constraintsJLabelBankName);

			java.awt.GridBagConstraints constraintsJTextFieldName = new java.awt.GridBagConstraints();
			constraintsJTextFieldName.gridx = 2; constraintsJTextFieldName.gridy = 2;
			constraintsJTextFieldName.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldName.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldName.weightx = 1.0;
			constraintsJTextFieldName.ipadx = 119;
			constraintsJTextFieldName.insets = new java.awt.Insets(2, 5, 3, 19);
			getIdentificationPanel().add(getJTextFieldName(), constraintsJTextFieldName);

			java.awt.GridBagConstraints constraintsBankAddressLabel = new java.awt.GridBagConstraints();
			constraintsBankAddressLabel.gridx = 1; constraintsBankAddressLabel.gridy = 3;
			constraintsBankAddressLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsBankAddressLabel.insets = new java.awt.Insets(6, 8, 28, 5);
			getIdentificationPanel().add(getBankAddressLabel(), constraintsBankAddressLabel);

			java.awt.GridBagConstraints constraintsJTextFieldAddress = new java.awt.GridBagConstraints();
			constraintsJTextFieldAddress.gridx = 2; constraintsJTextFieldAddress.gridy = 3;
			constraintsJTextFieldAddress.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldAddress.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldAddress.weightx = 1.0;
			constraintsJTextFieldAddress.ipadx = 218;
			constraintsJTextFieldAddress.insets = new java.awt.Insets(4, 5, 26, 19);
			getIdentificationPanel().add(getJTextFieldAddress(), constraintsJTextFieldAddress);
			// user code begin {1}

			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("dialog.bold", 1, 14));
			ivjLocalBorder.setTitle("Identification");
			ivjIdentificationPanel.setBorder(ivjLocalBorder);
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjIdentificationPanel;
}

/**
 * Return the JComboBankSize property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBankSize() {
	if (ivjJComboBankSize == null) {
		try {
			ivjJComboBankSize = new javax.swing.JComboBox();
			ivjJComboBankSize.setName("JComboBankSize");
			ivjJComboBankSize.setPreferredSize(new java.awt.Dimension(33, 20));
			ivjJComboBankSize.setFont(new java.awt.Font("sansserif", 0, 12));
			ivjJComboBankSize.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjJComboBankSize.setMinimumSize(new java.awt.Dimension(33, 20));
			// user code begin {1}

         ivjJComboBankSize.addItem( new Integer(50) );
         ivjJComboBankSize.addItem( new Integer(100) );
         ivjJComboBankSize.addItem( new Integer(150) );
         ivjJComboBankSize.addItem( new Integer(275) );
         ivjJComboBankSize.addItem( new Integer(300) );
         ivjJComboBankSize.addItem( new Integer(450) );
         ivjJComboBankSize.addItem( new Integer(550) );         
         ivjJComboBankSize.addItem( new Integer(600) );
         ivjJComboBankSize.addItem( new Integer(825) );         
         ivjJComboBankSize.addItem( new Integer(900) );
         ivjJComboBankSize.addItem( new Integer(1100) );         
         ivjJComboBankSize.addItem( new Integer(1200) );
			
         
         ivjJComboBankSize.setEditable( true );
         
         NewComboBoxEditor ncb = new NewComboBoxEditor();
         ncb.getJTextField().setDocument( 
               new com.cannontech.common.gui.unchanging.LongRangeDocument(0, 10000) );
         
         ivjJComboBankSize.setEditor( ncb );
         
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBankSize;
}


/**
 * Return the OperationStateComboBox property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxBankOperation() {
	if (ivjJComboBoxBankOperation == null) {
		try {
			ivjJComboBoxBankOperation = new javax.swing.JComboBox();
			ivjJComboBoxBankOperation.setName("JComboBoxBankOperation");
			ivjJComboBoxBankOperation.setPreferredSize(new java.awt.Dimension(150, 25));
			ivjJComboBoxBankOperation.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJComboBoxBankOperation.setMinimumSize(new java.awt.Dimension(150, 25));
			// user code begin {1}

			ivjJComboBoxBankOperation.addItem( com.cannontech.database.data.capcontrol.CapBank.SWITCHED_OPSTATE );
			ivjJComboBoxBankOperation.addItem( com.cannontech.database.data.capcontrol.CapBank.FIXED_OPSTATE );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxBankOperation;
}


/**
 * Return the NameLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelBankName() {
	if (ivjJLabelBankName == null) {
		try {
			ivjJLabelBankName = new javax.swing.JLabel();
			ivjJLabelBankName.setName("JLabelBankName");
			ivjJLabelBankName.setText("Bank Name:");
			ivjJLabelBankName.setMaximumSize(new java.awt.Dimension(87, 16));
			ivjJLabelBankName.setPreferredSize(new java.awt.Dimension(87, 16));
			ivjJLabelBankName.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelBankName.setMinimumSize(new java.awt.Dimension(87, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelBankName;
}


/**
 * Return the OperationalStateLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelBankOperation() {
	if (ivjJLabelBankOperation == null) {
		try {
			ivjJLabelBankOperation = new javax.swing.JLabel();
			ivjJLabelBankOperation.setName("JLabelBankOperation");
			ivjJLabelBankOperation.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelBankOperation.setText("Bank Operation:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelBankOperation;
}


/**
 * Return the JLabelKVAR property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelKVAR() {
	if (ivjJLabelKVAR == null) {
		try {
			ivjJLabelKVAR = new javax.swing.JLabel();
			ivjJLabelKVAR.setName("JLabelKVAR");
			ivjJLabelKVAR.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelKVAR.setText("KVAR");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelKVAR;
}


/**
 * Return the BankAddressTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldAddress() {
	if (ivjJTextFieldAddress == null) {
		try {
			ivjJTextFieldAddress = new javax.swing.JTextField();
			ivjJTextFieldAddress.setName("JTextFieldAddress");
			ivjJTextFieldAddress.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjJTextFieldAddress.setColumns(15);
			ivjJTextFieldAddress.setPreferredSize(new java.awt.Dimension(33, 20));
			ivjJTextFieldAddress.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjJTextFieldAddress.setMinimumSize(new java.awt.Dimension(33, 20));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldAddress;
}


/**
 * Return the NameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldName() {
	if (ivjJTextFieldName == null) {
		try {
			ivjJTextFieldName = new javax.swing.JTextField();
			ivjJTextFieldName.setName("JTextFieldName");
			ivjJTextFieldName.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjJTextFieldName.setColumns(15);
			ivjJTextFieldName.setPreferredSize(new java.awt.Dimension(132, 20));
			ivjJTextFieldName.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjJTextFieldName.setMinimumSize(new java.awt.Dimension(132, 20));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldName;
}


/**
 * Return the TypeLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getTypeLabel() {
	if (ivjTypeLabel == null) {
		try {
			ivjTypeLabel = new javax.swing.JLabel();
			ivjTypeLabel.setName("TypeLabel");
			ivjTypeLabel.setText("Device Type:");
			ivjTypeLabel.setMaximumSize(new java.awt.Dimension(83, 16));
			ivjTypeLabel.setPreferredSize(new java.awt.Dimension(83, 16));
			ivjTypeLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjTypeLabel.setMinimumSize(new java.awt.Dimension(83, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTypeLabel;
}


/**
 * Return the TypeTextField property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getTypeTextField() {
	if (ivjTypeTextField == null) {
		try {
			ivjTypeTextField = new javax.swing.JLabel();
			ivjTypeTextField.setName("TypeTextField");
			ivjTypeTextField.setOpaque(true);
			ivjTypeTextField.setFont(new java.awt.Font("dialog.bold", 1, 14));
			ivjTypeTextField.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTypeTextField;
}


/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param val java.lang.Object
 */
public Object getValue(Object val) 
{
	com.cannontech.database.data.capcontrol.CapBank capBank = (com.cannontech.database.data.capcontrol.CapBank)val;

	Integer controlPointID = (getControlPointComboBox().getSelectedItem() == null ? new Integer(com.cannontech.database.data.point.PointTypes.SYS_PID_SYSTEM) :
			new Integer(((com.cannontech.database.data.lite.LitePoint)getControlPointComboBox().getSelectedItem()).getPointID()) );

	Integer controlDeviceID = (getControlDeviceComboBox().getSelectedItem() == null ? new Integer(com.cannontech.database.db.device.Device.SYSTEM_DEVICE_ID) : 
			new Integer(((com.cannontech.database.data.lite.LiteYukonPAObject)getControlDeviceComboBox().getSelectedItem()).getYukonID()) );

	capBank.setPAOName( getJTextFieldName().getText() );
	capBank.setLocation( getJTextFieldAddress().getText() );
	capBank.getCapBank().setOperationalState( getJComboBoxBankOperation().getSelectedItem().toString() );

	if( getControlPointComboBox().isVisible() )
		capBank.getCapBank().setControlPointID( controlPointID );
	else
		capBank.getCapBank().setControlPointID( new Integer(com.cannontech.database.data.point.PointTypes.SYS_PID_SYSTEM) );

	if( getControlDeviceComboBox().isVisible() )
		capBank.getCapBank().setControlDeviceID( controlDeviceID );
	else
		capBank.getCapBank().setControlDeviceID( new Integer(com.cannontech.database.db.device.Device.SYSTEM_DEVICE_ID) );
		
	if( getControlInhibitCheckBox().isSelected() )
		capBank.getDevice().setControlInhibit( com.cannontech.common.util.CtiUtilities.getTrueCharacter() );
	else
		capBank.getDevice().setControlInhibit( com.cannontech.common.util.CtiUtilities.getFalseCharacter() );
	if( getDisableFlagCheckBox().isSelected() )
		capBank.setDisableFlag( com.cannontech.common.util.CtiUtilities.getTrueCharacter() );
	else
		capBank.setDisableFlag( com.cannontech.common.util.CtiUtilities.getFalseCharacter() );

   capBank.getCapBank().setBankSize( 
      (getJComboBankSize().getSelectedItem().toString().length() <= 0
      ? new Integer(150)
      : new Integer(getJComboBankSize().getSelectedItem().toString()) ) );



	return val;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}


/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getDisableFlagCheckBox().addActionListener(this);
	getJTextFieldName().addCaretListener(this);
	getJTextFieldAddress().addCaretListener(this);
	getControlInhibitCheckBox().addActionListener(this);
	getControlPointComboBox().addActionListener(this);
	getControlDeviceComboBox().addActionListener(this);
	getJComboBoxBankOperation().addActionListener(this);
	getJComboBankSize().addActionListener(this);
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("DeviceMeterGroupEditorPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(449, 379);

		java.awt.GridBagConstraints constraintsIdentificationPanel = new java.awt.GridBagConstraints();
		constraintsIdentificationPanel.gridx = 1; constraintsIdentificationPanel.gridy = 1;
		constraintsIdentificationPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsIdentificationPanel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsIdentificationPanel.weightx = 1.0;
		constraintsIdentificationPanel.weighty = 1.0;
		constraintsIdentificationPanel.ipadx = 32;
		constraintsIdentificationPanel.ipady = -1;
		constraintsIdentificationPanel.insets = new java.awt.Insets(2, 8, 3, 9);
		add(getIdentificationPanel(), constraintsIdentificationPanel);

		java.awt.GridBagConstraints constraintsDisableFlagCheckBox = new java.awt.GridBagConstraints();
		constraintsDisableFlagCheckBox.gridx = 1; constraintsDisableFlagCheckBox.gridy = 3;
		constraintsDisableFlagCheckBox.anchor = java.awt.GridBagConstraints.WEST;
		constraintsDisableFlagCheckBox.ipadx = 40;
		constraintsDisableFlagCheckBox.insets = new java.awt.Insets(2, 8, 32, 280);
		add(getDisableFlagCheckBox(), constraintsDisableFlagCheckBox);

		java.awt.GridBagConstraints constraintsConfigurationPanel = new java.awt.GridBagConstraints();
		constraintsConfigurationPanel.gridx = 1; constraintsConfigurationPanel.gridy = 2;
		constraintsConfigurationPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsConfigurationPanel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsConfigurationPanel.weightx = 1.0;
		constraintsConfigurationPanel.weighty = 1.0;
		constraintsConfigurationPanel.insets = new java.awt.Insets(4, 8, 1, 9);
		add(getConfigurationPanel(), constraintsConfigurationPanel);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}

/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		DeviceCapBankEditorPanel aDeviceCapBankEditorPanel;
		aDeviceCapBankEditorPanel = new DeviceCapBankEditorPanel();
		frame.setContentPane(aDeviceCapBankEditorPanel);
		frame.setSize(aDeviceCapBankEditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
	}
}


/**
 * Comment
 */
public void operationalStateComboBox_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	fireInputUpdate();

	if( getJComboBoxBankOperation().getSelectedItem().toString().equalsIgnoreCase(
					com.cannontech.database.data.capcontrol.CapBank.FIXED_OPSTATE) )
	{
		setDevicePointComboVisible( false );
	}
	else
		setDevicePointComboVisible( true );
		
	return;
}


/**
 * Insert the method's description here.
 * Creation date: (9/11/00 3:35:21 PM)
 * @param visible boolean
 */
private void setDevicePointComboVisible(boolean visible) 
{
	getControlDeviceComboBox().setVisible( visible );
	getControlDeviceLabel().setVisible( visible );
	getControlPointComboBox().setVisible( visible );
	getControlPointLabel().setVisible( visible );

	getConfigurationPanel().revalidate();
}


/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val) 
{
	com.cannontech.database.data.capcontrol.CapBank capBank = (com.cannontech.database.data.capcontrol.CapBank)val;

	getTypeTextField().setText( capBank.getPAOType() );
	getJTextFieldName().setText( capBank.getPAOName() );
	getJTextFieldAddress().setText( capBank.getLocation() );
   
   //this code was never here until 7-18-2002!!!
   getJComboBoxBankOperation().setSelectedItem( capBank.getCapBank().getOperationalState() );   

   //if the bank is not in the list, add it and select it   
   com.cannontech.common.util.CtiUtilities.setJComboBoxSelection( 
      getJComboBankSize(), capBank.getCapBank().getBankSize() );


	Integer controlPointID = capBank.getCapBank().getControlPointID();
	Integer controlDeviceID = capBank.getCapBank().getControlDeviceID();
	
	if( Character.toUpperCase(capBank.getPAODisableFlag().charValue() )
		                       == com.cannontech.common.util.CtiUtilities.getTrueCharacter().charValue() )
	{
		getDisableFlagCheckBox().doClick();
	}

	if( Character.toUpperCase(capBank.getDevice().getControlInhibit().charValue() )
		                       == com.cannontech.common.util.CtiUtilities.getTrueCharacter().charValue() )
	{
		getControlInhibitCheckBox().doClick();
	}

		
	if( getControlPointComboBox().getModel().getSize() > 0 )
		getControlPointComboBox().removeAllItems();

	com.cannontech.database.cache.DefaultDatabaseCache cache = com.cannontech.database.cache.DefaultDatabaseCache.getInstance();
	synchronized(cache)
	{
		//java.util.List devices = cache.getAllDevices();
		java.util.List devices = cache.getAllUnusedCCDevices();
		points = cache.getAllPoints();

		java.util.Collections.sort(devices, com.cannontech.database.data.lite.LiteComparators.liteStringComparator);
		java.util.Collections.sort(points, com.cannontech.database.data.lite.LiteComparators.litePointDeviceIDComparator);

		int deviceID;
		boolean foundDevice = false;
		com.cannontech.database.data.lite.LiteYukonPAObject liteDevice = null;
		com.cannontech.database.data.lite.LitePoint litePoint = null;
		for(int i=0;i<devices.size();i++)
		{
			liteDevice = (com.cannontech.database.data.lite.LiteYukonPAObject)devices.get(i);
			deviceID = liteDevice.getYukonID();
			for(int j=0;j<points.size();j++)
			{
				litePoint = (com.cannontech.database.data.lite.LitePoint)points.get(j);
				if( litePoint.getPaobjectID() == deviceID )
				{
					//The possible point types and device types for a Control Device on a CapBank
					if( litePoint.getPointType() == com.cannontech.database.data.point.PointTypes.STATUS_POINT )
					{
						getControlDeviceComboBox().addItem(liteDevice);						
						break;
					}
				}
				else if( litePoint.getPaobjectID() > deviceID )
					break;
			}
		}

		
		//we will not have the selected device found, so we must add it manually
		com.cannontech.database.data.lite.LiteYukonPAObject usedDevice = com.cannontech.database.cache.functions.DeviceFuncs.getLiteDevice(controlDeviceID.intValue());

		//usedDevice is null for all Fixed CapBanks
		if( usedDevice != null )
		{
			getControlDeviceComboBox().insertItemAt( usedDevice, 0 ); //put the selected device in the first index
			getControlDeviceComboBox().setSelectedItem( usedDevice );

			java.util.ArrayList pts = (java.util.ArrayList)
				com.cannontech.database.cache.functions.DeviceFuncs.getAllLiteDevicesWithPoints().get(usedDevice);

			for( int i = 0; i < pts.size(); i++ )
				if( ((com.cannontech.database.data.lite.LitePoint)pts.get(i)).getPointType() == com.cannontech.database.data.point.PointTypes.STATUS_POINT )
					if( ((com.cannontech.database.data.lite.LitePoint)pts.get(i)).getPointID() == controlPointID.intValue() )
						getControlPointComboBox().setSelectedItem( pts.get(i) );			
		}


			
	}

}
}