package com.cannontech.dbeditor.editor.device;

/**
 * Insert the type's description here.
 * Creation date: (4/4/2004 11:31:17 AM)
 * @author: 
 */
public class LMIExclusionEditorPanel extends com.cannontech.common.gui.util.DataInputPanel {
	private javax.swing.JLabel ivjCycleTimeJLabel = null;
	private javax.swing.JTextField ivjCycleTimeJTextField = null;
	private javax.swing.JComboBox ivjImpliedDurationJComboBox = null;
	private javax.swing.JLabel ivjImpliedDurationJLabel = null;
	private javax.swing.JComboBox ivjOffsetJComboBox = null;
	private javax.swing.JLabel ivjOffsetJLabel = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();

class IvjEventHandler implements java.awt.event.ActionListener, javax.swing.event.CaretListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == LMIExclusionEditorPanel.this.getOffsetJComboBox()) 
				connEtoC2(e);
			if (e.getSource() == LMIExclusionEditorPanel.this.getImpliedDurationJComboBox()) 
				connEtoC3(e);
		};
		public void caretUpdate(javax.swing.event.CaretEvent e) {
			if (e.getSource() == LMIExclusionEditorPanel.this.getCycleTimeJTextField()) 
				connEtoC1(e);
		};
	};
/**
 * LMIExclusionEditorPanel constructor comment.
 */
public LMIExclusionEditorPanel() {
	super();
	initialize();
}
/**
 * connEtoC1:  (CycleTimeJTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> LMIExclusionEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (OffsetJComboBox.action.actionPerformed(java.awt.event.ActionEvent) --> LMIExclusionEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (ImpliedDurationJComboBox.action.actionPerformed(java.awt.event.ActionEvent) --> LMIExclusionEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
public void cycleTimeJTextField_CaretUpdate(javax.swing.event.CaretEvent caretEvent) {
	return;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GB8C005B0GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E13DDB8FD4D4D7FA7764A40DEDF33636A5BD2635898A09282898D1090B71CF70EFD00C15C63336A53BF4571CE3D25BFA3A34354D03E194A3AA0AEEB451DD12E884A58484F7A981644FB8828E48C68494327218F96060E3E6B2731081D17BFD773E7B5EE3F88FB0A73B1C73795E7D5DFB3F7B5D6FFE5FF73FFB5F489D7DD530B9B965A847A51BB9796FB7499C97D144F1CF1EEB7E02E1794F471BB84D5FA7C0
	0739FD8529702C003A34CD71268C6E09C7E9D0EE02F26E46F85307701E49ED7EA436GDE8C4689053A361C3E4C514739F8090D3317144D675261F990289530A120B54F6378274E9D1771E0A89F145F1112D3B8EE628B58266941F18D1E7E82ED578ECF8FD0EEB036A9BEF7D22E5F889836598E34DBEEFB945A6CA352BDD5D2AC37EB7F73B0EE573A0FD38E60D89A7E0C24E05AF7327C4C62C208A2CC5C21E35570ACED3C5BDDEEF7776659F9174B6D12847B1DBCC72760F0CAEEEF1E7CF088771CF6212444D6DFFB
	59EF977BFCCE376BB229EA64DD024825CDC559879F24913EA0BB0C95C430FFFB007A32413B83E8E8AA137F0D832532FCC1F743380410030672EF19CA655EBDD515BFFA36599CBE8D7973E4BD30DFA914A5A0AA4B0CF3CC161D5318AC4F8DE05B6C10F8D385D0EB8843BB869177C0F9A2D0F08813316CAC1331757EA2AE2933BC6510010CD1A1D4360490D546532551669344E616D7603A1F8C05F1011A007CC013012200BEA636BAF4699CBCABBB25EAF7EF2F5BD56971D4098EEF3D5BA10870DED282B5B27635E0
	F7FB9D9CC76D715103DC9DF998ED8C9DEE0BC8F4EEAD9C331F702F67F012D414E25619DBE47C2914C419C7D228BA372297D1EFDD8FD1EF4761BDD966CBF19F417D9A1C2ED5923185AC87C1DD520BCC4F2D8719AC3654E9DCC6C1C54ADE9DD9A62F3818527E9215C1FAC915056A78EF2AD0474100C783ED865A8114BE9D7CEABA53712ACB05E36938966C5F6B62456BFD1D9E5EABD575B9C5076015F55DFDEEB4DD6B916D5777587D28DE428A35EB34ED7EA5DD3DEC8BBB1DD2B31D6A23E33A2A97BA769C4331A7CC
	9FE99B8715B5BCC0FCA2E8BADDC31302FFC870D08DCE57768562DBD80E043A63E171A65AFEB3E9BF94C65B6FD578A4D07E9A1C7269A2B8A9C3DD460CF893DD5F7F33E0DC1420BC89A88CE899D08250EE200C19EC0D8FD7FCB9CEBFEA542CAF6D3B2E629770947C12172FF579A45EE5971AF92F136F94859FA737793B8A142DF3D83FAD443F6DB0469541A5F8F98922A3F067FB85B0A69FED73F645E1EC6395C8ED1333D70081FABD9C637BCE85EEC4A26F13EEF89C3CA428ADE87D3FD620CD5C631B01A3B040351E
	097A7AAB92F373615DB613692A6BB2E221D00ED674A2D69E0167D5B0EEC1ACA931B86DA8866F9DE0B6AABE4C0067C6E8BFE1D63CA9B59C749C4E7C733DD6E607168333395C78F2DDBBA47B53ECEAD33933836DF00070EF82DC828A820A1C4D76547FFD50EAE023CC1E317C85E55516D3B5E5BA46078F0D46C01BB50F53A783FD1B3DD33DEF36226DEE06F96D844A1843F4BF3DB20B5AE4956F931895DE730281898EF5A5E85B50AA5CE304FB02CB32889E416500971FEC83332A7629765965D6ECE79E41B1DED503
	817994FCD155E10A838F2D35337A25241E17A42F3333CF922E8B1264F4F52B7DD793D9FC43C221CF1E6B5FDFA1FBA94C318228D119EBE3F526464EECEE775DBECF93FA10EC2FAB493E6C0076C3F3587AE78EE20E952C14CF1132DA7F62GDBBBEC73B8F1F47CB17AD5E58C53774CDF9D632DC1162BB01B2378CF899E83F35B81F4F4AE1B37B8589A507E7B1769A9B206D61E6FF38CEA935596E31B2E33685BF423C55F261BAD235B6C6FACFAB6CB6B848B4E515D6F5278C00F8563225D6DF289449115AE9C4D115F
	EB42F9B8DDCE2945696896246B4EC1816CF7AE5A72EC92FBCB613DF1AE0B157D1F31D8F9FAF086376C76895D3CEA720B45A9E1F329ADC74FD5E3A515696EE53487C194FAC1D1556EBE17C471EFC9DC17F11F09E06FDD8B453E595583F611EC9AF5CD20CC2BD3909D39F670FCA90F7CCBB7156C9E7E9E6F4F7375034A7248FA64D5E36DE5FC4D497A620B72AC038CBF57BE127F6DEA8DE75BE82C3F4AE94E492772FEBE54C7643D5655659324BA5825BB5DD5EEFFAECF341FC79F0D02374B6D6D959CC460BC3EDF12
	D9D6126AF1085B65748A35AECF9F938F84A8106DBC135BAABDA4B25476FAC4A70460BE3AE57FA1053940E4796D7EFBFF10755311A11F6DDB7BEA515E36019D6E84CA0BE0317C5D4BD84FE2393CE1D53BC5113A8A540991448F9E9E5558F6D684BD979FD46A370ED1EFFEB4FAFD01E1BD1573ADAB6696BE615BBE81D2B65CEC2E8A83AC6F329E8928EB6645BEB51FFB473A9F47516CD3945FF6C55F87FFFC8577263B8A7F1FDE5943E1DEC6F952189141A3CF0F57598B5BBAEE3C7279FF5BB96D79BF926601F7853B
	6019B6AF5EC47B7E3C8C6FAE0C4E591173104F097B6C0EA08B4A45C02D73A82F20F9D4AF345DB6259D77B26464C045AF6B358B9EE26D7CD0BFC927DD444B58AEC6B95FFF29E0BFA2580FE063F8AA151DDB6AB334F7938EDF01EE8CC45A75B2651FB6BF70BCD7DE07FC3381AF1E4F6C3123C61BDBD47AFCEE3B13F82E3CE607EA357111E2C7EBBF00A7D83F8F4EF68E414F567D23DA149573ED991657EE5679B2EE6479012E81CB5D2A7B0943B5392BA1652F815329D6360FE627504FB1BDBC30EA6FB8228FFD1E32
	5FC08FB6F97E22C68F5B3F0AB6D3191EAB41F32B5EBD0D1D8819575D674C6B131C18587392CF5CDCFBAFE3BD0FFA4131436733BB0F3537503E93213C9B68E8E43C091E3F2A6E274B3A48854C81C4FD7019B62D8FCE092479DB8CBCE99C1BF19FED62B1A3162C73181CA3F40D82A2945363344C8AF95C58B9533852C7FBF56FE1A69EBA1C32A5126A0FDB206AF14727334C5CE733647BA273901B1F8D5ABC39004DAF27D0BB3F6885F4FE098B587C44A188595C63EF8C6CDC3BD699B789F866AFE463267B75463D33
	106593AD97343E34AC610C21AF8DAD24F31E34B05017BE35617A07833EECA17325E7EB8FEBFC69EB30DE5E558D51CF49596ACCB44E4965ABF5E69667B836EF5C2EC759B7834F1DC0E90B62CDD9C0950B58989B6A463CEF396C9F653E656AF9F6F75131C83E77D924667F9361FD8AD0048623F78B15EDA41FDEC46F968EA8F8A34137EBF03AB6F14497301C9E95EF72C7317C3B66FE605DC9E254707387774A70B26D57BC22DFDEC079F4C0BF6A87E732CFB2BF5738CDC9091A92D0FFFE2DADCD6ED37A8ABB73AFE8
	A077A3D01E8494869483349DA8F5F13CA9FBB1DB13D3D775625B70B5B18AEE6A79114EF37F50F7534F09917D8275D333D8CFBF5D62477A7AE1091B9C6FBA8A59BE5531182DE55CF714759F4614F5F2002CD406EABF13A1E2B1DBA32E91316DD0CED256E3706A810D9FB63A1DAEC9714133B64CAD5CDEE737534530DC02595DDEF20821D8F73D71794AD52FFF3E126A754FD70375235F99BCD1EFF47E22677BCE3257247DB05EF49A08E27DCD0895C35926E0C9B79073C0F922021DE8A1F18A4AB18A9656005896A8
	6F7CA1DB4BABED18C725C64398C095C08E2089C01323D91BE65286F32363F2CE938DF55B00F6ABED62EFF5842CA572A2EB9A2DFF4F60B0403514AA37B9AD4BC4475AB9E2ACF656BEE040A7703EC90F58DD857A876E6F278836769707489A7AFC020FB8B3E685F25D4F24E31C4EF937016F95B8F6A6F9F4FF1F5C6632642EAED0FCE1CD1B5EDD7249A5F43E79CBC66AC63EE7EAB0364FD58D7A76995B00FA71397B3CF6A150867F316138D227C627DAC96845E950B6BFA37DA55E8BE776407E6F117E344E287F4F9B
	0C6C1C6A28EAC82B238B0A0E0442516E7AADBABA227C76BC5072ABD4785578C76357EA28F3F3A36EF1FE253C0F14871471864E23FEBCDE21CB7042290EDEEBF021CB50677E027830886F7EA5AC7F79C193469D119FF077C100AAFD955B19EEE84FB35B31AF6027DF25B25118BD2F9F6D324B4B77027A2EFB84BBF7FCA976BD544C7ABE896DA783C581ED81CAFA150D195F02FD212333372F17C8C8652BA1F122837808CBD95B258D24AD6F8FE87BA6099F1321DD2852F6F9A91EA3F4CE5C32EE1688E82F81B794F2
	5D318FD0EE231B835A664BCF8E8D63EF63BBA19727F5F57D69AAEFD2C171527EE3BAFCE9CFF68E5E78EBED2E38F1A94D95F7ADE53964559E3D7A34E52C7EED1FDE7D49E5AC567E9349AB7221DC21E016F69627ED8AB6D44830A98AF65B4F309D0015AE47EF696FC0864F6CCDEC4A0227CB684FD212E58B684605A75C6C420B7939D9053F4E4F21B9EFF03FB667AD7E603CE14EBBE1B93535A079198856CE6D2E20E3D8AE05831614DC71BA9DD5FC370DD8B15D27F348BE043CE3173333D14B8DDC235495209B2022
	95AC9777FF4E4EF361AFCD63EC93AE69FE33CEE87ABC4536024A63D9216662452551E6BA6645E6B6E6B854A72EC04C5E2CDD9B54599BA9B45720754F8E2B4758043FCFD06BD78F2BC7F9178C6B7F1F436AD1C767657EF4EE2F1FE1F35B7DFA84A7AE784270FBFC6EEBF4CE0D72539F77915734F516192E793E1B6A1A7FED43F8561C764B3D25768B3FB5CA3FA26CD7847D68BA7FFB57F1CEB7A7A42EC3755DDB4C4E3F93DFE33F8FF82207E14B946C3844302457D82C780FB63C6F11A0C2D0B95B5BD0CEC78C36EF
	EB376868C72BE3130672210F856818DC578A6F73E59DD3FEFFD9B896BFAD4F70GFE4B60FD697B6F3F2F723B679F0B5FDE8D3F58GFE899AFE54C6625A34FE19715747D2128DECE4C70C7C1B01184033E88309A739AB63CDB5ABD98E1C570236584C770C3CED8130516B7688DEE900226476CE5E9B73EEBC6EF7F5FA8EFC1D78771D15749C182C601B89AEE9F0FABE7C66867BEEB3816A92D732FC7EFFCA5176EAD6C17E89B4849484948934F1951BDBFFCBBEB746F92B496D31C1F2A4EA52EDBA3F12666F763B01
	65FB19AFC7AE1E49C57D513B49C677CE092B687A242E264F0C8D9F911C4EEFD2B94E2F886A9A01A420E700020122D63379ADED49257343652914A45EFE075C3E31496105188AE382C06766ADE6F30BDD2D66B089727BAEF8262D01783BA670BB6E53BD2CDF3E264EA23F3742D3841AB0225FA909758B525405496F51705C881428297B95199F1CE5B876377352C88CE28F098B2E8ACE517F5B69CC7FA7E705F016B75FCD7E4CC07FC972F8B5EBD5BFC90CB01B75462663EC29648CE42375997813AEF97D1610F73A
	CE41EDE7B8839F03D52A0350F92D33879261A63EDB69F33D9DE5D2F2E06AFAF25D2DF65CCF703B1813971D03A4DD398E8DDD5DD45FEF5C60945D3F25F9375FB07A8E7FFD909DE36877BA861D7F1EB263B34D01B27DB3CDE6197E197BC459685FB4BFA9B37E2619DD267D26C957FD1D8557E68258549420E5C01B01362FE5BE3B306CD30E782C0E3FDEF6F463198AFF7DA231711FABB71EEBF079583F1919D10EF7701DEEC9F277A2FF064FAD4775125C9E82D2AC329CF564F5F65F11E8D399DFDCCE4EA4C29701E9
	4E7947E4DFCFDD97EF4ADA477250BF49C42C884A96857B17CC161BB6AA58CFEEA2968C65A8856B37323B06D885FB3E070D1120E02F1CC5EC9714D3DFE758AF335998998A66FB4478F5A858EF2A5838120295C9EC0C098A76E7E508CD01F238026DAAE3E3C4A9585B9D0CDFDAAC4316FE4546BD994B762AECAB668279D03681F900A682CD810A84DA83348DE8A7D05AFA50A7D091D08DD0BB1088B481A8E8BD33217995B9C67184C0B951A606646535F7DA1BC679AD40D64B583674E38B794683B650B460E1E7FD8B
	39A7A3E7AA56EE07A5C341EAFD0DEE1F93A3944D69020B0D4F3E2F901B8A03F9C62EE7B960544C61B9E0EA8D46B31AE36DB9BADA0EE58AA00BA647427DA0E13D1AEB50317E6B267E197748AD14EB8734CF8222D8B03157539B62CD799B98361A58EBBB146FECE072EFBCBBDC7E32DAD57E0B59E349EF9EC57E208D2A7CF47CA9446603818FD7E46AA0B63F854A098A768D31790CB83051B8A667CBE543657C67BAD54E7D65E34939F794B9EB6282657C00A73F97873CA30E49341D784DB3D01E9C476C3C54EAEC2F
	5556316D55E6550FFDDFDBC7463E962BFE6C7B462A0DFD946B34623AF4031F35AA6D3A956C26020904A7E2ADCE07F4C7413DC4AE44EB849C1061FEA2D7BF41DAE56C01863B496E012D68F3B065BBEE659E7AE9AB2EDF17D394E979CFC99B278BDCD05147A4A2235343EB64FED641D0EE3A76E9B6CE7109C719186F981C878B728BF2338A0AF264FE676BB905C7C3034AC3340E1F47375754FEF9BD636F3725D16DB7676C787B7D77EFD519FFF9DD6511DBB5FE9E15CDEA3F985F787BB9EE287D1EAC9BFF3F271BD5
	19E73628BCA23F9ABF0F752DEA3F21017174237F2F23694BB8F06470F7B9334F4B9D99593E7287DB5F8C3FEDB91A422554F2FB6E903B2D654C7D68GFE8FC481F003645F793E6570E7C00125D8209592376FE29684E14846FCB046A1E50CDAE24C89778ACBCCBF89B125F029B0GF56EDAAE95BD9446715271CC605CB89A47BE7C62A678A999479C0026AB68E6ADAAF17B49A5E2965EA216C85CDEFAED88EFC7640B42ACF6D3D81245A6C0622120B04468051AC54FBC2353E6349276BF2C691F719D7AEF9DEFFF79
	6C1473C8FB471074D43A615D1FED137C1B77CD01F78C5C8512BB819E35C979DDEA817E07A223734F75DEDE94A5DE3CDB69F260D928EAC092547C5BFC81797BD89B39125625DFC039FBB4FD7E9FD0CB8788C104E1B96392GG58B4GGD0CB818294G94G88G88GB8C005B0C104E1B96392GG58B4GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG9D93GGGG
**end of data**/
}
/**
 * Return the CycleTimeJLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getCycleTimeJLabel() {
	if (ivjCycleTimeJLabel == null) {
		try {
			ivjCycleTimeJLabel = new javax.swing.JLabel();
			ivjCycleTimeJLabel.setName("CycleTimeJLabel");
			ivjCycleTimeJLabel.setPreferredSize(new java.awt.Dimension(101, 14));
			ivjCycleTimeJLabel.setText("Cycle Time:");
			ivjCycleTimeJLabel.setMinimumSize(new java.awt.Dimension(101, 14));
			ivjCycleTimeJLabel.setMaximumSize(new java.awt.Dimension(101, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCycleTimeJLabel;
}
/**
 * Return the CycleTimeJTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getCycleTimeJTextField() {
	if (ivjCycleTimeJTextField == null) {
		try {
			ivjCycleTimeJTextField = new javax.swing.JTextField();
			ivjCycleTimeJTextField.setName("CycleTimeJTextField");
			ivjCycleTimeJTextField.setText("5 minutes");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCycleTimeJTextField;
}
/**
 * Return the ImpliedDurationJComboBox property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getImpliedDurationJComboBox() {
	if (ivjImpliedDurationJComboBox == null) {
		try {
			ivjImpliedDurationJComboBox = new javax.swing.JComboBox();
			ivjImpliedDurationJComboBox.setName("ImpliedDurationJComboBox");
			// user code begin {1}
			ivjImpliedDurationJComboBox.addItem("0 seconds");
			ivjImpliedDurationJComboBox.addItem("60 seconds");
			ivjImpliedDurationJComboBox.addItem("120 seconds");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjImpliedDurationJComboBox;
}
/**
 * Return the ImpliedDurationJLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getImpliedDurationJLabel() {
	if (ivjImpliedDurationJLabel == null) {
		try {
			ivjImpliedDurationJLabel = new javax.swing.JLabel();
			ivjImpliedDurationJLabel.setName("ImpliedDurationJLabel");
			ivjImpliedDurationJLabel.setPreferredSize(new java.awt.Dimension(101, 14));
			ivjImpliedDurationJLabel.setText("Implied Duration: ");
			ivjImpliedDurationJLabel.setMinimumSize(new java.awt.Dimension(101, 14));
			ivjImpliedDurationJLabel.setMaximumSize(new java.awt.Dimension(101, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjImpliedDurationJLabel;
}
/**
 * Return the OffsetJComboBox property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getOffsetJComboBox() {
	if (ivjOffsetJComboBox == null) {
		try {
			ivjOffsetJComboBox = new javax.swing.JComboBox();
			ivjOffsetJComboBox.setName("OffsetJComboBox");
			// user code begin {1}
			ivjOffsetJComboBox.addItem("0 seconds");
			ivjOffsetJComboBox.addItem("60 seconds");
			ivjOffsetJComboBox.addItem("120 seconds");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOffsetJComboBox;
}
/**
 * Return the OffsetJLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getOffsetJLabel() {
	if (ivjOffsetJLabel == null) {
		try {
			ivjOffsetJLabel = new javax.swing.JLabel();
			ivjOffsetJLabel.setName("OffsetJLabel");
			ivjOffsetJLabel.setPreferredSize(new java.awt.Dimension(101, 14));
			ivjOffsetJLabel.setText("Offset:");
			ivjOffsetJLabel.setMaximumSize(new java.awt.Dimension(101, 14));
			ivjOffsetJLabel.setMinimumSize(new java.awt.Dimension(101, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOffsetJLabel;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param o java.lang.Object
 */
public Object getValue(Object o) {
	return o;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getCycleTimeJTextField().addCaretListener(ivjEventHandler);
	getOffsetJComboBox().addActionListener(ivjEventHandler);
	getImpliedDurationJComboBox().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("LMIExclusionEditorPanel");
		setPreferredSize(new java.awt.Dimension(350, 360));
		setLayout(new java.awt.GridBagLayout());
		setSize(350, 360);
		setMinimumSize(new java.awt.Dimension(350, 360));
		setMaximumSize(new java.awt.Dimension(450, 460));

		java.awt.GridBagConstraints constraintsCycleTimeJTextField = new java.awt.GridBagConstraints();
		constraintsCycleTimeJTextField.gridx = 2; constraintsCycleTimeJTextField.gridy = 1;
		constraintsCycleTimeJTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsCycleTimeJTextField.weightx = 1.0;
		constraintsCycleTimeJTextField.ipadx = 89;
		constraintsCycleTimeJTextField.insets = new java.awt.Insets(34, 5, 12, 116);
		add(getCycleTimeJTextField(), constraintsCycleTimeJTextField);

		java.awt.GridBagConstraints constraintsOffsetJComboBox = new java.awt.GridBagConstraints();
		constraintsOffsetJComboBox.gridx = 2; constraintsOffsetJComboBox.gridy = 2;
		constraintsOffsetJComboBox.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsOffsetJComboBox.weightx = 1.0;
		constraintsOffsetJComboBox.ipadx = -33;
		constraintsOffsetJComboBox.insets = new java.awt.Insets(12, 5, 12, 116);
		add(getOffsetJComboBox(), constraintsOffsetJComboBox);

		java.awt.GridBagConstraints constraintsImpliedDurationJComboBox = new java.awt.GridBagConstraints();
		constraintsImpliedDurationJComboBox.gridx = 2; constraintsImpliedDurationJComboBox.gridy = 3;
		constraintsImpliedDurationJComboBox.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsImpliedDurationJComboBox.weightx = 1.0;
		constraintsImpliedDurationJComboBox.ipadx = -33;
		constraintsImpliedDurationJComboBox.insets = new java.awt.Insets(12, 5, 212, 116);
		add(getImpliedDurationJComboBox(), constraintsImpliedDurationJComboBox);

		java.awt.GridBagConstraints constraintsCycleTimeJLabel = new java.awt.GridBagConstraints();
		constraintsCycleTimeJLabel.gridx = 1; constraintsCycleTimeJLabel.gridy = 1;
		constraintsCycleTimeJLabel.insets = new java.awt.Insets(37, 31, 15, 4);
		add(getCycleTimeJLabel(), constraintsCycleTimeJLabel);

		java.awt.GridBagConstraints constraintsOffsetJLabel = new java.awt.GridBagConstraints();
		constraintsOffsetJLabel.gridx = 1; constraintsOffsetJLabel.gridy = 2;
		constraintsOffsetJLabel.insets = new java.awt.Insets(16, 31, 17, 4);
		add(getOffsetJLabel(), constraintsOffsetJLabel);

		java.awt.GridBagConstraints constraintsImpliedDurationJLabel = new java.awt.GridBagConstraints();
		constraintsImpliedDurationJLabel.gridx = 1; constraintsImpliedDurationJLabel.gridy = 3;
		constraintsImpliedDurationJLabel.insets = new java.awt.Insets(16, 31, 217, 4);
		add(getImpliedDurationJLabel(), constraintsImpliedDurationJLabel);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		LMIExclusionEditorPanel aLMIExclusionEditorPanel;
		aLMIExclusionEditorPanel = new LMIExclusionEditorPanel();
		frame.setContentPane(aLMIExclusionEditorPanel);
		frame.setSize(aLMIExclusionEditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * This method was created in VisualAge.
 * @param o java.lang.Object
 */
public void setValue(Object o) 
{
	getOffsetJComboBox().setSelectedItem("60 seconds");
}
}
