package com.cannontech.dbeditor.editor.device;

/**
 * Insert the type's description here.
 * Creation date: (4/4/2004 11:31:17 AM)
 * @author: 
 */
public class LMIExclusionEditorPanel extends com.cannontech.common.gui.util.DataInputPanel {
	private javax.swing.JLabel ivjCycleTimeJLabel = null;
	private javax.swing.JTextField ivjCycleTimeJTextField = null;
	private javax.swing.JLabel ivjImpliedDurationJLabel = null;
	private javax.swing.JLabel ivjOffsetJLabel = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();

class IvjEventHandler implements javax.swing.event.CaretListener {
		public void caretUpdate(javax.swing.event.CaretEvent e) {
			if (e.getSource() == LMIExclusionEditorPanel.this.getCycleTimeJTextField()) 
				connEtoC1(e);
		};
	};
	private javax.swing.JTextField ivjJTextField = null;
	private javax.swing.JTextField ivjJTextField1 = null;
/**
 * LMIExclusionEditorPanel constructor comment.
 */
public LMIExclusionEditorPanel() {
	super();
	initialize();
}
/**
 * connEtoC1:  (CycleTimeJTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> LMIExclusionEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
public void cycleTimeJTextField_CaretUpdate(javax.swing.event.CaretEvent caretEvent) {
	return;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G01C306B0GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E13DDA8DF0D457F516D37FB0091CB8AE35C94BF4DCD0DA5548AEF664B14EA82DEC6344CE549A275811DBE6CADBBAA50E7148A9B3268D352F846B95E6750704A4C0184588348231C8A08848927A59957AE19DC9E68D824BB1CF3BCF5AA7D63B4B6E1334F2E85DF36EFD773D2755FB1248A4554C613D7B5DFB6EBD775CF34EBD67AD246C40C3165C3CB2C2F2ADC4797BE5AEA10B9B88D972E92107E3017C81AB
	517D9D84AAA1AE67F6F846212F7A5C003518345C4A07F6B234BD3F9C30D640FBA9F965C03A93DECC56C9063E2F7EE00BED6EF56C4DFC9DABEDFF379C998A016E83AC9DF9F6607ABFAE2FD470EC408A15F7245CBCC2B2691848D8258EF76FE0639643B395487F9E0E59D4DE257467C39B47586159789E9B6B01678EAA5DDDCDE715F1C35FCCA51BFF38AF2FG57524D4FA9CD61DD23BC6DE4B9D544B6D2345B854F667E9B2367FD61F127CF880542A1D974851C7EE151AF496128D3F97845C949A7B6B5F9BE6A690C
	7B0293B1A99C6A24DD7DC2C88C12361DA87B83E379F4DE109D5AD994AB3C017A3A935E1782256F64723FD4502C483778C6AAD93F3C50D47EE29B133B5126491F7108453241067317D75894BE995AE9C0CC16DFD7F0D99C85DC161FFD09E32FC3BB8EF41F0AEF89A01E8A6DCC206C82AEE3CB8D17F170B7CF12AD4367730ACCE44CA9E032D596EAB2460FE4D876D01BC9EB41F377C2DF9CA899E8A5509A209C20FD54D6C71B0F4233FDD8F6054747432176C824A3680FFE94760BC1F8EFEA029E857BD8740523FEC2
	18BD7E49D81D01BC1C720BE65AA2925B5B95426DA76D63C709ACB766D98C76167E727E3CAAE50E7AA2EDEF7EA2545BD768597643BB72A1BF436F25F82A8EE7E7D5C6F1ECE7C01F3D186BF930104B62593E0C94B73465D98DE4D9724C693CBB0B198CCB0BB5D9180E6FEEC59DBF8F7886202DC0E5A560B7C05E922E63471ACF4D27639E307FE8C888DE1A980E88D139E3C28A7A4528226B2A0A39F4EDC40C6F68ED73B13D241E521F513A6F349A6AE5DDEAF5DE240469E3D109269736364FF46D54125936D1281E61
	3729CFE41430B35C2662FFC571AC9D4E4E76CD6ADB58DE87FDED3BA01E5171C1897114DD0973CCD2BCFDD762BCEF8778BC2B214FD1BAE0E567DB5D0EF1B1995A29C019C059C0DB004A4AE0DC99BF632D4DA79668C77D3A73E53CCF341443D30C4BD121A794130510CF3CACC4A5E1B8A84608B2662FDBD02F43B3781E257E6D03B53A44109895E4080EB03BB0AE02B14558182C16929C9395E92FD79A97E101718861732EEDA905E7D008491FC47C02ACEAA3D87F3A963409C961B24C889340FB3C8C7575B80D395D
	706EAF633A9A68C0AC835AEBD53DDCB93F8B1E97413845E0D313DB722198C2F41A5B68229B48339146AF594D7D720DC1EEFF6E02C7C85D4B678D6D8F292ADC09516509767707F45EA140EF1573BBF46F0DC1931B447597629FA8635CBEF74AF40DED8B74C14B9CFDCC4FFF63C2DBDD8A7BDA8514DD4EF5FD7FF9BB33418EA1A6F22B6B0B024108FECD73EC6CB7DA71CE91A745106C96A3E2488FAFB1654C9FE85D215963C8D835152594477864820309297832569206439CFA6B667D8F53FEC11623527004ACDE92
	E5D98A0DEA7C0FD3D9E2B3C2DFCC596B53EE5CEB8E6CB13FE240DAD941777AE1DB294E2EBC61700D090897BDC6314FAF68BDDC87635D957C7CD784B0278A286DA7E8DB6BFF6BCBFEF6B866F6626642E37265GDFE32176F07BEBC4A55CD72E5A3EC55B496ABE37CB0344581FFEF7B26C27EB7CBE76D8285A0D335D5C06CF379B5B70076D46B65C5EBE370D76349B59A86B6BEFC71F8DCF05F4B67FC9BB46BDDFB89492296329AC046540EFF8F19FD2C8122FC87ED1D13EA4FDA1429DD601367B820D2D69707EFC85
	0F09D307F8CC2C7E62AFC96667FB8C7326A55FBE1BE72FD4E2E225969319CC17BB50174420B88E0AF205A7C2B24307E85CD67058B60A3D5117023C8E5734AFC8AF05DEAFA87302A4867DF5BE70F459C97FE51706E3CC1894624E5894284CC94F4369425ECEFC2D359FBFFE5EEE12415779E64F7F39CBB733E72E29BF2C3DDCDB4F649D58B9797FA26F089495FBC21189BE93CA40637266CE542F97749EGCA2A6431AA3B837BF92CD28232AB9C8CB253003E8D15F86E4F5DA8531FE5A52B738A557EB7CD7B59BA4F
	390A51C6451B93A22490988CAF0A53BC8FF06DCA683BAC84A7347CE22DEBA7BC033AB84A709F380DED66EF5D98D3EE28733F64FE17E01E4066E4B63ED240B9A3D1E99C2E9D3C9814FA741B957AFA34EE8F5CE1300FA0BC1300986FDBADD8CB1B55FDF5FBF11EC7A4DE33AE813E15C0EB1439ECFB19DE62F45CFA35BEBC21E2EFD16C9FA1D85D351D673D9F956BEBDBFF2C41504710B21479576CCD2C87EA3BF05E9C4049BEFE7E97BB75F7D5FBAC9676C9B49DD3F47CDF1DFA7FE358BB1D6F41932CAD863501DF0C
	73F332DCC0D9B1DFD3E0C557AB0E35105979A75399CF85DCD354403DE197240C5DF054AEB5BCDD1644A9427570BF9774B5F2C651113C1DA6FAA85B27441AFD1A9E1A217EE4B2FD2B896B9E23BA5FC705F40ECEC84E89D94244D010856AD67A3A7E97748E473565FD3CE6BE53077618866D55C06B00D87E7E0A44EB3C4D0055D581CEFD66BF7B74BE632FE279C0B2BCD95CE899C31B384D882168FCF56DAEF6C68991016BF1D9E91B32EE56234BC87317D643BAFED1D1C95EC3D5CCFF4FD7E9FAECABD8E17182A9F5
	73C93DEDE62EBFECEA1BE57B599C0E7D0936D950037AF483BE381F5BE65205921DEDC20D8F6547A8F83FFA47F6EDE3FE2E34CFF6D9381F939E77BE69C59D87E14EC5C08F812D824AD657F82AEB5E7A37B3BEC77DCBAAF9AD39C559136DFDADBF3343FBA3D0378EE3355E2354D6065EE735DE010AFF0F62C9BA1C59D0B345311D82FD4587F83E34CECA2CE5EF9D18199FAEC9E8B33E57E671B99363C8829F332B430EAA6EB7BAB3ECEA522EB4669F757D798A4F5A833C86DBF191F9EDF628CD015A00060012001682
	E55A791964F79B450B19E7E296AC347C1E2D79B38F4A319E664ED167973B8BF4F6559F16C232EAD33BFA702E88C725D1A944318A0A7942D11AC4B16C33DE737C4E5FEB1C5F0D759A67F7115E39EB14F82FD97E476A090ACA5CA3B9B8E02D82E2587A9A446A216DD6B1219631G3413D46CABC791CB01F6060AAD235F0D57C0FB63C1EEE769FDF8AFEE45B5BE98301E856A87120112BF60E31E25E3702ECB81ECB55086206D07862C550778180E3E6B86F1818967B3422B14B54C72ED1481654277334AB83656E726
	EB6DB041AD0A0F192D3513E8F503D5F96E27588B65C5748CE3B1B1C60D93EF8D256F5F655D44A05F7E15B0AEAA73151252319D4A18CEB96CEAD077F03A5F68DB157B905B67602159FAD13E5BDCB4374F0C0B4676794CC55CFBACBC91750909B6784245CA35CF73369ED99C47ED30B1BF267C3290051AA1117FD54A4F7A4C787F65625CF5CE0E87E3E2DCEDEF266DE9D5074ECADCBF9295C744A8E4312CECA1A90750263B280F8461BDFE085F2FEF5520DF8705697084840066EA7AED4E214F7FB6A2AF605555CC4F
	AC86BEB605F6B0929546C13CCB9151C7AA8FA3EF3C16735E896317G2D824A865AD24D577C56D16485C6E9FCE21CCA4864FB0C7A61F518A7F8180FFD6A969DAB4493463EC47DF3890CCBD147BE5D0CF91CC105216866444122997D9EE198F2995657BB05F7CB5F48C8CC14D987431B2750EEFB46A3C1C9743BA758C7BC05136B62BFA6B19754AD274CF94F7BBBE7608DCA1D60985267BCEB8E331CE773E11E93D9270D7A730F70FEE721D1FF155A5FE4B34A296A557E47EB0C7A5DC7F86C7350FBEB905A8195FB2C
	1F47CD993055C770B731351708EAF7AF5758619992276CF8A5BA05A95969869D0730B2F01CBADDDFE7BFF5263E1665CA8FCD69F325336F9DB34D1572EB184DD5A94F8DE075CC678D57E75C4138E0D3D3D7D472F788239EEA4D6C8E3E5F112F4C6D2D61B9EA26834FBA995AA9C099B53C060F9F61F9F55A1FAFA31E24D6435F1E56FB0F642DD56459D22365F04910D733B57F34162F5968GDBF6A016D52B57B96A6C25BC16EF307E37E774E38C405F99357E7A237AFE1477FBB37807E774230E0EA97CECEFBFBA4C
	773675C7ABC9700963263F2B25BB581E3215E77C453DA475599596F6661BBF514E7C41DB8BB9F346D7F1C5635B53B787DFA372B5821F62DBA31544B05722AE48747D79902FC30AEB796FFC6727B9562DE2E2A14712D46C260D67E82BD46C27B59C4B29653145570F75348C2E4C7653051F4F4850D19C7F777DEE83BD4E4C99B5F2GCFB350EEC57F7D707E9D651D1D550B1F6A7D23780FF767651A1CD54AD1F6C6AB0FA65692672E629EB6GCE0E711CEF0F97ED6232B0B63B7A8430BF9A0E08D1F91A21746B03F2
	7FBE68385D5F29D89E5FD80BFEE6BF467278DC95EF21F81D8EE7797D779D7CB75B33503774984F19472E218D10BA08F1C00DC09E20A05022BA3E37E1EFBD19A7DF7606A39EC886023A74126DEFF96DEF77BB5C53D66ED3695FFD182C3AFBD32ED99D3E340E1DCF0672AC7E3B3D94E77B7B6FCFF1FF2FC3DF7EF1280D015CC003C01163FCFF8FFB6B587E70F85AE5D970856857883EB97CC02041F8A1333D7907785E6EBC2E65C9CB1477B4F8E6822D5575B1BE57B4675B286B5B2A3C97BBA19FGBA6BCC649BAB64
	FC9EDD5FF565DD0667A220253378A6EDC6E730D299375AB9BB47E3FCEF549871E5AB63DFB760BBC07589F78B61FFB92D33B1D8137A795BF8444AF97F330D1FF7550A65447D13CD3907CC4E1B1CE06B761F507CF243CA0B723B7F4F3134D372372F8D9EA6A6BE89275A8BA12FEFF88C92C52FB02A721C3F0AF32AB9A2F3D5252F73AA5E83785DDA92025297B4DD398483C323CCDFCD35C4BBE35DFB16436CF7315F8531B57E6D773A865BFF6C1AF94E7F45B5631CBF691AF1CDFA773539F3712FDFB37F4D610F2E69
	FFF3E0677E4EF9BC1BC5E093A9C04F832D834AB941FD7C50279F906A63867E5D699F451A83FFFD16797A6F8E196F35E0E87E5F2C4B07B0EF9D8E4BF2F89C6767F855901E179C0ED010E18707D0C7D1E9B4A033218ADEC36F5E20B8C2E116AB7E06E2367A812B231E670F1186441A216DD131179BF8CEB928E22FCCA1168A6DCC95FB6D8A2F45572A5835E93E46C6957B0CFE5B5D8AEDDB83471E6962EBD42AD87D981FAF20E2DB9B783A37D46C0EC23E46FDAAD6D2CF3F95C0BBDD45A66B799A19AA56F2044FD7FC
	12E3CF5671F52BD56CDE1AFF1C05F6370A7D5C4667732A18056631A950CED731B1073A6EC9FED7FE560639C871A938C7007A0182C0370096832582E5G2D815A88C49A872CE5C08E20E6A08F50F5A039115B242B2556ACBE8128A45C54B023027E9B12F50E5F2F8BDB67374D0AD67A4D9DEC4ABB9DD1EA632AD67ADD0A56E8FC5C4156E2956B097507E392C6BC16335DBFE4DE8B2F20B63A887639381167F877B44C4C714EF5E0FCE4B95E6B8DF365F85B9228B9A1474BEC54F29D365626A9639A5892C73932E0FC
	B69043CA87915BFE9A5ECFF36C8F287DB7C33B7BB417DF6E1AA97FCD17A67F2BDD7349EF19C3FE7934A6BFDB7FAA7521A44013D5198E1FC4EC9534D72B58435407F2203DD51553D1BFD34E45EECD4EFB6B671353BA071C0EB309F20ED0BFEC843C6D8C17E9BD7543A03463E738CCA93619B2E5F7EAB26DA818AF3F576BAE654CCC19D61D5172FB36D615E366DA3F38202DF507E33E35747BDF1D30D636EEAD669FB75B4C7DB05EB63F9F5E51E6FCC75C53B67B0EC8EEB33EA36EEF535F918CFB308D77B28A71E3D0
	9D37D4452E2A581F51B9913BA27965000A7F85158B71EE91976478A3D42EA90A8D727F3F22432EAA5813ED98CBE04B01307ABDBB238D4FE5C48A86D9BB130E11C290DAD4FDBCC7E514A202CE6E9F2A984A4D4E747DEE221E3758007925C93D5BD05FD0E7EFE82CD5783E5FC354B9FE5A2B4D71CFD796BE074D23713D96DFB8DF6CA30D6F632E0573BD70ABCD66277A34B95E3C0DFD2F6B5778CA8A974E774E004677EE7D4279BE3824495C695566C82BDB789C815D37107D36057099559EEC2E2FDD4616F97FBF50
	6FA76C7F2FFF23AE8B9CBCED93314422E4576C755A3F7E6ACF52BEF71765113C9E72EE005AFD8F31CC218345A3909D400DF2FF9D3BC97E9767CCE8E581BD836E84D39729D377D09FD8BFF92AE95B3FAE5F16C736433CACA674106D6858B0FD14AD338DE282AEC20A15F805B9419E196C245FDD6D786135C9A6D67625955EF6A95FD66D7C63EA13DD26CCDCA29A78C45A32A86AC1B5212BD6990C192B057C3BF57C3BFF8B7E97F57C658B62A855A922C4C533F4E8A92BAFEB3F54FF7759F2174D743BE8609C2BABEF
	1DCB7C6E53F4025E41002FBD47F3382FBA0F93739A735238908C4AC270C6FB480F75E64734ACEAB5CE6B891CBF4647A81D2C6F428914FBCC4773FFD0CB8788D0498F358992GG3CB1GGD0CB818294G94G88G88G01C306B0D0498F358992GG3CB1GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGC392GGGG
**end of data**/
}
/**
 * Return the CycleTimeJLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getCycleTimeJLabel() {
	if (ivjCycleTimeJLabel == null) {
		try {
			ivjCycleTimeJLabel = new javax.swing.JLabel();
			ivjCycleTimeJLabel.setName("CycleTimeJLabel");
			ivjCycleTimeJLabel.setPreferredSize(new java.awt.Dimension(101, 14));
			ivjCycleTimeJLabel.setText("Cycle Time:");
			ivjCycleTimeJLabel.setMinimumSize(new java.awt.Dimension(101, 14));
			ivjCycleTimeJLabel.setMaximumSize(new java.awt.Dimension(101, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCycleTimeJLabel;
}
/**
 * Return the CycleTimeJTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getCycleTimeJTextField() {
	if (ivjCycleTimeJTextField == null) {
		try {
			ivjCycleTimeJTextField = new javax.swing.JTextField();
			ivjCycleTimeJTextField.setName("CycleTimeJTextField");
			ivjCycleTimeJTextField.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCycleTimeJTextField;
}
/**
 * Return the ImpliedDurationJLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getImpliedDurationJLabel() {
	if (ivjImpliedDurationJLabel == null) {
		try {
			ivjImpliedDurationJLabel = new javax.swing.JLabel();
			ivjImpliedDurationJLabel.setName("ImpliedDurationJLabel");
			ivjImpliedDurationJLabel.setPreferredSize(new java.awt.Dimension(101, 14));
			ivjImpliedDurationJLabel.setText("Implied Duration: ");
			ivjImpliedDurationJLabel.setMinimumSize(new java.awt.Dimension(101, 14));
			ivjImpliedDurationJLabel.setMaximumSize(new java.awt.Dimension(101, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjImpliedDurationJLabel;
}
/**
 * Return the JTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextField() {
	if (ivjJTextField == null) {
		try {
			ivjJTextField = new javax.swing.JTextField();
			ivjJTextField.setName("JTextField");
			ivjJTextField.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextField;
}
/**
 * Return the JTextField1 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextField1() {
	if (ivjJTextField1 == null) {
		try {
			ivjJTextField1 = new javax.swing.JTextField();
			ivjJTextField1.setName("JTextField1");
			ivjJTextField1.setText("");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextField1;
}
/**
 * Return the OffsetJLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getOffsetJLabel() {
	if (ivjOffsetJLabel == null) {
		try {
			ivjOffsetJLabel = new javax.swing.JLabel();
			ivjOffsetJLabel.setName("OffsetJLabel");
			ivjOffsetJLabel.setPreferredSize(new java.awt.Dimension(101, 14));
			ivjOffsetJLabel.setText("Offset:");
			ivjOffsetJLabel.setMaximumSize(new java.awt.Dimension(101, 14));
			ivjOffsetJLabel.setMinimumSize(new java.awt.Dimension(101, 14));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOffsetJLabel;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param o java.lang.Object
 */
public Object getValue(Object o) {
	return o;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getCycleTimeJTextField().addCaretListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("LMIExclusionEditorPanel");
		setPreferredSize(new java.awt.Dimension(350, 360));
		setLayout(new java.awt.GridBagLayout());
		setSize(350, 360);
		setMinimumSize(new java.awt.Dimension(350, 360));
		setMaximumSize(new java.awt.Dimension(450, 460));

		java.awt.GridBagConstraints constraintsCycleTimeJTextField = new java.awt.GridBagConstraints();
		constraintsCycleTimeJTextField.gridx = 2; constraintsCycleTimeJTextField.gridy = 1;
		constraintsCycleTimeJTextField.weightx = 1.0;
		constraintsCycleTimeJTextField.ipadx = 89;
		constraintsCycleTimeJTextField.insets = new java.awt.Insets(25, 5, 16, 116);
		add(getCycleTimeJTextField(), constraintsCycleTimeJTextField);

		java.awt.GridBagConstraints constraintsCycleTimeJLabel = new java.awt.GridBagConstraints();
		constraintsCycleTimeJLabel.gridx = 1; constraintsCycleTimeJLabel.gridy = 1;
		constraintsCycleTimeJLabel.insets = new java.awt.Insets(28, 31, 19, 4);
		add(getCycleTimeJLabel(), constraintsCycleTimeJLabel);

		java.awt.GridBagConstraints constraintsOffsetJLabel = new java.awt.GridBagConstraints();
		constraintsOffsetJLabel.gridx = 1; constraintsOffsetJLabel.gridy = 2;
		constraintsOffsetJLabel.insets = new java.awt.Insets(21, 31, 21, 4);
		add(getOffsetJLabel(), constraintsOffsetJLabel);

		java.awt.GridBagConstraints constraintsImpliedDurationJLabel = new java.awt.GridBagConstraints();
		constraintsImpliedDurationJLabel.gridx = 1; constraintsImpliedDurationJLabel.gridy = 3;
		constraintsImpliedDurationJLabel.insets = new java.awt.Insets(22, 31, 207, 4);
		add(getImpliedDurationJLabel(), constraintsImpliedDurationJLabel);

		java.awt.GridBagConstraints constraintsJTextField = new java.awt.GridBagConstraints();
		constraintsJTextField.gridx = 2; constraintsJTextField.gridy = 2;
		constraintsJTextField.weightx = 1.0;
		constraintsJTextField.ipadx = 89;
		constraintsJTextField.insets = new java.awt.Insets(17, 5, 19, 116);
		add(getJTextField(), constraintsJTextField);

		java.awt.GridBagConstraints constraintsJTextField1 = new java.awt.GridBagConstraints();
		constraintsJTextField1.gridx = 2; constraintsJTextField1.gridy = 3;
		constraintsJTextField1.weightx = 1.0;
		constraintsJTextField1.ipadx = 89;
		constraintsJTextField1.insets = new java.awt.Insets(19, 5, 204, 116);
		add(getJTextField1(), constraintsJTextField1);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		LMIExclusionEditorPanel aLMIExclusionEditorPanel;
		aLMIExclusionEditorPanel = new LMIExclusionEditorPanel();
		frame.setContentPane(aLMIExclusionEditorPanel);
		frame.setSize(aLMIExclusionEditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * This method was created in VisualAge.
 * @param o java.lang.Object
 */
public void setValue(Object o) {}
}
