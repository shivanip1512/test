package com.cannontech.dbeditor.editor.point;

/**
 * This type was created in VisualAge.
 */

import com.cannontech.common.gui.util.DataInputPanel;
import com.cannontech.database.data.point.PointBase;
import com.cannontech.database.data.point.PointTypes;

public class PointEditorPanel extends com.cannontech.common.editor.PropertyPanel 
{
	private DataInputPanel[] inputPanels;
	private String[] inputPanelTabNames;

	private static final int[][] EDITOR_TYPES =
	{
		{  //0 - PointBaseEditorPanel
			PointTypes.PULSE_ACCUMULATOR_POINT, PointTypes.ANALOG_POINT, PointTypes.CALCULATED_POINT, PointTypes.STATUS_POINT, PointTypes.DEMAND_ACCUMULATOR_POINT
		},
		{  //1 - PointStatusPhysicalSettingsEditorPanel
			PointTypes.STATUS_POINT
		},
		{  //2 - PointAccumulatorPhysicalSettingsEditorPanel
		 	PointTypes.PULSE_ACCUMULATOR_POINT, PointTypes.DEMAND_ACCUMULATOR_POINT
		},
		{  //3 - PointAnalogPhysicalSettingsEditoraPanel
			PointTypes.ANALOG_POINT
		},
		{  //4 - PointStateEditorPanel
			PointTypes.PULSE_ACCUMULATOR_POINT, PointTypes.ANALOG_POINT, PointTypes.CALCULATED_POINT, PointTypes.DEMAND_ACCUMULATOR_POINT
		},
		{  //5 - PointDataOptionsEditorPanel
			PointTypes.PULSE_ACCUMULATOR_POINT, PointTypes.ANALOG_POINT, PointTypes.CALCULATED_POINT, PointTypes.STATUS_POINT, PointTypes.DEMAND_ACCUMULATOR_POINT
		},
		{  //6 - PointAlarmOptionsEditorPanel
			PointTypes.PULSE_ACCUMULATOR_POINT, PointTypes.ANALOG_POINT, PointTypes.CALCULATED_POINT, PointTypes.STATUS_POINT, PointTypes.DEMAND_ACCUMULATOR_POINT
		}	,
		{  //7 - PointCalcComponent
			PointTypes.CALCULATED_POINT
		}	
	};
	private javax.swing.JTabbedPane ivjPointEditorTabbedPane = null;
/**
 * Insert the method's description here.
 * Creation date: (3/15/2002 1:17:24 PM)
 * @return Object[]
 * 
 *  This method should return an object array with 2 elements,
 *   Object[0] is a DataInputPanel
 *   Object[1] is a String (Tab Name)
 */
public Object[] createNewPanel(int panelIndex)
{
	Object[] objs = new Object[2];
	
	switch( panelIndex )
	{
		case 0: 
			objs[0] = new com.cannontech.dbeditor.editor.point.PointBaseEditorPanel();
			objs[1] = "General";
			break;

		case 1:
			objs[0] = new com.cannontech.dbeditor.editor.point.PointStatusPhysicalSettingsEditorPanel();
			objs[1] = "Physical Setup";
			break;

		case 2:
			objs[0] = new com.cannontech.dbeditor.editor.point.PointAccumulatorPhysicalSettingsEditorPanel();
			objs[1] = "Physical Setup";
			break;

		case 3:
			objs[0] = new com.cannontech.dbeditor.editor.point.PointAnalogPhysicalSettingsEditorPanel();
			objs[1] = "Physical Setup";
			break;

		case 4:
			objs[0] = new com.cannontech.dbeditor.editor.point.PointLimitEditorPanel();
			objs[1] = "Limits";
			break;
			
		case 5:
			objs[0] = new com.cannontech.dbeditor.editor.point.PointForeignDataEditorPanel();
			objs[1] = "Foreign Data";
			break;
			
		case 6:
			objs[0] = new com.cannontech.dbeditor.editor.point.PointAlarmOptionsEditorPanel();
			objs[1] = "Alarms";
			break;
			
		case 7:
			objs[0] = new com.cannontech.dbeditor.editor.point.PointCalcComponentEditorPanel();
			objs[1] = "Calculation";
			break;
	}
		
	return objs;
}
/**
 * This method was created in VisualAge.
 * @return DataInputPanel[]
 */
public DataInputPanel[] getInputPanels() {
	return this.inputPanels;
}
/**
 * Return the PointEditorTabbedPane property value.
 * @return javax.swing.JTabbedPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTabbedPane getPointEditorTabbedPane() {
	if (ivjPointEditorTabbedPane == null) {
		try {
			ivjPointEditorTabbedPane = new javax.swing.JTabbedPane();
			ivjPointEditorTabbedPane.setName("PointEditorTabbedPane");
			ivjPointEditorTabbedPane.setFont(new java.awt.Font("dialog", 0, 14));
			ivjPointEditorTabbedPane.setBounds(0, 0, 400, 350);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPointEditorTabbedPane;
}
/**
 * This method was created in VisualAge.
 * @return java.awt.Dimension
 */
public java.awt.Dimension getPreferredSize() {
	return new java.awt.Dimension( 400, 465 );
}
/**
 * This method was created in VisualAge.
 * @return java.lang.String[]
 */
public String[] getTabNames() {
	return this.inputPanelTabNames;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("PointEditorPanel");
		setLayout(null);
		setSize(400, 350);
		add(getPointEditorTabbedPane(), getPointEditorTabbedPane().getName());
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	super.setHasMultipleUpdates(true);
	// user code end
}
/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val) 
{
	//Vector to hold the panels temporarily
	java.util.Vector panels = new java.util.Vector();
	java.util.Vector tabs = new java.util.Vector();
	
	DataInputPanel tempPanel;

	//We must assume that val is an instance of PointBase	
	PointBase point =  (PointBase) val;
	int type = PointTypes.getType( point.getPoint().getPointType() );

 	for( int i = 0; i < EDITOR_TYPES.length; i++ )
 	{
	 	for( int j = 0; j < EDITOR_TYPES[i].length; j++ )
	 	{
		 	if( type == EDITOR_TYPES[i][j] )
			{
				Object[] panelTabs = createNewPanel(i);

				tempPanel = (DataInputPanel)panelTabs[0];
				panels.addElement( tempPanel );
				tabs.addElement( panelTabs[1] );
				break;				
			}
	 	}

 	}

	this.inputPanels = new DataInputPanel[panels.size()];
	panels.copyInto( this.inputPanels );

	this.inputPanelTabNames = new String[tabs.size()];
	tabs.copyInto( this.inputPanelTabNames );
	
	super.setValue(val);
	
}
/**
 * This method was created in VisualAge.
 * @return java.lang.String
 */
public String toString() {
	return "Point Editor";
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G4CF854ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135D98FF0D4459957917F4C94BBBA0DA3E3F186E9C540G09C488B1D01A620CD6DB5102DA0BB6632843F4D019A9F554D25DDCC8C810BF9102C285F301A02269A5E0BAE224C0C80C84D24D18A3441AAA6FF2FBF70F3CFB6FFCEF0FDC92E27BFD3BEF5FDD4E3BC018B1B3DF763DEFF73F7F7B5B5DF72432EAD2C9112B12102292E27FFDD8C4482A9D0498C73FFCDE72AA26941412043FEA2057096F709AE85D
	50D7DBD0D0DAC1FE57D0866F8D70FE74978525EF42739672E883598E8FE974BC3A0D10DFCD2E3DE5F4BDBF6E14FA567277097E7550EE84BA88BCEC47CDC17DB97EEDB63F4766CBAAF29152FE9B0EF9403F43665D83E38A015C40EF38ADBE3E1CEB3E32712014F57DA4326A57FBDD9BD0CE02CCC999765CDC3BF513D9C5E726222E97391DB8E7A5743D8BBCF43E18907DG3407BA7A0207FB0D3027D751F5C3E734B76421FE159926A7E228BAEBEC6C4066934E6AD0F42A91320C4BBDCA4B049C72F3F88FCDC35E19
	EA5465066703C09DC0420FFF6DBDE45B59BDB40B9CFDDAAF5E14460F4CE9427EA55362FE0CBB3EFA6DF69E735FFAB1369553A1D6C04701B42071C019C0EF71DCAF6DFC8F5AA69FEBB642E1C3EF0AC40EE9FE735F061FEA705C5888BDB66F8B5AEB18FEC2C4BEDF71572630E7B492735653314E93B1197A014CED6697D3483259A7DDEBD344E45954FA572269A2964B2647E3A2F4FF12D6776A69A3EBEF246E53A4D1F7FD06D1DC12C2F74E52FD2E0A5B051C1A5B633A3D37E32E1770DC3740F311DD87027F8467CF
	C8600BBA8CF0BE3ECF053E751932B63AB7CADB5A575CC4AA7637270C430402A6D7A4D358F0CDE65C96D197CFF661FA4A817EE22065C0E4862CA920C3C09DB3E4ED3C6D2D3B485A68D0CCF6AC2AEAFEEA92B177916F9B505298B315B65DE20A5ECB3B94D3D5FC9A3508BD26500B367BC64CFB1A57ECAF6878146A54D418EA68A0DD89D3C6CDCB0CF94E7BBA0EB1A96F752AE18A8A4291A2653E605D822D26D86CD4442FB09A9FA17ADF71E2AC4FA9DDA091844033084B26EE0CF9847C3F86E8029307F127D05EC9EA
	42FAEEECECB70C3EE8440B1E1065B3B0D7BDFCEDE74273A2A0A1EB2F053C5A198525ADB3251C3BCEEDCE1053227622790AB9A05746E35508195DB3E52E1F6B1639EE59F0AB29DDFAA2E52E1158CC116371B313EB7EA9AE936D926FDAF57798575FC65B260BDF63D7DE120E620B9CA762FB8343DC6500DD0B01D6BAB1FE6114DB546CB1452232CABFB7214028BF9EF1B1F6C59762AABDC7F556C2A3D4774303E557481F3B4A63759BB01C5AFA0973A3D06F4DD0E01643FF358BEBD2E14CD4FDD1C6BBA9E32A9E0C77
	2FBD0D3A2C28AF92DFAAD257465308A7C6BF543BB3FE4B694DFC9D68BA65C6BBD36C7E2D3CD629C643E0F433915519603F550D796E238376DA296AAE65352EC5F15D093DACCBF98DFDB055B0048217AE51E6E19DDBD46E45C8E54043BD79A8345ED932A67BF74B1A2C993C05AC7CE60FAB9596CE38354515B3CB544CBD3362B5A9EC2A35D25BFE002F991BEF89DBF775D6C01B3C2B5A7BDB9465AC87792B01AA33E48D4C3436A72CB3BB794D062609D0BAB17EA9C359967DB6CA811EF0C11FF462B619EDCE6A6B32
	E3A87A27B30C21160085425E6F3E5AC7C6BBA7408941B4A254E483767140BE9FBC4EB184E554E64973C1390A7E79617DBCD0C6164C41039B6479A023EF92A97C595F531EF3B233C46C97E745F3D051A54F875B7AD1E7C5B6E0FF360C5D1EE8A256B5D916512BF218357DDE92CD4C11607DBE3A8E5A00EADA2C8D96D1CC46680FD13497F158E65B787064777661066CB83E9C4F7EBE56083DF2184723A7BBF98F3D1A73356C64BDF413AA77507350D718AD3179D48C6B3C650E0252B3C0B1206B003200965FA16390
	BC778139405E5786F9B5F5C56B9C3128ED5FF776970BF5E83FD7771748F508B54B770D17F84ED700CEB29B76E14EFBB8083C9AF8BFB4DBE27695AA2E69B34E7B357CFD1C733ED515F80BE3460A3B9707699EC747456274D8C844686BD8FABC263154F85C97CB0D475F46DE97FC1011F8BA117D833151717A72D8AA3CAE66FD9501D2DE5783C614411A4A413C6D8DC86C1C8AB9D888348A28ACC71C8984B6E477A3E68460B0832ABAA334172C66F31F8D4A39A1F8BF8FB491A89FE8991050F9C543D6B2828781F4FC
	540FA00236F07CDE20A662F74B1DC2F7845AF1C0E2CDFC9E10771B0940DBF22734AD38EB8FC940AD559776C44F05BD0A0FF160EAEC7CAC2AE96D364BB6E65D98A833E52D1FA3B16BEEAE3F855EFB00589C09D931F7A4E6E5CE390934DFF6B2A5E695FA8F38464F91B51CB5A70ED99360CEA3F4EE89C91DAB203FE6AE721AC21589B2B0DE73616E6841F5447B2D917D18773DA4317F56917DE8EFF5F1E27FA3A37AB1DE6F5B7305EF776D113E2D3EEFAA516E7CA8AD9EEBF305CF5759EDC757EED2795F3F2D95B9F8
	3FEC274C41D9651C9273D87DD0A80D0DA7C664DA446185D56E97774C15311F614658135C0252EDC07539929FCE85AE6D2E56FB0973A60EF91E40719B03E87F71DC0163C58EFF9267FB937822166FF3EA798C74AD4A15785EBC086B605DF9F076866A81E2C099C0D973A43E3FB1D0CFAE006FDEA3528EE024A5400770EFDB68526E303FDCAB6BA4A7EFB2493D6A25225752544922F922BE1E325B655E5D1CAF7CFBF8887D2B4C039C83F901B4204B00A664C97F3E9E28957EA1DAB4B1267406780EAD1D6BD2E9FF1C
	0DE0A4FC7B2B1A68DBE65E487DE4E1DE3A3D391A5FD71764A5676EBD4EAF4CCB4E5DEC374C5D8A686B38CB566A4DC1625451140467878317F22798DB5D7E698755A17252BE18FE0F6B9CCC3D47FDB918FA0F7BE6F074BDACB8187E4E218FA65EB9C4DD6D98C61C4B01DCAC86DA85D416DFD03AA3DF56546A41DD2226D25453A77EA0EDB678CD1FB9673F21743EBEB3F4616F834F8F613952E7B0E604D13E647FE58873450C88E78A5E4BC398A3D38D061898EA7349F944C90D86B8DB1C31B61FC55EC1706BF83EBC
	F78DD649F3D7CF3E2C453D55717A2BCFF81E677E61EB71219FD40708CD4DF07A7C3CBFFC617CB48C733BG4455BB9021027751B01E0D0CC04022CE9D9C9E2EF0F8EDD607E129F82190671AFDE771AC9B00BBD2FEBE6661884F4DE570BC9EC81C0F2E2F12679AB29F6EF9C08DC0DEA08614B19F3FBFDF0B536C7319DE05F52A53FEB7EE239E251FF9DAC1413B3B7C2A229941DD356E7ADA777E06FD9217A775A7FEB7BE386E4314F7DA24C7678B7CDBE13779D76F36776339D572DCD233C01ECB1E2E9A7DDC7226BB
	79DC0273637DED6E514FA5C36E64F3091CAF7CFA602BC43FAAEE2AF6C98CCE762BE70170A734A079DB6103656857C46067AE10B870D0991EFF3A1433762EA98E249C8900A96F37024BEF4DF6CD67D70DF55F94B65C0FB0E057526E72BD69F4838A1D00FCFF6EBB8B77FC2F92F466BCDC0E329C1C94A659FD0F17E38CD59DCAD25154C1FE556D0401FAD07C96229EFA82F21679ACA931CC32E1C4BD5DFD4BBF1F397F09AE2B181436116DD8421D5464D2283FC5E17273E2ABA9673F8DF4823F0D2C31F8D3E231810D
	36134A4097780941E2545FA46D3398595A0E1A6A22CC556A0EABD608613A7B381D2C5171C3A859AC3AB5C58F5689E3BF0E61674F2226B3BC71FC29003DDB383DA84563C859F25726BD55A71E4AADA62ED632CEB394FF2B528BA1ECA365ACE4D2ABE4E87ED86448D1AE280CFFA140D3CAB108FB4BF19F1D75F8819D9C237BE2B70F5F30FCC3AB84ABE612BABE1241G0FB3425F9CD2CCD0C54DB6069FF68D3346693B7CED764EEFBEFD3347C50AECA73FA55F91D7AC42C8E9G2ECB5AGBC0855EBE1CFA983EBCDC5
	37820699864B5CC91649AEC70167A777565FB06D657FF08571290CD409D042543AA0B542F5CD01002AD3C7G4495446FF4446398CF52184D316B371ED87A2A8F6A200594076B6B797F7D7C7F817C3F1FF376F34E7E83905C15E4543F647E187419978F5833095B03697734C28659E34F5EBB798F07D62EG6FDAC9897F48GC928080F7AAC9A76D1732A4C9BF63E16D178A34CD184CBA506F25745A4DE6C7BDFA2DE3CF8653634B898A930FF43ABC8460BAF0FE045AC847E32820997538E7FE314B55B99D6B40DA9
	DADF136E4775FBEC00517899666BA3A85F12E36CCE7B1B4091347BEC421C7F83D0CB8788065AF6812E8BGG9C9DGGD0CB818294G94G88G88G4CF854AC065AF6812E8BGG9C9DGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG688BGGGG
**end of data**/
}
}
