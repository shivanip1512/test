package com.cannontech.dbeditor.editor.contact;
/**
 * This type was created in VisualAge.
 */
import java.util.Arrays;
import java.util.Iterator;
import java.util.TreeSet;
import java.util.Vector;

import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.JTextField;

import com.cannontech.clientutils.CTILogger;
import com.cannontech.database.cache.DefaultDatabaseCache;
import com.cannontech.database.cache.functions.PAOFuncs;
import com.cannontech.database.cache.functions.PointFuncs;
import com.cannontech.database.data.customer.CICustomerBase;
import com.cannontech.database.data.lite.LiteComparators;
import com.cannontech.database.data.lite.LitePoint;
import com.cannontech.database.data.lite.LiteYukonPAObject;
import com.cannontech.database.data.pao.DeviceClasses;
import com.cannontech.database.data.point.PointTypes;
import com.cannontech.database.db.customer.CICustomerPointData;

public class CICustomerPointPanel extends com.cannontech.common.gui.util.DataInputPanel implements java.awt.event.ActionListener, javax.swing.event.CaretListener {
	private javax.swing.JPanel ivjJPanelBaseline = null;
	private javax.swing.JPanel ivjJPanelCurtailable = null;
	private javax.swing.JPanel ivjJPanelDmd = null;
	private javax.swing.JPanel ivjJPanelScroller = null;
	private javax.swing.JPanel ivjJPanelSettlement = null;
	private javax.swing.JScrollPane ivjJScrollPane = null;
	private javax.swing.JComboBox ivjJComboBoxDmdPoint = null;
	private javax.swing.JComboBox ivjJComboBoxPointSettl = null;
	private javax.swing.JComboBox ivjJComboDeviceSettl = null;
	private javax.swing.JComboBox ivjJComboDmdDevice = null;
	private javax.swing.JLabel ivjJLabelActualValueDmd = null;
	private javax.swing.JLabel ivjJLabelActualValueSettl = null;
	private javax.swing.JLabel ivjJLabelDeviceSettl = null;
	private javax.swing.JLabel ivjJLabelDmdDevice = null;
	private javax.swing.JLabel ivjJLabelDmdPoint = null;
	private javax.swing.JLabel ivjJLabelPointSettl = null;
	private javax.swing.JLabel ivjJLabelTxtValueDmd = null;
	private javax.swing.JLabel ivjJLabelTxtValueSettl = null;
	private javax.swing.JTextField ivjJTextFieldDmndLabel = null;
	private javax.swing.JTextField ivjJTextFieldSettlLabel = null;
	private javax.swing.JComboBox ivjJComboBoxPointBase = null;
	private javax.swing.JComboBox ivjJComboBoxPointCurt = null;
	private javax.swing.JComboBox ivjJComboDeviceBase = null;
	private javax.swing.JComboBox ivjJComboDeviceCurt = null;
	private javax.swing.JLabel ivjJLabelActualValueBase = null;
	private javax.swing.JLabel ivjJLabelActualValueCurt = null;
	private javax.swing.JLabel ivjJLabelDeviceBase = null;
	private javax.swing.JLabel ivjJLabelDeviceCurt = null;
	private javax.swing.JLabel ivjJLabelPointBase = null;
	private javax.swing.JLabel ivjJLabelPointCurt = null;
	private javax.swing.JLabel ivjJLabelTxtValueBase = null;
	private javax.swing.JLabel ivjJLabelTxtValueCurt = null;
	private javax.swing.JTextField ivjJTextFieldBaseLabel = null;
	private javax.swing.JTextField ivjJTextFieldCurtLabel = null;
	private javax.swing.JLabel ivjJLabelBasLbl = null;
	private javax.swing.JLabel ivjJLabelCurtLbl = null;
	private javax.swing.JLabel ivjJLabelDmdLbl = null;
	private javax.swing.JLabel ivjJLabelSettLbl = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public CICustomerPointPanel() {
	super();
	initialize();
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	
	if( e.getSource() == getJComboDmdDevice() )
		jComboBoxDevice_ActionPerformed( getJComboDmdDevice(), getJComboBoxDmdPoint() );

	if( e.getSource() == getJComboDeviceBase() )
		jComboBoxDevice_ActionPerformed( getJComboDeviceBase(), getJComboBoxPointBase() );

	if( e.getSource() == getJComboDeviceCurt() )
		jComboBoxDevice_ActionPerformed( getJComboDeviceCurt(), getJComboBoxPointCurt() );

	if( e.getSource() == getJComboDeviceSettl() )
		jComboBoxDevice_ActionPerformed( getJComboDeviceSettl(), getJComboBoxPointSettl() );
	
	
	fireInputUpdate();
	// user code end
}

/**
 * Populates the given pointComboBox with the valid points from the selected
 * device in the deviceComboBox
 * 
 */
public void jComboBoxDevice_ActionPerformed( JComboBox deviceCombo, JComboBox pointCombo ) 
{
	if( deviceCombo == null || pointCombo == null ) return;

	int deviceID = ((LiteYukonPAObject)deviceCombo.getSelectedItem()).getYukonID();   
	pointCombo.removeAllItems();

	//if the (none) object is selected, just return
	pointCombo.setEnabled(
		deviceCombo.getSelectedItem() != LiteYukonPAObject.LITEPAOBJECT_NONE );

	if( deviceCombo.getSelectedItem() == LiteYukonPAObject.LITEPAOBJECT_NONE )
		return;


	//add the point to the pointCombo if the point is valid
	LitePoint[] litePts = PAOFuncs.getLitePointsForPAObject( deviceID );
	Arrays.sort( litePts, LiteComparators.liteStringComparator ); //sort the small list by PointName
	
	for( int i = 0; i < litePts.length; i++ ) {
		if( isPointValid(litePts[i]) )
		{
			pointCombo.addItem( litePts[i] );
		}
   	
	}

	return;
}

/**
 * Test to see if the given LitePoint is valid
 * 
 */
private boolean isPointValid( LitePoint lPoint )
{
	return
		lPoint != null && 
		(lPoint.getPointType() == PointTypes.ANALOG_POINT
		|| lPoint.getPointType() == PointTypes.CALCULATED_POINT);
	
}

/**
 * Method to handle events for the CaretListener interface.
 * @param e javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void caretUpdate(javax.swing.event.CaretEvent e) {
	// user code begin {1}
	// user code end
	// user code begin {2}
	
	fireInputUpdate();

	// user code end
}


private CICustomerPointData createPointData( JPanel panel, JComboBox pointCombo, JTextField labelField, String type )
{
	CICustomerPointData ciPtData = new CICustomerPointData();
	
	if( labelField.getText() != null && labelField.getText().length() > 0 )
		ciPtData.setOptionalLabel( labelField.getText() );

	LitePoint litePoint = (LitePoint)pointCombo.getSelectedItem();
	ciPtData.setPointID( new Integer(litePoint.getPointID()) );

	ciPtData.setType( type );
	
	return ciPtData;
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GGC843B2GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E15DFD8FD8D45735AFCD0CB111B624358DCD6D1324360FB436A529CD493DB6A5A97DAEE9EDEADBF3C3925ACB9BFB6B7DAEB7B50D3725F974FA78B30A088A837E0922027887F4C0D0CC9009022022228EB2A2A2898C4C400C4EB0634CA10CCA62DBFB6F3376B9F3B8B3B87A48173CFCD91E33FFEB2F3D57DEFB6D357F1CF38621F0CB14AEBD23D09052F502745F3B69023060A1C1785683F356A196192D67FC
	72DF89D03E90D71C8557E8604D1C21576589A3E2B62467C0BAAEDC2FA34285422818FAB75C8428E79E707E7A783CBD416B09ED45FA165174438D39F0DD8594875882202A65247EA79B56CBF8B624D7C9770452B384A115662928D82F40C5A95FDC38A683256410BC3FE8A812788D106E840A861A1343724E076BF22A5DBDF535D23E6E87230445BFFBA7E3A529CBD1BED24D8AA65BA9DD0B05E728A1B20547CF1E00EB3D714A6021FE1733325FBCB4649A922D7D36CACB1F55E297DD1E4A917BF53347D2E931FEE8
	6F37D6768FFBC517536A292BEB126E9AAD960F556BB51A072C8EA8ABE185E9C3FBC5B6ADDF90A2A0ED4AA5584FAB085DF261FE9BD0FDAE3663D7AB6BA5BD27DD0992123FD19E309D1139CC7FB939F2BBA67DB5F235E3A5A97F2F34DF08DC9A70EBGE3ED7C450546715AA8DD7A81B7770B50369358BA234BBEA47A376DD0A336ADE6A5366D7B3BC95D8BA1AD2C526B562FC27C3A0160D510EE816ADD05EDFEEFA736397346770444A7ED192B833459370A35B5EA15224D9F5F1379B6754533E708BFA581CFD82D57
	95825582F5827900B652B13024F597DC9B7B44A61753699AEAF43B0FB8AC1E53AE0B558177F5F5401130F356FE1747A2884C4FBBAB8C9A7AA0C52C7677F1C22CED9784744BD9673EA5442659B3F59AED1B7DE2ED46CC290C5855F25B3272085DAED5923BA5821ECEF5918406BBA85E12A7632C6FFFC5FD0B24C5608979E8674ED528CBEB5643C2DE75250CE59A3AC4BEE74C884FE7BA4C4C17F5E1B6AEB7929B4F83BC85A8CB2F5795815583F56B5146A7CE6F9B4F46A74067BCC3E6C77BF01F5B6C910F8C5B9D96
	2BC732F5DAC3B0DBEB91134BE98CD50E59A5FA1F320F123E5F25E91724684399BEBD33C704DE368B2B3BA9E05DB17A313E310A7761CEBAA662752C8FB3B9DECD71798A1C756D53F4EC117482603594C09F507C2F537C338AD87EF4DE4E5FA89E2B40D9B9E1860C8F7140ABAB546BD87F7ECB9B093761100E860A83CA84CA85AADC837956E09FCFBB3D67964711D1513FCC36734CDA38DAFD2247FCE248AB1A077A2D9DE60F5D5C6730FA85A90F798C31EB1F1F5CG9D5F7DD047F16B1055E3966D2EA1A85D6C3402
	B3F9D99E579962777D9EAB651A6CCEABD460F48BD86E481982E28333D7BC6F3618C52B1C0371EF1EA1BE71213983CA0482605E3706584BC5E3F88B5CDB56202D961F23F3AC2467F33B3CF5C68F57D3605CD6C7DDDD333D1F28E176DCC39FB5D79643F5A164F72C556B9681B95669F58B01AC6B753A5C37753AD9EF63F8FD3D937D32F965B785430B97B57D1210E98373B1478635DFFAE8FD53G1F8DB49FE8B1D061C6189300CCC062C61C4BDF2A88134AA37A517256B11D687DDA26E7A8630B34896FC9DB35724C
	FA5B9FE73A3C45F549D40C555552BD0921ABC2500350CAD59DDAF972D5E9564FFDA6B2D626011DE20066ED443E5EFF36180D01A3E62F953D7E2C879C56EA11FB1E655DEBA43ADBBF348E094DD637F54882B7DE49678E98174B63E14045FD75B045C9FCEC820775F27C28B11F61D6B29B4B238B7927A95FAC0A9EFB5F30E8ED370A22FDE8D016BFCFF5717A05DE2F54D64BF9BAF7C39B05A2707BA2EC6B6F0C858A3FEEF5392E8C3BCDE444CA63230B2E8336C17E7AA274278A83D9AB7672743BB4AD73FF3C3BD332
	B34993CADF5E7A1C10486B487CFFDC3EDC47E2927A257BFFA86EA79BBAA720CE7F3AE7CCE89D2C6FFF559658F7935B34FD77F7ED5A3E3B20AD38EF2634E979A6633D59C6463DEBE4C8616B29EDA45E42DAF548CA879C979158FA77F593E907FD48AEDE30DB862DE23B7D3A95E6FC625B42E49A534360FEDA91465C11D20C395B2EBFA2447554E4E82D57A23F591E11A2792C30C90E39CC273F1FA3E3486A30BA41D0CD2E61A1D1DAFB5279C2423D1994CBEF9DA132E5A7CDE043E3F62B43E2744014546A6A279318
	219FC639D8C97FE593D659E57307E6DF25F7844CD6C97B243209F00F125B72620A0AC345DA1B9143005DE3BDB1649E46E24ABB4A2B842643261B43AA9D5A2D7D1F0886555238AC90CEED9FD26950E4972FCDE865FB316EEF16BBD5F5F7595D93DA75BE5E6E5D43EEF53B0943CCEC4BEBD85DCFDC1F4E6A06B5DC1F6B084B57AEC28603198E24CAF6B1DABD83AE0F53EA2155D71AC7C4296EC64A9E2F724BFEC577B42A4AEC8DDC68C150F3BF53337A4497D5B62A3EBD73E8ECE48D1765C2FB1A64622A19EE018ABC
	C8070F5407A70D8FAB6C58CC4F862AEF5B0C1ACAAACAD69B31FABCABD663BA66218E92170AA1DE55G35EE42397DC6BB61635CAEADE01ADC8E878B29400B59C4626537AB8B95B15032091D772C627CFF556427421571AF6C516267EEC6FE22A63F1873AFD6E971EBB87F95CDFE8B67DF2A8E2E7F3D1A7C6E4DE8A71BA90F4CCD562B43D6583210454FA96BB55CF71874AADE0759B1AC6FE7C6CCE43D6AD02C1B98FE793C76DC61BECF56CAD7F87962792582591730B2595C96E3A6E53AE13E00E5A6D988CA67EAD7
	9B1567EAEE501F1C414540B59E08792C3D0E34D5EB4CA6EDA6E5FC1D1FD911FD9E43E6D36C94ACBC2EAE453D7369BC6539DB5A9FEC1A679BF4FE5C42ECDD33C5FD26B07782A9578438E58B5A7A75734A75E623576B6A375379C8325B57BB14F3A9439E6D4801AB44BB2FF88296A9BE34FDF48751156C79A4D8325F633B5F93466EE10F5263AFDC4EB70D50F1E4F2B5413633853A2F09AFB5BA6CD6B2F7B3BBFCF4CCF9EEB7E7F5E3460AGF670C96D0FD458216663FBB259F95A4ABDE877C460B36C8B9C4BABC6EC
	F595E2AD9C0B60D89847722B910B6558B39CDBD40C6702DF2DA3F3125639E0BFB5CE6560303DF2D83413CD2DD9B45389051D8432B2DF256BFF32A6ADAB41733E21234437FBA16D830AA841B556053DCA1F09CBEE50DCE3910AAE114EB8CB54BE7341C5D2DFA260A9A568B325977295BEF38EFA49BCB488A30D2FE3AFE432B1A525DF3C2043B1A5E00C7CDA97999742D63D2E88288628954831956B686E9C77EC6B28AF485916FECFA8E7D461DBF12F742510642238DCE1D5A8F233395C17C312CB60F2EB2BC311CB
	62F2BF89C9EE9117CB2667EED925727EF13D625ED0BAF6DF494E457EC0FD3321D4FD6E16C2F1E3297A5CCDBC0A67EE3D400BAF45B320FF3AC47C30EC1BDED73B8DFD64294E158ABF2453B877417E0BA40E3BBC76C17B90E2B60A753BBCF4E34330EFF4855EF3FD3BCBFB4F9553253D67FA2AAB78F941B3DD0176E4ECEFDFCE63CF8B344F824430EFF34C47315DD50805F3EC964722B8D6D10D58EC0E3D4231840E7D0D4614A4C8AF665887C788A6EC576B8A37A3F63019E03510B6EEC73FD8F8144C1FA2CF7F0526
	43F97A7A51D0764D241CDB4DCBC89A33A155916A79846B3B9FDFA2FE6A63691F5074B58167B8EBA3555F6C013D6F51A10B640CECBEEF20FD389F8C73D58131E7A9168F585FB9F6047661FB007DA99D311FD06C7F0052FBB856CC7B10ACDC6E66589B947382769B81574B2B0E1039D1F4399CA63B1BAC3F05186D64D92337CF60F9060F10B161B0DFF38D033E3DBBC8D961C7F0DD3398726782D6835432031DB93176BEB1C24A9E70181D60426DEEEB3FD03F13481EEBC659E848BF87A889A88D28E8A72E090CC709
	6C4976FE8F2CFD4964A62D27CA0FA957D313F6327AE2609A3F936734DFDED24EE9F98FD7E560F97B181837137952421D721C46E24C6CA3F8A6DFD486F3E89936695FABC95F523999D77AF5F5C7DCE41D5E4A8C4466602E26ECC9BE3C8C6760A9CD7479822413009617213E3E9D38DE19752D07055630AE4D670C4926460C5CF226E7D5392C2F1B2FD7FC4DD8278378B34B89762DE665BA1A5876698CC12804AB63A77A71C96C59A4A879B9C715FC22EFE32612DF6F47A7B65AA94933367DFCBB36AD6D6751026387
	AD811F2126C8ED4A5BA51D65E459530D2F5E1B496CBEF8F413526E52DE302ECE69A1789C7452B1DC7F346CC25B7F72AC31FD9824A301E2F6611C7157FE010F579F76ED07EB077932666A73A4D4FB366FB22CE4CC66C181634A7A265BFBBE3663B665FAC216E3F3E99A753D04DD6AE7D23AE67AECEB177A1954971A507F1301573C9B6D3556CA46DFB424630112009683959A743AAA83FF2E5BD7A50C33AEB3395C2DB021BA94D3A0EB5FC74D37775C7059E568E7337F69D1A1F6F2F640B5FF33017917C53AC6E658
	534915356F3181523EE9400B811A8F1482A4D468F56BAB30FD477B8D2CFD44C19AC5515CEF23BB9FEC9C590C48B089FC52FA6CB8364DD0B1F68EEBG4C2442D99FB599C9DF58AA546B23539477D52857C7AF1E457551946025D460BC1B51ACF0BFDA21381F56B471E7635F1950BAD83FEC3186DE276D30EA2F538CD66DF55ADEEB703371BAEB603371C62B72EC1C79551F87C91CB4D6427E85A882E8A6D0ECA57A54AF2DDB19CFE97853D14B2095363A64692C0875BFB990382DCF8F0C7FCC77398132BF6FF30922
	4BC94AC7BCE100741768F2D310E13F98A0B602E532CDE4D9A57CB783A44EBA2C83941656134789B69F5A35289257041967F0CD18358731FA0AD5C13AE58F7A6789A3D997F673F4BBCD7BF87A553341FC08485D391FAE8EDA471DBE37E2F67B5BE0603E7B1F41717BEE190D1E37004DCD575CD606655A68DEE6E040EB65BE12EF4B6358892F516535132392363EEABECE66E13747BAE075F82C9676A8C6183F07744D7B348F2743FDB410210AE09B4E9587E9577AAAE6FBD6F67BB992FB1DE61F5DB96C24A533F22F
	50BE97A1EFD895BF7B6AA2F2A76971851B4A4920E1EB3DC9C665DAAF86E4481EE1BEDC978231F56A9F6C822FB7350D68B8E49DA96607304DF698C9646501326AF776990A5F292AAAE773C55408F20DD81BF3AC603907D04D5AD6A8DD9D7B6D692C3EF74F911BB7D9497BB3B88F0DD8F19EAAFA7CEBC251162C0C7CG6536CA65792A65359CEDA7ED5703D764F6BDF1F66BB86D5A37775DF75EAD47FD461B6544EE9AEBA5EAE536C61AE3A4FDC17AE9D6B52E1156EDA0734682C82781956E45B97F100364B5C03AE5
	AF462B1D17F78B8156CAG9ABDAE3755A3DEE3A8BDFD156260D5A769A39B14B389A89AA88EE8BED08A10308F6659FDD80773F2D910BA58221B46C50F99F6D2EC7CBEEB44B936E69F33EB4BBEB9AEF4433D9BE81282E3F369D45A7648FDECAEDD4E71C80A4FD660EC0E5DC4F1121E873C1A9A543949C14A647386EB3AB49ECFBA489CC01EFF5A4D8E7BF5FA045A8E99078699FF5499B8AE5C6D9CBFAE04BB35E37A971DE3E37AC3CE6D187EF527B226CBE739D239445EE74CCEDEEE3413449036AFBCED9EB28F5279
	0E4577C4A34E8311B59873E3B663F941AC0E3D30856706F99C6B59CA3045104E5D0F587BEE0295C33AF6BF4E878FEEA0712D95529620B020691C773FA8EF8E241301325E516B4A5EC1DE69067156A224AC3C37A86EDB257B697B834FB52C0E7AF16BD03E7722D35CAB5F3189A44B62E9FA9B31C9AB342B93086D4BDF5E6C37BF86FC96D05CBBCCDF367F7E63964C1388F88AD06E3B906701DA5F45387C61D66D987E855AB78E486763F9C5B74D8B0E6D1FB71C76D9B4641B4D739AAD24DDAC92B5BBADBC463D274F
	63B8D9EC3107890C97D7A44F9164759E071DEC7698EF4AC7791C57B46C914DF687FD2203F3482FB7286790321EC886FD968331BCD559DAF9F2EB753A62DA4CB323D8ABCFAD70DBF91E87BF504AE3813E2F96672BEA327444E75D1B0B057167AB96532BFB493B002AF307639E3B6508F9109DBC30383EE4B31E81C454E2DC2F58C277FE10CEA63A56623307954559126F659D40730226E275F9419B02F23F7FEA097A3CA05D0F3FF26B187302F4A57F70D675F9814AB37B185C32FD5A5CC1673DAAF95EE332A3D7E5
	59375E3E955BB2BB64EC6467858750E6A99EFADEG69C8201883E8B3DBB666CD60F90F74103CC29D4CDDC0D5F5187725E2DEEE9D66F55D2065C2BA92A80667FD7E83DEAE4F7B1F59345C03D0AED055C10CDFD9DBEE6F8C60916A87AD8755E7G5F263869207A8CE05F96BC836885DEBC2FBF2FD8D9FFD93DDED7DF9FFC6D4D64D6EFD44A99C146221073E91441749B7592BD426B556FDCFF1E6231756AF72E7F6241F72E97G4F7D9E6A6D4CD6561F86F85EA1394EED0782557FEB5A3F350754753FC6F14BA1F57D
	ADBDD8FF84700A8EE37DC9FEF60B86FC4EE1394EF90783553F047A4C02436A7A73C6891E57202EFF788656DF8F3C04862C7F058F14751B9A75BADB23DC67E8E3207AEFACA765C5B42A6B8F27781CC6F57DEFE4E37D8B01A79E417A7F7796017BC20C627E401609BFFFB8B721F530B54ACEBA5E05A6D8B7E7A2E62058FA40BE1F01588E9AEFEAGEBE942754D0ACDF4DE05F498476E5F0CEB2319CDE8433B3C45F0DD8C6942E6D8F78219005CC061C051C0894D7CB9A54D1B8CE961A84CE5C08DC03DC0E1C0D1C0F1
	C7B1EF2AA7ACC05BC839DAB851C1192E1174C88810DFCD05126E510A7CCC170D5EC03A2C8C002B7765241C954258F70883911907146FB44BFDBA09467BE43053622358AF769C5A2747E04DF48C3105AB78F32FE3E853449EE27FA8C84783ADG4ABA8E7DG54G548B94F69C737E874DBB9D52F300120052000ADAA03682F5830D36E05EB3BD016C03D4AC15CD6EC93DDAF99A0E7B63710AFCD181E4E8CC10F4E73ADC9DD797E5BF84FA57DB5D2FDA6BE1AD42BEE3FD70A69DEB5341CEB1AD58AF09F43DBA9F528B
	B9F6E19B76D56E89EC07EE14583F9B52E1C0D1C0F1C0C9C029C005A7E12C1D644F55E95ED6C8BB004201E6814D85CA814ABD85FEF18A735E38C16CC34AA072EA7DC9BDEAACCC05F5CB758732C11CC699C9AACC5A93D1DDD6869897DAFD23D325B3857FB122559FDA7D2FCC33BE78A3DD6F34021DFACFE13F7C2C17E013A09D493193FD58D7F338CDBF371C58BF379556C4C0C6A0B7D0B8D0B4D0BC5002D64C7BC51AD7B88D638E28812897A88CA88AA88EA879B4667DDB76F83ECC4A26E32AD536EF38D43FBAEF15
	82B3CA3AA979399AB2F2DFEDD8BE1EAE588F4A3EDC91208FF42A725563AD5098E3FB8F738EB21FCB6796976C96514670A25FCA99EF31123384016F67B61233B1F6E6004F0CCD9BF1FFA41C01B5AD10894886C47669CCEE6B26314F1A8FECC239B048CB763411F01DA549251E21EB5B4D4DC1EC152922F810C984DAA335B1856EFF3BE44912FFGB1BDAAF710FD4A49D6F31F555158AF8E1B9D74A887362C0C7F24B91F73CDBE91193C7DC58E4A47D7EE01056F1EB03EE17BAAAEAFB399EFF27BEAA50F3DEAAA711E
	3C381A172B667D2C0C3C27A73F195B6C9C3250C2A47E4E8B394AF2DB7B9C6CDD4B1FFB15FB3206334C2E1633782E662A0DDAFC9F67EF2FD77243A57EEC4ECF33E849A7F07E4582ADFE92677F5D20D57EA24E1FF6CA494FB2B23E41087C4CD22D729B0C68F3DF4B9E6B2BCF72B3811311792A832EE1C6F61E446442F2467A6AC3B9A897E9E43E9A8357F8C90E796A129563792ACE612BC9A03B48A87BEAD61B5AD71F3838D64BD769B18A7A54FD9985E37C15E5E07C37BFAED07AAB75C7A53F626DBCAEAFB399EF20
	D59E8B4CA1252AA55932C2F9ACE8717FB8DC68673714CBCBE37C6C6A153CFC4283479570BD6112DEF55F92BB6735E15FFFAEC30B3F0D733FE9D27B966157F27EAA0316FCAB677FE917963F1773FF3AD72BFC11732F352BFD177027F07EC24D722737218F66140C755D1292744118B6663B89F0CDEAE36720CC6E4FDB477A6E52D27ECECF9B735D5CF3B0EF1EE3F24CF707360D673B4B943EDB8B322D67E45F6DBD27765D028BEB34FC179C73F17F68E9570F71DD16C172BF7A1D273F6FAA79E1E765F8AAB3996F4D
	E2592F19EF92A663BD4DFCDE6137B2EF79EA7FD8CBB84AD83BEE2B9CEB0147E36D19D1F5FF925BBA4EE1FFF766EB7143B8FFF20E5A1F88FF9A67370C998F049F4D7933B479F3B87FDA1FD67973B87FF8365ADF89FF8167FF65832D72D34F215F25FDB056DF8BFA506FF25B193FEE03EBEDBBBB33E7F23F6F9D6B2F293DA8E7ECE77EEA036B28A4477C3537EFBCFFDD2E7057E9A09B5DAE7B6B1CF6662F78FEC50120BB25692F64681967F933EC2C3F328C0CFF2CF02C3FAA79877AD47ECA19523AE20D5ADF891371
	3A4B557EAA738E2C7277D742D17A6BB3BDF20C25BCC50C7D59F2F51F927BA634E31F2F9E93A389BF0973FF3DC66DD3043F0873BB2EE849E719105F3CC60B3F1E73CF6F57AA5F40790FF529FD16709BB87FE9CD7DCD40E767D9239B71FD9A9BE0D1A6FC9770C7B964BD27DBFACF5FE4979DD67644121D7746EF645F9618703C3733081E671D077A019A4EE37D66CDF88E5B89D844F9BCB3FEEC931E75A71C47B2DE22F9058E308FD09550965A3F02C04F2668FF0B8EEBE16C8CFDB1F904A7BD4B7EFD2E72D9F673CB
	5999250276336C168E69DD2A8E45FB147F5DA73D3B7766C0006751545BD8DBB2C4FC9EBD2F835BF7141F4BE7DFC01B8FBAB6EA170523C9FA87303B9E6D5BF0814B5BE74572FC9C0BA8C0AC06E3D57CFB1B053C5E6DE5C55A75729145E4FFFE8AE50BBB313C3AD22C2333937B7415EC742988120F675D3A9C65050B5827CF51F356DAC89B01EC97310C9F6720DF048196FB914BD836827DE291AFE37F8A12372C8B7C8A2833ABD43F780004B749361D3D58D76EAE2CB3B6835B984D31A49336A519E3C78D18EF7DA5
	44B66FC64C4831343DA8BB05E3B16D0845F1EC8B17CD3D04F6B9D102362D6A86FBF5E35E87CBD0BE2A9B6D321D4E530910DE84147DBE16D1D90A36AD862C73FDAC6343D27EFC6DFDACE3A64D1BG69E4205477C3356DC34332ED6F99C55B66FD00F5BE104F1FA3F16CC7B97C7BA20E5D6C45FC319CFB0DE30BB896530732E5BD08FD1C0DD8AF47FE411FC9C57620DD8E7620ED6781165D0BF96F6E61632D173FCF52CB5FCF04F484D0F4AF16D1ECC65B4681164A4B30195136D5E6AC63ABB42F8D52E1C01166D0ED
	FBF8C436EDFA8E5AB6460CF59E637E3810E34B5772B15C0758672F70B14C319BEB900B6058247DA81B403164AEBE267B91DB446B2D6D67E77BFE4F4734485D2FF52E97B12E5CE6D51A49BDBF2E1C12427B7177ED6652F9AA2ADF7D9C71C50A4F6AD7BFC77C20887BBB96F8C596EC6F60265BFB87FA78B6653E9B329CEB57294D74192DC55DDE934543AD6A767E164F571140CB3360FBD495BE32966D35429A95A88AA896E8AE508220D4205C8158EF8155829901ACC0BE20F02069C0B1C07183782E5181EF399078
	7DA86965G7985A9EE07E522528E09834C27D2242BB0A83D6F8657B2691E491D747317FA09E7142E1641316719526F6C5487333BAF20DC2DD5A997AE650B122E33834AFD39C0A917A065CB122E0B824A6D8F7A3BE2D936C0F273CE8513DB9FD06EF029D24EA065EB102E2600F249593797A7DE9FD7CEBBCE6CDC9E4A383159B0CE6C226B13D11BFA5C6C2378941BFA5C4CD90E63E69A70D2ED98A7FE1AF3FB637DB737A9173B62766244E3F40D55EDD73777C90A5B6C6A769EDC016D950117E847763E5F6BB74EAE
	CB63CC3ADA242B8F2E61171563732B35CA39A809B7DB3AA6DC8E64CF3FB785EBEFD2C0391386255CA2A9DF5695F6DDFFA510DC69EEBF3F1772B5C8D7D3C03974FD41743485147BC1FBB0395100F25B7C740C10724D142E3181654E165C5E78FCFFDCB96D717915F16514B4778A0E4F2F5235EF7295353FBECA7114ABEAFF5D3D957DB595F85D8E74571A525B9BE7C7EED36EC648F22CDD6B37917D639C6A7616D0FC2EC35D5EEF73BDC0A2706A1D585E7BC77D4619D39AE752B5C13AA641F511D3B9BE2765AB6532
	0624F1A2DD8DC3017C693920F12CA1205CA43FB8E2127259246BE8C03905FEF291D23E1952B5B6205C8F7A0269B9B7205C5DC167256400F23F76FB1FE93114AF5B452EC52EC0F20DBD37B7BE4F0EAB27BDBE270CAB2724AA970E4F29F47F546CD27B6BB40A9BDDEAFF5D540B7E5A8D3CB8977A6B8E736D0D331A5B14F306AC475A1553C7745F66D637370062D5EEF5FB2773FDE4BD70225C585E25FE63A56B2AB44E242BC13AB64055F4D5B9BECF794DE7B609B7AADDA32E867227D5EB0335F7E6C039AFDED14A45
	CA7966CA576400F2E1EB7C7CDE4A176D117C5E93C86E3E7D41742C8AA877472EE0F24D81657E5B4F1E1DD2BE07F48D5310A35F78E68AF1856C3D82721EF7937B05D1815F9BC926E70253C0B65A037D7DEBF2B4A755792A625ED2B4716F95FE7489545136D9EED317627E35CD93DFF75A0456A1FDAF698B7C5DCB0BEF7C6FDE5AFC5A5F3DDC700D7D6E255B277D5DCB1FEF6CF7AF03BEF276BB887B68CE1E4F41310B9C3BCA4BA498FDB90663A3D4AF02634BB18C7F086AB5C231CE893BCB01DD1430FBFD641997B4
	5966623FC5926EA35FC48E589D8E160E20F96CC3DE2B486D71E52A235DEDD6687DB047085EECACED26E76E33E19C45FB70FD2B976959E0A22497F22C2E9F5F41DA4C318756912C592B57593C083DC631D1C8CF6718190E5798C847F12C16FEE3B49F528BB8463EBBA2F5AC62182F9E3186913133748CBF8252D19CFB63BCED872463B95651413FAB6258ACFA56DFBC2C57D58DA376A87D16329952A60EAD3323ECAF47DAAB900B61581FCEA1A6FC486B256743C6C877F26C431B743BC7C8CF62582BB7D1B602E307
	6859FFB22497FF08312DAAC79E6F8794774FAD1F78317F6AA7D04777D648ED0AD55CB72E18783A3BA6348E5627A2BDFF97C660FE847B39FB974136C13A06E34F6E623E4E3104F46A6B101E4D31A27A1CA581528BB996D3CB30B4C8677A90CB213F75D28C69AA0E356D45BA6AB916EAC2AC1CE3E6FAB61D8469940EBDC3FFDBC93886775790AB6DC659A20E555167B18EC80FF2EC7FD55A8EC8C7F16C612BA8BB0BE36B77A1164631396D0835DE673FB1C46B188E69D99C3B1F7EEEDD9C2467F16C4F97D0B609E35F
	214F008CB7404EB7F00C4D58AA7BDD34623EFA6B447B6049CF200E4D5B64B66DD45C4714CEFC5D4FCFE89D2CCF9F214F4CDA21BF3BEFE0BFBFC447139B52E19CCB63E3AC1CE3B372282FC3DA98C56CCD0A95C23A06E30F53E7F0AD106E6458EF6978F4C0FA14E3C7B2300EA99CFBB98731C40EFD0D4605320F743A5A0F908B27FE5D8A69EE0E3D319BE5ED9CDBC2E5E3A11D4031D7E83EA4C827F06C3081E5D3B9B6173FCF5D72B19F0B5908C5F26CBF68333F0510CE655864F202655E0471FE93317FACC759B20E
	4D204F82FD108E3F493F556D157D6EE145FDE96F447BE07DA7D0C7DE1F5C263795770F1AA73E6EFF1E50BAD81FEE22BE9C897D994D7B79AD9A1B67C0FAAE47FA78FC1248318E6A1BE5E190434378EF56D12C9752E19C6B237EBA8D52B3B9F6100E27D8C8A7F06C2707300E799C5B3E9631ED1FC36CB17A4CD60474A40ED969776611100E66584F78B76833B97690FD361BF517DED7F897E24F53F5F09924EBB9D6E9C159E60EC56DC7EC9A47523A90DB4031DC3A262C399BE46F66F3BEDD13F7C25A46310AE11495
	6F4677617E36112C67C572DA11005F3FAE3FCE7C0E71770BF41F609A9259375827E83971A0BF0F171152C7FF178FB6D7CC5EF003483377665A7A033DB737DC70FF4FD31884721358FBF364BC26906EBFD2708B04EF2DA37BB85848582F133FE564A02F4D60AF1260776C4F527D83E9D771A454712DF585FEF20D8E7B609079B4DC12A9DC0FB22DDC4637513F6DDF20FB909F70A771BCE71D7EEDBFBBAA37FD36B3D85B170D5376591358BBC3649DD7D65E8375414A53294A0BD314C7F873617EF3D259527B2ED67F
	760D52BDD1B264CB616D4B6E70EF1F67A339FD4E0ED05E61D5372F689E3DEE2554BED657CF8A7C75F9196E334AA0DF4DBD284F53B6FFFD96FCAC6B33599E4A7B70EAFDACD0C7011F3D7BAB46333732BC77BD7E761EF40FECEFD65E7F1C9A2FBC6537A5912A72E6C2FAB8DD36E90160AC7537575DF44F98837966F0FBFD7E263F3D08B46A73171B21FC6B2236D78A54D16A57FF67170F0DA53BC8D6C95F293D7E7ABEC2579F29D0CE56E454573B4BDF5F5399323E093B6EA41654CCD64712FFCB9FBF163C150EF121
	016B38AFA3F8ACB91D01B28EAE73AF357EED7FAD5DEBC582FFA64F1339573F6D6ECC396D363DF792CB66CFD647125567C309A549137DFDF171E4F5AC7199D431124E41423D30173C975B7762A57F76FDA9CBEEDFDD771D44127AFB553124ED373FBE03F41D508279CCDC1F562B7E7ABC251375F9626A1D4412C9772AE3491EFD21441208FBD5E37FDEF5ACF92DBD14D89223AAAF7EDEF5ACB92732170D5AEB9E64CB6276FA64023F3DDEDEAA5BEBE9671D44125CA96AD892DFB2B616245160457831237E7A3EC077
	EE6B211CEDD3D05F6F2AE2492965323E853B6FA416182628E349D3F9634712DF65E1DC6865BA6664870FA55B72D1A61C4BBC176F5F76C41AA7967871BC4F62F47F368F6548ED3F18F1A731E47194F5ACD91493CAAC916E737745427B543164C955BC11C06709E248E7388F5B770D5D7E6DFBF0055C3EEC431D44126E7B5431E42D59DF9F83FD3F548679C42E4F9BAAFD62F2E5FDBA4655A7D8AC19F91FBA163C9674DB94F5AC09D159BB7EBEF5ACF9A2BB14D8B2CFD55E027B5431C468713757DA3A0FDF84795238
	3D3EDE6EEF2F57D64A764A88BA4F0F97CB8C772BE349D3BDE3E349D27228C85237A647DF5F136C1C854AE93E9F754DB7796BCBBF1111747D50F4A731C43CDF9DCB1C3B470FA5D3F6E3DC8863BABE3BBBF8ACF9154B4C62B257D4737683F45ECE847E821E67DC06EA2C654BEDCFBAF4A73124F02ABA16542F8DA51694CF7577451A296AD892F7453FFD7FCA77728D102FF5AA36EFF40BFF7BE66B65767DFE4B1D441251296AD8725DB57E7A44537301A910EF9A57A7395FDF1F178AE4FD0EDA6EA41644CFD547129F
	6E8FA5164CD359FB41D4F5ACA93894CAACD924AAAFABDC9DCBCAAB7C6DF5001EF564C13E22F034573F097E76DA32C636D773701D441256F0B91630329FA00FC1A55D1E6FAB91D43F8DF68C94AD5B5A68311B9DDB8D455570FF8DF937FA6CF78598071EAC124BCBDCC772A97FC4D5BB7997FF3257DB59FA7418C94A7B4606DB49AB2D333748F5981CE3FE8B0D69EC8115DD0320F415243434A6AE96B475476FA2DEAE115B32FF1BDC4F9F4F07D6CF67F6391C47FDF2B9DF3105D64E8B57026B1BF6BDB8FF4B282C47
	521B329E17EF0626C739220F6FDFAA17E35CF52BBE43E43F23D87366E75C3AFFD8EEA9AF2B23B0C72EA339BA34F63E3BA238BD3BF2E5BB3C32CA2E6749CB2155730F55F2B99775F2B965D7C3ABE734A0383EB38A03731FDBA36BD17A362C474797C253635886399C77A6391C29A17A4717B64B328B73EE5DBF8E665F3AFF7C39D82E63D7692135D33FB538BD77174AF6F8F03BDCCF586E506A193DC3AEE7E339DC4E8BA116F3E8D7F0FD4D3B0373A799E4BD12ABE5BD2E170726C7E615DCCE4FDE391C575BC3730F
	3B764932B3F65F3AFF7C651672CAEB777764BA76E404564E2507035B333CC136C34491391E0BDBC22B677BCDF2B92B0F49657C28BF34F2769E8F2E6F7916607C47CF4AFA68CF4BFA4C91C353E37F99A23B0E4ABE3F61C50808337ECB5009026075887A31BFD55A780517DF1A5553DC18A1E41C90165A686BE1A7845D88F94F4C6796048C72646F9B5E2B4247E45DF3F309B225410BD271BC42EADE67897A8ED972077B6AB2DF7BC6E60610859532F76ACE88D96445B82857436A4F94DDEED2BB3581B968A593250E
	163DCC05E60D039ED6222220EF36BA4DC316E27A47C10A690F9F08C2D6857CA78ACB698FA954418D4561E6997B15838251CF4961A6CF7E71605B91DF053FAFFCBB4279528F905FDE655099AB7DFC68270F6C7F77393F6B70E68ACBCF88EF1325F43B55C3FFB95CEAA1FF772F436AA1AEF2CCD86E26BF4883B8741417DEF4DE711A435AAA948E1CA3FF8653ABDAAD0D781B64DED1D8C37FCC699E725B84FBDA4CDE1BC85E27BC58AAE48D191DD6688546F618078677309FA8BFC83BBB3D31178E8A329EC887FD8B28
	3E2414CADECA41BF2F5EDEF2F2C1EC2610F1CC48F1384C16E366FE5165B9A1AC97ED9E2B5766F2D8FC6E43B4BC8859A3E4242D209E6191B672661346D6126DB3D77A0A6F6B61AB972EBCC6FEC453A36C21B9494E21126730B4594C9E284A6AB981E406AA37F15E67B60BBBFEF1FCDDF70610AEB512785F8E1FDB842DBC66A1AF79732D20C131CA83E47102AA3F74FC55179FFB2B0B96A40B0A4296E6B2905DB3E8F5B977B48E8C0097718240FED07CA6DEBC49D3294A2377BD3866640BCB7A203F1B05CCE7D5957D
	371A7E3B177CDBCD11EA0AD46F85A3AE92027E27667B68285BA5B2A761031FF4F365B168A971157FFA7E51D76B9725C06B0E89BA7A47984158F9F22EB3434EBE2BE7722CAFEFDAB1ADF9AA698BB7F189ACF7690059E9F7DC031BE69A7DB84E5EEB25497D2467FD642E4E472340BAC943EC9E9B36295C0D55D1B646EFB289EC204CCA7AEFF548D6A1D27B18EE24C2F2D34B1BC0394D3226EB25C8C67E13A31EDE1063DB6627CF7FD6D9FF328CA65B86F28C36745327E93B2C69B2C9538C2E2972440620D91A286E53
	572AEE39D5CB952D5256B4BD0026D9932CA9C99DA47F3CC77375EB0F4ECF21F5AFEB0FCE59E7142373D398DDBC5A23F35927CF53EB5AFE3C6C33BDBA6F7A8C0E4E7B7CFD1E6AA2FCAAA3FA44E7FCF4C6FEE6C6678CEDBF561EBBB3BFAB23B37AB3B8BA3F7719991DCFFD46C767B31F195179537FAFC7678B81C627003FA1D8FED379F776D26F5999706F6CAD1C413E87CE1BA17F06A07B5D249F52EFF6EA2374BAD3947E765132128AA1705F6AEDF71A9D8E516C3852B8E4A1FF377748B551AA7F6D4EB9A524FCAF
	661118525F6CAEA1FADFD6487CDFD0CB8788BCE3C55794AAGG8C18GGD0CB818294G94G88G88GGC843B2BCE3C55794AAGG8C18GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGCEAAGGGG
**end of data**/
}


/**
 * Return the JComboBoxPoint1 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxDmdPoint() {
	if (ivjJComboBoxDmdPoint == null) {
		try {
			ivjJComboBoxDmdPoint = new javax.swing.JComboBox();
			ivjJComboBoxDmdPoint.setName("JComboBoxDmdPoint");
			// user code begin {1}
			
			ivjJComboBoxDmdPoint.setEnabled( false );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxDmdPoint;
}


/**
 * Return the JComboBoxPoint111 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxPointBase() {
	if (ivjJComboBoxPointBase == null) {
		try {
			ivjJComboBoxPointBase = new javax.swing.JComboBox();
			ivjJComboBoxPointBase.setName("JComboBoxPointBase");
			// user code begin {1}
			
			ivjJComboBoxPointBase.setEnabled( false );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxPointBase;
}


/**
 * Return the JComboBoxPoint112 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxPointCurt() {
	if (ivjJComboBoxPointCurt == null) {
		try {
			ivjJComboBoxPointCurt = new javax.swing.JComboBox();
			ivjJComboBoxPointCurt.setName("JComboBoxPointCurt");
			// user code begin {1}
			
			ivjJComboBoxPointCurt.setEnabled( false );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxPointCurt;
}


/**
 * Return the JComboBoxPoint11 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxPointSettl() {
	if (ivjJComboBoxPointSettl == null) {
		try {
			ivjJComboBoxPointSettl = new javax.swing.JComboBox();
			ivjJComboBoxPointSettl.setName("JComboBoxPointSettl");
			// user code begin {1}
			
			ivjJComboBoxPointSettl.setEnabled( false );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxPointSettl;
}


/**
 * Return the JComboDevice111 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboDeviceBase() {
	if (ivjJComboDeviceBase == null) {
		try {
			ivjJComboDeviceBase = new javax.swing.JComboBox();
			ivjJComboDeviceBase.setName("JComboDeviceBase");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboDeviceBase;
}


/**
 * Return the JComboDevice112 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboDeviceCurt() {
	if (ivjJComboDeviceCurt == null) {
		try {
			ivjJComboDeviceCurt = new javax.swing.JComboBox();
			ivjJComboDeviceCurt.setName("JComboDeviceCurt");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboDeviceCurt;
}


/**
 * Return the JComboDevice11 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboDeviceSettl() {
	if (ivjJComboDeviceSettl == null) {
		try {
			ivjJComboDeviceSettl = new javax.swing.JComboBox();
			ivjJComboDeviceSettl.setName("JComboDeviceSettl");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboDeviceSettl;
}


/**
 * Return the JComboDevice1 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboDmdDevice() {
	if (ivjJComboDmdDevice == null) {
		try {
			ivjJComboDmdDevice = new javax.swing.JComboBox();
			ivjJComboDmdDevice.setName("JComboDmdDevice");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboDmdDevice;
}


/**
 * Return the JLabelActualValue111 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelActualValueBase() {
	if (ivjJLabelActualValueBase == null) {
		try {
			ivjJLabelActualValueBase = new javax.swing.JLabel();
			ivjJLabelActualValueBase.setName("JLabelActualValueBase");
			ivjJLabelActualValueBase.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelActualValueBase.setText("----");
			ivjJLabelActualValueBase.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelActualValueBase.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelActualValueBase;
}


/**
 * Return the JLabelActualValue112 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelActualValueCurt() {
	if (ivjJLabelActualValueCurt == null) {
		try {
			ivjJLabelActualValueCurt = new javax.swing.JLabel();
			ivjJLabelActualValueCurt.setName("JLabelActualValueCurt");
			ivjJLabelActualValueCurt.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelActualValueCurt.setText("----");
			ivjJLabelActualValueCurt.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelActualValueCurt.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelActualValueCurt;
}


/**
 * Return the JLabelActualValue1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelActualValueDmd() {
	if (ivjJLabelActualValueDmd == null) {
		try {
			ivjJLabelActualValueDmd = new javax.swing.JLabel();
			ivjJLabelActualValueDmd.setName("JLabelActualValueDmd");
			ivjJLabelActualValueDmd.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelActualValueDmd.setText("----");
			ivjJLabelActualValueDmd.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelActualValueDmd.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelActualValueDmd;
}


/**
 * Return the JLabelActualValue11 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelActualValueSettl() {
	if (ivjJLabelActualValueSettl == null) {
		try {
			ivjJLabelActualValueSettl = new javax.swing.JLabel();
			ivjJLabelActualValueSettl.setName("JLabelActualValueSettl");
			ivjJLabelActualValueSettl.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelActualValueSettl.setText("----");
			ivjJLabelActualValueSettl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelActualValueSettl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelActualValueSettl;
}


/**
 * Return the JLabelBasLbl property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelBasLbl() {
	if (ivjJLabelBasLbl == null) {
		try {
			ivjJLabelBasLbl = new javax.swing.JLabel();
			ivjJLabelBasLbl.setName("JLabelBasLbl");
			ivjJLabelBasLbl.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelBasLbl.setText("Label:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelBasLbl;
}


/**
 * Return the JLabelCurtLbl property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCurtLbl() {
	if (ivjJLabelCurtLbl == null) {
		try {
			ivjJLabelCurtLbl = new javax.swing.JLabel();
			ivjJLabelCurtLbl.setName("JLabelCurtLbl");
			ivjJLabelCurtLbl.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelCurtLbl.setText("Label:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCurtLbl;
}


/**
 * Return the JLabelState21 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelDeviceBase() {
	if (ivjJLabelDeviceBase == null) {
		try {
			ivjJLabelDeviceBase = new javax.swing.JLabel();
			ivjJLabelDeviceBase.setName("JLabelDeviceBase");
			ivjJLabelDeviceBase.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelDeviceBase.setText("Device:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelDeviceBase;
}


/**
 * Return the JLabelState22 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelDeviceCurt() {
	if (ivjJLabelDeviceCurt == null) {
		try {
			ivjJLabelDeviceCurt = new javax.swing.JLabel();
			ivjJLabelDeviceCurt.setName("JLabelDeviceCurt");
			ivjJLabelDeviceCurt.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelDeviceCurt.setText("Device:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelDeviceCurt;
}


/**
 * Return the JLabelState2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelDeviceSettl() {
	if (ivjJLabelDeviceSettl == null) {
		try {
			ivjJLabelDeviceSettl = new javax.swing.JLabel();
			ivjJLabelDeviceSettl.setName("JLabelDeviceSettl");
			ivjJLabelDeviceSettl.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelDeviceSettl.setText("Device:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelDeviceSettl;
}


/**
 * Return the JLabelPrimeContact property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelDmdDevice() {
	if (ivjJLabelDmdDevice == null) {
		try {
			ivjJLabelDmdDevice = new javax.swing.JLabel();
			ivjJLabelDmdDevice.setName("JLabelDmdDevice");
			ivjJLabelDmdDevice.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelDmdDevice.setText("Device:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelDmdDevice;
}


/**
 * Return the JLabelDmdLbl property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelDmdLbl() {
	if (ivjJLabelDmdLbl == null) {
		try {
			ivjJLabelDmdLbl = new javax.swing.JLabel();
			ivjJLabelDmdLbl.setName("JLabelDmdLbl");
			ivjJLabelDmdLbl.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelDmdLbl.setText("Label:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelDmdLbl;
}


/**
 * Return the JLabelState1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelDmdPoint() {
	if (ivjJLabelDmdPoint == null) {
		try {
			ivjJLabelDmdPoint = new javax.swing.JLabel();
			ivjJLabelDmdPoint.setName("JLabelDmdPoint");
			ivjJLabelDmdPoint.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelDmdPoint.setText("Point:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelDmdPoint;
}


/**
 * Return the JLabelState111 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPointBase() {
	if (ivjJLabelPointBase == null) {
		try {
			ivjJLabelPointBase = new javax.swing.JLabel();
			ivjJLabelPointBase.setName("JLabelPointBase");
			ivjJLabelPointBase.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelPointBase.setText("Point:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPointBase;
}


/**
 * Return the JLabelState112 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPointCurt() {
	if (ivjJLabelPointCurt == null) {
		try {
			ivjJLabelPointCurt = new javax.swing.JLabel();
			ivjJLabelPointCurt.setName("JLabelPointCurt");
			ivjJLabelPointCurt.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelPointCurt.setText("Point:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPointCurt;
}


/**
 * Return the JLabelState11 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelPointSettl() {
	if (ivjJLabelPointSettl == null) {
		try {
			ivjJLabelPointSettl = new javax.swing.JLabel();
			ivjJLabelPointSettl.setName("JLabelPointSettl");
			ivjJLabelPointSettl.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelPointSettl.setText("Point:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelPointSettl;
}


/**
 * Return the JLabelSettLbl property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelSettLbl() {
	if (ivjJLabelSettLbl == null) {
		try {
			ivjJLabelSettLbl = new javax.swing.JLabel();
			ivjJLabelSettLbl.setName("JLabelSettLbl");
			ivjJLabelSettLbl.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelSettLbl.setText("Label:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelSettLbl;
}


/**
 * Return the JLabelTxtValue111 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelTxtValueBase() {
	if (ivjJLabelTxtValueBase == null) {
		try {
			ivjJLabelTxtValueBase = new javax.swing.JLabel();
			ivjJLabelTxtValueBase.setName("JLabelTxtValueBase");
			ivjJLabelTxtValueBase.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelTxtValueBase.setText("Value:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelTxtValueBase;
}


/**
 * Return the JLabelTxtValue112 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelTxtValueCurt() {
	if (ivjJLabelTxtValueCurt == null) {
		try {
			ivjJLabelTxtValueCurt = new javax.swing.JLabel();
			ivjJLabelTxtValueCurt.setName("JLabelTxtValueCurt");
			ivjJLabelTxtValueCurt.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelTxtValueCurt.setText("Value:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelTxtValueCurt;
}


/**
 * Return the JLabelTxtValue1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelTxtValueDmd() {
	if (ivjJLabelTxtValueDmd == null) {
		try {
			ivjJLabelTxtValueDmd = new javax.swing.JLabel();
			ivjJLabelTxtValueDmd.setName("JLabelTxtValueDmd");
			ivjJLabelTxtValueDmd.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelTxtValueDmd.setText("Value:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelTxtValueDmd;
}


/**
 * Return the JLabelTxtValue11 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelTxtValueSettl() {
	if (ivjJLabelTxtValueSettl == null) {
		try {
			ivjJLabelTxtValueSettl = new javax.swing.JLabel();
			ivjJLabelTxtValueSettl.setName("JLabelTxtValueSettl");
			ivjJLabelTxtValueSettl.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelTxtValueSettl.setText("Value:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelTxtValueSettl;
}


/**
 * Return the JPanelBaseline property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelBaseline() {
	if (ivjJPanelBaseline == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder2;
			ivjLocalBorder2 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder2.setTitle("Baseline Point");
			ivjJPanelBaseline = new javax.swing.JPanel();
			ivjJPanelBaseline.setName("JPanelBaseline");
			ivjJPanelBaseline.setBorder(ivjLocalBorder2);
			ivjJPanelBaseline.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabelActualValueBase = new java.awt.GridBagConstraints();
			constraintsJLabelActualValueBase.gridx = 4; constraintsJLabelActualValueBase.gridy = 3;
			constraintsJLabelActualValueBase.ipadx = 62;
			constraintsJLabelActualValueBase.ipady = 1;
			constraintsJLabelActualValueBase.insets = new java.awt.Insets(6, 0, 22, 8);
			getJPanelBaseline().add(getJLabelActualValueBase(), constraintsJLabelActualValueBase);

			java.awt.GridBagConstraints constraintsJLabelTxtValueBase = new java.awt.GridBagConstraints();
			constraintsJLabelTxtValueBase.gridx = 3; constraintsJLabelTxtValueBase.gridy = 3;
			constraintsJLabelTxtValueBase.ipadx = 2;
			constraintsJLabelTxtValueBase.ipady = -2;
			constraintsJLabelTxtValueBase.insets = new java.awt.Insets(6, 3, 22, 0);
			getJPanelBaseline().add(getJLabelTxtValueBase(), constraintsJLabelTxtValueBase);

			java.awt.GridBagConstraints constraintsJComboBoxPointBase = new java.awt.GridBagConstraints();
			constraintsJComboBoxPointBase.gridx = 2; constraintsJComboBoxPointBase.gridy = 3;
			constraintsJComboBoxPointBase.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJComboBoxPointBase.weightx = 1.0;
			constraintsJComboBoxPointBase.ipadx = 64;
			constraintsJComboBoxPointBase.insets = new java.awt.Insets(4, 3, 18, 2);
			getJPanelBaseline().add(getJComboBoxPointBase(), constraintsJComboBoxPointBase);

			java.awt.GridBagConstraints constraintsJLabelPointBase = new java.awt.GridBagConstraints();
			constraintsJLabelPointBase.gridx = 1; constraintsJLabelPointBase.gridy = 3;
			constraintsJLabelPointBase.ipadx = 6;
			constraintsJLabelPointBase.ipady = -2;
			constraintsJLabelPointBase.insets = new java.awt.Insets(7, 10, 21, 16);
			getJPanelBaseline().add(getJLabelPointBase(), constraintsJLabelPointBase);

			java.awt.GridBagConstraints constraintsJLabelDeviceBase = new java.awt.GridBagConstraints();
			constraintsJLabelDeviceBase.gridx = 1; constraintsJLabelDeviceBase.gridy = 2;
			constraintsJLabelDeviceBase.ipadx = 9;
			constraintsJLabelDeviceBase.ipady = -2;
			constraintsJLabelDeviceBase.insets = new java.awt.Insets(6, 10, 6, 2);
			getJPanelBaseline().add(getJLabelDeviceBase(), constraintsJLabelDeviceBase);

			java.awt.GridBagConstraints constraintsJComboDeviceBase = new java.awt.GridBagConstraints();
			constraintsJComboDeviceBase.gridx = 2; constraintsJComboDeviceBase.gridy = 2;
			constraintsJComboDeviceBase.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJComboDeviceBase.weightx = 1.0;
			constraintsJComboDeviceBase.ipadx = 64;
			constraintsJComboDeviceBase.insets = new java.awt.Insets(3, 3, 3, 2);
			getJPanelBaseline().add(getJComboDeviceBase(), constraintsJComboDeviceBase);

			java.awt.GridBagConstraints constraintsJTextFieldBaseLabel = new java.awt.GridBagConstraints();
			constraintsJTextFieldBaseLabel.gridx = 2; constraintsJTextFieldBaseLabel.gridy = 1;
			constraintsJTextFieldBaseLabel.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldBaseLabel.weightx = 1.0;
			constraintsJTextFieldBaseLabel.ipadx = 186;
			constraintsJTextFieldBaseLabel.ipady = 3;
			constraintsJTextFieldBaseLabel.insets = new java.awt.Insets(5, 3, 3, 2);
			getJPanelBaseline().add(getJTextFieldBaseLabel(), constraintsJTextFieldBaseLabel);

			java.awt.GridBagConstraints constraintsJLabelBasLbl = new java.awt.GridBagConstraints();
			constraintsJLabelBasLbl.gridx = 1; constraintsJLabelBasLbl.gridy = 1;
			constraintsJLabelBasLbl.ipadx = 17;
			constraintsJLabelBasLbl.ipady = -2;
			constraintsJLabelBasLbl.insets = new java.awt.Insets(5, 10, 6, 2);
			getJPanelBaseline().add(getJLabelBasLbl(), constraintsJLabelBasLbl);
			// user code begin {1}
			
			getJPanelBaseline().setVisible( false );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelBaseline;
}

/**
 * Return the JPanelCurtailable property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelCurtailable() {
	if (ivjJPanelCurtailable == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder3;
			ivjLocalBorder3 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder3.setTitle("Curtailment Point");
			ivjJPanelCurtailable = new javax.swing.JPanel();
			ivjJPanelCurtailable.setName("JPanelCurtailable");
			ivjJPanelCurtailable.setBorder(ivjLocalBorder3);
			ivjJPanelCurtailable.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabelActualValueCurt = new java.awt.GridBagConstraints();
			constraintsJLabelActualValueCurt.gridx = 4; constraintsJLabelActualValueCurt.gridy = 3;
			constraintsJLabelActualValueCurt.ipadx = 62;
			constraintsJLabelActualValueCurt.ipady = 1;
			constraintsJLabelActualValueCurt.insets = new java.awt.Insets(6, 0, 22, 8);
			getJPanelCurtailable().add(getJLabelActualValueCurt(), constraintsJLabelActualValueCurt);

			java.awt.GridBagConstraints constraintsJLabelTxtValueCurt = new java.awt.GridBagConstraints();
			constraintsJLabelTxtValueCurt.gridx = 3; constraintsJLabelTxtValueCurt.gridy = 3;
			constraintsJLabelTxtValueCurt.ipadx = 2;
			constraintsJLabelTxtValueCurt.ipady = -2;
			constraintsJLabelTxtValueCurt.insets = new java.awt.Insets(6, 3, 22, 0);
			getJPanelCurtailable().add(getJLabelTxtValueCurt(), constraintsJLabelTxtValueCurt);

			java.awt.GridBagConstraints constraintsJComboBoxPointCurt = new java.awt.GridBagConstraints();
			constraintsJComboBoxPointCurt.gridx = 2; constraintsJComboBoxPointCurt.gridy = 3;
			constraintsJComboBoxPointCurt.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJComboBoxPointCurt.weightx = 1.0;
			constraintsJComboBoxPointCurt.ipadx = 64;
			constraintsJComboBoxPointCurt.insets = new java.awt.Insets(4, 3, 18, 2);
			getJPanelCurtailable().add(getJComboBoxPointCurt(), constraintsJComboBoxPointCurt);

			java.awt.GridBagConstraints constraintsJLabelPointCurt = new java.awt.GridBagConstraints();
			constraintsJLabelPointCurt.gridx = 1; constraintsJLabelPointCurt.gridy = 3;
			constraintsJLabelPointCurt.ipadx = 6;
			constraintsJLabelPointCurt.ipady = -2;
			constraintsJLabelPointCurt.insets = new java.awt.Insets(7, 10, 21, 16);
			getJPanelCurtailable().add(getJLabelPointCurt(), constraintsJLabelPointCurt);

			java.awt.GridBagConstraints constraintsJLabelDeviceCurt = new java.awt.GridBagConstraints();
			constraintsJLabelDeviceCurt.gridx = 1; constraintsJLabelDeviceCurt.gridy = 2;
			constraintsJLabelDeviceCurt.ipadx = 9;
			constraintsJLabelDeviceCurt.ipady = -2;
			constraintsJLabelDeviceCurt.insets = new java.awt.Insets(6, 10, 6, 2);
			getJPanelCurtailable().add(getJLabelDeviceCurt(), constraintsJLabelDeviceCurt);

			java.awt.GridBagConstraints constraintsJComboDeviceCurt = new java.awt.GridBagConstraints();
			constraintsJComboDeviceCurt.gridx = 2; constraintsJComboDeviceCurt.gridy = 2;
			constraintsJComboDeviceCurt.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJComboDeviceCurt.weightx = 1.0;
			constraintsJComboDeviceCurt.ipadx = 64;
			constraintsJComboDeviceCurt.insets = new java.awt.Insets(3, 3, 3, 2);
			getJPanelCurtailable().add(getJComboDeviceCurt(), constraintsJComboDeviceCurt);

			java.awt.GridBagConstraints constraintsJTextFieldCurtLabel = new java.awt.GridBagConstraints();
			constraintsJTextFieldCurtLabel.gridx = 2; constraintsJTextFieldCurtLabel.gridy = 1;
			constraintsJTextFieldCurtLabel.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldCurtLabel.weightx = 1.0;
			constraintsJTextFieldCurtLabel.ipadx = 186;
			constraintsJTextFieldCurtLabel.ipady = 3;
			constraintsJTextFieldCurtLabel.insets = new java.awt.Insets(5, 3, 3, 2);
			getJPanelCurtailable().add(getJTextFieldCurtLabel(), constraintsJTextFieldCurtLabel);

			java.awt.GridBagConstraints constraintsJLabelCurtLbl = new java.awt.GridBagConstraints();
			constraintsJLabelCurtLbl.gridx = 1; constraintsJLabelCurtLbl.gridy = 1;
			constraintsJLabelCurtLbl.ipadx = 17;
			constraintsJLabelCurtLbl.ipady = -2;
			constraintsJLabelCurtLbl.insets = new java.awt.Insets(5, 10, 6, 2);
			getJPanelCurtailable().add(getJLabelCurtLbl(), constraintsJLabelCurtLbl);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelCurtailable;
}

/**
 * Return the JPanelDmd property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelDmd() {
	if (ivjJPanelDmd == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitle("Demand Level Point");
			ivjJPanelDmd = new javax.swing.JPanel();
			ivjJPanelDmd.setName("JPanelDmd");
			ivjJPanelDmd.setBorder(ivjLocalBorder);
			ivjJPanelDmd.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabelActualValueDmd = new java.awt.GridBagConstraints();
			constraintsJLabelActualValueDmd.gridx = 4; constraintsJLabelActualValueDmd.gridy = 3;
			constraintsJLabelActualValueDmd.ipadx = 62;
			constraintsJLabelActualValueDmd.ipady = 1;
			constraintsJLabelActualValueDmd.insets = new java.awt.Insets(4, 0, 23, 8);
			getJPanelDmd().add(getJLabelActualValueDmd(), constraintsJLabelActualValueDmd);

			java.awt.GridBagConstraints constraintsJLabelTxtValueDmd = new java.awt.GridBagConstraints();
			constraintsJLabelTxtValueDmd.gridx = 3; constraintsJLabelTxtValueDmd.gridy = 3;
			constraintsJLabelTxtValueDmd.ipadx = 2;
			constraintsJLabelTxtValueDmd.ipady = -2;
			constraintsJLabelTxtValueDmd.insets = new java.awt.Insets(5, 3, 22, 0);
			getJPanelDmd().add(getJLabelTxtValueDmd(), constraintsJLabelTxtValueDmd);

			java.awt.GridBagConstraints constraintsJComboBoxDmdPoint = new java.awt.GridBagConstraints();
			constraintsJComboBoxDmdPoint.gridx = 2; constraintsJComboBoxDmdPoint.gridy = 3;
			constraintsJComboBoxDmdPoint.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJComboBoxDmdPoint.weightx = 1.0;
			constraintsJComboBoxDmdPoint.ipadx = 64;
			constraintsJComboBoxDmdPoint.insets = new java.awt.Insets(3, 3, 18, 2);
			getJPanelDmd().add(getJComboBoxDmdPoint(), constraintsJComboBoxDmdPoint);

			java.awt.GridBagConstraints constraintsJLabelDmdPoint = new java.awt.GridBagConstraints();
			constraintsJLabelDmdPoint.gridx = 1; constraintsJLabelDmdPoint.gridy = 3;
			constraintsJLabelDmdPoint.ipadx = 6;
			constraintsJLabelDmdPoint.ipady = -2;
			constraintsJLabelDmdPoint.insets = new java.awt.Insets(6, 10, 21, 16);
			getJPanelDmd().add(getJLabelDmdPoint(), constraintsJLabelDmdPoint);

			java.awt.GridBagConstraints constraintsJLabelDmdDevice = new java.awt.GridBagConstraints();
			constraintsJLabelDmdDevice.gridx = 1; constraintsJLabelDmdDevice.gridy = 2;
			constraintsJLabelDmdDevice.ipadx = 9;
			constraintsJLabelDmdDevice.ipady = -2;
			constraintsJLabelDmdDevice.insets = new java.awt.Insets(6, 10, 7, 2);
			getJPanelDmd().add(getJLabelDmdDevice(), constraintsJLabelDmdDevice);

			java.awt.GridBagConstraints constraintsJComboDmdDevice = new java.awt.GridBagConstraints();
			constraintsJComboDmdDevice.gridx = 2; constraintsJComboDmdDevice.gridy = 2;
			constraintsJComboDmdDevice.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJComboDmdDevice.weightx = 1.0;
			constraintsJComboDmdDevice.ipadx = 64;
			constraintsJComboDmdDevice.insets = new java.awt.Insets(4, 3, 3, 2);
			getJPanelDmd().add(getJComboDmdDevice(), constraintsJComboDmdDevice);

			java.awt.GridBagConstraints constraintsJTextFieldDmndLabel = new java.awt.GridBagConstraints();
			constraintsJTextFieldDmndLabel.gridx = 2; constraintsJTextFieldDmndLabel.gridy = 1;
			constraintsJTextFieldDmndLabel.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldDmndLabel.weightx = 1.0;
			constraintsJTextFieldDmndLabel.ipadx = 186;
			constraintsJTextFieldDmndLabel.ipady = 3;
			constraintsJTextFieldDmndLabel.insets = new java.awt.Insets(5, 3, 3, 2);
			getJPanelDmd().add(getJTextFieldDmndLabel(), constraintsJTextFieldDmndLabel);

			java.awt.GridBagConstraints constraintsJLabelDmdLbl = new java.awt.GridBagConstraints();
			constraintsJLabelDmdLbl.gridx = 1; constraintsJLabelDmdLbl.gridy = 1;
			constraintsJLabelDmdLbl.ipadx = 17;
			constraintsJLabelDmdLbl.ipady = -2;
			constraintsJLabelDmdLbl.insets = new java.awt.Insets(5, 10, 6, 2);
			getJPanelDmd().add(getJLabelDmdLbl(), constraintsJLabelDmdLbl);
			// user code begin {1}			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelDmd;
}

/**
 * Return the JPanelScroller property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelScroller() {
	if (ivjJPanelScroller == null) {
		try {
			ivjJPanelScroller = new javax.swing.JPanel();
			ivjJPanelScroller.setName("JPanelScroller");
			ivjJPanelScroller.setPreferredSize(new java.awt.Dimension(163, 600));
			ivjJPanelScroller.setLayout(new java.awt.GridBagLayout());
			ivjJPanelScroller.setBounds(0, 0, 160, 120);
			ivjJPanelScroller.setMaximumSize(new java.awt.Dimension(160, 32767));
			ivjJPanelScroller.setMinimumSize(new java.awt.Dimension(163, 600));

			java.awt.GridBagConstraints constraintsJPanelDmd = new java.awt.GridBagConstraints();
			constraintsJPanelDmd.gridx = 1; constraintsJPanelDmd.gridy = 1;
			constraintsJPanelDmd.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJPanelDmd.weightx = 1.0;
			constraintsJPanelDmd.weighty = 1.0;
			constraintsJPanelDmd.ipadx = -18;
			constraintsJPanelDmd.ipady = -2;
			constraintsJPanelDmd.insets = new java.awt.Insets(5, 2, 3, 6);
			getJPanelScroller().add(getJPanelDmd(), constraintsJPanelDmd);

			java.awt.GridBagConstraints constraintsJPanelSettlement = new java.awt.GridBagConstraints();
			constraintsJPanelSettlement.gridx = 1; constraintsJPanelSettlement.gridy = 2;
			constraintsJPanelSettlement.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJPanelSettlement.weightx = 1.0;
			constraintsJPanelSettlement.weighty = 1.0;
			constraintsJPanelSettlement.ipadx = -18;
			constraintsJPanelSettlement.ipady = -2;
			constraintsJPanelSettlement.insets = new java.awt.Insets(4, 2, 3, 6);
			getJPanelScroller().add(getJPanelSettlement(), constraintsJPanelSettlement);

			java.awt.GridBagConstraints constraintsJPanelBaseline = new java.awt.GridBagConstraints();
			constraintsJPanelBaseline.gridx = 1; constraintsJPanelBaseline.gridy = 3;
			constraintsJPanelBaseline.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJPanelBaseline.weightx = 1.0;
			constraintsJPanelBaseline.weighty = 1.0;
			constraintsJPanelBaseline.ipadx = -18;
			constraintsJPanelBaseline.ipady = -2;
			constraintsJPanelBaseline.insets = new java.awt.Insets(4, 2, 3, 6);
			getJPanelScroller().add(getJPanelBaseline(), constraintsJPanelBaseline);

			java.awt.GridBagConstraints constraintsJPanelCurtailable = new java.awt.GridBagConstraints();
			constraintsJPanelCurtailable.gridx = 1; constraintsJPanelCurtailable.gridy = 4;
			constraintsJPanelCurtailable.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJPanelCurtailable.weightx = 1.0;
			constraintsJPanelCurtailable.weighty = 1.0;
			constraintsJPanelCurtailable.ipadx = -18;
			constraintsJPanelCurtailable.insets = new java.awt.Insets(4, 2, 63, 6);
			getJPanelScroller().add(getJPanelCurtailable(), constraintsJPanelCurtailable);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelScroller;
}



/**
 * Return the JPanelSettlement property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelSettlement() {
	if (ivjJPanelSettlement == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitle("Settlement Point");
			ivjJPanelSettlement = new javax.swing.JPanel();
			ivjJPanelSettlement.setName("JPanelSettlement");
			ivjJPanelSettlement.setBorder(ivjLocalBorder1);
			ivjJPanelSettlement.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabelActualValueSettl = new java.awt.GridBagConstraints();
			constraintsJLabelActualValueSettl.gridx = 4; constraintsJLabelActualValueSettl.gridy = 3;
			constraintsJLabelActualValueSettl.ipadx = 62;
			constraintsJLabelActualValueSettl.ipady = 1;
			constraintsJLabelActualValueSettl.insets = new java.awt.Insets(5, 0, 23, 8);
			getJPanelSettlement().add(getJLabelActualValueSettl(), constraintsJLabelActualValueSettl);

			java.awt.GridBagConstraints constraintsJLabelTxtValueSettl = new java.awt.GridBagConstraints();
			constraintsJLabelTxtValueSettl.gridx = 3; constraintsJLabelTxtValueSettl.gridy = 3;
			constraintsJLabelTxtValueSettl.ipadx = 2;
			constraintsJLabelTxtValueSettl.ipady = -2;
			constraintsJLabelTxtValueSettl.insets = new java.awt.Insets(6, 3, 22, 0);
			getJPanelSettlement().add(getJLabelTxtValueSettl(), constraintsJLabelTxtValueSettl);

			java.awt.GridBagConstraints constraintsJComboBoxPointSettl = new java.awt.GridBagConstraints();
			constraintsJComboBoxPointSettl.gridx = 2; constraintsJComboBoxPointSettl.gridy = 3;
			constraintsJComboBoxPointSettl.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJComboBoxPointSettl.weightx = 1.0;
			constraintsJComboBoxPointSettl.ipadx = 64;
			constraintsJComboBoxPointSettl.insets = new java.awt.Insets(4, 3, 18, 2);
			getJPanelSettlement().add(getJComboBoxPointSettl(), constraintsJComboBoxPointSettl);

			java.awt.GridBagConstraints constraintsJLabelPointSettl = new java.awt.GridBagConstraints();
			constraintsJLabelPointSettl.gridx = 1; constraintsJLabelPointSettl.gridy = 3;
			constraintsJLabelPointSettl.ipadx = 6;
			constraintsJLabelPointSettl.ipady = -2;
			constraintsJLabelPointSettl.insets = new java.awt.Insets(7, 10, 21, 16);
			getJPanelSettlement().add(getJLabelPointSettl(), constraintsJLabelPointSettl);

			java.awt.GridBagConstraints constraintsJLabelDeviceSettl = new java.awt.GridBagConstraints();
			constraintsJLabelDeviceSettl.gridx = 1; constraintsJLabelDeviceSettl.gridy = 2;
			constraintsJLabelDeviceSettl.ipadx = 9;
			constraintsJLabelDeviceSettl.ipady = -2;
			constraintsJLabelDeviceSettl.insets = new java.awt.Insets(7, 10, 6, 2);
			getJPanelSettlement().add(getJLabelDeviceSettl(), constraintsJLabelDeviceSettl);

			java.awt.GridBagConstraints constraintsJComboDeviceSettl = new java.awt.GridBagConstraints();
			constraintsJComboDeviceSettl.gridx = 2; constraintsJComboDeviceSettl.gridy = 2;
			constraintsJComboDeviceSettl.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJComboDeviceSettl.weightx = 1.0;
			constraintsJComboDeviceSettl.ipadx = 64;
			constraintsJComboDeviceSettl.insets = new java.awt.Insets(4, 3, 3, 2);
			getJPanelSettlement().add(getJComboDeviceSettl(), constraintsJComboDeviceSettl);

			java.awt.GridBagConstraints constraintsJTextFieldSettlLabel = new java.awt.GridBagConstraints();
			constraintsJTextFieldSettlLabel.gridx = 2; constraintsJTextFieldSettlLabel.gridy = 1;
			constraintsJTextFieldSettlLabel.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldSettlLabel.weightx = 1.0;
			constraintsJTextFieldSettlLabel.ipadx = 186;
			constraintsJTextFieldSettlLabel.ipady = 3;
			constraintsJTextFieldSettlLabel.insets = new java.awt.Insets(5, 3, 3, 2);
			getJPanelSettlement().add(getJTextFieldSettlLabel(), constraintsJTextFieldSettlLabel);

			java.awt.GridBagConstraints constraintsJLabelSettLbl = new java.awt.GridBagConstraints();
			constraintsJLabelSettLbl.gridx = 1; constraintsJLabelSettLbl.gridy = 1;
			constraintsJLabelSettLbl.ipadx = 17;
			constraintsJLabelSettLbl.ipady = -2;
			constraintsJLabelSettLbl.insets = new java.awt.Insets(5, 10, 6, 2);
			getJPanelSettlement().add(getJLabelSettLbl(), constraintsJLabelSettLbl);
			// user code begin {1}
			
			ivjLocalBorder1.setTitle( getJTextFieldSettlLabel().getText() + " Point");
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelSettlement;
}

/**
 * Return the JScrollPane property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane() {
	if (ivjJScrollPane == null) {
		try {
			ivjJScrollPane = new javax.swing.JScrollPane();
			ivjJScrollPane.setName("JScrollPane");
			ivjJScrollPane.setPreferredSize(new java.awt.Dimension(163, 600));
			ivjJScrollPane.setMaximumSize(new java.awt.Dimension(163, 32767));
			getJScrollPane().setViewportView(getJPanelScroller());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane;
}


/**
 * Return the JTextField111 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldBaseLabel() {
	if (ivjJTextFieldBaseLabel == null) {
		try {
			ivjJTextFieldBaseLabel = new javax.swing.JTextField();
			ivjJTextFieldBaseLabel.setName("JTextFieldBaseLabel");
			// user code begin {1}
			
			ivjJTextFieldBaseLabel.setText("Baseline");
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldBaseLabel;
}


/**
 * Return the JTextField112 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldCurtLabel() {
	if (ivjJTextFieldCurtLabel == null) {
		try {
			ivjJTextFieldCurtLabel = new javax.swing.JTextField();
			ivjJTextFieldCurtLabel.setName("JTextFieldCurtLabel");
			// user code begin {1}
			
			ivjJTextFieldCurtLabel.setText("Curtailable Load");
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldCurtLabel;
}


/**
 * Return the JTextField1 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldDmndLabel() {
	if (ivjJTextFieldDmndLabel == null) {
		try {
			ivjJTextFieldDmndLabel = new javax.swing.JTextField();
			ivjJTextFieldDmndLabel.setName("JTextFieldDmndLabel");
			// user code begin {1}
			
			ivjJTextFieldDmndLabel.setText("Demand Level");
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldDmndLabel;
}


/**
 * Return the JTextField11 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldSettlLabel() {
	if (ivjJTextFieldSettlLabel == null) {
		try {
			ivjJTextFieldSettlLabel = new javax.swing.JTextField();
			ivjJTextFieldSettlLabel.setName("JTextFieldSettlLabel");
			// user code begin {1}
			
			ivjJTextFieldSettlLabel.setText("Settlement");
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldSettlLabel;
}


/**
 * getValue method comment.
 */
public Object getValue(Object o) 
{
	CICustomerBase ciCust = (CICustomerBase)o;
	Vector tempVect = new Vector(8);		
	
	if( getJComboBoxDmdPoint().isEnabled() )
		tempVect.add( createPointData( getJPanelDmd(), getJComboBoxDmdPoint(), getJTextFieldDmndLabel(), CICustomerPointData.TYPE_DEMAND ) );

	if( getJComboBoxPointBase().isEnabled() )
		tempVect.add( createPointData( getJPanelBaseline(), getJComboBoxPointBase(), getJTextFieldBaseLabel(), CICustomerPointData.TYPE_BASELINE ) );

	if( getJComboBoxPointCurt().isEnabled() )
		tempVect.add( createPointData( getJPanelDmd(), getJComboBoxPointCurt(), getJTextFieldCurtLabel(), CICustomerPointData.TYPE_CURTAILABLE ) );

	if( getJComboBoxPointSettl().isEnabled() )
		tempVect.add( createPointData( getJPanelSettlement(), getJComboBoxPointSettl(), getJTextFieldSettlLabel(), CICustomerPointData.TYPE_SETTLEMENT ) );

	CICustomerPointData[] ciCustPointDatas = new CICustomerPointData[ tempVect.size() ];
	ciCust.setCiCustomerPointData(
		(CICustomerPointData[])tempVect.toArray(ciCustPointDatas) );

	return o;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	CTILogger.error( exception.getMessage(), exception );;
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	getJTextFieldDmndLabel().addCaretListener(this);
	getJComboDmdDevice().addActionListener(this);
	getJComboBoxDmdPoint().addActionListener(this);

	getJTextFieldBaseLabel().addCaretListener(this);
	getJComboDeviceBase().addActionListener(this);
	getJComboBoxPointBase().addActionListener(this);

	getJTextFieldSettlLabel().addCaretListener(this);
	getJComboDeviceSettl().addActionListener(this);
	getJComboBoxPointSettl().addActionListener(this);

	getJTextFieldCurtLabel().addCaretListener(this);
	getJComboDeviceCurt().addActionListener(this);
	getJComboBoxPointCurt().addActionListener(this);

	// user code end
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}

		initConnections();

		// user code end
		setName("CustomerAddressPanel");
		setToolTipText("");
		setLayout(new java.awt.BorderLayout());
		setSize(416, 348);
		add(getJScrollPane(), "Center");
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	
	
	initDeviceComboBoxes( getJComboDmdDevice() );
	initDeviceComboBoxes( getJComboDeviceBase() );
	initDeviceComboBoxes( getJComboDeviceCurt() );
	initDeviceComboBoxes( getJComboDeviceSettl() );

	// user code end
}

private void initDeviceComboBoxes( javax.swing.JComboBox comboBox )
{
	if( comboBox == null ) return;

	comboBox.removeAllItems();

	comboBox.addItem( 
		  LiteYukonPAObject.LITEPAOBJECT_NONE );	

	comboBox.setSelectedIndex( 0 );

	setDeviceComboBoxes( comboBox );
}

private void setDeviceComboBoxes( final javax.swing.JComboBox comboBox )
{     
	if( comboBox == null ) return;
	LitePoint litePoint = null;
	
	DefaultDatabaseCache cache = DefaultDatabaseCache.getInstance();
	synchronized(cache)
	{
		java.util.List allPoints = cache.getAllPoints();

		//ensures uniqueness and ordering by name
		TreeSet paoSet = new TreeSet( LiteComparators.liteStringComparator );

		for( int i = 0; i < allPoints.size(); i++ )
		{
			litePoint = (LitePoint)allPoints.get(i);

			//use the validPt boolean to see if this point is worthy
			if( isPointValid(litePoint) )
			{
				LiteYukonPAObject liteDevice = PAOFuncs.getLiteYukonPAO( litePoint.getPaobjectID() );

				if( DeviceClasses.isCoreDeviceClass(liteDevice.getPaoClass()) )
					paoSet.add( liteDevice );
			}
		}

		//add the unique ordered elements to the combo box
		Iterator it = paoSet.iterator();
		while( it.hasNext() )
			comboBox.addItem( it.next() );

	}
	
}


/**
 * This method was created in VisualAge.
 * @return boolean
 */
public boolean isInputValid() 
{
	return true;
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		CICustomerPointPanel aCICustomerPointPanel;
		aCICustomerPointPanel = new CICustomerPointPanel();
		frame.setContentPane(aCICustomerPointPanel);
		frame.setSize(aCICustomerPointPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}

/**
 * Sets the point selctions to the given ID
 * 
 */
private void setPointComboBoxes( int ptId, JComboBox pointCombo, JComboBox deviceCombo ) 
{	
	LitePoint litePoint = PointFuncs.getLitePoint( ptId );

	if( litePoint == null )
	{
		deviceCombo.setSelectedItem( LiteYukonPAObject.LITEPAOBJECT_NONE );
	}
	else
	{
		deviceCombo.setSelectedItem( PAOFuncs.getLiteYukonPAO(litePoint.getPaobjectID()) );
		pointCombo.setSelectedItem( litePoint );
	}
	
}

/**
 * setValue method comment.
 */
public void setValue(Object o) 
{
	if( o == null || !(o instanceof CICustomerBase) )
		return;

	CICustomerBase ciCust = (CICustomerBase)o;
	
	for( int i = 0; i < ciCust.getCiCustomerPointData().length; i++ )
	{
		CICustomerPointData ciCustPtData = ciCust.getCiCustomerPointData()[i];
		
		if( ciCustPtData.getType().equals(CICustomerPointData.TYPE_DEMAND) ) {
			setPointComboBoxes( ciCustPtData.getPointID().intValue(), getJComboBoxDmdPoint(), getJComboDmdDevice() );
			getJTextFieldDmndLabel().setText( ciCustPtData.getOptionalLabel() );
		}
		else if( ciCustPtData.getType().equals(CICustomerPointData.TYPE_BASELINE) ) {
			setPointComboBoxes( ciCustPtData.getPointID().intValue(), getJComboBoxPointBase(), getJComboDeviceBase() );
			getJTextFieldBaseLabel().setText( ciCustPtData.getOptionalLabel() );
		}
		else if( ciCustPtData.getType().equals(CICustomerPointData.TYPE_CURTAILABLE) ) {
			setPointComboBoxes( ciCustPtData.getPointID().intValue(), getJComboBoxPointCurt(), getJComboDeviceCurt() );
			getJTextFieldCurtLabel().setText( ciCustPtData.getOptionalLabel() );
		}
		else if( ciCustPtData.getType().equals(CICustomerPointData.TYPE_SETTLEMENT) ) {
			setPointComboBoxes( ciCustPtData.getPointID().intValue(), getJComboBoxPointSettl(), getJComboDeviceSettl() );
			getJTextFieldSettlLabel().setText( ciCustPtData.getOptionalLabel() );
		}
	}

}

}