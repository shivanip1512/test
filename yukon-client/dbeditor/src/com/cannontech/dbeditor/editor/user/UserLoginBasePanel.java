package com.cannontech.dbeditor.editor.user;

/**
 * This type was created in VisualAge.
 */
import com.cannontech.clientutils.commonutils.ModifiedDate;
import com.cannontech.database.data.user.YukonUser;
import com.cannontech.user.UserUtils;
import com.cannontech.common.login.ClientSession;
import com.cannontech.database.cache.DefaultDatabaseCache;
import java.util.List;
import com.cannontech.database.data.lite.LiteComparators;
import com.cannontech.database.data.lite.LiteEnergyCompany;
import com.cannontech.database.db.web.EnergyCompanyOperatorLoginList;

//import com.cannontech.database.db.user.YukonUser;

public class UserLoginBasePanel extends com.cannontech.common.gui.util.DataInputPanel implements java.awt.event.ActionListener, javax.swing.event.CaretListener {
	private javax.swing.JLabel ivjJLabelNormalPassword = null;
	private javax.swing.JLabel ivjJLabelRetypePassword = null;
	private javax.swing.JLabel ivjJLabelUserName = null;
	private javax.swing.JPasswordField ivjJPasswordFieldPassword = null;
	private javax.swing.JPasswordField ivjJPasswordFieldRetypePassword = null;
	private javax.swing.JPanel ivjJPanelLoginPanel = null;
	private javax.swing.JTextField ivjJTextFieldUserID = null;
	private javax.swing.JCheckBox ivjJCheckBoxEnableLogin = null;
	private javax.swing.JLabel ivjJLabelLastLogin = null;
	private javax.swing.JLabel ivjJLabelLoginCount = null;
	private javax.swing.JPanel ivjJPanelLoginPanel1 = null;
	
	private long oldEnergyCompanyID = -1;

class IvjEventHandler implements java.awt.event.ActionListener, javax.swing.event.CaretListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == UserLoginBasePanel.this.getJCheckBoxEnableLogin()) 
				connEtoC4(e);
			if (e.getSource() == UserLoginBasePanel.this.getJComboBoxEnergyCompany()) 
				connEtoC5(e);
			if (e.getSource() == UserLoginBasePanel.this.getJCheckBoxEnableEC()) 
				connEtoC6(e);
		};
		public void caretUpdate(javax.swing.event.CaretEvent e) {
			if (e.getSource() == UserLoginBasePanel.this.getJTextFieldUserID()) 
				connEtoC1(e);
			if (e.getSource() == UserLoginBasePanel.this.getJPasswordFieldPassword()) 
				connEtoC2(e);
			if (e.getSource() == UserLoginBasePanel.this.getJPasswordFieldRetypePassword()) 
				connEtoC3(e);
		};
	};
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private javax.swing.JCheckBox ivjJCheckBoxEnableEC = null;
	private javax.swing.JComboBox ivjJComboBoxEnergyCompany = null;
	private javax.swing.JPanel ivjJPanelEC = null;
/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public UserLoginBasePanel() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJCheckBoxEnableLogin()) 
		connEtoC4(e);
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the CaretListener interface.
 * @param e javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void caretUpdate(javax.swing.event.CaretEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJTextFieldUserID()) 
		connEtoC1(e);
	if (e.getSource() == getJPasswordFieldPassword()) 
		connEtoC2(e);
	if (e.getSource() == getJPasswordFieldRetypePassword()) 
		connEtoC3(e);
	// user code begin {2}
	// user code end
}
/**
 * connEtoC1:  (JTextFieldFirstName.caret.caretUpdate(javax.swing.event.CaretEvent) --> CustomerContactBasePanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (JTextFieldLastName.caret.caretUpdate(javax.swing.event.CaretEvent) --> CustomerContactBasePanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (JTextFieldPhone1.caret.caretUpdate(javax.swing.event.CaretEvent) --> CustomerContactBasePanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JCheckBoxEnableLogin.action.actionPerformed(java.awt.event.ActionEvent) --> CustomerContactLoginPanel.jCheckBoxEnableLogin_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (JComboBoxEnergyCompany.action.actionPerformed(java.awt.event.ActionEvent) --> UserLoginBasePanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC6:  (JCheckBoxEnableEC.action.actionPerformed(java.awt.event.ActionEvent) --> UserLoginBasePanel.jCheckBoxEnableEC_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jCheckBoxEnableEC_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GDB101AB2GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155DD8FDCD4D53EF777714ADE54D24FAD5AE72DEB3E973B313B36D979F6FD3B3E4D7639C56F51E6E665ABCA5B28B4292834E83D4CG2282A220212221D90291A0E292127C758FB8A6AAA976AC394CDC1811E1E61C394000286FF74E393FF36F4C5C610FBD7B747C74635E73BD6777671C73BB7F4F1D041C77A7A4A79AF284A1B1D9D07E6DCE9404E9F6C178EA19F397E2F17F35B7C5507C5B8C34DA48F5A7
	11C0745E14D9FB2AD3B2055B7BD3A118836148526A147760BDDB386ED8E89B817575D8A0EE6F9DD7BFBE341E178F201EE5B4FC6B57E9704CG4A852C8AE8ACD026F04F57398A5E86618C651DD022C190EA9EA1E9361F4F5560D1CA3A9C08ABG1ACF53C4FF1D27440F05B0C9B3811ED39EE1E92360391CDA77771595CA3A53B7C488718FDEEFC8A73AB472110A7E42F81B15E73E3056C08A42A8FC11DC854F2A662E4E3DE6E7F731D9F4B81C8ED9B2DB0BAD6D1245A6BB5D454A2347A339ABAB3F043FA6E7274DD1
	A7FA24E651A159277F05585CFCBE154A831BA1ECFA14E0B34F13F2CA0277BC2072C7516EC7522B943B46F5C588B1377FA0285DE10FB2FB27BC2A5ADD7A4D52E44BACA2FF892D8742978F71C500B1DBEA3FC1DBA2E621AD6BFBC85A9888AFA63C0FA17EAC458BA0DC83547A985A7879B63431757CFD4262763B8C2B025868FA0C59967E18EAE35E6D470D6B282F74B5127A1E85F10B0152E66FCDA985EA86F281ED20BEDAF6F0BBBCEB5B65FAE7F73753D16BF25559AD6E43CE0BE407774ACA08D130E31259693688
	827343AF4F97695803B4F6362F8F92E2F9BBA9205FC49E7B15A04BF7D0DF704F5B1447428C63959913E72BF90B1FCD4A2DE61014DBB43C93BED2FF8CBFC2710A47D51C5555FFD2DFA0615390B773F1AC67568C344514B4D1485CF137E1190EAD61FF0CB0144FE1B61866283630B2BEFA0814319770F1C011C0B3006683A5BD01E5BCF8F067F0E55C88FE6FF6087663BD6DAE51AD5775586C96492D1475522F07AAEBBDE2FC695F0C160F15CB44CEED9D4D3D7BB73A65B2B762E6C37E932CBCAA1ED04B05695E9FD4
	F76B93013E11416B70FA5AA66CCF30BAB4F2BC1C62039A1C55EDBE45C9B894626200D87AD33D84EFF9525FC72C9477BE696FA3AF74200F0C073854277626307ADDE4A27D218C61B020882069C0B1C089C019F3310E7F63E049885BD13326FE996F18463570143C32DBECF4F8E451E116CE08EE1B58EE17BC0212661AC6D22E6DBEFC575376ED869D87A4076496E51B53815245EE891C4943525C5C381A24F1CBB4364556AD0102EE1700F2FF5A18CD4ADB7448DF3AAC22AC29A9D87C9D0D44A7FA4593A0918440FB
	5BDCD2DEF65A6716423BE9AE16D55E97841B8461E93CDC36B4E5417390B837E42F2CEC30190999223B9FFDF47FA049C3B411735FB05EG35BC3DB7E58ED073B358CEDFE9C5FFECC87F25D07458DD3A7EC8A86199E5CC0B717747AF291EAA40CF838D820D871A86B4B7864756D9675B94DB08FEBD9FA5B66A61D19A3CD93121A5088C26EB9155C57CF6E510F6129C84DF26F9CF5734DB3D342CDE7E6188716D8448E76E33FBD3AA1E453A793AA91F79AC99CF51CB0F384141A40BDAD3AC6DD7074898A475CA8E39C1
	F2C98E8B3CF8949F918FADD77D374349FD2B136224BF2B878773F03C7B50EA06038CEDEB40789E9AAF4A325B565EA3CB47A5D936B9BAD57E8B54960FCFD769D1729A5ACC725A8CF93482F9F9DED3CC599ABFB4B91DDDBD2E96524294FF7E1A0E5B2110FE5233688F63FA485CEBA68F5FC643EA7CC7BD2D1A32A669C653570E2C8F2F7651E17CBF142F6AB853CB5AC62262F34B14F2DE2E78A6CB6320E962A00F394F41FC85488A9486B475B9AC0F05BDED025AAED1964A994A0E8D2336B93537CDD39E280B68C99F
	06BFD8DB89E6D7363044945C7705437A3E1FF2D85F77538E8F6D5BB90775FC1B45EDB8CC72696CF3E85ACA7EE1523F1A1D8E07C49BACE791589C7B1596128F1B43A61F34D9BAA57938EDC0920454F944677F0E7661B1D0FF714FE1DF5B77817635DB87FEAECCBF932ABBBF8B7F67BB8D26F94C5F5B6629FDAD33E97397248DCAF6299B8A2A5E596310993E0D0E8F8A6EB1D26C70878E42DB505482E5385FA659ADE4165F58D0E4066EC1AE26FF5948D4F0D66C953D451EBEA82FE2DA994575A4F69FF9AD4C7F6413
	3D79018B04228E1BDBEAF438FAD0C8610942D266B759425EA61969EE069A6A0349AD550F01ABE8C199537F0B8B83BA7A0FC9F23FCB7A8E2C580965F0D5E6AF33235EAA193B6A1C5EFD8E52B3D289C5A2F52BE276E8165C9DCEF737E421C6940BFD32E2C1AD0D9E3589BB388D772D6DD2ECF0F637BB41069DD7D6F33922F77160843D3C6F2B7FBFD4FF56DF7619DABF212660D27700313B585876072324DD0D0176B68EA8F29E0EED37FFC162F1ECD38670FA275D4E3A845216671376FE6DE00E268D4F1847768FB2
	A10E4527DD500B3773786BF4634770780C0BFA7163F87C0FF463A3F8FC66A53D78E973B11FE1C7B2C95FA81D6B11E00ACC0A7210540F735CA3D9FEF1A7C4FB0FBAFF7E6991B2B658B563BE43EFEC566F2B421B49D85F45650FEFA61BB33D0ACC5637CE9609CC175B568D53A4B211D176D964EF347BAC51E0BF591349FC9E7289447CEE7DF9D2E775BD9E5959AD396B1D8E999C0D7A8D75994277BC11B5299777E32AA05C82A4BF4F64CDFE1E753BACDDE79F264B7B6B5E14F220163F6A255B6E45F4E1909F91B45D
	53BC5DCC080F8192DE50CBB7319F5355C0FCAB10D7B7DD47G261B8A7151C0F1CA3A52D816EEB016247B895F4BA96158DD94DB84837C2DC938C6BD1C295DFF32F8A6690ED30426AB72E7457A2F5D630F91397100A73D08BE367628F61ED86B71B84DB63AF4D27C6501235AB10CE18F9EDD81CF68E4BC300E37C8DE7439682344D63236D2E045EF6E7C78F3A1F02D380FEEF561B43C3E0F367E96E7BDAC6F8E025B5673A17E04CD6AA379227BCDFF9C44724AFD9147708B7B35FBDC53D65DE2D89924EC1ADFE4E562
	FAD1AD1B1809470DCCF67D8514BD79C55C5F1A4131D80E6D3B08D87ECB087D09E32D9CBBF08931B040D8D95CD2C976C67476G4D34F00ABBFBEC45BD320DAC9EC5D9243DB8EBA1CC6653F45ECE66FEB3DF42FD35B56D24CD8BAF43DC952894082D719F26EBFF2277A0E0E3DE46FE67C839365F198AF88CD05282EC2B65FD4497C7B990ABF5BD23B00B79065FG04FEBCB13BC6519B752B09C25525815D3D3E312BC28C398BD89D55ACD06B2A7C37F54603C0ACFFE1FD183FD0C8B3E381666FEFE73579CBD84072D7
	3090737756E5650F69BC6EC51DD5A0CFDE08BA3FEA57539939906BE2D9BF72CD87ECB167FB4EE70CA9FD052D47DADFC1DB9D7DE5709C7D580C7BBC8FF13DF6A27B95543BC6546A1D8BF852A2A823C52837EC605B697D51GAFA710A9AFC23DD7B7796717680D64FA5F3CEC3D4C7F8A5308FFFD5B990832F7DB266DF3274704876FF397A9FD6EA27FBEF7DE8BE92FF100A745E11FFB6858EACD1FFB8CFAB9515189A3B4DFFF9DA3E581E33192FE779851CB47E28157037FB1B81A3D4E5CB85C334ABFC14A3F884287
	015A003CC0615C361063436E5D6E738E31F7FB7042E86C1A9A07EB69BF0F0AAF0A73B5DD9C8DDF8C67FBE8D4FC711C4FF4E9B4FC292FA25FBC3ABF1C772A3AE7D22AF9EFF8B5F0AF056D5FDEC37B7656D7597E6DF20E5FC4F1D90333F6370162A49C86F171DC7F233D7EF6373E662BD3768BB33EE783780A7D4261FEFC2C9DFED8C066BFF41C53F42B15156A3A174D9D235B35F347492F317EEF96BCE3DF43F1742A72D4A5CF426B68473DA7097C8A8837G59014682C5824D84DA70BA7A73234775669E3E7E9CEC
	62216E53313238296F724AF0D2G1FFF9926456B15613D1B72754B50E77D4C4AE8D797165156F82C73D35E4B3337B3004F5F5E53FE76B29BEEE8C79BE4EEC3FA7F655930A1004F5F06C85DB25BFBE203FE19610820583A6EA24E23E6F0DB9F39CCDB1F99565684DDDBBB6D41ECD576841475D53B2857C6F25E00717A8DECA3A69173D373866667478317171F5B8378B679053DEF68557F6F1B088DE46E9D76863653FBDB89B69342F35E40B63927056CD96278576C34B9483E940B0BEDA16BCE275B86ABC34496D2
	4C6CF4530DC036FF7DB4DD8744024C24B7D1EE4109607B16A5A77477ADF71D505F375CF3E268BD7B7A934176B519FDE7AE20FD39E09F43E2B8D644B171A2E2B59CFB0EE3AD9CB3DFC24C4A313769DAE0904263D4F9E788B68142D3D4F9ED841B836138B751B7FE54CE7696F25E027582D0B3106BAD0C9BCF63487C152C03C35EE2F3B4963739DD3BBFCF787C472D21482513BEC741CA397ECA9F9D4BC6A11F105EFE37F65FFCA38D7FF96DAADA3F9E0F642183GD9EDA9F1AF48EB841DBD66AF44EEC9407D3B95FD
	4B15B47BE4E77D8E5E26DFAF4C55EF531A7B9B29E6EC2B91EF619AEE271B5E190070E2204C45D8965716E3DBACD89CD8F6D500B583D9B4F14A996B4960ED616A137AED613A1324DDFA1CBDEE33646F6F63CE6672B8F504EC1425EED2ACAC4D2D14DF965D1DD2C0FB19C479D9DCB07EDF1E8C5626D819BF6CD366E58276D715DDD8C6DE1DB28A85EC825094CD9C139766554A5B49655D540E72E66A481B8BD89CD05292FFF98D7DDAF965DC5EA61F39E62E42D724BCEB16846AE072D28734724885AD66BFBF61FDFD
	4B92741F68C662BF21901E84B4ED897A4FD191F54F5251938BD8029F4EF4C779687E1467657EA6141779364A37D5F92F002789286DEDFFFF7CDDAB1927FAF9788FB45C4F5B0DD41B417DE31F43228C8AECBF6C8D5A57E7A789420F8444FAE9DF3A833037B8769645F682D61208181776256F81D64F53AD2158CE98D4F670F48334FF5D8C587D09D8862B4F1031CCF6BA6DADB69719378A725B644E1A730C404B49FB060CCDF6315F598376263DC3573EE7346375D46009810AD74A0465772EBEA23B43ADF6030B9F
	F7C9E6A11672AEE9C35E9688DB014682C5G4DFC875748F7C924FFE6BD0A3A054A620A1611751D5E49860B3FD3DE2D433B0367A7A2BD15476F2BE7730FED3B75669F2589FBD39A9278BC4F2C757153003B92D49F88C98874BD360E391376FB61897E77D6FECB71E9897E77D6BEF3633D159808B33D0BE35CC43AC6188A61D99CFB74G0EFB319CFB3304E095FF835E3FA1D6D9CA30B688FBB9F6348B6505F2EC59AE14B701E3717BD1DE9C47AA8E203C2425087D329D6565F22C67824AAB625829C114B74831DB87
	D1DE9847F6D19F1E8461A99CF352F1E5A60467F0EC1699F54CDF0AF575D3D1DBD765C2F54AC1A0DEF71AF75F3AEAE8A2E56F02F8BCBBD76E21D1BCC403333A1A5D08FBC0619017G44EC320AD896ED09087D36876D14B9E6E943FC4F605813CD48BB07E3579493EC810493B876CAB14ACBB5A0963117E02D90F6F12CE78D6A88810C6D7B7C577FE877FDB2FFB256C07225376F93EEE0E5B5C9F92AF7BDF734792CFF49CED3E56581374DD2A7F61AE8EF417A72FB68FC0D481E83B2D8DFDE5BC64AAD53D81DD2GD4
	E3C43B3C9F61BEF7643FCC94CCE3FE23FB17B3266596C32B1159B3E8D46DAA3D9D77395F97D167D4080FB3127B3C07FD7683C9DF702F86360EE17117FC62C99FC266CAEA7CDDBE71445EDA23B6FE1ECFBCA923ED8ABF4B5BC39FE25E929E1AAC586F1990741EEAC5924B53E96519B95515B85ED52F646D4CEE9C9B47A5E1F9265711720C0270FC2004A42C7B2D34ED64A4C3B9A7F33F49A2180904B936BA87FDA984B056066EF2533B26900E834ACC29CEA982B28139D2B04DF41AA69C42D30148D9569CF816AB67
	D04AFD97F71BDF7E088CEDB8D311093A061B7F96258426E13A3E8A5065FFCF0524CBD76ABF58FDACAD851BEBE78B371CA3F2DCEE29C3F23BA58B3B06A114AEA33E70906D2B97031DC9900E2058CB879A0650132C48C51201E7AC50870A0F0CDF467A1EC42EFF200964C522431FC5517BFEA91E4744C118253B3F0914818C42366E1EEEEAA5CBEB26E905546A14B4A0068D50B12182428D29E87726DD43592D355D156AEBF7C82AEAB7533171GBFB362FAC50ACD00F0A447E65371E48E0467F3DBC2AF8CE74BB20D
	AD194BFDED593A5C5F169F72333652652877CF942B0130E9B9162169A2B9BB6EF0BAE416261D0ECDDE088F61E92EB213B4B2CC22589C6AAA1194AF337BE573D0F69B7DE82CD277EB94DB27000EDAF83E3BF469D256DE6F257D5BF440E7AD47B6BCFB8F75B988272DC0EC6567582ECBD7E01BED22634B9888CF605817940BD64EFB99B63731F5881B7588E50EA4AD53714628F50C345DE670BA3E0116558C30ABFA857A51A3BD23E90B89ABFC7DA8F3E5F54A93D0972A9FDDC74771BC408BD6229F998F912C8542ED
	AB51C7A6947B7A486F5BD59FC9AE399C9FC11BC2C1479245A626AB5AC35B3D6875EB770F50B9C2B8241F44ED3D0D4E9122A1BC97086DEBF51909EDECADF377198F61F9C2BC2BFB325D84437F1176333060ED91BBF95D66360D762EBA1BEB5DC3678629E9EADBE5786FA91E2341599C6CC09BFE37118FF1A1E9E87F3596B2B645C2B8A93DBAA58F289C288548854472754E19D2E1183D7396274BA475CAF64D96994B5FD6F13479E37300FFDF067300A93F7D05B0752A3620E779A1694A5CCBF9C65C6BCAA4CF163F
	CD9DF4FC0638B8201C8C981F01EA00DAB3B0FF75348E4889GD4D82DAC0BE6AB3D650019A3978FD418AC52D85EAC3B35F933033CB199EA3B9E1791EC7E7C83BA8F0948701FBF07D2FCDA067F7CB93B8E674F5190D73E8A5B499EB3D9F336BB5DF403052DB9D75AF10D968E69A683ADG92B22B69B9B463CB4E8EDC2B66E57B2FD5F30127A8D3A9D36A7F85B94335BDED1F50G3C2D192CFFA6E1BB3CAF043677B0903323BB0B70B51944F649CE2E0F310DB59677132FF2F85C97CEF737E847438E96FFB4112EFD7D
	EECFAAE747A7D5DE5FDB05AC7E5D9E725D017E6DC7547F0B463C00B43E3258B9761BEE6DFC562B1473F8F832788D95FA7113F97C6BA63D789970E4FD5F0B242BD0ECB26CFB9F1E8E29AF1F9FDAB75840A549878A85E5E51F9565171596AA6DE7C21FF66DD231623620E756F314BADE20BC87DFF4A53ECF75C17FA2603F386AC0CCD076C142ED82EF374F26E13B4D3B73F6216171B683763D7EFA372EE67A64556A5A24D5DC1A4C727AE9A99D835CBD9253E168D24BE136E9A4654078AA6DAADFC27990FCBBBE5D4D
	7874724EE4FD5D2D4AAABF60EB5FCD8EB56E73761168E1FCFBDDAA5F598B5F4EBE711CAA6B16C1DF7BC25CEA5C83A35243782A7BD5BE33F933BF5FFE186C95EC29F55BC47B16227C9D70DFF9A1770B6E811577E1B1302F1A4F4F33A2D7333EEA86BC67GA571FBA08B778476D5C9D57EFDD59C6149E2FC2C2F5A7279F0FD15F68E1C873C25D9EADF5510655FD75D3F036E17795FA76179FB77FFE81F02A7F67B9C123B339FC2AE51510F6591F6DEAD0FDF778C6543BBF6C19D6C9C2A2E6F9ED45B5F6C8B2A5CF765
	1148E5FCCBAE2AFC970B0772095D6540D706FCF91A36DF1D28715FB5A31751EED07996370D040F0D393FEB93841CBB4D503C9FEE9B6D9CF9B444F4F4DCD19D4A790AA578F94DBFD9744FEBFEE651BF3B3C43B274B7973F36847F6662DE0B761B8BB617AAB312312A995A069DA88CE8925054AC1CC7B5C8DB84BA0F5219C36D33F41273A272151F0C7A37F5844FEBF147705F866E6EA077CF5B1D326C6CA672917F3C0354176CF4D110E1F59D240C5C36CE2B4C12AA78418E52366CD2870559FA70BC5DBB1A85790A
	4D42B5E2380DE0E95955A97959083D57056B4606ECDCA3DEDDC730F1901E4C319BA9968561859CDBD777EDFC0948477749594176F94A3E158E6DB7D7FAEBC9B6B75DE9476FD053F22AD39A00589C705FD610B543086E373658E43BD4C7C78636F7F75E1E2A689C4C413D3BBDD9C44F9488C7814D87E2E96B32F18FB30127F5E5133465EBA08CE4819A59FC867BD627C59078B9EEC710F3DCBA3BE4B6FC62A1B208AF8F2EC13B0ED5A09643316D0791EBD80B6B2FBC09E091901E31965BD13175E3A148BA9240E637
	53A53965FE06525B7ECA7BEC6DA0E35EFC10A33C8773CB20AA20E6A0AB50A0D09850A420E9C03300E2019200B2F3412F014A018E66229D7FEDAB9C428EE5931BB6EA37486EEEB01FC8EBC71FB88D324665E27E27F931DE23F2312EBE58C3FF2FE09D2CBD014A5771322A42FAB52D43342DD574FC81426301262C9BED3D16DBC908652D52983C6F29B58E5F77B49969FDF868B3DAE0CD4030A3C6FAE7252343A371BE2E45184931C6CF3353E3A3675DEC5C3BF1F7601C68677C0CADEA9D1B934D0767E2A0F27FC219
	BB588267C4FF32A1DF66FA6813A13F85702CDA4F78581C2838EB38B951F2C11D9335G2FF53DBAA79ADC4F66C4AF73B951359F50B598ED89748C11FEC742621CA92B54B85143BE71D03E4719D1673F66A1B60EDD0FEB229A03DE7C787558F7FEE69FEECFE172FA5FBE11719D98164F7FFE93639BC37922560FEC4FAE865231757C2FE91F953F5EFF0FE6AA45058D7EFBB435D938C71386F12E8D185F83591737C7B41F760333B6786BDFC87118G7D3D5928FF8144B567217EB20F5EB8B2A50F15474CBC7DF2198B
	F81CDFDC52466A14DC20220DAA4EF41C2C5053D12324EB59282F438A7820DFDC9804A781CD8D50D1F2D8CFC71412AEA6080EF840D3B7794665C1389428C103AB5F00CA641D4F39D8772C4495C8442F49B72930DC328D504FEB0EC3C2C7A70B378FB19F720CE0BEB498E4BE74C31D795055C166C357794C0714EF45BAC81F5D897DFDABCFF7B347CEF1ECBC15C93013B60BEC6578C4EA97418FCAC4A16291542EBE0A35AA58AFB558A9857BCD87696FA04BD6279BF96F6B20E78DB63BDD39D7C253589C504D727218
	CEED3439C40D5D8FF06C94770B2C764B6BCF720765536FCF7E1D5E2BED5DB4327E443E897B131B69D8B9E613FFFB1EC07150CD7E6D39F08F3667F008CB58046D39246A727A13A8BA7E363D6F2F7FB10A5B5F77577FCD956A77C25CDCA006BF329B6787B57955A95EFC9C7357D5607CE0F2BE0E794FDBC95AD8888B1B216F580CB2DE31216CD2402C1BD14627E7F15EB0E1B34A301CA5E967C0B88EA8F54BE8678DA7697E96137F8E1D4B13B34D7CAD28334F00D888E06C6E60746CF46A0FF61BC32AE73FD4A2601D
	501B697CB696528A9F60DA627E55748C9A42859FE0BD5DC3BE21D2FC66771A7783D9D7FE2D5B769D68F8A9DB4D536B1A77416CAB2F7B47D7D4872B53963AAEA8077AEC60757C2F9E3CFB524C319F1E433BAC960E5DCD6FA4F8A1BC16E32F49385E9C4FB1F3935E93DA403148A63C4BA2ECC52C3F82ED4961581395E8CBBE47C21B5116F20E5DDF07369C6458BDAB5016539C5B5A0B36C4F24C5A0B36CC6758D13A8E1A8561799C3B77B05A9247311F6DC2DB12BEC4AC1A1E0167C23800E379925AD24531158634A5
	14E3C78CE84B840E4D21EB12A9900E62581D15840B01F07C075896EF5D237A673FE85ECB76DCF9DFBD789D6878CB151A2727B46F162AAB2F7B42F72063715D17B746BFBFAC1F7E983F290270899F0DEC0C4F79884778D3F4DCAB7848FF0CED27F879C77EE36C4BD69C87EBA0EE52C7682F71364B7B6DB443594B635BB3EABE162FB9F4ECCE5D661F5FE7A91E334DBF3FE74F72F3EC088B590679956A75FCA8F61BEF79A7EC8B2C0F4C82DFECAB04AB00CC857E6B07C1031E0EB6BFFE39A0D047D8BFECBC04A7834D
	5060EC5D7CABBB7DEE0AEC09113395816FCE7C094E9966C07A7985F87E7B646AE4CCAB60FE7C40D9014B6A72785E2338151E21B1F9DF50FB16B905507797627D065F50F148846156C25471205977CECF8C9D17C2A0BE2C906F09AC9F721E48F0F7B226977A5FB73A21896F9BC5F15B1E2258DC884796625968F43B1A9F63E7B4BF5BA1BF5B11679EBA1619A05C4A3185F4AC8B01F058F634BFEA45E84E35836C5F6EEF7F61DEEEBF57FB834566C2B8F6BB162D7530EF7D4C6BD673738C9D8FF3BE067CFC0CB29E24
	632189422D9F230C978E78564F3BF4FC8C0178300FB1FF3B25511C0585646FE37F7C159BF87E38EDDE0A4D05F0AC37ED11D75F1717315F0CAD023C95E15ABFD6867A72EAF244214C25F65139CAB324379661B85DEDA558A004430A309FB8C3676A6C5D2AF9FF55FA6547189536AB2F636933EA1EDE503C3B4EDEF95D57DCD19D2CCE375413BA9D8F7599496B79EA0ACD0570DC0E090D840B033070893FA7FE8E6701B99C3BB111E09688FBB9769445C2A19C49315B287FCE7FC42B77A1836A0D66695652FD5F7990
	0E67D8CF873FE3DE0C58B4FA572D9542F60EA50B28F7CCB176E14FE84E6C6FDBBD3A73F503C7656DBBB75499EAD999F06E4633578FE515AF42BCF23E14BE156F2F7296FDDBADE02A33930CADD50CE53C05DE0D4EA65F3B89A64D9D033F6D9E39BDCE4D7D029FB40F1C6FC64DB97C543A11733D22B9E77F790A5165FF75A51557526B1BFF72059846158DF9C745571E131A33771BF60D1CEFC0F3767E40011173516DBD05AFC79ADD7E2FD921729EB278667F3E15EA5C33E7C7EECFF6064A77534A11369D652EF205
	7E58E421634CB8E81F930AF1EC8A31860ECD1F2ED2F5FFD66FBB0E1F4AD463EE2BA77B36D6275BB6C0FE6B4ACEAE2C61A9906A2CEE44FD2FE82E535B68BB2EDFCF53A4C0FCEA890E6B674F0DE65ED281FC04703E34895E715B8A452793836F4ACFCF44313E3584EDFBADB15BA7CF35F6DB27031C76ABBCE9864C0F15735CE340B2E2E962F91AF1BC4DA7C65FBC57533EF6BA44C771BC07F60CE62E691F670400BCBF5A961867175AB04F2925B83FA996515E5CD26C3B597E9C13A3DAC767FFA79A091FEBFFE968B8
	790BD7A4BC4526FD7BDB703E4D9AD5CF6B39116A89FEDF4F3CD61577F8A236C5967E40B0923BD85A15461167618F392ACEDB47684639F347D45EC451575EFD62C8ECE07FDF02CC47FA68E9A2978A49505EE5A11D1EC966332BDC96D948B5599CDD7932B31FDD5E4AD7EEEFD566FB5CC2D6E0EFD4FB7D930FC71EE948B18806C6A145CACFAC9A0564BEF27461A5377A48E14F73403B0A73B6526309185E1D1546F9379B8DC292B032631AC6A1091C39G3F1B49B14ACE9715C2DC15E41954D90E671CF0119684132D
	8D5DC1C3499A0E9601CC91825384F2648C41619652FDEA69011F6D7AEB5453A7BCC6A125D1D8C79A6BF149CD4F33A48B79F6DE79416C7D42F29779F617DC29074CF968A359A3775BA5131053F10C7CE021C716AC35F8D2661105B5744718CA482D1012032247AA130A59E392129C64273D05AC96ED979D1DA56C58EC8FAB215AB66A5C2483C884FB33293DC4CAB117127D3BD59FEEEE1ABF55A898768BAB6CCE5132DFB44BCEF72330DC363AA50F55E937F8DD55B5D4D0EA9FE9B3E4D0CA82F19BF876C9E60BC987
	4E0D6E725E9A1A9E1B3E9F86D42FDBA821A9C99FD74CD3D86A2D229BD4C96EC6197CD439533D15477DE0137C5143875EBBED909215CC12224F743AE418EAD1FF625EC3B2DD3C9F6C161FDC786709CFD545ADG267DC2B27DB1A8D01D29267A22273BDDF2DF9579630DAB4745DCCBACF311EC51EA4D11A13FEE5161A13FFE8542737D7206D15C4462FF7CF3690FFF7E76D754C415D5965EE715812CA51D12333B24362343661038G2899903F110BA7E90A7D52E4F9EFD853745852F67024864158DDDACA7F6E20FF
	4B485F9D9459C1119DE5D0BDF142107F7C633D18E76AFEB410CBFC8561148E315BE66F071786BAE97192FC1B17B78B0352FB3E833402B78B5217BC4E53103B106464B14D27F92AE90CCA537D9567582878D60A8F071AA610432858C1C7A50EA6E950A40EE6E8D06866D633BE0EDC97F4F75383E7D9D8C16E4A67134B7615608EF81D9D5EB3598577FC8D14615B97D2B59981ED0E20D9010D0740EB491F75644F861AECA37D1BBF6A2AA4DCDB54AAA4AF9F7AD65C67DEDEFC645A6300CE485FF2A10865466F425EFD
	3E0E1623D4745AE1F371BD4E53917DBCA57DFF4E53A9B5CFEB0649537734E508DED9D857508F830C4D1C2F53A1A4FE72FD365E667DBEDB67D43D03CCEAFF877420005D74775466DE55E6234666AC7C06277012765B2145FFFFA96837C339D56C7C2228CA7D06075DC5DDC54F392D0007D461FD52B36ECF04605FC79E6F966DF6D8CDF655BAAC64DB493AFED9527C7F81BCC43E8753A8114A7F9F40C36CBE2B6179DFD0CB8788174B1C2890A2GG64ECGGD0CB818294G94G88G88GDB101AB2174B1C2890A2
	GG64ECGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGCAA2GGGG
**end of data**/
}
/**
 * Return the JCheckBoxEnableEC property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxEnableEC() {
	if (ivjJCheckBoxEnableEC == null) {
		try {
			ivjJCheckBoxEnableEC = new javax.swing.JCheckBox();
			ivjJCheckBoxEnableEC.setName("JCheckBoxEnableEC");
			ivjJCheckBoxEnableEC.setPreferredSize(new java.awt.Dimension(174, 22));
			ivjJCheckBoxEnableEC.setText("Link to Energy Company: ");
			ivjJCheckBoxEnableEC.setMaximumSize(new java.awt.Dimension(174, 22));
			ivjJCheckBoxEnableEC.setMinimumSize(new java.awt.Dimension(174, 22));
			// user code begin {1}
			ivjJCheckBoxEnableEC.setToolTipText("Only for use with STARS.  Verify that STARS and its operator groups have been properly configured.");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxEnableEC;
}
/**
 * Return the JCheckBoxEnableLogin property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxEnableLogin() {
	if (ivjJCheckBoxEnableLogin == null) {
		try {
			ivjJCheckBoxEnableLogin = new javax.swing.JCheckBox();
			ivjJCheckBoxEnableLogin.setName("JCheckBoxEnableLogin");
			ivjJCheckBoxEnableLogin.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJCheckBoxEnableLogin.setText("Login Enabled");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxEnableLogin;
}
/**
 * Return the JComboBoxEnergyCompany property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxEnergyCompany() {
	if (ivjJComboBoxEnergyCompany == null) {
		try {
			ivjJComboBoxEnergyCompany = new javax.swing.JComboBox();
			ivjJComboBoxEnergyCompany.setName("JComboBoxEnergyCompany");
			ivjJComboBoxEnergyCompany.setPreferredSize(new java.awt.Dimension(215, 23));
			ivjJComboBoxEnergyCompany.setMinimumSize(new java.awt.Dimension(215, 23));
			// user code begin {1}
			ivjJComboBoxEnergyCompany.setEnabled(false);
			ivjJComboBoxEnergyCompany.setToolTipText("Only for use with STARS.  Verify that STARS and its operator groups have been properly configured.");
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxEnergyCompany;
}
/**
 * Return the JLabelLastLogin property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelLastLogin() {
	if (ivjJLabelLastLogin == null) {
		try {
			ivjJLabelLastLogin = new javax.swing.JLabel();
			ivjJLabelLastLogin.setName("JLabelLastLogin");
			ivjJLabelLastLogin.setText("-");
			ivjJLabelLastLogin.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelLastLogin.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelLastLogin.setEnabled(true);
			ivjJLabelLastLogin.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelLastLogin;
}
/**
 * Return the JLabelLoginCount property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelLoginCount() {
	if (ivjJLabelLoginCount == null) {
		try {
			ivjJLabelLoginCount = new javax.swing.JLabel();
			ivjJLabelLoginCount.setName("JLabelLoginCount");
			ivjJLabelLoginCount.setText("-");
			ivjJLabelLoginCount.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelLoginCount.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelLoginCount.setEnabled(true);
			ivjJLabelLoginCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelLoginCount;
}
/**
 * Return the JLabelNormalStateAndThreshold property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNormalPassword() {
	if (ivjJLabelNormalPassword == null) {
		try {
			ivjJLabelNormalPassword = new javax.swing.JLabel();
			ivjJLabelNormalPassword.setName("JLabelNormalPassword");
			ivjJLabelNormalPassword.setText("Password:");
			ivjJLabelNormalPassword.setMaximumSize(new java.awt.Dimension(122, 17));
			ivjJLabelNormalPassword.setPreferredSize(new java.awt.Dimension(122, 17));
			ivjJLabelNormalPassword.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelNormalPassword.setEnabled(true);
			ivjJLabelNormalPassword.setMinimumSize(new java.awt.Dimension(122, 17));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNormalPassword;
}
/**
 * Return the JLabelPhone1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelRetypePassword() {
	if (ivjJLabelRetypePassword == null) {
		try {
			ivjJLabelRetypePassword = new javax.swing.JLabel();
			ivjJLabelRetypePassword.setName("JLabelRetypePassword");
			ivjJLabelRetypePassword.setText("Retype Password:");
			ivjJLabelRetypePassword.setMaximumSize(new java.awt.Dimension(122, 17));
			ivjJLabelRetypePassword.setPreferredSize(new java.awt.Dimension(122, 17));
			ivjJLabelRetypePassword.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelRetypePassword.setEnabled(true);
			ivjJLabelRetypePassword.setMinimumSize(new java.awt.Dimension(122, 17));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelRetypePassword;
}
/**
 * Return the JLabelType property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelUserName() {
	if (ivjJLabelUserName == null) {
		try {
			ivjJLabelUserName = new javax.swing.JLabel();
			ivjJLabelUserName.setName("JLabelUserName");
			ivjJLabelUserName.setText("User Name:");
			ivjJLabelUserName.setMaximumSize(new java.awt.Dimension(122, 17));
			ivjJLabelUserName.setPreferredSize(new java.awt.Dimension(122, 17));
			ivjJLabelUserName.setFont(new java.awt.Font("dialog", 0, 14));
			ivjJLabelUserName.setEnabled(true);
			ivjJLabelUserName.setMinimumSize(new java.awt.Dimension(122, 17));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelUserName;
}
/**
 * Return the JPanelEC property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelEC() {
	if (ivjJPanelEC == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder2;
			ivjLocalBorder2 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder2.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder2.setTitle("Energy Company");
			ivjJPanelEC = new javax.swing.JPanel();
			ivjJPanelEC.setName("JPanelEC");
			ivjJPanelEC.setBorder(ivjLocalBorder2);
			ivjJPanelEC.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJCheckBoxEnableEC = new java.awt.GridBagConstraints();
			constraintsJCheckBoxEnableEC.gridx = 1; constraintsJCheckBoxEnableEC.gridy = 1;
			constraintsJCheckBoxEnableEC.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJCheckBoxEnableEC.ipadx = -4;
			constraintsJCheckBoxEnableEC.insets = new java.awt.Insets(20, 11, 29, 6);
			getJPanelEC().add(getJCheckBoxEnableEC(), constraintsJCheckBoxEnableEC);

			java.awt.GridBagConstraints constraintsJComboBoxEnergyCompany = new java.awt.GridBagConstraints();
			constraintsJComboBoxEnergyCompany.gridx = 2; constraintsJComboBoxEnergyCompany.gridy = 1;
			constraintsJComboBoxEnergyCompany.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJComboBoxEnergyCompany.weightx = 1.0;
			constraintsJComboBoxEnergyCompany.ipadx = -20;
			constraintsJComboBoxEnergyCompany.insets = new java.awt.Insets(20, 6, 28, 12);
			getJPanelEC().add(getJComboBoxEnergyCompany(), constraintsJComboBoxEnergyCompany);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelEC;
}
/**
 * Return the JPanelTrigger property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelLoginPanel() {
	if (ivjJPanelLoginPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder.setTitle("Login Information");
			ivjJPanelLoginPanel = new javax.swing.JPanel();
			ivjJPanelLoginPanel.setName("JPanelLoginPanel");
			ivjJPanelLoginPanel.setBorder(ivjLocalBorder);
			ivjJPanelLoginPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabelUserName = new java.awt.GridBagConstraints();
			constraintsJLabelUserName.gridx = 1; constraintsJLabelUserName.gridy = 1;
			constraintsJLabelUserName.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelUserName.insets = new java.awt.Insets(22, 20, 2, 3);
			getJPanelLoginPanel().add(getJLabelUserName(), constraintsJLabelUserName);

			java.awt.GridBagConstraints constraintsJLabelNormalPassword = new java.awt.GridBagConstraints();
			constraintsJLabelNormalPassword.gridx = 1; constraintsJLabelNormalPassword.gridy = 2;
			constraintsJLabelNormalPassword.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelNormalPassword.insets = new java.awt.Insets(4, 20, 2, 3);
			getJPanelLoginPanel().add(getJLabelNormalPassword(), constraintsJLabelNormalPassword);

			java.awt.GridBagConstraints constraintsJTextFieldUserID = new java.awt.GridBagConstraints();
			constraintsJTextFieldUserID.gridx = 2; constraintsJTextFieldUserID.gridy = 1;
			constraintsJTextFieldUserID.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldUserID.weightx = 1.0;
			constraintsJTextFieldUserID.insets = new java.awt.Insets(20, 4, 1, 22);
			getJPanelLoginPanel().add(getJTextFieldUserID(), constraintsJTextFieldUserID);

			java.awt.GridBagConstraints constraintsJLabelRetypePassword = new java.awt.GridBagConstraints();
			constraintsJLabelRetypePassword.gridx = 1; constraintsJLabelRetypePassword.gridy = 3;
			constraintsJLabelRetypePassword.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelRetypePassword.insets = new java.awt.Insets(4, 20, 21, 3);
			getJPanelLoginPanel().add(getJLabelRetypePassword(), constraintsJLabelRetypePassword);

			java.awt.GridBagConstraints constraintsJPasswordFieldPassword = new java.awt.GridBagConstraints();
			constraintsJPasswordFieldPassword.gridx = 2; constraintsJPasswordFieldPassword.gridy = 2;
			constraintsJPasswordFieldPassword.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJPasswordFieldPassword.weightx = 1.0;
			constraintsJPasswordFieldPassword.insets = new java.awt.Insets(2, 4, 1, 84);
			getJPanelLoginPanel().add(getJPasswordFieldPassword(), constraintsJPasswordFieldPassword);

			java.awt.GridBagConstraints constraintsJPasswordFieldRetypePassword = new java.awt.GridBagConstraints();
			constraintsJPasswordFieldRetypePassword.gridx = 2; constraintsJPasswordFieldRetypePassword.gridy = 3;
			constraintsJPasswordFieldRetypePassword.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJPasswordFieldRetypePassword.weightx = 1.0;
			constraintsJPasswordFieldRetypePassword.insets = new java.awt.Insets(2, 4, 20, 84);
			getJPanelLoginPanel().add(getJPasswordFieldRetypePassword(), constraintsJPasswordFieldRetypePassword);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelLoginPanel;
}
/**
 * Return the JPanelLoginPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelLoginPanel1() {
	if (ivjJPanelLoginPanel1 == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("Arial", 1, 14));
			ivjLocalBorder1.setTitle("Dynamic Login Information");
			ivjJPanelLoginPanel1 = new javax.swing.JPanel();
			ivjJPanelLoginPanel1.setName("JPanelLoginPanel1");
			ivjJPanelLoginPanel1.setBorder(ivjLocalBorder1);
			ivjJPanelLoginPanel1.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabelLoginCount = new java.awt.GridBagConstraints();
			constraintsJLabelLoginCount.gridx = 1; constraintsJLabelLoginCount.gridy = 2;
			constraintsJLabelLoginCount.ipadx = 6;
			constraintsJLabelLoginCount.insets = new java.awt.Insets(3, 187, 33, 202);
			getJPanelLoginPanel1().add(getJLabelLoginCount(), constraintsJLabelLoginCount);

			java.awt.GridBagConstraints constraintsJLabelLastLogin = new java.awt.GridBagConstraints();
			constraintsJLabelLastLogin.gridx = 1; constraintsJLabelLastLogin.gridy = 1;
			constraintsJLabelLastLogin.ipadx = 6;
			constraintsJLabelLastLogin.insets = new java.awt.Insets(18, 187, 3, 202);
			getJPanelLoginPanel1().add(getJLabelLastLogin(), constraintsJLabelLastLogin);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelLoginPanel1;
}
/**
 * Return the JPasswordFieldPassword property value.
 * @return javax.swing.JPasswordField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPasswordField getJPasswordFieldPassword() {
	if (ivjJPasswordFieldPassword == null) {
		try {
			ivjJPasswordFieldPassword = new javax.swing.JPasswordField();
			ivjJPasswordFieldPassword.setName("JPasswordFieldPassword");
			ivjJPasswordFieldPassword.setPreferredSize(new java.awt.Dimension(167, 20));
			ivjJPasswordFieldPassword.setEnabled(true);
			ivjJPasswordFieldPassword.setMinimumSize(new java.awt.Dimension(167, 20));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPasswordFieldPassword;
}
/**
 * Return the JPasswordFieldRetypePassword property value.
 * @return javax.swing.JPasswordField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPasswordField getJPasswordFieldRetypePassword() {
	if (ivjJPasswordFieldRetypePassword == null) {
		try {
			ivjJPasswordFieldRetypePassword = new javax.swing.JPasswordField();
			ivjJPasswordFieldRetypePassword.setName("JPasswordFieldRetypePassword");
			ivjJPasswordFieldRetypePassword.setPreferredSize(new java.awt.Dimension(167, 20));
			ivjJPasswordFieldRetypePassword.setEnabled(true);
			ivjJPasswordFieldRetypePassword.setMinimumSize(new java.awt.Dimension(167, 20));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPasswordFieldRetypePassword;
}
/**
 * Return the JTextFieldFirstName property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldUserID() {
	if (ivjJTextFieldUserID == null) {
		try {
			ivjJTextFieldUserID = new javax.swing.JTextField();
			ivjJTextFieldUserID.setName("JTextFieldUserID");
			ivjJTextFieldUserID.setPreferredSize(new java.awt.Dimension(229, 20));
			ivjJTextFieldUserID.setEnabled(true);
			ivjJTextFieldUserID.setMinimumSize(new java.awt.Dimension(229, 20));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldUserID;
}
/**
 * adds any default group roles for a new user here
 *  these group DB objects only needs their GroupIDs set for now
 */		
/*private void addDefaultGroups( YukonUser user_ )
{
	if( user_ == null )
		return;

	YukonGroup group = new YukonGroup( new Integer(YukonGroupRoleDefs.GRP_YUKON) );
	user_.getYukonGroups().add( group );
}
*/

/**
 * getValue method comment.
 */
public Object getValue(Object o) 
{
	YukonUser login = null;
	
	if( o == null )
	{
		login = new YukonUser();
		/* addDefaultGroups( login ); */
	}
	else
		login = (YukonUser)o;

	if( getJTextFieldUserID().getText() != null && getJTextFieldUserID().getText().length() > 0 )
		login.getYukonUser().setUsername( getJTextFieldUserID().getText() );

	if( getJPasswordFieldPassword().getPassword() != null && getJPasswordFieldPassword().getPassword().length > 0 )
		login.getYukonUser().setPassword( new String(getJPasswordFieldPassword().getPassword()) );

	if( getJCheckBoxEnableLogin().isSelected() )
		login.getYukonUser().setStatus( UserUtils.STATUS_ENABLED );
	else
		login.getYukonUser().setStatus( UserUtils.STATUS_DISABLED );
		
	if(getJCheckBoxEnableEC().isSelected())
	{
		LiteEnergyCompany co = (LiteEnergyCompany)getJComboBoxEnergyCompany().getSelectedItem();
		
		EnergyCompanyOperatorLoginList ecop = new EnergyCompanyOperatorLoginList(new Integer(co.getLiteID()), login.getUserID());
		
		//if this is the same energy company that it was before, don't bother updating
		if(co.getLiteID() != oldEnergyCompanyID)	
			login.setEnergyCompany(ecop);
	}
	
	//there was an existing energy company link, but we want it no longer
	else if((! getJCheckBoxEnableEC().isSelected()) && oldEnergyCompanyID != -1)
	{
		EnergyCompanyOperatorLoginList ecop = new EnergyCompanyOperatorLoginList();
		ecop.setOperatorLoginID(login.getUserID());
		login.setEnergyCompany(ecop);
	}

	return login;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	// user code end
	getJTextFieldUserID().addCaretListener(ivjEventHandler);
	getJPasswordFieldPassword().addCaretListener(ivjEventHandler);
	getJPasswordFieldRetypePassword().addCaretListener(ivjEventHandler);
	getJCheckBoxEnableLogin().addActionListener(ivjEventHandler);
	getJComboBoxEnergyCompany().addActionListener(ivjEventHandler);
	getJCheckBoxEnableEC().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("CustomerContactLoginPanel");
		setToolTipText("");
		setLayout(new java.awt.GridBagLayout());
		setSize(416, 348);

		java.awt.GridBagConstraints constraintsJPanelLoginPanel = new java.awt.GridBagConstraints();
		constraintsJPanelLoginPanel.gridx = 1; constraintsJPanelLoginPanel.gridy = 2;
		constraintsJPanelLoginPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelLoginPanel.weightx = 1.0;
		constraintsJPanelLoginPanel.weighty = 1.0;
		constraintsJPanelLoginPanel.ipadx = -10;
		constraintsJPanelLoginPanel.ipady = -26;
		constraintsJPanelLoginPanel.insets = new java.awt.Insets(3, 8, 3, 8);
		add(getJPanelLoginPanel(), constraintsJPanelLoginPanel);

		java.awt.GridBagConstraints constraintsJCheckBoxEnableLogin = new java.awt.GridBagConstraints();
		constraintsJCheckBoxEnableLogin.gridx = 1; constraintsJCheckBoxEnableLogin.gridy = 1;
		constraintsJCheckBoxEnableLogin.ipadx = 32;
		constraintsJCheckBoxEnableLogin.ipady = -2;
		constraintsJCheckBoxEnableLogin.insets = new java.awt.Insets(10, 8, 2, 251);
		add(getJCheckBoxEnableLogin(), constraintsJCheckBoxEnableLogin);

		java.awt.GridBagConstraints constraintsJPanelLoginPanel1 = new java.awt.GridBagConstraints();
		constraintsJPanelLoginPanel1.gridx = 1; constraintsJPanelLoginPanel1.gridy = 4;
		constraintsJPanelLoginPanel1.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelLoginPanel1.weightx = 1.0;
		constraintsJPanelLoginPanel1.weighty = 1.0;
		constraintsJPanelLoginPanel1.ipadx = -10;
		constraintsJPanelLoginPanel1.ipady = -11;
		constraintsJPanelLoginPanel1.insets = new java.awt.Insets(5, 8, 14, 8);
		add(getJPanelLoginPanel1(), constraintsJPanelLoginPanel1);

		java.awt.GridBagConstraints constraintsJPanelEC = new java.awt.GridBagConstraints();
		constraintsJPanelEC.gridx = 1; constraintsJPanelEC.gridy = 3;
		constraintsJPanelEC.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelEC.weightx = 1.0;
		constraintsJPanelEC.weighty = 1.0;
		constraintsJPanelEC.ipadx = -10;
		constraintsJPanelEC.ipady = -26;
		constraintsJPanelEC.insets = new java.awt.Insets(4, 8, 4, 8);
		add(getJPanelEC(), constraintsJPanelEC);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}

	// user code end
}
/**
 * This method was created in VisualAge.
 * @return boolean
 */
public boolean isInputValid() 
{
	if( getJCheckBoxEnableLogin().isSelected() )
	{

		if( (getJTextFieldUserID().getText() == null || getJTextFieldUserID().getText().length() <= 0)
			 || (getJPasswordFieldPassword().getPassword() == null || getJPasswordFieldPassword().getPassword().length <= 0)
			 || (getJPasswordFieldRetypePassword().getPassword() == null || getJPasswordFieldRetypePassword().getPassword().length <= 0) )
		{
			setErrorString("The Userid text field, Password text field and Retype Password text field must be filled in");
			return false;
		}

		if( getJPasswordFieldPassword().getPassword().length == getJPasswordFieldRetypePassword().getPassword().length )
		{
			for( int i = 0; i < getJPasswordFieldPassword().getPassword().length; i++)
			{
				if( getJPasswordFieldPassword().getPassword()[i] == getJPasswordFieldRetypePassword().getPassword()[i] )
					continue;
				else
				{
					setErrorString("The Retyped Password text field must be the same as the Password text field");
					return false;
				}
				
			}
		}
		else
		{
			setErrorString("The Retyped Password text field must be the same as the Password text field");
			return false;
		}

	}
	
	return true;
}
/**
 * Comment
 */
public void jCheckBoxEnableEC_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	
	getJComboBoxEnergyCompany().setEnabled(getJCheckBoxEnableEC().isSelected());
	
	if(getJCheckBoxEnableEC().isSelected())
	{
		DefaultDatabaseCache cache = DefaultDatabaseCache.getInstance();
		
		List companies = cache.getAllEnergyCompanies();
		java.util.Collections.sort( companies, LiteComparators.liteStringComparator );
		
		for(int j = 0; j < companies.size(); j++)
		{
			//weed out the default energy company
			if(((LiteEnergyCompany)companies.get(j)).getEnergyCompanyID() != -1)
				getJComboBoxEnergyCompany().addItem((LiteEnergyCompany)companies.get(j));
		}
		
	}
	
	
	fireInputUpdate();
	
	return;
}
/**
 * Comment
 */
public void jCheckBoxEnableLogin_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	getJTextFieldUserID().setEnabled( getJCheckBoxEnableLogin().isSelected() );
	getJPasswordFieldPassword().setEnabled( getJCheckBoxEnableLogin().isSelected() );
	getJPasswordFieldRetypePassword().setEnabled( getJCheckBoxEnableLogin().isSelected() );
	getJLabelNormalPassword().setEnabled( getJCheckBoxEnableLogin().isSelected() );
	getJLabelRetypePassword().setEnabled( getJCheckBoxEnableLogin().isSelected() );
	getJLabelUserName().setEnabled( getJCheckBoxEnableLogin().isSelected() );

	
	fireInputUpdate();
	return;
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		UserLoginBasePanel aUserLoginBasePanel;
		aUserLoginBasePanel = new UserLoginBasePanel();
		frame.setContentPane(aUserLoginBasePanel);
		frame.setSize(aUserLoginBasePanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}
/**
 * setValue method comment.
 */
public void setValue(Object o) 
{
	if( o == null )
		return;

	YukonUser login = (YukonUser)o;
	
	if( !login.getYukonUser().getStatus().equalsIgnoreCase(UserUtils.STATUS_DISABLED) )
		getJCheckBoxEnableLogin().doClick();

	getJTextFieldUserID().setText( login.getYukonUser().getUsername() );
	getJPasswordFieldPassword().setText( login.getYukonUser().getPassword() );
	getJPasswordFieldRetypePassword().setText( login.getYukonUser().getPassword() );
	
	if(((YukonUser)o).getUserID().intValue() == UserUtils.USER_ADMIN_ID)
	{
		getJTextFieldUserID().setEnabled(false);
		getJCheckBoxEnableLogin().setEnabled(false);
		getJCheckBoxEnableLogin().setSelected(true);
		if(ClientSession.getInstance().getUser().getUserID() == UserUtils.USER_ADMIN_ID)
		{
			getJPasswordFieldPassword().setEnabled(true);
			getJPasswordFieldRetypePassword().setEnabled(true);
		}
		else
		{
			getJPasswordFieldPassword().setEnabled(false);
			getJPasswordFieldRetypePassword().setEnabled(false);
		}
	}
	//set some dynamic data, for the sake of curiosity!+
	getJLabelLastLogin().setText(
		"Last Login:   " +
		new ModifiedDate(login.getYukonUser().getLastLogin().getTime()).toString() );
		
	getJLabelLoginCount().setText( 
		"Login Count:  " +
		login.getYukonUser().getLoginCount().toString() );
		
	long company = EnergyCompanyOperatorLoginList.getEnergyCompanyID(login.getUserID().longValue());
		
	if(company != -1)
	{
		getJCheckBoxEnableEC().doClick();
		for(int d = 0; d < getJComboBoxEnergyCompany().getModel().getSize(); d++)
		{
			LiteEnergyCompany ceo = (LiteEnergyCompany)getJComboBoxEnergyCompany().getModel().getElementAt(d);
			if(ceo.getLiteID() == company)
			{
				getJComboBoxEnergyCompany().setSelectedItem(ceo);
				oldEnergyCompanyID = company;
				break;
			}
		}
	}

}
}
