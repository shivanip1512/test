package com.cannontech.dbeditor.editor.route;

import com.cannontech.common.gui.util.DataInputPanel;
import com.cannontech.database.data.pao.RouteTypes;
import com.cannontech.database.data.route.RouteBase;

/**
 * This type was created in VisualAge.
 */
public class RouteEditorPanel extends com.cannontech.common.editor.PropertyPanel implements com.cannontech.common.editor.IMultiPanelEditor
{
	private DataInputPanel[] inputPanels;
	private String[] inputPanelTabNames;

	private static final String [][] EDITOR_TYPES =
	{
		{  //0 - CommunicationRouteEditorPanel
			RouteTypes.STRING_CCU, RouteTypes.STRING_TCU, RouteTypes.STRING_LCU, 
			RouteTypes.STRING_TAP_PAGING, RouteTypes.STRING_WCTP_TERMINAL_ROUTE,
			RouteTypes.STRING_VERSACOM, RouteTypes.STRING_SERIES_5_LMI_ROUTE,
			RouteTypes.STRING_RTC_ROUTE
		},
		{  //1 - RepeaterSetupEditorPanel
			RouteTypes.STRING_CCU
		},
		{  //2 - MacroRouteEditorPanel
			RouteTypes.STRING_MACRO
		},
		{  //3 - VersacomAddressingEditorPanel
			RouteTypes.STRING_VERSACOM
		},
		{  //4 - VersacomCCUSettingsEditorPanel
			RouteTypes.STRING_VERSACOM
		}
	};
	private javax.swing.JTabbedPane ivjRouteEditorTabbedPane = null;
public RouteEditorPanel() {
	super();
	initialize();
}
/**
 * Insert the method's description here.
 * Creation date: (3/15/2002 1:17:24 PM)
 * @return Object[]
 * 
 *  This method should return an object array with 2 elements,
 *   Object[0] is a DataInputPanel
 *   Object[1] is a String (Tab Name)
 */
public Object[] createNewPanel(int panelIndex)
{
	Object[] objs = new Object[2];
	
	switch( panelIndex )
	{
		case 0: 
			objs[0] = new com.cannontech.dbeditor.editor.route.CommunicationRouteEditorPanel();
			objs[1] = "General";
			break;

		case 1:
			objs[0] = new com.cannontech.dbeditor.editor.route.RepeaterSetupEditorPanel();
			objs[1] = "Repeater Setup";
			break;

		case 2:
			objs[0] = new com.cannontech.dbeditor.editor.route.MacroRouteEditorPanel();
			objs[1] = "Macro Route";
			break;

		case 3:
			objs[0] = new com.cannontech.dbeditor.editor.route.VersacomAddressingEditorPanel();
			objs[1] = "Addressing";
			break;

		case 4:
			objs[0] = new com.cannontech.dbeditor.editor.route.VersacomCCUSettingsEditorPanel();
			objs[1] = "CCU Settings";
			break;
	}
		
	return objs;
}
/**
 * This method was created in VisualAge.
 * @return DataInputPanel[]
 */
public DataInputPanel[] getInputPanels() {
	return this.inputPanels;
}
/**
 * This method was created in VisualAge.
 * @return java.awt.Dimension
 */
public java.awt.Dimension getPreferredSize() {
	return new java.awt.Dimension( 400, 450 );
}
/**
 * Return the RouteEditorTabbedPane property value.
 * @return javax.swing.JTabbedPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTabbedPane getRouteEditorTabbedPane() {
	if (ivjRouteEditorTabbedPane == null) {
		try {
			ivjRouteEditorTabbedPane = new javax.swing.JTabbedPane();
			ivjRouteEditorTabbedPane.setName("RouteEditorTabbedPane");
			ivjRouteEditorTabbedPane.setPreferredSize(new java.awt.Dimension(400, 350));
			ivjRouteEditorTabbedPane.setFont(new java.awt.Font("dialog", 0, 14));
			ivjRouteEditorTabbedPane.setBounds(0, 0, 400, 350);
			ivjRouteEditorTabbedPane.setMaximumSize(new java.awt.Dimension(400, 350));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRouteEditorTabbedPane;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.String[]
 */
public String[] getTabNames() {
	if( this.inputPanelTabNames == null )
		this.inputPanelTabNames = new String[0];
		
	return this.inputPanelTabNames;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	// com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("RouteEditorPanel");
		setPreferredSize(new java.awt.Dimension(400, 350));
		setLayout(null);
		setSize(400, 350);
		setMaximumSize(new java.awt.Dimension(400, 350));
		add(getRouteEditorTabbedPane(), getRouteEditorTabbedPane().getName());
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val) {
	
//Vector to hold the panels temporarily
	java.util.Vector panels = new java.util.Vector();
	java.util.Vector tabs = new java.util.Vector();
	
	DataInputPanel tempPanel;

	//We must assume that val is an instance of RouteBase	
	RouteBase route = (RouteBase) val;
	String type = route.getPAOType();

 	for( int i = 0; i < EDITOR_TYPES.length; i++ )
 	{
	 	for( int j = 0; j < EDITOR_TYPES[i].length; j++ )
	 	{
		 	if( type.equalsIgnoreCase(EDITOR_TYPES[i][j]) )
			{
				Object[] panelTabs = createNewPanel(i);

				tempPanel = (DataInputPanel)panelTabs[0];
				panels.addElement( tempPanel );
				tabs.addElement( panelTabs[1] );
				break;				
			}
	 	}

 	}

	this.inputPanels = new DataInputPanel[panels.size()];
	panels.copyInto( this.inputPanels );

	this.inputPanelTabNames = new String[tabs.size()];
	tabs.copyInto( this.inputPanelTabNames );
	
	//Allow super to do whatever it needs to
	super.setValue( val );
}
/**
 * This method was created in VisualAge.
 * @return java.lang.String
 */
public String toString() {
	return "Route Editor";
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G60F854ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E13599EBEC9C45591470E8EB21C09D14C6D4B24F3A2DA552B634EECBD1C0C605A68810C8C9E8D479C754C6EA28DCB52AF8244A5C79FCF17C8846F6A001G0EDF64611C1D87A2B5260D1343440981B7B62ED5D21235EF6FEE6D3D5D756E1C6F6CB8F63FEFE6E76FFC3D33898FCB5F4D4E774D4C774D775EB529FBA33754652EA344D5CA6C3F37DD04D43EC1087B206BA1014B138B3DA469EFAF400B6401D68F
	0C85C0DBFFF521371A64B41441FCB54C33338A3DAF43F3AD79F6430AD760A1831FEC207DE15D05FD737379492860330D4DDD6515B06EGF88CF0B86E89A27F5D653BEC7CE69BAF4065A6E483DBF32CFC0F0D3B8873B8C081406AE0E27DF646791A0E63767C7C0D39E4732F5FF4D761B9C9E78AE88D713DFD76D8CF6EF6BD93C2DE7FE5F2621E6BE13E92GAFDFC21A5FBD82E3E75FD8689FA3FA44B7A2E91A2ED1F9A46C13838A55CD1F29C7295C51F18E0777982ACF52E415909A46F36FACAFE3674099B0A78A62
	6EAAC5DE85B0FF8CE0A3G3F473BEFF65AF28EDD3A1BECF9D2ABF9A143BD7C8A17DFD592774809BE37EDB75379DF47D037F9C0DB8DD0846099AD74B6817881DEE5367E5B6881983B0669A9BD925135AE43B829864C8F74002C42F3C787D0EC5CB9F9C4B78304F0FB0E14372611E7BE607B462FF89F57C95ED1E15B7CF3F71175BFBE6B5E16C6A76B735A5D67C739AE68E8C2A71C7777B3724E991D6BFBF3F97F1BA4735EF42DDED21A06770AB57B5DF976B977A6715EB40A36FE450B36DE8F4FAE5B8FB83E09615B
	4792F86E07794CB7F0FE82E8F70C895F985AA1E46975ACA35507FB536AE16983DD6EB25516C1CD48427DE2EB8463299770E100AC0025G85GCFGECD405EFF40F35FDC65F6813CCFAB22A288159A4FC6F563117E014635414FAB40BCA5A08BCA8190AB42C4A9631571429A87B701CFDD5AA7A6C8870F8DF56E4D3220A2E4169D2C42632E971B5AF29AF629AD3E65481A5A2830308C144392F2B35989312C5BFB682921593ABB83DC5C5DDCEC803F0A29CG4FDCAF2DBA6A3CACD2682D87E80F88BD5C4A4EBBAB1B
	904F9D9D3D3ABE96B58670A6A4AB02363A1F45369F1E4F837033769908AB0479FA671C35EACD52B9FEE58445174CC9919B75DE4C194591E16BBF8D89DB7B2B6EA42DEB4E2435B5C22546ED5C24257A7C81F6A64A4567BFAA9DCA339FF9DEC9CC4E9F632B5272A879924E5F61586A66F134D5AF5CB78CF03DA6F4DC9B2967BEFBD232E461259F1960E0F2A021F13EF63B06F9D51E10B56A178DD98B4003E57BC83536BD613FC15D712D17985EGFFBF858EE6B978BD9A7A24C429298CC3856817A9D534D0025E44F8
	D951E1A391AA0257C18D73099E83FFF75637EBB5AC8EB4CDE6C2BBDBEC7A91662B32AAC7C068D3FAD4239CFFDCC7FB0F4913F62CF46ADE666BEA94630E573265D2855E41D4A2208A8CDD6251510F57BA3598A197F40AB5F9AD0C1BB4611331C66113CDD3371215971A5D69F26152BB7D6EDE1D7B54C5BD6113DC26C3C6FA590F32183171961775F8E5B50C29D5157B4023A61E13856767G646B42876EB6F6A74519ED7CD33A2AF2D5BABA3EE59C4F366471288C6989837A2C23375B47EBD2E803368EB97D876328
	C3B5A997F0F9E7BE59CF666B93BABA7ACC5D10CDBAE93787F6FFF032826F0EBAAE54C5FF302B966F378566F5C621375590B6F83CCA7487B9E339246876D7B276B9FE036BBEECA4ECD0FF35688FF6D36419873482C3682E45CC4EF5DD16250FA8AC4D5A77DEE3A65B08631EB24BE18CAA26C5FBA00862C2C7C5A64A0BF958C65B79617D8AD107D75BF29599097C33991E4B466766A3DEAB3319BE760C2756501B993EF5BC35063EDEABEAE8A750F247C5EE9E0C221FFBCC4873G47817AG8C00452650C358BACA96
	28FDBDE0D7D313547EB9C1ADEA90AD61F1E84F9BE82908C374D9D6B7BEE5B64F871E8F81F05C870D08DB8F73E287F72099F1F5967800A5F0E7DB9057877330A5F27BCD35987B534E7C96B64FF566CD356972F2B2605EAF167B5FDD1047972983DC1797221973F6B01ABEEF2B5174F95B0C3E4871F0C6F297A368D35179737A57226972FA8923C5ABB0AE8DD38E4AA6E420FEE58AED3F45C27B5D40ECDF884F0F81707501C6AF0B17C948F670DEC0F15D3AC61113CF40FC88A09BA01772DE03671C9F46B0978521C9
	82517A8DF90464C4F1EFD73358CBE0DE87F08CE0G00C6854F61965C9B1162CAA49AE192F2795A5FE4FE886BB6BAEBBF2E5DC96664E2C8FC43F2G939946932BA10F54A657103A89AE67899887G5489FCD7B427096D873564E4E3BD0C1A9C2B9F15A6A41F9423BEBF34EB9AB6E67B0E353737569FFD2BFDBF4FFB393164773B6365EF272DBD884BA7389F975A633D57B55AB94155A45E6F36G6DD8CC68B05450CC127236B29C71C5A7A2BEE91832445D5171E1D4D5FBED5358B93B27294CBECB0D091C9DE3675F
	8173FB811E08091C9DEF91B9BB7F2EE524B76BEC5A1CDDB4F0443DA946E52E0EA7F2F69E3C53F11E21E6413397680B6208DB52DC1792DF3F04F7E79F0C1C7E2BB9F474E72CD1897A33F368A86F5E12E47A4116E4FAE952FEFE37D54D62EEDBD66591751E3FE72CC72B6DBB955BE35FE0A3E97A46735B38DF5CB413700B67EBBE0BDFF05B9DACFBCD588E9747FDD68C822123634C9C7F647AAB2D93F5F65F243059DFBCE8330BB00F83AC1E94B6FB7413E4FF2BDE36576D4AF02F3CC9FE1F9513296FDA0BE6115FC6
	40FB26C4ED796974C1988725D13B2A70E0E2E5851022BF60D856F55839F5DB5367FB675E79B977FDF8457BF8BD7EA30B0126A9DE0FDD8EFEB34337A761F9CCDEF6E23293E839D322CE5FC3D81D3E84F59A60B8C09F008110FDC96812DCEEA78B5469815D6805E221A625F7FEBF357973FD0B38FF1B707795BF3F0D94DC7B2C2BA203DF64DE627E30529EB78EB4B2BC3F5FE9B75E2F98E81553703E89F09A60BCG1D9677BBFD39155F8F5D210BD2E9A44CBAAFF139C1C50EA550187C795D4A6B445D2E0733EE191E
	DB5717433CF0BADD0F95E25F9D56CE275A4EE0788D532936FB56A3ECD78C34014B42F6E39846F60D7C4DCCF3A6FF079B1C01107DE8F894FA7381A9646C797AAC4A6454DD9E86B6ED71AC66A3C5D328A2294A94EBCF7BE1219662F77FF393F1FC783924672B1B966ACD3E8858BD57D74A035F7FBE12397FF910246FFFD611747D4F63E47E7EE69D497C5EDAC4125FDB395D639E34CD81784193G4FGD44EC07C4E88FF56DC8D5C1F537872FB0110FCCAE7DF0B28607FAFF7663B8E39977E46A439715DE4D827D40F
	6079829FE25FD228EEB0245DA33AD1C726928AD33ED47408EE4C612A9CE4E85EFF6F2D933DFB670C684995097564B03F6860C607C46FCE9DDCE12B685D174E085EBCD21A70530924672D1E2F5EE7F7257DDE73657AEC16A7339D2F73ACEC47459E765E897A9F18B4E40EDB6241FED98F86AD597117E51EEA8757E37569160259017734E7384DC06785B322274D12709DA9886F68FC4D4D4C069B00DE8C407B682B06C4CFDBBF8BBDA340GG854881607B1EE6B6DD81731533224F2DE07F9761FCBE156A49427D8C
	5F672FC85AB754103A2F9B045D5790005C27079ADA6BE16B61E37BC5FF735DA1519FEE1A957D611A21797B43932D297DA16ECF504D56797B43BBDAD37BC3315F6E77AB9377B1CABE0B9E38DF668FDDE9FD667F3FDAFE408F4C721FA62516C9EA7E1FCF578D6B1E4C3F602FF393F78F7106E58C789ED29AD382B49CB7C07ACF8196DB63047523E9E7A6291AE30F87EFFD6B772BFFB7E81590EF8F590D6E54AF1B2CBA49813FC4452766EE325D5095A0823E07F8ACB614DAF4D215FBC9DD709CFEEE32289C68927958
	22E4E7AFF2EA0BD2C5EDBBADD9E10AF171CEAF71E878D11C54F032AAE921B6DE845F41BB90D757C514172905003C35CCDEBC45671CD27B0B971A771E59D0D0C25C5D24DC5525C037B482253907EC27E1D336423A9A089B7FBC418EAA0B21E721EB1640F12FBA57474B7A86A0FA9D2147625F492E5AD8558DCE96B7C99BDBC9E1014FD991B89516CCE0A51BBD94BF726BE613C33B6AF55A72487BAF1FF79317FDC9D43DB7EED0628D42AB2EBA898F5C7B19D14AA9C8EBCA1A95544D88C8D61FA219A0B98CFC5FFA38
	FD49771E7B8FE31058CA499BDC153035ADA46B11362EE0D051E467G50AB9C7F1AF3BC2E71252C29095F38734C1A2D436087FED292E9EFE73F07596F917CBD4CB00799667091D0EEB11977AF159E97F7E64E83723C4064C1737B3A41027429279F3E6D371D451B60F65D2414FDF082A3D4A7D6FD980D8C4B663579CBDE2B48A97AA65A48C0D7096339BB62F37D1C773B7BE7135F031E39E6D746776E7AC53C27BC36A875BD68E70750FB8C40E7AF923D4076C307C8663E30BFA229AA155431AEAD00BD6249C9AAA7
	7A127B8E617916D8E3936D9E68904ABD1A3467FFD0CB8788381298A3EA8CGGB49FGGD0CB818294G94G88G88G60F854AC381298A3EA8CGGB49FGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG248CGGGG
**end of data**/
}
}
