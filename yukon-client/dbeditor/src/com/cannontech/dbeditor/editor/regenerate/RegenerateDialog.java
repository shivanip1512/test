package com.cannontech.dbeditor.editor.regenerate;

/**
 * Insert the type's description here.
 * Creation date: (5/31/2002 11:18:41 AM)
 * @author: 
 */
public class RegenerateDialog extends javax.swing.JDialog implements java.awt.event.ActionListener {
	public static final int PRESSED_CANCEL = 1;
	public static final int PRESSED_OK = 0;
	private javax.swing.JButton ivjJCancelButton = null;
	private javax.swing.JPanel ivjJDialogContentPane = null;
	private javax.swing.JButton ivjJOKButton = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private javax.swing.JCheckBox ivjJCheckBoxAll = null;
	private javax.swing.JCheckBox ivjJCheckBoxSelected = null;
	private boolean regenerateAll = false;
	private int response = PRESSED_CANCEL;
	private javax.swing.JSeparator ivjJSeparator1 = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private javax.swing.JPanel ivjJPanel2 = null;

class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == RegenerateDialog.this.getJCheckBoxSelected()) 
				connEtoC1(e);
			if (e.getSource() == RegenerateDialog.this.getJCheckBoxAll()) 
				connEtoC2(e);
			if (e.getSource() == RegenerateDialog.this.getJOKButton()) 
				connEtoC3(e);
			if (e.getSource() == RegenerateDialog.this.getJCancelButton()) 
				connEtoC4(e);
		};
	};
/**
 * RegenerateDialog constructor comment.
 */
public RegenerateDialog() {
	super();
	initialize();
}
/**
 * RegenerateDialog constructor comment.
 */
public RegenerateDialog(java.awt.Frame owner, String title, boolean modal, java.util.Vector carrierRoutes) {
	super(owner,title,modal);
	initialize(carrierRoutes);
}
/**
 * Insert the method's description here.
 * Creation date: (5/31/2002 11:20:54 AM)
 */
public void actionPerformed(java.awt.event.ActionEvent event) {}
/**
 * connEtoC1:  (JCheckBoxSelected.action.actionPerformed(java.awt.event.ActionEvent) --> RegenerateDialog.jCheckBoxSelected_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jCheckBoxSelected_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (JCheckBoxAll.action.actionPerformed(java.awt.event.ActionEvent) --> RegenerateDialog.jCheckBoxAll_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jCheckBoxAll_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (JOKButton.action.actionPerformed(java.awt.event.ActionEvent) --> RegenerateDialog.jOKButton_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jOKButton_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JCancelButton.action.actionPerformed(java.awt.event.ActionEvent) --> RegenerateDialog.jCancelButton_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jCancelButton_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GFAF262ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E13DBC8DD4D4553A74AE3DF8BDD7593B5465753CDD5F530A35747538E56B513D2E9B37B031A87F4B8C15101BE4EAA6E414DC5BB37C8D8A082286B9A21595968E033AEE0820A018D2A4BCA12417774A489CE0F4182119834CG497B765FB90719B3A0DCFD2E75F14E7E765F77373F7D6DEF1F916DBEB0B5D5235D0D10A69531FFDFE990924FA0D43C7869B59C1778E43C8EA97EFD843093DD5E1F82CFDDD83C
	AEB0A5C117033A87F0A3BD14AFA5A768BE0077DC747136E3B57062E31ECC283B37BA6621516719544F67C9A765224319704C86A884DCAD40E4009CD4F5B80F613B201C4D5EB1E83488557E91377925AECF01DF425A65C1DDB10071A95C2663301E55CF825CF400F5G68A956961E99043A5B4B4BD83BCB77842204E737EB3370DC0A71B938D85FA96CD908FEC984110CDEED798A1E950D57BACF365B3B8D6DA61B4DEE930576AE03E03608F60741A1F48AB641E1920572728B52FB2D45E435F7224C27B13DCF68F4
	E4AC6087468FA238528CAC23C6F86F8270FB1A533CB02B025194F8AD90C5CF5B2A71C5F3545314D694AE535C76FBC3F2C8B89E7FEE22835C2F8A4AAEG4A4FE3DF9C77410F794A0DF00498CFAF9D66BCA504CBBC2560B90B67004E81AE4D6178C4029721BC89E07A9C4EEB65671C575641E9A8710AC13B43872F3367D09EE367483C6A0353B373093D6539314D94BE83738234828C81CC81188D300F5879627EAF60D9FDC52C31F7F75BED55BDBD272DE647F7F633E0057772F228E1388BC23B5DE1C6085A729FF4
	45AA74C876794CC8BB46C0F93B08386D4D3CF0BF9245035AD4955EE6AD4D524631B1121E11F9AB1B0B6576A03191BD3CEB5838947FA8418FA970D467DF91BCAE87C1DD52DCAE6756ECCECBFD4ADDA8275428CDD721A56829CF35ED911486D704CC8B15711F87300C2783BE8CE09940C6001CF930A667F1996FF79D9DCB46F5E0EB8E1B495A54FB25476490CF77DA2CE64141E4FD6F6151E42D86345F34F17723F289BE2A54D154E3A52AF2098A5E2D2D1FC765E11EA74B054E9D65F3EE7FF95E3611AD6970C132A6
	0266D19DA6CB787FA278E0851E691660F1B9946A744F466BE8FBEBAA467BBD6BE9A3EE021F722C270DECCD61B6928AF57A6762F5D43F7FB604FD2A9F1427G4C820884D887200B04F611DC47DD2E129BDCC70D8A7D523E9F397742D3F0098ED31D4DA91AEC6DC20B49E1B1DD318ACE445AFC6146F23DB222DF89D95F6DB047D96A0CACF69B0CEE6A9640181C34CD19FBA7EE6390C8ED3325DB00893AFB909F374A1D8BCF2B49A9FE5FE386F7A6372075675CD8A6FD269698918640EDA3313C16925FDD816F2D11DC
	D691BFE3DC8814A3A439BC6D5E854FEF413885EBF9F92D259D13E1F238390D4E48484136846D831E0F57953D902F8BFF012F4F8D2D5C8EEB337E9595AFB5285AA159B767D31B721B6FE90721E47CE040C7G44816896707D38B223155BF22437CDE2BA70336885F5FBD58226DDFD8D36C8F3A47BD8EF3C6DD8F3242A60285C2B07316D9681DF35G6685DC76DB5D0554A6CF1B1C82374286879810E016B5C15B268D62BDC66893ECE22D50A3584C7062E4B610B518A15BE707DD321DDC02477E2A868C48A9617387
	F7D2BC0C2134F6DE7F9129B7092243F225D7941A84D13458BA657E0788AD4E912E5049F82DC14447830F01G53A5DE9F9D4CD558D93D5DFE2D3727992FA0E62F71E4DF8E05768BA47D4FC84171D902D4FE1C14657A4A942EBBA56076637129237B689655B954ECE562F3B8D2719A60FEB31561E95DB0294BD988FE93208DA0E0A167BFA535D5255F4D20CB26EDBF19C3B9FE46CD1C035A4603C33EEDFB66103AEDBFBA24EE5B21C3235BEE58101A6D523A39C318C7FB3FCD3196A20730FFEC375BEC82D910D297C4
	63528D4D188F0B4DA2DE3418BB853149B2A0A034ECA13669F544870740FB78C26EB37BBF61BE7360403DA86CF206EAFC9574E011D63F085A31F1116CB3A9CD4F7F0C5718E0953AC1D0B576DE1B48E2C5625F995E19CCF081428338EF51B7B5DDC27B3553F6D79354370B023958C478B150C723606830BB3A85F351D5D31F49E06A978DC49F06EAD2FD863F9FAABCFC78E421E7E4DDFC55F3644B559EC3567B9E73442116C3C6EADF39A8A57DDFC652FA646693D9ED350E173ED2CE5F42213BA8FD8D5F1E6E95C53B
	6D661147C79CAFEDC7B8EDA1067B186CF0F8E23D5974A9C79DAF0DC779BE5827A1E7C730E7B34050A23EB7B4DC4775FCEFE09BE00D5DEA25CB8E6A229711751431DB31C6829751B3FA36D41F37ED747A5AB16AFBFC56D3BA4F8EE3DF6C94FE6A95C09AF8737AD6F033B86E7C70AE0F3A961335D70E8FDB063743532A5877A83E8E292F658604773AEB5278CDA88D61B80F0EC9FDCF08890F596330F4C31800B7F2160B58E6D066A20A9643D99D78E80427F9B1BFCF9724E1DEBC95DD358477FFAC1567A90620FDA0
	40ACB6C642E2AA8F5A2EBFCD4AE7C0F97A9239DD7892E53BAF53F93B4C25713A03CB65F635CB156DD6C96D82GBFD551AE0C35533D085BA5E770B3FC09047B10605E8421E5A573F352F7B94ABC0A5979112A2F45D07FA29D3F6DC54F73638CAD9E578F7013DF64767ABCD246B255CE273D5DC242F72653A10D528FD35CED1AED706C30B81CF016B48BAEEE97F7E8B02DB83EE7E8265B99DFD6A26F734A9912696021E2CDBFD9E34D769AB8E21C83532A113629960B500F389CFE7EDA191B193DE32FF63B8FB9CCE7
	7C07AB64509A1C1EC9E93A70931689494160956FB2B87BE1EFADAF7F46A347A29AF40C0F1417F8AE45E544F6DE8165E6GABGBD57C511739EEE6B8F3859GF4AD9ACB14EBB181707AE5713AAAG6A6FEA52407521717BB7AE5FC1EB95BC7F5E3D0B4A77BFF22B981D110F5C05AA065F5128650382F6E8344D4B28DC071649720D1E1F1E19GC065B1B50D4BA3825A201739BC5A7A5464D176B2DF4FEDD7CFA879997FB6474E594D69FC7EFA985BDF1A7FB8D24EBF9B7031G3A65FC7E755B71DA1B68BEC6675669
	785CFA9837F9B91F7B61813539A7C9F3AF2E2AA03CCFFC0FE2392FA3CAFF91963D47273F183A1C6AEF56F2CFFFF1A7094196GBEF6B97797DA6DCE053F38G06E632F5428E40FDC008965BB478FAD61EC566A53E9E713DF36EF5AC03C498F377AB713AE200DAG73ABFC0E2F13474CE11DF10D1243F29BF0BE487F957533D3108A1E66EB5611F5BD73954FFC50E6021F7D0AE7BE683A116703A2214E98454FB2B1291E7928402811F306F814E93F0DDE7D8ABC4ACBBC7AD11BB95932CF5D177195447652CDAE65DE
	3A8E464AD9912FBB86F08E007A3B4E922CF36CD35BD670DC4BFE047732A0A84F82088408436DD7466B0AG6AD7F23D5DBE246667C76A4D1713174F6DD4968F25CDCC06333C7AF94A503AF2E4BF4A772F7AB85F7EAB399E7FB7FDE2B4F4F9757324E176CAB5BD6EE87231A7D1BF00787D4C3613EAFADC82E3462D64FA6CC1FC5FC22BB8BF59DEF9749B63C76F554F131F32D5EAB2DDB940E9E8DC45ED692FA41E8800F250AAEEB7B1C378FE057B14C63B45A6A26ECF6E7E99470AF6072553E26338C002EB37BB4861
	166266DF77FD6EFE713A7A39BB6A3A7A39BB667A68B9253557FD1D4BE97EE7B2099902013FC8G0ADBC3F051D0CE147431490863E2FDB4AFA711B256A5AD7B9B5572B5FF8F6039C66A7657B7FD8EE5BEE9BFA94F5B3B03485369941C4481541AC4932BDBA36EC1AAB9097326EE817173E0FEDA86EBF3C6345714CA6BA57ED01E7AFAE9B401A55135F23854F32D601CDB854821B11A2F15AF5C5CCE3B22F90C67B6E05FBE954A21G8BA49DD9CB70DA08E3F2CCE24F1CD76973A0FB163DAA4B195A4C674837FD9A10
	3AFD9EC3F8DDB86D3D0EF6415386CF20BC29CE7622F522500DC5C75B54127E224951A9F859703724BF2D73553F997932F32A1795A374F2C43229A9FDCAFFD14FE451461EA2FB8640F38AFB27635D132E9C8F47GD4BF27CFF27D043C4A75738FA48F9D87E594932F4B0B617A69C5EAF7C14698BACFED0C775ECF67BE23D34EFDCC62E575005AF82DEC9C2B4AF8D4F6D7B4B8D6F0C9658ED2F6CB73BDEC40F6EF96BACC3DD6F0BFF6275050432ED5G9F9A03F9FCCABAFB7845707870377DF80F6AF0183AC195CDBD
	C2BB1A3C1A5CA9C96764A45C97F0C600C6001E557C1C6178811F6B59892786DFB9E37FE693381C05D29D63FB59EAAE677F2944F24E09053D9E20AA164B39446DA91756D8D99656D8DFB156FA322E7CE2E9AC15AA619389BED00127B1563001475141D01779A76ECFFFC162149EA87BCB38C8028B02F20804ABB0E2DCB81417C838E1A377455192EECBAF4699DF83193D46F10F75F90F97554747B3CB6DAA7B79F8BD926EB32377F88D849786655857389C4F1E7414E362EB326CB257781263E6E27F05EBBC6528A1
	B918E3EBBC6598B04C65F88E6AE62E61B4CDC21C1F1CB80E3B28657C68A55CFB833C1DD5427DB8485B3962380D3DCCE2EF05BBB6DC34584C76FEB0B7FC5BA8BA8D35F5CD0D8DCDE7AEB71C3FDCD38FAF743CB235DFF9DEA95B364F67F9A5A20E4AA40ABDD37CBEE476FB10689F77597DBA44252FE3DC480833B72651828D8C702475B1A36A313F03E33522FE37D1D90FE92D54AA6B3F9ED11F2A68CF79FA6ED31E2FC8FAEE8A32BE3E5F6777AF012FD3FEC259B3687C07685225959954CE2E16AA6DE4A334C9D9AB
	5BC65EDADFF6B2072C5F6235549E52A57CC2022FD560291DDCA4F8DC3E84F5E1EB392E3FA6FB6441B7601C7E8647BDB24075FF698DEE4F7144E74D04F224045BCAF0B8770673EA94F73B81479D384DD871444C9BE86389F40E87489CEAF7192345AC6309F3F2517D44661CAC65C27D76EFCBF8CEAF768D3EAED617601C1949EA693461CCDAAB7771DBC85B84E827DB475BCEA379D291820232F578DB2F3564FB2F70F5387DFD46DAB67F50BAEF39E810FC0706E1B234198E300749A1F49D5537C622FFD79F4E7FF5
	C100BDG9B0249DA4DA9E474957771BDA8F3BD681E50F3E41BCCCFF3BF2727EC3DBABD492350D33F5E131E8E635E9174B403949A6DCE8B5D98A9CD3791BF0A57D76BFAEE0BFFBB496D53DF42BDF70A5BE770FAA9469E4638C4A867EC6038F462838F32BCAD455DB52C969763BE633111C49519487679306A9CB7E22FB7E23BD4D75FEF17F5E553F2DD952B7061E9BB53953AA25F30ED10F5C547F6E54AE3BB86795875AAE3A70FB1F61BE2ECFACE7CB48B6B448A78008D7C1C783A66CBF836182EFAE71081596830
	C384A53AA9165CD8B0B95FD1B231EF137E184EFD772C5F5D07C27FF10546D72EB918719C411E466FBEA4F84A4B5D59B8B6CB043A5DEF429A82E884B0838C3D49F9B3EAB10DB8C38264D70B22293D0BE45CF96284A741E5B48E7C280D5FC6E23649B04E74B7395DBFFC8263A2209CA5618ED4723500B6F29BFF0E787A03D0AE83281770AF91BC4ECB623C2CD9427F35F23433A29EC7323D0DB73ECE6AD9DBBAC75F28F3A8EDFDBC6BA4DD51BF97751E4479832B49ED6F95E1AF5D0865E3F77378599F4AD3G428116
	B15A280D4F9910FC5DDBE32F1FFAE853769635F1DC965F7274F587BE41710657ED36D45FD017292C2F36DAA9BE22046C8F0EDE61GA9A3247CA01879F5A37EAED8CA9457583BFB6CB61CAC2EBF73F573656A7A3A33673FBBF33ED9327579BFAA632F1C7BD3351CD6CFBE7D986F135E127345B47E1AEB64FBC59854F9533671149A3D5417BC092F7098AD2FE672F5271FF1B72AFDE90566939F34A4B29A4EED12E989F860FA8A3BD769BB00C64622CD782F9C0AE2D930587176FE692C35096FF307F649728CB2960E
	BE56053A33671A29ADCD1272F3211B28ADAD00E76CA625AD451C62361434C95D16D2953614939F2FBB98AF5BD2D93C27AD4DBD0EE5A75D66CB780C23D94406947789081F77FE2365BC5746F31E6B31FAD87D34C1DEBFA4557B63F017FFA71805E91572835465323A52AC5C90FFCB8227CD4BGB958B6C1C3DBA775094DFBF07DAC98F781C082G7C51699338BFFCBC6BE3C47C210AAFBCE36E94386079FCC1593E73AB3F499E7B1B4760EC9C54DC3103003A71789C7FC8B6769D223D07A0A96E31ECACEB072533CB
	24CD997E09EC32E7899D844D6C26B40D0C6BA04997EA9F0F9E6776D1867CB682788384A5A8F3A1FFB8616D23161E607DC29228DDC540B30A75CBC840ED7ED2294CF729794FDC747CF14C934D1215B25C910D0CBB42F01FF6607D6E1BA6214764B0411EDA4A3EAD98BC2ABC73D43CCD734F663779BD682F5C7C3BF797463D4DF39725ED789EC14A57E147D4DEFE56E1B11FB6F55693CE295D2DF273F3DC5C5BBC8F11B5C04E3B1B418E819AB773EF10DC1FF1DFB173213BD03DDF096A79AA3AF92F36EBB373DB1BE5
	DF218BCE4F24F3EE16F255911BEF54F7EDBCC557C4A97E99875B6BD7FEA02F0F3A9D1FA29F718AD871B7A00206ABD74165B71B70FDB35D7FA20D4AD8853D83B143BB236F25F45E0CFC6CCF0A20EDADC097009FC0A040CC00B000A5GF1GA8B1DE1787D08CD085508CE086F081CCCA646BAFE567A1DF348312A90DACC20709666BA97DF776AB691F8A634DCA9C1DFEEAB333CEF21B09007668DD1E1BCDBA49ED216CDDEE8BDF1C42EDFB209CGB0D5EA1BDB45F5987A6EF8F5784F18ED4643F46D0833B60C15725E
	68BC50FE41034AFEF95027F80CFED45617767876DD6DFB4676DD56BD649B8D70B94D6E9E163B7DE98F39B76968F08A120F6C5B13A3616A1C7CD4C5653F7CB83F4B2C821ADD6F71B51BDA08ED58B347EE208E2D3C7C0C585EA518CFB37746760D0F4B394EC25E63BACBBBC17235D0C6DB407E36F0DF716793DC6FC640F5ED613AEC2C60E3CC5D424738DE015BAE0372C6GDD927781D72FA963853C2EFD65D88A13D89EB8C97681BC16CCC67708FA95DE4B4BE58FC8E9FB74A8BF5F7BA771587857DE79509B09C9F7
	2299936C97BB6EFEB46FF39B7123331394E7B9023F1360A394F82A1F5C812E1FA5D0D776E7FE0F77049E6FB3D3209C8A30GA08EC0379562142D5C07EC5FEBC4E35C87B75BFB6A41702D0AEBB64A5F1691F977B29833FE6B68EB091EF3D6139834EDAB65036262884E45F06CF7B2793E575C417C31575C61FC75F861E83EF73CD0162F9EAF1C4CD7468B94D7130FED31937CEB2B546E1C047BC142FDC74644380B963358A5611B88DD98FFCE4093F27C8F042EFE02EBE5383FA9F0BFF0FF130F7D86305CE5176ED6
	3B7271F92343E235B2FFC35AD8EC60C6A4F97CC4E834741894F477C9389FA4DD7CFB3F37FE9E6AD76A076A7FF7DEF9719BDB9791936C27B9B5317574G590B8237FA2E270789FE6AD64F75E4BC455753CC284BF91F7B0F3CAA657CA260835E3F91FB7F3D56DB1EE1DA25BCA96E49C16FF661035EF20FBEBE169C26F850C57BED98331F67B783345F0A720949FD006C9B216FFB4A7D97849F7E3E275CB325FDE681549DC389CC6E49959333171D936C777D387BD13EB6113DAF88689E496F96021F2E40D3FE7DABB8
	3FA1D037DB13407CF6EE81765BAEA887820482ACG0885C882206BF651BEFC776AAB763BE03713DBC3FC0188211F60D0C40114477FBEBA9A0FB95A849F3FDF3AE3GC96F13956F7983B77B9B856F390F5C52B928DC1F527B5EF36669553F81182FD77FC6E529FE745F062C507B7EEDC82CDE795B906A8BF62978078FC678879AA319BE43F6454E75E46B21F83DABCB46732D07475327E4DD7E27627DAF27EE3DDE9BEE699CD4CEA5D55E32BBD625149D7D56A5AC174A48EA412B077C12D222536F04AC17FFD23C6F
	BAF16BE574657F439C0995B2CF1ACA797D4E0ADBBF7734DBBA87DDD37A825FEB7B1302316349628275F872C801F7BC79D501FABCD9D9200CA7299D3EF014677D8F025F253947BF9D6539C7D14597FB5E59F95E5584C01F4F356CCE101C07769E63676EC0282367691987E49D6FBB265C8FA221CD344A3C5E6B6A48B16FF57555B1653A227FFF4662FDDFC2E166FA14AA220F641F019472DB59C2079DDCA47C358AC54EC3A27AD05146E435AA2A1DA252959696B6FC8BFFC414C63326CE875AA1A5526BC8549B5DF7
	34BCF97534E4ADCA29C3E9D4EBF5A8850B3E8E25924D5421E4501A8B7F7A99C74F856C19627C89DD27EFBE31A92A58ED63E8BB861665598F8DABF37E0937A7E9FCFDF331AC056AEB9DFB4A5F0837901BABCACD505526727861217D07116F3CD7D3B748DCB4D92FD55B4CB887F65AAD8A723E75E3819E5F495B30CA76CD95317B2B0ABE7F87D0CB87886C5156428397GG1CC5GGD0CB818294G94G88G88GFAF262AC6C5156428397GG1CC5GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4
	E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGBD97GGGG
**end of data**/
}
/**
 * Return the JCancelButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJCancelButton() {
	if (ivjJCancelButton == null) {
		try {
			ivjJCancelButton = new javax.swing.JButton();
			ivjJCancelButton.setName("JCancelButton");
			ivjJCancelButton.setText("Cancel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCancelButton;
}
/**
 * Return the JCheckBoxAll property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxAll() {
	if (ivjJCheckBoxAll == null) {
		try {
			ivjJCheckBoxAll = new javax.swing.JCheckBox();
			ivjJCheckBoxAll.setName("JCheckBoxAll");
			ivjJCheckBoxAll.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJCheckBoxAll.setText("Regenerate all route roles");
			ivjJCheckBoxAll.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			ivjJCheckBoxAll.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxAll;
}
/**
 * Return the JCheckBoxSelected property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxSelected() {
	if (ivjJCheckBoxSelected == null) {
		try {
			ivjJCheckBoxSelected = new javax.swing.JCheckBox();
			ivjJCheckBoxSelected.setName("JCheckBoxSelected");
			ivjJCheckBoxSelected.setSelected(true);
			ivjJCheckBoxSelected.setAlignmentX(java.awt.Component.LEFT_ALIGNMENT);
			ivjJCheckBoxSelected.setText("Regenerate selected route role(s)");
			ivjJCheckBoxSelected.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxSelected;
}
/**
 * Return the JDialogContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJDialogContentPane() {
	if (ivjJDialogContentPane == null) {
		try {
			ivjJDialogContentPane = new javax.swing.JPanel();
			ivjJDialogContentPane.setName("JDialogContentPane");
			ivjJDialogContentPane.setBorder(new javax.swing.border.EtchedBorder());
			ivjJDialogContentPane.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
			constraintsJPanel1.gridx = 0; constraintsJPanel1.gridy = 2;
			constraintsJPanel1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJPanel1.weightx = 1.0;
			constraintsJPanel1.weighty = 1.0;
			constraintsJPanel1.insets = new java.awt.Insets(4, 4, 4, 4);
			getJDialogContentPane().add(getJPanel1(), constraintsJPanel1);

			java.awt.GridBagConstraints constraintsJPanel2 = new java.awt.GridBagConstraints();
			constraintsJPanel2.gridx = 0; constraintsJPanel2.gridy = 0;
			constraintsJPanel2.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJPanel2.weightx = 1.0;
			constraintsJPanel2.weighty = 1.0;
			constraintsJPanel2.insets = new java.awt.Insets(4, 4, 4, 4);
			getJDialogContentPane().add(getJPanel2(), constraintsJPanel2);

			java.awt.GridBagConstraints constraintsJSeparator1 = new java.awt.GridBagConstraints();
			constraintsJSeparator1.gridx = 0; constraintsJSeparator1.gridy = 1;
			constraintsJSeparator1.ipadx = 275;
			constraintsJSeparator1.ipady = 2;
			constraintsJSeparator1.insets = new java.awt.Insets(4, 4, 4, 4);
			getJDialogContentPane().add(getJSeparator1(), constraintsJSeparator1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJDialogContentPane;
}
/**
 * Return the JOKButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJOKButton() {
	if (ivjJOKButton == null) {
		try {
			ivjJOKButton = new javax.swing.JButton();
			ivjJOKButton.setName("JOKButton");
			ivjJOKButton.setText("   OK   ");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJOKButton;
}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJOKButton = new java.awt.GridBagConstraints();
			constraintsJOKButton.gridx = 0; constraintsJOKButton.gridy = 0;
			constraintsJOKButton.insets = new java.awt.Insets(4, 4, 4, 4);
			getJPanel1().add(getJOKButton(), constraintsJOKButton);

			java.awt.GridBagConstraints constraintsJCancelButton = new java.awt.GridBagConstraints();
			constraintsJCancelButton.gridx = 1; constraintsJCancelButton.gridy = 0;
			constraintsJCancelButton.insets = new java.awt.Insets(4, 10, 4, 4);
			getJPanel1().add(getJCancelButton(), constraintsJCancelButton);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
/**
 * Return the JPanel2 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel2() {
	if (ivjJPanel2 == null) {
		try {
			ivjJPanel2 = new javax.swing.JPanel();
			ivjJPanel2.setName("JPanel2");
			ivjJPanel2.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJCheckBoxSelected = new java.awt.GridBagConstraints();
			constraintsJCheckBoxSelected.gridx = 0; constraintsJCheckBoxSelected.gridy = 0;
			constraintsJCheckBoxSelected.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJCheckBoxSelected.weightx = 1.0;
			constraintsJCheckBoxSelected.insets = new java.awt.Insets(4, 30, 4, 4);
			getJPanel2().add(getJCheckBoxSelected(), constraintsJCheckBoxSelected);

			java.awt.GridBagConstraints constraintsJCheckBoxAll = new java.awt.GridBagConstraints();
			constraintsJCheckBoxAll.gridx = 0; constraintsJCheckBoxAll.gridy = 1;
			constraintsJCheckBoxAll.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJCheckBoxAll.weightx = 1.0;
			constraintsJCheckBoxAll.insets = new java.awt.Insets(4, 30, 4, 4);
			getJPanel2().add(getJCheckBoxAll(), constraintsJCheckBoxAll);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel2;
}
/**
 * Return the JSeparator1 property value.
 * @return javax.swing.JSeparator
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JSeparator getJSeparator1() {
	if (ivjJSeparator1 == null) {
		try {
			ivjJSeparator1 = new javax.swing.JSeparator();
			ivjJSeparator1.setName("JSeparator1");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJSeparator1;
}
/**
 * Insert the method's description here.
 * Creation date: (6/4/2002 4:51:27 PM)
 * @return boolean
 */
public boolean getRegenerateAll() {
	return regenerateAll;
}
/**
 * Insert the method's description here.
 * Creation date: (6/4/2002 4:44:30 PM)
 * @return int
 */
public int getResponse() {
	return response;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getJCheckBoxSelected().addActionListener(ivjEventHandler);
	getJCheckBoxAll().addActionListener(ivjEventHandler);
	getJOKButton().addActionListener(ivjEventHandler);
	getJCancelButton().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		
		// user code end
		setName("RegenerateDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(286, 180);
		setContentPane(getJDialogContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize(java.util.Vector carrierRoutes) {
	try {
		// user code begin {1}
		
		// user code end
		setName("RegenerateDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(286, 180);
		setContentPane(getJDialogContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	int resets = RegenerateRoute.numCarrierRoutesReset(carrierRoutes);
	getJCheckBoxSelected().setText("Regenerate " + resets+ " selected route role(s)");
	// user code end
}
/**
 * Comment
 */
public void jCancelButton_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	response = PRESSED_CANCEL;
	dispose();

	return;
}
/**
 * Comment
 */
public void jCheckBoxAll_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	if (getJCheckBoxAll().isSelected())
	{
		regenerateAll = true;
		getJCheckBoxSelected().setSelected(false);
	}
	else
		getJCheckBoxAll().setSelected(true);
	return;
	
	
	
	
}
/**
 * Comment
 */
public void jCheckBoxSelected_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	if (getJCheckBoxSelected().isSelected()) 
	{
		regenerateAll = false;
		getJCheckBoxAll().setSelected(false);
	}
	else getJCheckBoxSelected().setSelected(true);
	return;
	

}
/**
 * Comment
 */
public void jOKButton_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	response = PRESSED_OK;
	dispose();
	return;
	
	
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		RegenerateDialog aRegenerateDialog;
		aRegenerateDialog = new RegenerateDialog();
		aRegenerateDialog.setModal(true);
		aRegenerateDialog.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		aRegenerateDialog.show();
		java.awt.Insets insets = aRegenerateDialog.getInsets();
		aRegenerateDialog.setSize(aRegenerateDialog.getWidth() + insets.left + insets.right, aRegenerateDialog.getHeight() + insets.top + insets.bottom);
		aRegenerateDialog.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JDialog");
		exception.printStackTrace(System.out);
	}
}
}
