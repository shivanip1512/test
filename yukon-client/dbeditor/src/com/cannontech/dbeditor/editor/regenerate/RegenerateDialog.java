package com.cannontech.dbeditor.editor.regenerate;

/**
 * Insert the type's description here.
 * Creation date: (5/31/2002 11:18:41 AM)
 * @author: 
 */
public class RegenerateDialog extends javax.swing.JDialog implements java.awt.event.ActionListener {
	public static final int PRESSED_CANCEL = 1;
	public static final int PRESSED_OK = 0;
	private javax.swing.JButton ivjJCancelButton = null;
	private javax.swing.JPanel ivjJDialogContentPane = null;
	private javax.swing.JButton ivjJOKButton = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private javax.swing.JCheckBox ivjJCheckBoxAll = null;
	private javax.swing.JCheckBox ivjJCheckBoxSelected = null;
	private boolean regenerateAll = false;
	private int response = PRESSED_CANCEL;

class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == RegenerateDialog.this.getJCheckBoxSelected()) 
				connEtoC1(e);
			if (e.getSource() == RegenerateDialog.this.getJCheckBoxAll()) 
				connEtoC2(e);
			if (e.getSource() == RegenerateDialog.this.getJOKButton()) 
				connEtoC3(e);
			if (e.getSource() == RegenerateDialog.this.getJCancelButton()) 
				connEtoC4(e);
		};
	};
/**
 * RegenerateDialog constructor comment.
 */
public RegenerateDialog() {
	super();
	initialize();
}
/**
 * RegenerateDialog constructor comment.
 */
public RegenerateDialog(java.awt.Frame owner, String title, boolean modal, java.util.Vector carrierRoutes) {
	super(owner,title,modal);
	initialize(carrierRoutes);
}
/**
 * Insert the method's description here.
 * Creation date: (5/31/2002 11:20:54 AM)
 */
public void actionPerformed(java.awt.event.ActionEvent event) {}
/**
 * connEtoC1:  (JCheckBoxSelected.action.actionPerformed(java.awt.event.ActionEvent) --> RegenerateDialog.jCheckBoxSelected_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jCheckBoxSelected_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (JCheckBoxAll.action.actionPerformed(java.awt.event.ActionEvent) --> RegenerateDialog.jCheckBoxAll_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jCheckBoxAll_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (JOKButton.action.actionPerformed(java.awt.event.ActionEvent) --> RegenerateDialog.jOKButton_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jOKButton_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (JCancelButton.action.actionPerformed(java.awt.event.ActionEvent) --> RegenerateDialog.jCancelButton_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jCancelButton_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GB5DF58ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135BB8DD4D46715A61B64109E0F21ADC9E95624EE13EE6D0653B58D1BF5FB3227B450DDEDEC1BB41820A1899A22C691312222D273988602718F841420A2DA53EAC598C2E8A8C58541D4E47891C6C463869F4C93C6E766CDE79E0246BD59FB3F1FB7EF0677A0D017F32EEF3EFB3F6FFE773B5F7D6E3D5FFDCF2160400C2C8CD301A0E4E4896C6F138CC118DAA5882DCDDBD7F0DC4E0B51E6C173F790A0CF18
	130548A220BDE70AB1678A9F8F67C03B8C5AB6E86F015F79421F0777FD84BF8C66C92D9404366A3A07461E27A6174F739EE9371F58864F9DG961C8BE086C02EB0F0220861C7203D037DC648B089026DA56CF37C33A28DBE1175BB8234BA007ADFE31FFBCF6CE37469000B84C847313FE6FD613905C8F7FFED8D6BF7656BE1C26A4F371A3663DC9A7E9CC258588876AC953EC99411A9AC6A7E841EF59DB786CE764B2E72FE516D165D0A54BFD8AE599D0A6CAD77CA8312DB720A0AD4DB5B297EEEF208CEF9C05877
	B24A7B4167B904972C87784FA4382FFF0EBA3A8A3FC7GC2DF66B23F343D0E4994F6A3CCC8F8E2F306114CC9AFD3D9F3E37DB24F883DB7B3AA9679BFC576G47F5C0BB84002E6719BF7E59E0BD763E2F32A2012DE94D893EA673FC3E26973AF14EBAE85BG1CAA7E9B9791FF9F342783C44E67EBBD71873E561EAF1E90527A4ACDBB8D56BAEFBEDDE36AFC7FDAEB96BDE87A0058DBCC9E5A0C65951897E090E0AAC08440BC003D444E3F4C7DA3BC9B7A14C65965125D8D9E4FE9275D5BAA5BA5A77C2E2D858A43F5
	CA7D3257AE885416CBBEAF5311C7354FD7826D98012E6D2240EDAF2273D1C1D18E1B32F45696B9FF3BA90D7158762AFFEDE7DFC53DE575225E4A60F78663CB713B88FE2A86CF777CDB442630BD93E85B62381EFBF6F0D92C66E9C2EE2545741E0EAC614FFFE87244D199C2627C32D09DBF1E0FBA0E847C0BG4BG04855166D2007A85DC47F3F32B4653F1B3581A57ADBA3B067ABC22D7B9BD64F05AA5AF537553A74652359E50F1BF1970B82A1719D55ABD0AFF26C2D7AF71B38BCCD796D0FDA88B7CFA21F32799
	4E9D36E034ED6CD0777094B993B39750BD4CD4714D84BFDB0327FB7B92B9DB581E8334320551E65ABF3B8771218B03EDA41F60A396865BC878C5EEA3F300D676DA34196EEFDDA17A54D0E8C7G44G448324839445C33FF83E4785F995DF719CF5E876170E7DC55EEEF8CAA30AD7ECF67B94515DAFF50BDE07586714FC826B73CA9E6A35AFE05CEB64FC77439CFF254E48A13B013B68124018FC34CFE2DE9E7671CA04EAF338A418406591B85F243CFCF8BAC51FF241E387F7666FC16929F928131BE2B7F0848670
	7BCEBC6A2B1A78EEAB7C9E0C673AD2F6A3AE8A5AF12ADE64DD3B60598246ADB9EBEB1B9C7DA806683D45EDF4EBEFAEBC1320FF786B51661AB7224D31EF7073195C436D30E97B37053279653AF6C862661B5426C25F8C3643A242FFB66063G52G0A92F8BCFE6C739EB69E678F6609F210734F641A48B9721F41E755B9B28D4E9BBE33D87F094EC1753EF88F5AEE8D2C4B8620A4F05D7F4B2ED2EA1327C51F442D305D8B86A4597DBBC17BFEBF9FE30CF4D3F2ABCD12C7F25B61070F59408F7337786D731A2C5ACE
	A441233FEA84837229789F6767D1BC7050DABB27BFCF682222F89DFDC30A54A5A90A43BD609F7FF3A20BAF40957A58DA930B080F07B5BE8990292E352BA0DFE3E7D6D93EB164316189E2763A73A45A669C681F206E7F190B181F1997297999E97B692FF6733D5382761F68BE995BC70A6E9CFA36B279B93675609960FE135B9A25FDC0E825302633G9E00F0D59F0FDF6C5199F7B764724B766FE48EAD7FADF7F18EEA9B1F969A5BF6EB213EEDF7956A5B76254231EDD7AC5433DDCA9BAC44B54A43EE4DD9F09522
	FF6C175DEE099CC8F508C07352E49B2E4361F6A8979D7681C969F25C1684E159A234E9AB7141D170BBF6917719433F63BE73706D0705285EAD3A79D578770E184A96D3BB2EDF6C7719D426DB3B710CC9CE49850AEA14075C8A4B9509FFE7F8DFA6417D53270F6358A3679A87257E9B276511AE2077AB123DCCA46BA9270F8E49FBCD763AA47B116B62CD31DC9CD64A49FE14B79072997CFD3474787113254119F55975E04E3D8DC1AC2D46BC7FF2347B28055AD7BEE8BCACD0568627736E0B89CCA7AAE1A5156F9B
	A727D1795ADBCE8FA90A6C3EFB42F10E93156CA32E3B93A50FB05DE1FA623C5B72E939CED446AA9E877794133BA3583382B0F5B10F8D1BF6A31D478696G9BE527139EB920195FA2672937C0F3C61EDCCC6F68A9702474DF6852F72863B70CC37F702A911D4A39EC8F7AE21F7437A1893401412BC53A457238D5FBF685513AC56710BFBFDC3FE7ABBC1D1A38C7714B0B744FF2CA91463A9BAA7F5422EC8173BC4A137A1ED9A27274F89DAEC893B01033DA446FCFEAEB91D6D89B56AD94F8063C456F53A559381660
	0D36A76278569EDE2718817DE78344B19EC509D49F34DF5EA55EEF963467A47A7BAD8B6877B3351F65ED08E3EF7B7B8D3E2D6DF76BB26F97817898CD3FC4562FEC89766BD76B9295AA6EB6412D02GB5574C6FC92D395ABA0A5DF7D05757A2F816D07E77AD893EBFDA77A25FA7819F39045B2B7B83EDAE536073497D8E123E33BD5DDF2C754394F72878FDF8DEF3F8FDF01734CBA35CAE0E94232C185FB3B45B5B270E1D90C65FD74E10CA87CF959B07499933490DF045B88B2655280629EE07B4AC701A47BF74F2
	FD4DD94263507FFE2A2D57BC37F337E92B01EE0425CCA7CB7D3AD196BDE822F2F67E8D75C46AB26885C64AFD4390EFEBEB4F8555DDC2C9FE07E32EAE65751530FA347DF0E84F821883C06FFAB7499D907BA6G2EE899BF5F3D6D5A73598178910069G54873E5E03A541097BBC2E73AF1C75707CFB6399556FF7736B191C73FEB8CD287BF2FD06DE0DA8E4E706E956B22A5738E5FE7DF6EC791A498EC075D1FB096B6370BB5166AB6FF0FDBCEF5553C758BB7C0CDF3D7E976DFAA69E78585DBBD91DFFA670CED067
	5F50291D3FE8B91D3FFEB91FFF65D6BCFF130DEDF46E6FDE66F35B006F5465FC6EC41B5E5CB16A5CAF57571135CFBEEE31FA58C7DA9F9215D0E868C36216537DCBDA9E6CC3AC7B5176F3D6C41B772D60BE640962BC0D8F6984C3935D83909538DFB83F97ED9A7CBFEBDF580B73927FAF705CBC24F7A275A34B8ADE87F015206E1A20FD95E084A094E016AADB7C5EF16BE1E7C6462807BDFC9265FAF1057EBDACD187CFEBBFB98D3857E9AB02EBCB3B88BEA7A9383674E8BD2FAD95816DCE923F975D698956CBC2D2
	601C69C1EDBA6EEB2346158435CBD7860E2336F6329B752663837949E3F13939C19B17EBD6523B6E95F8FAG281FFC24BD07499332126FD774810C0BD1500E87C88548CD0EB6FF8C508120A473FDBB36CFAFE6846E1BD1407057G28AE6AAFCDCE07ED2346856BB0ACB9F09CDD7786AB2E9B4FDCC4B25F4754C94AE03ABC1E8C0949FA7B38334BA016D17F214AEA696231ACDD15F56628B93F1A2C4F0EAB6B472B747435778217413A0A5BC966C1445D876D30D55CA6C27661FB986EE7BAE407DB91380F295E0FB9
	256CF58CB85C9CD7CBF07D3217DC02E9ED66BBA4FFF892F8C629FC07CA0C6F6CF7CA746F6C7716685F59C3CA462EC70516985D6929FC91A43708855952GA8AE7394623625C41B8F2770BD5A5100B975D935DDC45A98B7E8FBC63DDE2D676F811CABF03F7F632E4F212DC56DA76D393BF792FD7AFC120F9C78A6D19199ED29D2A86854B35AC417A4703B64B3BDDBD81FB30A5CD8291E0FB5C70B744FC7078856C56D721E86EE1703A9BC4FFB4F0AFEFA8634E7833C286A7F9F5B51761725841D93564EDDBDBACE30
	FA7C81E35B0BBD20EFFB8B8F60B97049C35EFEA9583E969DA8D2E9FE0F582CC8AED48B3B2711710A689D10C65967EAB21E520C46EFBCE0E443D467431734BA7FC835174DD6545161A0DD54303615BD2FEA68145F314BDAFED5AA3F6AAE3D1CC1E163C3F4F4CE793D99406FE315DF6985BDFE53991FD906FB18F390E379085A5EC65A37D4DB139AF628BABD6336B347C56FFA4F92FF34BF135E7F28FC51A7512E6D52B5F148896EC576C96D9E764A85EDEAB50EFBC33D03442C66F9625343F86F396695DD309DDD9E
	29DF087D8D76ADBE45E3F5BD34EDG8AC098C064EF78FD43FB896F7C6C2653082F2351FF39A52E1B879A02F533EF0DDF9F16B5C6F95097643CB42D89FEB796C270D757843F9B5BEE656F466EGADE18D7701BFA239C4D3EA3439A71563447308F3E2DB457D57F96EABC3D4DCE1AB62A2209D2562FA89AE965A09AAAE26150FCDD1F1EF37A12EE0ED34593216632CA4E656C15B2A621E6E62E3FBD45CA797F83FBBAAAE7C02AA5FDA2E7B35A447543821720B8E37DD9E06ED40B7F40A2F3C29392B233D6BCCEFFBDB
	EF2395FE50FCFE4630B61F2FF9FF2FE1BE9F31166ECF94FB1A2F963358DBCFE28B0EC943B52EC35C3CD35A7B884A68008E65384F043EB9000E3EG2E1D9A3A25DECBC7D9CF1834743EGFA16E6BCDD578B9F727BFC7A8B5385673F6DB77CE6E4E49DDD4FF4768CAFAF96E6BEFB01697AB1623FE30136EC9D577F7C962E7FED6B396F3E470A75A38B344F828C82CCD1E953888D6BC1D8BBBA4BEAB91416EF6DE16334B2CDD92FF396F4F09C868DE8F40EB2ABFFE72125693D3748B2604FF999455BFCE1AEB9DBBED6
	A2207EA5211D57D9262F67F6BAF29EF38C8582D244FA7C866901A338DB54473CFE1E7B1894201953A0D781E88230277171E52D2367E9EC6576F71F5A6FE6EB60BCBFB86A1F6735D6BECFB8740FG1887108430ED839F1F5E0676C20BA6F8FD905DF6BC830457EA7C84052D3B3FABF01E02B27FBCF33A78BCE540379E60AA40940099G34FF53F1FF7FFF3D407BC781BD96A09520E0A35CEDB6721CF675F1DC2B8D5A1E0DBC77FC6860B1F8F60B57C7D745G5961154173AB37A816D4E119DDBCF1EAF25FDB7C74BD
	FE36A2FF7C08B07B0157B30CEAE5219BD95CE3CF4B71E20227EB792C82571BG34F40052CD51669AGAB00FD93DF5BAB87D1C63C2901788D0AA2768F12AAA23F40E1E14F0F4600C577A5328173F627F8CB9E02B8193289757B4BE6753BB5E8078244G44ED2235121AF46C1354D2B4467AA96F4B1598DF34EFE5A8FEEAD61E964F6BE56A38D9AE541F7A36C4457FA779B6AC60CD05CA7B9FFADE3CC392557D2FBE537A6B5CC733CC99863A1F12CEF5BEB55DDFFF217EBA33131F1728F46E2FABBB037DB59A265F5F
	76F7867B6BC07A431D417E7A2DGFF7F5F1D417E7A929B4FF45A0A38EB225307F9B715B323CD0DAB2A1C95EDE34BA936854BB99CC07FE65B58F27E2C4DC8CEAAD3F297174972DBAE53BEDB30CCD581F3365902E51A9BC01FE28B166929G7A0FEC41B2DD8C10E97E85AE5320AAD3E67758B2D5F70FAD53C07758B2FD3BBBD826BFB0BD52F33B6EB862557C1E3A9DC67B6DF19C0B6F08A1D3F45CA6C9E997F4F48FD03F3044027499301667G92GD281F2B6F31FF0CF79A10178849DFFF046BEA0711C074FE72FB0
	3E9F5D28987FDBA625825FD57449F0B0DD481F63EFD7209FD5E48FC132F74E9528AB2FE3E0D021DD997E7E8A12E7CA57881A66296B1A79371D07E1EDD7B6739CFC60500702665BCEC71F2BFC68262BDC6CD348472A3535EDC3CE271539B6E683A74FF19B885B4C6F1907DA107FBCE8A78224EF666FBAC6FE4F7DF744BFCF932CD3AAF4F323845BEED3413B54F7543C6B77A10797BDE822FC2E5F60FC76BD7590219965D88A9B9F2E61630F8361F83DE3FAAA34605AF5E3996C6EB948EF5B7B2E03DB350978AE0546
	311C4E49FDEF185DB639F1EBF46F0C630FDB28FBB79C8B28CE12AD46763B56B23E7DEE361077EFE0F736DB9EF67F4E2CA4352EEB57FC12FACEF2AAF3D5DC332FC376B970E4D259531BA73766774FCDEE5C06890F23F742C7084D473DCB6F0499AA7EBB841F284153B3F824051F41942059049816E74D2E42BCE0B634E38112G4C99B16643G75GD4DF0FD5DA04F16A4BB659E3050DF3EA4AF8147F2EEA64EF83DE9E00B0008800A800B8157F524AAA2333G48CED9A637EB3CE80B8E3764A5EE4FABE2E1006AF0
	FA0B206A73FB1A5F65ADF73B66B6FA7F7E7A7FBA87554FCF2B0C4F451CAA7D3A57AF2B74EB2E31D5E3FFA795DFE57C1D54DBD5233F135ADBEDAC5B216A714F6C31EA7D18D3D9BDBA667C29DABF6654D5EBE38E7DFFA29E73E7700CD8A9E4A9C2317FF307D2FE23AA75C2D411FC046866C4516924F878570944ED5A64D791CC6DAD0A10CD73D7F6C7B87A25B6CFCD3BBFBD43282EA0E4461018D0401E7E7704BF49C679BBG6F4C64E7E2E776F123B381472D4B8522AA2273C6035B0E316274ADC5726FE1CCB67277
	71BE0CC8E9AFE4235C57B5E37E8FD0CB878858C2A5335C91GG34B3GGD0CB818294G94G88G88GB5DF58AC58C2A5335C91GG34B3GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG9692GGGG
**end of data**/
}
/**
 * Return the JCancelButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJCancelButton() {
	if (ivjJCancelButton == null) {
		try {
			ivjJCancelButton = new javax.swing.JButton();
			ivjJCancelButton.setName("JCancelButton");
			ivjJCancelButton.setText("Cancel");
			ivjJCancelButton.setBounds(147, 100, 85, 25);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCancelButton;
}
/**
 * Return the JCheckBoxAll property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxAll() {
	if (ivjJCheckBoxAll == null) {
		try {
			ivjJCheckBoxAll = new javax.swing.JCheckBox();
			ivjJCheckBoxAll.setName("JCheckBoxAll");
			ivjJCheckBoxAll.setSelected(false);
			ivjJCheckBoxAll.setText("Renenerate all route roles");
			ivjJCheckBoxAll.setBounds(44, 59, 241, 22);
			ivjJCheckBoxAll.setActionCommand("JCheckBoxAll");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxAll;
}
/**
 * Return the JCheckBoxSelected property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getJCheckBoxSelected() {
	if (ivjJCheckBoxSelected == null) {
		try {
			ivjJCheckBoxSelected = new javax.swing.JCheckBox();
			ivjJCheckBoxSelected.setName("JCheckBoxSelected");
			ivjJCheckBoxSelected.setSelected(true);
			ivjJCheckBoxSelected.setText("Regenerate selected routes");
			ivjJCheckBoxSelected.setBounds(44, 22, 241, 22);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCheckBoxSelected;
}
/**
 * Return the JDialogContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJDialogContentPane() {
	if (ivjJDialogContentPane == null) {
		try {
			ivjJDialogContentPane = new javax.swing.JPanel();
			ivjJDialogContentPane.setName("JDialogContentPane");
			ivjJDialogContentPane.setLayout(null);
			getJDialogContentPane().add(getJCheckBoxAll(), getJCheckBoxAll().getName());
			getJDialogContentPane().add(getJCheckBoxSelected(), getJCheckBoxSelected().getName());
			getJDialogContentPane().add(getJOKButton(), getJOKButton().getName());
			getJDialogContentPane().add(getJCancelButton(), getJCancelButton().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJDialogContentPane;
}
/**
 * Return the JOKButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJOKButton() {
	if (ivjJOKButton == null) {
		try {
			ivjJOKButton = new javax.swing.JButton();
			ivjJOKButton.setName("JOKButton");
			ivjJOKButton.setText("OK");
			ivjJOKButton.setBounds(43, 100, 85, 25);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJOKButton;
}
/**
 * Insert the method's description here.
 * Creation date: (6/4/2002 4:51:27 PM)
 * @return boolean
 */
public boolean getRegenerateAll() {
	return regenerateAll;
}
/**
 * Insert the method's description here.
 * Creation date: (6/4/2002 4:44:30 PM)
 * @return int
 */
public int getResponse() {
	return response;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getJCheckBoxSelected().addActionListener(ivjEventHandler);
	getJCheckBoxAll().addActionListener(ivjEventHandler);
	getJOKButton().addActionListener(ivjEventHandler);
	getJCancelButton().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		
		// user code end
		setName("RegenerateDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(286, 180);
		setContentPane(getJDialogContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize(java.util.Vector carrierRoutes) {
	try {
		// user code begin {1}
		
		// user code end
		setName("RegenerateDialog");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(286, 180);
		setContentPane(getJDialogContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	int resets = RegenerateRoute.numCarrierRoutesReset(carrierRoutes);
	getJCheckBoxSelected().setText("Regenerate " + resets+ " selected route role(s)");
	// user code end
}
/**
 * Comment
 */
public void jCancelButton_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	response = PRESSED_CANCEL;
	dispose();

	return;
}
/**
 * Comment
 */
public void jCheckBoxAll_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	if (getJCheckBoxAll().isSelected())
	{
		regenerateAll = true;
		getJCheckBoxSelected().setSelected(false);
	}
	else
		getJCheckBoxAll().setSelected(true);
	return;
	
	
	
	
}
/**
 * Comment
 */
public void jCheckBoxSelected_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	if (getJCheckBoxSelected().isSelected()) 
	{
		regenerateAll = false;
		getJCheckBoxAll().setSelected(false);
	}
	else getJCheckBoxSelected().setSelected(true);
	return;
	

}
/**
 * Comment
 */
public void jOKButton_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	response = PRESSED_OK;
	dispose();
	return;
	
	
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		RegenerateDialog aRegenerateDialog;
		aRegenerateDialog = new RegenerateDialog();
		aRegenerateDialog.setModal(true);
		aRegenerateDialog.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		aRegenerateDialog.show();
		java.awt.Insets insets = aRegenerateDialog.getInsets();
		aRegenerateDialog.setSize(aRegenerateDialog.getWidth() + insets.left + insets.right, aRegenerateDialog.getHeight() + insets.top + insets.bottom);
		aRegenerateDialog.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JDialog");
		exception.printStackTrace(System.out);
	}
}
}
