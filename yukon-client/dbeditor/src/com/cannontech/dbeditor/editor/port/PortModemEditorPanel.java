package com.cannontech.dbeditor.editor.port;

/**
 * This type was created in VisualAge.
 */

import com.cannontech.common.util.CtiUtilities;
import com.cannontech.database.data.pao.PAOGroups;
import com.cannontech.database.data.port.LocalDialupPort;
import com.cannontech.database.data.port.DirectPort;
import com.cannontech.database.data.port.LocalSharedPort;
import com.cannontech.database.data.port.TerminalServerDialupPort;
import com.cannontech.database.db.port.PortDialupModem;
 
public class PortModemEditorPanel extends com.cannontech.common.gui.util.DataInputPanel implements java.awt.event.ActionListener, javax.swing.event.CaretListener {
	private javax.swing.JLabel ivjInitializationStringLabel = null;
	private javax.swing.JTextField ivjInitializationStringTextField = null;
	private javax.swing.JComboBox ivjModemTypeComboBox = null;
	private javax.swing.JLabel ivjModemTypeLabel = null;
	private javax.swing.JLabel ivjPrefixNumberLabel = null;
	private javax.swing.JTextField ivjPrefixNumberTextField = null;
	private javax.swing.JLabel ivjSuffixNumberLabel = null;
	private javax.swing.JTextField ivjSuffixNumberTextField = null;
	private javax.swing.JPanel ivjDialingPropertiesPanel = null;
/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public PortModemEditorPanel() {
	super();
	initialize();
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getModemTypeComboBox()) 
		connEtoC1(e);
	// user code begin {2}
	// user code end
}
/**
 * Method to handle events for the CaretListener interface.
 * @param e javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void caretUpdate(javax.swing.event.CaretEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getInitializationStringTextField()) 
		connEtoC2(e);
	if (e.getSource() == getPrefixNumberTextField()) 
		connEtoC3(e);
	if (e.getSource() == getSuffixNumberTextField()) 
		connEtoC4(e);
	// user code begin {2}
	// user code end
}
/**
 * connEtoC1:  (ModemTypeComboBox.action.actionPerformed(java.awt.event.ActionEvent) --> PortModemEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (InitializationStringTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> PortModemEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (PrefixNumberTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> PortModemEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (SuffixNumberTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> PortModemEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GF9EA6DA8GGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155FD8FDCD447353FE97C25347A6B23F9A6210DEDED6AEB6CABFD310D3FD77A8BEDE8FF36B1AF6605FC42EBECE39252184677E2D2DEE3DECDC2134B9FF5C5D4D484640F2E080A0A883A8A82AA6AE25020222E0A9104E5778A2B4B6E3AFB5145203EB3B3774C3DFB776E32107AFE091F4FF8F73EB3E74E1919B3E7E64E5CBB8839EBA74CCFCB4F95043479027C2FA6CD90A60D9504FFF8794898442296198C
	026A5FBA884B057656CCF846C0DA5BFDA6C30EF02814E40A05387DEE13A19FFE2F940AB7458E400F90FCC6C35A2B0D2FBD961E4F2FB81F05B47E18A39B1ECBA1CC86AC8902B10B70FF4ED1A06373GDBAA7FA6A1ADDD9092E91EEFDCACD06176AC16EFA2BC63C8D8CC723C65A816538BA0DE85C102903518651DG4FC5D43A2BA7EA65FC71067B0451BB7E10360470D2150FC148E634E57253A8FC15B6C40610D2ED02E7C36B151EFDB6F7DF25CDF2D45A3BABFD22546F296C69F7D4FA5CDE292E2E957EBF66360B
	FDCDF607647636DADD22F3DCB61175710B86DA0EA034C35C3804E0B51D24FDE6C0BC8502E1894A7B563186D91E2EB79F929ADFFAA3243C76A5CC4E28A50A3C16CF0FE754AEA56567DF4E166926C13AG982B4B5C6ADD81F5313ADCEE17A45AFAABC5AAF6184AG9D2BCF67E52C4F60D22CCF79A7045F9408CF07B00B63FF22F8AA44F317198C954B301EFF580F75F476FEDF482CCAC9DB96221E66E52CFE4EE5CABD67AD5E3CF8B555336327082ECC0234699012A1E466188CE5904C900A28FEAFBA39851E873A25
	C36E3EBE376B0047F350E977126AB961F7DD9D244858A95166765A85016970540B95BA72E0E84F8954DF92D85D4E8928F3B1698F8AB1EB5F27FA242D1B7DD2E21AC7AEE3F40ED23769B9245D9E237AB191FE93BA52B68CFF0A62B94B951C7577DE0A53B824CDD90E6DBC2E9CE5493E776BC2FC4F8BE98BF5E471BC7117342A95CC0666950AAC2C0D4BAD240DA54023A1CC0210GA1990230925B7874491DC335719150B32F4B6ABC5D5F6D31FA25037D8E27DD744AEDDDF2B9DCDB6B85C637F558F42CDDA66DD477
	D141E3AF6B36CBF47C9BE945ABD9FB18D6AA6D42F85BC372362C8C560D253C8F4753B1513B1275E186473FCFF13F8AE7FDDBC9F1920F0234B990D8FE5B85023766327C0BF8B99E0ABBD5B8AB679DDA8E09C7C15A9C882CFFFFF306585256D5A6039342E88863A144C31881E14EAA6C63EF1F5C9E61B8EAD575AF23BDF7AA8F1E22DF72DA0F38FC1255E5934FDA3D8EEB37D37489F21E2ED324DD3B8368C4BA3EED4063A351A5FA2D12436D02522DFDA2A8130F65F11DDACE72F8C51AEAF1740940204FA3E03957CE
	2DA46DE175C9E7BCF62BA4AAB9D87A2DD324CD2ED94FC209D0G7CEE48A36D7582355B59703BBC8F5B6A6D33849B857118BCEC17F7CF2D006747205C22332E4E6C3091B12C5E815451DFF612760D057C9579A6C3AC043282E8E388652BA13E1A5B7EB65449F92FBDA84C7E67193ABAC9C2D521BCD68B35BA79AC656581BC9A42E4880990D2A0649441BCD904737321CE0F26CCA2877E2E10E5DCAA4BCD1EA86FF046DAC07979483BBB0877B2556F79320EAE15F51EBC97C3D8B2C23EE8ABD87FD95B681801F6F0C2
	98DB04FDE8BAEDE43AFD506A93D11BCFF8C191C53B5223ACEF350548ABDE93DD12D97408AEBB7C70493AD4EBD9246879A5B75741FD94A7F66F90A8220F63E64BF206C3996AD10369ADB45DAAC9DEC7F73FA41E96A549616AD168ADD496DF00C97549F5351D27F38854B19E42F4DE5797ADABD57A5A62F6DF6977D848C814757ED3BA3FA7C37EF9DCDF9E7A042C6F0A0BB19ECB63CA3A691336887B0214B1127EDBAE9C0B18C746B04BD7F8B8AE6488EC4CE5483A381027DD23E98DA03F9D42D888D3F8FB3CCFE553
	520DD4DF75E54B3D5026A9FF515F1087530D44B321F57B79B37A3A7D6299FD5DFE75CCF85DFD630C1E6E3234BF1FA1F5F4DFF7294642DF4E90BBEBF33BDCA29D101CC4E0EB5B37AC249E8E17C3BA6730770852E9478DD190B2CB08CE7F195A721950DFA945E8EF2F2FC7FBEBBFFB3F50FAF33A6EBAED7272F7521ACB184E3617A8761649B46FAC99E322D36C0306BA646EF7C98C7F004E93B26E4B201858A8915AF23A30368CF8C418C73B5D875D7E8AAB2DCFA5FB340A5ECBEEEF1FE8AF3FEC3DE62D34DE17AAE9
	FFD49E2049CD6477E66336ED7B0CFA2B740ACB8E2FF844656917A73B724DE7B7D7B17ECF1778A87FA350C28E2B53F1034E172721FBDCBD966856438E51E92F38A28ED4C2A07285C97031B8B082765582633F27668A655F6A95AFB97C477B7B3AC56F1D643BC3667B341D71BD5DFF69FF046FCE196FCB0BEEC6505EB6307DD2A57DDFAE0288612F74DD07EC329C07C86A08DADE40362F6E8F5376F7D2069DDC0687327A4374431D14016CCD581CF8BFDD838F42B80E06B0298467449B67C8BA4E097244FF486DF4B2
	D3C364DEC36C0821ABD7E59B92CA18EFA39B52D87AD7F453FBF9FA16D5AFFD10270F51CD0F6669595DFA69CB39FC35C3245BC32633F668E9A3F31CCF3C5AAF42921DAC8AE08C60BA3BED05A66D2C55592F2C5F2F3511F51AD3351EE038633C3E0DF41FA7EB08AB3CFC5F798582D90733B219CD1FECA5E5FA3C0EBED8FE1185126CA33A77325AC7B4916AC67CC9B361193286FD9D5F790854D5CFC7A62CA5E57C638574A199A0EE0450381615B3EA2D6CC72279DC6D18EF8E44B30D30B6B66A652B6E40FCDD106E8F
	196FB51EAF8652A76B64CBB412FC0BBA514F321DE3C60A7D88A67FA7B3F1AFFBACC76D639AFC768D5DF90C045CF52C7C72F55ABD7ED397C8394D00372D43B17166F975BA71004F6736B92889137BF57CA76AB90EE15F7DA48B1EB084FD305F370BFE540D07BFA13212BD188C4B7D7B432DFB0560BDA56BAADC069F3ACE073C45FD883A3199546B90DF821CF508578574CB6D6F4276F22E43B97E1BBB547E34716D7F1A36B8C45BCC145BE42A2AEDCC591B97333293F8591925A683438ED891EB60582FB8A615229E
	AE6CA4FE82BD1F9B719E76CB8E32EB34CAD6EA34D4FE43D43A8EA7E54416F2FFDA9F99CB33A01E8AA1F73D494076764F51BDBF49DB8118FDBD5A0B975729477B7875ECCDBF951E4CA65735937BBC7C7587765F544DABD8FFEBCCAE6A26505AA8730EB5FFCB70EFF9C5574FB747717B34996BD93B8BE5CA7B37EF5A325838F54BE2D647875A310EAD10E7F499567111BCF59D634BD89DE715E19DBFE8A763E718730B6CB3792483F94E03722AB6A04F37D7EBF976C25A588D589FCBAFA25D8440E6F03A93229EDD4E
	C65457F3BB824672DF9725079A4BE59BD9BB55EE540E65C7BA085ED8G6F5D08E3397442F255D8BE8523476A6A818B4D577D97C8DB01AD1663C99788DFEA0B855CFF183B0663EB9B5C08BE13B997C91D23A19E8BE1AA041990D239EC975A07749DB67943788EFFBDAC390AB7611E6D30F5B8F4D51C6E09E15119B9DD5A95ADDD5BA6E5AF6C5C943CAF167DFCAE22CB23B6B1FF5EE20EDF25788495AE7B79280DA07184C8ABABC77E3F3B20659FD59E48F322A64E68DE8F222B544427E96818ED68F1127E25F6CFB5
	546A6A0E623EC7365B3974CC0A78F7124BD1E78EF611B9523C59E468026007B08EC29C04A48873B6236E7CE33B5E7C9128BB21A68F4557426A792D7611354F8F0368346DD330C52FFDB614976B378FDF94337679E39E36CF55966C4B2E0E11496A8A22534ABACEA3ABDBEFBDD024DEEF45EEE1B6B6911E3336605C37259065CC65F266861D21C4A6E7E9901DD64E2E2D01F4CC06FBC414413F95F569CBF4CE1E8971B9DBD1EF96F610BCE88FDB5D8E97591B3334A99DE49D6A76BAFA9CAE44FEC6B11B5BCB9D924C
	CFF6012E89D2214C028AACF76E45507E1377AF6A7BCF52BA757DA78BBB437B8617F506722FB079E6F279AAC0BE06F5D891EB6458CB9C33F02C608A41FAA1BE48310BCE02CD00F8DC85762F43C5EC7BCC084F03E05C8665C2F0EE43746BB4BD9A62133731B5B6D9BF13B9CF761B75697974C8F9DA4CA8170B71F9BAF99A376969D22ECB0F071E0F1064DF2C99275ABCDA1FDB89AD6B493CE5342FFCBE51C78D8ED95049E92FCB2B849D3F55F1EB1FA8605EB827FD111C27C9F29F2A66322FAE8D6773CC146BBBCBD3
	6FF9904F2E8C440C90B7E9B059475C95DAE7CFF7696B6C79AEB2FEFC6EFE2FCD546AE5D7D781CFD32C6D91C96CA3D516770414DE32FAFB44A03D76D0FA16960AFE20AB146E3376CC8AE84F9D3CBD5F488B571E4D1A76E917639EF80E562445C0BCD60349FE0E8EB56F1D825A7B37B713FA6958FB551A7F19A203ACEBC2A52E79537348FCBE8F62B95BCD06726DB8F63697062BCB6376C059ACF23C971E031A34E808CF5C2ED7170FAF2A6BE2626DB8C68C47BBCED356F4B91E8C4F391AB4C31549D0DC252717DF36
	12F50D1F47475078GEFCF7140D22EA7CDAE3BEC4459BE59CBED5F63D009BD82E2EFD32CAFD30DC95476954DD7E36FD06CC940EAF8BBEC3FC26C3F53BA606E879ED1D5A45F61ABB8A7D6C13CD92E03270A4D0DCC469FDFA7766412575A87DDFD5AA35A84FBB5216DF7A2EDA2641F85A19370B28866EA5C3730F46EADEE31F61317B0B00D4CEDFA1EC5B99B4F37DCDD86DFF9A969A5A14A610B901E7721EEF206EBA699DDBD2DDE37C774CA8E51A73F9C4276B731AE757EA636DADEA7D4637E67BFEF6A254F2A46B9
	261E2E856711B65A01580492021511B8476A56902C9562CE0E2D276B0FD1900F6658C29B4ED993B9963707E0F3A11E3D9331A579485748B1F78141CC90A7E318E1E38A10EFB34FF7B69F7936F32C460AFCBD9C0B2BC13E89BBF18CA7952957B9C9004F5E290C05541D41F39CDB7BDF23B6A14724BD7B3F1B6295A66D593FA18F4F7E1BA1AD5604B21DAC646D3D8B31E5F9D86FD53C5E9B73305EE5BCDF99EF6FDA0EAD6A46FA37F06C2923D86F719C7B1108FCA7F3AC3ABE186F437548F7AA4FD7D306FCE7F04CF7
	8D794E6158031710EF43EE5C173B2E60FBD12D00C56D46F1DA5D953096A7DE0F3A3A0F3C8E7BC1AB0CA8B26A19AD7EA125CFG3A9990D2F6633E7DC6867A19D2B7FFCF983BE02E6EFBDB8D0F7DA14DD0437A3422C659374FDA0CFE26F7699A0B5075C27A049A02ED6AD30F99B2961FC8E36BE116FEBEA01D0C774D02BAFDCCC0BA1137BEC31D7E73007479AAFAD6372D9730EE165D8F8B4DF74F8879CE5AEC39CE59356C991FDDA0D8EC5B974B735F2590739FB5D92C7E2F3AF07DEE2E45FDC579AD44A65522EDF4
	FA08DD6D337A9DFD7DFD74202FF98F75EFD37B118D3F8B76E05E1F1610BE73094417AF5A49BA0265FD065A153170BB06675DF5037071F845CB2257AB5A599122DC360D5A1C8478BD1D677F45G71E1DFF23BA41627050DA7781DD9876B5CBA022D3119F55ACA5D1FF8EECC0289E81A6B58FE02606DF5ECACE31E15C2F4862D3B4325297BAB542ECD067C71248C0A6D2636E9B6446756214C7794905BE3F3BB7B7BDCBE19F68A35EB657530C62CC75A5B14368B624EFA2C4BF1EB383A24894A59B461B581682654AB
	F519D62F54C516195A44A440136BF15C3EC157C0598DE00B9B905BCB5B558C71B60E459761189FECC0FBBA18C74EAF26C3FC8E041C3DA6C355DECC7B8ACD336CE53EF9E9AF733D333425C16BC2C2972A1E98880F25B23F1CB079990FCDC1BCA2B93F47BDC806907E1D82561EB7E8BB0D83D9A66C45FEBCC1EDF7924413B9F60C664B5E8763E49F762D319B7B36E5DFF0DD34FA5A85F924FD4CD693992376E97BF6AE357B63G1F308F797E165A7D69901F4131C4EA63337703AC7B916B22B65E8C71567DA85FD72F
	21FC23776B4B278EB17B83650B5D2F15EFAA1D9F62G1F3A9F75C08A72518D95985D1706CD47666B35CEE21BD2D432B13C1C6229AA1C4DDFBF667317219146E5A37AB8765A08EDCD04789C881987E0CD8D2181C25B8174CD64F4D789C3784AACEECF8BEC841DAAF7832B5F874E113DE7395002F34738C76E957C4EE7C21E3FB88F30BE9DABBF1BBF4827B82BDF221D54AF9E52E6C0C80510FB9076C2909A8FE27D5A3AABD87D48715181C9325AFA694994D60E9C96A9B0D90C333A4D56758FD88E4A7B25037A63FA
	9070E8CD5AC40847E9B046E35BADBD9E53653C49A1F84C855CF0A8B02D9862D59A4CFC083C13FF0C3C66A04F9163CA48FB79AE713A119F62189DD0ED7202E3794E9DB53BEBAA0CBBF6ED667D740A20BEF7B0462707BCF70812F90F171FB9AB8AE47E631D8A7F2AB5245FCA4FD41E2EB41EF2F73BA5074DE7BCCDDEAE77C92237144BAC75A9B48505EBC34BDCDD3307C94C68323D8A5D7B5D25DA3A43B0A117175AE12B626EA92DB0D6D5982BCDD05935825B7328BFE05043980F944A0335CF318F75F84EC75F90C6
	3F789FE96BC334CF125CAEE5E6E5FD57F676F886ABF3192448FDEFDE587A6ED257778D95DDF7414650F4BB2ACDB5265A1D3BCD24032BB6E3DD7EDF3FC25F189F066F8E4A378A79965ED06836D8B76837334F6A7279C42F63122A29075956BBBED5FEE78DAABCEF94C5A2AB4B1BDECC76685DEEAFF5A631BD7A6AE25CE737C3FFC890E2A1A4C018E146751025B0F8EFFF259069D24DECEF1F5B8476260979AE59FC74DC914EC70DCD4163176886997B73653AD888AD84541B41A66D3A0E2D5D55EF68E877722BB469
	41FBF4D6067A8D9B3DB2F45F4091F08F7F73BC6D9E1D54B92A096F610DFA6963A11D755F9FD57D171EB7FCDD7D45CD05FEF5D81BD0DD255655A937953A54E169AA5BE71C6C46737649D017E0DDCD599FDAFF472AFE5B5394B9120C114B5F182E505DDDBF7CF6AB48D068AB4AA267DBBADF213BF4ED786D7658B5EC3759A15A0D71E9DB2034D155C2052770C9A43232F9F4831DE3586FCA556F1FDE09745D60118446A3710E72E0EB184336503E78E3B6FDDF7CE91B7E7951F9DB7877EF2D36506F5F765A546F5F32
	B518E0A0635EF8985615903AA0C890228E637A6B3FECE49EA6DF01842F3D1A6CBD64AC00FC79A1A17F5F59C357B559BE7477A27FEEA76F9A415AC2F2771172917F131D74176476D0D0BE173313B672BAFAFAA516D5465F3393BDF50A17A84C7615D9EE02CD04FACDB90CFB4DB39E74D7CD63581A9B681B1A4931078750B715423134F45C27E6FE0458C0867A26AC9CBBF18B7976F22CD9C03E039CAB7A9479C6F3EC0504FCA7F26CDF7279F99D471EABC33E06E674DDED2FD52F7D12CA1EC943F9C92B23454D727B
	E34D5AF7CE3A9711F25B8177B723BE5CFBE5ABBC4FDAAF873F5585206CC09EE0A8FD13D05633EFE711F9B5864A1982E18604948819C7E0CF83218A0299C29B848F04A88863A1CC06B095C292045990D20F209C3BFC1B4348A1BB7928F2FA2D6C9C186D358E9463F7D7B9C7E18DF094FD052F171072423F4FE5F1C8CE71203C94116D64D70A51CE0EBA0AE7BBCBEE939EF190CF04B01BBC69F9FB42ED6DF93B703149D0862176E374E57EFDA177E5829675B17A4BDEA8C49FE2424748E7D191BDC302F8CE8B2CE3DA
	B0EFA6172931C54FF607DB33EDA7C54AF51B4B5FD17073324B57A1B633857757E73B557B4846E3207F47427BD998DD42B5B5DDAF508C8EC1477A5EE088EDE316990636B185867A0EA35886F2FC42309283FDBF6052A51F48EDD929A107E3C7FC2DEE1F031C243079ED1D1B7888A5E0447C8EB5543EC4037C630F213FE3B435AFF1901F4A3163543E24C0BC15E3C9543E149FB799CC47F19DDA10BE14CFCE6D3731831D7FB8DB0712FE9FFBDC6B9719C4EDD38C60930FA3DFBF35CD09901F49312BCCA7CE188C59A7
	90B3D35BD48BF1B3476A29ED72C0FC70844A7CCA7ED0B2233F0BBCE301AE6104A2F352892D4C29542EA583BE67847AC4E6D27D145F69B0EC88E583E0F6BA8A6B0E935D17C51BE43176F01A1EC5C496BEFFB293A527399611395021F3EE4652FF1295DA6FFE16B5345E7DAACBFFEE1B1695BC37BD1D25BF37BD17251E5B98B6A30B34DF8F583CB61E6FC50E1D67589FE81984BB6730CB3D9C1FCD65A2F833C898A27E96156BBA455AE46CED95F6DE4666E5113183D56EF5FB11762FD954076EF0BA6577E196AF20ED
	8BC309374782FA066070D8D5F2AF6658F9EEA7BEAA9E4ACFD5502A671FB9B3A45D9ACD1C51FD0D5219DA07769513505C0A5F6E5EC56DFEFB2B566F77D50A7736EA7DFEABEF232D17A0EDC6AB4E93AF844C9364BD780613A6039D027FA45A617B8A711D026813B89FD45239ED9A4413A14CBB0976799B05A373FFBEBCC23A64E15331F63AC967331CD35A763B07624527346D372C885B2F9C52461E427AAE8A68779440B3CFC7B29F3D2B7B9EC901CCDB91220CC640AD1A34DE088F1E5675992E536391AD671D9802
	C79C6053B5E949901F2B4158FA300F6EF98D9656DE8C73D24C9800BDFFADB85F4CEB6AFCECCD701FE43A1777F547BDA4D2CADFBEB0126933CE717BBD39D44937728699DBA176FF353BE133391B6FF13F3BCC219BBF90B9DD718A056E1D34BB63AF1C3BC2791D112B70CB3A99391CAF2868768BE4EC17863E1CE1E433CCDDA94B7F68AAA5FF4E27E17751B50C91239B132750AD14A2279BDB20507DA27F4E3423FD35723B21D0611730AE92B959BBF789AB096EB9DCCE07CBBC44EE8F60FA7B8FF44D5BGFAEB3160
	3E68BE3A3E6905782085ED431729BF097D0ED67DDEFD7B4E7B9AF65CD19E6C8E1D7F3A0D5FA1C5D9589DBA9360B945A21FE9DAF07E383887778833ACB8FFFCD0CF6D6C99D807C2E8B903ED764DGFBEE875CFFC631BBE34F845BACE6379F22735104B35A77D99E21F87C996D7BAC26E2FC1FE58624B51CC57EF797A97DB4D675FBD5511D6F334ABB4A03692931B8588EEFA88E3657C57968CB18F096F5DC626FB8CD615841C274A5CC63583ABC74A54C6458548E74A524F06CB9937A929A4FF19F46BA64EB615824
	F5483717E34F2EC73E039CFBE6AD720D665873D7116FC40EE5F8106F5CF338A737EEA47AA02F4769121561457EA58A0ECBD6591E4497937D1148CE1D58AD817792C92C0D5BCC065CB6BCA3083DB59F738AE81BF229FEB1FDDCAB607A2299E8C63561586921760D14915706E3A71666CD013861BCE067917725913C96622D90FA4F23CE5B76E857C8234EAB63E85C79D0E34A5BC04A1BF4DE7B5D48A80ACFBB2F7DEEA433813F9B198DE9AD1FE0FB7F186A48E408CF655873744CFEB644D3B9165504FDE53C0032CF
	AA8E7DBE467F21E99E489B8DE1B204C4CED7D7FC675F47B89D4463EF7FBE06190E399428D76A855C8FFF0BE2856DA6C3D9BBE2D758B804F8BB470E52F1988571F16D38EFFE2183774DD35B754F1C54FBFDC9750E8641E734876D1B69981E85F88A676B2763353843E4A86FC06CD90A19A15E4A317768989E04F894476651B1BC8562899DA873DBD7D166148EFD19B342481CF9D1ABF3859D7FB90097DF44B3271749F137BC2E23EEED92422CCBAA3B5DCEBBACCE2A5962C4BED790C636FF59B9C2BAE7C83A660B61
	6E0EB2D29B51FED1FBF754960ABBD5B89B53BF915007B988E94997F17F79BA4DEF6E544E37F3A95E55291DEF8752F03E9D043464CE9C73B7685A405CE5B234F5A116D007F6E0308B47333FA17CF7A27750748910BF81C2B284414A4EE8D9FAD6431D7FCEE43DAE0F3F55F7A2CCB72795861FD13FDC28BD23B6DA35E7548F9D8ABE237E59A124B3D95999F58BBC3B64F6E3E3EFDD930EBD3FF578E754E32D4A58E3E73F7FDE2CBD7BA53CE22C7C7B568E6D772DA4BD1627BF9CF436CC5293F83AFF179EFD12954779
	2F4816C3EE4B3EFCB2FF143283F1A3BB4D46FD51B757AB79EA8A436C3F766C8858FFF94B943A3C3C4869FAB7AAF4F19D116E0B589AA17BA2BFBF6575ECA4A68C4FF54B1532FF3BBAF219D2D4F45FDDC75B0A9D7CEB5AEA5AE6A55FEF5607AB3FBA207C89DB943A29EBA3277B3F958A5DD3D70757D6EB3D58D646EEEC2BFB37A9ED55DF29143DC30CC4A6E6336E266BB4F26795B9E7E176E0E3DA601DD7D5B42E244789F77E4E2BE7A366B172BB2F5ECC8BFD6755FBB42D8D5AFA9404C990923B317E37536E7C1DD7
	B1E9F7724EAB26A7DF5F93ECDBA76D617754F6AB5F76645818FE30EFF81E2F43BC6500B7C0E807B088E13C8D6D59E38DDAFBC76863F9FACF10BDA46909BCBDB6DDFBFF83C91F45536BB6E86DA5C91FE7437DC7FE910E17ECBB1E9B3EF28877AAE640866D18F733994F8D2758F1CFF24ECC724E01F826886BAD91731EEA42F2CDA20E43E3641A85F91C9ACB706C4F49E96E69C0AC11E3AF71F3C353A5449E5905D84CA5543565815F8327821E5393091F364C2B26AB831A5AA168589DAD1569689BE969E16B91FB8F
	732D875E6592DF0679A67630B5CB3CEE3EE7799DB273FA58FEC7BF5FFBA64C17534B76C35AFC2C8F9377F0FFB6646B6A656749F5840F0178E48853FA31CD7FDA07FD1B5C0B5F15EC2D8F7FDDC9C7FD786FCA7E2EBE7CF7A5536BC3FDD742E47AF38376F30183657CB65707C10E3D1A0ED8B2472EEEC04CFC99F52418FECBB569F2E436B61E533DFEE8E4EB78F7C6C8D7E99E591947D3F4ACA6DE561EF9A4D1FC66E56D19C70799F5E4B62435DC417A1EEBD2731F8C7854AB110C258DA5FAF3518C19F6CE08B28427
	49106B8CCCAB07F803D3EF8DBE26A35CFC572A21314BF1BFBC47EA52A6C0FC0AAE0FD7F54FEE2649F9E7BA756B1182F8E6DFE0DA8144AB7A74F8CC5995765BDC8D0DC50E7742F3D013968D71099A0C2DD94AAF867B8237DD8C768556FB0373B5FA5579183E1CCB47BBEB6200DFCA9F6EBD224AC6FAC790AB7735B2AC375C85364A0565FE7BB35C4B739E3F8BA8864ACBF4615C36FE976286B76CB15D28733F8D7221C5B6D6E78D1BCEBE5F25F6586F8EBA5F2578E8F75079EE9D0E55E8C81B4B65CE2F9F195CFF51
	5D4B36F9189EB9BD7ABABE8A70F11A34C9900F7768697877F447D1221CF7D6889E73G4F3E2A391BG62262BFABCE627077DDEDF26E95750FAA0BEDA0345C0BCD61747358D61F8A4E8E8126478ECF826EA52F23CA6C319D7EF2C6EAC42B327DAAF7AC93EDA9FFC6674AC592E4BF27DDE755BE63E73679703F714872B332BA95896791A02ED56C7F47D5882ED554E5BEB8645BC900F6258F43ADE988F71B80EFD0D7AD227C3FCA6476E625F0127F04CCB57C40DBE13214D473FCB6EC09ECE0EA56C246792BE75F749
	4F6FC43E63F83EFB57A05FC99C3B1B5F19924F31C99711EF3604587CFC2C2F11E3776723ACA60E2DA8C23E4D9CE3FEE242371DE313BA112F07E363F7A35F840E7DF69772C86258A3EB026B7B1BB548F7B64F57495BB915E37F5C0BFCF37A9193EC48372B9F753CA3FDE47782DD89222B544425FEBD3AB74AC6466F5DA0BAAD3F313A7C04915E4F34F4487B19A66A725B3CEBE47CEA0268347C62F579FD39CE603F23D53FD7577D8F1C0D5FD19ECCE7D76F4571184475785ADE9CAB33B976E0B10E0BD40E259BF1DC
	64DCC3EC2B9D47C599477E055B9F09E33F4EC33ED19CB3F2BBB01EE38B8A116FE40EAD66F6E0AA479E60F6E086476E66F6207CBABF3B4BC09E8D9C5BC557082D906F655883DE64BB4831F592720D66587C9CFEEE4B31547548F7AE47E2B6A0DF039F318D9B517EA877EE9C5808FC0BF93E792548370AE3D57D48574C311FFB116FB8BF1ED335D3BBBA8962D37C389E2D5A9B781E2E27844F6EE671BC6BB2746F9DC82376D198G1BBE00F97F499B7AAE01F7E8DF55C2DEB34FDFAB855EA570D35A479EC89F9CC0FF
	FE8C3FCBA0F6E07867FF89835AEF4ED616695FA570A0554D6910FF46G7FF61B4E0D19B760778D1439E1E370DD8282BDD3B4C31E569BC87B98ED1FC108C75D403AFC5309F5093FB17C6F4D93EFE84F851FE5F73C83BE1B732D4C47334C5CCF91FB1CE2D590EF60D8BD5507DE08CB9C7351BE1AG7158CFD16647BBD166191F8E7FACB365D32D4C3F26E3B195F043A0727D104E49A608B7F26CCF347DA4080F62D894550FD808478D22FCCF7722FCF386077F0D3CF0D3AB5FE6BAF7E783DEF0937BFCDC3A762EB206
	17EE505E39A51F3F845D0745702EDD5A3B25984F43544E1277634DB7312E5F21D897441D9C1BCAEDEF8C44A7F2ECAB353D09901FF9935B64207D333C9F1FFDCB5BA69F5031D1GF859AD647B96559572FEFCAB470ED0BD13A0BE0AE35BD91FC1BC0EE3A6CABB8B62A937D066FF6A7CAC6F479BEFEBE50E25FAD681F86DED643B075AFCBB44BD3731EFDB3C7AF72558298DA5F725CC6074CFD0EC9A4413B8F61C4E8542A830032330AE45B91F657E1306D15A3AEC256F7AB783EE9905FCFFC96711D1909F4B314BF4
	4EC80078F40ED5327B25A01EF9974A77D17FE739532476AE2DFCFF246DE2863C75AE740D9FA743C4567BDB75111EF9317C4F1604BE675C38C3A9771743B82F7CC0C5F777B04EC7176DD6687AED43BB3BFB5206E786033CDDDE2765315F0F57A8E57B07D1176F57AAF40F6E9C7EF733676A947A345511FFB73BC175EE6AB567703F1BFD4A096DB1053747DF8B15767837A2257C1F19A2110B657D3B7C50E73DBFAAD64ADCD89479196D7FAAD16876076D1BC0BA7ACAB23E2F5DB9BCFDC969447619435B077E19A639
	6C2D2AF7FE0CE1F5B8D026052AF7889EDAB3FCFDF9D9C5EF99467769492AF78BFE50BBFCFD7920975B236CCB589EF19B147608D63D0330E2CF647A625E9B7ABD7D5ECDCA195145113F475ED82E507DA55C3B819A3A832AF78A565AA35597C63BFA2B529629DB15F20E0653D74E1F654D4F9F7A1D7BA4557B8B6F073797816F4E47EED3680430F7FF845245EDD76846C4BC06986D03D5CA1B78D4F3D0CDF83D8D607F31EA2E586C0D74DE99167FFFFBA33B87E67DCE05C7DE586F91826F01B93ED721FBF759705AE6
	63BE25EDBE582714F3A56C5D890177327CFE3FC2D730F1783664A70D8A7DFB613EEF505C4B7268C105EEFD7FF0EC09FC4706D9297B7DCDCAD9F735C7A28373437C2BCD6DBBEA871B6479D2A467080981F7C90D861A1808685E69D4534582CDC2C4F4CB9D81F7EC824D6CA168185F60B53ADE8974D57F874582FD552FBB03734DF186674B6E8A4E373CABB85F86C7F03EAD8EF5BE76F71B6FBF7A7AF2E807B70579BE2F30A2383F8EFC6DF74F47F61AF3530574A34202DE7A727B91E17EF572F63C1F7C89C6981A37
	BF14047C902353F7D538C5B403FE167FA870D89220DF3F7E6E2EBFCEFF692CAFC3D8F0C4D8CD5C9627C1570851946D6476EB794FE99E9696F9484D3C4439F0C448745147FC1FB46094DB045CCB27481F9382EE7683781D2DCF92D63590CE5B4927745B1B2D3EDE09FC9BDB5FA2E43A489F7E94D630E4275555331D1966FADA1F3483DDD4DE520582483B124ACBCA2964252CFCEC5906F5C7E745E588690705AC275BEABFEC35C9EE6F91E111546B95FD3DEE275D6F59CF0725E038CEDA1DF8C8B22038A2DEFDD259
	CAF2F18E977A0A7FDBE3174CDEF2B8DD907CDEE1BB4DC9BCC915BC077DD02F558B2CC4AF6C2A3CD6E0D946536EDAA3EDFC7A237C76F4A1CD2EA4E97A85FE0F84D2F9E1941343D610402811G13F8C115FF7FE455FDBFF86F93DA10C2AA89EBD9138169769E515D377DG2C8DDDA2AFG5A8F0AAF614513BC151ABCAB7CDFDFF5745FBE6C067EB68B99FDD5D5747FEA7A7F8E72FFB5C52AA9D23D839AB1C5887BCF1B6E278A17A5B1A581F916D1F9C8B7D79E061E12FE7F66138F3D5010B287EAF7D818CF7FB889B4
	F60E120B2DF56F093D2FE4713864B124AFBCC4A5305C85172CFD8E67G7CE0B3021F6005FE4E09547C887D6CB8795A4E3A0CD73F1711AEE44250E11FE1037212EF29C1F93DECA4E5C8EE8F55BB32A44B12ABB1BFE054BC42E33937BF7C70C3A5864A3A1246B20374162006E085A4F0B6CDDCCA7FDFBE6C66A5D40C69AA42107CA8G856333844D300175C2D148EAA9226BD6CBF0FDAE2B35DD29D626BA68087EC52A561E482BD524E1B8DF92962B167C1C026C9D4F6A447E3FD7DDBDE81B7C3AF59282651604BC7D
	05FCC036FE1D58672A322D11D4369F26C579EAF623F2B73BEEE552C2D4A6135BC9F6E783930A643AE335B4AB35EC77CB4252C09FD7C0855BF5E21F2BEE92079A0BD4EE28E420E3A6A07902CE6CF3D5C9CFA4153C20EFF0BEA735D1695C007F0B25E2F7C524E2DF38D9EC4C70A667AF44C039AF7201C2EB7885692A6F8C3F2BBE770B099FC4341878E22D999E0DE84D40E35493200E41FE7FF3D7271F8F35B579E26E381E08E847A55FC39D5F243E2B31A1775510FF6BF77CFD4C47B579BE6DDD0D97CF12AA4E815C
	F0BF5E11783DD6621C8EF5BF5A69BE2B53A9D91DD78E386C642E34038312285CA3EABBC94A77E19EB91125DDBEC9643E2C2279EFD0CB8788A76401DD62A7GG500CGGD0CB818294G94G88G88GF9EA6DA8A76401DD62A7GG500CGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG9CA8GGGG
**end of data**/
}
/**
 * Return the DialingPropertiesPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getDialingPropertiesPanel() {
	if (ivjDialingPropertiesPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("dialog.bold", 1, 14));
			ivjLocalBorder.setTitle("Dialing Properties");
			ivjDialingPropertiesPanel = new javax.swing.JPanel();
			ivjDialingPropertiesPanel.setName("DialingPropertiesPanel");
			ivjDialingPropertiesPanel.setBorder(ivjLocalBorder);
			ivjDialingPropertiesPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsPrefixNumberLabel = new java.awt.GridBagConstraints();
			constraintsPrefixNumberLabel.gridx = 0; constraintsPrefixNumberLabel.gridy = 0;
			constraintsPrefixNumberLabel.insets = new java.awt.Insets(4, 4, 4, 4);
			getDialingPropertiesPanel().add(getPrefixNumberLabel(), constraintsPrefixNumberLabel);

			java.awt.GridBagConstraints constraintsPrefixNumberTextField = new java.awt.GridBagConstraints();
			constraintsPrefixNumberTextField.gridx = 1; constraintsPrefixNumberTextField.gridy = 0;
			constraintsPrefixNumberTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsPrefixNumberTextField.weightx = 1.0;
			constraintsPrefixNumberTextField.insets = new java.awt.Insets(4, 4, 4, 4);
			getDialingPropertiesPanel().add(getPrefixNumberTextField(), constraintsPrefixNumberTextField);

			java.awt.GridBagConstraints constraintsSuffixNumberLabel = new java.awt.GridBagConstraints();
			constraintsSuffixNumberLabel.gridx = 0; constraintsSuffixNumberLabel.gridy = 1;
			constraintsSuffixNumberLabel.insets = new java.awt.Insets(4, 4, 4, 4);
			getDialingPropertiesPanel().add(getSuffixNumberLabel(), constraintsSuffixNumberLabel);

			java.awt.GridBagConstraints constraintsSuffixNumberTextField = new java.awt.GridBagConstraints();
			constraintsSuffixNumberTextField.gridx = 1; constraintsSuffixNumberTextField.gridy = 1;
			constraintsSuffixNumberTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsSuffixNumberTextField.weightx = 1.0;
			constraintsSuffixNumberTextField.insets = new java.awt.Insets(4, 4, 4, 4);
			getDialingPropertiesPanel().add(getSuffixNumberTextField(), constraintsSuffixNumberTextField);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDialingPropertiesPanel;
}
/**
 * Return the InitializationStringLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getInitializationStringLabel() {
	if (ivjInitializationStringLabel == null) {
		try {
			ivjInitializationStringLabel = new javax.swing.JLabel();
			ivjInitializationStringLabel.setName("InitializationStringLabel");
			ivjInitializationStringLabel.setText("Initialization String:");
			ivjInitializationStringLabel.setMaximumSize(new java.awt.Dimension(117, 16));
			ivjInitializationStringLabel.setPreferredSize(new java.awt.Dimension(117, 16));
			ivjInitializationStringLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjInitializationStringLabel.setMinimumSize(new java.awt.Dimension(117, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjInitializationStringLabel;
}
/**
 * Return the InitializationStringTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getInitializationStringTextField() {
	if (ivjInitializationStringTextField == null) {
		try {
			ivjInitializationStringTextField = new javax.swing.JTextField();
			ivjInitializationStringTextField.setName("InitializationStringTextField");
			ivjInitializationStringTextField.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjInitializationStringTextField.setColumns(25);
			ivjInitializationStringTextField.setPreferredSize(new java.awt.Dimension(275, 20));
			ivjInitializationStringTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjInitializationStringTextField.setMinimumSize(new java.awt.Dimension(275, 20));
			// user code begin {1}
			ivjInitializationStringTextField.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_INITIALIZATION_STRING_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjInitializationStringTextField;
}
/**
 * Return the ModemTypeComboBox property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getModemTypeComboBox() {
	if (ivjModemTypeComboBox == null) {
		try {
			ivjModemTypeComboBox = new javax.swing.JComboBox();
			ivjModemTypeComboBox.setName("ModemTypeComboBox");
			ivjModemTypeComboBox.setMaximumSize(new java.awt.Dimension(32767, 25));
			ivjModemTypeComboBox.setSelectedItem("U.S. Robotics Sportster");
			ivjModemTypeComboBox.setPreferredSize(new java.awt.Dimension(179, 25));
			ivjModemTypeComboBox.setFont(new java.awt.Font("dialog", 0, 14));
			ivjModemTypeComboBox.setMinimumSize(new java.awt.Dimension(175, 25));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjModemTypeComboBox;
}
/**
 * Return the ModemTypeLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getModemTypeLabel() {
	if (ivjModemTypeLabel == null) {
		try {
			ivjModemTypeLabel = new javax.swing.JLabel();
			ivjModemTypeLabel.setName("ModemTypeLabel");
			ivjModemTypeLabel.setText("Modem Type:");
			ivjModemTypeLabel.setMaximumSize(new java.awt.Dimension(86, 16));
			ivjModemTypeLabel.setPreferredSize(new java.awt.Dimension(86, 16));
			ivjModemTypeLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjModemTypeLabel.setMinimumSize(new java.awt.Dimension(86, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjModemTypeLabel;
}
/**
 * Return the PrefixNumberLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getPrefixNumberLabel() {
	if (ivjPrefixNumberLabel == null) {
		try {
			ivjPrefixNumberLabel = new javax.swing.JLabel();
			ivjPrefixNumberLabel.setName("PrefixNumberLabel");
			ivjPrefixNumberLabel.setText("Prefix Number:");
			ivjPrefixNumberLabel.setMaximumSize(new java.awt.Dimension(92, 16));
			ivjPrefixNumberLabel.setPreferredSize(new java.awt.Dimension(92, 16));
			ivjPrefixNumberLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjPrefixNumberLabel.setMinimumSize(new java.awt.Dimension(92, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPrefixNumberLabel;
}
/**
 * Return the PrefixNumberTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getPrefixNumberTextField() {
	if (ivjPrefixNumberTextField == null) {
		try {
			ivjPrefixNumberTextField = new javax.swing.JTextField();
			ivjPrefixNumberTextField.setName("PrefixNumberTextField");
			ivjPrefixNumberTextField.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjPrefixNumberTextField.setColumns(10);
			ivjPrefixNumberTextField.setPreferredSize(new java.awt.Dimension(110, 20));
			ivjPrefixNumberTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjPrefixNumberTextField.setMinimumSize(new java.awt.Dimension(110, 20));
			// user code begin {1}
			ivjPrefixNumberTextField.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_PREFIX_NUMBER_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjPrefixNumberTextField;
}
/**
 * Return the SuffixNumberLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getSuffixNumberLabel() {
	if (ivjSuffixNumberLabel == null) {
		try {
			ivjSuffixNumberLabel = new javax.swing.JLabel();
			ivjSuffixNumberLabel.setName("SuffixNumberLabel");
			ivjSuffixNumberLabel.setText("Suffix Number:");
			ivjSuffixNumberLabel.setMaximumSize(new java.awt.Dimension(91, 16));
			ivjSuffixNumberLabel.setPreferredSize(new java.awt.Dimension(91, 16));
			ivjSuffixNumberLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjSuffixNumberLabel.setMinimumSize(new java.awt.Dimension(91, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSuffixNumberLabel;
}
/**
 * Return the SuffixNumberTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getSuffixNumberTextField() {
	if (ivjSuffixNumberTextField == null) {
		try {
			ivjSuffixNumberTextField = new javax.swing.JTextField();
			ivjSuffixNumberTextField.setName("SuffixNumberTextField");
			ivjSuffixNumberTextField.setMaximumSize(new java.awt.Dimension(2147483647, 20));
			ivjSuffixNumberTextField.setColumns(10);
			ivjSuffixNumberTextField.setPreferredSize(new java.awt.Dimension(110, 20));
			ivjSuffixNumberTextField.setFont(new java.awt.Font("sansserif", 0, 14));
			ivjSuffixNumberTextField.setMinimumSize(new java.awt.Dimension(110, 20));
			// user code begin {1}
			ivjSuffixNumberTextField.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_SUFFIX_NUMBER_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSuffixNumberTextField;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.Object
 * @param val java.lang.Object
 */
public Object getValue(Object val) 
{
	String modemType = (String) getModemTypeComboBox().getSelectedItem();
	String initString = getInitializationStringTextField().getText();
	String prefixString = getPrefixNumberTextField().getText();
	String suffixString = getSuffixNumberTextField().getText();
	
	if( val instanceof LocalDialupPort
		 || val instanceof TerminalServerDialupPort )
	{
		PortDialupModem pdm;
	
		try
		{
			pdm = ((LocalDialupPort) val).getPortDialupModem();
		}
		catch( ClassCastException cce )
		{
			//let this one throw an exception - no try/catch
			pdm = ((TerminalServerDialupPort) val).getPortDialupModem();
		}
		
		pdm.setModemType( modemType );
		pdm.setInitializationString( initString );
		pdm.setPrefixNumber( prefixString );
		pdm.setSuffixNumber( suffixString );		
	}
/*
 	else if( val instanceof PortDialBack )
	{		
		PortDialBack pdb = (PortDialBack)val;
		
		pdb.getPortDialback().setModemType( modemType );
		pdb.getPortDialback().setInitializationString( initString );
	}
*/
	else  //the thing that should not be!
		throw new Error("Unrecognized port type instance, unknown instance is = " 
								+ val.getClass().getName() );
								

	return val;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initializes connections
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getModemTypeComboBox().addActionListener(this);
	getInitializationStringTextField().addCaretListener(this);
	getPrefixNumberTextField().addCaretListener(this);
	getSuffixNumberTextField().addCaretListener(this);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("PortModemEditorPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(413, 227);

		java.awt.GridBagConstraints constraintsModemTypeLabel = new java.awt.GridBagConstraints();
		constraintsModemTypeLabel.gridx = 0; constraintsModemTypeLabel.gridy = 0;
		constraintsModemTypeLabel.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsModemTypeLabel.anchor = java.awt.GridBagConstraints.WEST;
		add(getModemTypeLabel(), constraintsModemTypeLabel);

		java.awt.GridBagConstraints constraintsInitializationStringLabel = new java.awt.GridBagConstraints();
		constraintsInitializationStringLabel.gridx = 0; constraintsInitializationStringLabel.gridy = 1;
		constraintsInitializationStringLabel.gridwidth = 3;
		constraintsInitializationStringLabel.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsInitializationStringLabel.anchor = java.awt.GridBagConstraints.WEST;
		add(getInitializationStringLabel(), constraintsInitializationStringLabel);

		java.awt.GridBagConstraints constraintsModemTypeComboBox = new java.awt.GridBagConstraints();
		constraintsModemTypeComboBox.gridx = 1; constraintsModemTypeComboBox.gridy = 0;
		constraintsModemTypeComboBox.anchor = java.awt.GridBagConstraints.EAST;
		constraintsModemTypeComboBox.insets = new java.awt.Insets(5, 10, 5, 0);
		add(getModemTypeComboBox(), constraintsModemTypeComboBox);

		java.awt.GridBagConstraints constraintsInitializationStringTextField = new java.awt.GridBagConstraints();
		constraintsInitializationStringTextField.gridx = 0; constraintsInitializationStringTextField.gridy = 2;
		constraintsInitializationStringTextField.gridwidth = 3;
		constraintsInitializationStringTextField.anchor = java.awt.GridBagConstraints.EAST;
		constraintsInitializationStringTextField.insets = new java.awt.Insets(5, 10, 5, 0);
		add(getInitializationStringTextField(), constraintsInitializationStringTextField);

		java.awt.GridBagConstraints constraintsDialingPropertiesPanel = new java.awt.GridBagConstraints();
		constraintsDialingPropertiesPanel.gridx = 0; constraintsDialingPropertiesPanel.gridy = 3;
		constraintsDialingPropertiesPanel.gridwidth = 2;
		constraintsDialingPropertiesPanel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsDialingPropertiesPanel.insets = new java.awt.Insets(5, 0, 0, 0);
		add(getDialingPropertiesPanel(), constraintsDialingPropertiesPanel);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	getModemTypeComboBox().addItem( "U.S. Robotics Sportster" );
	getModemTypeComboBox().addItem( "U.S. Robotics Courier" );
	getModemTypeComboBox().addItem("Motorola");
	getModemTypeComboBox().addItem("Telenetics");
	// user code end
}
/**
 * isDataComplete method comment.
 */
public boolean isDataComplete() {
	return false;
}

/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val) 
{
	String modemType = null, initString = null;
	PortDialupModem pdm = null;
	
	if( val instanceof LocalDialupPort )
	{
		pdm = ((LocalDialupPort) val).getPortDialupModem();
		getPrefixNumberTextField().setText( pdm.getPrefixNumber() );

		getSuffixNumberTextField().setText( pdm.getSuffixNumber() );
						
		modemType = pdm.getModemType();
		initString = pdm.getInitializationString();	

		//do not show dial properties if we are dial back
		getDialingPropertiesPanel().setVisible( 
			!((DirectPort)val).getPAOType().equalsIgnoreCase(
					PAOGroups.STRING_LOCAL_DIALBACK) );
	}	
	else if( val instanceof TerminalServerDialupPort )
	{
		pdm = ((TerminalServerDialupPort) val).getPortDialupModem();
		getPrefixNumberTextField().setText( pdm.getPrefixNumber() );

		getSuffixNumberTextField().setText( pdm.getSuffixNumber() );
						
		modemType = pdm.getModemType();
		initString = pdm.getInitializationString();		
	}	
/*
	else if( val instanceof PortDialBack )
	{		
		modemType = ((PortDialBack)val).getPortDialback().getModemType();
		initString = ((PortDialBack)val).getPortDialback().getInitializationString();
		
		getDialingPropertiesPanel().setVisible( false );		
	}
*/	
	else  //the thing that should not be!
		throw new Error("Unrecognized port type instance, unknown instance is = " 
								+ val.getClass().getName() );
		

	CtiUtilities.setSelectedInComboBox( getModemTypeComboBox(), modemType );	
	getInitializationStringTextField().setText( initString );
}

}
