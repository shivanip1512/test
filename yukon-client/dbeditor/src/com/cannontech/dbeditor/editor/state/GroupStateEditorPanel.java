package com.cannontech.dbeditor.editor.state;
/**
 * This type was created in VisualAge.
 */
import com.klg.jclass.util.value.JCValueListener;
import com.klg.jclass.util.value.JCValueEvent;
import com.cannontech.database.data.lite.LiteYukonImage;

public class GroupStateEditorPanel extends com.cannontech.common.gui.util.DataInputPanel implements com.klg.jclass.util.value.JCValueListener, java.awt.event.ActionListener, java.awt.event.ItemListener, javax.swing.event.CaretListener {
	// this must be changed whenever the number or states are changed
	public static final int STATE_COUNT = 10;
	private javax.swing.JLabel[] rawStateLabels = null;
	private javax.swing.JTextField[] stateNameTextFields = null;
	private javax.swing.JComboBox[] foregroundColorComboBoxes = null;
   private javax.swing.JButton[] imageButton = null;   
	private javax.swing.JLabel ivjStateGroupNameLabel = null;
	private javax.swing.JTextField ivjStateGroupNameTextField = null;
	private javax.swing.JLabel ivjStateNumberLabel = null;
	private com.klg.jclass.field.JCSpinField ivjStateNumberSpinner = null;
	private javax.swing.JLabel ivjRepeaterLabel = null;
	private javax.swing.JLabel ivjVariableBitsLabel = null;
	private javax.swing.JLabel ivjRawStateLabel1 = null;
	private javax.swing.JTextField ivjStateNameTextField1 = null;
	private javax.swing.JComboBox ivjForegroundColorComboBox1 = null;
	private javax.swing.JLabel ivjRawStateLabel2 = null;
	private javax.swing.JLabel ivjRawStateLabel4 = null;
	private javax.swing.JLabel ivjRawStateLabel5 = null;
	private javax.swing.JLabel ivjRawStateLabel6 = null;
	private javax.swing.JTextField ivjStateNameTextField2 = null;
	private javax.swing.JTextField ivjStateNameTextField4 = null;
	private javax.swing.JTextField ivjStateNameTextField5 = null;
	private javax.swing.JTextField ivjStateNameTextField6 = null;
	private javax.swing.JComboBox ivjForegroundColorComboBox2 = null;
	private javax.swing.JComboBox ivjForegroundColorComboBox4 = null;
	private javax.swing.JComboBox ivjForegroundColorComboBox5 = null;
	private javax.swing.JComboBox ivjForegroundColorComboBox6 = null;
	private javax.swing.JLabel ivjRawStateColumnLabel = null;
	private javax.swing.JPanel ivjIdentificationPanel = null;
	private javax.swing.JPanel ivjStatesPanel = null;
	private javax.swing.JComboBox ivjForegroundColorComboBox8 = null;
	private javax.swing.JScrollPane ivjJScrollPane = null;
	private javax.swing.JLabel ivjRawStateLabel8 = null;
	private javax.swing.JComboBox ivjForegroundColorComboBox3 = null;
	private javax.swing.JLabel ivjRawStateLabel3 = null;
	private javax.swing.JTextField ivjStateNameTextField3 = null;
	private javax.swing.JComboBox ivjForegroundColorComboBox7 = null;
	private javax.swing.JLabel ivjRawStateLabel7 = null;
	private javax.swing.JTextField ivjStateNameTextField7 = null;
	private javax.swing.JTextField ivjStateNameTextField8 = null;
	private javax.swing.JComboBox ivjForegroundColorComboBox10 = null;
	private javax.swing.JLabel ivjRawStateLabel10 = null;
	private javax.swing.JTextField ivjStateNameTextField10 = null;
	private javax.swing.JComboBox ivjForegroundColorComboBox9 = null;
	private javax.swing.JLabel ivjRawStateLabel9 = null;
	private javax.swing.JTextField ivjStateNameTextField9 = null;
	private javax.swing.JLabel ivjJLabelImage = null;
	private javax.swing.JButton ivjJButtonImage1 = null;
	private javax.swing.JButton ivjJButtonImage10 = null;
	private javax.swing.JButton ivjJButtonImage2 = null;
	private javax.swing.JButton ivjJButtonImage3 = null;
	private javax.swing.JButton ivjJButtonImage4 = null;
	private javax.swing.JButton ivjJButtonImage5 = null;
	private javax.swing.JButton ivjJButtonImage6 = null;
	private javax.swing.JButton ivjJButtonImage7 = null;
	private javax.swing.JButton ivjJButtonImage8 = null;
	private javax.swing.JButton ivjJButtonImage9 = null;

/**
 * Constructor
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public GroupStateEditorPanel() {
	super();
	initialize();
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJButtonImage1()) 
		connEtoC22(e);
	if (e.getSource() == getJButtonImage2()) 
		connEtoC23(e);
	if (e.getSource() == getJButtonImage3()) 
		connEtoC24(e);
	if (e.getSource() == getJButtonImage4()) 
		connEtoC25(e);
	if (e.getSource() == getJButtonImage5()) 
		connEtoC26(e);
	if (e.getSource() == getJButtonImage6()) 
		connEtoC27(e);
	if (e.getSource() == getJButtonImage7()) 
		connEtoC28(e);
	if (e.getSource() == getJButtonImage8()) 
		connEtoC29(e);
	if (e.getSource() == getJButtonImage9()) 
		connEtoC30(e);
	if (e.getSource() == getJButtonImage10()) 
		connEtoC31(e);
	// user code begin {2}
	// user code end
}



/**
 * Method to handle events for the CaretListener interface.
 * @param e javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void caretUpdate(javax.swing.event.CaretEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getStateGroupNameTextField()) 
		connEtoC1(e);
	if (e.getSource() == getStateNameTextField1()) 
		connEtoC3(e);
	if (e.getSource() == getStateNameTextField2()) 
		connEtoC4(e);
	if (e.getSource() == getStateNameTextField3()) 
		connEtoC5(e);
	if (e.getSource() == getStateNameTextField4()) 
		connEtoC6(e);
	if (e.getSource() == getStateNameTextField5()) 
		connEtoC7(e);
	if (e.getSource() == getStateNameTextField6()) 
		connEtoC8(e);
	if (e.getSource() == getStateNameTextField7()) 
		connEtoC2(e);
	if (e.getSource() == getStateNameTextField8()) 
		connEtoC15(e);
	if (e.getSource() == getStateNameTextField9()) 
		connEtoC16(e);
	if (e.getSource() == getStateNameTextField10()) 
		connEtoC17(e);
	// user code begin {2}
	// user code end
}


/**
 * connEtoC1:  (StateGroupNameTextField.caret.caretUpdate(javax.swing.event.CaretEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC10:  (ForegroundColorComboBox2.item.itemStateChanged(java.awt.event.ItemEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC11:  (ForegroundColorComboBox3.item.itemStateChanged(java.awt.event.ItemEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC11(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC12:  (ForegroundColorComboBox4.item.itemStateChanged(java.awt.event.ItemEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC12(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC13:  (ForegroundColorComboBox5.item.itemStateChanged(java.awt.event.ItemEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC13(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC14:  (ForegroundColorComboBox6.item.itemStateChanged(java.awt.event.ItemEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC14(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC15:  (StateNameTextField8.caret.caretUpdate(javax.swing.event.CaretEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC15(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC16:  (StateNameTextField9.caret.caretUpdate(javax.swing.event.CaretEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC16(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC17:  (StateNameTextField10.caret.caretUpdate(javax.swing.event.CaretEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC17(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC18:  (ForegroundColorComboBox7.item.itemStateChanged(java.awt.event.ItemEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC18(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC19:  (ForegroundColorComboBox8.item.itemStateChanged(java.awt.event.ItemEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC19(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (StateNameTextField7.caret.caretUpdate(javax.swing.event.CaretEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC20:  (ForegroundColorComboBox9.item.itemStateChanged(java.awt.event.ItemEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC20(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC21:  (ForegroundColorComboBox10.item.itemStateChanged(java.awt.event.ItemEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC21(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC22:  (JButtonImage1.action.actionPerformed(java.awt.event.ActionEvent) --> GroupStateEditorPanel.jButtonImage1_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC22(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonImage_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}



/**
 * connEtoC3:  (StateNameTextField1.caret.caretUpdate(javax.swing.event.CaretEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC4:  (StateNameTextField2.caret.caretUpdate(javax.swing.event.CaretEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC5:  (StateNameTextField3.caret.caretUpdate(javax.swing.event.CaretEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC6:  (StateNameTextField4.caret.caretUpdate(javax.swing.event.CaretEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC7:  (StateNameTextField5.caret.caretUpdate(javax.swing.event.CaretEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC8:  (StateNameTextField6.caret.caretUpdate(javax.swing.event.CaretEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 javax.swing.event.CaretEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(javax.swing.event.CaretEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC9:  (ForegroundColorComboBox1.item.itemStateChanged(java.awt.event.ItemEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC9(java.awt.event.ItemEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireInputUpdate();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G440394ADGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E16DFD8FDCD4D55ABF1536D4D4D85432C5C5C6E5ADEDEC4B969695326EE66F323BD4D454CB2DEF519B6DD23165DB3671EE97C4C1C5C1C541728FA69AA6A27FD4D4CCD0B4CCC0D4D4DC2998E10451E1E61A394020283F671CF34FF36F5C39B343607A7B597BFB7B74B81C6FF91E67BC4FF34E39675CF34FBDD748DB9EBCBDADBDCF9052268B52FF1B5284A1FEFE1A30C97C6FFBB91695BBA1D3D07C3782E81E
	905F1A813F85101775DAF4E62EF04412856992C8E7C4C5E766435F8B041C99B16F429FAE4A89013C7F78DD487B6E4BB93E171713C953BF5B118D3FF3014AGEB858A864A95FE3923C0426D101EAB7DCDA8ADDD905A1FA1BC761C82851EA87115C1DEBD1070AC61095931C44A8F810C70C442EF6CB30CB789FEE7D26BC6EF2916785A47848BD37EEDC57A9CD216C2BF2706E7192CD17AAD946E230118A6FCBE2B96FEEBDACEF5FF55E96EAD6D5419CCE613286F6CA96DBA2E6FB208E6EB2974E393F522FE4B162F2D
	66BE4BC17277AE0A3768CCFAE382357B761CAC2A936C06F44FF384DB14CBE2D588FFD78335BC47EDFFE6CE0DE4DB4029E0E172DDF9AEED8FFD0E599C7B1CEC7B24325869BEF1C47FFF513AA0F23910EEGE236EC5B49ED199847ED5959CFF8D3A11D777C044C1267B9BEEB00607510EE87921F67B6EE7B025B58F666C1A175695727653830516FF9E6DB7873320DB5ABE327AF266D651DC6D267A910177742044CE220C6A0A3109F50E7341D5E3777CB782DBBAE6EB477761ACDF5964B8EE31735495C25B7425FDB
	36C00E049D50F71A2DDD02405A62DDB9A59A76F08AF941319D92E23E9D91F85B89BDF00F10ECCF1CB6DD43377067D726C7C8BAE2DE10FD93DFA4F1FBF49E09DBB260C4EEBB9043DF23F8440BB24E6AEA89ED8BA4DD9BBFA13366E59E6736395C16460CDB045C725D69199A3684C6EFCD2FCEE0B634A448363098CFEAA6B19E82BC90A88CE892D092D056ABBC466F6F2D749463BD50762DA61D71E05FF10B4EAA6E68B3983B74D6A9569F6FF097EBADE2F2B3F7FAAB4762B22ED2D9C7893F5A25991704F1DF26973D
	4262D1730A9C97D6768E17E5373F625CB666E29DBEC27B0A6595D60753901FC0F19F854E6AF68F45C95A9F7226GB17EDF58895E762A3A0D3CC071492F2A5BC86EGEFA3BDFF1E1059759F93B2D97D1EEBA157440E57A7E48E8185G058245GA581253E4E6B782B4675436CC7AD0A7AE5329FB6AE02DF3DDD346A761860F2E76A549F56D98D3A63C63DCD10F804A69257638EF2531BC85B6B04B23E561B74D61DE8B01BC03B2ED78F0D4946F866B64DA3BCD6BD4DEDB5746A2100DE0B4075AEEA825D02D1E7938F
	D93A6062AAF3307CE5CD24CD746B8E03C6D0C07ACAA26D03741A3B847E2ECE64317A79FE0279C3FADCA20F4B4F1A66436FDEE85CFA6316AD7506CEE2064EBA485BE8543CA1780D847E5AB7A6E4C681557EA77C82553E893FC035C9502700DA5E1A10998F54719708BD10652FD05FC076E42887A01F37214F3DB3A1539F2860DD989B019AD2A6E426G857E8D743C87F2C07E6F034DD3A6E4CE86727DAFFEADF8270D37797AB9F78BA54F57EB36F9BAE6FE405AEF43876AB61FC4FD31G6E8F9486948B1482147B61
	044CB22096A08B10BFD098D0ACD08AD06ED44887EA8132G79830581458225G65FE8479C0ADC096A0FF20B020D82094205C3FC37E5F79BC61735C14B459DE92136176FF92AFD7F9A4D6641744175415968F29BBD2CF18FE137DCD6A07E324EEC83DA965C8DDA85324BDC439A8439D11F6C26A1B54BD296B6AA94357C15A88EDF76FB94A1036C65A96CF13B6C85A90E917D1EFFAEF23A7A26D1B7FEDCFF62D5F220AA12B7BBB9D6A7E8BAF4ADD6FA6EF3B743B86E83A8B9E520F96AA52F3245F158AECAD50F2155C
	B6D5FA1A640B37F1A35731F220F5C01B0036FAA1CB466759C09BD4B839062DD224495CFEB30D33A0647C0B6B1D50E2455FAB5C70AD55101BA7ACBEC8463096388E98017C7E4E2F41F1CD05829D1BF668ECFABE9A6D3342C0226F122F480C772DE662173EDFEF926B75963D298B7E30C9E3C1CAB329E3E91CBAE1967898728145493CE5A78CA4B644D31B67B19CF4A8C7BD1E1F310F646BC451EAB85EA76A8F6AC551E06A1665337791DBEC8ED3A21B646BE72D44579070B192A886FD3DE99FE987FC3CE9B41BCF75
	D9DA49C8AA0DDBC7697CFCB270CF456B65637D64BEEB4947BC7D94CD4B797B7A5BDC5483113950BAE7E57438ACE35A3F20DD31B2426DE4FCA2E35AF489A375C65A7D9C29BD4F93D8BFDAA8357545D2DD2C175A5CF229DD12BECD7A85393E10EB826957245F6D94D89FA47D0974A5528FC9FFA1FDF19B5A11C06DE80058D900820122001200F2D3611A8D5481648B9486948FA47CB75C3FG35G59010201A68125G957C832E45C0BDC07EC091C0130132BE01B191288D4887E89CD0AC5054CFF83DAE9AA057CABE
	46FB9B136144E33D07F8707A5979AF28637FA5EF7A42CD346EF95F72366E07D36FCB5D54BB9FCF8915DF82B1797F055898615B62FA0C3B3EC5FB0C3B29C5FB0C3B35457D98F6D70B569846726EEFA16D4EBCE0D20C098F36107B25CE3349242783B30A88EC5D6C1DD6620741E4900F983A3A7562C143E9BDDCCB85328E798C3DA7AB043F2B0058FD4D40CAFEDFD3F47ACEA16A7B6569DA6BAD01F7FF156E87B2646FE069175C57B01B42761331D6EF5477C220F61A7BCCA2439F2677FB92EE1BC631D5D9F6A2DBCC
	D76A681ADDB35C0F36C2C0F79B74462E12CE188D082574DFF643D9FCD2572F33175A86A0EC2534CECAF7125CDD644FB5056B56FDD5283974D7F242E0556FB1D97A381EB5075714B19BA6EC90E59B9C0AAF3F3865D73072EFEDF7D5FE4545AD3F1215AF9EF3D5FE6545AD3F0A157F51B4D765D7DD5C72B7307205EAD765EF383865EFE465679CF7D57E460BDB7EA6D67E111EC1DA7EEE33D55F8D32262E1DE623593A535CFB5C3C43ECAFAFB1087A5ED2728FD53A33C7E76A56F7D1C3CAF58322E4459E489F099155
	829BD7615A37502D9D9597570E4DE8478B87CE3B332372625AD1DE466D18ECF6EBC755C536231C5B9137422D9D9BAE329D955C8E7110DBBBB6DEE4BBAA399DFBE77739682F1BAE72F8D109ED7415032EEC283E38B614D7218D91592EEC58FC11ED5800B6A4B4743B9A3B4BAE32919B398D3E96376DF253C5EE171B301F163935237AA25BD14D6DF8C3F4EB47660BEC47E6EE47F57FBC63F6DCAB3B3806D414C9F65C1E95C46D78E6C71FA81ACDFBFAF55D7A72929D1D2F17321F963D7504595A6BDCF89D4D76D87C
	C9256A6F6BD4BA9BDDAB5DCA8CADE7F62EB75D6AE4E745453353EBB3AB24F87EA34D594E4ACB474E4ACA494E0796BB5BD9F56958D9D1A559793D061D9BAEA1BBB7C8F6D6FE67EC6746CB484E0D121DE3F21D6D5CF4895939C932F3EA35331D5517101D55121D3B731D6D5CFC895939D93273D33346F53E6C52B134320CBD8BE9BEC456E72204684CB820E4A036BED3F1006473E7A152839F98B20DECE98972DA52483A512679F90A35208C40DA257DE1AC3F53C37E759E729F73107F26077C858B5C67EF7710FF4A
	C37ECFBD647F46C37E3B9E72BF4BF31F7F3507FC1B077CBBBC647F5EC37E079E72D7AEF41F3F4FC37E998F7977FA48FFCEB3BF90FED9FE6BA22D7CD04CFFDEB3DF561F166FBEFF1D077C231A79D1D87E4B9E64E794384F2F504C0FC37D3F524CCFCA6357016587F36157267F21CFEF6A54130721FB7503527E205587672B728E6B0CFD723E23520364F908D1719C1561ABDA3557043F20FBE3CF217E352DB38432FF0869E4EB58E1BA2253E2B5746A2C0364413034C75532D339C7B5956CA77BD9EB5241CFA0A67B
	C395F92EC2F6A369BA4D3DF5DDDDD63D4D86F7FF0AEBAA11CDA7F1D9BB48773376C05A87A8B81D69CCC8E7EB5C0C6F9D64EB18961D59B14D955F58531C4F87F882DD729DBE4379A200A756A55F2CA14E1782BCD9992E781EC03EE26029F549E7BD4B79BA00476E12EF75B94E9788BCE1C03199DAFCEFA1DF7674684C22692E78EEBB4F796A01275DA55FFE01738D81CF00CB3E69E91CAF9CF8E2DC720DC73EE4604918610A2FB71D739581CF8DD07B8CAD3E32E99897488FF3491708FC31101F6412AFB00373E5E5
	C6E796E63A62EB1C4E79EA01278D481E294517B383638279B1AE79FE03FC49101F11650AEFA0936382BCB5AE7956E6F13EF6609101823298DFDC16126FDD64DBB2B3BA338A28F526965F2FE6F23EG488FF54957BD0B7345C0FE22CB3E4FE6F33E0CD95119CBE639627B937255909E17FCD7E4F3BE91F87CDC72ED1A4379C201E722CB3E3FA2DFA270243A641BB89763B79B62B75B192FF5B661CB427D6E6B917B04E29FE68AC2F7865F475B142B5C27DFF26B8F1A4F7EE8FB1F4D74074E161F7D3139653843C4EF
	8C60893379F8F2F72BF20FCD1D4DE66EB4506D25525850FAC879DC10E1C78F4D025F93862BCD5CE36A525B7978727DA1E2AB59FFAA41529871733564B939FABFAD3B4A73ADCCBB8768D438553C535C25EF00A1EAA7BEB6BDEC508F88BC8EE7F7AB777CC76614244FF6910794497F5CECB98EF11F47CEE7FB7BE7AD62F1EF01FC06DD0318AFE27E799C0BC24CD0403129087D853132B9FCFC7B599632A62C75DEC4A78DC4E9F71F2134CFB4104D34BAD1C71728582847F43ECC77B7917FFAC0A7FB4FA041C8466AE0
	C8C7G458231BD4F2D0359D23C13GAB1C4B67937FB4AA6793ED007BG05G317B224786C93B73F2B1D62A5709EB6633F620DADD63F5B5F6C1AD6F733F38C528B9BFA7DD6B5D875F1C7C7408392C0EA64F156B2A63D9F3FACF8CFFC7A37FB4772FA4A7BA33AB077BE7B82C76AF887222F2F8DCFE0FF2F100E567F2398F7A35646AF3395C79B3DC2E8DB0FF147B38D9CBEE924AD58EF13984407266F139C4D1CB2EF19E17FB9365BAG8BC439BDCDDAF231A8F76BD9AE1788581279DC6E3E73DAF22D73395C3EF3DC
	2E8730E0146BDD21140B1F4F6404853C3DBCFC0E3497AF57E625FD79734F73B273C0DF63820C4D912DB2C7AD60367E8E6582810BC539FF54EA49E565F139538217DB82D8EB9E3619A6ADB9BF14ABCD63F241004523DC1426DC6EC2AE779A4A9581563E905B1A26DCG4A5D1C4E654681B699658EE8361902C53CAE7EBBFDA4FD1715F9F49A76A75057350817F92DE67B8EDA44ED1D13416542GCBC239551A369666F33989A8D78518B19F6FF7B45BF7884A75CD67F291002520DC2C28955362829E1B0469A3EF27
	55B3F819B520CFAC60E546EB1699DA40EDCDC639A8402622DC2926DC59E2AE971C49656A819BDA4C65FAB46542D12EB50B4BCD82CC78144B5D36CFA9D77DA9136B78942F79D995706B7D52979F4F9366113DEF97305AA54539E0A637DF845BC2517ED559DA76A7227D67E70E54FED6EE8216BB95F416FD464B7DC6335C1E4FF83C7DE7F139A14042D12ECED3AE99656AE7F3B9E1C9F4E67592AED75327A5E7D9426526225CA840A2D14E522CA5B78565C23339DC56D23847DC4A6522B54B33AF65F29DF3381C9FE0
	93D1EE2EE6FBCAC5393C39DCAEF7D9F4E643B2AEB727DFCB4EE79917FB9B6582G0BC139331A65E5AC677B600ED4A86742D113573A1C8B97ACE7730912656A3930DF9B19DBB5G5E3E1C4F05BFB9C4767F7139708118FD4275422897787C760143247D1D528FCA69DF9EA665527590016F5BFF7AA8315D82BA7D00C200A20192300C6AA39E5F9F5CE5F7737EE04EA2EF5E83CC05F2191C3FD7F23905DC6E26FCEF640AD04ED4600DDCB54A3D6B15DCA34A7D995FD16CA8E4F5ADCA3FF40E89FF878105A9B0768EE1
	CBAFE903938167FB6999FE0C62718ADC9A630D3C4DA6C3DE4B8ADE7EBF8755F6072F104BA2942BCACB6F8AB849152A52D3D4F26C9A3C2A185CDF52FB8B45F03FE54BB73847022D435D582BDC074B7EBC1A3EABD1863F751F73FB17B146AC491EF640D8BBDEFE0C688F00F49850A420C4202C155119C5C08DABF9FB7E49912DFBBB47766C6A46CEFE070445E269691145F02D131CBA06BDAB9D65D8EC04036A5878GDF88D044CA9E1BE0FA4FCC2EBB31ABF9DDBFB3C2BB7F6C514E2CA2C7B9E6433A81FE9FD8D844
	ED98FDE6E4B65C68A4273621CD53060AFD5C868B5A30F9E8E4B6FC6DA42736E11C268D1F75F19B22500637C7E843479EED182AE903CF9337A1F79537614E33A33361C1A7B9358D8D2B34EC18FC1E5B5001B69CBAB7B29BBA1D6454B6842E523A7EF49BC97F57387E709DBC122DA1ABF87F89C3DB8B4E0F4C5655CEF2EADB13B46375D99B0F17301A5B90B3C29BDE76E8C375EAAD9BB654F19BDA50869FE1E4B6DC67A4273641D75306E0EC3B41E8C3D55A48EC5861A42736A1DE53068F51069434A1E904B6FC6051
	0662AFB42F274D5C065AAF388DC169A33361FEA7B9358DF6CD9B2E92098D645DA4FF34617BE9A3332157C9CEED4394CD9BA6E29C320B398D8BB2C6E6438AA7B9358D7545DAB6FCABF29B5A510627C6E843739EED88503461AF58A6C35106B353C7E643D5CEF2EA9B92B5ED4824E39BD99FCDC59B3E1AB1B29B9A1D6454B6F42C5132A18747D77B9AEE43FBA334C14874E4C318268DFAEC8F135006FB1CF48D4F06F00FB688DFEA59F0875AD070A54E6F33C6B83FF712DB26CA3728ECE063EB4EC1B28F5798DF592A
	8B5A9A370FDFC7FA5056E5B3C7E6EB09131C5A56984DF835E7F39B92510657C6E8C30AC79B9A56EA59F0995A5031165BF0732C11599062A42736E122268DF634A181ED78E67648ECE8F312D35BD0DB22E5032D0F5B50D642ED784788ED484E76E4C324268D77B6F39B625006071CF48D4F06A80FB6D42F533261A30CC34BBAEE4309B9A333C1F412D35B902EE943AE6C1BB1E84327F3C7E6C331131C5A0632D2AD9B6A7B398D8D255C0677C7E8C31A53B9E1EA9BC2B5ED8847B8CCAC656B8B5F37932CF8FDF4E675
	FA3E1610F80470707537963341C45E3DE3F9E35A485EA3335550EDB0F16CE60AF51A2D7425DB06BDF354757B4071C7355F87FE7528767B4009C75D1FF911FC54557B426CFC0A5574F9F2837857854430FB9133A3961A4FB1BF44C697F0AC9831990BB9960E5887749971A4C8A7A216E0A558D4C8E717F1ECBC9D534AA05D00584B340F98A1BD8A31FC834182A19DD6465B4B61DE02CD04F4A2E2BA0A11E749BE38AE12E4F4F56E85DEB74B647611D86658D6BC115486FBBD1521BCE3435579B62EE8A915FFFAD18E
	2DF71BCDEF230BD764693C14772638D050F8271B3C5DA470F7DB468C4E14F8F609661D65829F535FDFC3561BB446F44579073F6F65EBF129E57C19FFB2DDA72FAA07BA826AAA47714D487B63D039F3AC7D818BD1612C5D2EB9663A0F149D536EA39B0F113EE9B377D9BB756AFE306DD88166492BFB64319A898B6359CD65C51D35DB6F540F1A28BC4BF3A5FF78182B3E46E25EFADA99F332464E567872CC4AB53E08F2367E19C8FE4B799ADF75C1FEFD4A2D60B18F257BA9C4C87B8105D470185FFD1847BC3242B9
	663100A5AA7029957C19D5569925FDD5581EAB86383E6CCAE7FD0500D581B5C8F96D15DCDF24033E8D28EF53BE2E4F2221EF94E001C021D2DE946A338CA975EDC4FD05FDDCDF1C063EA440D201F22BD8DED19557D7F4D629EF936A9B5D4475D5D7B96BEB842C83C81472FCD1DF3C033EEA5477862E4784E9688B83ECA2D03C14170C7A7C4EA975EDC6FD772D607A048D5119F99B9CF596C33AC605B1FD7B4E4FD27679B20CDF9B575782F2DDAAD9BB247D000295B853B7CDF050D74E75ED29637A42C1E612CADF82
	24D300B2B62A75BD62282F026B3B9B6B23GE4CAB6BA6A2B05F4ABD00F133ED3E98E7AAA393ED454B784B27EAAFDA1100EG0AF15237BC5DC1DF95760FE62EEFB248CCD1694B5A941D398428EC13DA5FF3694A7A2D407A3DCEF4B5FE54EFF2EEBFED92E654487381ACGE81CD359B7CFF370E583AF7BE974A5D2C3DFACE009C0D3253C6CEA5ED63F49F05037116BBBAEF2FD05554E7A2AGEBGEA1772AC286F9F0E7AB6F1FD6FE25D0D52509788D8A8D0141497077A9E1A6E202F9A6F9F7AC82C13B4F425EAE01C
	F2B7C7E796EDF64C2F06F4A3D047E6F52C7BE6B8143D19171D0757AD91E4FCD57A02A09D86B451C95F1ACC253E8A6C47A7B15671A0132C52A7EC01EB85D07196353ED79C75E1BF8EC1FDB5A0533245D1DF97246DC0FECE7A46E4B96843FE7C52BE2DF69D2C529B3E45B96E13D4D88224D300B2362A4BBEB45321EC6C733AEC2D328B36BA6AAD596ADCF62D8AEB05F48F5010D3590BE7B9140D5707ABB54B76D7698D51A8BBC20545C0FAB2509427327F60D8B67667331AE5E755B86ADDD263DCF6198A2B07F49B10
	31C6DD76E5339D4A463EEF6F53AA5BC725B7C0236CF1AAAC925231C009CEE5EF48F6A89B2F93214DDAE5CFD5694D5E26B11FD1E1D510EEGEA5F26AE7BAD4732711A728FCD3FADAA3D23B44A8ED4E121100E820AF3AA7B36B98EE563B5659B4DBE1624521B2AD1F66ED70ED891242B019A3FD2173DFF2E326CCA3C7E6C51BCD330C325D77C4A39ECDF95968469B02009CEE5FF1963D0B6DE2B46EB7A9D2F521B2CD136305D914B03F4B1D00D82E7737B2EF6324F420E699E1AA6E74E30FBA7FD9D750F5EA36CB2F5
	C90B83EC3F7CB6FACFEDG464EF40EBDC131FC40EEC36CB774BE7B698CC1F88331A0FA1F3D9C8A6B1D46312574BEFB97702C1F46E3B3271E5C9FD82C7A93FA2BD55F450E6A92FC37533D0F75043F857EEE5F4E4744772DE4ED42289BB477011D5535F4BF1F0D5F0B44GDFA2D0B66005356C1E0479794B81326EFC422A6B055B1B0396FD2710D74776BBF2D99F608FG8A870A831AD24B4B7CDB9F1185C1C3EFDFAF35105977A4DD83EA87BDBDF51C3754C0F9F5F6956FEEFA7F9FGFC41487B1F7D649D01BD64B6
	51F04250A91DCDCD7629CBF35FD3C457B787BB2DE62311E4C86DA636D739DE94837AA6574975BE254E393D303DB79DB9645EABEB875BFBB39371DE0A97A9F036A767BDFAFFCC5235109732032FE5BCC07735E46D047944CE0EFD594A57C12A915BCB5FF1E8073438136F5D6F5EC56E77B56E5595DE72752DC6933FFF745D496F9F779EA0B6A5C3BA239E6628757C7EF15BC1E5DF2A823C21DE0EC3FB3DF3CC6875CD839F85D8208AE7F1CA26FB57C36BD91C0EA23E026EB16F59A563ACFE8F51FBDD12AE5A8DE3FF
	830FCBA45D7B9239976E1F76F22CF49D0FDFB2E2820DE9CDA35CABB4F26C7DAF89568369A1447650FDAC7E108EC5EC7DBE2EAF8A3127693AD4EE93DCAB1AB8F60C2EA957C03A8531E00AF5C15A0ED8B355678769F108FD5D474B08C44CC8E5331B21EDB4F32CDE64E5D4A3461E53B6C23A8331CDD41F88E9FF44ECCD3C0C904426D159A9104E5E47317B9AF99905083DC331AAC8B7A096C47535C35A0E58A29BAF438F31AB0E90AC8152D390ABB8474B48EA61583794DB8269B244D269BE12FAC8F7A07667A33C8C
	9131DEAABB91528908559F61E524A0F69545B276C7E7966C67D8945D7FD182698644DE2E263EC15A0858EDEBF839BE08AD2CA5D8AC2413905BC477F22412B28EF0ECB7352F8452B5087D67DE2E2F85315B1791AC985291085DDB4B7D08C1ECBF5D2BB1995229089D2763C46EC12837039CBBDF474B28C26CB94AB78A52C1084DEF62E504A196C93109101E0C589B34FE27C0BA2315E357D8F89985080D236D2A8752BE0899300CG449650B6BE8E529391BBCBE563A11D045898B3AFA395318FD83BBF941D59F508
	E3F7E099F6447650B27CA0BD8E31BB29ECA424E3906B41B2A6A3766FECCD7AB0340D43E89F16510ED8986533C05A8F317F22D8B02443917B0A764BC910CEC46CF66C17D3911BCCE59B0EC03BBF4231AFA81F88E9DF44A6D35F02A09D0158D3380E9E035803D4F6C99B3403B60ED50BDCDFC31BE36C5BA1EDC1EC10E223A09D0C58A7E8F3B8E2A64A17F19446122358469BF999E5082D25327510EEC3EC86754388E9DF44BE42EBC990E23DD4B69952997F6458A49BAF23G31B9541692C857A2D6CAE35F8AE9A3E2
	03FD3C5EFC90FB02E281108EC3CC4F7A822463908BDB446DCBC2AC1A72D59F03BEFD0CE39F23FDDD082D25E558A19D0018194A0E03F484E2CB7331AE91DBC6470FA56DD0176D0EF5C46B92314BD8DDC25A0E58F2DA069F240390FBECA1AFA38C312BA91F70AD4474DB0E7D897DA8C16CB1DAC6AD245B917B0A4ADAA06D031800318AC06CFA4A178869D444DE44B2F23F4378D1FF0BA0DD05D8C78BAD9752DD087D1AE2F6C87BA2F68546AF88310F68DCA899524277786C0956C7B624CB903B02BEAB2F05F48BE2C9
	94EB07348FE25B665076826990447E2B1B179B0158EBF4DC486A007E514131445984AB06F483E263D89910B6A2B60716E107F490E247A9968669A84446E339F108E553F20BF4B0E75061F50D16DB8F69AE446E20655AA16D0BD886738D5291089D25D88C2493903B7D84AFB7853131F45C2ABD8EF32E639CFB0136178EC87BA0F68B6BEF108EC16C930A05C1BA8E31D6FA0F1084692908993671F233BBB176F9B4FE1036A0B60BDEDF06A09D04589FA9968669A844AAE9DB0B01F48AE23E944B680A4E4C6B423A44
	76DC0CD897EDD7F6C87BA156CE7D8804F484E205540F98C8A7A0B61A798669ECBD4EC1A8D68869B2447E381D17DB0FD8B1ED6381109E0758B86ADBB8246390B3D2BF12A0BD9531E718EFA7400F939CDBCD7BD18DC9A3F6D381AF37833194BADE06C1FAA2E277D2FFE3A11D0258A96AC7C6B7442F1BE3314CB7C857A3360A4E3D5BA05D035855686F90E259545F98C8CFC6AC1F7A118C696C9EEC6394AB04F499E2354C379EE57DDAA9568118857936AF66650EC26C8FF41E938769A444846A47149ED63FF9863826
	888D1D6452496EBB1F3196422FC9BFD008AFFD559BFA75A672F123624A6A7212424A2A6AB56C1D21608165BBC355334ADD3EB354E610567C255FA523D6CA77C97E36ECC9A68472928C7CDE313C4361DD8CE28879461D21EB072E3B112EG307B44F8FA7DA572F9A779FD628C1168EC04F4975050C97E0E13FDB5FF4FBD741EDB04C61FDD1A5F361B5CDA129EF0125999A17D12F71CDAD672775C59BC0E48CD017C12D3649E3F4861BDB0924B7169ECEF9C4BBF6C10CF1E3B12FBE1B95F57A11F58CB56C9647CC79D
	72C90C56C8724C375F2F623E257EFE1CE07CF5254B6F76092718CF0152EF58011542288FE32733365023175BC236E1B8ED0149DDF3C216FB52B89CB9569E5F244F66E3411644D33C0D3EC77BC11691469DA30E3387F87B2EB5625E239CF2EE0FBF2443006200D2B04FC673F2FB5939B6E5705B524B73264ED52F3D91B92DB582FF859E2678BB4E85BFA1D6463C9CF599B3DD703B5ADB116902DFDEDB1CE8F43DFE768ADD2731004FC3C0EC3D2B2E152FF70D83AC92A881A895E809092FCB9DBF243D5EF51A2E6754
	GDF030947F13F097BA88266EB12E392E4F29D1FB00D3C0900451B3456DD1EE4EBBE26E855776E1E26F82A82E757137D94A769ECB3DC9F4D3C7DFCFF103733B84446D3AC9152D3912B26FE123DBACBAC9CFB60B43D87DA8F6D8831D0EC0F75087D016AA3FBFFFAAC385777CC987C8EC1BA90A882A89EE8AAD05E8FB03F81EA8532G79810D831A88148814E10D4EAC822A876A8272858A850A851A82D4E00379A5D0AB5090D0B0D094D08250D42082916E5D01BA00FC0002004201E2011201327AC0BFD0ADD0BB10
	9DA8GA82C0F5B7E459031BD865249C0597D6C6C2712FEF6A6D2A37C9A017C00C201E27A5919CF3152D9CD355299CBC55219C78152D9C5649C2264FEF65E8FB9D3071C3FC34E884A9EG5D836CDC2198691C9FF296D1A3E04681F62ECE15F49E8EB96BE609F4C60D1FF4368CB9B7061C8943EC0F980CCA57EEFFA42EA4B638462E781B44037CF6A83030BE55F3A5AB2BC792DB92E70211D8127AA37177911D5BF73BC28729F7D22F41B699A3ED023483D2F7C1AA79F08DFDEAA26D0034A172F72B4DBDBFE907247D
	F852690AC87B9C52A8237A0761696C125A31D6DE01875B3D21DAA966246FA9F152FF6CFD4E6510BEB9EE18BE448E23CE88117E142852696BC56CD9DBBEF55AD5DBA6F38865F71276AA7E5EA77D56A93023AA7995D29964FBBB7CFBF0CD827B1E8F59DF24755D25030A3F4978C33E75237CAE5CCC014DEF487E1FDDAA592F0761B3B9E3E201743727EF7F1071F26D85349132EF36D2839F6E376B48770D3EF011376E826CD253FE69D77D2DB3B287BC2441CF46707CE16A5EB3CC3EA382FB0E2844D68DD3165B3EC0
	F86E306BB94BBC3A566D87577AC0202983845B352E5EC37DF3225F148619F8201592168CFF737311D879792D5A731B7574F9CB2D9D469BBB1F8B4DDACB7AC627595857EB32C9FCAB5672393F9D79BA86DC7BB4C86F91FD01B7404EFD7AEE1FA71FB295BEC5599DFD0A332BFD1A5E2F6D53D2FA2FB79978135156EDFDC4375EC40E2A6C1278C6B5F31F8A86B95FA34D4E3E7F9179CA10CF3F4F356F6768BC3E86F89B865177BECF3E4FD478AE8EBA7A6EBB28767D0AE6ED5FEF253686GFFB09043FA713EAD866D8F
	961D7DFC8479A6A3DFF31FEBBF3B699AC28A7026221FD7B7F972F336424F62530EFE561CD67B7929286DE785DBF7877E56535C4FE79B397DBE27397D531B1C7DDC52447982106FD7CD2E7D0C217CA1409BF69A7B274D131FF394FEA6287CCCF1727316A35AFEBEC42F8D29401FF5067BD9F70E5BDFF5065BAF1EF376739A64EBC03E8502EBBFCB843A2E833CDDE7381F9F9C7164E70E42CF7FB30EFE061CD17BB96A1C361FC15456B0600FC4BFFB0FF07B13507E60A39A6D9679D2116F45952E7DCC214F913307E0
	BEBC047B9D2A497934A74CA61171E4EE266B2E105FB244E3913E46DDAC147D175E178DB946A2G523F7F6413CF64D81454EA47221E2E478683FFA85A575C66269F52F563F860CDC47EEF4FB97AE323714DBD8B778FE739BF7F3D5713BF198AFF9A4FBA7A53F1D66D4F2F17E97B73877A2C54887C76333CEEE3EBF91D051C65B67754397671B27AFCB482F8A7A27FE001230F5753354F9448CFC59FEF2E736463CC050FA5679CFD2CBD277671AF855ABE2653F548C660EFBB47FD5C0A5719D167384D4F39394EA4D3
	7EC0608DC17ED41B230F7369F5AF9672934EF19F47DABC79B8DB61E376F9C79F8B4F2BFDFC5245B577C5762C8E782B4FF39FEFC09F3B4EF31B3FECF66D63CEBABE5901F7947287080EBE5ECF4B89037C48735C47F1E6CFBE4ED178182C72D170D17BB847457E26D56C7992709778F09FA7210F75BEB877F16363A075318DF83B10BFC265639F290F7E109F6443FDBC6F51479C050FB1BE0EBECEF67271BD9775B80B7A18CC4AC59F6FC19F0BAE63B6BF3D1C145BE56E03B9530E3E93A748E782380FAF61DC219A79
	337B1C2F4DAB7BB8DFA3729DF2B327B0D17EF6606D390C4765579E67947384795A9BF019E3DC46DD269E03BEF49197764EFAB870C7212DEF094E7346960CD5B272FD6826BD64527920F0F9F4E676655C27D7C5CFBEADD078D4FD3923CF0D172BFD7ADD1336CF2FD2DB5B003F6BF2DE57BA2CBB7F4B65BE68DCF7BFC73E90647397DD7BF99F658F875EA874F3D133A7BF97AA7CCCD679A9DC2176F3340B3A3B0D161D8D7C85D7F0BFF364FEFB8537FF0746FC70A87235A15FD2B7753911766F9E60952F60FE66FA2C
	4FFC051F41D7B87A996E6467A897754976F2C581FF8C7A79B7FC96B4956DAF52284F2DD81F5923B85FAEFA9D547509E69B5D0C48F93F45FE3BE494AFE7ACE2E5A87F3C1B3E7C8E652F875E96649FEAF23C8E3271E30814B10A477229C51E2E03738479BA98B14AB116B12354574117DC4472EF346CF860CFC49F0BB0C63923314D38717198753188F84B107FCA150F527EBB486F994DFD2C4A77646382050F01239DFD8C9D2D76F143BEED9F1B6835A78278A70E46FAC49FD35066C0B77D7A17EC3F50157077151C
	FF234A47C636578A729B2E64BEBE3B50130F8B95BE5A2FF474516FCA350FF73A284771EC5E847CA1D7F29F27E21F08C51B1FF56363DF290F09401B027C07D4BE1EE2FB33FE921DD97C936EE33E47361A2F70316DA70EBE9AFF2276719E97BEBEC14B36837F281FF09F852C47301FF01B6737901BC53DDDE44FA79F6B96D077C04BA2786DB1DB8D2741A71D119C6F57E2369958C7FF247E5842F5CEC41DB1AD0EF1F80D72CC01FC4117476196376DD9F94FCFA8DE31DEC52FA720E721A04F45978839E632673DD7E7
	256F68B3DF369AE4DFE27B96B878D2E7B4F41B483972129FFF41EBD50DAF776316EC4758FCF7D25677C9366758FCBA076BB4224E56B90E31B9C9F902A0FF9C46A63B47D3EC1477D96A5844BB456623B667585CFCCA766563596EE333B01B7B1108FEBC290A4DF8232C2FE80E6758EC475864DD0577E72A58DCCFF96AA13F65AA9E1B58EECF31D15E1F29E363F315BAB6ABB5E273DE2F6C4BFB9EE2130D3171C3BF9ED6456696332C6F33E144E6A346A692F5DAD431391272A41338E0ECFEFD42D3EC1477F56A5894
	DF2D0E4D78DA6758BCEF11FDF9DBF49F1BCC6CD3D5D7F3BFFE5967981B29BF487A9675FB0ECDF9BF5EBF224ED37D0E31390C7284C0FE7055BCB6BE5BBC45C6F9BF280ECD2CD3EC3297BA472656A67B322259FDEC36629AF1827A71C633E3ECBAC5D95FB77BBC47C63F8F67EB57F01DF76CF30C4D2F59DAB364B7DC43E373115BB10944C6F99F290E0D7D9AF5EC4E181CE373EFFD32AFB68F5762EB315D0CC2BFB675BB46666DFED9DF50B05A4DA358EE42D1675FD46DA613BE03C8047C940C4D9B5BBD45C6B937D4
	472650CF9D1B6D794E3149354B3EBC69215D3CA4BFDB7063FEDC314FB1B61503323E24E1341BE9B80637234EED2AB17CA06571037CC0BF9E1B5082CF31D14EC955311964941BCC0BF3EC8E1F16FDF942C33B0947F69307FEDC2EEAB703E7E4FDEF8E235D248FF01D9957F21DB5830E31B9C0F92AA03F76DA9E1BBBBD369B65DCD69D9B4B35CE6314C63B899A12FDA95D67BEB68DF8ED98C2BF5ED3351BA74F4A7A0E381D7BB11E2BD4ED648E5AC6C2C1FF84466170E2CFF148F79307A427B8A4EA3411574E49F667
	773B0A835B7F7727E34A3D183937FC161EA6E86F7F1BF2AD5BFFA0DCA76FEDE467C7A553F7172AGEF390E1F9FF5EDA7F93EFED8F752798BC3G36D84D963DD59CE4A87DB21E34E761E61BB7E70E93125E619F215CABDE4B31FDE42769DED14BF5EC9FD99A62D7D0FCC801337DE559A25F2F6A8BF949577133371626113DF5AD57C7E79A01C6818581C58245DF4FE379C2E7196061DC6FD63325D15F2FB7AA0E46E27EFDACFA6B9FEB9793B2793E5070C7478A91D73E1F666A5BCE4957CBE7E478335F067DABA94E
	7C8BCB2767ACC1DE9B5090D0G50B820A8FF6E5F322E92669FE98EF522286B6C21DF38624E110FCE49B0F99117356DFF741236FF5CEC2587983177FA576199C3F120BF9928F8CCF4E64D98762DA5A6B7334579FD60AB77F339D660B582858305CBF22C6F3EF340DD5F1D262298101DBC0675DD121E82FFFF86FF5C0BFD73272BC95F241FC3219F31A5A7ACB56A0E633B3C174D4FF74A47A365A51EA579391C27392F77385ECA9530BCE16BFC473C039603091E4FA6FD9FB4C739B7D8380179DAF4837F7643D703DA
	795518FF55AEE5FE23146FF3835F9FCE2736121D4BDB49FE9F97FBFB4BB7141594D6142F115E616DEE45674BB770FD52B7352A77C9136BCB294077B9BF552A5EA7DD6E107FD12BFA1F743AB4E57E5AC36AFD521FC9794C17406932AFAB8607638B5B5BE9236FCA44009FA9B7707D1EB1944B38B1BA3360C60EBD341C6E3BBD8CED9531FFD02C8552C6449AEA787ED19F446E276F0144C2BA69C63E0F713787C870D3B17DA71AA65F6EE069A387BC1D5DB6D2124B34DC34B2C8BD948610FA8BBEC87C4A8B60FDBB76
	20F35FFE933FAD5095405E759F02DF7FG76AD93E9CD1F6E5F9D87D8F8G47DE207BF7A7C3BAB9006F057E4D812E2B60A6E81BC00DC0C6A03F1B385C87F4BFEFA824A3EE42F3F9DA487D54813DC58F3D11F5D2ECCF13D61376FAD8E7B51027A4BB8C224DB13F71B439CE9C508D30AFA751B5E965F56249B3F89DF138C414CB79EB44398AF9AAD94EF55FC04FC158ED366A3B6192E3A21F31B6DB79397165523C3045C93E8267C5EB1D72AAF95E637DCEF9D5BCAF4A6E143781577056B965ED64F9FF5E236DEB851F
	43FE2D1DDFA965D757E867D7C979A603F67E86A9DF6C564E675F348F9CF0934F8A467314518DCFA56379305A8DCF9563993B5E8D4F8646F373E2B7BC9B994F69ADB9CE6D23CC7267C1FD1EF65BAA136E5FAA973BE9BFE55806DFF597174D0CA7FE1DF6EC79F76333CB1C5A45E62E3F4D6214D74D730E4F5156DBAD65F7353A312D1A71CCD96906E793635963226DEC124A09DC61E463A6EEE35EFEFAEE878569E73CA43C1B1E55780D627BDE65985337746A3C8A4CBB3DC51DD709F9DFE72B732AB06F7CDEF55E86
	4CBB56244E5B08F9BF5B244E5B04F9C3EB55F95518D77E25BAEFB3666D314DD57BDE4667AED78C2967A6743BE4B77139C9D129D67ED44C5F5F21151FFDB34FEFDE2B15DF0879DF67EB65D7E17E65FDDA798D187FD93FD6FEBB66BF2619EF417C5183DA7923B0BF2EC9ABBF90732F544C8F457C67B47323B07FE64D7CB84C7F22D9ABBF69E6BEB70CA2D384FEAF3F2ED0F0BD1F2AACA3932A0AB54B8536FEC27782507FD236BBE3FC3E46DE5DE377B27F114D6FE5167C7CD6217E457753787D34535C65E6F68F5378
	D3799EB76344B352BBEEBF4C12EDCE7A525D9C3012194C471C3574998D5A96B0DB56D334EF243EB3DD0FE44BBE574F157536B48F5F3EDB1B496476044EE8134F4DFD235951666E9CD9F7CD5F0559FCF52EEC738373E43D1B45615BBCCAF436790F22234D3173E55DBDCD97E6737B8BE41B8FAF14755E5EB8FC1B5FEAF4363932495166B10BE45D33ED97E6F3F83EEC730B85325EB96706EFF35BB9E71B471EF334796F0BE55DF1C7AE4C668D1F49B637ADD1340DA3DE340DA39AED6308234DE7164A3A7FD46DCEF7
	85513DE10DA4573FD2169B3366F3355CEE33C9AC7E3C4B20B31A3BBFAFA98451F2B0CBF06D6F4F0AE4FF63D6493A3F4C9F3ECD9F2E1665363A2DDBC7394B5648F2AF6F3DF0DFC23E14FDF9EA2D2CBB28F6B8B6C97377DAE55DB1DD696BE4DDC78A066F5F956BE5B9DB5D057BF7CF196CDFEB052CBB33E9787E9DE8F276EF20D2D18F36617B973FD916BBEF39F07FBE5EA27B372CC6567D1D977E5D2761DF5DB6D917556DB55E513FDFEF1765C61BAF5C3F78DA593F0F6BE45D81DE7877E78D7F166D14F55D6C05FF
	8F6F12655A7F857E3D34DB76EFC503A266DE7877F8137335B3C5E32C5D5267F8BD2D5FA317F763850E355D5F48FEDC3DD7563B442D9F0EE3C037C6BDBD50A86B0A94AF4C4658A65946771BE53D6B3C184358B5629A2D1A43ACEA11F5CF394038EE5EAF5B5CFEC0567B6FDE4CE1D6EB348F0BEA8EF37E202C7B1D8B1C43BC5AAA5B7C4AA1D96F63EE2F130EB6E7E94479G46D9DA5769F366995F675C06263749B67CF3D87D0A49FDFDCC168BD9F461FD7DE43B9C17EB3F15F5278CEB7C10668A2233FFE15F493A3A
	3C702FDCA74B4D4B3FF07FDA0F4B7E8DF44A3ACD433A3ECA7527615FADDD322EBCAF7C7BC0F1CE49038BAF5C3F45BD32FFB50AFDF9933D283F9C8D7F8694FB72AA3D706F2F0A7DEAD37E857E4DB5497E9DD66C770A71423FFC0DFEFBDF8BF977DCF18CEC69C1726FCE3349A66ACC222DF4672E6656DD87306CA7947B298672D7E87BD5E78547402DF2783FEC8D4A7E07D516CD6B9FEE39523A569C6F6C5CF6DEAE6B2DEE6F6C245BE5A45912EC6F6CBC6C251DAFA956C09E70524ED4453A47CAAF6DEC7252CE0BE2
	AD6406935E599921D86BD856671D1D8D43EEA7523830C0AE6B5BED5E59F9B2CF16BD506C1D1DC37B3C3373F70AF5099796F9E767DB7932EC0817717C2317715C7529DCD674F66F6C7479CC16CD71B21E1FFAF9DDCAD02CBFDCD5601D1D1FAC13E55F75B21E0B873C33731195F2D9673C0C67A71F4B325FFB595E0EA956C2AA97FBD76EB93A9E42761F2C7D027C4D7619FCF51EA8555C13D4F7DC7C86F46FBBFED25FA9366A3AD166EF674905843FF54536AAC9F9D34F138EE8B099C4B043F01A1E45FE9098CD5D6C
	79378F5D2F4A7E3ECA7177FC175F3D79D790ABE36DC5AD03793FBA4D75374B5625E9FF3B2CB2CD7B7BFE1B53DCFDD30C65575132ECFD47AD728EA7DED6C39A19A71887685696295E2B0BC95D0C7AE9F4E6B050C420F820641F621E2AB452B8215AB5769B6D6A6A567306494B9F1F6E5A572874C5322FC42AD34F9F665B387C53741BCA474D22E86EA57AB97E27F4D2DF2259C2C10645516FA5D98D5DBDA2E31570175369FB607A9394E67B4A8E197839E5D901511935017C9C4447E711FB9BFA8EE227393734D3E7
	B2C11751F77614F652CDE4255DFD0652BE51E05C322555A09A75BB68AEAA367F66B63ABF05683187723391376FA36504C1FA9250E4A0D67EAF7673FDEDD381AB7B991E597F79AAE57906633D25FD7D3D253A63E2299E3A5D16AD4DFDC6E32334CDC35A777341FE3E6F2767E73C5CA2FAAEDBB024A300E20106779C084FC3FFCF57B819CD6F1FF0714DBF7A54155970EACE16540712FE463FC957B7483142DB38FF67B62ED67AF74A58DDFA3213346852936411AFA85DC9F6DB312DDA12FFD13B381E36DB789E99E3
	2B377B7358B571EA9399D47B75D6515029B3328FA16C50D9DB4CC6C36720344775EEDA0FE471547F963E8F65F513731E393F631E3958DB581E39A478CD3D05FDCFD2FAE7E9B93E1FF2AB57353050757BE02505043F98F82BEE657B673E2F7134FFCE790ED3874809374A7B67FC616F2502729D4F89F95A6FFA3DC477C385GFFB05AFAFA9361258F5EED4A6FE5BCCC57AA58F342EDFA65DE5832B39F27CD93341F93465C4A1E8FA65C2ABE17B4271577076C20684C7AA05E060E601E3621A05E36C7D35EF0C847G
	A58671E723650A357331278B8557E7E2EE28ACA92C5CD4A61D25C91B12A4F767016148B15B5EBA40EDCB8D627B6D728F2A775B3D61F0AE691E036A7DF6C4DE4EBFF3D03D5FEE02037C8387557B6D38BC7365FA451A7F750343776551A15E472AEE6331BFD64AB1A3E23E9D9C8BC1EC74DA0EA5A0F60E1E41CB6C4F3B1DE36C8CED02B5A2F6201FE32390FB8F31C844A287B8B6853159780D6612BBB876F8936773C70C1D6DCC30C9087D21094B8A419C7B2E197B51954C77991FADA5FDAF885291048FE88AD0561D
	511905C0D5C08DC06DC0A2109FD0B0D0B850A420F820E4A0E1AC9FBF9BE7128B2B2B7D5D52013BF490356A145F8E2EADF6BD0EFEDD6CF99CEDA9A63E69E17CEB9D34C85FA3BDD4CC3FC7FC6204CD0F6375BF0BF3915BE363BB7559B577184953B5B7EF2C63D9FBCC4E60D1CE7D8DE6A6B7164A150D9D5E79FD75404776127F0A0E39EDE355FB4CA3A95EB5D63D47FC57BEFE6D31C0DE5CD8BE46046F9F595E7868914AFD6C359C73AB100E7555F7297D3D136275F7297D7D72G77378572426F627E3E6E70ED6C02
	909677926937B644399E185C69C125DC2B4457A37D8E39147B6DAEAE672F419382D8048A171EC11848DEAE65BD11620BC62507F79DE85D33332E717B03BB8F6CEBEC5CD1F7607B3A46A3F5C78F227F1F1B795CAF8674E75C4D7B7FC9B31F3F555C4D471ACF1651EF68C25A8FA864EEBEAEFE345CF98D71A8FD4E49723755948AEE4EE406EBEFC56506E16E4D61F332A16236D4569D0A672825EE47ACDE963B1EB5D612FD3F11F7736B515CAF49FC5E5575E82739CB4F6E4CF81DAD74FA5E4564D60ED02E5DEBB956
	76BF22F304583B55FDA27D9041936ED67709EBF07E1184F90D7770BE714E0111597D6410D2AE6C9E560EA7CA3F7177386A939D25CA39E409CF38177D665D6BCA6E5A8E25DC3144D7A37D3638143BFA2DD22ECB6233CB3FFEAE652E48D74A85CBFC61526FA478CD38D7EBACF822CFA917A271E40CE33F8570DBB2CECB6EC83FD22ED662E915FEFB60F7C8D36EC387B9FF09A7C47A0D005F98CD398983CA3949924F9469B76B3E684CA577E94965EAFED732CC622D3F4FB91E1C5AD4F9C6C87BG85A8F0E9FCE9D25A
	B6CE4A0F14FEE361B7D153361CE6255CD409A77BFEE94F9E7CD65D2FA577EC937129C115578EE94B7D2E7DA1B4CA159F8869D04DB2BA9DEC0B12F862245FA40DF25875EBCC296BF9D1E02967F9511D255A6B8B7716BA2FAF0416EA2FAFBCD42ADCDFE058A325E4FC680679DC9B72C5A2F6943189D4A7410E983A449E441F22F6913CC1CF8A64789F28DD8394EB1330E79558D189FB31144C6D40659E33154BA6145277AC8DC6A3CBCF26BC8693CC75B09EEFD09B8D961D426E3FA0C66CA6771253042885F3282C51
	E05213D162EB3D895252B96F747EB9956AAC6F67784DA9BA37AE06F44D4F7935F5BCB9B21937E9455FFBB53F55792FA2D6C6577F05B2EEBFA07BF42F626F320B76FE0FDC761E0BDA862B533F53B51F86284FB62C67681334AFC0FA8831AFCE71F72FFC919BB348E5C391DBCB4FDA0C02F4ACE2076B39EC82E289F4BDC88805EBF0A8160B5F28AAC36CF57A8D1ED6C89BC3F91BABB60F6C9EE623C7B96DFB98B31573899D667965217C9E46361C4CC746052A67AFC3948F8FD54FDF26AF677317A848ABFA004F6FDA
	AAC99F37B94C61BEE9155BE256A1796FB12D973FDD5EFFD14B103EA1C557B2FCA186018F7036F06D37745DB2C8C7A2765E373C4DCCC2EC20144B967C02E3BF7D014B16A0B67587AEDB0DD888DD9B7105F4A0E27369F92E21100EC4ECE0B3160B581DF48D256041684C6287B9A66A68999BA40D58CBBAAE5B0658ADF42DE59C24A390DBCD3FC59483698444646FB0A649FCF4CD06FEAFB40CE34FD32C91526D0879D1D98B24FD907B9B6A73C3ECA26ACBC04CC457F3D2A0AD7C12E3FF2132F910AEC2EC9F46348C31
	2EFE2E4F873139F4ADA8G52A10825D35988C8CFC22C9B7545A1D6BA407595BD4431F80AD5C33A81B1BFAA5B8EE9A3E2FFC3FDF6446EC07BA6A1D6C1473A84C8A7A376D30ACD05F46E2FB8B61B1E23D58469AA44EE4418B6A076ACFE3BAF9031A5B44E21101E0858CB6CDCB9C8A7A176CFFA8DCC05F4F6B8471E44EF1395A0B6045F0E6CC1ECB57BA69A247D90FB104A86C3BA8C31BC7C06DEA4E26C2CC222AF7B579C1BC24BA05FD7ACC4ECB3652B02F4BDE237B773F7FADB90FB1DFDA79752A2E2716807AFE231
	68C7BCE22729ECB224D3914B21B667BE8C36BC0C7D8D7DA8F9985F0BB551EFB713C7BD64592940576913689CE78878FC1177D57ABE886595703C9A720A985F5F156BF84E459739344D027CC4547152C95579B464B5B2697B59DF1D624F9B26GFF56A3F02DGEAG6AF904BFEFF8140E2B3E108EF8844F912CF354193BC95659DB4FF5CE847EF82029C08591F0BD08406F006FF27D3CA2FBB7A92F8DF83BA2783B3EAFAD64BA7D818B811A88148814B11E6B7C7BA26DE79073E99D9481DF59F8DEAFD71A79FC329D
	B13FE5FCBEE9994F47F67AFA39B44EDC2E78FB76720BBF2E95DD54B2D84C5E9EF2ECBF534E52B6887E7BE2DCC33ED51D61C39E4D886CB9524C6F5CBDC74A9464E7C80454E728C40CE7F30ACC2C7BE0BAD6CE84BCF6BCFF86F3E633DCDE0E555399056E4A939EE54F2D38DD8B0447BA9C7DFF060E375940D770A877FF4DE6C77FEF5FA25BF35D66611CC3B15D05BD8D0F326F5A4976C42CD51D2DCC4770D6606BC0FB2E51B95AB3E12BECCF0AEEB84F75DC59637FA8BB3BD5366717790E76BCC57BD290700DC3FB36
	D99C6DC92C116DF1FF1E77B44171BB99CE6785AA62434AEF45F31492317C64BEC79B536978B99572B39E63BCF729EC4C7CCA36B16B87CFB63ABB372FCAAAC33671ED3431964B9F2DBA4F6BD6EAE3AB64F7A0CF5A8F0EB6FE39DD367104C79B5D1D1F676FE46335F866D890163FCAF5F654D6BA0789037CC864D92C323129D636711CC79B5D1DE3176CE46391BC5FEAAA167F2E4A4669F65ADFA3213FC6E2DD2BEC3454A96A5A6D7503483BBBCF2EA1D2ED63A40CE3AB163FC7F5D6DEA0A9D26ACF3FE05FBA5159D5
	E3546F58B94C20C3C4BD1F2B4ED9E75F4E8E067C50C87E9C7FFE0F7D4B5D99D689112CFF2521BF82365DA4342352457972FBA9EFAA70E5BD4EF9D3D4674C32EFECD7C1FEAD727C30C8F52E6BAE39FEDEF0FB5E9F11F7FBB659636A7A399B4F439E427237B52B4E0F23B67AC3FE90727CCEE5632B3BE59B573ABD9F16493B36B14649466F715C3C7847791CEBA9E249E8D30B2ADD25B5882863A964971E4079104ACFF6F6FB9E6497BE415B4F3B9E636D6E8C4116A7543EFC0471EEC7BB46286C38174D45A1FF88F9
	D667BB7AD634C70E77B59E4F63F5B76607BEA10FE9D2FFD43C4774D873F07757B359A9CD326C43A707A3DB35066FB96ABA45E39371845F5BF143A9755E8E32C932D460FBB3A61ED26F6D28F4487F6014FAEF477B8E7945C6755E0E0502F2EFC70F621D266543FAAFD3766746FA6ECF8A7AB3215E3DBF6F572B7DB1B8642F5A257667F5077CA33B5C7BF34DFE591FC796AED37BA3BF435CA03D16A4797249C26ECB71135C17F50B543E2CF330657BC5EADF3A9D7247ACD27B22F7487F4DA235AF0E67DCBD27F8AF6C
	435E6178427A5703745E26837CB0BE4967509F503DD56C6F8307E53D17FD6BDD7B6FBBA26BF966282C671A9F3C5313FDCC56734D77321E991B3D53F3C3072C671D63321E9E1DF7FA56F449FAC6AB5EAF7AF4586F72B259F15D326CA90DF756B2946F8479F8297B8B453958997D4E3A2FD01C8D7D2A173A6FB14932A19A3A53956F6EFC60256ED50AF7F7CC834E3AAFD31CA56C63E5BB8AD11C5D7BE78D3B1FD21C45AB08EE7AD0F9B5685D0CFAD7AA4E297D09177E6ED61C8B1B2F51868C0AF3DEEFEE9A3ECD3FD5
	1C015ABC6C779619EC12629C52C80D77F16B53647C3B3C54EDD41C6D512FF1FEC9158676EA33338D13946F5044F8E943DF95670064EA687EDAF1664634E13F93A93D5BC34F5410761D1D9A595E0D407A1149E5AC72D6CE1A27A82EC3BE4B066BEFBE65DF3C774395B0EFFADB18EE338A731D5BE55DF5AF3D987AFDFDDE3A103EC71851C31F916F91268F10074DF68B0C226DC0E7EDBF88344DE925C4A10B1EA1D5DADA8AC564E091FB68F363497D15DB263DFE5734F4A18374336768FB048C72B09C0A3132622609
	E68BA9CCC8976439DF3AD2B1A9F17A7FB2E8B3707A2053271BDD2496412CA48F658965CAFAB214BC4265BFAA098C2FA5E6A8A4263910A05788BBB466B98EFD6C37F7EE784F18D78F5B2689B376880B49AD50C13D153E21246F2A57093A43FAAB69D13B0519963381B2810716EE23BF53ED6220D15FA8641DB8207F21CFEF9375DDF57C1D9C1BA8ACECA4A52DA76F0D2CEF5059FAC43287E5EB2310E152756AC5E1BE4BB66ACC5D6B59F63B2D343B245555D2FB69D9D5E06F82EAAF51D20ADA96BC1633EA45B70991
	5304745D42AC23D95735DB57A91A2DFB0419E20FD5EF6BB19B3B6C166DCCD196DD2521F7E1206EB3F41FB8DBCA4E5DC323CF59EF731B13B4E7B70451EE9556D3CEF247D70A9CDDBBFBF4D6A8CAEF5D832403A20BB06F32E5626ABFFC1D5F1EAE24C9CE12501759ADA2D8E55519ECA74C56DE3020D0E5814FC2C525B7BEDDF653FDFF7FA7D5A40B0A42F296B290DD5F2DB7772E2FBBF142E0522382089F28DF0A6A89CF290AE73EFD4C42EF1E7F64B854F73DB02D372C0C7EDBCE7F2DA07F16D3241CA26595904494
	416DFF6AFCBBEDF0D522B063042E57E09C04BF6A69D51C63347160C515D4FF69EE28C17165371F9E7B6FB5A9496075EEE1FABFF9F78EAAA1D766E24792DF99FA53525981132FA1F5E4A1CD45CE74EE37E3DF18A67503B4073E3098CDF3CC15BA35B802D6B8B79D82EF241955745F2DDE8706C8ED43F010D4AD5534833DE87C9F6145217F91DEFC77BF420BEE590B749F2F9796590B8C059769AE3CF0BD7E4E9856E8BACD3810B1BEFDD892C543A863922D0D515ABDE37A0F2BCDDDA7FB11A67CE8FB46CF356BA26D
	4765C5306C4567027B3AE0F697D2F496FA6AECF74645343BD08A971965309D48AC23160B0DF32E165968502562827963FE72CFA865FB68C7E873789F214DD1BFC21B1FF21EC6DC72B67F51F952C02CC83F14EDFEDE3BEDCC3F14EDCEF09EC8AF7936713AF61C53AEE51B7F62BCC84AF1665167135119FC68CC3382690613927E8A297328ED3EC2DB3AA30FA84C5DC3DEB9B21CB0F452F3ECC4E19EBDAC2110FEF92810FC4FE08BE06C063D50FC22109D25G58AC46C7D6DDC4E1BA7DAE02A84CBC209BE0AC2210D5
	DED83C4F22B72D81382230F82751EC53435FE915C0B05C26EDG5AA88A6965E57047E620EA20CD200B2EA6DEF2D31B34194AE9CB87151A7B7F4A268E49261CCB5026058E37EFC205E3CA94666CB41BCE983A7B2C3441DDFA753C4C710AC22E9B443ED9171E252B9CAD7DD422CB50529267184E3AB4AD2D14AD1DA1D9C9F6744C3874AC5D722331344E5952251726258DBF9ACB774916CE3F34ADBDACDB1A2930D4DEE4A2BB9867DFFAF6AB160DD7896A7EF5895BFDC23B8DE7DCFA1676BA5E57DD42EDD8540EE956
	25E7699947111634D132937E929CE9AF37CB672F2DB92FBCFFED6A6879697C9EC83D5F2471B5769EF247EB6AEF917F09FE47B188700857783B434B8F11BD142E4E7DBC582BB39AC51D71D41D290B1C813AE3D0544B67CE469DA27AED1CC74AE4F97FFE0858FDD2A173FFGD0CB8788E5A05AB981C5GGG9381GD0CB818294G94G88G88G440394ADE5A05AB981C5GGG9381G8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGBBC5G
	GGG
**end of data**/
}


/**
 * Return the ForegroundColorComboBox1 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getForegroundColorComboBox1() {
	if (ivjForegroundColorComboBox1 == null) {
		try {
			ivjForegroundColorComboBox1 = new javax.swing.JComboBox();
			ivjForegroundColorComboBox1.setName("ForegroundColorComboBox1");
			ivjForegroundColorComboBox1.setPreferredSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox1.setFont(new java.awt.Font("dialog", 0, 12));
			ivjForegroundColorComboBox1.setMinimumSize(new java.awt.Dimension(120, 25));
			// user code begin {1}
			ivjForegroundColorComboBox1.setRenderer(new com.cannontech.common.gui.util.ColorComboBoxCellRenderer());
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjForegroundColorComboBox1;
}


/**
 * Return the ForegroundColorComboBox9 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getForegroundColorComboBox10() {
	if (ivjForegroundColorComboBox10 == null) {
		try {
			ivjForegroundColorComboBox10 = new javax.swing.JComboBox();
			ivjForegroundColorComboBox10.setName("ForegroundColorComboBox10");
			ivjForegroundColorComboBox10.setPreferredSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox10.setFont(new java.awt.Font("dialog", 0, 12));
			ivjForegroundColorComboBox10.setMinimumSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox10.setEnabled(false);
			// user code begin {1}
			ivjForegroundColorComboBox10.setRenderer(new com.cannontech.common.gui.util.ColorComboBoxCellRenderer());
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjForegroundColorComboBox10;
}


/**
 * Return the ForegroundColorComboBox2 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getForegroundColorComboBox2() {
	if (ivjForegroundColorComboBox2 == null) {
		try {
			ivjForegroundColorComboBox2 = new javax.swing.JComboBox();
			ivjForegroundColorComboBox2.setName("ForegroundColorComboBox2");
			ivjForegroundColorComboBox2.setPreferredSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox2.setFont(new java.awt.Font("dialog", 0, 12));
			ivjForegroundColorComboBox2.setMinimumSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox2.setEnabled(false);
			// user code begin {1}
			ivjForegroundColorComboBox2.setRenderer(new com.cannontech.common.gui.util.ColorComboBoxCellRenderer());
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjForegroundColorComboBox2;
}


/**
 * Return the ForegroundColorComboBox4 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getForegroundColorComboBox3() {
	if (ivjForegroundColorComboBox3 == null) {
		try {
			ivjForegroundColorComboBox3 = new javax.swing.JComboBox();
			ivjForegroundColorComboBox3.setName("ForegroundColorComboBox3");
			ivjForegroundColorComboBox3.setPreferredSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox3.setFont(new java.awt.Font("dialog", 0, 12));
			ivjForegroundColorComboBox3.setMinimumSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox3.setEnabled(false);
			// user code begin {1}
			ivjForegroundColorComboBox3.setRenderer(new com.cannontech.common.gui.util.ColorComboBoxCellRenderer());
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjForegroundColorComboBox3;
}


/**
 * Return the ForegroundColorComboBox4 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getForegroundColorComboBox4() {
	if (ivjForegroundColorComboBox4 == null) {
		try {
			ivjForegroundColorComboBox4 = new javax.swing.JComboBox();
			ivjForegroundColorComboBox4.setName("ForegroundColorComboBox4");
			ivjForegroundColorComboBox4.setPreferredSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox4.setFont(new java.awt.Font("dialog", 0, 12));
			ivjForegroundColorComboBox4.setMinimumSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox4.setEnabled(false);
			// user code begin {1}
			ivjForegroundColorComboBox4.setRenderer(new com.cannontech.common.gui.util.ColorComboBoxCellRenderer());
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjForegroundColorComboBox4;
}


/**
 * Return the ForegroundColorComboBox5 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getForegroundColorComboBox5() {
	if (ivjForegroundColorComboBox5 == null) {
		try {
			ivjForegroundColorComboBox5 = new javax.swing.JComboBox();
			ivjForegroundColorComboBox5.setName("ForegroundColorComboBox5");
			ivjForegroundColorComboBox5.setPreferredSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox5.setFont(new java.awt.Font("dialog", 0, 12));
			ivjForegroundColorComboBox5.setMinimumSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox5.setEnabled(false);
			// user code begin {1}
			ivjForegroundColorComboBox5.setRenderer(new com.cannontech.common.gui.util.ColorComboBoxCellRenderer());
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjForegroundColorComboBox5;
}


/**
 * Return the ForegroundColorComboBox6 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getForegroundColorComboBox6() {
	if (ivjForegroundColorComboBox6 == null) {
		try {
			ivjForegroundColorComboBox6 = new javax.swing.JComboBox();
			ivjForegroundColorComboBox6.setName("ForegroundColorComboBox6");
			ivjForegroundColorComboBox6.setPreferredSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox6.setFont(new java.awt.Font("dialog", 0, 12));
			ivjForegroundColorComboBox6.setMinimumSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox6.setEnabled(false);
			// user code begin {1}
			ivjForegroundColorComboBox6.setRenderer(new com.cannontech.common.gui.util.ColorComboBoxCellRenderer());
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjForegroundColorComboBox6;
}


/**
 * Return the ForegroundColorComboBox8 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getForegroundColorComboBox7() {
	if (ivjForegroundColorComboBox7 == null) {
		try {
			ivjForegroundColorComboBox7 = new javax.swing.JComboBox();
			ivjForegroundColorComboBox7.setName("ForegroundColorComboBox7");
			ivjForegroundColorComboBox7.setAutoscrolls(false);
			ivjForegroundColorComboBox7.setDoubleBuffered(false);
			ivjForegroundColorComboBox7.setPreferredSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox7.setFont(new java.awt.Font("dialog", 0, 12));
			ivjForegroundColorComboBox7.setMinimumSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox7.setEnabled(false);
			// user code begin {1}
			ivjForegroundColorComboBox7.setRenderer(new com.cannontech.common.gui.util.ColorComboBoxCellRenderer());
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjForegroundColorComboBox7;
}


/**
 * Return the ForegroundColorComboBox8 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getForegroundColorComboBox8() {
	if (ivjForegroundColorComboBox8 == null) {
		try {
			ivjForegroundColorComboBox8 = new javax.swing.JComboBox();
			ivjForegroundColorComboBox8.setName("ForegroundColorComboBox8");
			ivjForegroundColorComboBox8.setPreferredSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox8.setFont(new java.awt.Font("dialog", 0, 12));
			ivjForegroundColorComboBox8.setMinimumSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox8.setEnabled(false);
			// user code begin {1}
			ivjForegroundColorComboBox8.setRenderer(new com.cannontech.common.gui.util.ColorComboBoxCellRenderer());
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjForegroundColorComboBox8;
}


/**
 * Return the ForegroundColorComboBox92 property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getForegroundColorComboBox9() {
	if (ivjForegroundColorComboBox9 == null) {
		try {
			ivjForegroundColorComboBox9 = new javax.swing.JComboBox();
			ivjForegroundColorComboBox9.setName("ForegroundColorComboBox9");
			ivjForegroundColorComboBox9.setPreferredSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox9.setFont(new java.awt.Font("dialog", 0, 12));
			ivjForegroundColorComboBox9.setMinimumSize(new java.awt.Dimension(120, 25));
			ivjForegroundColorComboBox9.setEnabled(false);
			// user code begin {1}
			ivjForegroundColorComboBox9.setRenderer(new com.cannontech.common.gui.util.ColorComboBoxCellRenderer());
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjForegroundColorComboBox9;
}


/**
 * Return the IdentificationPanel property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getIdentificationPanel() {
	if (ivjIdentificationPanel == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("dialog", 0, 12));
			ivjLocalBorder.setTitle("Identification");
			ivjIdentificationPanel = new javax.swing.JPanel();
			ivjIdentificationPanel.setName("IdentificationPanel");
			ivjIdentificationPanel.setBorder(ivjLocalBorder);
			ivjIdentificationPanel.setLayout(null);
			getIdentificationPanel().add(getStateGroupNameLabel(), getStateGroupNameLabel().getName());
			getIdentificationPanel().add(getStateGroupNameTextField(), getStateGroupNameTextField().getName());
			getIdentificationPanel().add(getStateNumberLabel(), getStateNumberLabel().getName());
			getIdentificationPanel().add(getStateNumberSpinner(), getStateNumberSpinner().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjIdentificationPanel;
}

/**
 * Return the JButtonImage1 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonImage1() {
	if (ivjJButtonImage1 == null) {
		try {
			ivjJButtonImage1 = new javax.swing.JButton();
			ivjJButtonImage1.setName("JButtonImage1");
			ivjJButtonImage1.setText("Image...");
			ivjJButtonImage1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjJButtonImage1.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJButtonImage1.setMargin(new java.awt.Insets(2, 3, 2, 3));
			ivjJButtonImage1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonImage1;
}



/**
 * Return the JButtonImage19 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonImage10() {
	if (ivjJButtonImage10 == null) {
		try {
			ivjJButtonImage10 = new javax.swing.JButton();
			ivjJButtonImage10.setName("JButtonImage10");
			ivjJButtonImage10.setText("Image...");
			ivjJButtonImage10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjJButtonImage10.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJButtonImage10.setMargin(new java.awt.Insets(2, 3, 2, 3));
			ivjJButtonImage10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonImage10;
}


/**
 * Return the JButtonImage11 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonImage2() {
	if (ivjJButtonImage2 == null) {
		try {
			ivjJButtonImage2 = new javax.swing.JButton();
			ivjJButtonImage2.setName("JButtonImage2");
			ivjJButtonImage2.setText("Image...");
			ivjJButtonImage2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjJButtonImage2.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJButtonImage2.setMargin(new java.awt.Insets(2, 3, 2, 3));
			ivjJButtonImage2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonImage2;
}


/**
 * Return the JButtonImage12 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonImage3() {
	if (ivjJButtonImage3 == null) {
		try {
			ivjJButtonImage3 = new javax.swing.JButton();
			ivjJButtonImage3.setName("JButtonImage3");
			ivjJButtonImage3.setText("Image...");
			ivjJButtonImage3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjJButtonImage3.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJButtonImage3.setMargin(new java.awt.Insets(2, 3, 2, 3));
			ivjJButtonImage3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonImage3;
}


/**
 * Return the JButtonImage13 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonImage4() {
	if (ivjJButtonImage4 == null) {
		try {
			ivjJButtonImage4 = new javax.swing.JButton();
			ivjJButtonImage4.setName("JButtonImage4");
			ivjJButtonImage4.setText("Image...");
			ivjJButtonImage4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjJButtonImage4.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJButtonImage4.setMargin(new java.awt.Insets(2, 3, 2, 3));
			ivjJButtonImage4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonImage4;
}


/**
 * Return the JButtonImage14 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonImage5() {
	if (ivjJButtonImage5 == null) {
		try {
			ivjJButtonImage5 = new javax.swing.JButton();
			ivjJButtonImage5.setName("JButtonImage5");
			ivjJButtonImage5.setText("Image...");
			ivjJButtonImage5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjJButtonImage5.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJButtonImage5.setMargin(new java.awt.Insets(2, 3, 2, 3));
			ivjJButtonImage5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonImage5;
}


/**
 * Return the JButtonImage15 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonImage6() {
	if (ivjJButtonImage6 == null) {
		try {
			ivjJButtonImage6 = new javax.swing.JButton();
			ivjJButtonImage6.setName("JButtonImage6");
			ivjJButtonImage6.setText("Image...");
			ivjJButtonImage6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjJButtonImage6.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJButtonImage6.setMargin(new java.awt.Insets(2, 3, 2, 3));
			ivjJButtonImage6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonImage6;
}


/**
 * Return the JButtonImage16 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonImage7() {
	if (ivjJButtonImage7 == null) {
		try {
			ivjJButtonImage7 = new javax.swing.JButton();
			ivjJButtonImage7.setName("JButtonImage7");
			ivjJButtonImage7.setText("Image...");
			ivjJButtonImage7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjJButtonImage7.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJButtonImage7.setMargin(new java.awt.Insets(2, 3, 2, 3));
			ivjJButtonImage7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonImage7;
}


/**
 * Return the JButtonImage17 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonImage8() {
	if (ivjJButtonImage8 == null) {
		try {
			ivjJButtonImage8 = new javax.swing.JButton();
			ivjJButtonImage8.setName("JButtonImage8");
			ivjJButtonImage8.setText("Image...");
			ivjJButtonImage8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjJButtonImage8.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJButtonImage8.setMargin(new java.awt.Insets(2, 3, 2, 3));
			ivjJButtonImage8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonImage8;
}


/**
 * Return the JButtonImage18 property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonImage9() {
	if (ivjJButtonImage9 == null) {
		try {
			ivjJButtonImage9 = new javax.swing.JButton();
			ivjJButtonImage9.setName("JButtonImage9");
			ivjJButtonImage9.setText("Image...");
			ivjJButtonImage9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjJButtonImage9.setFont(new java.awt.Font("Arial", 1, 10));
			ivjJButtonImage9.setMargin(new java.awt.Insets(2, 3, 2, 3));
			ivjJButtonImage9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonImage9;
}


/**
 * Return the JLabelImage property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelImage() {
	if (ivjJLabelImage == null) {
		try {
			ivjJLabelImage = new javax.swing.JLabel();
			ivjJLabelImage.setName("JLabelImage");
			ivjJLabelImage.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelImage.setText("Image");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelImage;
}


/**
 * Return the JScrollPane property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPane() {
	if (ivjJScrollPane == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("dialog", 0, 12));
			ivjLocalBorder1.setTitle("Configuration");
			ivjJScrollPane = new javax.swing.JScrollPane();
			ivjJScrollPane.setName("JScrollPane");
			ivjJScrollPane.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
			ivjJScrollPane.setBorder(ivjLocalBorder1);
			ivjJScrollPane.setDoubleBuffered(false);
			ivjJScrollPane.setPreferredSize(new java.awt.Dimension(383, 235));
			ivjJScrollPane.setMinimumSize(new java.awt.Dimension(383, 235));
			getJScrollPane().setViewportView(getStatesPanel());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPane;
}

/**
 * Return the RepeaterLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRawStateColumnLabel() {
	if (ivjRawStateColumnLabel == null) {
		try {
			ivjRawStateColumnLabel = new javax.swing.JLabel();
			ivjRawStateColumnLabel.setName("RawStateColumnLabel");
			ivjRawStateColumnLabel.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRawStateColumnLabel.setText("Raw State");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRawStateColumnLabel;
}

/**
 * Return the RawStateLabel2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRawStateLabel1() {
	if (ivjRawStateLabel1 == null) {
		try {
			ivjRawStateLabel1 = new javax.swing.JLabel();
			ivjRawStateLabel1.setName("RawStateLabel1");
			ivjRawStateLabel1.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRawStateLabel1.setText("1 (Open)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRawStateLabel1;
}

/**
 * Return the RawStateLabel9 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRawStateLabel10() {
	if (ivjRawStateLabel10 == null) {
		try {
			ivjRawStateLabel10 = new javax.swing.JLabel();
			ivjRawStateLabel10.setName("RawStateLabel10");
			ivjRawStateLabel10.setText("10");
			ivjRawStateLabel10.setMaximumSize(new java.awt.Dimension(18, 19));
			ivjRawStateLabel10.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRawStateLabel10.setEnabled(false);
			ivjRawStateLabel10.setMinimumSize(new java.awt.Dimension(18, 19));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRawStateLabel10;
}

/**
 * Return the RawStateLabel2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRawStateLabel2() {
	if (ivjRawStateLabel2 == null) {
		try {
			ivjRawStateLabel2 = new javax.swing.JLabel();
			ivjRawStateLabel2.setName("RawStateLabel2");
			ivjRawStateLabel2.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRawStateLabel2.setText("2 (Close)");
			ivjRawStateLabel2.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRawStateLabel2;
}

/**
 * Return the RawStateLabel4 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRawStateLabel3() {
	if (ivjRawStateLabel3 == null) {
		try {
			ivjRawStateLabel3 = new javax.swing.JLabel();
			ivjRawStateLabel3.setName("RawStateLabel3");
			ivjRawStateLabel3.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRawStateLabel3.setText("3");
			ivjRawStateLabel3.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRawStateLabel3;
}

/**
 * Return the RawStateLabel4 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRawStateLabel4() {
	if (ivjRawStateLabel4 == null) {
		try {
			ivjRawStateLabel4 = new javax.swing.JLabel();
			ivjRawStateLabel4.setName("RawStateLabel4");
			ivjRawStateLabel4.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRawStateLabel4.setText("4");
			ivjRawStateLabel4.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRawStateLabel4;
}

/**
 * Return the RawStateLabel5 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRawStateLabel5() {
	if (ivjRawStateLabel5 == null) {
		try {
			ivjRawStateLabel5 = new javax.swing.JLabel();
			ivjRawStateLabel5.setName("RawStateLabel5");
			ivjRawStateLabel5.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRawStateLabel5.setText("5");
			ivjRawStateLabel5.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRawStateLabel5;
}

/**
 * Return the RawStateLabel6 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRawStateLabel6() {
	if (ivjRawStateLabel6 == null) {
		try {
			ivjRawStateLabel6 = new javax.swing.JLabel();
			ivjRawStateLabel6.setName("RawStateLabel6");
			ivjRawStateLabel6.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRawStateLabel6.setText("6");
			ivjRawStateLabel6.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRawStateLabel6;
}

/**
 * Return the RawStateLabel8 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRawStateLabel7() {
	if (ivjRawStateLabel7 == null) {
		try {
			ivjRawStateLabel7 = new javax.swing.JLabel();
			ivjRawStateLabel7.setName("RawStateLabel7");
			ivjRawStateLabel7.setAutoscrolls(false);
			ivjRawStateLabel7.setText("7");
			ivjRawStateLabel7.setDoubleBuffered(false);
			ivjRawStateLabel7.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRawStateLabel7.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRawStateLabel7;
}

/**
 * Return the RawStateLabel8 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRawStateLabel8() {
	if (ivjRawStateLabel8 == null) {
		try {
			ivjRawStateLabel8 = new javax.swing.JLabel();
			ivjRawStateLabel8.setName("RawStateLabel8");
			ivjRawStateLabel8.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRawStateLabel8.setText("8");
			ivjRawStateLabel8.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRawStateLabel8;
}

/**
 * Return the RawStateLabel92 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRawStateLabel9() {
	if (ivjRawStateLabel9 == null) {
		try {
			ivjRawStateLabel9 = new javax.swing.JLabel();
			ivjRawStateLabel9.setName("RawStateLabel9");
			ivjRawStateLabel9.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRawStateLabel9.setText("9");
			ivjRawStateLabel9.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRawStateLabel9;
}

/**
 * Return the RepeaterLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getRepeaterLabel() {
	if (ivjRepeaterLabel == null) {
		try {
			ivjRepeaterLabel = new javax.swing.JLabel();
			ivjRepeaterLabel.setName("RepeaterLabel");
			ivjRepeaterLabel.setFont(new java.awt.Font("dialog", 0, 12));
			ivjRepeaterLabel.setText("State Text");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRepeaterLabel;
}

/**
 * Return the StateGroupNameLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getStateGroupNameLabel() {
	if (ivjStateGroupNameLabel == null) {
		try {
			ivjStateGroupNameLabel = new javax.swing.JLabel();
			ivjStateGroupNameLabel.setName("StateGroupNameLabel");
			ivjStateGroupNameLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjStateGroupNameLabel.setText("State Group Name:");
			ivjStateGroupNameLabel.setBounds(10, 25, 121, 19);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateGroupNameLabel;
}


/**
 * Return the StateGroupNameTextField property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStateGroupNameTextField() {
	if (ivjStateGroupNameTextField == null) {
		try {
			ivjStateGroupNameTextField = new javax.swing.JTextField();
			ivjStateGroupNameTextField.setName("StateGroupNameTextField");
			ivjStateGroupNameTextField.setPreferredSize(new java.awt.Dimension(150, 21));
			ivjStateGroupNameTextField.setBounds(141, 24, 150, 21);
			ivjStateGroupNameTextField.setMinimumSize(new java.awt.Dimension(150, 21));
			// user code begin {1}
			ivjStateGroupNameTextField.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_STATE_GROUP_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateGroupNameTextField;
}


/**
 * Return the StateNameTextField1 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStateNameTextField1() {
	if (ivjStateNameTextField1 == null) {
		try {
			ivjStateNameTextField1 = new javax.swing.JTextField();
			ivjStateNameTextField1.setName("StateNameTextField1");
			ivjStateNameTextField1.setPreferredSize(new java.awt.Dimension(1300, 22));
			ivjStateNameTextField1.setMinimumSize(new java.awt.Dimension(130, 22));
			ivjStateNameTextField1.setColumns(0);
			// user code begin {1}
			ivjStateNameTextField1.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_STATE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNameTextField1;
}


/**
 * Return the StateNameTextField9 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStateNameTextField10() {
	if (ivjStateNameTextField10 == null) {
		try {
			ivjStateNameTextField10 = new javax.swing.JTextField();
			ivjStateNameTextField10.setName("StateNameTextField10");
			ivjStateNameTextField10.setPreferredSize(new java.awt.Dimension(1300, 22));
			ivjStateNameTextField10.setMinimumSize(new java.awt.Dimension(130, 22));
			ivjStateNameTextField10.setEnabled(false);
			ivjStateNameTextField10.setColumns(0);
			// user code begin {1}
			ivjStateNameTextField10.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_STATE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNameTextField10;
}


/**
 * Return the StateNameTextField2 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStateNameTextField2() {
	if (ivjStateNameTextField2 == null) {
		try {
			ivjStateNameTextField2 = new javax.swing.JTextField();
			ivjStateNameTextField2.setName("StateNameTextField2");
			ivjStateNameTextField2.setPreferredSize(new java.awt.Dimension(1300, 22));
			ivjStateNameTextField2.setMinimumSize(new java.awt.Dimension(130, 22));
			ivjStateNameTextField2.setEnabled(false);
			ivjStateNameTextField2.setColumns(0);
			// user code begin {1}
			ivjStateNameTextField2.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_STATE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNameTextField2;
}


/**
 * Return the StateNameTextField4 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStateNameTextField3() {
	if (ivjStateNameTextField3 == null) {
		try {
			ivjStateNameTextField3 = new javax.swing.JTextField();
			ivjStateNameTextField3.setName("StateNameTextField3");
			ivjStateNameTextField3.setPreferredSize(new java.awt.Dimension(1300, 22));
			ivjStateNameTextField3.setMinimumSize(new java.awt.Dimension(130, 22));
			ivjStateNameTextField3.setEnabled(false);
			ivjStateNameTextField3.setColumns(0);
			// user code begin {1}
			ivjStateNameTextField3.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_STATE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNameTextField3;
}


/**
 * Return the StateNameTextField4 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStateNameTextField4() {
	if (ivjStateNameTextField4 == null) {
		try {
			ivjStateNameTextField4 = new javax.swing.JTextField();
			ivjStateNameTextField4.setName("StateNameTextField4");
			ivjStateNameTextField4.setPreferredSize(new java.awt.Dimension(1300, 22));
			ivjStateNameTextField4.setMinimumSize(new java.awt.Dimension(130, 22));
			ivjStateNameTextField4.setEnabled(false);
			ivjStateNameTextField4.setColumns(0);
			// user code begin {1}
			ivjStateNameTextField4.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_STATE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNameTextField4;
}


/**
 * Return the StateNameTextField5 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStateNameTextField5() {
	if (ivjStateNameTextField5 == null) {
		try {
			ivjStateNameTextField5 = new javax.swing.JTextField();
			ivjStateNameTextField5.setName("StateNameTextField5");
			ivjStateNameTextField5.setPreferredSize(new java.awt.Dimension(1300, 22));
			ivjStateNameTextField5.setMinimumSize(new java.awt.Dimension(130, 22));
			ivjStateNameTextField5.setEnabled(false);
			ivjStateNameTextField5.setColumns(0);
			// user code begin {1}
			ivjStateNameTextField5.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_STATE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNameTextField5;
}


/**
 * Return the StateNameTextField6 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStateNameTextField6() {
	if (ivjStateNameTextField6 == null) {
		try {
			ivjStateNameTextField6 = new javax.swing.JTextField();
			ivjStateNameTextField6.setName("StateNameTextField6");
			ivjStateNameTextField6.setPreferredSize(new java.awt.Dimension(1300, 22));
			ivjStateNameTextField6.setMinimumSize(new java.awt.Dimension(130, 22));
			ivjStateNameTextField6.setEnabled(false);
			ivjStateNameTextField6.setColumns(0);
			// user code begin {1}
			ivjStateNameTextField6.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_STATE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNameTextField6;
}


/**
 * Return the StateNameTextField8 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStateNameTextField7() {
	if (ivjStateNameTextField7 == null) {
		try {
			ivjStateNameTextField7 = new javax.swing.JTextField();
			ivjStateNameTextField7.setName("StateNameTextField7");
			ivjStateNameTextField7.setDoubleBuffered(false);
			ivjStateNameTextField7.setColumns(0);
			ivjStateNameTextField7.setPreferredSize(new java.awt.Dimension(1300, 22));
			ivjStateNameTextField7.setMinimumSize(new java.awt.Dimension(130, 22));
			ivjStateNameTextField7.setEnabled(false);
			// user code begin {1}
			ivjStateNameTextField7.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_STATE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNameTextField7;
}


/**
 * Return the StateNameTextField8a property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStateNameTextField8() {
	if (ivjStateNameTextField8 == null) {
		try {
			ivjStateNameTextField8 = new javax.swing.JTextField();
			ivjStateNameTextField8.setName("StateNameTextField8");
			ivjStateNameTextField8.setPreferredSize(new java.awt.Dimension(1300, 22));
			ivjStateNameTextField8.setMinimumSize(new java.awt.Dimension(130, 22));
			ivjStateNameTextField8.setEnabled(false);
			ivjStateNameTextField8.setColumns(0);
			// user code begin {1}
			ivjStateNameTextField8.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_STATE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNameTextField8;
}


/**
 * Return the StateNameTextField92 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getStateNameTextField9() {
	if (ivjStateNameTextField9 == null) {
		try {
			ivjStateNameTextField9 = new javax.swing.JTextField();
			ivjStateNameTextField9.setName("StateNameTextField9");
			ivjStateNameTextField9.setPreferredSize(new java.awt.Dimension(1300, 22));
			ivjStateNameTextField9.setMinimumSize(new java.awt.Dimension(130, 22));
			ivjStateNameTextField9.setEnabled(false);
			ivjStateNameTextField9.setColumns(0);
			// user code begin {1}
			ivjStateNameTextField9.setDocument(new com.cannontech.common.gui.util.TextFieldDocument(com.cannontech.common.gui.util.TextFieldDocument.MAX_STATE_NAME_LENGTH));
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNameTextField9;
}


/**
 * Return the StateNumberLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getStateNumberLabel() {
	if (ivjStateNumberLabel == null) {
		try {
			ivjStateNumberLabel = new javax.swing.JLabel();
			ivjStateNumberLabel.setName("StateNumberLabel");
			ivjStateNumberLabel.setFont(new java.awt.Font("dialog", 0, 14));
			ivjStateNumberLabel.setText("Number of States:");
			ivjStateNumberLabel.setBounds(10, 52, 113, 19);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNumberLabel;
}


/**
 * Return the StateNumberSpinner property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getStateNumberSpinner() {
	if (ivjStateNumberSpinner == null) {
		try {
			ivjStateNumberSpinner = new com.klg.jclass.field.JCSpinField();
			ivjStateNumberSpinner.setName("StateNumberSpinner");
			ivjStateNumberSpinner.setPreferredSize(new java.awt.Dimension(50, 22));
			ivjStateNumberSpinner.setBounds(141, 51, 50, 22);
			ivjStateNumberSpinner.setMinimumSize(new java.awt.Dimension(50, 22));
			// user code begin {1}
			ivjStateNumberSpinner.setDataProperties(new com.klg.jclass.field.DataProperties(
				new com.klg.jclass.field.validate.JCIntegerValidator(
					null, new Integer(2), new Integer(STATE_COUNT), null, true, null, 
					new Integer(1), "#,##0.###;-#,##0.###", false, false, false, null, 
					new Integer(2)), new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
						new Integer(1)), new com.klg.jclass.field.JCInvalidInfo(true, 2, new java.awt.Color(0, 0, 0, 255), 
						new java.awt.Color(255, 255, 255, 255))));

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateNumberSpinner;
}


/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getStatesPanel() {
	if (ivjStatesPanel == null) {
		try {
			ivjStatesPanel = new javax.swing.JPanel();
			ivjStatesPanel.setName("StatesPanel");
			ivjStatesPanel.setLayout(new java.awt.GridBagLayout());
			ivjStatesPanel.setMaximumSize(new java.awt.Dimension(353, 370));
			ivjStatesPanel.setPreferredSize(new java.awt.Dimension(353, 370));
			ivjStatesPanel.setBounds(0, 0, 352, 370);
			ivjStatesPanel.setMinimumSize(new java.awt.Dimension(353, 370));

			java.awt.GridBagConstraints constraintsRepeaterLabel = new java.awt.GridBagConstraints();
			constraintsRepeaterLabel.gridx = 3; constraintsRepeaterLabel.gridy = 1;
			constraintsRepeaterLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRepeaterLabel.ipadx = 13;
			constraintsRepeaterLabel.ipady = 3;
			constraintsRepeaterLabel.insets = new java.awt.Insets(10, 10, 3, 46);
			getStatesPanel().add(getRepeaterLabel(), constraintsRepeaterLabel);

			java.awt.GridBagConstraints constraintsVariableBitsLabel = new java.awt.GridBagConstraints();
			constraintsVariableBitsLabel.gridx = 4; constraintsVariableBitsLabel.gridy = 1;
			constraintsVariableBitsLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsVariableBitsLabel.ipadx = 14;
			constraintsVariableBitsLabel.ipady = 3;
			constraintsVariableBitsLabel.insets = new java.awt.Insets(10, 26, 3, 26);
			getStatesPanel().add(getVariableBitsLabel(), constraintsVariableBitsLabel);

			java.awt.GridBagConstraints constraintsRawStateColumnLabel = new java.awt.GridBagConstraints();
			constraintsRawStateColumnLabel.gridx = 1; constraintsRawStateColumnLabel.gridy = 1;
			constraintsRawStateColumnLabel.gridwidth = 2;
			constraintsRawStateColumnLabel.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRawStateColumnLabel.ipadx = 4;
			constraintsRawStateColumnLabel.ipady = 3;
			constraintsRawStateColumnLabel.insets = new java.awt.Insets(10, 10, 3, 10);
			getStatesPanel().add(getRawStateColumnLabel(), constraintsRawStateColumnLabel);

			java.awt.GridBagConstraints constraintsStateNameTextField1 = new java.awt.GridBagConstraints();
			constraintsStateNameTextField1.gridx = 2; constraintsStateNameTextField1.gridy = 2;
			constraintsStateNameTextField1.gridwidth = 2;
			constraintsStateNameTextField1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsStateNameTextField1.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStateNameTextField1.weightx = 1.0;
			constraintsStateNameTextField1.ipadx = 7;
			constraintsStateNameTextField1.insets = new java.awt.Insets(4, 16, 5, 2);
			getStatesPanel().add(getStateNameTextField1(), constraintsStateNameTextField1);

			java.awt.GridBagConstraints constraintsRawStateLabel1 = new java.awt.GridBagConstraints();
			constraintsRawStateLabel1.gridx = 1; constraintsRawStateLabel1.gridy = 2;
			constraintsRawStateLabel1.gridwidth = 2;
			constraintsRawStateLabel1.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRawStateLabel1.ipadx = 7;
			constraintsRawStateLabel1.ipady = 3;
			constraintsRawStateLabel1.insets = new java.awt.Insets(6, 10, 6, 15);
			getStatesPanel().add(getRawStateLabel1(), constraintsRawStateLabel1);

			java.awt.GridBagConstraints constraintsForegroundColorComboBox1 = new java.awt.GridBagConstraints();
			constraintsForegroundColorComboBox1.gridx = 4; constraintsForegroundColorComboBox1.gridy = 2;
			constraintsForegroundColorComboBox1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsForegroundColorComboBox1.anchor = java.awt.GridBagConstraints.WEST;
			constraintsForegroundColorComboBox1.weightx = 1.0;
			constraintsForegroundColorComboBox1.ipadx = -27;
			constraintsForegroundColorComboBox1.insets = new java.awt.Insets(3, 2, 3, 1);
			getStatesPanel().add(getForegroundColorComboBox1(), constraintsForegroundColorComboBox1);

			java.awt.GridBagConstraints constraintsRawStateLabel2 = new java.awt.GridBagConstraints();
			constraintsRawStateLabel2.gridx = 1; constraintsRawStateLabel2.gridy = 3;
			constraintsRawStateLabel2.gridwidth = 2;
			constraintsRawStateLabel2.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRawStateLabel2.ipadx = 4;
			constraintsRawStateLabel2.ipady = 3;
			constraintsRawStateLabel2.insets = new java.awt.Insets(6, 10, 6, 15);
			getStatesPanel().add(getRawStateLabel2(), constraintsRawStateLabel2);

			java.awt.GridBagConstraints constraintsRawStateLabel3 = new java.awt.GridBagConstraints();
			constraintsRawStateLabel3.gridx = 1; constraintsRawStateLabel3.gridy = 4;
			constraintsRawStateLabel3.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRawStateLabel3.ipadx = 1;
			constraintsRawStateLabel3.ipady = 3;
			constraintsRawStateLabel3.insets = new java.awt.Insets(6, 10, 6, 29);
			getStatesPanel().add(getRawStateLabel3(), constraintsRawStateLabel3);

			java.awt.GridBagConstraints constraintsRawStateLabel4 = new java.awt.GridBagConstraints();
			constraintsRawStateLabel4.gridx = 1; constraintsRawStateLabel4.gridy = 5;
			constraintsRawStateLabel4.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRawStateLabel4.ipadx = 1;
			constraintsRawStateLabel4.ipady = 3;
			constraintsRawStateLabel4.insets = new java.awt.Insets(6, 10, 6, 29);
			getStatesPanel().add(getRawStateLabel4(), constraintsRawStateLabel4);

			java.awt.GridBagConstraints constraintsRawStateLabel5 = new java.awt.GridBagConstraints();
			constraintsRawStateLabel5.gridx = 1; constraintsRawStateLabel5.gridy = 6;
			constraintsRawStateLabel5.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRawStateLabel5.ipadx = 1;
			constraintsRawStateLabel5.ipady = 3;
			constraintsRawStateLabel5.insets = new java.awt.Insets(6, 10, 5, 29);
			getStatesPanel().add(getRawStateLabel5(), constraintsRawStateLabel5);

			java.awt.GridBagConstraints constraintsRawStateLabel6 = new java.awt.GridBagConstraints();
			constraintsRawStateLabel6.gridx = 1; constraintsRawStateLabel6.gridy = 7;
			constraintsRawStateLabel6.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRawStateLabel6.ipadx = 1;
			constraintsRawStateLabel6.ipady = 3;
			constraintsRawStateLabel6.insets = new java.awt.Insets(5, 10, 7, 29);
			getStatesPanel().add(getRawStateLabel6(), constraintsRawStateLabel6);

			java.awt.GridBagConstraints constraintsStateNameTextField2 = new java.awt.GridBagConstraints();
			constraintsStateNameTextField2.gridx = 2; constraintsStateNameTextField2.gridy = 3;
			constraintsStateNameTextField2.gridwidth = 2;
			constraintsStateNameTextField2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsStateNameTextField2.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStateNameTextField2.weightx = 1.0;
			constraintsStateNameTextField2.ipadx = 7;
			constraintsStateNameTextField2.insets = new java.awt.Insets(4, 16, 5, 2);
			getStatesPanel().add(getStateNameTextField2(), constraintsStateNameTextField2);

			java.awt.GridBagConstraints constraintsStateNameTextField3 = new java.awt.GridBagConstraints();
			constraintsStateNameTextField3.gridx = 2; constraintsStateNameTextField3.gridy = 4;
			constraintsStateNameTextField3.gridwidth = 2;
			constraintsStateNameTextField3.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsStateNameTextField3.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStateNameTextField3.weightx = 1.0;
			constraintsStateNameTextField3.ipadx = 7;
			constraintsStateNameTextField3.insets = new java.awt.Insets(4, 16, 5, 2);
			getStatesPanel().add(getStateNameTextField3(), constraintsStateNameTextField3);

			java.awt.GridBagConstraints constraintsStateNameTextField4 = new java.awt.GridBagConstraints();
			constraintsStateNameTextField4.gridx = 2; constraintsStateNameTextField4.gridy = 5;
			constraintsStateNameTextField4.gridwidth = 2;
			constraintsStateNameTextField4.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsStateNameTextField4.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStateNameTextField4.weightx = 1.0;
			constraintsStateNameTextField4.ipadx = 7;
			constraintsStateNameTextField4.insets = new java.awt.Insets(4, 16, 5, 2);
			getStatesPanel().add(getStateNameTextField4(), constraintsStateNameTextField4);

			java.awt.GridBagConstraints constraintsStateNameTextField5 = new java.awt.GridBagConstraints();
			constraintsStateNameTextField5.gridx = 2; constraintsStateNameTextField5.gridy = 6;
			constraintsStateNameTextField5.gridwidth = 2;
			constraintsStateNameTextField5.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsStateNameTextField5.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStateNameTextField5.weightx = 1.0;
			constraintsStateNameTextField5.ipadx = 7;
			constraintsStateNameTextField5.insets = new java.awt.Insets(4, 16, 4, 2);
			getStatesPanel().add(getStateNameTextField5(), constraintsStateNameTextField5);

			java.awt.GridBagConstraints constraintsStateNameTextField6 = new java.awt.GridBagConstraints();
			constraintsStateNameTextField6.gridx = 2; constraintsStateNameTextField6.gridy = 7;
			constraintsStateNameTextField6.gridwidth = 2;
			constraintsStateNameTextField6.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsStateNameTextField6.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStateNameTextField6.weightx = 1.0;
			constraintsStateNameTextField6.ipadx = 7;
			constraintsStateNameTextField6.insets = new java.awt.Insets(3, 16, 6, 2);
			getStatesPanel().add(getStateNameTextField6(), constraintsStateNameTextField6);

			java.awt.GridBagConstraints constraintsForegroundColorComboBox2 = new java.awt.GridBagConstraints();
			constraintsForegroundColorComboBox2.gridx = 4; constraintsForegroundColorComboBox2.gridy = 3;
			constraintsForegroundColorComboBox2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsForegroundColorComboBox2.anchor = java.awt.GridBagConstraints.WEST;
			constraintsForegroundColorComboBox2.weightx = 1.0;
			constraintsForegroundColorComboBox2.ipadx = -27;
			constraintsForegroundColorComboBox2.insets = new java.awt.Insets(3, 2, 3, 1);
			getStatesPanel().add(getForegroundColorComboBox2(), constraintsForegroundColorComboBox2);

			java.awt.GridBagConstraints constraintsForegroundColorComboBox3 = new java.awt.GridBagConstraints();
			constraintsForegroundColorComboBox3.gridx = 4; constraintsForegroundColorComboBox3.gridy = 4;
			constraintsForegroundColorComboBox3.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsForegroundColorComboBox3.anchor = java.awt.GridBagConstraints.WEST;
			constraintsForegroundColorComboBox3.weightx = 1.0;
			constraintsForegroundColorComboBox3.ipadx = -27;
			constraintsForegroundColorComboBox3.insets = new java.awt.Insets(3, 2, 3, 1);
			getStatesPanel().add(getForegroundColorComboBox3(), constraintsForegroundColorComboBox3);

			java.awt.GridBagConstraints constraintsForegroundColorComboBox4 = new java.awt.GridBagConstraints();
			constraintsForegroundColorComboBox4.gridx = 4; constraintsForegroundColorComboBox4.gridy = 5;
			constraintsForegroundColorComboBox4.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsForegroundColorComboBox4.anchor = java.awt.GridBagConstraints.WEST;
			constraintsForegroundColorComboBox4.weightx = 1.0;
			constraintsForegroundColorComboBox4.ipadx = -27;
			constraintsForegroundColorComboBox4.insets = new java.awt.Insets(3, 2, 3, 1);
			getStatesPanel().add(getForegroundColorComboBox4(), constraintsForegroundColorComboBox4);

			java.awt.GridBagConstraints constraintsForegroundColorComboBox5 = new java.awt.GridBagConstraints();
			constraintsForegroundColorComboBox5.gridx = 4; constraintsForegroundColorComboBox5.gridy = 6;
			constraintsForegroundColorComboBox5.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsForegroundColorComboBox5.anchor = java.awt.GridBagConstraints.WEST;
			constraintsForegroundColorComboBox5.weightx = 1.0;
			constraintsForegroundColorComboBox5.ipadx = -27;
			constraintsForegroundColorComboBox5.insets = new java.awt.Insets(3, 2, 2, 1);
			getStatesPanel().add(getForegroundColorComboBox5(), constraintsForegroundColorComboBox5);

			java.awt.GridBagConstraints constraintsForegroundColorComboBox6 = new java.awt.GridBagConstraints();
			constraintsForegroundColorComboBox6.gridx = 4; constraintsForegroundColorComboBox6.gridy = 7;
			constraintsForegroundColorComboBox6.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsForegroundColorComboBox6.anchor = java.awt.GridBagConstraints.WEST;
			constraintsForegroundColorComboBox6.weightx = 1.0;
			constraintsForegroundColorComboBox6.ipadx = -27;
			constraintsForegroundColorComboBox6.insets = new java.awt.Insets(2, 2, 4, 1);
			getStatesPanel().add(getForegroundColorComboBox6(), constraintsForegroundColorComboBox6);

			java.awt.GridBagConstraints constraintsRawStateLabel10 = new java.awt.GridBagConstraints();
			constraintsRawStateLabel10.gridx = 1; constraintsRawStateLabel10.gridy = 11;
			constraintsRawStateLabel10.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRawStateLabel10.ipadx = 4;
			constraintsRawStateLabel10.insets = new java.awt.Insets(6, 10, 37, 15);
			getStatesPanel().add(getRawStateLabel10(), constraintsRawStateLabel10);

			java.awt.GridBagConstraints constraintsStateNameTextField10 = new java.awt.GridBagConstraints();
			constraintsStateNameTextField10.gridx = 2; constraintsStateNameTextField10.gridy = 11;
			constraintsStateNameTextField10.gridwidth = 2;
			constraintsStateNameTextField10.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsStateNameTextField10.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStateNameTextField10.weightx = 1.0;
			constraintsStateNameTextField10.ipadx = 7;
			constraintsStateNameTextField10.insets = new java.awt.Insets(4, 16, 36, 2);
			getStatesPanel().add(getStateNameTextField10(), constraintsStateNameTextField10);

			java.awt.GridBagConstraints constraintsForegroundColorComboBox10 = new java.awt.GridBagConstraints();
			constraintsForegroundColorComboBox10.gridx = 4; constraintsForegroundColorComboBox10.gridy = 11;
			constraintsForegroundColorComboBox10.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsForegroundColorComboBox10.anchor = java.awt.GridBagConstraints.WEST;
			constraintsForegroundColorComboBox10.weightx = 1.0;
			constraintsForegroundColorComboBox10.ipadx = -27;
			constraintsForegroundColorComboBox10.insets = new java.awt.Insets(3, 2, 34, 1);
			getStatesPanel().add(getForegroundColorComboBox10(), constraintsForegroundColorComboBox10);

			java.awt.GridBagConstraints constraintsForegroundColorComboBox9 = new java.awt.GridBagConstraints();
			constraintsForegroundColorComboBox9.gridx = 4; constraintsForegroundColorComboBox9.gridy = 10;
			constraintsForegroundColorComboBox9.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsForegroundColorComboBox9.anchor = java.awt.GridBagConstraints.WEST;
			constraintsForegroundColorComboBox9.weightx = 1.0;
			constraintsForegroundColorComboBox9.ipadx = -27;
			constraintsForegroundColorComboBox9.insets = new java.awt.Insets(1, 2, 3, 1);
			getStatesPanel().add(getForegroundColorComboBox9(), constraintsForegroundColorComboBox9);

			java.awt.GridBagConstraints constraintsStateNameTextField9 = new java.awt.GridBagConstraints();
			constraintsStateNameTextField9.gridx = 2; constraintsStateNameTextField9.gridy = 10;
			constraintsStateNameTextField9.gridwidth = 2;
			constraintsStateNameTextField9.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsStateNameTextField9.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStateNameTextField9.weightx = 1.0;
			constraintsStateNameTextField9.ipadx = 7;
			constraintsStateNameTextField9.insets = new java.awt.Insets(2, 16, 5, 2);
			getStatesPanel().add(getStateNameTextField9(), constraintsStateNameTextField9);

			java.awt.GridBagConstraints constraintsRawStateLabel9 = new java.awt.GridBagConstraints();
			constraintsRawStateLabel9.gridx = 1; constraintsRawStateLabel9.gridy = 10;
			constraintsRawStateLabel9.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRawStateLabel9.ipadx = 1;
			constraintsRawStateLabel9.ipady = 3;
			constraintsRawStateLabel9.insets = new java.awt.Insets(4, 10, 6, 29);
			getStatesPanel().add(getRawStateLabel9(), constraintsRawStateLabel9);

			java.awt.GridBagConstraints constraintsRawStateLabel8 = new java.awt.GridBagConstraints();
			constraintsRawStateLabel8.gridx = 1; constraintsRawStateLabel8.gridy = 9;
			constraintsRawStateLabel8.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRawStateLabel8.ipadx = 1;
			constraintsRawStateLabel8.ipady = 3;
			constraintsRawStateLabel8.insets = new java.awt.Insets(6, 10, 4, 29);
			getStatesPanel().add(getRawStateLabel8(), constraintsRawStateLabel8);

			java.awt.GridBagConstraints constraintsStateNameTextField8 = new java.awt.GridBagConstraints();
			constraintsStateNameTextField8.gridx = 2; constraintsStateNameTextField8.gridy = 9;
			constraintsStateNameTextField8.gridwidth = 2;
			constraintsStateNameTextField8.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsStateNameTextField8.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStateNameTextField8.weightx = 1.0;
			constraintsStateNameTextField8.ipadx = 7;
			constraintsStateNameTextField8.insets = new java.awt.Insets(4, 16, 3, 2);
			getStatesPanel().add(getStateNameTextField8(), constraintsStateNameTextField8);

			java.awt.GridBagConstraints constraintsForegroundColorComboBox8 = new java.awt.GridBagConstraints();
			constraintsForegroundColorComboBox8.gridx = 4; constraintsForegroundColorComboBox8.gridy = 9;
			constraintsForegroundColorComboBox8.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsForegroundColorComboBox8.anchor = java.awt.GridBagConstraints.WEST;
			constraintsForegroundColorComboBox8.weightx = 1.0;
			constraintsForegroundColorComboBox8.ipadx = -27;
			constraintsForegroundColorComboBox8.insets = new java.awt.Insets(3, 2, 1, 1);
			getStatesPanel().add(getForegroundColorComboBox8(), constraintsForegroundColorComboBox8);

			java.awt.GridBagConstraints constraintsForegroundColorComboBox7 = new java.awt.GridBagConstraints();
			constraintsForegroundColorComboBox7.gridx = 4; constraintsForegroundColorComboBox7.gridy = 8;
			constraintsForegroundColorComboBox7.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsForegroundColorComboBox7.anchor = java.awt.GridBagConstraints.WEST;
			constraintsForegroundColorComboBox7.weightx = 1.0;
			constraintsForegroundColorComboBox7.ipadx = -27;
			constraintsForegroundColorComboBox7.insets = new java.awt.Insets(5, 2, 3, 1);
			getStatesPanel().add(getForegroundColorComboBox7(), constraintsForegroundColorComboBox7);

			java.awt.GridBagConstraints constraintsStateNameTextField7 = new java.awt.GridBagConstraints();
			constraintsStateNameTextField7.gridx = 2; constraintsStateNameTextField7.gridy = 8;
			constraintsStateNameTextField7.gridwidth = 2;
			constraintsStateNameTextField7.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsStateNameTextField7.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStateNameTextField7.weightx = 1.0;
			constraintsStateNameTextField7.ipadx = 7;
			constraintsStateNameTextField7.insets = new java.awt.Insets(6, 16, 5, 2);
			getStatesPanel().add(getStateNameTextField7(), constraintsStateNameTextField7);

			java.awt.GridBagConstraints constraintsRawStateLabel7 = new java.awt.GridBagConstraints();
			constraintsRawStateLabel7.gridx = 1; constraintsRawStateLabel7.gridy = 8;
			constraintsRawStateLabel7.anchor = java.awt.GridBagConstraints.WEST;
			constraintsRawStateLabel7.ipadx = 1;
			constraintsRawStateLabel7.ipady = 3;
			constraintsRawStateLabel7.insets = new java.awt.Insets(8, 10, 6, 29);
			getStatesPanel().add(getRawStateLabel7(), constraintsRawStateLabel7);

			java.awt.GridBagConstraints constraintsJLabelImage = new java.awt.GridBagConstraints();
			constraintsJLabelImage.gridx = 5; constraintsJLabelImage.gridy = 1;
			constraintsJLabelImage.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelImage.ipadx = 7;
			constraintsJLabelImage.ipady = 3;
			constraintsJLabelImage.insets = new java.awt.Insets(10, 19, 3, 13);
			getStatesPanel().add(getJLabelImage(), constraintsJLabelImage);

			java.awt.GridBagConstraints constraintsJButtonImage1 = new java.awt.GridBagConstraints();
			constraintsJButtonImage1.gridx = 5; constraintsJButtonImage1.gridy = 2;
			constraintsJButtonImage1.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonImage1.ipadx = 10;
			constraintsJButtonImage1.ipady = 4;
			constraintsJButtonImage1.insets = new java.awt.Insets(3, 2, 3, 11);
			getStatesPanel().add(getJButtonImage1(), constraintsJButtonImage1);

			java.awt.GridBagConstraints constraintsJButtonImage2 = new java.awt.GridBagConstraints();
			constraintsJButtonImage2.gridx = 5; constraintsJButtonImage2.gridy = 3;
			constraintsJButtonImage2.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonImage2.ipadx = 10;
			constraintsJButtonImage2.ipady = 4;
			constraintsJButtonImage2.insets = new java.awt.Insets(3, 2, 3, 11);
			getStatesPanel().add(getJButtonImage2(), constraintsJButtonImage2);

			java.awt.GridBagConstraints constraintsJButtonImage3 = new java.awt.GridBagConstraints();
			constraintsJButtonImage3.gridx = 5; constraintsJButtonImage3.gridy = 4;
			constraintsJButtonImage3.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonImage3.ipadx = 10;
			constraintsJButtonImage3.ipady = 4;
			constraintsJButtonImage3.insets = new java.awt.Insets(3, 2, 3, 11);
			getStatesPanel().add(getJButtonImage3(), constraintsJButtonImage3);

			java.awt.GridBagConstraints constraintsJButtonImage4 = new java.awt.GridBagConstraints();
			constraintsJButtonImage4.gridx = 5; constraintsJButtonImage4.gridy = 5;
			constraintsJButtonImage4.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonImage4.ipadx = 10;
			constraintsJButtonImage4.ipady = 4;
			constraintsJButtonImage4.insets = new java.awt.Insets(3, 2, 3, 11);
			getStatesPanel().add(getJButtonImage4(), constraintsJButtonImage4);

			java.awt.GridBagConstraints constraintsJButtonImage5 = new java.awt.GridBagConstraints();
			constraintsJButtonImage5.gridx = 5; constraintsJButtonImage5.gridy = 6;
			constraintsJButtonImage5.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonImage5.ipadx = 10;
			constraintsJButtonImage5.ipady = 4;
			constraintsJButtonImage5.insets = new java.awt.Insets(3, 2, 2, 11);
			getStatesPanel().add(getJButtonImage5(), constraintsJButtonImage5);

			java.awt.GridBagConstraints constraintsJButtonImage6 = new java.awt.GridBagConstraints();
			constraintsJButtonImage6.gridx = 5; constraintsJButtonImage6.gridy = 7;
			constraintsJButtonImage6.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonImage6.ipadx = 10;
			constraintsJButtonImage6.ipady = 4;
			constraintsJButtonImage6.insets = new java.awt.Insets(2, 2, 4, 11);
			getStatesPanel().add(getJButtonImage6(), constraintsJButtonImage6);

			java.awt.GridBagConstraints constraintsJButtonImage7 = new java.awt.GridBagConstraints();
			constraintsJButtonImage7.gridx = 5; constraintsJButtonImage7.gridy = 8;
			constraintsJButtonImage7.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonImage7.ipadx = 10;
			constraintsJButtonImage7.ipady = 4;
			constraintsJButtonImage7.insets = new java.awt.Insets(5, 2, 3, 11);
			getStatesPanel().add(getJButtonImage7(), constraintsJButtonImage7);

			java.awt.GridBagConstraints constraintsJButtonImage8 = new java.awt.GridBagConstraints();
			constraintsJButtonImage8.gridx = 5; constraintsJButtonImage8.gridy = 9;
			constraintsJButtonImage8.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonImage8.ipadx = 10;
			constraintsJButtonImage8.ipady = 4;
			constraintsJButtonImage8.insets = new java.awt.Insets(3, 2, 1, 11);
			getStatesPanel().add(getJButtonImage8(), constraintsJButtonImage8);

			java.awt.GridBagConstraints constraintsJButtonImage9 = new java.awt.GridBagConstraints();
			constraintsJButtonImage9.gridx = 5; constraintsJButtonImage9.gridy = 10;
			constraintsJButtonImage9.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonImage9.ipadx = 10;
			constraintsJButtonImage9.ipady = 4;
			constraintsJButtonImage9.insets = new java.awt.Insets(1, 2, 3, 11);
			getStatesPanel().add(getJButtonImage9(), constraintsJButtonImage9);

			java.awt.GridBagConstraints constraintsJButtonImage10 = new java.awt.GridBagConstraints();
			constraintsJButtonImage10.gridx = 5; constraintsJButtonImage10.gridy = 11;
			constraintsJButtonImage10.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJButtonImage10.ipadx = 10;
			constraintsJButtonImage10.ipady = 4;
			constraintsJButtonImage10.insets = new java.awt.Insets(3, 2, 34, 11);
			getStatesPanel().add(getJButtonImage10(), constraintsJButtonImage10);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStatesPanel;
}

/**
 * getValue method comment.
 */
public Object getValue(Object val) 
{
	
   com.cannontech.database.data.state.GroupState gs = (com.cannontech.database.data.state.GroupState)val;

   Object stateNumberSpinVal = getStateNumberSpinner().getValue();
   Integer numberOfStates = null;
   if( stateNumberSpinVal instanceof Long )
      numberOfStates = new Integer( ((Long)stateNumberSpinVal).intValue() );
   else if( stateNumberSpinVal instanceof Integer )
      numberOfStates = new Integer( ((Integer)stateNumberSpinVal).intValue() );

   String stateGroupName = getStateGroupNameTextField().getText();
   if( stateGroupName != null )
      gs.getStateGroup().setName(stateGroupName);
   
   gs.getStatesVector().removeAllElements();
   
   com.cannontech.database.data.state.State tempStateData = null;

   for(int i=0;i<numberOfStates.intValue();i++)
   {
      Integer yukImgId = 
                (imageButton[i].getClientProperty("LiteYukonImage") == null)
                ? new Integer(com.cannontech.database.db.state.YukonImage.NONE_IMAGE_ID)
                : new Integer( ((LiteYukonImage)imageButton[i].getClientProperty("LiteYukonImage")).getImageID() );
      
      tempStateData = new com.cannontech.database.data.state.State();
      tempStateData.setState(
             new com.cannontech.database.db.state.State( 
                     gs.getStateGroup().getStateGroupID(),
                     new Integer(i),
                     stateNameTextFields[i].getText(),
                     new Integer(foregroundColorComboBoxes[i].getSelectedIndex()),
                     new Integer(com.cannontech.common.gui.util.Colors.BLACK_ID),
                     yukImgId ) );
                                    

                                          
      gs.getStatesVector().add(tempStateData);
   }

   return val;
}


/**
 * Return the VariableBitsLabel property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getVariableBitsLabel() {
	if (ivjVariableBitsLabel == null) {
		try {
			ivjVariableBitsLabel = new javax.swing.JLabel();
			ivjVariableBitsLabel.setName("VariableBitsLabel");
			ivjVariableBitsLabel.setFont(new java.awt.Font("dialog", 0, 12));
			ivjVariableBitsLabel.setText("Color");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjVariableBitsLabel;
}

/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	getStateNumberSpinner().addValueListener(this);
	
	// user code end
	getStateGroupNameTextField().addCaretListener(this);
	getStateNameTextField1().addCaretListener(this);
	getStateNameTextField2().addCaretListener(this);
	getStateNameTextField3().addCaretListener(this);
	getStateNameTextField4().addCaretListener(this);
	getStateNameTextField5().addCaretListener(this);
	getStateNameTextField6().addCaretListener(this);
	getForegroundColorComboBox1().addItemListener(this);
	getForegroundColorComboBox2().addItemListener(this);
	getForegroundColorComboBox3().addItemListener(this);
	getForegroundColorComboBox4().addItemListener(this);
	getForegroundColorComboBox5().addItemListener(this);
	getForegroundColorComboBox6().addItemListener(this);
	getStateNameTextField7().addCaretListener(this);
	getStateNameTextField8().addCaretListener(this);
	getStateNameTextField9().addCaretListener(this);
	getStateNameTextField10().addCaretListener(this);
	getForegroundColorComboBox7().addItemListener(this);
	getForegroundColorComboBox8().addItemListener(this);
	getForegroundColorComboBox9().addItemListener(this);
	getForegroundColorComboBox10().addItemListener(this);
	getJButtonImage1().addActionListener(this);
	getJButtonImage2().addActionListener(this);
	getJButtonImage3().addActionListener(this);
	getJButtonImage4().addActionListener(this);
	getJButtonImage5().addActionListener(this);
	getJButtonImage6().addActionListener(this);
	getJButtonImage7().addActionListener(this);
	getJButtonImage8().addActionListener(this);
	getJButtonImage9().addActionListener(this);
	getJButtonImage10().addActionListener(this);
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("VersacomAddressingEditorPanel");
		setPreferredSize(new java.awt.Dimension(381, 348));
		setLayout(new java.awt.GridBagLayout());
		setSize(407, 348);
		setMinimumSize(new java.awt.Dimension(381, 348));
		setMaximumSize(new java.awt.Dimension(381, 348));

		java.awt.GridBagConstraints constraintsIdentificationPanel = new java.awt.GridBagConstraints();
		constraintsIdentificationPanel.gridx = 1; constraintsIdentificationPanel.gridy = 1;
		constraintsIdentificationPanel.fill = java.awt.GridBagConstraints.BOTH;
		constraintsIdentificationPanel.anchor = java.awt.GridBagConstraints.WEST;
		constraintsIdentificationPanel.weightx = 1.0;
		constraintsIdentificationPanel.weighty = 1.0;
		constraintsIdentificationPanel.ipadx = 397;
		constraintsIdentificationPanel.ipady = 83;
		constraintsIdentificationPanel.insets = new java.awt.Insets(9, 5, 1, 5);
		add(getIdentificationPanel(), constraintsIdentificationPanel);

		java.awt.GridBagConstraints constraintsJScrollPane = new java.awt.GridBagConstraints();
		constraintsJScrollPane.gridx = 1; constraintsJScrollPane.gridy = 2;
		constraintsJScrollPane.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJScrollPane.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJScrollPane.weightx = 1.0;
		constraintsJScrollPane.weighty = 1.0;
		constraintsJScrollPane.ipadx = 14;
		constraintsJScrollPane.insets = new java.awt.Insets(2, 5, 18, 5);
		add(getJScrollPane(), constraintsJScrollPane);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	rawStateLabels = new javax.swing.JLabel[STATE_COUNT];
	stateNameTextFields = new javax.swing.JTextField[STATE_COUNT];
	foregroundColorComboBoxes = new javax.swing.JComboBox[STATE_COUNT];
	imageButton = new javax.swing.JButton[STATE_COUNT];
   
	rawStateLabels[0] = getRawStateLabel1();
	rawStateLabels[1] = getRawStateLabel2();
	rawStateLabels[2] = getRawStateLabel3();
	rawStateLabels[3] = getRawStateLabel4();
	rawStateLabels[4] = getRawStateLabel5();
	rawStateLabels[5] = getRawStateLabel6();
	rawStateLabels[6] = getRawStateLabel7();
	rawStateLabels[7] = getRawStateLabel8();
	rawStateLabels[8] = getRawStateLabel9();
	rawStateLabels[9] = getRawStateLabel10();
	
	stateNameTextFields[0] = getStateNameTextField1();
	stateNameTextFields[1] = getStateNameTextField2();
	stateNameTextFields[2] = getStateNameTextField3();
	stateNameTextFields[3] = getStateNameTextField4();
	stateNameTextFields[4] = getStateNameTextField5();
	stateNameTextFields[5] = getStateNameTextField6();
	stateNameTextFields[6] = getStateNameTextField7();
	stateNameTextFields[7] = getStateNameTextField8();
	stateNameTextFields[8] = getStateNameTextField9();
	stateNameTextFields[9] = getStateNameTextField10();
		
	foregroundColorComboBoxes[0] = getForegroundColorComboBox1();
	foregroundColorComboBoxes[1] = getForegroundColorComboBox2();
	foregroundColorComboBoxes[2] = getForegroundColorComboBox3();
	foregroundColorComboBoxes[3] = getForegroundColorComboBox4();
	foregroundColorComboBoxes[4] = getForegroundColorComboBox5();
	foregroundColorComboBoxes[5] = getForegroundColorComboBox6();
	foregroundColorComboBoxes[6] = getForegroundColorComboBox7();
	foregroundColorComboBoxes[7] = getForegroundColorComboBox8();
	foregroundColorComboBoxes[8] = getForegroundColorComboBox9();
	foregroundColorComboBoxes[9] = getForegroundColorComboBox10();

	for(int i=0;i<foregroundColorComboBoxes.length;i++)
	{
		foregroundColorComboBoxes[i].addItem(com.cannontech.common.gui.util.Colors.GREEN_STR_ID);
		foregroundColorComboBoxes[i].addItem(com.cannontech.common.gui.util.Colors.RED_STR_ID);
		foregroundColorComboBoxes[i].addItem(com.cannontech.common.gui.util.Colors.WHITE_STR_ID);
		foregroundColorComboBoxes[i].addItem(com.cannontech.common.gui.util.Colors.YELLOW_STR_ID);
		foregroundColorComboBoxes[i].addItem(com.cannontech.common.gui.util.Colors.BLUE_STR_ID);
		foregroundColorComboBoxes[i].addItem(com.cannontech.common.gui.util.Colors.CYAN_STR_ID);
		foregroundColorComboBoxes[i].addItem(com.cannontech.common.gui.util.Colors.BLACK_STR_ID);
		foregroundColorComboBoxes[i].addItem(com.cannontech.common.gui.util.Colors.ORANGE_STR_ID);
		foregroundColorComboBoxes[i].addItem(com.cannontech.common.gui.util.Colors.MAGENTA_STR_ID);
		foregroundColorComboBoxes[i].addItem(com.cannontech.common.gui.util.Colors.GRAY_STR_ID);
		foregroundColorComboBoxes[i].addItem(com.cannontech.common.gui.util.Colors.PINK_STR_ID);
	}
   
   imageButton[0] = getJButtonImage1();
   imageButton[1] = getJButtonImage2();
   imageButton[2] = getJButtonImage3();
   imageButton[3] = getJButtonImage4();
   imageButton[4] = getJButtonImage5();
   imageButton[5] = getJButtonImage6();
   imageButton[6] = getJButtonImage7();
   imageButton[7] = getJButtonImage8();
   imageButton[8] = getJButtonImage9();
   imageButton[9] = getJButtonImage10();
   
	// user code end
}


/**
 * Method to handle events for the ItemListener interface.
 * @param e java.awt.event.ItemEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void itemStateChanged(java.awt.event.ItemEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getForegroundColorComboBox1()) 
		connEtoC9(e);
	if (e.getSource() == getForegroundColorComboBox2()) 
		connEtoC10(e);
	if (e.getSource() == getForegroundColorComboBox3()) 
		connEtoC11(e);
	if (e.getSource() == getForegroundColorComboBox4()) 
		connEtoC12(e);
	if (e.getSource() == getForegroundColorComboBox5()) 
		connEtoC13(e);
	if (e.getSource() == getForegroundColorComboBox6()) 
		connEtoC14(e);
	if (e.getSource() == getForegroundColorComboBox7()) 
		connEtoC18(e);
	if (e.getSource() == getForegroundColorComboBox8()) 
		connEtoC19(e);
	if (e.getSource() == getForegroundColorComboBox9()) 
		connEtoC20(e);
	if (e.getSource() == getForegroundColorComboBox10()) 
		connEtoC21(e);
	// user code begin {2}
	// user code end
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		GroupStateEditorPanel aGroupStateEditorPanel;
		aGroupStateEditorPanel = new GroupStateEditorPanel();
		frame.setContentPane(aGroupStateEditorPanel);
		frame.setSize(aGroupStateEditorPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of com.cannontech.common.gui.util.DataInputPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * setValue method comment.
 */
public void setValue(Object val) 
{

   com.cannontech.database.data.state.GroupState gs = (com.cannontech.database.data.state.GroupState)val;
   
   String groupName = gs.getStateGroup().getName();
   java.util.Vector statesVector = gs.getStatesVector();

   if( groupName != null )
      getStateGroupNameTextField().setText(groupName);

   getStateNumberSpinner().setValue( new Integer(statesVector.size()) );

   for( int i = 0; i < statesVector.size(); i++ )
   {
      rawStateLabels[i].setEnabled(true);
      stateNameTextFields[i].setEnabled(true);
      stateNameTextFields[i].setText( 
            ((com.cannontech.database.data.state.State)statesVector.get(i)).getState().getText() );

      foregroundColorComboBoxes[i].setEnabled(true);
      foregroundColorComboBoxes[i].setSelectedIndex( 
            ((com.cannontech.database.data.state.State)statesVector.get(i)).getState().getForegroundColor().intValue() );
       
      imageButton[i].setEnabled(true);
      
      //set up all the Images for each state that has one
      int yukImgID = ((com.cannontech.database.data.state.State)statesVector.get(i)).getState().getImageID().intValue();
      if( yukImgID >  com.cannontech.database.db.state.YukonImage.NONE_IMAGE_ID )
      {
         com.cannontech.database.cache.DefaultDatabaseCache cache = 
            com.cannontech.database.cache.DefaultDatabaseCache.getInstance();
          
         LiteYukonImage liteYukImg = null;
         synchronized( cache )
         {
            java.util.List imgList = cache.getAllYukonImages();
       
            for( int j = 0; j < imgList.size(); j++ )
               if( ((LiteYukonImage)imgList.get(j)).getImageID() == yukImgID )
               {
                  liteYukImg = (LiteYukonImage)imgList.get(j);
                  break;
               }
         }
         
         //be sure we have found a matching LiteYukonImage
         if( liteYukImg != null )
         {
				setImageButton( 
						imageButton[i],
						new javax.swing.ImageIcon(liteYukImg.getImageValue()),
						liteYukImg );
         }
         
      }
                  
   }

   
}


/**
 * stateNumberSpinnerChanged:  (StateNumberSpinner.value.valueChanged(com.klg.jclass.util.value.JCValueEvent) --> GroupStateEditorPanel.fireInputUpdate()V)
 * @param arg1 com.klg.jclass.util.value.JCValueEvent
 */
private void stateNumberSpinnerChanged(com.klg.jclass.util.value.JCValueEvent arg1) 
{
	try 
	{
		this.fireInputUpdate();

		Object stateNumberSpinVal = getStateNumberSpinner().getValue();
		Integer numberOfStates = null;
		if( stateNumberSpinVal instanceof Long )
			numberOfStates = new Integer( ((Long)stateNumberSpinVal).intValue() );
		else if( stateNumberSpinVal instanceof Integer )
			numberOfStates = new Integer( ((Integer)stateNumberSpinVal).intValue() );

		if( numberOfStates != null )
		{
			for(int i=0;i<numberOfStates.intValue();i++)
			{
				rawStateLabels[i].setEnabled(true);
				stateNameTextFields[i].setEnabled(true);
				foregroundColorComboBoxes[i].setEnabled(true);
            imageButton[i].setEnabled(true);
				if( stateNameTextFields[i].getText().equals("") )
					stateNameTextFields[i].setText("DefaultStateName" + (Integer.toString(i+1)) );
			}

			for(int i=numberOfStates.intValue();i<stateNameTextFields.length;i++)
			{
				rawStateLabels[i].setEnabled(false);
				stateNameTextFields[i].setEnabled(false);
				foregroundColorComboBoxes[i].setEnabled(false);
            imageButton[i].setEnabled(false);
				if( stateNameTextFields[i].getText().equals("DefaultStateName" + (Integer.toString(i+1))) )
					stateNameTextFields[i].setText("");
			}
		}
	} 
	catch (java.lang.Throwable ivjExc) 
	{
		handleException(ivjExc);
	}

}


/**
 * Method to handle events for the JCValueListener interface.
 * @param arg1 com.klg.jclass.util.value.JCValueEvent
 */
public void valueChanged(JCValueEvent argValue) 
{
	if (argValue.getSource() == getStateNumberSpinner())
	{
		stateNumberSpinnerChanged(argValue);
	}
}


/**
 * Method to handle events for the JCValueListener interface.
 * @param arg1 com.klg.jclass.util.value.JCValueEvent
 */
public void valueChanging(JCValueEvent argValue) 
{
	
}

/**
 * connEtoC23:  (JButtonImage2.action.actionPerformed(java.awt.event.ActionEvent) --> GroupStateEditorPanel.jButtonImage_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC23(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonImage_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC24:  (JButtonImage3.action.actionPerformed(java.awt.event.ActionEvent) --> GroupStateEditorPanel.jButtonImage_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC24(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonImage_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC25:  (JButtonImage4.action.actionPerformed(java.awt.event.ActionEvent) --> GroupStateEditorPanel.jButtonImage_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC25(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonImage_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC26:  (JButtonImage5.action.actionPerformed(java.awt.event.ActionEvent) --> GroupStateEditorPanel.jButtonImage_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC26(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonImage_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC27:  (JButtonImage6.action.actionPerformed(java.awt.event.ActionEvent) --> GroupStateEditorPanel.jButtonImage_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC27(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonImage_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC28:  (JButtonImage7.action.actionPerformed(java.awt.event.ActionEvent) --> GroupStateEditorPanel.jButtonImage_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC28(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonImage_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC29:  (JButtonImage8.action.actionPerformed(java.awt.event.ActionEvent) --> GroupStateEditorPanel.jButtonImage_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC29(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonImage_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC30:  (JButtonImage9.action.actionPerformed(java.awt.event.ActionEvent) --> GroupStateEditorPanel.jButtonImage_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC30(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonImage_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC31:  (JButtonImage10.action.actionPerformed(java.awt.event.ActionEvent) --> GroupStateEditorPanel.jButtonImage_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC31(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonImage_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Comment
 */
public void jButtonImage_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{

	javax.swing.JButton button = (javax.swing.JButton)actionEvent.getSource();
	
	java.awt.Image[] images = null;  
   LiteYukonImage[] yukonImages = null;
   com.cannontech.database.cache.DefaultDatabaseCache cache = 
      com.cannontech.database.cache.DefaultDatabaseCache.getInstance();
    
   synchronized( cache )
   {
      java.util.List imgList = cache.getAllYukonImages();
      yukonImages = new  LiteYukonImage[ imgList.size() ];

      for( int i = 0; i < imgList.size(); i++ )
         if( ((LiteYukonImage)imgList.get(i)).getImageValue() != null )
            yukonImages[i] = (LiteYukonImage)imgList.get(i);
   }

   final javax.swing.JDialog d = new javax.swing.JDialog();

   com.cannontech.dbeditor.wizard.state.YukonImagePanel yPanel =
         new com.cannontech.dbeditor.wizard.state.YukonImagePanel( yukonImages )
   {
      public void disposePanel()
      {
         d.setVisible(false);
      }
   };


   //get our selected image id with the JButton
   LiteYukonImage liteImg = (LiteYukonImage)button.getClientProperty("LiteYukonImage");
   if( liteImg != null )
      yPanel.setSelectedLiteYukonImage( liteImg );
         
   d.setModal( true );      
   d.setTitle("Image Selection");
   d.getContentPane().add( yPanel );
   d.setSize(800, 600);

   //set the location of the dialog to the center of the screen
   d.setLocation( (getToolkit().getScreenSize().width - d.getSize().width) / 2,
                  (getToolkit().getScreenSize().height - d.getSize().height) / 2);
   d.show();   

   if( yPanel.getReturnResult() == yPanel.OK_OPTION )
   {
	   setImageButton( button, yPanel.getSelectedImageIcon(), yPanel.getSelectedLiteImage() );
   }


	fireInputUpdate();
	return;
}


/**
 * Insert the method's description here.
 * Creation date: (8/20/2002 4:21:07 PM)
 * @param button javax.swing.JButton
 * @param img java.awt.Image
 */
private void setImageButton(javax.swing.JButton button, javax.swing.ImageIcon img, LiteYukonImage liteYuk )
{
   if( img == null || liteYuk == null )
   {
      button.setText("Image...");
      button.setIcon( null );
      
      liteYuk = LiteYukonImage.NONE_IMAGE;
   }
	else
   {
      //strange, this will preserve the size of the button
      int width = (int)button.getPreferredSize().getWidth() - 12;
      
      //strange, this will preserve the size of the button
      int height = (int)button.getPreferredSize().getHeight() - 9;
   
      
      //javax.swing.ImageIcon ico = new javax.swing.ImageIcon(
      img.setImage(
         img.getImage().getScaledInstance( 
               width,
               height,
               java.awt.Image.SCALE_AREA_AVERAGING ) );
   
      button.setText(null);
      button.setIcon( img );
   }

   //store our selected image id with the JButton
   button.putClientProperty(
         "LiteYukonImage",
         (LiteYukonImage)liteYuk );

}
}