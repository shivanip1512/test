package com.cannontech.services.infrastructure.service;

import java.util.Collection;
import java.util.List;
import java.util.Set;

import com.cannontech.common.pao.PaoType;
import com.cannontech.infrastructure.model.InfrastructureWarning;

/**
 * Evaluators implementing this interface will generally look for one particular kind of condition, pertaining to a
 * subset of the system's infrastructure devices (RF gateways, relays, CCUs and repeaters). When a condition is found,
 * the evaluator will provide "warning" objects to describe the condition.
 */
public interface InfrastructureWarningEvaluator {
    
    /**
     * @return The types of devices this evaluator is evaluating. If no such devices exist in the system, this
     * evaluator may be safely skipped.
     */
    Set<PaoType> getSupportedTypes();
    
    /**
     * @return True if this evaluator can evaluate any of the specified device types, otherwise false.
     */
    default boolean supportsAny(Collection<PaoType> types) {
        return types.stream()
                    .filter(type -> getSupportedTypes().contains(type))
                    .findFirst()
                    .isPresent();
    }
    
    /**
     * Evaluate the particular system conditions that this evaluator can analyze.
     * @return Any warnings that were generated by the evaluation.
     */
    List<InfrastructureWarning> evaluate();
}
