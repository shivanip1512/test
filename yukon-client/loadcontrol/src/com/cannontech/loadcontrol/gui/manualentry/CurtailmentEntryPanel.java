package com.cannontech.loadcontrol.gui.manualentry;
/**
 * Insert the type's description here.
 * Creation date: (1/20/2001 10:59:31 PM)
 * @author: 
 */
public class CurtailmentEntryPanel extends javax.swing.JPanel implements java.awt.event.ActionListener 
{
	private com.cannontech.loadcontrol.data.LMProgramCurtailment curtailProgram = null;
	private javax.swing.JLabel ivjJLabelKwhAvail = null;
	private javax.swing.JLabel ivjJLabelKwhPrice = null;
	private javax.swing.JLabel ivjJLabelOfferExpires = null;
	private javax.swing.JLabel ivjJLabelOfferID = null;
	private javax.swing.JLabel ivjJLabelOfferIDtext = null;
	private javax.swing.JLabel ivjJLabelStartTime = null;
	private javax.swing.JButton ivjJButtonCancel = null;
	private javax.swing.JTextField ivjJTextFieldMessage = null;
	private javax.swing.JLabel ivjJLabelHour = null;
	private javax.swing.JLabel ivjJLabelHour1 = null;
	private javax.swing.JLabel ivjJLabelHour2 = null;
	private javax.swing.JLabel ivjJLabelHour3 = null;
	private javax.swing.JLabel ivjJLabelHour4 = null;
	private javax.swing.JPanel ivjJPanelOfferings = null;
	private javax.swing.JScrollPane ivjJScrollPaneOfferings = null;
	private javax.swing.JTextField ivjJTextFieldAvail1 = null;
	private javax.swing.JTextField ivjJTextFieldAvail2 = null;
	private javax.swing.JTextField ivjJTextFieldAvail3 = null;
	private javax.swing.JTextField ivjJTextFieldAvail4 = null;
	private javax.swing.JTextField ivjJTextFieldExpires1 = null;
	private javax.swing.JTextField ivjJTextFieldExpires2 = null;
	private javax.swing.JTextField ivjJTextFieldExpires3 = null;
	private javax.swing.JTextField ivjJTextFieldPrice1 = null;
	private javax.swing.JTextField ivjJTextFieldPrice2 = null;
	private javax.swing.JTextField ivjJTextFieldPrice3 = null;
	private javax.swing.JTextField ivjJTextFieldPrice4 = null;
	private javax.swing.JTextField ivjJTextFieldExpires4 = null;
	private final int HOUR_FIELD_COUNT = 4;
	private javax.swing.JLabel[] hourLabels = new javax.swing.JLabel[HOUR_FIELD_COUNT];
	private javax.swing.JTextField[] availableTextFields = new javax.swing.JTextField[HOUR_FIELD_COUNT];
	private javax.swing.JTextField[] priceTextFields = new javax.swing.JTextField[HOUR_FIELD_COUNT];
	private javax.swing.JTextField[] expiresTextFields = new javax.swing.JTextField[HOUR_FIELD_COUNT];
	private javax.swing.JButton ivjJButtonStart = null;
	private javax.swing.JLabel ivjJLabelTextUserComment = null;
	private javax.swing.JLabel ivjJLabel1 = null;
	private javax.swing.JLabel ivjJLabel2 = null;
	private javax.swing.JLabel ivjJLabelCurtDate = null;
	private javax.swing.JLabel ivjJLabelNotifTime = null;
	private javax.swing.JLabel ivjJLabelNotifyDate = null;
	private javax.swing.JPanel ivjJPanelDate = null;
	private com.cannontech.common.gui.util.JTextFieldTimeEntry ivjJTextFieldCurtTime = null;
	private com.cannontech.common.gui.util.JTextFieldTimeEntry ivjJTextFieldNotifTime = null;
	private javax.swing.JLabel ivjJLabelCurtailDuration = null;
	private javax.swing.JLabel ivjJLabelHours = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldDuration = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private java.awt.FlowLayout ivjJPanel1FlowLayout = null;
	private com.cannontech.common.gui.util.DateComboBox ivjDateComboCurtail = null;
	private com.cannontech.common.gui.util.DateComboBox ivjDateComboNotify = null;

/**
 * VoluntaryCurtailmentEntryPanel constructor comment.
 */
public CurtailmentEntryPanel() {
	super();
	initialize();
}


/**
 * VoluntaryCurtailmentEntryPanel constructor comment.
 */
public CurtailmentEntryPanel( com.cannontech.loadcontrol.data.LMProgramCurtailment curtProgram )
{
	super();

	setCurtailProgram(curtProgram);
	initialize();
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJButtonCancel()) 
		connEtoC2(e);
	if (e.getSource() == getJButtonStart()) 
		connEtoC1(e);
	if (e.getSource() == getDateComboNotify()) 
		connEtoC3(e);
	if (e.getSource() == getDateComboCurtail()) 
		connEtoC4(e);
	// user code begin {2}
	// user code end
}

/**
 * connEtoC1:  (JButtonCancel.action.actionPerformed(java.awt.event.ActionEvent) --> VoluntaryCurtailmentEntryPanel.jButtonCancel_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonStart_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (JButtonPostOffer.action.actionPerformed(java.awt.event.ActionEvent) --> VoluntaryCurtailmentEntryPanel.jButtonPostOffer_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonCancel_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC3:  (DateComboNotify.action.actionPerformed(java.awt.event.ActionEvent) --> CurtailmentEntryPanel.dateComboNotify_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dateComboNotify_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC4:  (DateComboCurtail.action.actionPerformed(java.awt.event.ActionEvent) --> CurtailmentEntryPanel.dateComboCurtail_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dateComboCurtail_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Insert the method's description here.
 * Creation date: (4/9/2001 3:16:28 PM)
 * @return java.lang.String
 * @param seconds int
 */
private String createTimeString(int seconds) 
{
	int intHour = seconds / 3600;
	String hour = Integer.toString(intHour);
	if( hour.length() <= 1 )
		hour = "0" + hour;
		
	String minute = Integer.toString( (seconds - (intHour*3600)) % 60);
	if( minute.length() <= 1 )
		minute = "0" + minute;
	
	return hour + ":" + minute;
}


/**
 * Comment
 */
public void dateComboCurtail_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	return;
}


/**
 * Comment
 */
public void dateComboNotify_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	return;
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G99E48FADGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E14DFD8BDC54D576383F0DDA37E8532222225222160AF52D58224DADABF623220DDAAB5AEC232234564AB6AAAA2CAFAF87DFC0B2AAAA96AAAA8A71928A914B87A0682803202121B2B0830C8EB353B06438315B7F5CFB3F67FE9FFCE7F8EC6E3FBE9D3FF34F39671E47FD1FFB3FDF847DE79352121275021014A6087FFD19A488D5378942690F6FDA0938199798F5026C3F55G1F887BEAD36119G3406EDCD
	3AAC616116F4C8AF74B76A4CC5CD3AE570BBDB087F44B081FEF811138F34C54526DF7A16B3054B5151741F8EAC04E786C096482AG988310A5BCF7A0C74437C2BAC37CCDA0A9D990EAAFA4F99EDF19A343C70879F200D684B01366C9B810AB527DA1CD728443B37CC216B79A1E7328F667D6D709795A46CF90629FDE133C084812150FD07AEB465BA2BE73041B29A3D28427279E1EB546D35DDFF5BAFA0BBBCDF63B436E36F476945B9CA6F3A77CF6B9EC455D7D5662DE133D5FE433G62CCF5752EFE175BE43575
	C2320EE00CA63B4586767C1A687F5E4AF4DAB6688FE963C5846748A5BECB075FF9GD597218D0FAF2A91F58CB8B5C1083DFE09D79B82AEE23A07DFA45990D37FE6DA4FB8D27EEA63C211AF81682500E33AD80D28CB68B85465EBBD499B8769C4G7DF844AF4DA178A2C85782340DC79D37EDC09DDBFF781DB06D693814CCAFBA3A47B35D0246CBBA9A363C19361C361B06FAD277B1C0CB84483A985A8EC08B009BE0A5ED2FA9F51B603923433D4B515B6B306FF0BAF75A4C2EFD8E3345863F2B2B01A2628EDABA9D
	AE33A030B6193832C8C39F847F0B156D11G336D9B815BD068419B050873DECEC95330AD6C497C6489E299E197CB364D3E18786DA5DA375360F712D8AE434F26780ACBA4BC2B2BFE0AA7E9A35042AEC1BF37E620AE0654AB052C325D49BA8DDD826F2FC94E89E0BA1486C83AB09F2FE9A0BEEE833C87E09CC088C0A4404CG74713E3A4DC37938917A004BEE32B577F7B8CDAE774EFE2B4DECF1093E5EE07465EBADE0FC15A366E3FE8959AC2F23693757EB7AE5FAC8E1F26A254C9F3917CAFEE1326DDEE557DCBA
	38EDE470BA3C1D769563252C8EF59CFFAF457748702CEE6BA81E2447GAD8E0065BF1F762D064B54ED64F20AB7DF26EEA339B958C646GAD8E00556F54C6B2B6B6DC8EE3BC40GC0GC098C0B4C05C65D84701F5A5436CC7C6D97DB25E267A257034F85CAED3233D4FED32F7DA8E1BDCD6D3074D52A708F90E56939BBB94FCA7E87F6E84993BADF60B4B6436BA6CD03A2957820D290F6569297F0464F1D9A835455AEB81813DCE814BF556E74353E66AF39FF21ACDEE0B140351BD7544A75F1B8EC309D0G69DF01
	44DF5939E41CCB055FF901682B5777901C8752638251AFEF57AF0667DEE85C96DBF5F52D351328E1F21D41B67AEAEE96BC03A13F618A23AE9EE0421558BF5FE845F6D83B6886216849BA4DF6C840F895EBD3BDD7295B613B347CF1001F8C908DB07BAA1CD7FF48ED9D22BF901D70F77C955A6D1668AECF937D25BE98B0240CB4D53F554A132251CF4913797DDB83E93BD9C1B0278398025077453B73D81B5CE96A33E0ABBC600286E4B1CBB5417296B610B94672BDCC3035962745EE069FFDE29BA8EF18A7354FAE
	87EFBBD594CF462BDD50007AB87E2B06CF989E4A1037F62457D33A496DF6D9BB7A5D16E60B5BED35F7CB7C7B29AEFD0A2130CF347558BE5AFF414681GFFEE6B538D5932F6E6F0B8CE75BBDBC88F925B6B39F4DE1EG794303307E6F22E347F4C88BD79BF579D77375964513FC3500B3F37CDEBD29CB12EF38632960A3AF11BBF84CB6D3995E5A41D06DE728F643E40C4B4992E94BC4FE9D27DDCDE9FE20F7A840B400C4EE7F1A1CD6D9394867CB37E5A3300349582A102113357551582F8656D69EEE745E569FEF
	54EE6BCFB7EA3775679AFD3765179B355AB2234DEAA43ABBCE5BE5FD632DC6B2DE42BA58EE219D143388EC7D7CC68B3143EA373A3F311A3BAD6EE66B3FACB0CEDDC35A78A6BAA667436F2AEBF08CBD3D9647507CFFCD94261E48CB56DAEF855E70F57238EBD8FB8C3EC69AC319CE7F5CC37A0345E6A14B6FDD0EFE3B1B619368F8AF627BD2A8EE425E2B88EF411E1D7DEE37433E0BCCE636A293352518BD0C96D7174355EBB1971CB4FDEFAAB61DF697533AA85EC149F56477463C4FBF7FAACFF355DFF4D2DE7409
	9D2AB28D5E8B5D3A717046B201699914F625DC4FE6B7D44FD9D11316BCE2AD4B84D14FF356DDCB752C05399916969D0E7D8E37356B4CCF2B2AD9D978C835AD97F50DEB1B2854D514F616149549A355162C4559DCB2EEBFE95791505EE3GE6DF03F309FBAF2163DCA2CE183B9CB69B6B12C06B39167637D5FAD99FCA3F166D4DDB60496837E852A7F3FA5127DA748CDEFE2BD7BA5353E4A0E3F51F653BFE8BF485B2596D351C41F51FE1310AF658E46B175613CE4382F85AE473A443F76E536E6B56FDA4A6F10A17
	5F3BEF2EC056052CCCB6B6CDB611B21DAEEB2F09D4164BAD46A0020C0A988458C16295B361198840F8EBBEDD82CFAF5BFC31FDB56610BCFBF6999D4EC34EFA2B45E6266D15B4B71E673C3DFAD59ED2A64942FCBAFF095C277A89CC170689D8A76316EA515B60D9BA1146D3F2B0D662845CD80090B14F4C89629E11663BF4B9669B00F4GC058C416AFFE22BC5F1195182F66BAE8BBG6E6BD83E306B6479D62D44FC4275C6DD4E75D23E2A6BD9BE3F6BC93E9D3998FFA86138D60AFB8FA6536BD3F00F37AFCB9E4B
	59FE35CBF3DEA090A916BF7DFA755E77CF87C8390900DF980CFDE746BE79BAECC7DF1F2353CA379EE27B3AEC3FFC4EE0382B764F07E7175555877BE0334503EDF462FE22AB591B08E8311D5DD238CD983C572AB3DB5D8E97AEF3F71D269D3E45318B36C78D504CF771A9753055F2DA405811E9957AABAF98674CFF574BE3C4D3B2BFCFDE6045B72D414CA71EE049B7F1D5EF263132DF64E50787E3BBFFFBA3698BB47EC506A9CFF15FE9D8AFD4D76F21CD1D714DEDA2FCF44F9A0C31225CD252AF8BEEB06A368334
	5E0065D9AD9B84D9BC6D142D3B78E4A7D92194F711468F85132E504F3A02E8730EA5281773860CDBBD3894F1A100E3FB628F681E18480985DC4E0D58C7B294FD4888F88FC090G6B03266565709C79200F75FB52CA7C7F5FCC732C9E2F4B5EAE6A98B569CA2166470CE42DB85A584C1C6449B7327A0B39D12AC777B4E73267C50C775D339CFD117F9B988FFE033E585F29650B005F20AF562D786FFC217FF62B640B512CA5447846AFD6207EA120DBAC573F27CD2EFFCE8834AD000190547F557FD27F06022F6079
	5FADB0B0C6D33F92ED98877AC506208DEF9C5332C138897B486DDFFEAD57E1F46B860CDF164B474D2931C5DE47CD7DCD2CAD955C249EB7EF227D3B96702DB7613819FB60935938F990C6AA133D5BC666B5F14FF20054874C3FE27AAF8708DCBA7F8A38F76ADAB512F81F6DA60C5B3CF21078EF8C2403G42G22GE6F15D8E99070CDF56F9FC44AFE70CC82F05B763FEF3C1131CAF8F7095B7CBFB6686785DF633F28F4DE2FC9368D8693C194578B2B9FEB245874A702CDD2D21F8121E8A341ADBD0FE7D92DFFA07
	5FB2F8EF4F7822167A620B724AA7ACD773452A72A65E2295B34898447729AA1D972A64E37DA23319543F46DC44C69B814F105CA7546BB7929B2902B28D21B8FF5451B9051C2518C331DD553410B5CBA42463G9281F2FE8B7E85E8859878AD362FE02356FC2EECDF5EA6F3A93644FC91B1CA9FBEB1248F03FE2B64E3F61F5B19AE361D305FE23B993BE2F4BADCB608CF2DC34EA42DFABCE7CF1920FD2656C99DCA0F537A5DD6920045C1F02743436BB73AC22BFECBC1D66DA42C5FEB5BF0FD50B6896DB48CBA839A
	1E1DC78771296D8C1824656BF54779595AA4ECE3830788AE8E52711330BDA5B511F608E32951E1353B859CC7A7B511FD0B43E56D365A91F7BB45F5BADCB4904362057F26EB37545F99F5F93F43F25FB868BDEE744EC16D385107873563C6C94D3EE324731A3D451518FE9FF17DAA88D05C9ABA2FB4C03A0D63AEEFA6B8A7247DB82E037AAC8452D3B96E1C43540F10CE7C9D566F0D25247FE6CDB66A0AG8CGCE00F1G1381A2A7E33EBBE83E6910CE84483D957AB8C05B2DEC9EA66BA1162F20141CBB90DEEFE3
	63B81116A54A9B4EFC619473952972C7CE164761F7D3590BFC1433C0FCE25CF1B832B1B6290EC1E60ACF665BE3CB505FE3EEC5FF3F3494F14100DBC565BE34B41336093EBECB9F9D7020371A84C61B61DEA2E84485771BFA253D6F174B6709F96A5C0EDD653C5F041EC897F50C3C95779317F710B9CF388D46E400525B300E76ACD11FD7B4G2D6DB666CB2778743BED683A8904BC212AFCE27C3F45FBBF5A57225D0F1ADBC85D75B97ADD1D96F5DFB95A1243E9524C50683674927708F18D4A8F6B67EE4B203EF6
	1272B31AB77E3E96EF7D11797EC3056F4BF83BBB3FD36D4F296013E922DFE60A4FC4151F32EE9F6C5FFC40D52970CC763DAB6432B773FACF2FCC9775B05C0E757E6A89D26FFE108E82883B9D6BBD384D671AC5C39FB1BE39D2AE3B025B3D69382F72E2B54AE3FE7E3FC3E4ED666169F3E97A0C00F31DE5C7862F2BBA3BD99C5CD91CA3000E0963D3856141E444AD791460AE821CA399F55EC2477B8EC73F5D8C95D891C672996958998FFA89E138771954CC7259CCE79C7DA0E3B64D37368567CA8F244781C4G44
	04B1FB180E371EA6E3C9174B548BCD2459E9699422FECFF84F9CC25EAAC89BGECG7EG213FC719D79EA63C40E86D6D6F2541FD26DF4FB7C4BF7D9DB09F5D01F959F83647E06A30588EF4F5D9DC0D353CDE68FAD2C9F3C32F62742F0EAC617496A09C6A333848724BE21772BC10CB4BA0E49ABE58E7696BB3F5CB634D875F50D8DBF3274BE13311788595C43A85232F29A2F19D9659E0C1BAB1CE7C250E634B44D8676B2572BD1C618E3686F15E01FB3C0BCFE9517DB8FDDB2196BD10530FF5486921A2FD9ABC59
	9A6826AE799AE826C8575FE95495G307AF3AF41BC5B815782608688G8863F9BED80AF92681EEA6C0FAB8148150900EFD6D56936A3E5193AE7507017041FD036DDF96F4123EBBAE1C6DDF52B8FEA945874B70ECDFF3F5876E17430116FB974EBDB6BA9F0D01F4G47CDE6F3942443B96EEBBAC7C5C1BA0E636E5FC5F08910567F81F14BEBF1AEAB6038AD35381EB0F0DCE8A74AED6738F7BAD12E1B630E1AD16E980E7BBA996586F05CD394978269880EFB6C886A9243F1EF9E61EB1BBFE09DAC2A1457C1565DC6
	DD7E5D125F2B6E76D6873FEFA7BEB55C4DFC3D12639F21F8FF991E55411BF43CA569A82005CCC11D6EEEC3BD7D7E08389D479197823828BF123B015735893C3F1D5F3C9E1EF64B69BC9E29600102025222BC783F222C2CA82F3C34ECA346F9A71C1647AB2A6617FB0DD7E45D43EC4E971F534FD9AB5A3037856F3A3581AD609E0C2BF42FD9A748769D560E5E627E6FFB0BCD9D6EE20B596A2E2E5E5FEF33994461D31C13AE21F7A6C9D9D177601CF49FADBF75DEE823G9577E29C56339E633021B7DEA9984654EB
	5E550BED79BC59F02F38BE39D70A3534EF41B86C3507D0E6A850636EA538C78F494783625FE7E1FEA8A66D0452BFD65049B888AE15514B8E4B69C45F9FD36474CE85BDCD464FECFBE49D5A1678C808E07BFD0557FB08C5D319CDC67169BC38D688D8B4BB0D350F970FCB6D636312BCF57B28354208CEAE6E947016A146213B3C4421690C407C16DFC67CC6662331D3F19F7850A9444D62B8F7A12EB30C77E15BD8D7102BDDBE1FCD98EFC0876E6946F25E6E3AD55A3C52CC435B538BDDA8FB6AFD581E1EB5137614
	G692C7BE1CC3A9F753CF28936036D77E3BB08DC22EE87A50AFA7EE0093A9D5C17A42797ADD5370392857D78D2F5BBF8CFECA7CC273CE52813076B34FF19EF1D46ACD36B1422E83B37AD732DD35CB2EFBA31F1A8126E97A6933F5D0FE3135904E3534C7BF18C7D040E5D8B9F003173814465D29CB96FA2E7E38CF7FD47D0F720068BC4967E4EFFC03E3F1B721349105F19C91361E0BDC4ED6B35DBFA9DF6EBA7DB17DDCA5B9439503D7D81DC17ADB41333D2325CE2F91E21F90CC0EF63F95EAD236BBC13C73D4E23
	F32E93728D703C07695840026FE40DE6321B85DC377EE397169D82B0658102AB2D4D71E19F636B2073F3EA847C86E0383FD17BE6103E9701734F62F601731CC367E58350DAB90F034E41FE109E97017A3ECE75F53AAC309AF4D94C6C0A0AD8465C945A0EA0EFD8846A7B4A1121754DB9CA78E201E7D6843649FC3A3F497913D1D774A7442D26E3169152E60E7BF5B9365D31FF42B6F9F7BB592B04C2BA92E0A6C06A1FE1ED8DD083508660847083888108840885C87CB372BFCE79F39E04BD99C0AB0087A090A09C
	A086A081A0A79268G2D116CEC171C5BB27EF7CEC4EB58CAF4A04F48BFEB6F2FD1D7270C1E68A52F9C5A44BCB5229D64371F0A0F78024E1DA2BEE498652A0159D6542EE59B46CA3C5D89CB637C92EE65B0E4E22C05343965626FECD59E6C539863D9B2C23B8830757D93EDFC7F87F56A8F908A9085B0AB9277G2D47B14F420720CD81EC87E8879873902EED9E7BD63EAE4B3AB2B7194C81DA737F0407D8BD04BE24BEC7CA25E3F2AC60939F62676FED0570BCECBAB978D49C10C61743E9F1394FB0AC3D91A27A3C
	29E5F4F74CCF0C12AFF044FCEC1DDDF9084C6D398F33F5F69247FFC57185B2BCDB3BBE48572E95C08BFC986346159D240E92A11D7308D1D78A50G50836077887A3274D829B04439C40B43E930FCEF3149C238E2BC6550686E5E5F2743F5E1589F2E93424F0BCF72F677A07091717D9471195E34166219FD111D443E19C0CB0D02B59040F60096GDB945A67B9D6446CA34DE1075BED6A6C2137B250B8F2D1C2C213C08633EDE31956DCBBA60A69919065FD5C88D15126C0BADA05E3B27EF2CACBC61C18B741070C
	050FAAE9F9102EF8D4CB4619C2F99DB508F95A4427735141B2985F959D3E6A564FAB5FABDD489788F9C2D57926EA703136FD40C25FF7F914356D940EBFC271F1B2BCEB73AF5075AFC947832D75AFB867DC6B73BC53FBDFDD37EC24FCEC9D707C09417133F779D9629450EB9AC0A2C056E36C1C000D1FBF18B0CF8160EBG5AG86G029E43B5462F1B090D725B1B0A18187C6E8857A7F489AC1305AF3E04311C2EED4E10E509C82B266B2EB50CE38D2387F5C974BBF711B3AAAFFB2BAFB743562AF2A36655574A4B
	E27DBA7218FC3F17D778F11256FEAF61582664A90F31F6907B18B45E8B83385FCB6D11F4DA239F3ECEEFF51267063E8D226DB5D6291C0A64611443787CCECAFC5149248E56989DFD6EBC9A7A937D7647D3D21E08A343AFBB56A6713DB5825B36D632F82E0B8675D9BBBBD809EDC89F8D6BC3009E0001E866D346D7D5B638FD9EA8C33E00E8965F8D0567D4110F354F9B4AB1CF8C60E781ACFC9CE4G989E4776B9FFBB21335DB45EC0C43913BEA3F7B3251DB0211377EE2458EDA66725CD1B92996DED7ABE8B2331
	4BB424E4C6DB31A1D3C91371A5E6E5ABE42A69FB776BB8AF5E113EC50643BB3E133A16A86CB2D9ED357D6C55A329DD6E2632F6B5BB2DF6AA0C67E074F30B9770B29A9C7D2EBE6CB7DF937DD5B71D310DFE1FA5270922D9ECF73DC99D7BA5670E3647B1767BE4151CBE66F1C60F6074202DDA7CB11CFEB4D30BBE0B532FCC55228BCFA0BD4021A5DF4F69AB3E5362AF60743D1FEB51EBB87D12A2AD3A1153AFD544564DCFB0FAA0272FAC57628FFD8263A689ED9823187A8446A8569F739D23E8BD260ED154A96867
	9F739D2318F2CC9D2338C41047CD7EF39CF5CA60BA059E772D535F0F2BF5BAC7C14FBA61DB271DA73C694456DC977612710B2D2D8E3713582866BA9CD6D6FBE0CCBB50F1525269EEB1F5F31EF9A6D2AEBFE3E44BF31116C55BB8F96F43EA32D97FC53BD3331B9C36086F4D9CA232596FDA596FC7DBFE2A3808777541ABE7D50678CED90777B3633A8E6DB3633D9D5AF7AF1ABAFC3F33F324437BBBBB6D9D72F7F6D83DDFE9A7F5D37AD7987F811CGFEG01FF6577C6BA5688F41D2D31462EB3F713B3EB7256279B
	65BF5E695D56184E215F95FD21131C3BF5B8E08954CB4AC77C8C3AFEF7BB1C94A93E0354C9FC6432F67738D9D6917FCF9A8B32D93AA81A45D1765258CA98589571D70C2DBCDF06E7B5B19C7761DE021B8569C40E5B1D03B1182CE9087B4B8ABC172960385927D0C68347D574220CB60EFBF09E4AF0F2DCF992BFD361B8CFB24A886138F10548BB0563EE20B122E8C847F25C7C4DD85EAC0E1B5C416DF892F1F3E88C3A82522D9CF7381B7A8F52E3B8AE24135F79F892576407ACA4D6984953A7E8BA0E27E718357A
	96497F5375DF4122A5C37D6E60E8016DC9BEED47FDF87AD33097FD8AE37D1B4B95F79049C22F3A3A5E66B82DBAB76AEA47F3824FD398673F1516B9995211G31CF61FCB55144670627F0EEF84C241E9BBA8579581E54211E9BCEA8E26A1BBB54F3C313E2EE30F4286706E5C97239A14EC1560C25CF4398816084988B90849076B40E9331DD850277588DF3889DABDCA62B5D4D7C7A2FCA5C6BC5C2B9C28C7A750F73CB05E15E89EC313AED161DF4754C7CF7FFA55E972A0AC1DF0FE1F7EAA1BD96E0C28C3EA3F03A
	8C6BB59CF033E3308E6EAD43BAA8F8864BF81D66ED073487E05CB3187711F24C9B728C56577B656A7A1A23282F424D6A7A5A26201FBBE8AEEFD61C4F5DB9E8AEDFA648579747CCF84E957B8C7A746B222A617AD4DAE813B5B6FD1709153BF08B7A3676EFE87FDF37222C810E9B1F0967DA319C77F8AA62F21E653EF3E03FB0F2DC53F718EFAC477D62F3FECE46F18F97215C04E751467FFC31DE9862FD923E2CC7DFC515228E2553316C0365A82FE7BA0EE5F3FC5EB172BEBE1D6373AE1177B543F5F66F7368CD76
	2167515B6C74DDA5187FDA4EB845FBE0F75A697D512E2EBE8B1F2F275833B82E318F3643D632BAE37B160EB265D91007760B8960135069F80612C1FD958169686938FFDCECA0FCDD503ED81E8283FD578A68694FE11C64F88E3FCF84B883008D409FA074B9AC7BBDBA47C6C1BA0663165B68594F5F61775F91F70C4E317910AE653859F40EED03F44F5FD1E6E3924A8C825CE400E80059242C6711EFA21DF3CBA1DD43F1F751B93787526E675146A965689B367F7F77F70200FB6C551BD1CEB0648F870881C8G48
	09C5DD9E6C6076834EGE0837087880DC5997AEE522F3F37385C56CE130D9DA06FB4390C8E1B35730CF836D4C2676A4F09EC4E575BBDB82660574D637AAF3018C2BEBC2BDE1047866E6D44BCC6401B817CG0281A2DE40326B9651FDBA3D7F442FCC09F73147D954F73149BD5AB860CDF8817BD1FE7B687AD179A879CEA97832DE9CFA6D4162136BCCE43C4FFFD19D2BAF2678529755317ABB799A2186E893DE647710CD236B7F2FBB3C777FF847507DFF0EC3FB9D1D629C3C0ECEF7EA2F23B31C72F5B433E7CC65
	D076243E24952F7E7510FC6AFB740C6FC14A17775270560C95AF61B7F462691C5F70123A7E66D0FC4BCB6A7ABB2F946B2F9DE891AFE17D7D3BECF46D6E02D172C50C180F59E5AA27E7C8F1EAFBCFD2FCC51C5A5E37795AE7BB500263505E687251695DE152DA07273FACFEE369E56F75D72A2255C23A75E52DB674499635EEB6D93EB19AB298DF4CD6AD5D82447CA1BEF41B2222C5C3BACED3374BB2653AA508F9963EA24641DF71265BD329F23E8AB1DF0378EC734A976D70D5CFCE2FFC073F13737909798245E7
	28D73EDFFEAE671BAA661BA6BEE7FA65FB2CC84E17A8664B1AA15E57931FD570B44C105F09F93C5417FD6DB33C497BC651FE5DE23E3162B3C8030F4D5F6BC888C50C57BEC36F372C2153DBDEE3ED759AB1CF03DB4AB3FB2F0F98FFC5C5D1DE59977CECE026C7625B1A33C64DD78F8B2502B5E62B496668DEC3EFC21615EF447529DF8E6EAFA64F407D45EDB96A7D45DAC1F1C7AAC73D3F48D45087D6287797D7A96813D6F85BDFB0FB0C8312BD7D27066F073EFFCBFCA53D243E5640423331967DFB59FFA47A14F9
	BE4A5D7C85143B05173BB4C962DB1734CE5B3FFDA6FBDF9FACD73A4045E570FF853953A85E63CBC29F4F64BE3EBFC96D634F95BE0ACFD27BF81E023EBED96D6367947456E4350F114EEC5A12AC5914D7B8FCDF7CA5D5623B22FCE4ED2D1B479E72E6229FAE9D94FBD0363587CDEABF6CD344965EB7297D7000023FF0F06CC1106FE5DF6FC01DDA39CEABBB55BAA96F376E6BD46B542850292ECB2D53F8C53C64F417DA27E7457219DF6B3B49BBB2326B1D45325B1D45076B8E36B46E5AE1B8513C6B608103E1670E
	03A7F6983E59F124D94039B7349B639E6340264819386F0C6F467D3570AA469DF474FEFC95C983743C0AF9DF6EC43F0CF9957D12EDD67B65A105DF6A4CEA3F1C23704BE9336F3843CDE65FF595E941BDF9B8577F88DDE74C06F47AEBC6DD5EEB98CF7C850D09D53D46766EEC6CAEB4897CF7056C779F5B4F7EB940D3E7D586FB8FEEEAB6B9B7375AEDD63BE5977B72210077D67FCE63D6C670C78F7751A29A1B9800743857F0FD76C129641714B26937FF695977518D7F83995D6512CDCE596F77B56F6D7C343297
	171FCD992CCE7DCCF8C690446B79E5931E9104F0DCE2950F73F3DCBE0F69C7F35C9DA6BCA3086738829A27CB7F877437FFA04EDA0D3C359C7741D654250763CC3BD197B7479D4EC5DD46F25CFA97169744F13B7BD017299C77DB9A8B1C8669B80ECB2677E893A01DBE8BF15DA9D81E1E63DECFC55EAA0E936C48EB60B8139DF9DBB9EE0683F1839C577B9D16B701636EAC447242B8AE2788F927F25CB51FF3BBB86ECB8D5E76C264CD6038D7E8F9392F9BF5C52FF31F96935CF6C89BB96E6EE264ED633869A5743D
	A3C887F3DCA99D9742A19D43F1B3CB79F98F47594BD1EE569B081BF6946566F3DC653748DB7A860EB33F4A995DBE700A24517159C69CA7E1FC7F74F91F4DBB5FED5D230BE3CC9D12CFBB0E71BE65EBF9E3F8F10C1EB7B00E71831D7F875ED06F6B7DA8FE6C9B6AFD7D22CE5C5787GAD015767EB1D237353239664EBFBD33CDB7826E4039F7C8E8488156118FEE7E85CE16A1BCC3F0D9CFF9945674E1670CC6F93F41DC0529E20C53C057146AB5A49BA44E433F65B956FF7EE68A1F8B7B97EA1EBDA816F5A6B3EA0
	EDB96BED23AE77EDAC63C6FA6ECD738A38CEFE0BAE3358EFFA6DD5644F206BCD8370363E0D715FF5F4BC7503743837B1FE9B5A0E314E29001B86908F200F871EF864FB1E0E4DAD10EE0FC7DD4233497A28475A5DE3A371B60BCB0C4FB6ED41727CA1EFF0BC73672CF8F6C71F499CD30DF9D25FB16AF2G2AGDA81BC6F60BB8F1726CB361CCF4772C020853F03BA7DC84772E8C8CFFF874B5D66623161F7E14EG588E508EB066DD64F35231FD8224C35FC5DBA2B215F17E3F5131BE8668F1BC4F7294E51CBC1CDE
	A9E4F27F13426F393DE75495GB4G74G0CFD8F65AECD23E39324435EC39B1F1DAF156131E399F1C0CFG48C9G3FG34A620FD9FB9783DF740798304929A402C8414F3991D9B963E8F7C6F231C0F96C8F2CA0A300C862037818CG8481CCF99F4BF8104E9153A1BD73FD14FD3A9079F2BE00719F40GE083707FGFDB427C86947ECDACEA85043F91E5EE2259FD7AF12F4FB2298E54C047C09G399F9AF5B5GED9FA27F5BA5A4E65C63F0D97F85F2CC743DE9BC6D61ED1F4EA1240286B85F6E52EC855F8E5E93
	990F097304FC08B6FFDC4A5FA3865CCC0074C428DF0006C4745565F4EE6A0134BB917D7DC206E41361DBFE068274F000980084001CB9B8EFE575601A390A63AE6A40B533E18E0EFD7FC70E4B79B78D245F59033EEF70D30278BE49D91541EC0E237B2ED630574D7DF0330E6046C2BA0863B64E636B9A0EE367E4F110CE64B8763ED256C7D0E79F218FFFACB742338652EDG83G81G138122GE68224FE8C6D8E20824088E0837087888108G0883C884508BCD3AD2G83GABBB0816ED0334BFC0A8C09440AC00
	05C9CD3AA2G83008D409FA094A08AE0964042E4208398GECG7EG21GD149D83625ECFB5250FE9C90EDA13F098DF4BC79D8A3D6789133ADC40376D3C01B68CBFF317CD4159C62371A0F4E0E6CC4316EECE2FD6945BA8A60EDA0FCD83EA4F971DDA5FC17E935C6BEB2001178412A3354B74884CF621E789E56A7AA7A8661273BA7248692A3A3F70D497D194FGC8CC122CED48B849463AEDC49DF1AD13D4BA1CB8DD850F7135AF16F85F2A72919BAC5F22083FCE53CBFCB91BC7969BFC229D63CD3320EF31F810
	B0C4EC30FCD0EC70D78A3AF9D0EC502A20DFE6D2471BD689729869FBCBA4FB420765873656BC338563EF79A9CD3AB6GF6FF64AF5FED91863F3BDD6C34193A0ABBCCFD564E6A6A1D64C13FB95218CFFFB748D6F2B0975118579D347CGA8B794A002G75610D55684369A96843E955EA9F96AAFCB0F72B5A0767AA68D5DB55BE7C1D02FEF22B5A074FA449FD7875B24907FBF3FD7830D259162EDAAE712DF02D56EECBBBDC501886475BBBDD6887FDAA7AE13C4BF7DBFA40257643AA857D9D175A8F5D8A7A06BE35
	9F321365FE38E705E44F364C617B616655925F3B49A36BD341A9688783774393A9EABFA86DCCCD9D94EFD7503FC8755D27FAD2FD7729CF73A5FB62FBC7D62F5758519EBFEECF145D37BD9F59FD57EB29C3ED4F378AFA07C3ED4FBF84F9CCBA5F09BACD61BA9DF47ABEBF70F32AF55A2D205F61D46B74DB85FD2653F71F3BF83D6463DB8AC756E68E9521BD715C1EF30AFC7B7877C5EAFBAED050E794296DD10E534BBFD75BF321226FE4EF146CA99C21BDD79722BDC5E9E84FA3053E6D19D3683B8F148CE10F2948
	37BD1794CA766CA99E19BD8945E80F195B333E4437BD2DA5EAFB1467B66717286DF9CCC11FD2622D8F08E72225F902723C2A197C0BD7777B0A8FB66EEEE8E1F9BD434AABFE53125F138D6236B617796EDB671629EDD51E875ED92636F522027EEA196F3E756667D25DC59E9DD95D393EC5FB26F1FBA6FC6B3B6E1E78D6ED4FA38AFAEA1B6F3678C51B3736487649DF53BD6E4239CD3A9CG713B96A5120D9FDA3CFF2FC2CF6F76B7GDF8BG4BFF1FEE70FB03B1BA5CEB0F01FC01GD3812681103B7CECBF3EFD9E
	661985F87294F46C19274332F573353F8B7259FC9AF306FC861E376428763762F6533D27877279713CE03120789EDC1D47E9F5113BEE0C7E4800721DC4114C7F8E490E13738579BBFB523B0A999C3F77F40F51E56D34F8216D785EE435A12D6D47AC05BCCAACE3346ECDCA9AADD424D5FA146F8E623B0A9575CABC3E2F3826CD232CF251266FB5F490E90F55EA7A239C75FF34D4235C4D0C766F939A650A34456BB44B5D0C65B6B7AA6D58AC62DF7DD1092F90719798B57428905F556C5550C32425D4E86AD101FF
	FBA4F650BB01249DCF0676A4FE77BEDB7DBDBDC20F607406DEAD7E98CE4FDA21C51F45695F4E55228B69C8FF38D8CB3E1E53BB37EA518BB8FD3EDE2B7C9ACE7FE735965D4869376B354AB7F33AFF25965D43693119DAF4FFCE3FDF13FF8227FF26499F466993B579A3B97D6E8CAD7B26F37A69CAAD7AECCE5F1021D5FE6ABC243FD921C54F6174351B3468C573B0667474A86FAA7FB868FE239A344F24AE9C12CFFDA6454EE2B6D513FD6AF650DBF9363419628DB2BC5BB7CF5902E7CB2DC01B426D3D25FAF47676
	38C647F7D34A68782E370F0EEF23F3F4FCC70BC647F7DD61687866940F0EEF53A86FAA1F7EF624FCEC7DF2813D57414672F3BAC6967BAADAA571DE2B4BD3734A6E45D5EEAE4A5B7CE569C656F605F4EC3BF9731BF42D73B166D3562E78569FFB07EF374BEA5EE96AE6EF2D3135E1C3BA2E8D4781AF0B73FCCF4B0C04F4ACC042FC0C73F44D43FBDCD98BF09DF94DBC75BA1114D5AC60BAB0FA1EFA9D08F4E67701CFA53B979D9D0E5D0C6F7C4FA43E1A326170B19B16ED463BDC8D8B502EF333512ED00E7B31974F
	FF62B8EE778A644DDD08380B67A22E056312CA30BCFF0E3BF2AB62A2B8EE079E5F47CA64380DDBD1EE45A2443D26C7DE9B47BD405F878C6638E5D9081B4EF16F73FC7A8C449D4EC41C0163E2F8BEBF0E7BE7866AB20563A6D5A2AE1E630EE7A0EFD1A6625673724C9CF7F4936202B2F10CAD2D96F83F5BA27BFD7F1633FF06756C7FC0465C74510DC17AD1726D9BB19F1B9BDF23FDFEDA26FA4EFC1B62E3B355F366G9FF7E6814D180575F9EA1EDCFE9860A3331AFC1E6BB03E5C4DDAF5B1DD641D6D230C54CF14
	349CC89729F06299E9365AB75BE579DABE99AC037179754A79FA44FC8362F31C788C1671B3BE0362EF07040B74A871998B4FF8007445EA3E4B674A79F2C5FA29782C05E7AB00ED905F5C9235FDE3E4F98296FB336F5A2DEA3E90D95EA9DE796A75DAEDADDA4C9FA7BE938669D9BCC89E010559623E9B1E95G8D59EA3EB7B565A134C1FEE736D63DC77AFCC74B8FF882B579F233FC7105824FD4CD3E0FFC4A1B86BCB3B5793E4D74451788BCD9FAAD3E67FC4A4B871EAACD3E77B234788CE25EF6F83A81466A5575
	F03B263CA0B15FE4F8C6G448C626B541407B08B728BCB3474AC74E91F9EF88AB479CEEC7245D783BCC6CD3E59742E11F83FCD767B9769E7FF3E386A2C4A906F2853F51C99EC5F1A0238DFD25CG60DE6279D6F461BD5AC040B35C8FDDF80FB6186346EF43FB34619CB7FD955E4908623898875E234DDD0A380959F827371463847E37D9DAB86EAA3A9E8B06F4984731FB6411100E61B8973FAF9A47F1B7AFA7380AE5CD3A16E5086BDC01BA77F05CE2975ABB40F1FDAE34F7AC47B997239DC19C7765A914BB1963
	A64DC599C28E4FF786E568B9AE708C4A48633830F414D141F1873FC1998D9C372A847D9748F147398F26F05C9DDBB15F426508FB2F065F0F6538E3FA7469980E3BC70F797CB96E4E6A41BE2D5B0A3C53F93E9B37A26FCC0EAB2665D52DE85299D6A04E239FDC5EDC5E8E5AF93E4ACA641D4CF14FD7E23E880E7BD5A666532FC45C66AC4CD740F127F8F99E0EDB7285371763A2B3B05FF40EF3E5E23E599C37071737BD97F171DC3F960EB3737202B9AEA3937D974EF18EAEA3026326D5F05BD6A1EEF9A57A2F0063
	9E2E4472EAB82E105B5640F13FD9046585F25C2CC5036B63DF99489B4A7385F2DD92B9EEA737B76BD344C5ED44FC6D9C777DA64C676638B33C3C08CFF1AFEBDACF561A62F7363E311A5DBD8C1F6BD9A4619BAC643602007B4A9F6879B50B3D8753B1AB864A0BA3F2A86E8FF44C4A7A2CC9178BE08300356E2ADA9FE367BC016DB7918C40C300DC56206FD743EF4C43E4A451B35AB040CF85E0E79251597C3C81F0F89FB6B50F5D91E3FAACDBB2149EE9B2BDF273A4BD883E9452F3E474EC6136DE65BD4CC8BA1656
	C03E06BCBC0B48AFD55E433C0604AF84264F2FCAFD6913A278760B87E410FBC2F3BE7E78E3712CE6396F3B174FAE67676DF9D8DF7EF43C8E037454BCBCAF3AEF2DD447C1F41C1E8D34C44EF3859D278BD6C3FAB57AF67FA9DF36248DE1CBBB1403FF2F1649F81A0E71B640FBD623DE7356C9FA5DC747769020052DC63D1E23E3FBAC24E7F13D2C5F7852CBB704DEB9EB1AF4786DD2564E6ACB301D652F115AD94D9AF67710496C77D92FBA15BFDA56A85BD98F24AFD448FCFEAB4AF44BE47A2FE1F79D194C0CEDC3
	79DFAEB3D8A5B39C52BF08B2453859FA291DBE299F2A1D4A4BD67BB0824A5E27A87B4086296CBFEE9D2AEC1D0F3223E5E50B5F9B51137C96BB793805D9ECABEDFAFE0FEA8D7AEB154F31A0CDA5F7364ADF29EBA5FFB19947ABD1C656DA1471EE65D06DC0AEA3FF2DD2C655DA299DB09937E5220CDAAEE3CF56D0E31ADCC62BCA06EDAD9B53A499815C8E8F17D17445D03E120F617EAA999386796A2D8C14914AE57CAAF3A8DF49E5CCD54918B648D7FD5C0ED8AEE301CFBB6629E4442BE424672BFDF5A137C31F0F
	E3142BC0EA5B677934A9C5A5CF5D368B7225364D644D29C0F99579B8666D64F6B6F09DAE5DA8693053274DC46E829FBAF88669903D084FA17968577199C3358F390C40FC25DFC373556D63BEEEE7B817F1E4483EA417912512911B2FEE9F6FEC6477D3390C8BB78D55BE64B204F5CA997AF56A76F19D37A3EF9D56CD78A6C140316A3CEDC3FC77D9F6EFD0AF3B27923DEA3877D4BE93585D843A59967FE365FDD9AC88789D7E979662773AF3EF39CA28FDBABEE92D207D9D7E0AF5ECDF6FA7BE49773A757CFB5DF7
	496E1914E58F47B69673CC48467B35D3205C78F5F8DED229A7782275CD3ADA00B60041764C7E1A491EDEAA59C67F0477086ECA17CB5F1C2810F87F391CACF6FD5CED5AD5373F256EA0179B7F0544BB57B5B2394B2AA4DE4BE2DF5F48A8D3340B6AAD92DF114FEFEBA8790ED5CB7E3A2BC6AA23704C48741E3ECD623DA95D57BD58F2057C0F3F1278F6FFB3FC3E6A6D040F359BFB89369BB7340D507558EEEE2178B8C8A78268B778EAB747F6C86569EA303CA260B1EF4072EAA9BE8852E1GD1BE4B9B33D3726B75
	3B245FFF2E156C6D531371224BE46BA3F72F3C1715D4AF7174D78E0FE763810967214C6171980C924FAD431463E812F85207A9674E03924F7943147337E609A7B8C34E4368F3DAA43ADED1A6439D299CD99F4EBBAC15B7E35170F45C750D4493D3B1BC1E2ED609E7612661717C6A0844F317C28E7B6E6A6923241145C17B948A1AF479GB5GC6009E008100F1G41GD3G26814C84C884485A58244B8328GE8GE05FF38BA8A68B89EF5FE8958F3D250F348ABCCEBF68BCC88D5A77D2967ABC07A020FDAF65BE
	BACF34EDD41F31BDCC71BD9B55E7EC4DFABCE3F383ADE6A31E3139871D738CCF6FDF8C49272D77E7749BF2B51B54FA9730EF51EDD26BFDEB896A5D823470CD2877221A51693DF2C8BEED3D4369F818DB28567BBE0AAFA8D46B3D2786752EGDAE0A1362F8B0EFA7FE66145C7077EE661D5C7353FD9B871A831CF794D429B0FEAFF33B0145E9F45EF96B25C2DC7C95F6A06765D4A735D41F1C7B86EEEDAA641516099475FC775A2F88C1EB17C03D42F539457AA6222E438A378CD7423644EAD185C63F0A16FD3C7E9
	2C49EA3331745FE89E2B3D4F62667EF81E6AE8F51AE4FA47F15C91DE6F8F52773A586FE8596FA37A33FF8E637A9F48D8A77B66CD316C771DA5E7DFF6747FC046BDB512CD8F4AFE9BEB4E3EEC6BD915C1DEAE03367E55D3D930AFFCDDC86BF3890B877F7D5F87A61FCCDB7170C9F732105AA84C6D21FD27D1C8BBCDBAE123106481B863F18A743508A47229BA7A1F22AC3E3E5C716BE71E8EBDD12BCF96128715A515619652689F27F18BF359DFBA6A7BCE780FC0BE39C6E65EC6DFA937B0DF7A23C13EB3AEA2FF18
	BCCF7C4B6455EEE19E7F22A04FC9AEB99701A50B942B73BFCD2CFCA56A6F077BD204390D42F29210EE3638685F4E3018EBCDEE53E1108C36568B731C64EF48136B730DC2EA9FFD2475394F58AC86C15FF55072DD3F254FEDB16F403F96516796169808249272256F1286D3DF0F1B0C40DB8DC22A5D54EBF18B0B99598675D2427EC447D66A35249D5B2953970A1E4F267A12D20AF9A959F7E72EDB3DA7AEBCC5C82E97665B9CA6F33D299396980D42BCF70F4B5257633019BD4E2FD9C1692771BED88A9437121BCF
	0CADA6B73B395227BCD77BAF1A39289E5C65F189A5B4A7093F97739C66DDBDA6970832389A81CCA0B21F537E6FD3777AC7F7AFEBCB9612C4A3096BBF71B8216A3BCC3DD65B99784176C234D216C0B5419CE56F6BF238FAC133BC15E6C862820AAFF92874521BBEB8CA85C82CEE61B366CAE0AD6936B8FACBF6F4F5D96D96DEG78950ADF450BA7F90AD5F996FB46AF597364479D508EEA05145E52D27AEF997D371C7CDBC6B1E594D3D68E4E1DAD787CCFCD77204D347100BE19D49FD27D4575D0036E3F3D7E50F5
	4F564C1E15CCB6AFE95F133F6A821510A5655A5F5F5BE1F11D97FA692A8581319710BAF2122662A165AE77A85BB974BA7A3DC70EA54B62FC1A220785BB5A29D2E460C822586CC10DA51520173905852C4A0ABB20CD218DF3592CCB13EB89A3793102A6F3693F1F0D58BD04EBB5AB10A8C753059E2F7A4B7B08367EA9227EF3EB297EBF2D066877CA8FD4A879F3D3EEA1DD7CE3D3B07A24122F793B859D7B53D455BC0B2E2021213A37F723DB78C44C1C07FF732A1AD249DF395A28D9CB7FDF2C44FA5825ECDD2BC6
	D78F6633D88FFB34B4445456D135FB19C70B48BF45E7473787BDDEF59D01EF4FE69BBF6279B97B6F04676767B14B4FD027D3BFC31D3E7B996AF49AC67439EC4579739B087F43870BA4585EA619FC25E0D14C964162BBFBB08B11798566197CBC7A7A9FAC3F682BFEE4C16996124AG4A81B683D4A84624461F5FF8BF4E43D7D0E4C557C8B773315FEF2ECEF9697A943639E1418DD82C138885AC56DDECFF1262F6B869BA1BD8C7028DA41A1E2CE1EFG7CCA95735043461FDFDB3D5243B5CD9635A4D7AE52FEFE75
	B5D1B94BED54C8219544025C517B7BECDAF133520A8A0D94DAC1F4DA412DA0D8BC4C1DBF883B88ED60D8FC2105D066F22CCE06CDD734D1ACA1CD01C5E9E91A6DB9ED1057696CBD480A790330D8C22A428A54CC47316F896AB6C93071B2E9498AACCAD3E2D1DAB21E39EE7C119C78113138ED7C84A1615C6CE4FC07CB9D93715F464EDAA7EC134EDCD93C3F360E38F8BA6093367118FDADB9A8767637B81BFBCDB61B5BE4BB3543EEA6FF17F3679937C57ADB100DF5247CBE4CA392994DD8C774BEA96379FFD0CB87
	88D9A76FB3ABB4GGE032GGD0CB818294G94G88G88G99E48FADD9A76FB3ABB4GGE032GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGE5B4GGGG
**end of data**/
}

/**
 * Insert the method's description here.
 * Creation date: (4/9/2001 6:48:08 PM)
 * @return com.cannontech.loadcontrol.data.LMProgramCurtailment
 */
public com.cannontech.loadcontrol.data.LMProgramCurtailment getCurtailProgram() {
	return curtailProgram;
}


/**
 * Return the DateComboCurtail property value.
 * @return com.cannontech.common.gui.util.DateComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.DateComboBox getDateComboCurtail() {
	if (ivjDateComboCurtail == null) {
		try {
			ivjDateComboCurtail = new com.cannontech.common.gui.util.DateComboBox();
			ivjDateComboCurtail.setName("DateComboCurtail");
			ivjDateComboCurtail.setBounds(73, 65, 151, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDateComboCurtail;
}

/**
 * Return the DateComboNotify property value.
 * @return com.cannontech.common.gui.util.DateComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.DateComboBox getDateComboNotify() {
	if (ivjDateComboNotify == null) {
		try {
			ivjDateComboNotify = new com.cannontech.common.gui.util.DateComboBox();
			ivjDateComboNotify.setName("DateComboNotify");
			ivjDateComboNotify.setBounds(73, 34, 151, 23);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDateComboNotify;
}

/**
 * Return the JButtonCancel property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonCancel() {
	if (ivjJButtonCancel == null) {
		try {
			ivjJButtonCancel = new javax.swing.JButton();
			ivjJButtonCancel.setName("JButtonCancel");
			ivjJButtonCancel.setMnemonic(67);
			ivjJButtonCancel.setText("Cancel");
			ivjJButtonCancel.setMaximumSize(new java.awt.Dimension(73, 25));
			ivjJButtonCancel.setActionCommand("Cancel");
			ivjJButtonCancel.setMinimumSize(new java.awt.Dimension(73, 25));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonCancel;
}


/**
 * Return the JButtonPostOffer property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonStart() {
	if (ivjJButtonStart == null) {
		try {
			ivjJButtonStart = new javax.swing.JButton();
			ivjJButtonStart.setName("JButtonStart");
			ivjJButtonStart.setMnemonic('s');
			ivjJButtonStart.setText("Start");
			ivjJButtonStart.setMaximumSize(new java.awt.Dimension(73, 25));
			ivjJButtonStart.setActionCommand("Post Offer");
			ivjJButtonStart.setPreferredSize(new java.awt.Dimension(73, 25));
			ivjJButtonStart.setMinimumSize(new java.awt.Dimension(73, 25));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonStart;
}


/**
 * Return the JCSpinField property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldDuration() {
	if (ivjJCSpinFieldDuration == null) {
		try {
			ivjJCSpinFieldDuration = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldDuration.setName("JCSpinFieldDuration");
			ivjJCSpinFieldDuration.setBounds(236, 97, 80, 20);
			// user code begin {1}

			ivjJCSpinFieldDuration.setDataProperties(new com.klg.jclass.field.DataProperties(
								new com.klg.jclass.field.validate.JCIntegerValidator(null, new Integer(1), 
								new Integer(24)/*MAX value*/, null, true, null,
								new Integer(1)/*Increment*/, "#,##0.###;-#,##0.###", 
								false, false, false, null, new Integer(2)/*Default*/), 
								new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
								new Integer(1)), 
								new com.klg.jclass.field.JCInvalidInfo(true, 2, new java.awt.Color(0, 0, 0, 255), 
								new java.awt.Color(255, 255, 255, 255))));
			
			ivjJCSpinFieldDuration.setValue( new Integer(2) ); // Default value
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldDuration;
}

/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel1() {
	if (ivjJLabel1 == null) {
		try {
			ivjJLabel1 = new javax.swing.JLabel();
			ivjJLabel1.setName("JLabel1");
			ivjJLabel1.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabel1.setText("(HH:mm)");
			ivjJLabel1.setBounds(326, 69, 68, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel1;
}

/**
 * Return the JLabel2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel2() {
	if (ivjJLabel2 == null) {
		try {
			ivjJLabel2 = new javax.swing.JLabel();
			ivjJLabel2.setName("JLabel2");
			ivjJLabel2.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabel2.setText("(HH:mm)");
			ivjJLabel2.setBounds(326, 38, 68, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel2;
}

/**
 * Return the JLabelCurtailDuration property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCurtailDuration() {
	if (ivjJLabelCurtailDuration == null) {
		try {
			ivjJLabelCurtailDuration = new javax.swing.JLabel();
			ivjJLabelCurtailDuration.setName("JLabelCurtailDuration");
			ivjJLabelCurtailDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelCurtailDuration.setText("Curtail Duration:");
			ivjJLabelCurtailDuration.setBounds(117, 100, 103, 14);
			ivjJLabelCurtailDuration.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
			ivjJLabelCurtailDuration.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCurtailDuration;
}

/**
 * Return the JLabelDate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCurtDate() {
	if (ivjJLabelCurtDate == null) {
		try {
			ivjJLabelCurtDate = new javax.swing.JLabel();
			ivjJLabelCurtDate.setName("JLabelCurtDate");
			ivjJLabelCurtDate.setText("Curtail:");
			ivjJLabelCurtDate.setMaximumSize(new java.awt.Dimension(29, 16));
			ivjJLabelCurtDate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelCurtDate.setBounds(14, 68, 52, 17);
			ivjJLabelCurtDate.setMinimumSize(new java.awt.Dimension(29, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCurtDate;
}

/**
 * Return the JLabelHour property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHour() {
	if (ivjJLabelHour == null) {
		try {
			ivjJLabelHour = new javax.swing.JLabel();
			ivjJLabelHour.setName("JLabelHour");
			ivjJLabelHour.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHour.setText("Hour");
			ivjJLabelHour.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHour;
}


/**
 * Return the JLabelHour1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHour1() {
	if (ivjJLabelHour1 == null) {
		try {
			ivjJLabelHour1 = new javax.swing.JLabel();
			ivjJLabelHour1.setName("JLabelHour1");
			ivjJLabelHour1.setText("1");
			ivjJLabelHour1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHour1;
}


/**
 * Return the JLabelHour2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHour2() {
	if (ivjJLabelHour2 == null) {
		try {
			ivjJLabelHour2 = new javax.swing.JLabel();
			ivjJLabelHour2.setName("JLabelHour2");
			ivjJLabelHour2.setText("2");
			ivjJLabelHour2.setEnabled(false);
			ivjJLabelHour2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHour2;
}


/**
 * Return the JLabelHour3 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHour3() {
	if (ivjJLabelHour3 == null) {
		try {
			ivjJLabelHour3 = new javax.swing.JLabel();
			ivjJLabelHour3.setName("JLabelHour3");
			ivjJLabelHour3.setText("3");
			ivjJLabelHour3.setEnabled(false);
			ivjJLabelHour3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHour3;
}


/**
 * Return the JLabelHour4 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHour4() {
	if (ivjJLabelHour4 == null) {
		try {
			ivjJLabelHour4 = new javax.swing.JLabel();
			ivjJLabelHour4.setName("JLabelHour4");
			ivjJLabelHour4.setText("4");
			ivjJLabelHour4.setEnabled(false);
			ivjJLabelHour4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHour4;
}


/**
 * Return the JLabelHours property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHours() {
	if (ivjJLabelHours == null) {
		try {
			ivjJLabelHours = new javax.swing.JLabel();
			ivjJLabelHours.setName("JLabelHours");
			ivjJLabelHours.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHours.setText("(Hours)");
			ivjJLabelHours.setBounds(326, 101, 68, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHours;
}

/**
 * Return the JLabelKwhAvail property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelKwhAvail() {
	if (ivjJLabelKwhAvail == null) {
		try {
			ivjJLabelKwhAvail = new javax.swing.JLabel();
			ivjJLabelKwhAvail.setName("JLabelKwhAvail");
			ivjJLabelKwhAvail.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelKwhAvail.setText("Available");
			ivjJLabelKwhAvail.setMaximumSize(new java.awt.Dimension(52, 16));
			ivjJLabelKwhAvail.setMinimumSize(new java.awt.Dimension(52, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelKwhAvail;
}


/**
 * Return the JLabelKwhPrice property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelKwhPrice() {
	if (ivjJLabelKwhPrice == null) {
		try {
			ivjJLabelKwhPrice = new javax.swing.JLabel();
			ivjJLabelKwhPrice.setName("JLabelKwhPrice");
			ivjJLabelKwhPrice.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelKwhPrice.setText("$ Price");
			ivjJLabelKwhPrice.setMaximumSize(new java.awt.Dimension(41, 16));
			ivjJLabelKwhPrice.setMinimumSize(new java.awt.Dimension(41, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelKwhPrice;
}


/**
 * Return the JLabelNotifTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNotifTime() {
	if (ivjJLabelNotifTime == null) {
		try {
			ivjJLabelNotifTime = new javax.swing.JLabel();
			ivjJLabelNotifTime.setName("JLabelNotifTime");
			ivjJLabelNotifTime.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelNotifTime.setText("Date");
			ivjJLabelNotifTime.setBounds(117, 14, 45, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNotifTime;
}

/**
 * Return the JLabelNotifyDate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNotifyDate() {
	if (ivjJLabelNotifyDate == null) {
		try {
			ivjJLabelNotifyDate = new javax.swing.JLabel();
			ivjJLabelNotifyDate.setName("JLabelNotifyDate");
			ivjJLabelNotifyDate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelNotifyDate.setText("Notify:");
			ivjJLabelNotifyDate.setBounds(14, 38, 52, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNotifyDate;
}

/**
 * Return the JLabelOfferExpires property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelOfferExpires() {
	if (ivjJLabelOfferExpires == null) {
		try {
			ivjJLabelOfferExpires = new javax.swing.JLabel();
			ivjJLabelOfferExpires.setName("JLabelOfferExpires");
			ivjJLabelOfferExpires.setText("Offer Expires");
			ivjJLabelOfferExpires.setMaximumSize(new java.awt.Dimension(73, 16));
			ivjJLabelOfferExpires.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelOfferExpires.setMinimumSize(new java.awt.Dimension(73, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelOfferExpires;
}


/**
 * Return the JLabelOfferID property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelOfferID() {
	if (ivjJLabelOfferID == null) {
		try {
			ivjJLabelOfferID = new javax.swing.JLabel();
			ivjJLabelOfferID.setName("JLabelOfferID");
			ivjJLabelOfferID.setText("Offer ID:");
			ivjJLabelOfferID.setMaximumSize(new java.awt.Dimension(44, 16));
			ivjJLabelOfferID.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelOfferID.setBounds(11, 7, 77, 17);
			ivjJLabelOfferID.setMinimumSize(new java.awt.Dimension(44, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelOfferID;
}

/**
 * Return the JLabelOfferIDtext property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelOfferIDtext() {
	if (ivjJLabelOfferIDtext == null) {
		try {
			ivjJLabelOfferIDtext = new javax.swing.JLabel();
			ivjJLabelOfferIDtext.setName("JLabelOfferIDtext");
			ivjJLabelOfferIDtext.setText("offID");
			ivjJLabelOfferIDtext.setMaximumSize(new java.awt.Dimension(36, 19));
			ivjJLabelOfferIDtext.setFont(new java.awt.Font("sansserif", 1, 14));
			ivjJLabelOfferIDtext.setBounds(110, 4, 110, 22);
			ivjJLabelOfferIDtext.setMinimumSize(new java.awt.Dimension(36, 19));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelOfferIDtext;
}

/**
 * Return the JLabelStartTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelStartTime() {
	if (ivjJLabelStartTime == null) {
		try {
			ivjJLabelStartTime = new javax.swing.JLabel();
			ivjJLabelStartTime.setName("JLabelStartTime");
			ivjJLabelStartTime.setText("Time");
			ivjJLabelStartTime.setMaximumSize(new java.awt.Dimension(59, 16));
			ivjJLabelStartTime.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelStartTime.setBounds(265, 14, 51, 17);
			ivjJLabelStartTime.setMinimumSize(new java.awt.Dimension(59, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelStartTime;
}

/**
 * Return the JLabelTextMessage property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelTextUserComment() {
	if (ivjJLabelTextUserComment == null) {
		try {
			ivjJLabelTextUserComment = new javax.swing.JLabel();
			ivjJLabelTextUserComment.setName("JLabelTextUserComment");
			ivjJLabelTextUserComment.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelTextUserComment.setText("User Comment:");
			ivjJLabelTextUserComment.setBounds(11, 166, 97, 17);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelTextUserComment;
}

/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(getJPanel1FlowLayout());
			ivjJPanel1.setBounds(139, 303, 168, 49);
			getJPanel1().add(getJButtonStart(), getJButtonStart().getName());
			getJPanel1().add(getJButtonCancel(), getJButtonCancel().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}

/**
 * Return the JPanel1FlowLayout property value.
 * @return java.awt.FlowLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.FlowLayout getJPanel1FlowLayout() {
	java.awt.FlowLayout ivjJPanel1FlowLayout = null;
	try {
		/* Create part */
		ivjJPanel1FlowLayout = new java.awt.FlowLayout();
		ivjJPanel1FlowLayout.setAlignment(java.awt.FlowLayout.RIGHT);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjJPanel1FlowLayout;
}


/**
 * Return the JPanelDate property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelDate() {
	if (ivjJPanelDate == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder1.setTitle("Date");
			ivjJPanelDate = new javax.swing.JPanel();
			ivjJPanelDate.setName("JPanelDate");
			ivjJPanelDate.setBorder(ivjLocalBorder1);
			ivjJPanelDate.setLayout(null);
			ivjJPanelDate.setBounds(11, 30, 425, 126);
			getJPanelDate().add(getJLabelCurtDate(), getJLabelCurtDate().getName());
			getJPanelDate().add(getJTextFieldCurtTime(), getJTextFieldCurtTime().getName());
			getJPanelDate().add(getJLabelStartTime(), getJLabelStartTime().getName());
			getJPanelDate().add(getJLabelNotifyDate(), getJLabelNotifyDate().getName());
			getJPanelDate().add(getJLabelNotifTime(), getJLabelNotifTime().getName());
			getJPanelDate().add(getJTextFieldNotifTime(), getJTextFieldNotifTime().getName());
			getJPanelDate().add(getJLabel1(), getJLabel1().getName());
			getJPanelDate().add(getJLabel2(), getJLabel2().getName());
			getJPanelDate().add(getJLabelCurtailDuration(), getJLabelCurtailDuration().getName());
			getJPanelDate().add(getJCSpinFieldDuration(), getJCSpinFieldDuration().getName());
			getJPanelDate().add(getJLabelHours(), getJLabelHours().getName());
			getJPanelDate().add(getDateComboNotify(), getDateComboNotify().getName());
			getJPanelDate().add(getDateComboCurtail(), getDateComboCurtail().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelDate;
}

/**
 * Return the JPanelOfferings property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelOfferings() {
	if (ivjJPanelOfferings == null) {
		try {
			ivjJPanelOfferings = new javax.swing.JPanel();
			ivjJPanelOfferings.setName("JPanelOfferings");
			ivjJPanelOfferings.setPreferredSize(new java.awt.Dimension(353, 370));
			ivjJPanelOfferings.setLayout(new java.awt.GridBagLayout());
			ivjJPanelOfferings.setLocation(0, 0);
			ivjJPanelOfferings.setMaximumSize(new java.awt.Dimension(353, 370));
			ivjJPanelOfferings.setMinimumSize(new java.awt.Dimension(353, 370));

			java.awt.GridBagConstraints constraintsJLabelOfferExpires = new java.awt.GridBagConstraints();
			constraintsJLabelOfferExpires.gridx = 4; constraintsJLabelOfferExpires.gridy = 1;
			constraintsJLabelOfferExpires.ipadx = 4;
			constraintsJLabelOfferExpires.ipady = 1;
			constraintsJLabelOfferExpires.insets = new java.awt.Insets(2, 10, 2, 62);
			getJPanelOfferings().add(getJLabelOfferExpires(), constraintsJLabelOfferExpires);

			java.awt.GridBagConstraints constraintsJTextFieldExpires1 = new java.awt.GridBagConstraints();
			constraintsJTextFieldExpires1.gridx = 4; constraintsJTextFieldExpires1.gridy = 2;
			constraintsJTextFieldExpires1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldExpires1.weightx = 1.0;
			constraintsJTextFieldExpires1.ipadx = 126;
			constraintsJTextFieldExpires1.ipady = 1;
			constraintsJTextFieldExpires1.insets = new java.awt.Insets(3, 10, 4, 9);
			getJPanelOfferings().add(getJTextFieldExpires1(), constraintsJTextFieldExpires1);

			java.awt.GridBagConstraints constraintsJLabelHour = new java.awt.GridBagConstraints();
			constraintsJLabelHour.gridx = 1; constraintsJLabelHour.gridy = 1;
			constraintsJLabelHour.ipadx = 18;
			constraintsJLabelHour.ipady = -2;
			constraintsJLabelHour.insets = new java.awt.Insets(5, 9, 2, 13);
			getJPanelOfferings().add(getJLabelHour(), constraintsJLabelHour);

			java.awt.GridBagConstraints constraintsJLabelKwhPrice = new java.awt.GridBagConstraints();
			constraintsJLabelKwhPrice.gridx = 2; constraintsJLabelKwhPrice.gridy = 1;
			constraintsJLabelKwhPrice.ipadx = 7;
			constraintsJLabelKwhPrice.insets = new java.awt.Insets(3, 13, 2, 28);
			getJPanelOfferings().add(getJLabelKwhPrice(), constraintsJLabelKwhPrice);

			java.awt.GridBagConstraints constraintsJLabelKwhAvail = new java.awt.GridBagConstraints();
			constraintsJLabelKwhAvail.gridx = 3; constraintsJLabelKwhAvail.gridy = 1;
			constraintsJLabelKwhAvail.ipadx = 6;
			constraintsJLabelKwhAvail.insets = new java.awt.Insets(3, 11, 2, 26);
			getJPanelOfferings().add(getJLabelKwhAvail(), constraintsJLabelKwhAvail);

			java.awt.GridBagConstraints constraintsJTextFieldAvail1 = new java.awt.GridBagConstraints();
			constraintsJTextFieldAvail1.gridx = 3; constraintsJTextFieldAvail1.gridy = 2;
			constraintsJTextFieldAvail1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldAvail1.weightx = 1.0;
			constraintsJTextFieldAvail1.ipadx = 70;
			constraintsJTextFieldAvail1.insets = new java.awt.Insets(3, 11, 5, 10);
			getJPanelOfferings().add(getJTextFieldAvail1(), constraintsJTextFieldAvail1);

			java.awt.GridBagConstraints constraintsJTextFieldPrice1 = new java.awt.GridBagConstraints();
			constraintsJTextFieldPrice1.gridx = 2; constraintsJTextFieldPrice1.gridy = 2;
			constraintsJTextFieldPrice1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldPrice1.weightx = 1.0;
			constraintsJTextFieldPrice1.ipadx = 61;
			constraintsJTextFieldPrice1.insets = new java.awt.Insets(3, 13, 5, 11);
			getJPanelOfferings().add(getJTextFieldPrice1(), constraintsJTextFieldPrice1);

			java.awt.GridBagConstraints constraintsJLabelHour1 = new java.awt.GridBagConstraints();
			constraintsJLabelHour1.gridx = 1; constraintsJLabelHour1.gridy = 2;
			constraintsJLabelHour1.ipadx = 38;
			constraintsJLabelHour1.insets = new java.awt.Insets(6, 9, 8, 13);
			getJPanelOfferings().add(getJLabelHour1(), constraintsJLabelHour1);

			java.awt.GridBagConstraints constraintsJLabelHour2 = new java.awt.GridBagConstraints();
			constraintsJLabelHour2.gridx = 1; constraintsJLabelHour2.gridy = 3;
			constraintsJLabelHour2.ipadx = 38;
			constraintsJLabelHour2.insets = new java.awt.Insets(8, 9, 7, 13);
			getJPanelOfferings().add(getJLabelHour2(), constraintsJLabelHour2);

			java.awt.GridBagConstraints constraintsJTextFieldPrice2 = new java.awt.GridBagConstraints();
			constraintsJTextFieldPrice2.gridx = 2; constraintsJTextFieldPrice2.gridy = 3;
			constraintsJTextFieldPrice2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldPrice2.weightx = 1.0;
			constraintsJTextFieldPrice2.ipadx = 61;
			constraintsJTextFieldPrice2.insets = new java.awt.Insets(5, 13, 4, 11);
			getJPanelOfferings().add(getJTextFieldPrice2(), constraintsJTextFieldPrice2);

			java.awt.GridBagConstraints constraintsJTextFieldAvail2 = new java.awt.GridBagConstraints();
			constraintsJTextFieldAvail2.gridx = 3; constraintsJTextFieldAvail2.gridy = 3;
			constraintsJTextFieldAvail2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldAvail2.weightx = 1.0;
			constraintsJTextFieldAvail2.ipadx = 70;
			constraintsJTextFieldAvail2.insets = new java.awt.Insets(5, 11, 4, 10);
			getJPanelOfferings().add(getJTextFieldAvail2(), constraintsJTextFieldAvail2);

			java.awt.GridBagConstraints constraintsJTextFieldExpires2 = new java.awt.GridBagConstraints();
			constraintsJTextFieldExpires2.gridx = 4; constraintsJTextFieldExpires2.gridy = 3;
			constraintsJTextFieldExpires2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldExpires2.weightx = 1.0;
			constraintsJTextFieldExpires2.ipadx = 126;
			constraintsJTextFieldExpires2.insets = new java.awt.Insets(5, 10, 4, 9);
			getJPanelOfferings().add(getJTextFieldExpires2(), constraintsJTextFieldExpires2);

			java.awt.GridBagConstraints constraintsJTextFieldPrice3 = new java.awt.GridBagConstraints();
			constraintsJTextFieldPrice3.gridx = 2; constraintsJTextFieldPrice3.gridy = 4;
			constraintsJTextFieldPrice3.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldPrice3.weightx = 1.0;
			constraintsJTextFieldPrice3.ipadx = 61;
			constraintsJTextFieldPrice3.insets = new java.awt.Insets(4, 13, 2, 11);
			getJPanelOfferings().add(getJTextFieldPrice3(), constraintsJTextFieldPrice3);

			java.awt.GridBagConstraints constraintsJTextFieldAvail3 = new java.awt.GridBagConstraints();
			constraintsJTextFieldAvail3.gridx = 3; constraintsJTextFieldAvail3.gridy = 4;
			constraintsJTextFieldAvail3.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldAvail3.weightx = 1.0;
			constraintsJTextFieldAvail3.ipadx = 70;
			constraintsJTextFieldAvail3.insets = new java.awt.Insets(4, 11, 2, 10);
			getJPanelOfferings().add(getJTextFieldAvail3(), constraintsJTextFieldAvail3);

			java.awt.GridBagConstraints constraintsJTextFieldExpires3 = new java.awt.GridBagConstraints();
			constraintsJTextFieldExpires3.gridx = 4; constraintsJTextFieldExpires3.gridy = 4;
			constraintsJTextFieldExpires3.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldExpires3.weightx = 1.0;
			constraintsJTextFieldExpires3.ipadx = 126;
			constraintsJTextFieldExpires3.insets = new java.awt.Insets(4, 10, 2, 9);
			getJPanelOfferings().add(getJTextFieldExpires3(), constraintsJTextFieldExpires3);

			java.awt.GridBagConstraints constraintsJLabelHour3 = new java.awt.GridBagConstraints();
			constraintsJLabelHour3.gridx = 1; constraintsJLabelHour3.gridy = 4;
			constraintsJLabelHour3.ipadx = 38;
			constraintsJLabelHour3.insets = new java.awt.Insets(7, 9, 5, 13);
			getJPanelOfferings().add(getJLabelHour3(), constraintsJLabelHour3);

			java.awt.GridBagConstraints constraintsJLabelHour4 = new java.awt.GridBagConstraints();
			constraintsJLabelHour4.gridx = 1; constraintsJLabelHour4.gridy = 5;
			constraintsJLabelHour4.ipadx = 38;
			constraintsJLabelHour4.insets = new java.awt.Insets(5, 9, 247, 13);
			getJPanelOfferings().add(getJLabelHour4(), constraintsJLabelHour4);

			java.awt.GridBagConstraints constraintsJTextFieldPrice4 = new java.awt.GridBagConstraints();
			constraintsJTextFieldPrice4.gridx = 2; constraintsJTextFieldPrice4.gridy = 5;
			constraintsJTextFieldPrice4.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldPrice4.weightx = 1.0;
			constraintsJTextFieldPrice4.ipadx = 61;
			constraintsJTextFieldPrice4.insets = new java.awt.Insets(2, 13, 244, 11);
			getJPanelOfferings().add(getJTextFieldPrice4(), constraintsJTextFieldPrice4);

			java.awt.GridBagConstraints constraintsJTextFieldAvail4 = new java.awt.GridBagConstraints();
			constraintsJTextFieldAvail4.gridx = 3; constraintsJTextFieldAvail4.gridy = 5;
			constraintsJTextFieldAvail4.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldAvail4.weightx = 1.0;
			constraintsJTextFieldAvail4.ipadx = 70;
			constraintsJTextFieldAvail4.insets = new java.awt.Insets(2, 11, 244, 10);
			getJPanelOfferings().add(getJTextFieldAvail4(), constraintsJTextFieldAvail4);

			java.awt.GridBagConstraints constraintsJTextFieldExpires4 = new java.awt.GridBagConstraints();
			constraintsJTextFieldExpires4.gridx = 4; constraintsJTextFieldExpires4.gridy = 5;
			constraintsJTextFieldExpires4.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldExpires4.weightx = 1.0;
			constraintsJTextFieldExpires4.ipadx = 126;
			constraintsJTextFieldExpires4.insets = new java.awt.Insets(2, 10, 244, 9);
			getJPanelOfferings().add(getJTextFieldExpires4(), constraintsJTextFieldExpires4);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelOfferings;
}


/**
 * Return the JScrollPaneOfferings property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPaneOfferings() {
	if (ivjJScrollPaneOfferings == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder.setTitle("Offers");
			ivjJScrollPaneOfferings = new javax.swing.JScrollPane();
			ivjJScrollPaneOfferings.setName("JScrollPaneOfferings");
			ivjJScrollPaneOfferings.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
			ivjJScrollPaneOfferings.setBorder(ivjLocalBorder);
			ivjJScrollPaneOfferings.setBounds(11, 193, 425, 100);
			getJScrollPaneOfferings().setViewportView(getJPanelOfferings());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPaneOfferings;
}

/**
 * Return the JTextFieldKwhAvail property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldAvail1() {
	if (ivjJTextFieldAvail1 == null) {
		try {
			ivjJTextFieldAvail1 = new javax.swing.JTextField();
			ivjJTextFieldAvail1.setName("JTextFieldAvail1");
			ivjJTextFieldAvail1.setHighlighter(new javax.swing.plaf.basic.BasicTextUI.BasicHighlighter());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldAvail1;
}


/**
 * Return the JTextFieldAvail2 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldAvail2() {
	if (ivjJTextFieldAvail2 == null) {
		try {
			ivjJTextFieldAvail2 = new javax.swing.JTextField();
			ivjJTextFieldAvail2.setName("JTextFieldAvail2");
			ivjJTextFieldAvail2.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldAvail2;
}


/**
 * Return the JTextFieldAvail3 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldAvail3() {
	if (ivjJTextFieldAvail3 == null) {
		try {
			ivjJTextFieldAvail3 = new javax.swing.JTextField();
			ivjJTextFieldAvail3.setName("JTextFieldAvail3");
			ivjJTextFieldAvail3.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldAvail3;
}


/**
 * Return the JTextFieldAvail4 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldAvail4() {
	if (ivjJTextFieldAvail4 == null) {
		try {
			ivjJTextFieldAvail4 = new javax.swing.JTextField();
			ivjJTextFieldAvail4.setName("JTextFieldAvail4");
			ivjJTextFieldAvail4.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldAvail4;
}


/**
 * Return the JTextFieldCurtTime property value.
 * @return com.cannontech.common.gui.util.JTextFieldTimeEntry
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.JTextFieldTimeEntry getJTextFieldCurtTime() {
	if (ivjJTextFieldCurtTime == null) {
		try {
			ivjJTextFieldCurtTime = new com.cannontech.common.gui.util.JTextFieldTimeEntry();
			ivjJTextFieldCurtTime.setName("JTextFieldCurtTime");
			ivjJTextFieldCurtTime.setHighlighter(new javax.swing.plaf.basic.BasicTextUI.BasicHighlighter());
			ivjJTextFieldCurtTime.setBounds(236, 66, 87, 21);
			// user code begin {1}

			java.util.GregorianCalendar cal = new java.util.GregorianCalendar();
			cal.setTime( new java.util.Date() );

			StringBuffer hour = new StringBuffer( String.valueOf(cal.get( java.util.GregorianCalendar.HOUR_OF_DAY)+4) );
			if( hour.length() < 2 )
				hour.insert(0, "0" );
				
			StringBuffer minute = new StringBuffer( String.valueOf(cal.get(java.util.GregorianCalendar.MINUTE)) );
			if( minute.length() < 2 )
				minute.insert(0, "0" );
				
			if( cal.get( java.util.GregorianCalendar.HOUR_OF_DAY) > 20 )
				hour = new StringBuffer("23");
				
			ivjJTextFieldCurtTime.setText( hour + ":" + minute );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldCurtTime;
}

/**
 * Return the JTextFieldOfferExpires property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldExpires1() {
	if (ivjJTextFieldExpires1 == null) {
		try {
			ivjJTextFieldExpires1 = new javax.swing.JTextField();
			ivjJTextFieldExpires1.setName("JTextFieldExpires1");
			ivjJTextFieldExpires1.setHighlighter(new javax.swing.plaf.basic.BasicTextUI.BasicHighlighter());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldExpires1;
}


/**
 * Return the JTextFieldExpires2 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldExpires2() {
	if (ivjJTextFieldExpires2 == null) {
		try {
			ivjJTextFieldExpires2 = new javax.swing.JTextField();
			ivjJTextFieldExpires2.setName("JTextFieldExpires2");
			ivjJTextFieldExpires2.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldExpires2;
}


/**
 * Return the JTextFieldExpires3 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldExpires3() {
	if (ivjJTextFieldExpires3 == null) {
		try {
			ivjJTextFieldExpires3 = new javax.swing.JTextField();
			ivjJTextFieldExpires3.setName("JTextFieldExpires3");
			ivjJTextFieldExpires3.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldExpires3;
}


/**
 * Return the JTextFieldExpires14 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldExpires4() {
	if (ivjJTextFieldExpires4 == null) {
		try {
			ivjJTextFieldExpires4 = new javax.swing.JTextField();
			ivjJTextFieldExpires4.setName("JTextFieldExpires4");
			ivjJTextFieldExpires4.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldExpires4;
}


/**
 * Return the JTextField1 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldMessage() {
	if (ivjJTextFieldMessage == null) {
		try {
			ivjJTextFieldMessage = new javax.swing.JTextField();
			ivjJTextFieldMessage.setName("JTextFieldMessage");
			ivjJTextFieldMessage.setBounds(109, 164, 328, 20);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldMessage;
}

/**
 * Return the JTextFieldNotifTime property value.
 * @return com.cannontech.common.gui.util.JTextFieldTimeEntry
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.JTextFieldTimeEntry getJTextFieldNotifTime() {
	if (ivjJTextFieldNotifTime == null) {
		try {
			ivjJTextFieldNotifTime = new com.cannontech.common.gui.util.JTextFieldTimeEntry();
			ivjJTextFieldNotifTime.setName("JTextFieldNotifTime");
			ivjJTextFieldNotifTime.setBounds(236, 35, 86, 20);
			// user code begin {1}

			ivjJTextFieldNotifTime.setTimeText( new java.util.Date() );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldNotifTime;
}

/**
 * Return the JTextFieldKwhPrice property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldPrice1() {
	if (ivjJTextFieldPrice1 == null) {
		try {
			ivjJTextFieldPrice1 = new javax.swing.JTextField();
			ivjJTextFieldPrice1.setName("JTextFieldPrice1");
			ivjJTextFieldPrice1.setHighlighter(new javax.swing.plaf.basic.BasicTextUI.BasicHighlighter());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldPrice1;
}


/**
 * Return the JTextFieldPrice2 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldPrice2() {
	if (ivjJTextFieldPrice2 == null) {
		try {
			ivjJTextFieldPrice2 = new javax.swing.JTextField();
			ivjJTextFieldPrice2.setName("JTextFieldPrice2");
			ivjJTextFieldPrice2.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldPrice2;
}


/**
 * Return the JTextFieldPrice3 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldPrice3() {
	if (ivjJTextFieldPrice3 == null) {
		try {
			ivjJTextFieldPrice3 = new javax.swing.JTextField();
			ivjJTextFieldPrice3.setName("JTextFieldPrice3");
			ivjJTextFieldPrice3.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldPrice3;
}


/**
 * Return the JTextFieldPrice4 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldPrice4() {
	if (ivjJTextFieldPrice4 == null) {
		try {
			ivjJTextFieldPrice4 = new javax.swing.JTextField();
			ivjJTextFieldPrice4.setName("JTextFieldPrice4");
			ivjJTextFieldPrice4.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldPrice4;
}


/**
 * Insert the method's description here.
 * Creation date: (4/9/2001 3:09:53 PM)
 * @return int
 */
private int getTotalSeconds( String string ) 
{
	if( string == null )
		return 0;
		
	int hour = Integer.parseInt(string.substring( 0, 2 )) * 3600;
	int minute = Integer.parseInt(string.substring( 3, 5 )) * 60;
	
	return hour + minute;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}


/**
 * Insert the method's description here.
 * Creation date: (1/31/2001 3:32:14 PM)
 */
private void initArrays() 
{
	hourLabels[0] = getJLabelHour1();
	hourLabels[1] = getJLabelHour2();
	hourLabels[2] = getJLabelHour3();
	hourLabels[3] = getJLabelHour4();

	availableTextFields[0] = getJTextFieldAvail1();
	availableTextFields[1] = getJTextFieldAvail2();
	availableTextFields[2] = getJTextFieldAvail3();
	availableTextFields[3] = getJTextFieldAvail4();
		
	priceTextFields[0] = getJTextFieldPrice1();
	priceTextFields[1] = getJTextFieldPrice2();
	priceTextFields[2] = getJTextFieldPrice3();
	priceTextFields[3] = getJTextFieldPrice4();

	expiresTextFields[0] = getJTextFieldExpires1();
	expiresTextFields[1] = getJTextFieldExpires2();
	expiresTextFields[2] = getJTextFieldExpires3();
	expiresTextFields[3] = getJTextFieldExpires4();	
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	
	// user code end
	getJButtonCancel().addActionListener(this);
	getJButtonStart().addActionListener(this);
	getDateComboNotify().addActionListener(this);
	getDateComboCurtail().addActionListener(this);
}

/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("CurtailmentEntryPanel");
		setBounds(new java.awt.Rectangle(0, 0, 411, 201));
		setLayout(null);
		setSize(447, 365);
		setMinimumSize(new java.awt.Dimension(411, 201));
		add(getJLabelOfferID(), getJLabelOfferID().getName());
		add(getJLabelOfferIDtext(), getJLabelOfferIDtext().getName());
		add(getJLabelTextUserComment(), getJLabelTextUserComment().getName());
		add(getJTextFieldMessage(), getJTextFieldMessage().getName());
		add(getJScrollPaneOfferings(), getJScrollPaneOfferings().getName());
		add(getJPanelDate(), getJPanelDate().getName());
		add(getJPanel1(), getJPanel1().getName());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}

	initArrays();
	
	getJLabelOfferID().setVisible(false);
	getJLabelOfferIDtext().setVisible(false);
	getJScrollPaneOfferings().setVisible(false);
	
	// user code end
}

/**
 * Insert the method's description here.
 * Creation date: (4/10/2001 9:55:42 AM)
 * @return boolean
 */
private boolean isInputValid() 
{
	if( getJTextFieldCurtTime().getText() == null || getJTextFieldCurtTime().getText().length() <= 0 )
		return false;

	
	if( getJTextFieldNotifTime().getText() == null || getJTextFieldNotifTime().getText().length() <= 0 )
		return false;

	return true;
}


/**
 * Comment
 */
public void jButtonCancel_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	System.out.println("THE CANCEL BUTTON DOES NOTHING!!! (please override me!!)");
	
	return;
}


/**
 * Comment
 */
public void jButtonStart_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	if( isInputValid() )
	{
		//get the date for the start of curtailement
		java.util.GregorianCalendar startCalendar = new java.util.GregorianCalendar();
		startCalendar.setTime( getDateComboCurtail().getSelectedDate() );
			
		startCalendar.set(java.util.Calendar.HOUR_OF_DAY, Integer.parseInt(getJTextFieldCurtTime().getText().substring(0,2)) );
		startCalendar.set(java.util.Calendar.MINUTE, Integer.parseInt(getJTextFieldCurtTime().getText().substring(3,5)) );
		startCalendar.set(java.util.Calendar.SECOND,0);
		startCalendar.set(java.util.Calendar.MILLISECOND,0);

		//get the date for the start of the notification
		java.util.GregorianCalendar notifyCalendar = new java.util.GregorianCalendar();
		notifyCalendar.setTime( getDateComboNotify().getSelectedDate() );
		

		notifyCalendar.set(java.util.Calendar.HOUR_OF_DAY, Integer.parseInt(getJTextFieldNotifTime().getText().substring(0,2)) );
		notifyCalendar.set(java.util.Calendar.MINUTE, Integer.parseInt(getJTextFieldNotifTime().getText().substring(3,5)) );
		notifyCalendar.set(java.util.Calendar.SECOND,0);
		notifyCalendar.set(java.util.Calendar.MILLISECOND,0);

		//get the date for the stop of curtailment
		java.util.GregorianCalendar stopCalendar = new java.util.GregorianCalendar();
		stopCalendar.setTime(new java.util.Date( startCalendar.getTime().getTime() + (((Number)getJCSpinFieldDuration().getValue()).longValue() * 3600000L) ) );//3600000L is the amount of milliseconds in an hour!!
		stopCalendar.set(java.util.Calendar.SECOND,0);
		stopCalendar.set(java.util.Calendar.MILLISECOND,0);

		//get the total milliseconds for our Notif time
		//check the validity of the two times
		if( ((notifyCalendar.getTime().getTime()) + (getCurtailProgram().getMinNotifyTime().intValue() * 1000)) > startCalendar.getTime().getTime() )
		{
			javax.swing.JOptionPane.showConfirmDialog( this, "The notify date/time plus the MinNotifyTime MUST \nbe less than the curtail date/time, try again.", "Incorrect Entry", javax.swing.JOptionPane.CLOSED_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE );
			return;
		}


		String msg = null;
		// build up our message below
		if( getJTextFieldMessage().getText() != null && getJTextFieldMessage().getText().length() > 0 )
			msg = getJTextFieldMessage().getText();
		else
			msg = com.cannontech.common.util.CtiUtilities.STRING_NONE;


		//create a new message and send it
		com.cannontech.loadcontrol.LoadControlClientConnection.getInstance().write( 
				getCurtailProgram().createScheduledStartMsg(
					startCalendar.getTime(), 
					stopCalendar.getTime(), 
					0, 
					notifyCalendar.getTime(), 
					msg) );

		
		//close the Dialog
		jButtonCancel_ActionPerformed(actionEvent);
	}
	else
		javax.swing.JOptionPane.showConfirmDialog( this, "Your data is not formatted properly, try again.", "Incorrect Data Input", javax.swing.JOptionPane.CLOSED_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE );

	
	return;
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		CurtailmentEntryPanel aCurtailmentEntryPanel;
		aCurtailmentEntryPanel = new CurtailmentEntryPanel();
		frame.setContentPane(aCurtailmentEntryPanel);
		frame.setSize(aCurtailmentEntryPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Insert the method's description here.
 * Creation date: (4/9/2001 6:48:08 PM)
 * @param newCurtailProgram com.cannontech.loadcontrol.data.LMProgramCurtailment
 */
protected void setCurtailProgram(com.cannontech.loadcontrol.data.LMProgramCurtailment newCurtailProgram) 
{
	curtailProgram = newCurtailProgram;

	if( curtailProgram != null )
	{
		int notifMinutes = curtailProgram.getMinNotifyTime().intValue() / 60;
		
		java.util.GregorianCalendar cal = new java.util.GregorianCalendar();
		cal.setTime( new java.util.Date() );
		cal.set( cal.MINUTE, cal.get(cal.MINUTE) + notifMinutes );

		getJTextFieldCurtTime().setTimeText( cal.getTime() );
	}
		
}
}