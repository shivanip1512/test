package com.cannontech.loadcontrol.gui.manualentry;

import com.cannontech.messaging.message.loadcontrol.ManualControlRequestMessage;

/**
 * Insert the type's description here.
 * Creation date: (1/20/2001 10:59:31 PM)
 * @author: 
 */
public class CurtailmentEntryPanel extends javax.swing.JPanel implements java.awt.event.ActionListener 
{
	private com.cannontech.messaging.message.loadcontrol.data.ProgramCurtailment curtailProgram = null;
	private javax.swing.JLabel ivjJLabelKwhAvail = null;
	private javax.swing.JLabel ivjJLabelKwhPrice = null;
	private javax.swing.JLabel ivjJLabelOfferExpires = null;
	private javax.swing.JLabel ivjJLabelOfferID = null;
	private javax.swing.JLabel ivjJLabelOfferIDtext = null;
	private javax.swing.JLabel ivjJLabelStartTime = null;
	private javax.swing.JButton ivjJButtonCancel = null;
	private javax.swing.JTextField ivjJTextFieldMessage = null;
	private javax.swing.JLabel ivjJLabelHour = null;
	private javax.swing.JLabel ivjJLabelHour1 = null;
	private javax.swing.JLabel ivjJLabelHour2 = null;
	private javax.swing.JLabel ivjJLabelHour3 = null;
	private javax.swing.JLabel ivjJLabelHour4 = null;
	private javax.swing.JPanel ivjJPanelOfferings = null;
	private javax.swing.JScrollPane ivjJScrollPaneOfferings = null;
	private javax.swing.JTextField ivjJTextFieldAvail1 = null;
	private javax.swing.JTextField ivjJTextFieldAvail2 = null;
	private javax.swing.JTextField ivjJTextFieldAvail3 = null;
	private javax.swing.JTextField ivjJTextFieldAvail4 = null;
	private javax.swing.JTextField ivjJTextFieldExpires1 = null;
	private javax.swing.JTextField ivjJTextFieldExpires2 = null;
	private javax.swing.JTextField ivjJTextFieldExpires3 = null;
	private javax.swing.JTextField ivjJTextFieldPrice1 = null;
	private javax.swing.JTextField ivjJTextFieldPrice2 = null;
	private javax.swing.JTextField ivjJTextFieldPrice3 = null;
	private javax.swing.JTextField ivjJTextFieldPrice4 = null;
	private javax.swing.JTextField ivjJTextFieldExpires4 = null;
	private final int HOUR_FIELD_COUNT = 4;
	private javax.swing.JLabel[] hourLabels = new javax.swing.JLabel[HOUR_FIELD_COUNT];
	private javax.swing.JTextField[] availableTextFields = new javax.swing.JTextField[HOUR_FIELD_COUNT];
	private javax.swing.JTextField[] priceTextFields = new javax.swing.JTextField[HOUR_FIELD_COUNT];
	private javax.swing.JTextField[] expiresTextFields = new javax.swing.JTextField[HOUR_FIELD_COUNT];
	private javax.swing.JButton ivjJButtonStart = null;
	private javax.swing.JLabel ivjJLabelTextUserComment = null;
	private javax.swing.JLabel ivjJLabel1 = null;
	private javax.swing.JLabel ivjJLabel2 = null;
	private javax.swing.JLabel ivjJLabelCurtDate = null;
	private javax.swing.JLabel ivjJLabelNotifTime = null;
	private javax.swing.JLabel ivjJLabelNotifyDate = null;
	private javax.swing.JPanel ivjJPanelDate = null;
	private com.cannontech.common.gui.util.JTextFieldTimeEntry ivjJTextFieldCurtTime = null;
	private com.cannontech.common.gui.util.JTextFieldTimeEntry ivjJTextFieldNotifTime = null;
	private javax.swing.JLabel ivjJLabelCurtailDuration = null;
	private javax.swing.JLabel ivjJLabelHours = null;
	private com.klg.jclass.field.JCSpinField ivjJCSpinFieldDuration = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private java.awt.FlowLayout ivjJPanel1FlowLayout = null;
	private com.cannontech.common.gui.util.DateComboBox ivjDateComboCurtail = null;
	private com.cannontech.common.gui.util.DateComboBox ivjDateComboNotify = null;

/**
 * VoluntaryCurtailmentEntryPanel constructor comment.
 */
public CurtailmentEntryPanel() {
	super();
	initialize();
}


/**
 * VoluntaryCurtailmentEntryPanel constructor comment.
 */
public CurtailmentEntryPanel( com.cannontech.messaging.message.loadcontrol.data.ProgramCurtailment curtProgram )
{
	super();

	setCurtailProgram(curtProgram);
	initialize();
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJButtonCancel()) 
		connEtoC2(e);
	if (e.getSource() == getJButtonStart()) 
		connEtoC1(e);
	// user code begin {2}
	// user code end
}

/**
 * connEtoC1:  (JButtonCancel.action.actionPerformed(java.awt.event.ActionEvent) --> VoluntaryCurtailmentEntryPanel.jButtonCancel_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonStart_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (JButtonPostOffer.action.actionPerformed(java.awt.event.ActionEvent) --> VoluntaryCurtailmentEntryPanel.jButtonPostOffer_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonCancel_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Insert the method's description here.
 * Creation date: (4/9/2001 3:16:28 PM)
 * @return java.lang.String
 * @param seconds int
 */
private String createTimeString(int seconds) 
{
	int intHour = seconds / 3600;
	String hour = Integer.toString(intHour);
	if( hour.length() <= 1 )
		hour = "0" + hour;
		
	String minute = Integer.toString( (seconds - (intHour*3600)) % 60);
	if( minute.length() <= 1 )
		minute = "0" + minute;
	
	return hour + ":" + minute;
}


/**
 * Comment
 */
public void dateComboCurtail_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	return;
}


/**
 * Comment
 */
public void dateComboNotify_ActionPerformed(java.awt.event.ActionEvent actionEvent) {
	return;
}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GF3E68FADGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E14DFD8DDCD4D57A3F39E6D4D856DAEBE6C5299B1519DB34311B3534510AC92D35D4D66CC6C5C6ADDBD47EB6363F7B734A0B2072B282969699AA79D23C8D8EAF82DBA028E014AC1262AEFDE4E4869899E646190B0EE679FB4EB977B9774E1DBB8338397F7C78F06F79BE67B94F731CF36EF93FF7043C0F02D2D7A46589420AD4C17AD73DC290A65FA88853CA9B3391539D69C893947FB6822D957E27BA852E
	05400BD85E1126939E2BCB0730814245FF69C8FB8F6EF30506D571136046071EF0604DDA79C620FFBDD7A7211EB49A1EE14B00EB96D08DE05DC041C7087EFBED7992BE8E42D952BD2195C902E06DA1F172EA7295F83C942F81F81D04EFA4F11E3495C87C9040C81CC8384674303809F0DDC52D3B3036C60A57FDC510307461CDC919C417A2FD24AEA313BDA3DD8B05DBE9C6A48B8E779E3856378F76FF56EB9FAA6DB55AECF61BE86E9DA8355A0D26DE38F75A2D257D431652A123ED58E8B583F02A3636E958A99A
	AD56A1886EA6C83B51E63602BF547E5A1AF41AB6588FE177D1025DD9C3722C9C6EDB00FA0E228F0FE556CBB6CE998C92E2E62C7369433C234C761823328F91652F27CE6EA569AF27E5C2648AA15C8544EC59EBC7DB22FA51162CCA92B7435411D684D4EFC27C890AF7C2588AB44104B67EE3AB5A58756D9DC25113314959BEEC1CEEE236051BE49B6BB73F1E3A1E561BCDA9246C85B368852A816A86BA83B49D6883DADF7F187489DC9B0F0ACD7621A13B2D516158E5B5B93F341B4CD6382F2D850E04F518FB6DCE
	13A030BA79F9CD3106BDC8A1E64F7AC80879F6C840BAB43B6367C25E05AFA527EA789672C4D1D20414C634D976CD57C7726D0B1DA45F1681CE6408BC438FD23C33CF46D9D905523AC04283400B6C43FC6E4AC2DB5AD22689BA7D5E24B48DDB267E36BE293C1F595052AF5B4272F8D9AA49E3917049C041C0E1C0B1C042G667156649DA365F1ABBC83CE1B51FAE07828436894F78DDB2CA633D34A6BD43B3F3C56A2A617BBE6B916AF41BB14E594FD579E4DFC098E7EB429E0006507E1C04E97263B4D276E4E816F
	3A11454BF0BCFDA68686D899A6F3BC1062EE854E4AB60F62A49CG3CF8A0963F350A606D96F59D69243849222EA34FD6E29DF183AF9A08156F34B452B6B69C03E787C8848A841A8D948194FD8C4B5819DCB64A6728DDD13ECC765314F749E36A961D46D61BCBB45AFA4D870DCE0B7128556C9224B80694122FC7BD64F652673B97F46CB55B4CCE23E8315BA0F5631099AA130B455915321644F11AA93753B2E48685C38E81535D17128BD72B51A5FE6DB099C5339C0371BBD2C81DB8E1BC88A9C282F0DFBCC81FB5
	5A66AE837F7387B12F6627934C816100C14C17C7D2F2607A85D4EE333536365952CB4CB0BACFE19D7D67CEA2B39D62B7DB7139FC2D8B6BDFF366AC2178095D1A750F76E7D6D617D20654752F1B26DB8CF85B9076237757F40DD07F1B2D5AF553234D9D540E43F4AC9BD1C76AA81E43E49FB84B674A55242EDA412FG2060A14C6B7454C2D687F799DDE62CF57B1DD0E14CA6B967D95C541524CFB11F008E35596CB05BCCF063124ABCE365AA39BE7659F9DD4921B8E91F1A204238B81E3FF2AD43A18DE56DC6FEA1
	659BC551E9B9BAAC1A8F18C551E26B176537D1DBDC9ECD1FCB7235FA8D71B58CFCDC8C9447FD7D454ADCC53DEA335B87079D1D6409116AE7AF6D0717C17CBC9B16FFC0A599D755707015B4AC735F2F9C296C46C2C40FF77D5871036AD0579326E3FF950EC15E63583FA8568DB6CD607EBE4FED71D55F54745E98ECE3BA5E99330E51BC9FC82CAE4CCC73DD17EFCB532E4B3FC8532E4B7724792F2B3FC9532A2B0C773BB4E23B7D24CDD177972611768F4635B6B3FDG39084046432FF592BFACB60BF848E26AB70B
	87AC274DB0F63411BABCC45B5859F09FE643367164E6EC9B0BCE5FA8049DA9CC529ABFCD1D75F9D23E1D553FE23B5CB6B21BA25349B3E5361A49F03A49BEEC93997EB8ED3FA55C15CC3120AF2EA5325B766D9A96C53B2D09F4CE56E2A3752514DD5A4D4EBE3BF348EC5AF64CF842D8EABCA9165232A8ED246C5D64FEFBE1C949E7051A237862E34A240FB42A52EC731DE85D76035B758233F3FA6AB4251D87C4A81E73E2A6CDF94CD66A316DBE16C1723E8D4A248748ED47766C2BD5040F6D1954E8B7592DD6D6ED
	0017E0A7F562321DF90AF21EECE77341E838B2FEF62D963F4601FA6AD66BC87DB59F9FB6C3F61386738B73A99CAB2C4ED1718E9A2D437298E45F6AB5F035AA5ADA067FE30DF6FDEADAC35A57C11E7E5EB5AB85B216E0E9327ABF57C852F4B8ADC3C61251CED11A371E36AB672DEDE0BF1963BA60BA81084956EFD887D79FD3C3217BB89DB7D6615CF6BA4805GC5C9E9659DE74F850B57DE0D7102A19C8694F31C45ABF432F883CE92EF821FEB16F16CDA0A3D8D8D5E0CE49CC3FF29D34E159B2EF3EABE2704E6CB
	6907B955F30B9BB2C93AB100A7B8317C9ED8236C779ADDAEFB2F058E6D2432F0E4A81FE1068DE72C06EB1F456902F906496C46727CB60358CA46FE92AC1549ED1F7EC3709E4B6EB6D9C43B930795CDA7E9656E34B7417033852AC493EF628EDA4CA7851C1BBF349373AB4505ED58F7FB14F370F959A5C9EBFC64CD3DCBAAA3171CB7D11BDECFE5E96F294534273B30CE3C351D549B3A3EC09EC9F7296BA4345F35357BE835E0F231F4ECC0EC09F261DCFCD3851D230BB0D7862A87E273023B2BF0DE5089D820084F
	59D01572B98B87BC9EC8B75C11465A23026A8A520F0C398142B2B8E6A1F9741FB40DAC2FEF4AED10EC0C1CB3CD28BF1B1524351690101D1FD4B44C7238EDD84EEBB14A11B49009EB9E272AB1AF26C21CC5431897B3F4DAF911FE8273A266BF4C0B3CFF5749F9F1AE6DAF2EBDD4A81F493018E21F4FE44189168765A7544F64CF32C95DE9833C6784BE13FF4DD82BF8A6BB60A9B05A7A21F56463134CE4568ECA61604CD4EC87859CA7BD3CF3ACF3F571844E3942E85E87C0F8A650BC20A820255C36322C91579EF6
	3B7D2CBDFCD1BB963B72CE625872950F797FB6406BCF4A6361F638B71D749C9F3379794F69F368BE496667599C7FA5450394B82B135BA8CE429140EBF6237EFB2B54F60739BD75C53B3546678B3C64B6284242A9CFB9D6C7338F2C57EEF7D82D95F0BDF6E2253ADFA3730FFCC83378942EA14E24E3F532AE59FC8A4B795D9C52BF85C3B89CA89AA8912860B4746DC05D27313C3F4F52EA3BBD4B5BD743AD4F5BD8DE1C2DBE37BC1C64A5274E43B327BD65185F4F685225321CF29A7DBE18CB30C48827FF0BBEBE1B
	1529F85E5A6D961B481F3500ECB24630BBAD7D969BE213A856EBF75201B91B9FBECF7B25FCC85340530D50791EC77CDE27BD0FF8C227BD0FF8D667FFCE7C224E57BC0359F734966DEB81E2186020F3B888BBB8F6C18941A6C0F8AA475A4A88B68F42D19C9BAA277988E15D99FCC6E6D710BAD5846186209E2089C0B301420122F93CF9B4DE8204F55FF52415833583B90026FC475AFA962F34022CAB91D9DF6D43CC09D7A4699BCD1BB2C10A57200A9FAD05196EAF296ECCBF692C112E49124CE8F42FD2BC63CABC
	DB3AFEC853DB70EEB6ADEB174B6C228FD733D1B4CA3C1745F502467C6FAB6310D932A5D7F833EA1594E737E8EF2A604F437D1569126E506FF01C921FCD5A3B848827FF8FE3536FB16FEF29D22FAB54G2F6DFB16C7BD52D57CFE64BC8F00B853D57124F51C9C5F4F47569C6D6723A40714094BBE6C6CB52B1F81C3CEBE67492DD02BE89EA259A34DAD28BC7479B0B7D64BB7D3F94673A57FE50E2F670C657DAF2B15F92F677569B91DBABF67C21E04CB7932D83A462B72C9B86B1D3FF900EDBB2B151F7F4EA5FD19
	1B070F5070A9817B94F3E39677EF374DA4B5F4EC4E11C85B2FABE002B5BF8931D3344D389CB0FB927A771E0334FDC7E1D2E682274F1CA571CAE9BBD28F77ADE7F10CB6350444339ACF5907C1C771B892AF33947B2AB0083798C8GBCEF9C730559780B1364396AF39A07A0DB8FB84C3DC27A85F47D2D8CE5C5089FG948C948194B78EF5CEA8A732A0E8999A9E228B9F4C3E8EBD312F9D52693EG6332E7FBDF1B7128593A3F2F4F6CECED66E5C84ACB459321A6F27EE70757F1FEA7B03EF6191D24FBB45B64B88F
	9650B488FB0F45ECB5FDE9F6390C7D72B37A4EA1B24E5AF7205789F3F2B217200AC8D5E27CCDB5E40E45E69970781BD1AE36BA0D63FAE98E7FD605F23C9CF0819B834C3EG47534BB7E97143B8BFD42F450F627C1EECA5BFCE626B46F72431B1C8EF15F28CD2B41E715B61EA62F13A8CDA6314B3401FBC9E5B1C87AB557DFC70F8391E4F9B6F7DAC3031DC0F0E34E10B462B77E686A99EBBDE3DB773E6B64EBB9201577D936C539652F1D2980423B816DDCD30B888A7F26CFA0AE5CC00395D844446E5912C86421D
	9CFBAA8B7B4D810E3D1D057DE6A047D62CC53DC19C5B37967506F06C0E3528B70CE3FDD528B70AE3FF27D89C04D3AEC4EC8137A51FE32FF0DB6A81EB3F101C9DB03DAF70BAAA16EC012B4DFC32104F0678E4E4DBF9F1A17CB76875450595657A6D38CE91F4D2B9A72AD9DD61F3CEB465C2D61E4152B57AA71B257229AC453D70986065CF4439383E070C9B78181898D4DB3B57E9B16DB2763751160675F35F1526CB726D93311F3B0D2699G61A020500938F6605E02EB8733FFBECDE89B37C7F37FBE2633A4E951
	C4E6675209729C2EFDB32E9DDCDC06BA4BAF02723E08E07714A91F9B12274FC2BBDA8AD746FF4503CF5A8B48C6857F03F2A51F58FBB6D9497F52031F2A10E73EAD7C98FDDB36B0D8305EED70F9B6E16EC54C27A8696A6858ACCCF87B75D4D6A7E69648F5A23522D0DDA71AAD5072114D3CED3CB6C8EBA7FDBE56CEE84B49726D139DA45FC83B1D910073152A4D08B9B876BAED43C9BB919500756163ED855A6973D617497EAC9B57F5B2AEC6597E5D9FEA4B4AAD32006326EB2BD0F77345D81F8E55117AF48642D3
	00E6DF0CF6CEB6E05CF09E77AD3A973C8C42F9174033F789BEFF4F5071D8B3043BB8F6229A1F53B317E03B58C767B111900E6558F10A11F5C532864930446C9FEAAF0868427B58CB14636235DE6318F3A5657ECD2A824B9572E9BBB7E4B3430453524B7A7025348CAEA29571D26C430DEB49FAB0691AD91C9A1AF7BA609770B80F2F24E38223DBB5A618CF6316C33CFA9E773BAA72FC3085A5521F9BEDA68147B837E4E15A83C0E7AEA558EBD979FE7CE3F205346E05C37CC5C40EE2E5543F17C91D38945B5DA8D2
	9DA519452C1D8F0436AF90E52E267EB7C338BD906D4D2BA676BA1CE698B9B84DA63655A325D1C27D9B0038E2A05A9BB38AFBF3283DC1A0B3BB905B485F7FDB59266B2695A411B6C42B9DD99C486ACAEC20FA1D6BF79B687CF3924C0FA7617C781677BF056BC163B16F95E1G5B1DF60759A91EE2A85DB9106AE0DD69391DDFE9BDC73971E316E3630F0F4A687921C9EC7C3102635BA85E2340D93F778B5E6FD90137E8922ED93C7D91A9B743E5D076C083C06300020066DD06F979667B6542886BB41DF6C79BCC36
	2C0A6583665FE5E567F62E6701B46CDFC2FEFD1390BAF1698ADF6B6E0BAEE375A1C13A267FF3B34519FF17ECA47E95DE8E4FA2D08F109BA890E8666568DF6D87454CBFD29D9AC55158BBC0F7A450B932C9A043E46240FC0BC955EA2FC2AFE7F6C4DE6EFB7E9A2362AD05F07AE42D75293A4DDABA8A24386513FD6BE8D6713AA0EC555431D42FAC23F1D21CA952B5D8C387131B1E6D2FEC6779148B626B160BA0CE2CAADE22069C2B5B8BE93F18F1057A3C559394AF38C2FD5E6A1BBABCEFD58C3C49D7E0DFF615C1
	E977D240532F14F596DC69CB7FEF687ECA7915CC4F8732FE0ABB94B8537FB75AB71370DC60857E945B56B7AA3D672F69FC1EB3B0851EC120E020F9D3247D092BC81CC9554DFE721B74F3EBA4FF6919CE100D835AAC051741BDD99379D0403E70328344BE65AE34477CD5391F43E556D443B0D3282A0671AF6DDBB61364A55EB534DF5844A4B6B17E1EA219BF1CC556D6FD0C6F2AF740702EF2BB46FDBCCB1996EB93A23ED10EB98BBFDD3EC2EB4C19784DA7C96DD7C9EBC8D749FDC502B9C19AF34E79D836698D43
	68ED5A3316DC373A36CA3EAF59A227736F2A51244364D6ED13655E26F5E7D33B5DA59652E93A14EF3B364BF16E9FD53EB1B973A732DC7B28ECE26DE48E69AE710C548612C11AFDA734067BA02D7DC70F41E42D53584FE596EEA0794C572ED817AA719E5FC06692645C0845E8351C26DB4087C432A0411E470F49763454B614AA6E6FA97DA14F9FE937C50B4E2B8E66BF8C5484DFEB11E9055AEB1119055AEB7539057E4F7CFCD0687B4C4F26C265199FD66E9F951332890667A49CA88EE899E9EB2E463EF1EE61A6
	01760D9A7D62EED3BFD98BA527C0C5547F530D3EFD1D36F1643323B3B612352923F6E8FA06C87A085F32111417E8F7D010E1F3B612BCF2DA7A87C496D542C3B6123643EA6E23B01B7BECDDC94FD802DF75D763FC685E153866514E31481384B3C1D864581A8C1CB785F04C56056B9B0BB9764DE654914F31784D28C37899E2CF6FC59DF99CF36BD047B60E057D8BF538B9362682E583B9360B5A928461399C3B398B531B47313B32914B180A58BD6C2C9D0447F1CCC75B71A9908E6658533DA89BB9957B51476A48
	9C29609A8CBFCB43B5BC5CDB27B9F639E6F4FBA923FBFE4FE86A986D793D110879BE1B4E3B3B41EE47B5189F6F52B503A9908E6658CFAAF89E71BCF8284AC0FC1E5611D6835485A482CD861A8D948994833494A87FDA0883548EE43D1667A9158F00F0B0D084D09CD07AF428A7C0ADC083C081C041C091C0F1C06957217C724AC59AFE919B48156853729BED0D19A6732DBE62AAA9D20ACFFCEB1762AF1D66A9D7A005A7CB577CD1242BDD76D5D5DA3E61BE182F731F29DC5E331D9EC9A76E2311B147FA69BE57C7
	3D437D3BF567D0675858313C8A67EB5B20ACFB2E4335259D959EFB77EC1DF20F55FE32CD9ACECA6BCAEEFE2EF66AF538D674A0CDF391046300046BBB52BE12FCA0F1593F044F35B0B63628AE95841C1FBD1F01E331025B2E951A1FDA3AE23320BDBF4B3FDEBA13F63DBC96CB69CB105E7B6922FBAFC1401B879483148814F1C3C7DA518D5887DDD2C486CC3E66724CF15A8FB90D96BC4F373558F7BFD4DABCF2BFD4DDCC4F26C17F51F94AA16D4F5597537D7A3EBE171977F70D45BA0E353AE098E7A1239BE9AFE7
	25679AD2A76DEFEA402F669BF06D65D50AF5C3F860861C9F3CF812487559ED125C5FE81FB48578C1B760DCE0D3063F39C0320A96019CA1AC23D838EF12F8CC474FE8FF11G78B2EE5BC45AF7ED8B6AC8B384A1362E08E0AD906E64D8D28B4146C1B8B0886D3BDCB752DC451FFDE1104ED582FBCE190ED7E8DF988978E22E57C05B5B149B617EC64C3B43DD18672C4E3EC116AE84E6537DDDA365D91A9F1B9AC0C72E44E369BD1CBD120F4A745AEE1453A33C9E88DF1C4452E636BFDAC55A2C93E627E869B5DA59E2
	71AE23335DEE35741E42FC204FF58910157B3C351A6D1BBA6906B31BCFFED60D73495990AF9CC83889469BB7C9EBA4547E045E1172E315222C0AC13661A6F9BE5989776B6146426D5F1DC91EB936FF48379C2533C47AFA759E9DB9135183E908B7219F8F9A3C7DF8066F6D855E447C188957D0498FA6D722771ECFB76BD1EE51CDECBFB88E2E4BBC7C1FD6B1127F298A7F73E6C01FBBC3763F9E6E7F36FC79726700189D2B9B089C5B01A0A7FD15FB2BF3BEA26715655D8342A76FAF497B4259DC16CE45A913715E
	AA50F15ED7F65152F70A244CF86FEF4D7664A9641669F2BDF42A79DFFC1546E571EC7AED8A2C82ED6FDB67611751E2ED9EE62FF071B25834176AEABA60305828B29E0371AFACDD4353E8318F431CC4DAE77E1C58CF7CE9328F9D35B377A41E6104CE4913D433FD637CEA753EB2B95F53B28377151D9EE7DE3BE7B0FE90676F50E94907F07E32ECADFE84677FABCB0B9F4D790525DA7A93B87F0AC6AD79141948FF37D70B1F4F79137A3578451C5F112164B74CE4FC1173CFB4E84987F07E3E43CA7EF4C9BE1A7397
	15EB7193E66238334A6BEC62C844641A4FD16EBB8F3914D9A30FA9595ADDB5BDA71CBFCB3D0E5EC07122D96AF57485FCDCD68E3CA933F09D7DB9BDE9CB92A11C77F3984783358319004EGCD861A89948A3488A88EE899106EE69867G9900DA003AEF46B14F19D232G64EB4CA3EDCC4B039E8147A346B25F631E01321147BD474B34675FA74B3C675FE74A34675F634B1473EF568F3750FE18BD57F753FD33CD340BA8ECED2E5DA42DDD4D574BF19EB869E76D4AE0A8AE54D771B52FC5B5325C72B51B54F2FBE0
	A035ED1349E2345A7BB75113857A8A10759E67E2FAEF6D146FCB6B6434DF58B4FA1B7ED9AF4B3D3C19645DA698A436B6232F62BFE47E23FB7D243B238A525D4953DD7A39ACB7287BD85BD7175166F2C1775B876E6A613FE1BB77673DC659375ADDF2DA576AC7EFC37AEED92E2AEB34794DE4BFA51FD45048FB1CE3FC35D7CEDB28A695C23105DE2A58C1AFBD383B23333529316D4801260E7DEDED3B9ABB0EB4369DEABCFC00BF2BFD55387E6F0067AA78E61CC35D371AD4C62D6FBA74528DAE7AC907E151E22D2D
	6D3408D673AEBAA2E1732AB955F84EB166E61CD7557452B6A438A32D9C28A5F82C732A63ADA4445237546379041EE0CC7F599C127ED4884F850A884677BD12787B64B100655F0267846C7CACE67BAD1846F0B9BD238261A02050DBB08D2B9E5B33C500255F0AE90468714CC9432D18468BB42E9B42130102EF9D2B1F6B7749FE6E2FC6BF43EE45F2793C38E63465A28FEA48F8063ECB45523D258AFDAF3A8DFDB926C3DD5D9C5B21433394E19C3BA28B31C40E9DAA45F9F479EC44A29AB15EG473E6CC5AC08E361
	7D28F771EC74717B2AADCA9F872D7D2547FA498AEFE99F7186BC1307D018D797E7208D3A5BB16D5B9BD0DF4B6D1876CF7669C71BFFFCD0354B6E66E5F241E154B30E6BC953A396FABB2EF3CD21F91CA069E57D6FBF2A85FE3FC7F17FFB2F333EBFA4B19DF167D5876B535E527B6ED75F510F5C2FA6D7E8772B2BAA3C7B552C8A6DFEB52FC2592FB2ECFD85A903FE988FF471F89BB8F618E31BE91A84BBE4B109839C5FCE6DA2F80B19A8C43C0C5AF512E2DDF886DA019D466FBAD410399738BCE0F7226CE795F47D
	42E235CA6FEA52B8961B4BAC727C58CBED34B80C8A3B5BB8F618172D556B7D8CB5254F515A53BEBD221C7ABD8FA6F79715AB1AB33AB5499A0847460B33E99F50B6C7BD0E3C1B62DDF35463484FFA315DB581AFE28E0E1BED75E8F7719D523B84F74836F4427DG50998546747C3FDC125E64BB181E6D9C4F4FA3F83C82E77A1F27FD8A89374C05F16CAFD0FF0957B9595165F75D08F25A79ADD23918BBC7175FCB6F447CFE0576E769F729737BCD0A675D254E6FEF4B79B71000B761AE745729BF37794638F3147B
	551865246F8551F747623C7CBDC27125DE7E4671FEDD8801F9C8887A5BD92D55D6C604C867E4C3FC17C3020A17F2B70CB96E562A8BF33C66F0450AF88DF7FB6BE0F2F64D73FF1DD27C818DB924B3AA5EE4884F54342DC62734ADD40A93A9DDE3FC5AF6F516471991A9DE7AAF593560173E643A7D1E6FAA77A977C823D22ED90A57A5DD2DBE65BAFABD4E72C87126C857E01FF28B7A15F27324F80B24EB2CF4CD04EB46BD4AB31B17E578732F709EDF7A6EECD04A9924F8AD52355B275C44437E74B9FC4AE578FD6E
	A6E848C96BE174FDA7235552EF135E41E067E742F249BE1045E635584CCD6C2BC6826E97BECC4736D3A14D3977601869DBBA0E8A077062FB70D93C33D760765D2B38EF6EBD7FE326EF4E2B8E667305F4AE938B7E8A21188F1BF288168761ED9C3BB19777CD5BB8B610C7B0870483B8360FFDFF8942A1211807AB725A619A8161B82074DFF52495825583F58109C01301020142002201920172FF5D11E6GEA87F2G85G85814D83DA7CEBCCFB83CDBB91427977F62455GF581390126820582AD86CA844A1F87FC
	20AEA0B750D420D02045C009C07977819F286BBECC7B651C0695A367E33A648BFDF625AB31D79D2FCB724D20417BA108642DA8659B89CF7E15279E12EF248C4E07EED2B6E1D23935CB65C44A0814B34B4B5A5C5164A5090B7B3238EF3BD1A39EF92E49BE4C07676959A0E3DCB21740BD6735AA7ED66107BB3F20A632F7C15672491AA519271375A3B286A4ED9CFB46AE2D44364BFD9FBEF7C96558F685727A7BBADD4F135E8DD05CDFD0FE7E5B2EE97F859D5D9532CFE6457DEB7A732FBB2D627C374D6CDD90F2D6
	E9AAAF6727783BE7B3B9D6234373C6219C5B4F4F96C5F22CD607E7158A6EC76CA13ACED08E61960E2D2CC1D9AB472E5021AD73B8361A3F0F964131272B5016E80EFD3E8253CB6058ED7CECD643EF384DD4C7A704CD9CDBFD08E0EE8887F04CFE88531B42315B33D0B616E3579CC459C40E3DF390E5D34290F315A256493158C6CCEFA6470632B03DD00EBD4A5F2B8B67182597E5739EC06C3DAD5E328DDB78F9B29EAF062EC739A19C4031ABE83C69901E4D313FF259D00EDD3306E0693F0570EF917B8B459AA05C
	4331D97C2C1C4831858D28B71CE3A55928F7B147AE636753E2B9F65DE1448C8FA236D90F580487F16F78F97AEE34C816EB497A330067867EC66BF494440B61F12F5427E2DC8157256B3FA04FB863CF2F777D6E4B5DF4CC238B07FA9E0E696D4C715EFFEE4F417D6716F0367F5C83D791081C0FE36F9D0766723D6DF056F786C957B01E7659BC6DF70CFEC647C7B190AF1E47B56E54FEC779947BFE44C39DE9C58F496FA8537DE879BD645DEE0745C9562B98FF61994F7DEA092DC7FE63315502F2BFD75E474E6278
	97A7875A1D16DE338FDE638923450A3C6E33BA8FFD1429E73C7ECFBCF9B4D109D769765CD746FDEC439ECF9C7732B7F5EB24D5A179F4C2438609777BE64D7C28C07B9FA957C8F707746E57910DF4A5DE4E471A696E40F48F34FA7A31C342DFB96B099BA47C52F68DBB8C52BE7E10069D92AF5920E907813F65F6B4CF3DDFCC6AF17BC3389F7C58DA75FB5C04EF627C14C1ADF9B767FF31CE0B9F48796F383578C11C9FDD2C25BF0473FFDB2B450F607C8CCD7F22B97F01BAADFE82671765E9251F72BB647F0F267E
	FC4EEF5414AF667CB7B4659BB83FC9D33EF38479814E3F5E6BBC83611F617C5ACAAD7EE44EFFABD3AB7D191CBF4320458F657C851A72113F4333DEA1F4DC9A8361785F61FB0DC75A845EFE0F7FD260ED34C047988573216F1B0F72C6567FC338E7BE1ED16B7B0F4E03CD06F44A8465993ADE2AE3BA604173311D2D4BA14F690025FF40CA164D4DCE29FFF80D3F6F9385F1636733F65F90414E79B27BBE2C71E7DF1A4A3E36885579B2885FAC71D89E4D7ACA4E239DF4FCE505B86E88FE0E0F7615B3A1BCB782EDB8
	38E2A49B7C1D630B01F45E104EC7B19DD1F4EC968FF8E28466D11F4E733C63991A0FC58BBA524A97E01C0D07BC4F75C56CA73EB09BA79E9A4DB9AEDFB676008EB2677ABB584974BFC947DDD6405D8B302E7D39DD5637562F3E114EB686AFE0E7BC08BE165EA525A36531B24D10851E659C8161D9D25A4C7E4CDDF44C83F88C37BF2BC3367F25ACFF7AD60DD06FF58F33FBB93F2E24E352824037BD0C7566501611F478AB13AE058ED67EEF77FB56114C81BA9700F80E07310E84EF712CA37A83324F19DBC7AA33D5
	FE6C89829D9FFA58B3F78D59739B30BBAD2741A6A37DD68B1E7E45F2D8C84747A45D595C46140CDC8F39C63E3248E4B6E4204CE21E17737C1E75CD9B417614059DE9B788ECDD0169F8130E47F50097AC447A5159A96755AC3F67DAD70D202F8D522C74285FA107C74AFBE5DD68DA68D93F2D90B6CBE93374EA75E3B9F76BD6259728C80F79BE7720A060F84B2E9F4DF99683BF4F7207C3326CFBB905EAD945991A4A9D4505BB2A4B37337D99F78E6E4FCCA576AD447D76309CBCF7119E0967AEDE23F19BA05C8564
	084438FF4A45338E811178DD10F7BD4681EB2534CA857C2EC70B87BFD541E77E7C35CB7667731D2371C7BA5B71AFD96E7ED1658373611ABCFE8E047B151E434FF0BC02D85DA0BE975D9C9B3F8EE527F0CCFF8A31C80E6516E0FAA90FA27637DA446AB9561407E7AAC40EA55671E718E3FDF9A89B4B3162BA448AFE0F181B476B6458B69EAF10E327F93CF00DF84BB876C4965AE2D8045871CA442C9C7BA48BE5E7F26C9983E2519C93F83C3C47309DA8DCA31763DF4B4676ACB4E54832A5BABF6749AAF6FA1C151B
	19A34BB50D71BC59FC521CCA772F664969FC6D6F5DD72E1FBD0B6F72F3E2ED108F939E4373B40F9EA78781555FF1A9F5D80DFD25C70DAECBEFED6DAEF2215F69EAAD2277AD0A119E34BD7479BDC0531F8769C68145BF26FDEE0A7970713B32BFAD6F497EBC6A4F1FCAD5FE2E1765F62C58281D1F0DCE48D06F73014F3DAF6BCFD2FC1B67396C516B3FF903AC773F8747D61E8FFFA46B5F32C9CEE75241317951CA1AFBBF678C2DC5321EC7364AFA0CD9E333B7E11B1CCEC5311C4E1AADE3CB676B92B91D85E5F2BA
	970EB11DF845B95B9756948A1E67A78F103F784A2E2B3423F5EFCB27340E12B11A38CCC7F605EC6B9245333BB1FBEC362E4A73DFC6456B7C737753E7052D19FF1FF3EE67B1824FD16E21B14B31739AC769B91D14475567B886A92EFBDCFD0EE3A99FA794GEF5C63387F72E22ED2FFAC60090F7B5FFFE3F25767E96DADE47CC1FAB76F8F3E53B028F8AD906ED6E1CCC726D75EB89471A6E868E0F28D03CA3929D23C5952B5CC3AC6A964195CC56B14F2F192FF19F455C5F524958155C429652ACEA9655AA4FE0FF4
	95619AGB45DCBAE3FC46D5FDCC51C70A8DF7E7D2F57772997AB62467B14EB49532AEB4293ACFE1EF45D76045A4E3F57E94955CB715A61EA82F2FB498DEA6AC38A0478C1CFE8153BDED39FD28848C4E84AFD67D7DFB448A4E84A1578551772E4C7DA7E13DAF2E77D6AAB861986CDB97F7ABAC1E6C0D36E19ACAD39B3D25C49F01D89947A243A9CCEE81E290B14624540F5A9D07AD3EA39B2CDFDC885903F7CA9ADBB1FB37813EB8619AECD39D43F7A2CA0B3CED32E609C4FF6FEB266331D2C0D1DCF47E1D31ED237
	3D0BA89E74143A6DBDDC0DED6FEC606996E35BBBC0471C6C7E38627E1D1C733FB71C1BFB7E77065F2173CA917C2DCBC6ECB9458281FB11478B4B43FD5B604538B737F19D6E5B06F0AC369677EDA3B87666FA5C430B665816C15C37ADFE9A31229C5CC3EE6058A0BFAFE46258A1AA9B8261F00EB968BB5C0BA19C4731A70AD1F6A947DE22FEB4BF8369BD433F433A8EEDF6F32CE4907D8D6458E503686FD40ECD49C0BFE6F36CC6A36A8D63581727D0076ED91ED79654D144315D47D0C7B947968B282319E3C3DF23
	0EAE0E1515E07E85F34C417724A3B9362E8E6395C4A3F6309E63B5F06CC89E6669E40E31FAC062CD675844BA6FBC4D2BC759F89EEF186BC864582D34FCDB7E88630BBFA236B457BB3D71DC2F03473B3E96E543B856D2077122B876AA57D174A7DEEEBC3D9A0ECD636985F02C1927B71DE371BC3DF80EDD4D53931E73CE2F7DB96F74CC9C5B1B0571C2B876C69666DF8447BA781EF99447FEE6603E45A096ED407C2B615824CACC2F0DE32FD572BA44B1D7A626974C3150CC6F7258434FAB4C63715A38AD994F7373
	85860CD748B1A7576160D881CFEF8247D67074221E47767891457BA6CFAA6E0FE81EF57EE15BE377F9554156A10CDBC8BFA4FDBF0B3E3E417082F7260C636B9B525C4AC9578E58FA6FBE5A1645C1FEADFD9E77FAB2E91DABFC81727585DCE7DE757EC86B3E4AFD0DEE10A3C4A6E9240FF43C403E69A96F756C27ED63994083089E3A6FF5001F0B88F9C15E770AFC011D31E4F60C4F9D4B5EC12C428E7A5DED387F3B021FAB5886BD778EA6D03BD2DE047B97F1DD7E22E24F3D032B684F91B3FB620B47722D8DF53E
	B4008EF24ECE5EBBD81667FF8F605DF538865C76A21657FC0A1D01F0400B38D6973ADEAE63FB28CF21408B67B27751FEA881424BDE443C8DB50EE56FCA6D4B36D8768DC1F92F69846D438C00B74422DD4F3EAF5BE523FD1783F8E7E2512E95744CD6B004C3E2512E89DF0FE51FD1EDD78C24035F82E4752C2B846BD9FC2CDC4FD2DEE2E7F7194E0B46346FD67012E7BDAB0770A48F1D1F55214E7A17E41D1DAF313342CC67D07DD876C22CAA1D63A07C2D205C3B785F8F64FA7AD45ED876C155F99888E9FF691176
	468F6534837D5A2D5EABD727BDD511B6FB869E48A5714DB672121C893FCD1C0B75FE66CB18DF577875C93D57932A4A2FC8C5FEC94FD1AD6AD84CF59C299B4BBEFB3CCA0730C42E87CCC7EE9E6A48D802BAEE736B07FA4F35F009278E4392562649BA9E64FEB4F09D7F766B07FA0F33D325E3E009BA2F56F1BFC42E63F63FFE2877A283D4BA26FB65156CC770A87DD06FBF4ED369D86415D70EAC54913D845B28668DF25D36785D6FCCD669D3576D04A5F25DE67A428C28EF5992EC73D2AB91533D0CB674FFA45B10
	DAB5128DEB7C585070325A0669193C8FF99973759B3F7B7E6A6F47763C6C192F624B6A7AB14C7D9C47F5E4D60ED4BF14BA2628F4843F2C2E9F57F2BFC2380E9DA31EDFD06A08D06908FED9DDBFBE61FE4471323924D090302DFA3AF6046F28AA76BE16A876AC162C7F4F3FC531CA31CFD12C78EEED485A5158A43D7B18037BDB4B40BFC39C6EAB07D25C8A6189C053637C6DCB6D5FA25BF15BB6598ED37158567C9FD5FC5736E49D595371336750347B2B4E5D9DDCEF27C1165DB8B8B63DA7ABE5590BB37CFD47C3
	6FD11E532AE4392B0D23173B2FDA4E2F7535F29A0BADE3333BDE717D11C784FFFBF0959E7A0FA83EBFF2746B514B0D275FA5E175E6DC89561B90289B713C5E5CC77122D7BA526A01BADF71D7EFE6FDA62757473F47ED8519192FE0FAB3A89E8D6125C0992F7ACBAF66F3B9DF13955FB2B95CA47B7BFAAEF94E7B0CD697B96761BB2DB34D324C1FEAC7A7F303625BA71F640DCE6637FBE419E7C62967253D32CC71A87524370EDD4F277BE4190B3214B25277D89467621FB2A8798CAB289C5BB3FC3CCDCE6F2E4C51
	59B865CBD9A650B0BA19FB3E12E56E9C251EE7764BB20D9EFA58DC7F0291777C34572BAF9FD1CEFB3D3A186E89963D2ADE2F2E24F8792B6A756A7B79DEE1BD7002DE45751109DE7BD52333FB4A08F25AF66B69EFCD247CD9EDF7AD45F5FFD65B7DE0895F63845E38BF235DD63F7BAD3E6DBEBD221C365D6F5593BBE23D6CAE24F802175D3754215D4B0057930FF6D7A876846A9477617F057D01BF7E97F4306F40CAFB360A7B85A567DF778B7F859D9F564BBEEDD15C5F21792D699FD6F744F955C19685F305C47D
	E5B902B07BAFC22A4BA964F87F7E5A03F30F253E7F70B1B1C9C8E995D68E500545D6A175A4D9F9EC95D63801CE3949CF18AE005AFF2DA07D73C80B0FAF9AAFFB7A2959C71A731204A42F3464B4C4A115FE74D294D632DFFCF09D973E9748AFCD10A52ED6FFA1D1D8AD7FF802DFB127104D6DEB259F2309B93123B6794599494CD176F11ED6A105FCE187ECF4B2DB13C53B430DBF58CABA0FC020D4D148A4BF4DD8A87DB6E32DA82C625F3363FA496BB64520B753E32C77500D15CBA27FF45015AC2CEC955613E549
	83E6A77DE58433097C9A6BC17083F2EE0F304AC1FEC5133C4885C63968A555A51E321A5B043C3E8E7371E133CBB41B9A7137GDC22300E7E36F8997946D3D90B51B5A01265153AB6A145E69CB20BC28EE3DB21144B588FB054D14FD6B4B650A24C104AB1175ACBD2A96529645E1B7D7146FD312149C2529EE13555EEB46DB1760AF6E72B30CA9CF01ADD83F62B496D781CA514FE92CFE1A6C3F29FF07709332564389CB7FA50FDDDE0E6DC669E48AE37D3A823B149AAECA90FE1EA9AB0BAC11559598AE48415C51C
	F74186F14BA3FB5F6BCE92D6C8CE122C4FF5BB20A2759907AC56D3F043C65634D05E03E2921DC61B0B7C94BBD8D628328CD9DCC169CF9714DFF54BBB7F228AE4D1D17808E5A50816751B6DC3E50DFDFD961B19A7G798A49FF4813A7F1CAD5F1F25CD72C5B77447223D08F1A05642172F27AD7CF7FD6103FFA0A68A9222F004CCD907C7ED3735D68B32DBC3C7E1362AF5D83A5A8BE731785B7BDDB1F908F5E6D91D2690F3CC3A16864D8DF8D8F9DB5BBA74E3E6A43B5D3E2AEA5E564A0D545CD527D00A5CF3BFA29
	3049F92EB44F5A8FCFB67D6EA1C7C9FFD8C4C374F0F2E38FB515B4CEABA83A4E2B8A2590F83DA82CE185D9FA94EA9AFA3612FD0D0A86BFA60264260086B7503F9B471CE9C4EAB3CB1098C74325322FC99211ED70941FDEA91FA7ED2F12A52FD6B6D32FFED83B310CF64AF663728E793752236448GE6B577C69917D02AD7A993CA8243D90B8B350BFCCCCE9452256F73C2D318C2BE4AA78AE96CEB3E35BCCA5A3616165A21216D2230D60ADC081F892E25DC72E1606D1A15637FCBB676C861B6B796748AA710F144
	500F4A7A2F397574117C705C2A2969BCD653EE391A12D19051CDF794B46C466AC95E38A695B755A3CE5DB9B5AC0A5CAFA3FF7467279C7AE4AF09651BA5CF13FCFAB00652B91F0D08CD36FB1522F4D67E1873FA5833F3A207221BF9DE93F425C4A45F13FFFCF97E1DE71E93AB4950B37D47E76984EDCBD77E78AC3DD436142E1F882C5BCB77301F54897AD64C0F4F7E1F4A762FD16474AA0F1A1EA27910240926403405CDD324777B21EBA61DAEF43EC50574D381B0C0261F85A0C3FED1D821872AG5A81E470E828
	DAFFFC5D48AC4FD19AA95C4F84F5835B6A11B1A48E5D5C7B7195779CCFEF0815E486FA0E9573FC667B5D1E830C6D9AA17402F8D0F06E79FDBE3D385F538B03C6883DA0B63D4F3DD00E18D7FB21196883C77105BD4211C762E98AB45D230EE28A5EA37155DEA85667D42FDC271D3017972B3DD0CC41F3B6001625F174EDC1DDA76907C8955A12BCD05466092236A47CDD296DE7153F871DF8E1EE923E232ADE4B4A908EC83FA705D77CBD68F87A7D07EE405DC052EFB75510972CFC7D266501A12355AA9A2D030DB6
	9379FD4BDD27C4337C1B0AEF541074DD98C7E2B2DEE28D317B18C2667FGD0CB87884E6D35251CAFGG3821GGD0CB818294G94G88G88GF3E68FAD4E6D35251CAFGG3821GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG56AFGGGG
**end of data**/
}

/**
 * Insert the method's description here.
 * Creation date: (4/9/2001 6:48:08 PM)
 * @return com.cannontech.loadcontrol.data.LMProgramCurtailment
 */
public com.cannontech.messaging.message.loadcontrol.data.ProgramCurtailment getCurtailProgram() {
	return curtailProgram;
}


/**
 * Return the DateComboCurtail property value.
 * @return com.cannontech.common.gui.util.DateComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.DateComboBox getDateComboCurtail() {
	if (ivjDateComboCurtail == null) {
		try {
			ivjDateComboCurtail = new com.cannontech.common.gui.util.DateComboBox();
			ivjDateComboCurtail.setName("DateComboCurtail");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDateComboCurtail;
}

/**
 * Return the DateComboNotify property value.
 * @return com.cannontech.common.gui.util.DateComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.DateComboBox getDateComboNotify() {
	if (ivjDateComboNotify == null) {
		try {
			ivjDateComboNotify = new com.cannontech.common.gui.util.DateComboBox();
			ivjDateComboNotify.setName("DateComboNotify");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDateComboNotify;
}

/**
 * Return the JButtonCancel property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonCancel() {
	if (ivjJButtonCancel == null) {
		try {
			ivjJButtonCancel = new javax.swing.JButton();
			ivjJButtonCancel.setName("JButtonCancel");
			ivjJButtonCancel.setMnemonic(67);
			ivjJButtonCancel.setText("Cancel");
			ivjJButtonCancel.setMaximumSize(new java.awt.Dimension(73, 25));
			ivjJButtonCancel.setActionCommand("Cancel");
			ivjJButtonCancel.setMinimumSize(new java.awt.Dimension(73, 25));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonCancel;
}


/**
 * Return the JButtonPostOffer property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonStart() {
	if (ivjJButtonStart == null) {
		try {
			ivjJButtonStart = new javax.swing.JButton();
			ivjJButtonStart.setName("JButtonStart");
			ivjJButtonStart.setMnemonic('s');
			ivjJButtonStart.setText("Start");
			ivjJButtonStart.setMaximumSize(new java.awt.Dimension(73, 25));
			ivjJButtonStart.setActionCommand("Post Offer");
			ivjJButtonStart.setPreferredSize(new java.awt.Dimension(73, 25));
			ivjJButtonStart.setMinimumSize(new java.awt.Dimension(73, 25));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonStart;
}


/**
 * Return the JCSpinField property value.
 * @return com.klg.jclass.field.JCSpinField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.klg.jclass.field.JCSpinField getJCSpinFieldDuration() {
	if (ivjJCSpinFieldDuration == null) {
		try {
			ivjJCSpinFieldDuration = new com.klg.jclass.field.JCSpinField();
			ivjJCSpinFieldDuration.setName("JCSpinFieldDuration");
			// user code begin {1}

			ivjJCSpinFieldDuration.setDataProperties(new com.klg.jclass.field.DataProperties(
								new com.klg.jclass.field.validate.JCIntegerValidator(null, new Integer(1), 
								new Integer(24)/*MAX value*/, null, true, null,
								new Integer(1)/*Increment*/, "#,##0.###;-#,##0.###", 
								false, false, false, null, new Integer(2)/*Default*/), 
								new com.klg.jclass.util.value.MutableValueModel(java.lang.Integer.class, 
								new Integer(1)), 
								new com.klg.jclass.field.JCInvalidInfo(true, 2, new java.awt.Color(0, 0, 0, 255), 
								new java.awt.Color(255, 255, 255, 255))));
			
			ivjJCSpinFieldDuration.setValue( new Integer(2) ); // Default value
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJCSpinFieldDuration;
}

/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel1() {
	if (ivjJLabel1 == null) {
		try {
			ivjJLabel1 = new javax.swing.JLabel();
			ivjJLabel1.setName("JLabel1");
			ivjJLabel1.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabel1.setText("(HH:mm)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel1;
}

/**
 * Return the JLabel2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel2() {
	if (ivjJLabel2 == null) {
		try {
			ivjJLabel2 = new javax.swing.JLabel();
			ivjJLabel2.setName("JLabel2");
			ivjJLabel2.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabel2.setText("(HH:mm)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel2;
}

/**
 * Return the JLabelCurtailDuration property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCurtailDuration() {
	if (ivjJLabelCurtailDuration == null) {
		try {
			ivjJLabelCurtailDuration = new javax.swing.JLabel();
			ivjJLabelCurtailDuration.setName("JLabelCurtailDuration");
			ivjJLabelCurtailDuration.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelCurtailDuration.setText("Curtail Duration:");
			ivjJLabelCurtailDuration.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
			ivjJLabelCurtailDuration.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCurtailDuration;
}

/**
 * Return the JLabelDate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelCurtDate() {
	if (ivjJLabelCurtDate == null) {
		try {
			ivjJLabelCurtDate = new javax.swing.JLabel();
			ivjJLabelCurtDate.setName("JLabelCurtDate");
			ivjJLabelCurtDate.setText("Curtail:");
			ivjJLabelCurtDate.setMaximumSize(new java.awt.Dimension(29, 16));
			ivjJLabelCurtDate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelCurtDate.setMinimumSize(new java.awt.Dimension(29, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelCurtDate;
}

/**
 * Return the JLabelHour property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHour() {
	if (ivjJLabelHour == null) {
		try {
			ivjJLabelHour = new javax.swing.JLabel();
			ivjJLabelHour.setName("JLabelHour");
			ivjJLabelHour.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHour.setText("Hour");
			ivjJLabelHour.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHour;
}


/**
 * Return the JLabelHour1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHour1() {
	if (ivjJLabelHour1 == null) {
		try {
			ivjJLabelHour1 = new javax.swing.JLabel();
			ivjJLabelHour1.setName("JLabelHour1");
			ivjJLabelHour1.setText("1");
			ivjJLabelHour1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHour1;
}


/**
 * Return the JLabelHour2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHour2() {
	if (ivjJLabelHour2 == null) {
		try {
			ivjJLabelHour2 = new javax.swing.JLabel();
			ivjJLabelHour2.setName("JLabelHour2");
			ivjJLabelHour2.setText("2");
			ivjJLabelHour2.setEnabled(false);
			ivjJLabelHour2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHour2;
}


/**
 * Return the JLabelHour3 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHour3() {
	if (ivjJLabelHour3 == null) {
		try {
			ivjJLabelHour3 = new javax.swing.JLabel();
			ivjJLabelHour3.setName("JLabelHour3");
			ivjJLabelHour3.setText("3");
			ivjJLabelHour3.setEnabled(false);
			ivjJLabelHour3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHour3;
}


/**
 * Return the JLabelHour4 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHour4() {
	if (ivjJLabelHour4 == null) {
		try {
			ivjJLabelHour4 = new javax.swing.JLabel();
			ivjJLabelHour4.setName("JLabelHour4");
			ivjJLabelHour4.setText("4");
			ivjJLabelHour4.setEnabled(false);
			ivjJLabelHour4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHour4;
}


/**
 * Return the JLabelHours property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelHours() {
	if (ivjJLabelHours == null) {
		try {
			ivjJLabelHours = new javax.swing.JLabel();
			ivjJLabelHours.setName("JLabelHours");
			ivjJLabelHours.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelHours.setText("(Hours)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelHours;
}

/**
 * Return the JLabelKwhAvail property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelKwhAvail() {
	if (ivjJLabelKwhAvail == null) {
		try {
			ivjJLabelKwhAvail = new javax.swing.JLabel();
			ivjJLabelKwhAvail.setName("JLabelKwhAvail");
			ivjJLabelKwhAvail.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelKwhAvail.setText("Available");
			ivjJLabelKwhAvail.setMaximumSize(new java.awt.Dimension(52, 16));
			ivjJLabelKwhAvail.setMinimumSize(new java.awt.Dimension(52, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelKwhAvail;
}


/**
 * Return the JLabelKwhPrice property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelKwhPrice() {
	if (ivjJLabelKwhPrice == null) {
		try {
			ivjJLabelKwhPrice = new javax.swing.JLabel();
			ivjJLabelKwhPrice.setName("JLabelKwhPrice");
			ivjJLabelKwhPrice.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelKwhPrice.setText("$ Price");
			ivjJLabelKwhPrice.setMaximumSize(new java.awt.Dimension(41, 16));
			ivjJLabelKwhPrice.setMinimumSize(new java.awt.Dimension(41, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelKwhPrice;
}


/**
 * Return the JLabelNotifTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNotifTime() {
	if (ivjJLabelNotifTime == null) {
		try {
			ivjJLabelNotifTime = new javax.swing.JLabel();
			ivjJLabelNotifTime.setName("JLabelNotifTime");
			ivjJLabelNotifTime.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelNotifTime.setText("Date");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNotifTime;
}

/**
 * Return the JLabelNotifyDate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNotifyDate() {
	if (ivjJLabelNotifyDate == null) {
		try {
			ivjJLabelNotifyDate = new javax.swing.JLabel();
			ivjJLabelNotifyDate.setName("JLabelNotifyDate");
			ivjJLabelNotifyDate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelNotifyDate.setText("Notify:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNotifyDate;
}

/**
 * Return the JLabelOfferExpires property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelOfferExpires() {
	if (ivjJLabelOfferExpires == null) {
		try {
			ivjJLabelOfferExpires = new javax.swing.JLabel();
			ivjJLabelOfferExpires.setName("JLabelOfferExpires");
			ivjJLabelOfferExpires.setText("Offer Expires");
			ivjJLabelOfferExpires.setMaximumSize(new java.awt.Dimension(73, 16));
			ivjJLabelOfferExpires.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelOfferExpires.setMinimumSize(new java.awt.Dimension(73, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelOfferExpires;
}


/**
 * Return the JLabelOfferID property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelOfferID() {
	if (ivjJLabelOfferID == null) {
		try {
			ivjJLabelOfferID = new javax.swing.JLabel();
			ivjJLabelOfferID.setName("JLabelOfferID");
			ivjJLabelOfferID.setText("Offer ID:");
			ivjJLabelOfferID.setMaximumSize(new java.awt.Dimension(44, 16));
			ivjJLabelOfferID.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelOfferID.setMinimumSize(new java.awt.Dimension(44, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelOfferID;
}

/**
 * Return the JLabelOfferIDtext property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelOfferIDtext() {
	if (ivjJLabelOfferIDtext == null) {
		try {
			ivjJLabelOfferIDtext = new javax.swing.JLabel();
			ivjJLabelOfferIDtext.setName("JLabelOfferIDtext");
			ivjJLabelOfferIDtext.setText("offID");
			ivjJLabelOfferIDtext.setMaximumSize(new java.awt.Dimension(36, 19));
			ivjJLabelOfferIDtext.setFont(new java.awt.Font("sansserif", 1, 14));
			ivjJLabelOfferIDtext.setMinimumSize(new java.awt.Dimension(36, 19));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelOfferIDtext;
}

/**
 * Return the JLabelStartTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelStartTime() {
	if (ivjJLabelStartTime == null) {
		try {
			ivjJLabelStartTime = new javax.swing.JLabel();
			ivjJLabelStartTime.setName("JLabelStartTime");
			ivjJLabelStartTime.setText("Time");
			ivjJLabelStartTime.setMaximumSize(new java.awt.Dimension(59, 16));
			ivjJLabelStartTime.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelStartTime.setMinimumSize(new java.awt.Dimension(59, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelStartTime;
}

/**
 * Return the JLabelTextMessage property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelTextUserComment() {
	if (ivjJLabelTextUserComment == null) {
		try {
			ivjJLabelTextUserComment = new javax.swing.JLabel();
			ivjJLabelTextUserComment.setName("JLabelTextUserComment");
			ivjJLabelTextUserComment.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelTextUserComment.setText("User Comment:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelTextUserComment;
}

/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(getJPanel1FlowLayout());
			getJPanel1().add(getJButtonStart(), getJButtonStart().getName());
			getJPanel1().add(getJButtonCancel(), getJButtonCancel().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}

/**
 * Return the JPanel1FlowLayout property value.
 * @return java.awt.FlowLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.FlowLayout getJPanel1FlowLayout() {
	java.awt.FlowLayout ivjJPanel1FlowLayout = null;
	try {
		/* Create part */
		ivjJPanel1FlowLayout = new java.awt.FlowLayout();
		ivjJPanel1FlowLayout.setAlignment(java.awt.FlowLayout.RIGHT);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjJPanel1FlowLayout;
}


/**
 * Return the JPanelDate property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelDate() {
	if (ivjJPanelDate == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder1;
			ivjLocalBorder1 = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder1.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder1.setTitle("Date");
			ivjJPanelDate = new javax.swing.JPanel();
			ivjJPanelDate.setName("JPanelDate");
			ivjJPanelDate.setBorder(ivjLocalBorder1);
			ivjJPanelDate.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabelCurtDate = new java.awt.GridBagConstraints();
			constraintsJLabelCurtDate.gridx = 1; constraintsJLabelCurtDate.gridy = 3;
			constraintsJLabelCurtDate.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelCurtDate.ipadx = 23;
			constraintsJLabelCurtDate.ipady = 1;
			constraintsJLabelCurtDate.insets = new java.awt.Insets(7, 8, 7, 3);
			getJPanelDate().add(getJLabelCurtDate(), constraintsJLabelCurtDate);

			java.awt.GridBagConstraints constraintsJTextFieldCurtTime = new java.awt.GridBagConstraints();
			constraintsJTextFieldCurtTime.gridx = 3; constraintsJTextFieldCurtTime.gridy = 3;
			constraintsJTextFieldCurtTime.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldCurtTime.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldCurtTime.weightx = 1.0;
			constraintsJTextFieldCurtTime.ipadx = 83;
			constraintsJTextFieldCurtTime.ipady = 1;
			constraintsJTextFieldCurtTime.insets = new java.awt.Insets(5, 6, 5, 1);
			getJPanelDate().add(getJTextFieldCurtTime(), constraintsJTextFieldCurtTime);

			java.awt.GridBagConstraints constraintsJLabelStartTime = new java.awt.GridBagConstraints();
			constraintsJLabelStartTime.gridx = 3; constraintsJLabelStartTime.gridy = 1;
			constraintsJLabelStartTime.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelStartTime.ipadx = -8;
			constraintsJLabelStartTime.ipady = 1;
			constraintsJLabelStartTime.insets = new java.awt.Insets(2, 35, 1, 8);
			getJPanelDate().add(getJLabelStartTime(), constraintsJLabelStartTime);

			java.awt.GridBagConstraints constraintsJLabelNotifyDate = new java.awt.GridBagConstraints();
			constraintsJLabelNotifyDate.gridx = 1; constraintsJLabelNotifyDate.gridy = 2;
			constraintsJLabelNotifyDate.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelNotifyDate.ipadx = 19;
			constraintsJLabelNotifyDate.ipady = -2;
			constraintsJLabelNotifyDate.insets = new java.awt.Insets(6, 8, 9, 3);
			getJPanelDate().add(getJLabelNotifyDate(), constraintsJLabelNotifyDate);

			java.awt.GridBagConstraints constraintsJLabelNotifTime = new java.awt.GridBagConstraints();
			constraintsJLabelNotifTime.gridx = 2; constraintsJLabelNotifTime.gridy = 1;
			constraintsJLabelNotifTime.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelNotifTime.ipadx = 13;
			constraintsJLabelNotifTime.ipady = -2;
			constraintsJLabelNotifTime.insets = new java.awt.Insets(2, 48, 4, 68);
			getJPanelDate().add(getJLabelNotifTime(), constraintsJLabelNotifTime);

			java.awt.GridBagConstraints constraintsJTextFieldNotifTime = new java.awt.GridBagConstraints();
			constraintsJTextFieldNotifTime.gridx = 3; constraintsJTextFieldNotifTime.gridy = 2;
			constraintsJTextFieldNotifTime.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldNotifTime.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldNotifTime.weightx = 1.0;
			constraintsJTextFieldNotifTime.ipadx = 82;
			constraintsJTextFieldNotifTime.insets = new java.awt.Insets(3, 6, 6, 2);
			getJPanelDate().add(getJTextFieldNotifTime(), constraintsJTextFieldNotifTime);

			java.awt.GridBagConstraints constraintsJLabel1 = new java.awt.GridBagConstraints();
			constraintsJLabel1.gridx = 4; constraintsJLabel1.gridy = 3;
			constraintsJLabel1.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabel1.ipadx = 17;
			constraintsJLabel1.ipady = -2;
			constraintsJLabel1.insets = new java.awt.Insets(8, 2, 9, 31);
			getJPanelDate().add(getJLabel1(), constraintsJLabel1);

			java.awt.GridBagConstraints constraintsJLabel2 = new java.awt.GridBagConstraints();
			constraintsJLabel2.gridx = 4; constraintsJLabel2.gridy = 2;
			constraintsJLabel2.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabel2.ipadx = 17;
			constraintsJLabel2.ipady = -2;
			constraintsJLabel2.insets = new java.awt.Insets(6, 2, 9, 31);
			getJPanelDate().add(getJLabel2(), constraintsJLabel2);

			java.awt.GridBagConstraints constraintsJLabelCurtailDuration = new java.awt.GridBagConstraints();
			constraintsJLabelCurtailDuration.gridx = 2; constraintsJLabelCurtailDuration.gridy = 4;
			constraintsJLabelCurtailDuration.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelCurtailDuration.ipadx = 14;
			constraintsJLabelCurtailDuration.ipady = -2;
			constraintsJLabelCurtailDuration.insets = new java.awt.Insets(8, 48, 12, 10);
			getJPanelDate().add(getJLabelCurtailDuration(), constraintsJLabelCurtailDuration);

			java.awt.GridBagConstraints constraintsJCSpinFieldDuration = new java.awt.GridBagConstraints();
			constraintsJCSpinFieldDuration.gridx = 3; constraintsJCSpinFieldDuration.gridy = 4;
			constraintsJCSpinFieldDuration.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJCSpinFieldDuration.ipadx = 79;
			constraintsJCSpinFieldDuration.ipady = 19;
			constraintsJCSpinFieldDuration.insets = new java.awt.Insets(5, 6, 9, 8);
			getJPanelDate().add(getJCSpinFieldDuration(), constraintsJCSpinFieldDuration);

			java.awt.GridBagConstraints constraintsJLabelHours = new java.awt.GridBagConstraints();
			constraintsJLabelHours.gridx = 4; constraintsJLabelHours.gridy = 4;
			constraintsJLabelHours.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelHours.ipadx = 26;
			constraintsJLabelHours.ipady = -2;
			constraintsJLabelHours.insets = new java.awt.Insets(9, 2, 11, 31);
			getJPanelDate().add(getJLabelHours(), constraintsJLabelHours);

			java.awt.GridBagConstraints constraintsDateComboNotify = new java.awt.GridBagConstraints();
			constraintsDateComboNotify.gridx = 2; constraintsDateComboNotify.gridy = 2;
			constraintsDateComboNotify.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsDateComboNotify.anchor = java.awt.GridBagConstraints.WEST;
			constraintsDateComboNotify.weightx = 1.0;
			constraintsDateComboNotify.ipadx = 50;
			constraintsDateComboNotify.insets = new java.awt.Insets(2, 4, 4, 6);
			getJPanelDate().add(getDateComboNotify(), constraintsDateComboNotify);

			java.awt.GridBagConstraints constraintsDateComboCurtail = new java.awt.GridBagConstraints();
			constraintsDateComboCurtail.gridx = 2; constraintsDateComboCurtail.gridy = 3;
			constraintsDateComboCurtail.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsDateComboCurtail.anchor = java.awt.GridBagConstraints.WEST;
			constraintsDateComboCurtail.weightx = 1.0;
			constraintsDateComboCurtail.ipadx = 50;
			constraintsDateComboCurtail.insets = new java.awt.Insets(4, 4, 4, 6);
			getJPanelDate().add(getDateComboCurtail(), constraintsDateComboCurtail);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelDate;
}

/**
 * Return the JPanelOfferings property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelOfferings() {
	if (ivjJPanelOfferings == null) {
		try {
			ivjJPanelOfferings = new javax.swing.JPanel();
			ivjJPanelOfferings.setName("JPanelOfferings");
			ivjJPanelOfferings.setPreferredSize(new java.awt.Dimension(353, 370));
			ivjJPanelOfferings.setLayout(new java.awt.GridBagLayout());
			ivjJPanelOfferings.setLocation(0, 0);
			ivjJPanelOfferings.setMaximumSize(new java.awt.Dimension(353, 370));
			ivjJPanelOfferings.setMinimumSize(new java.awt.Dimension(353, 370));

			java.awt.GridBagConstraints constraintsJLabelOfferExpires = new java.awt.GridBagConstraints();
			constraintsJLabelOfferExpires.gridx = 4; constraintsJLabelOfferExpires.gridy = 1;
			constraintsJLabelOfferExpires.ipadx = 4;
			constraintsJLabelOfferExpires.ipady = 1;
			constraintsJLabelOfferExpires.insets = new java.awt.Insets(2, 10, 2, 62);
			getJPanelOfferings().add(getJLabelOfferExpires(), constraintsJLabelOfferExpires);

			java.awt.GridBagConstraints constraintsJTextFieldExpires1 = new java.awt.GridBagConstraints();
			constraintsJTextFieldExpires1.gridx = 4; constraintsJTextFieldExpires1.gridy = 2;
			constraintsJTextFieldExpires1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldExpires1.weightx = 1.0;
			constraintsJTextFieldExpires1.ipadx = 126;
			constraintsJTextFieldExpires1.ipady = 1;
			constraintsJTextFieldExpires1.insets = new java.awt.Insets(3, 10, 4, 9);
			getJPanelOfferings().add(getJTextFieldExpires1(), constraintsJTextFieldExpires1);

			java.awt.GridBagConstraints constraintsJLabelHour = new java.awt.GridBagConstraints();
			constraintsJLabelHour.gridx = 1; constraintsJLabelHour.gridy = 1;
			constraintsJLabelHour.ipadx = 18;
			constraintsJLabelHour.ipady = -2;
			constraintsJLabelHour.insets = new java.awt.Insets(5, 9, 2, 13);
			getJPanelOfferings().add(getJLabelHour(), constraintsJLabelHour);

			java.awt.GridBagConstraints constraintsJLabelKwhPrice = new java.awt.GridBagConstraints();
			constraintsJLabelKwhPrice.gridx = 2; constraintsJLabelKwhPrice.gridy = 1;
			constraintsJLabelKwhPrice.ipadx = 7;
			constraintsJLabelKwhPrice.insets = new java.awt.Insets(3, 13, 2, 28);
			getJPanelOfferings().add(getJLabelKwhPrice(), constraintsJLabelKwhPrice);

			java.awt.GridBagConstraints constraintsJLabelKwhAvail = new java.awt.GridBagConstraints();
			constraintsJLabelKwhAvail.gridx = 3; constraintsJLabelKwhAvail.gridy = 1;
			constraintsJLabelKwhAvail.ipadx = 6;
			constraintsJLabelKwhAvail.insets = new java.awt.Insets(3, 11, 2, 26);
			getJPanelOfferings().add(getJLabelKwhAvail(), constraintsJLabelKwhAvail);

			java.awt.GridBagConstraints constraintsJTextFieldAvail1 = new java.awt.GridBagConstraints();
			constraintsJTextFieldAvail1.gridx = 3; constraintsJTextFieldAvail1.gridy = 2;
			constraintsJTextFieldAvail1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldAvail1.weightx = 1.0;
			constraintsJTextFieldAvail1.ipadx = 70;
			constraintsJTextFieldAvail1.insets = new java.awt.Insets(3, 11, 5, 10);
			getJPanelOfferings().add(getJTextFieldAvail1(), constraintsJTextFieldAvail1);

			java.awt.GridBagConstraints constraintsJTextFieldPrice1 = new java.awt.GridBagConstraints();
			constraintsJTextFieldPrice1.gridx = 2; constraintsJTextFieldPrice1.gridy = 2;
			constraintsJTextFieldPrice1.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldPrice1.weightx = 1.0;
			constraintsJTextFieldPrice1.ipadx = 61;
			constraintsJTextFieldPrice1.insets = new java.awt.Insets(3, 13, 5, 11);
			getJPanelOfferings().add(getJTextFieldPrice1(), constraintsJTextFieldPrice1);

			java.awt.GridBagConstraints constraintsJLabelHour1 = new java.awt.GridBagConstraints();
			constraintsJLabelHour1.gridx = 1; constraintsJLabelHour1.gridy = 2;
			constraintsJLabelHour1.ipadx = 38;
			constraintsJLabelHour1.insets = new java.awt.Insets(6, 9, 8, 13);
			getJPanelOfferings().add(getJLabelHour1(), constraintsJLabelHour1);

			java.awt.GridBagConstraints constraintsJLabelHour2 = new java.awt.GridBagConstraints();
			constraintsJLabelHour2.gridx = 1; constraintsJLabelHour2.gridy = 3;
			constraintsJLabelHour2.ipadx = 38;
			constraintsJLabelHour2.insets = new java.awt.Insets(8, 9, 7, 13);
			getJPanelOfferings().add(getJLabelHour2(), constraintsJLabelHour2);

			java.awt.GridBagConstraints constraintsJTextFieldPrice2 = new java.awt.GridBagConstraints();
			constraintsJTextFieldPrice2.gridx = 2; constraintsJTextFieldPrice2.gridy = 3;
			constraintsJTextFieldPrice2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldPrice2.weightx = 1.0;
			constraintsJTextFieldPrice2.ipadx = 61;
			constraintsJTextFieldPrice2.insets = new java.awt.Insets(5, 13, 4, 11);
			getJPanelOfferings().add(getJTextFieldPrice2(), constraintsJTextFieldPrice2);

			java.awt.GridBagConstraints constraintsJTextFieldAvail2 = new java.awt.GridBagConstraints();
			constraintsJTextFieldAvail2.gridx = 3; constraintsJTextFieldAvail2.gridy = 3;
			constraintsJTextFieldAvail2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldAvail2.weightx = 1.0;
			constraintsJTextFieldAvail2.ipadx = 70;
			constraintsJTextFieldAvail2.insets = new java.awt.Insets(5, 11, 4, 10);
			getJPanelOfferings().add(getJTextFieldAvail2(), constraintsJTextFieldAvail2);

			java.awt.GridBagConstraints constraintsJTextFieldExpires2 = new java.awt.GridBagConstraints();
			constraintsJTextFieldExpires2.gridx = 4; constraintsJTextFieldExpires2.gridy = 3;
			constraintsJTextFieldExpires2.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldExpires2.weightx = 1.0;
			constraintsJTextFieldExpires2.ipadx = 126;
			constraintsJTextFieldExpires2.insets = new java.awt.Insets(5, 10, 4, 9);
			getJPanelOfferings().add(getJTextFieldExpires2(), constraintsJTextFieldExpires2);

			java.awt.GridBagConstraints constraintsJTextFieldPrice3 = new java.awt.GridBagConstraints();
			constraintsJTextFieldPrice3.gridx = 2; constraintsJTextFieldPrice3.gridy = 4;
			constraintsJTextFieldPrice3.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldPrice3.weightx = 1.0;
			constraintsJTextFieldPrice3.ipadx = 61;
			constraintsJTextFieldPrice3.insets = new java.awt.Insets(4, 13, 2, 11);
			getJPanelOfferings().add(getJTextFieldPrice3(), constraintsJTextFieldPrice3);

			java.awt.GridBagConstraints constraintsJTextFieldAvail3 = new java.awt.GridBagConstraints();
			constraintsJTextFieldAvail3.gridx = 3; constraintsJTextFieldAvail3.gridy = 4;
			constraintsJTextFieldAvail3.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldAvail3.weightx = 1.0;
			constraintsJTextFieldAvail3.ipadx = 70;
			constraintsJTextFieldAvail3.insets = new java.awt.Insets(4, 11, 2, 10);
			getJPanelOfferings().add(getJTextFieldAvail3(), constraintsJTextFieldAvail3);

			java.awt.GridBagConstraints constraintsJTextFieldExpires3 = new java.awt.GridBagConstraints();
			constraintsJTextFieldExpires3.gridx = 4; constraintsJTextFieldExpires3.gridy = 4;
			constraintsJTextFieldExpires3.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldExpires3.weightx = 1.0;
			constraintsJTextFieldExpires3.ipadx = 126;
			constraintsJTextFieldExpires3.insets = new java.awt.Insets(4, 10, 2, 9);
			getJPanelOfferings().add(getJTextFieldExpires3(), constraintsJTextFieldExpires3);

			java.awt.GridBagConstraints constraintsJLabelHour3 = new java.awt.GridBagConstraints();
			constraintsJLabelHour3.gridx = 1; constraintsJLabelHour3.gridy = 4;
			constraintsJLabelHour3.ipadx = 38;
			constraintsJLabelHour3.insets = new java.awt.Insets(7, 9, 5, 13);
			getJPanelOfferings().add(getJLabelHour3(), constraintsJLabelHour3);

			java.awt.GridBagConstraints constraintsJLabelHour4 = new java.awt.GridBagConstraints();
			constraintsJLabelHour4.gridx = 1; constraintsJLabelHour4.gridy = 5;
			constraintsJLabelHour4.ipadx = 38;
			constraintsJLabelHour4.insets = new java.awt.Insets(5, 9, 247, 13);
			getJPanelOfferings().add(getJLabelHour4(), constraintsJLabelHour4);

			java.awt.GridBagConstraints constraintsJTextFieldPrice4 = new java.awt.GridBagConstraints();
			constraintsJTextFieldPrice4.gridx = 2; constraintsJTextFieldPrice4.gridy = 5;
			constraintsJTextFieldPrice4.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldPrice4.weightx = 1.0;
			constraintsJTextFieldPrice4.ipadx = 61;
			constraintsJTextFieldPrice4.insets = new java.awt.Insets(2, 13, 244, 11);
			getJPanelOfferings().add(getJTextFieldPrice4(), constraintsJTextFieldPrice4);

			java.awt.GridBagConstraints constraintsJTextFieldAvail4 = new java.awt.GridBagConstraints();
			constraintsJTextFieldAvail4.gridx = 3; constraintsJTextFieldAvail4.gridy = 5;
			constraintsJTextFieldAvail4.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldAvail4.weightx = 1.0;
			constraintsJTextFieldAvail4.ipadx = 70;
			constraintsJTextFieldAvail4.insets = new java.awt.Insets(2, 11, 244, 10);
			getJPanelOfferings().add(getJTextFieldAvail4(), constraintsJTextFieldAvail4);

			java.awt.GridBagConstraints constraintsJTextFieldExpires4 = new java.awt.GridBagConstraints();
			constraintsJTextFieldExpires4.gridx = 4; constraintsJTextFieldExpires4.gridy = 5;
			constraintsJTextFieldExpires4.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldExpires4.weightx = 1.0;
			constraintsJTextFieldExpires4.ipadx = 126;
			constraintsJTextFieldExpires4.insets = new java.awt.Insets(2, 10, 244, 9);
			getJPanelOfferings().add(getJTextFieldExpires4(), constraintsJTextFieldExpires4);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelOfferings;
}


/**
 * Return the JScrollPaneOfferings property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getJScrollPaneOfferings() {
	if (ivjJScrollPaneOfferings == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder.setTitle("Offers");
			ivjJScrollPaneOfferings = new javax.swing.JScrollPane();
			ivjJScrollPaneOfferings.setName("JScrollPaneOfferings");
			ivjJScrollPaneOfferings.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
			ivjJScrollPaneOfferings.setBorder(ivjLocalBorder);
			getJScrollPaneOfferings().setViewportView(getJPanelOfferings());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJScrollPaneOfferings;
}

/**
 * Return the JTextFieldKwhAvail property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldAvail1() {
	if (ivjJTextFieldAvail1 == null) {
		try {
			ivjJTextFieldAvail1 = new javax.swing.JTextField();
			ivjJTextFieldAvail1.setName("JTextFieldAvail1");
			ivjJTextFieldAvail1.setHighlighter(new javax.swing.plaf.basic.BasicTextUI.BasicHighlighter());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldAvail1;
}


/**
 * Return the JTextFieldAvail2 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldAvail2() {
	if (ivjJTextFieldAvail2 == null) {
		try {
			ivjJTextFieldAvail2 = new javax.swing.JTextField();
			ivjJTextFieldAvail2.setName("JTextFieldAvail2");
			ivjJTextFieldAvail2.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldAvail2;
}


/**
 * Return the JTextFieldAvail3 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldAvail3() {
	if (ivjJTextFieldAvail3 == null) {
		try {
			ivjJTextFieldAvail3 = new javax.swing.JTextField();
			ivjJTextFieldAvail3.setName("JTextFieldAvail3");
			ivjJTextFieldAvail3.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldAvail3;
}


/**
 * Return the JTextFieldAvail4 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldAvail4() {
	if (ivjJTextFieldAvail4 == null) {
		try {
			ivjJTextFieldAvail4 = new javax.swing.JTextField();
			ivjJTextFieldAvail4.setName("JTextFieldAvail4");
			ivjJTextFieldAvail4.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldAvail4;
}


/**
 * Return the JTextFieldCurtTime property value.
 * @return com.cannontech.common.gui.util.JTextFieldTimeEntry
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.JTextFieldTimeEntry getJTextFieldCurtTime() {
	if (ivjJTextFieldCurtTime == null) {
		try {
			ivjJTextFieldCurtTime = new com.cannontech.common.gui.util.JTextFieldTimeEntry();
			ivjJTextFieldCurtTime.setName("JTextFieldCurtTime");
			ivjJTextFieldCurtTime.setHighlighter(new javax.swing.plaf.basic.BasicTextUI.BasicHighlighter());
			// user code begin {1}

			java.util.GregorianCalendar cal = new java.util.GregorianCalendar();
			cal.setTime( new java.util.Date() );

			StringBuffer hour = new StringBuffer( String.valueOf(cal.get( java.util.GregorianCalendar.HOUR_OF_DAY)+4) );
			if( hour.length() < 2 )
				hour.insert(0, "0" );
				
			StringBuffer minute = new StringBuffer( String.valueOf(cal.get(java.util.GregorianCalendar.MINUTE)) );
			if( minute.length() < 2 )
				minute.insert(0, "0" );
				
			if( cal.get( java.util.GregorianCalendar.HOUR_OF_DAY) > 20 )
				hour = new StringBuffer("23");
				
			ivjJTextFieldCurtTime.setText( hour + ":" + minute );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldCurtTime;
}

/**
 * Return the JTextFieldOfferExpires property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldExpires1() {
	if (ivjJTextFieldExpires1 == null) {
		try {
			ivjJTextFieldExpires1 = new javax.swing.JTextField();
			ivjJTextFieldExpires1.setName("JTextFieldExpires1");
			ivjJTextFieldExpires1.setHighlighter(new javax.swing.plaf.basic.BasicTextUI.BasicHighlighter());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldExpires1;
}


/**
 * Return the JTextFieldExpires2 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldExpires2() {
	if (ivjJTextFieldExpires2 == null) {
		try {
			ivjJTextFieldExpires2 = new javax.swing.JTextField();
			ivjJTextFieldExpires2.setName("JTextFieldExpires2");
			ivjJTextFieldExpires2.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldExpires2;
}


/**
 * Return the JTextFieldExpires3 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldExpires3() {
	if (ivjJTextFieldExpires3 == null) {
		try {
			ivjJTextFieldExpires3 = new javax.swing.JTextField();
			ivjJTextFieldExpires3.setName("JTextFieldExpires3");
			ivjJTextFieldExpires3.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldExpires3;
}


/**
 * Return the JTextFieldExpires14 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldExpires4() {
	if (ivjJTextFieldExpires4 == null) {
		try {
			ivjJTextFieldExpires4 = new javax.swing.JTextField();
			ivjJTextFieldExpires4.setName("JTextFieldExpires4");
			ivjJTextFieldExpires4.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldExpires4;
}


/**
 * Return the JTextField1 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldMessage() {
	if (ivjJTextFieldMessage == null) {
		try {
			ivjJTextFieldMessage = new javax.swing.JTextField();
			ivjJTextFieldMessage.setName("JTextFieldMessage");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldMessage;
}

/**
 * Return the JTextFieldNotifTime property value.
 * @return com.cannontech.common.gui.util.JTextFieldTimeEntry
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.JTextFieldTimeEntry getJTextFieldNotifTime() {
	if (ivjJTextFieldNotifTime == null) {
		try {
			ivjJTextFieldNotifTime = new com.cannontech.common.gui.util.JTextFieldTimeEntry();
			ivjJTextFieldNotifTime.setName("JTextFieldNotifTime");
			// user code begin {1}

			ivjJTextFieldNotifTime.setTimeText( new java.util.Date() );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldNotifTime;
}

/**
 * Return the JTextFieldKwhPrice property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldPrice1() {
	if (ivjJTextFieldPrice1 == null) {
		try {
			ivjJTextFieldPrice1 = new javax.swing.JTextField();
			ivjJTextFieldPrice1.setName("JTextFieldPrice1");
			ivjJTextFieldPrice1.setHighlighter(new javax.swing.plaf.basic.BasicTextUI.BasicHighlighter());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldPrice1;
}


/**
 * Return the JTextFieldPrice2 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldPrice2() {
	if (ivjJTextFieldPrice2 == null) {
		try {
			ivjJTextFieldPrice2 = new javax.swing.JTextField();
			ivjJTextFieldPrice2.setName("JTextFieldPrice2");
			ivjJTextFieldPrice2.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldPrice2;
}


/**
 * Return the JTextFieldPrice3 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldPrice3() {
	if (ivjJTextFieldPrice3 == null) {
		try {
			ivjJTextFieldPrice3 = new javax.swing.JTextField();
			ivjJTextFieldPrice3.setName("JTextFieldPrice3");
			ivjJTextFieldPrice3.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldPrice3;
}


/**
 * Return the JTextFieldPrice4 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldPrice4() {
	if (ivjJTextFieldPrice4 == null) {
		try {
			ivjJTextFieldPrice4 = new javax.swing.JTextField();
			ivjJTextFieldPrice4.setName("JTextFieldPrice4");
			ivjJTextFieldPrice4.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldPrice4;
}


/**
 * Insert the method's description here.
 * Creation date: (4/9/2001 3:09:53 PM)
 * @return int
 */
private int getTotalSeconds( String string ) 
{
	if( string == null )
		return 0;
		
	int hour = Integer.parseInt(string.substring( 0, 2 )) * 3600;
	int minute = Integer.parseInt(string.substring( 3, 5 )) * 60;
	
	return hour + minute;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}


/**
 * Insert the method's description here.
 * Creation date: (1/31/2001 3:32:14 PM)
 */
private void initArrays() 
{
	hourLabels[0] = getJLabelHour1();
	hourLabels[1] = getJLabelHour2();
	hourLabels[2] = getJLabelHour3();
	hourLabels[3] = getJLabelHour4();

	availableTextFields[0] = getJTextFieldAvail1();
	availableTextFields[1] = getJTextFieldAvail2();
	availableTextFields[2] = getJTextFieldAvail3();
	availableTextFields[3] = getJTextFieldAvail4();
		
	priceTextFields[0] = getJTextFieldPrice1();
	priceTextFields[1] = getJTextFieldPrice2();
	priceTextFields[2] = getJTextFieldPrice3();
	priceTextFields[3] = getJTextFieldPrice4();

	expiresTextFields[0] = getJTextFieldExpires1();
	expiresTextFields[1] = getJTextFieldExpires2();
	expiresTextFields[2] = getJTextFieldExpires3();
	expiresTextFields[3] = getJTextFieldExpires4();	
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}

	
	// user code end
	getJButtonCancel().addActionListener(this);
	getJButtonStart().addActionListener(this);
}

/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("CurtailmentEntryPanel");
		setBounds(new java.awt.Rectangle(0, 0, 411, 201));
		setLayout(new java.awt.GridBagLayout());
		setSize(447, 365);
		setMinimumSize(new java.awt.Dimension(411, 201));

		java.awt.GridBagConstraints constraintsJLabelOfferID = new java.awt.GridBagConstraints();
		constraintsJLabelOfferID.gridx = 1; constraintsJLabelOfferID.gridy = 1;
		constraintsJLabelOfferID.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJLabelOfferID.ipadx = 33;
		constraintsJLabelOfferID.ipady = 1;
		constraintsJLabelOfferID.insets = new java.awt.Insets(7, 11, 4, 20);
		add(getJLabelOfferID(), constraintsJLabelOfferID);

		java.awt.GridBagConstraints constraintsJLabelOfferIDtext = new java.awt.GridBagConstraints();
		constraintsJLabelOfferIDtext.gridx = 2; constraintsJLabelOfferIDtext.gridy = 1;
		constraintsJLabelOfferIDtext.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJLabelOfferIDtext.ipadx = 74;
		constraintsJLabelOfferIDtext.ipady = 3;
		constraintsJLabelOfferIDtext.insets = new java.awt.Insets(4, 2, 2, 227);
		add(getJLabelOfferIDtext(), constraintsJLabelOfferIDtext);

		java.awt.GridBagConstraints constraintsJLabelTextUserComment = new java.awt.GridBagConstraints();
		constraintsJLabelTextUserComment.gridx = 1; constraintsJLabelTextUserComment.gridy = 3;
		constraintsJLabelTextUserComment.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJLabelTextUserComment.ipadx = 9;
		constraintsJLabelTextUserComment.ipady = 1;
		constraintsJLabelTextUserComment.insets = new java.awt.Insets(6, 11, 5, 0);
		add(getJLabelTextUserComment(), constraintsJLabelTextUserComment);

		java.awt.GridBagConstraints constraintsJTextFieldMessage = new java.awt.GridBagConstraints();
		constraintsJTextFieldMessage.gridx = 2; constraintsJTextFieldMessage.gridy = 3;
		constraintsJTextFieldMessage.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJTextFieldMessage.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJTextFieldMessage.weightx = 1.0;
		constraintsJTextFieldMessage.ipadx = 324;
		constraintsJTextFieldMessage.insets = new java.awt.Insets(4, 1, 4, 10);
		add(getJTextFieldMessage(), constraintsJTextFieldMessage);

		java.awt.GridBagConstraints constraintsJScrollPaneOfferings = new java.awt.GridBagConstraints();
		constraintsJScrollPaneOfferings.gridx = 1; constraintsJScrollPaneOfferings.gridy = 4;
		constraintsJScrollPaneOfferings.gridwidth = 2;
		constraintsJScrollPaneOfferings.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJScrollPaneOfferings.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJScrollPaneOfferings.weightx = 1.0;
		constraintsJScrollPaneOfferings.weighty = 1.0;
		constraintsJScrollPaneOfferings.ipadx = 396;
		constraintsJScrollPaneOfferings.ipady = 52;
		constraintsJScrollPaneOfferings.insets = new java.awt.Insets(5, 11, 5, 11);
		add(getJScrollPaneOfferings(), constraintsJScrollPaneOfferings);

		java.awt.GridBagConstraints constraintsJPanelDate = new java.awt.GridBagConstraints();
		constraintsJPanelDate.gridx = 1; constraintsJPanelDate.gridy = 2;
		constraintsJPanelDate.gridwidth = 2;
		constraintsJPanelDate.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelDate.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJPanelDate.weightx = 1.0;
		constraintsJPanelDate.weighty = 1.0;
		constraintsJPanelDate.ipadx = -4;
		constraintsJPanelDate.ipady = -17;
		constraintsJPanelDate.insets = new java.awt.Insets(2, 11, 4, 11);
		add(getJPanelDate(), constraintsJPanelDate);

		java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
		constraintsJPanel1.gridx = 2; constraintsJPanel1.gridy = 5;
		constraintsJPanel1.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanel1.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJPanel1.weightx = 1.0;
		constraintsJPanel1.weighty = 1.0;
		constraintsJPanel1.ipadx = 7;
		constraintsJPanel1.ipady = 14;
		constraintsJPanel1.insets = new java.awt.Insets(5, 31, 13, 140);
		add(getJPanel1(), constraintsJPanel1);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}

	initArrays();
	
	getJLabelOfferID().setVisible(false);
	getJLabelOfferIDtext().setVisible(false);
	getJScrollPaneOfferings().setVisible(false);
	
	// user code end
}

/**
 * Insert the method's description here.
 * Creation date: (4/10/2001 9:55:42 AM)
 * @return boolean
 */
private boolean isInputValid() 
{
	if( getJTextFieldCurtTime().getText() == null || getJTextFieldCurtTime().getText().length() <= 0 )
		return false;

	
	if( getJTextFieldNotifTime().getText() == null || getJTextFieldNotifTime().getText().length() <= 0 )
		return false;

	return true;
}


/**
 * Comment
 */
public void jButtonCancel_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	System.out.println("THE CANCEL BUTTON DOES NOTHING!!! (please override me!!)");
	
	return;
}


/**
 * Comment
 */
public void jButtonStart_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	if( isInputValid() )
	{
		//get the date for the start of curtailement
		java.util.GregorianCalendar startCalendar = new java.util.GregorianCalendar();
		startCalendar.setTime( getDateComboCurtail().getSelectedDate() );
			
		startCalendar.set(java.util.Calendar.HOUR_OF_DAY, Integer.parseInt(getJTextFieldCurtTime().getText().substring(0,2)) );
		startCalendar.set(java.util.Calendar.MINUTE, Integer.parseInt(getJTextFieldCurtTime().getText().substring(3,5)) );
		startCalendar.set(java.util.Calendar.SECOND,0);
		startCalendar.set(java.util.Calendar.MILLISECOND,0);

		//get the date for the start of the notification
		java.util.GregorianCalendar notifyCalendar = new java.util.GregorianCalendar();
		notifyCalendar.setTime( getDateComboNotify().getSelectedDate() );
		

		notifyCalendar.set(java.util.Calendar.HOUR_OF_DAY, Integer.parseInt(getJTextFieldNotifTime().getText().substring(0,2)) );
		notifyCalendar.set(java.util.Calendar.MINUTE, Integer.parseInt(getJTextFieldNotifTime().getText().substring(3,5)) );
		notifyCalendar.set(java.util.Calendar.SECOND,0);
		notifyCalendar.set(java.util.Calendar.MILLISECOND,0);

		//get the date for the stop of curtailment
		java.util.GregorianCalendar stopCalendar = new java.util.GregorianCalendar();
		stopCalendar.setTime(new java.util.Date( startCalendar.getTime().getTime() + (((Number)getJCSpinFieldDuration().getValue()).longValue() * 3600000L) ) );//3600000L is the amount of milliseconds in an hour!!
		stopCalendar.set(java.util.Calendar.SECOND,0);
		stopCalendar.set(java.util.Calendar.MILLISECOND,0);

		//get the total milliseconds for our Notif time
		//check the validity of the two times
		if( ((notifyCalendar.getTime().getTime()) + (getCurtailProgram().getMinNotifyTime() * 1000)) > startCalendar.getTime().getTime() )
		{
			javax.swing.JOptionPane.showConfirmDialog( this, "The notify date/time plus the MinNotifyTime MUST \nbe less than the curtail date/time, try again.", "Incorrect Entry", javax.swing.JOptionPane.CLOSED_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE );
			return;
		}


		String msg = null;
		// build up our message below
		if( getJTextFieldMessage().getText() != null && getJTextFieldMessage().getText().length() > 0 )
			msg = getJTextFieldMessage().getText();
		else
			msg = com.cannontech.common.util.CtiUtilities.STRING_NONE;


		//create a new message and send it
		com.cannontech.loadcontrol.LoadControlClientConnection.getInstance().write( 
				getCurtailProgram().createScheduledStartMsg(
					startCalendar.getTime(), 
					stopCalendar.getTime(), 
					0, 
					notifyCalendar.getTime(), 
					msg, ManualControlRequestMessage.CONSTRAINTS_FLAG_USE) );

		
		//close the Dialog
		jButtonCancel_ActionPerformed(actionEvent);
	}
	else
		javax.swing.JOptionPane.showConfirmDialog( this, "Your data is not formatted properly, try again.", "Incorrect Data Input", javax.swing.JOptionPane.CLOSED_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE );

	
	return;
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		CurtailmentEntryPanel aCurtailmentEntryPanel;
		aCurtailmentEntryPanel = new CurtailmentEntryPanel();
		frame.setContentPane(aCurtailmentEntryPanel);
		frame.setSize(aCurtailmentEntryPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Insert the method's description here.
 * Creation date: (4/9/2001 6:48:08 PM)
 * @param newCurtailProgram com.cannontech.loadcontrol.data.LMProgramCurtailment
 */
protected void setCurtailProgram(com.cannontech.messaging.message.loadcontrol.data.ProgramCurtailment newCurtailProgram) 
{
	curtailProgram = newCurtailProgram;

	if( curtailProgram != null )
	{
		int notifMinutes = curtailProgram.getMinNotifyTime() / 60;
		
		java.util.GregorianCalendar cal = new java.util.GregorianCalendar();
		cal.setTime( new java.util.Date() );
		cal.set( cal.MINUTE, cal.get(cal.MINUTE) + notifMinutes );

		getJTextFieldCurtTime().setTimeText( cal.getTime() );
	}
		
}
}