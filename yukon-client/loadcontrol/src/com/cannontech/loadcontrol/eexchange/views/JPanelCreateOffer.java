package com.cannontech.loadcontrol.eexchange.views;
/**
 * Insert the type's description here.
 * Creation date: (8/2/2001 11:43:30 AM)
 * @author: 
 */
import com.cannontech.loadcontrol.data.LMProgramEnergyExchange;

public class JPanelCreateOffer extends javax.swing.JPanel implements java.awt.event.ActionListener {
	private com.cannontech.loadcontrol.eexchange.datamodels.OfferRowData offerData = null;
	public static final int MODE_CREATE = 0;
	public static final int MODE_REVISE = 1;
	private int mode = MODE_CREATE;
	//this ArrayList contains Strings that represent a ControlAreaName.
	//  It is parrallel to the JComboBox. So JComboBox.getItem(0) will
	//  return a LMPRogramEnergyExchange and ownerAreaStrings.get(0) will
	//  contain that LMPRogramEnergyExchange's ControlArea's name.
	private java.util.ArrayList ownerAreaStrings = null;
	private boolean editable = true;
	private LMProgramEnergyExchange[] eExchangePrgs = null;
	private javax.swing.JComboBox ivjJComboBoxProgram = null;
	private javax.swing.JLabel ivjJLabel1 = null;
	private javax.swing.JLabel ivjJLabel2 = null;
	private javax.swing.JLabel ivjJLabelNotifTime = null;
	private javax.swing.JLabel ivjJLabelNotifyDate = null;
	private javax.swing.JLabel ivjJLabelProgram = null;
	private javax.swing.JLabel ivjJLabelStartTime = null;
	private javax.swing.JPanel ivjJPanelDate = null;
	private com.cannontech.common.gui.util.JTextFieldTimeEntry ivjJTextFieldNotifTime = null;
	private javax.swing.JLabel ivjJLabelExpireDate = null;
	private com.cannontech.common.gui.util.JTextFieldTimeEntry ivjJTextFieldExpireTime = null;
	private javax.swing.JButton ivjJButtonCancel = null;
	private javax.swing.JButton ivjJButtonConfirm = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private java.awt.FlowLayout ivjJPanel1FlowLayout = null;
	private JPanelHourOffer ivjJPanelHourOffer = null;
	private javax.swing.JLabel ivjJLabelOfferDate = null;
	private javax.swing.JLabel ivjJLabelArea = null;
	private javax.swing.JTextField ivjJTextFieldArea = null;
	private com.cannontech.common.gui.util.DateComboBox ivjDateComboDay = null;
	private com.cannontech.common.gui.util.DateComboBox ivjDateComboExpire = null;
	private com.cannontech.common.gui.util.DateComboBox ivjDateComboNotify = null;

/**
 * JPanelCreateOffer constructor comment.
 */
public JPanelCreateOffer() {
	super();
	initialize();
}


/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJButtonConfirm()) 
		connEtoC1(e);
	if (e.getSource() == getJButtonCancel()) 
		connEtoC2(e);
	if (e.getSource() == getJComboBoxProgram()) 
		connEtoC3(e);
	// user code begin {2}
	// user code end
}


/**
 * connEtoC1:  (JButtonConfirm.action.actionPerformed(java.awt.event.ActionEvent) --> JPanelCreateOffer.jButtonConfirm_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonConfirm_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC2:  (JButtonCancel.action.actionPerformed(java.awt.event.ActionEvent) --> JPanelCreateOffer.jButtonCancel_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jButtonCancel_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * connEtoC3:  (JComboBoxProgram.action.actionPerformed(java.awt.event.ActionEvent) --> JPanelCreateOffer.jComboBoxProgram_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.jComboBoxProgram_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}


/**
 * Insert the method's description here.
 * Creation date: (8/6/2001 9:39:53 AM)
 */
//Please override me if you want me to do something when my owner
//    frame/dialog is closed!!!
public void exit() {}


/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GE0F18FADGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E14DFC8FF8D45515B85DD2FF6916DF0BAD6DE29777C3457E681A4FE5157DEDDA29CBDB7A9537D430C2E195B58ACA34D152020A0865A519E192A07FA77FA0E800G81C27EC0209882A490A0E05494A2049A168C1917E4F4B2B34EBC48A4A06CB9775EF35F1B494CA4C169166FBB3CF74F39675CF36FBD775CF34F3B93457A4EF8F3E212D5D1924D0A787727C4C531F7AACA566632A789D777E81BC5B17C5B88
	10257CF23B891E4DC01B316702A5D35979E18A146DD00EA93DE04907779CE56E1A463F40CB18F60A01B67B51BB1AA237F375B235E3E16572343570CC8768865CA800F9G194A713482011F8465F4710E101824A8E3E7E21D1F9CAEB0600BE672FACEF80EG281D05F5ECE9C5029E8BB82C338CE06DACDE37841E29CC3B2F556C97755AEE9F2FAC7D4FCDC9E95816C1BE41C841BBD1BC0B15FFE683112C2C4ABE824F5A66CF3B8EF538FB4ABBECAE175B25299D5D65CE374D5E816FDE3733DCD57D9D5DB6D717DAFE
	4521767AEAEACEB55BDC2A7328D735E96A071D1D2AD7D18A9EC35D979CCEE1F2C1F7E8EB8243FDDC076355866F9A402847C87F4752EA05FEE3BE9D2F445E139BD67F3847385EEBFF236BBF3DF231F94AEFD07E5DECBE102F894AA38138AEAF2511AE4A6324CB74D92C3B9F4A4DG5D926FBB077891D09E8BB069F1527160B65231756A3F40B8AECC4E882363744739EE890F6BBA56EEDEECAEE4B6E36945F9AF1B8D6D82588122GA682CC87D84FEC75E717F740337E12F6545D5363F655FBBCC71CF66F7BEE3B6A
	04771A9A20885CE935436D35AB8A37473843E5A174A1081D9DE80B883CEF6794321F6853BFD0349B4FA71BC374ED721C122425C2C64A9C3DEFF5F3F05CE63239AD05F764C3FDB87EC9069FE940733932B1BC164781CD79AD0DF3EBBA6952E47A3E12D9F5A24992C21731BF2BCD327F166BF06D373AAEFC0C5F706398CF847CB40079GCB812CF35BAC55F3E90C57DE59B358981F847B773AEC4EB317AFF9ECDE6D48E507538E864E47FAE2DA24318E851C6F7F8F1B0F0F4B44BD46B91A7F60711063B2FF624E2466
	39FCBC3A676A63425BDE9C366D283983EDA3DD4EE1B1DB93636672B9CC16789D8C9FED407339FD002DADD686DA713CB68B2F3F08559FB9AF58C616F0797302ED246F9C5948E420957CD71B054F6FBF7423DF3C866531G13G26834481181E00FACF509C1F3BD2B144F554EC18DF4E1B591B87CF552FF9EDA7DDBE4D666AD04F5A3C8E5BA5276AD3C41D42DE546DD2G5F5BECFDF7C09BA7D4176A35E98E378B245BFAD4B0A69F2F332DB78B6B205384EA0B23C70586FABC8A492D684D0127536653BE725841316A
	B5B87DCF3DE893D7ECE7C1A2884039FE8247EBA573397B613D65899A2BE9D791978D65E9F2DC7E33B79B1E6F01F12B4E1A1A86C7872AE17376110D4EE1EBF39E549F71E41B25E4BE2D4DD7DA49869B526ED54A669C8BE903883366F3FB0A1B9FEC034FB25919CF35D9AA811A1F223D342B2E951E585EF056865B87678F64C15D872E3D912C8D73B06593FFB0AEB9284C47FB776758BF8F74EB94C074D3B466E6FFB13745A3B61FCA567721978CC7356BB3406BA675615E22DED1DDDA036AD1DDF6F8710939CF6DCB
	556D3253ADEDA6036151CF9D854371C9FCEEDF9647038C231593FD83235BB44D6B38F4D9D34F281A66F0F5697CDB18AE3EG976893FD2D3E0EFD1D86FD1C8F90AF7BFAFFDF0E413E1A5C6ECFAFFBDAF06588BBDD150EB629BC8DEB75E91A7F2D67B0362A1565CAD65669B1E7DB434C8D728CF7BEC37B6647423691BC57B75F464B67A8C6C996364871EFB0FC9B74E5A4C0346C770DF32DC1753F289E83F59A4B5AB06A73E53641ED622E7E70B6BD31BF34CD5F5F9F5A26A777C73659A97D21EC1653FE5E0FFDF477
	3A8CEBE0FABF7AC308F1DDAADB0812C5613171ABAD588F074B211DF3583BD46D0C23DFD51495CF23AD675521AD4F0677382749CF76EEA6BFD952FF17B275E2F1D228F8EA6C3D07136A1E61365B720C6EA739CE0FDCC5FBD01DEA8F8C54D177E5174671B319BF97F8DFB29F2733F7A0EF6929A317B54D6DBA6AF6F5BA3CBDE5B65619F27EE8D63D1DEEEF0FEAAF7D44F645D6EE6B554A59E41457B372B1FC5FDE3CEB57216281A1FD59A781F2AF568789EC8AAF714076335BAB05ED65A83FBC708F81FA62266A7C72
	55E4E2072BE51550F1EF5F1DDCC70899AE390F387D4DDEF797EC5FDF221AC112072B69EE05761A2E9BE8A39A58CE944078E7487F3EF78D6964FF45A6F3546DF4F27386DAC1AC5A2E355EEA304718E778995684B4CE7FEEC8FA3B24679D89C557E2C90F7D1FE762BAD4BF3B2C42146086701E5AA7E220431FE787514E5A1C1775586A4467EB6069B46C9D9CDFF3BD743A283B0E7B4527D2FE4375D58A46C8DCA6DF4713ECA85363F57440D60B1B21B80BEFC8B71E4523C0FFBC37C743F3AAG675DD301BEA744F1D7
	9977AC4AA8EB25337ABC60C94071F9164BE9FE162FEDDEAFC1560B0332721CDE2F78B9E33D896729DEB760C7G0CFF0E570B95754A96E03DDDF5F4362D10388606FB9D9CF917094E8F6FE79AF384F5F7FAC37AA4844F82AEFF640260F355B88565CEG7C6485B4478FDFB76E7575BE1F3B434142DAB1DFBDB70C7E0A633CB7D64393FC098F4ED8F655CFF36E3F013AE25CAB50E25E6E5BF9D09998479F33BBB43717C229233DEC0134380FC2685D88E6F3D43A73338E35D7213C44FB75B4DE5397103F7E7C38B17F
	B0A5E3D7521AB0E323AC94E332D09F1B591B961B396C99D2F67BC24ABD3CFF04F0E39712ADAD590E7646F2AD38547D653EDE583FA81942797E8F0B11F0AF1E3510F2938F2CC25BCFF99EEC85E0BFGBFA7FD543AD60CD5B360221E2775795081637A1C8A78B80035AF34D9382F1B520A3EE4780E0D66A57E8A4E4B975A9D94324F3BF36A041EB36E7F3ED2FBA3BDA9D4FEA5AA23A0297885BE760DAF68F3204D76A4F54F20BCD061F99A0FB1D0E7468BB49EAF55069A8F53A21A17CF9C35067E5C4CB6425B7F35EC
	3FGE4B7AF22768F6CB5369F3508473F139651FCFC7D70971B0FED0507D17FAF363FD0CEE83751DFCC0DAD8B6BAF26AD6273B0EFD1303F981104B63C9470A9F164AF165C48B2780B5330C2ED2EAE706EB2CEE4EB857C38A85F4B7A467C38C271EAF37DF0F2A8C5F1F4967EC9B20EFFA5141BG6CG57G46C95D4A92874D899D73C74889BDB6AC3D2644D10CFF7A48F078E6C93ED1694437B00E0F7D32B87DAC3476450167A21EEF59E7C17BACFE1167DBB2A47EB843B79A705C1EE3185F413287E871AFD27B9F37
	866B5D7DD2E01BA3DF8AF58EF78C60FBBB28BCB1080F5BF746991C4790FE132FD805F26B7765846F67384E26024C59AF11DF7E4381722F71AF11FD6418F14FAD79DD1B258E2095C083988BB099E05E6F48CE2EA6065A0F826DA45CE6241F3F79D83CF37E6646F057G3E60B1DC763BC0BE5E6F0D87295F1971B40F0F5F248E4F8E2AC3E3FC28F96CF22E8FBD0F6439042E5E3DF2BF0D27B9BA338AF1E321BCB11E66E3DEA2FEAFA01F526CF638B4057C495712B08EF4FB9DDD8E97617E1E61BA5CDEF68864B909AE
	36F747004C59D26EAF12431FD9E7A407BE337EA6B97419F5DEF264BCCCECF238B3AD57AFCE6A978740F10EA304DBA1F1773038A17365B6CB594B047BE3B2626A205CA2F1B74C0873C3F9744BE4873596347F49D01E819087E0FA85568BC0B5C053ABD42F09556B067228D7F8EC0A7BE8B43C4F82C810759EDE6591720CB600F2A2793702887499C2D6F5D09D52D5374D27D85B41F91B0C886DA22C09C0235CCBDA909E5BCB956F9BD81B0F64B1DF89532F7A18A3E830E9B6C1DB2465AAA1F28D9F58FAD4054E495F
	EECD95F50EE96E23D5F26DAE48C991FAE4AE261850F40079ECA83783789753583FFEA0F8ED0EC61E45FC0CE2968F9CE3118FB407377992F3E81B5FE146B17139AFFBBB54E03B2EB297C81A6E85CFEAEA8FF6D91C69983FE673F6298356C5BD636734F07C274C61568E9F4F33670D6339DB5A48560341E3B48346A5D60C4D5290E344652D7E0BD15E9EA92FF7EF24FDBCA5A15C18372E427D56AF4BED2C5C27103FD46B5365989CF359050363E73D6B4CAFFC8495DFCCA65CCA0933C95C8866AB6E037360C9590F9F
	276338FB3CAA9CE43D2A1D27351416842C7FB873A3C570DE1AC071E92E897D265356673E8C6D4733FAFFEFB26E35E381B795E03668AB577FDFFBF1DDF5C2AC8A53F24623F6A853FF0F3C5FB393EFB5149B813A8122GA67E1E5ADC3E874F0A7CE4844BC8A55DF775216E271AEC17D42788F4E53FF67C85738E41999CCEBB41BE6CF3F9147359D118A1F10DE0297CE4AF5ADF3BDA36D38F67FEEA63108B75BE55822B6138C3F55AB90D479FDF35040ABFB27F50E6A979831D858E871C85EA7F406B3443134B309EB2
	4A5084FDAABCE7CB99EADEA8997112FE6D3A112EAC617452A564A362F2026D35F609EE234DCB42450FFE66F36CCBF81CE816782FB23C5F006771636A83F49E9A853404A534872557220D35AC0572D2421DE338EBD09EA5F1B13534D70D1538038709F70A44FD65A0714E1238678E926FFC097B66DE42A92F42796CD5B40996B4A7B137CB120B6169D2FB0B65C9294151233A70E3DBE9751EFDE545FB2B76EC676724713D46F3527E553B431E13463CAA6EDE08677C2FEE966B232A9D77D3998FE103B5B5A73C8E7B
	91DBD793DBED5C7FCFB2258859312F127FFF5A04E3DB70DA1B25922071B54AE97837D2CEA37A875FD71AC69C8FF927A236E5D7D27BEBA25F731AFEFEEB5ECCB90DA9E6EAF3AA50173D464E51E623DD6118A503DFA907A727972DB25251B7EFD60C748F8268282FA359C89F91C047B1FAD770733E7DEA8B75ED452FA6AA4EFF2B8EFBDF246EF55EA73BF8FACEEFD6C63ECEFD7BAC05E261F12F53F8BEF28547F3B6146381CC4BE44E26B3CC4E06F986AE6F4ADE12D7A4799E3CDA275C743D9A690C387C26C3948F37
	AC13B921DC54F794168126AC23734D38BC52E53654E5CBE9D168BEC8AF46F99F3CCEF1465AB7E84D2CE431C78314DBA56E9FF3E99DDDFB03FC4AF5F62E1A8165B8097BBA43E1CE94731D9C17F9A05C373681B15F9BC37F3E977706B1865CBE64B60673FD4FEC6049D136B05F5463D261A0686860FBE7AD437D9240341C76315FD7E0FEDA0301667E668E5CF2946BF2F6F72636A0C2FBDCE667C11259361CFC5614CCDD469B87A349984F6A5C3B37E110FEA59B4089BCA3GB68B5A98F82F906B0C2F43199F9BFDDF
	66770B1292432C433865A226DA9E1CA33ABF8B7BD57AE61B2561CDBAF75D1136931EE7ED1F8C4C74829236F30F6A557AB816FDB590737DEF26615E2D617B56E9B35B4F5E647BD62244FF4C709E831E6FE78BCD748D779A50E25F243369B359B8878DABE09F8770830C861884B0E385756D39B47C9E96B1F7506276B4C1G6EB49C93F97FFEEA3E393BC3BF35103F1C7C633B15185B16A6064BEF472E6073233CA56EF97DF9B343737EF92D583FCA20B581F8G22G4681CCFE0B7A37036524B0838253D32FE9360E
	EE1679274EE1B2DEC7E3B0487BF6A545583769A0EF7EDB7A3ACFF8ABDCAC7275DE1C8B539F799C95CA7CBFB1FC1D814F67EEA6736FD83E86344615640F2E86446ED66582EB2FD4BCEB4553881C6F4F07A24DC9F388BE2E5F56BCE6F3C08F34398A06779870A28717ABED8EE831G3C7D3B720C6DB7A47276DA45531998CE6F186B11749E81FCE302F8399F4B338EBC836C32126F1988BCD38162GD6607379B68B77BD8F64C672BD4942D6D3453BB569022594E033A857423BA5895BA7BD3E5100FC01DF3C09E649
	C8B350D89EDF721D294567360EEDE2EDCC3FE00CA50AF72ECC8C95CBAC3B30A329B1C90C29F8228FCBD0934CDC6E6787C96EBB8A57135DF1E17F928E8F4401EDB09FFEB7DEB3933ABC3B16F4A93A6F9F150639CB93B707500579F321C302C197D3E70238E37ABD3C72AC4E12CA5696A50CAF0555F88A42008FAFFD82076A96DB1764F9B08BE54A73B4F731027663AC0C4D70AE044366F47433CFFDE720222B0B5BD5AB3BD74D5FED067717CCC35D0BEF86F89B4966DB59866FFFDCF6787C48626C507911D733C367
	845F4C0EFC0FA5B9A77CBD1655B946FBACFC5E6FA94039A9CD3EE0E9G68863886B09A00730C4D5924B05F9C42AF9F33F7E1FE86EFBAEA547ED5EB783E7E1DF5707B115F30625979129B16E18F4AA77C6DD61CAF4D6DE1C80E7B1E9547486B686A56F8D5019FE745B563D4BB991A471D7F17456D51502F2958CF06EBADC05CC2A8AF13382B05941F961948DFFE2B9777DFA71423GA682CC830885D881D0E43EE02984E8GE88770830CB1936F8446BB894A33G92GB2D7C1FD00E6G8F40E800C9G33G92GB2
	AD44BB674AD4F822AC363E05FCEC1B6CABCA3C471A867AEC8454E5C598DAA8E8B08F2C6B94FD9E0E5DD79A64703E2474CE95B607B834914CE9269AF8A8C68E17CFC587951CC70D84B9A1F0494A706F2AE5995E390DFC1B1D59AAE11E6AACE4B7CFD4D09E21C5626C15E4CB6D9257FD08F01364BC17B1FF4E5F779A5E9F4E3D757EEF6EADEDC364E25839D2C9815BCE21F198FF91F1A5D02E16B8F3BB0DCD1D444D3CAE3FB9C8DC73D94445C2F9A900384FE025D8A7A5956685C05C41599D707D0F67C90EBB5D3DCD
	A29C91F972BB2DF4CE7683AFBFA747B1191320BC9DA096E0E87BF442E13ECF6FDB07A56EE7B357E33C338CE4D8D7DF306C87E8863083DCDBCD3E36AC37D489FF06618AB3FF6B35B9DC9A172B95E10CB49AE4C4834C820883D881E0DD837190C0ADC0B3C0B7408800B1G938126G4CG0885D83A06F4D81437BD028EA24124AB21104F3D2FA03C5FFF20E0F03F7F907345AA786B16BE0F4851CFADE05F61BABBFD2A5CDFFED110A9F1A7FD4DEE1F8323899ECFCDC8417A175CDE76B10047198F25D01C1932760225
	98208D4033167BA74E67AE98981F5ED6901C230E821EF1020F47275FAE9CACBEC59B2478F4B270CEDF2B472773617D4D15ABD7BE83A06E91323BEFBCBBF44C6FF1F8D54CDEF31A2F9F77E9BD6B4269F84BBFD958DF0664BD23415E0FA44ACD9669F2BFF0EB0E4EBEDD6E3AED9901B4835F0A4C1C00B603696FFDE0113C14973F4F005BADF05D8E3D8D161AE2C9F9CE1BF3865798A2D86A3D415647710F316FE1924F3BABF8269E8B2071AE097B09313D4179ED7C669887E34D69BF4AB552D7G9E69F5E9C4FF623F
	C37137C87A247321685D127E431AD074EB127E6BB3215A9FAD6927F706621FA0692D592168B112DE3ABB94FD0624BF1DEE24472671760B53093EFADFA8FA35240F8F495F88F4BEB7BF5C0BB92BCE37CB63B9287FE0FBE59B503B8138DFEC46CF7EE28DDD2D9CEC8D99E104A13F043EFEAC48C4DBF88B569017F76350E072685BAB3ECFG7E18F4FDCD4E0077DD700267C65E1F19F9017DF91E6DE573205EC25967FF3F9818270BFAC76FDFD1FBA4FDAC03744F1AF1016566757E3DF0BD123C54A0F94540EF4C47D5
	C3F9F3227E5B009C256BAC6A203A50995BC55E707AD94A5F57E5D00C72317566FE3B6638C93E3B8378DAB2860FBFF9AE240D65BC3AB302F3A4AA43EB9941B912D7E45CB082E88BB3E89FACDC9FFEBFABDEBF78FE36FDFD68F3CC457A0167186A75214FB1B56B0D67980E0BAA8A2F57370A8657EBECD1E83D7E29E820DE779405566B07C583753A3F886D2B8B6203D6D96FC109BBAFF1B1CCA6624EB96CDA3744BF4C74C2FC230A8D92FE9A532B1761DA856E91836E3C40BDDA04FBB8F4395B6DA55E470B585AF5B8
	1D3CBC1755F138A0F41063B11F696870588CFABFABF167251DACC8215FA7B6E6421A4A247872A72B71FC976ADBCD87CB5616F7DDF614DF569C4E1A1A960766D40F306804471CBBD3691BC9CCA6451C7F1E0F6DA4C0B9A58B6295GDEB73A0056647EAC2A7BC4814B7BC1B98AE0FC56F063537B0A314465677B110E369513C5FDBBDC36FF28FD5303840C8F0E39B4EF9F171B10CBFDAC4A263EE431589F4FF9AD9257D8CB3898090B2D216FD18992E7EA21B83DB407F0DF5FC9755AA5EEF2B66146CA5C455D5447D9
	B954472F1E2A9AEA9FE54001374DE85CF2B3C81FEAAB35D33F0FF0CE091B1BCE3889D65A877F08E9B661079F2D40BCCB4077636320C869A63B4366F4F7EDAAAB2EACAB2E5A3D1DF2009B37A16F70663B810F9702FF75AE3D6DB1970757762E72F0ED0B7D3DC2177D5D33B84E1DB6278F7D87BF3F7D081D3566DB799CF0FFFF895381627DD3437BD26B2DBF83277D954E59AF268C368FAE35866EF162CE5620FC4177A745EFA1D311AFB3F7E8F91B92284777491D4C276C4F8D5EBF2B993EA1B7F87F7CC9BE6D1F4D
	C01B1CCB71423F965C5CF7358F8A595D043C60764FB1FCC9DEF07B318554FEA5504664D17BC57ED0F33AAC0F0F475AFC11834F9FB8BE55C138C6A83781F87203F3DA2F668677F124214E589032B9DF5E45D03AC50B7AD3C370914C8E2245C1F9C5FEA83BF93F5628DBE6812FD3A21E7B4533891E6D621D73BDDFE3645384ADCABC4795046BD3EACB24791E94166F1BBB0DFC53C43DF962999F166FC759C6BE251057330AE7E9E1B8BE7B6ED0E3DFAB6AB70B27BD843FBF88B78A4A6381A697865B453A0CC8E3B1BD
	2CEE4777C5621B9F16EFFEFAA43E0490FC5CB74FE279F31B535165423C3EC2F7D12766E01E5561F2BADC6AD17ED78994725DA7D84CE2DAF741D2340E72F15B72D9BE944A8D6BE87DD5E17AC468D7E3F87FF97E2D7735737F8AED34946AFD3AE0F8FF216056373D721636416774900B871BE1BE5B65BC277633389F4AA3A56E719D6CEEBD14276876406231D9D00E1538B70BA90F3BD462DE790C5D8FDA8F7EF5BD61DAD83C680172E809DB4B4E5C9320BCC5624E64133CD8095BFF11F42EACA25C9D97C967DA09CB
	6BA77D1AA52E6BB312E7173871C9245FE4093333B8F5BA1467C95C22C44445C3F90544B5A5113C148D047B41F99A2BD6097B7DF96A2FD362D654D09BA3A44EE922B646C85C2FCD5446F809ABEEA1DC02445D3B1364553DCD38789A1257A2F16F9F105FABA4EED6B671CE1238B5678772D61FA75EE992F79B0B372D6FDC30143CC3385FB1DCA5149BA56EDF76533834C95CF20673C0F90444A549EF81E3A4EE74C76C9B9E14D7C85CD752E9CCB30B89D715C13CA592F7E19F61B409DB12AE7BD1CC791D7FCEC5BF29
	61718D63E2056ED7DDE13E503A914EE99B296E21FCB355D5A8DE766191D1785C0F7C0139226FD5693462FEBC7F74587C0E1E4BBD6CE6B5EFE7BF3357E6E823CD3673528EBC6B43E157518FAA591CF87E22ECB869E75EC9E72FA8DD3F1D01792C96D6E7B2502782709CD3764621645042652C92C04E1F8D749C456CE57DF238027A35410BED2F007AA91BC83FCFF3F3827AD5AFF7A74E73B5669FF0BE2AA54F66BC145F6D686AF6E2CAC0750A9C7E01BC4A6137C3DD7FA691DFED625FE2F9DFBF499FACBFE76C6B3C
	CD017934F8A8FFC75078FC7E88FFAAA0F47D9973BD4B200EE9B32C95065B476632924A351BC9076B1FFD119C219364BCA53EA170B69E613E8770A3B75398DD2D8D1C775B199F1B8474A9324E9F9383EDF3C38976056B5811B414EF9D61F40C07B670B7841847646D4FBCCF3639CC0E4D659A1A5B129242EDE1BE29994AEDA5F4EE2E5B226B3550B41C7B0941FA0D82199B95E3FE75CFAD034D05D1665812C0FB0806726DC2B6577FD1363EE2GBFCD6A5F31D5575FFEE030FCEE2435363404672E75F1FD0379EBE5
	4B854B5AADE4DF6F1D9F2C0DC8F3D73BC5EF035B491D3B836D64B6160B603424BD21FD583ABD28D7A348EA59C2F3BBEFBF594008ADE403D96F865A6936F7593D8D2047487E94C64C01533D30F07D095B926C1F7E5FC7217D53FF303DE5A954D736124E7F1CCEB6DA361574E94C984C860D7A34EE8D349967D62ECF223489ED5FE0720CB6618F12B7EA003C55036A97E053C172228D7278FCAF5F2E4F777A7C21640E2AE56E686CCE1DF77A0E3703F9755FCC6CFE977876ED273AC5BBB15FE43802DEFE867F276BC7
	3E7226E347DBC49B1965FA9B0B0B07175B5A43F2D77C7DC9433EFDB2F7683A0E4BAD0E2C6B6913A79ADBF87E22A30F724AB1B04E89DBA9AF7968E7787B0560FB77659E272D337C124D67682829B9028F5C77BFBAD9425E9B8DBBA0444BAC6FB81E49AF5D86319FC06B3650B9E2110F2C527B3EF10FE1CD77C7687BDE6ABB673BEB2F4E7771E79BC30FFD3D97869F063ECA1806601D36CFEFFF511FF4B95FB9BF7476BF2E51791ECC9C5E5C5FF3C067FD617CD06C0D579DD5B3147966EDFC6B085EC63BE9F8637340
	D1648DBFFFF39A7471BBF9C2EF67211A610D0333D11793FBCA173332F5F8F2121BF4B9DB5F5765CC58BF743534F87F50577D2FBE545BF86D7361697ACA332EEB56E9DD4E1574216B7A53742158C178792BBE93F9FE4F35C42677FF04A5715DB56F66724D3D037285671BF9FE564A72401EED41F95B8D8CFFEDDBF05E7687F914370D82DA7CB64A9B2D4B577B3059709E1DF76B73AA3F3825ED703FA9BDEDCB8A849B51AFABE61FD7499EE8D3755F7C2F3951979B2CC9CA52C9E5D5B77B46F9D2B1776247D23FC7D1
	7067B20913B545A26E2FEB4AAAFEDB9D44E5C8F1A759B74E58ABFBEA12975C131C2418C0967F66FBD2B16107DB9069652213B5378785ABC9E2BE703EE3166FB3653A02119842AA71CC5414947143589ACDB1634FD7EBE445E4C345E4D0A6ADE05D7D622E3DAF4CF87A2CAFD9D9F5D2A944706E0C6AE53741D5BB7E52DD7CD95263CA2A87FF290CC198E86AE38F33CF6BF32ACD0A3573B47E69AF1F265A6B697E33CFD3F2595F262940EFF4950DB6DF37065F3B8FB4A9A6977E81D5A51B131DB6D7D7853FF4FE00F5
	B7313E0EAD9EB4C385744DE17A2214F2A9A567210CAD9BCFAD0CC9D6120EAB2B7147F747ED9D1A5BFBD2C9553A3D2A2F5B6D347BBD07392014DE7A02095DDFAF3B0F1DAD47EDDAAA7D297F4ED1E9F1E947E1447DDE25025544E83ADC56309F6D36F921A955FBD243BF886B7616C85AD75E56367E7AC4FEDB1212A8BA09D330566F517800C9C340AE179F872D35A7DEFE646EA7EB9362016538E2E6FF98879A4E54EBFDF03967126A3DAD7A3B9B560C097D866A654161E1131B89A656E96BF1B87B602501F9CF4227
	EADE1B4B07FFA2889AAD8E6AB1112462655FF924723BBFDC7E9726384E2AA96F70A982560AAE555DD3D15F5969F029D2G4C97085FA045E31D7220BA597E5BF3CF4DD9F9896C2BC1C96E292CE47FD7317FF7637FD58CD345B0D53BE1529214087F0269FEBF763950AF6D5DA2EC9D7F65CAEC22D8853818CC8C3BFA002DA1B6FD2051A0BA1B912DD89DDF726508E3E99DA396317F5F39B97D37866A1FB5C0FF6A83EA158D86055F3C4159706BF73068CD78F99F907C4EDD0DDE233431312627E73B2624B5587A0ABF
	6CACE6977DEA8CC3504E1ACA9F6A90345F22A1584B07G7F612D488DDF4AA4593FCC8DEB75C9C2D3B20BE93104505B6821596F67836A9C88B97A09E17AE60AB87A529570EBB73C9A0A7812BAFDDC6FB47E431B53E81DC9E1BB44557FDFDFD1FF567526C48A1B14AFF16831F4827FBB79A5695C2A6B0C3BB61EF85F15E3CD66C4DEAC71EFEF4C5BF57DD30416182CC8795B5334AB50BAC8D3535F3A8BF26BFAD30AA8128BDAA36A2C12FDA35B9A08B5993062B70C5BEF98FF933E6CEBB9E17F9EC6E6353847D02D7F
	06117F8E62E1769D329D70572A698EE77A8E3C64946EF70CE7FAECCE27E6F3FEDA6F3263EF9A0F74E92A7EBB3A1F6FC079BE2AA30862EF616FC03DBFB1707C8FD0CB8788039A824B66A0GG0CE6GGD0CB818294G94G88G88GE0F18FAD039A824B66A0GG0CE6GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGGA0A1GGGG
**end of data**/
}

/**
 * Return the DateComboDay property value.
 * @return com.cannontech.common.gui.util.DateComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.DateComboBox getDateComboDay() {
	if (ivjDateComboDay == null) {
		try {
			ivjDateComboDay = new com.cannontech.common.gui.util.DateComboBox();
			ivjDateComboDay.setName("DateComboDay");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDateComboDay;
}

/**
 * Return the DateComboExpire property value.
 * @return com.cannontech.common.gui.util.DateComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.DateComboBox getDateComboExpire() {
	if (ivjDateComboExpire == null) {
		try {
			ivjDateComboExpire = new com.cannontech.common.gui.util.DateComboBox();
			ivjDateComboExpire.setName("DateComboExpire");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDateComboExpire;
}

/**
 * Return the DateComboNotify property value.
 * @return com.cannontech.common.gui.util.DateComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.DateComboBox getDateComboNotify() {
	if (ivjDateComboNotify == null) {
		try {
			ivjDateComboNotify = new com.cannontech.common.gui.util.DateComboBox();
			ivjDateComboNotify.setName("DateComboNotify");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjDateComboNotify;
}

/**
 * Insert the method's description here.
 * Creation date: (3/13/2001 11:17:17 AM)
 * @return java.text.SimpleDateFormat
 */
public static java.text.SimpleDateFormat getDateFormatter()
{
	return new java.text.SimpleDateFormat("MMMMMMMM dd, yyyy");
}


/**
 * Insert the method's description here.
 * Creation date: (8/2/2001 12:39:10 PM)
 * @return com.cannontech.loadcontrol.data.LMProgramEnergyExchange[]
 */
public com.cannontech.loadcontrol.data.LMProgramEnergyExchange[] getEExchangePrgs() 
{
	if( eExchangePrgs == null )
	{
		com.cannontech.loadcontrol.data.LMControlArea[] areas = com.cannontech.loadcontrol.LoadControlClientConnection.getInstance().getAllLMControlAreas();
		java.util.ArrayList list = new java.util.ArrayList(10);

		for( int i = 0; i < areas.length; i++ )
		{
			for( int j = 0; j < areas[i].getLmProgramVector().size(); j++ )
			{
				if( areas[i].getLmProgramVector().get(j) instanceof LMProgramEnergyExchange )
				{
					list.add( areas[i].getLmProgramVector().get(j) );

					//add the programs ControlArea name
					getOwnerAreaStrings().add(areas[i].getYukonName());
				}
			}
		}

		LMProgramEnergyExchange[] prgs = new LMProgramEnergyExchange[list.size()];
	
		eExchangePrgs = (LMProgramEnergyExchange[])list.toArray(prgs);
	}

	return eExchangePrgs;
}


/**
 * Insert the method's description here.
 * Creation date: (8/6/2001 11:26:35 AM)
 * @return java.util.GregorianCalendar
 */
private java.util.GregorianCalendar getExpireCalendar() 
{
	java.util.GregorianCalendar cal = new java.util.GregorianCalendar();
	
	cal.setTime( getDateComboExpire().getSelectedDate() );

	cal.set( cal.HOUR_OF_DAY, 
			Integer.parseInt(getJTextFieldExpireTime().getTimeText().substring(0, 2)) );

	cal.set( cal.MINUTE, 
			Integer.parseInt(getJTextFieldExpireTime().getTimeText().substring(3, 5)) );

	cal.set( cal.SECOND, 0 );
	
	return cal;
}


/**
 * Return the JButtonCancel property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonCancel() {
	if (ivjJButtonCancel == null) {
		try {
			ivjJButtonCancel = new javax.swing.JButton();
			ivjJButtonCancel.setName("JButtonCancel");
			ivjJButtonCancel.setMnemonic('c');
			ivjJButtonCancel.setText("Cancel");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonCancel;
}


/**
 * Return the JButtonConfirm property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonConfirm() {
	if (ivjJButtonConfirm == null) {
		try {
			ivjJButtonConfirm = new javax.swing.JButton();
			ivjJButtonConfirm.setName("JButtonConfirm");
			ivjJButtonConfirm.setMnemonic('c');
			ivjJButtonConfirm.setText("Confirm");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonConfirm;
}


/**
 * Return the JComboBoxProgram property value.
 * @return javax.swing.JComboBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JComboBox getJComboBoxProgram() {
	if (ivjJComboBoxProgram == null) {
		try {
			ivjJComboBoxProgram = new javax.swing.JComboBox();
			ivjJComboBoxProgram.setName("JComboBoxProgram");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJComboBoxProgram;
}

/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel1() {
	if (ivjJLabel1 == null) {
		try {
			ivjJLabel1 = new javax.swing.JLabel();
			ivjJLabel1.setName("JLabel1");
			ivjJLabel1.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabel1.setText("(HH:mm)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel1;
}

/**
 * Return the JLabel2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel2() {
	if (ivjJLabel2 == null) {
		try {
			ivjJLabel2 = new javax.swing.JLabel();
			ivjJLabel2.setName("JLabel2");
			ivjJLabel2.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabel2.setText("(HH:mm)");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel2;
}

/**
 * Return the JLabelArea property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelArea() {
	if (ivjJLabelArea == null) {
		try {
			ivjJLabelArea = new javax.swing.JLabel();
			ivjJLabelArea.setName("JLabelArea");
			ivjJLabelArea.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelArea.setText("Area:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelArea;
}

/**
 * Return the JLabelCurtDate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelExpireDate() {
	if (ivjJLabelExpireDate == null) {
		try {
			ivjJLabelExpireDate = new javax.swing.JLabel();
			ivjJLabelExpireDate.setName("JLabelExpireDate");
			ivjJLabelExpireDate.setText("Expire:");
			ivjJLabelExpireDate.setMaximumSize(new java.awt.Dimension(29, 16));
			ivjJLabelExpireDate.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelExpireDate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelExpireDate.setMinimumSize(new java.awt.Dimension(29, 16));
			ivjJLabelExpireDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelExpireDate;
}

/**
 * Return the JLabelNotifTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNotifTime() {
	if (ivjJLabelNotifTime == null) {
		try {
			ivjJLabelNotifTime = new javax.swing.JLabel();
			ivjJLabelNotifTime.setName("JLabelNotifTime");
			ivjJLabelNotifTime.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelNotifTime.setText("Date");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNotifTime;
}

/**
 * Return the JLabelNotifyDate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelNotifyDate() {
	if (ivjJLabelNotifyDate == null) {
		try {
			ivjJLabelNotifyDate = new javax.swing.JLabel();
			ivjJLabelNotifyDate.setName("JLabelNotifyDate");
			ivjJLabelNotifyDate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelNotifyDate.setText("Notify:");
			ivjJLabelNotifyDate.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelNotifyDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelNotifyDate;
}

/**
 * Return the JLabelOfferDate property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelOfferDate() {
	if (ivjJLabelOfferDate == null) {
		try {
			ivjJLabelOfferDate = new javax.swing.JLabel();
			ivjJLabelOfferDate.setName("JLabelOfferDate");
			ivjJLabelOfferDate.setText("Day Of Offer:");
			ivjJLabelOfferDate.setMaximumSize(new java.awt.Dimension(29, 16));
			ivjJLabelOfferDate.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
			ivjJLabelOfferDate.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelOfferDate.setMinimumSize(new java.awt.Dimension(29, 16));
			ivjJLabelOfferDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelOfferDate;
}

/**
 * Return the JLabelProgram property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelProgram() {
	if (ivjJLabelProgram == null) {
		try {
			ivjJLabelProgram = new javax.swing.JLabel();
			ivjJLabelProgram.setName("JLabelProgram");
			ivjJLabelProgram.setFont(new java.awt.Font("dialog", 0, 12));
			ivjJLabelProgram.setText("Program:");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelProgram;
}

/**
 * Return the JLabelStartTime property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabelStartTime() {
	if (ivjJLabelStartTime == null) {
		try {
			ivjJLabelStartTime = new javax.swing.JLabel();
			ivjJLabelStartTime.setName("JLabelStartTime");
			ivjJLabelStartTime.setText("Time");
			ivjJLabelStartTime.setMaximumSize(new java.awt.Dimension(59, 16));
			ivjJLabelStartTime.setFont(new java.awt.Font("Arial", 1, 14));
			ivjJLabelStartTime.setMinimumSize(new java.awt.Dimension(59, 16));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabelStartTime;
}

/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(getJPanel1FlowLayout());
			getJPanel1().add(getJButtonConfirm(), getJButtonConfirm().getName());
			getJPanel1().add(getJButtonCancel(), getJButtonCancel().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}

/**
 * Return the JPanel1FlowLayout property value.
 * @return java.awt.FlowLayout
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private java.awt.FlowLayout getJPanel1FlowLayout() {
	java.awt.FlowLayout ivjJPanel1FlowLayout = null;
	try {
		/* Create part */
		ivjJPanel1FlowLayout = new java.awt.FlowLayout();
		ivjJPanel1FlowLayout.setAlignment(java.awt.FlowLayout.RIGHT);
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	};
	return ivjJPanel1FlowLayout;
}


/**
 * Return the JPanelDate property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanelDate() {
	if (ivjJPanelDate == null) {
		try {
			com.cannontech.common.gui.util.TitleBorder ivjLocalBorder;
			ivjLocalBorder = new com.cannontech.common.gui.util.TitleBorder();
			ivjLocalBorder.setTitleFont(new java.awt.Font("dialog", 0, 14));
			ivjLocalBorder.setTitle("Date");
			ivjJPanelDate = new javax.swing.JPanel();
			ivjJPanelDate.setName("JPanelDate");
			ivjJPanelDate.setBorder(ivjLocalBorder);
			ivjJPanelDate.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsJLabelExpireDate = new java.awt.GridBagConstraints();
			constraintsJLabelExpireDate.gridx = 1; constraintsJLabelExpireDate.gridy = 3;
			constraintsJLabelExpireDate.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelExpireDate.ipadx = 40;
			constraintsJLabelExpireDate.ipady = 1;
			constraintsJLabelExpireDate.insets = new java.awt.Insets(7, 5, 6, 4);
			getJPanelDate().add(getJLabelExpireDate(), constraintsJLabelExpireDate);

			java.awt.GridBagConstraints constraintsJTextFieldExpireTime = new java.awt.GridBagConstraints();
			constraintsJTextFieldExpireTime.gridx = 3; constraintsJTextFieldExpireTime.gridy = 3;
			constraintsJTextFieldExpireTime.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldExpireTime.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldExpireTime.weightx = 1.0;
			constraintsJTextFieldExpireTime.ipadx = 73;
			constraintsJTextFieldExpireTime.ipady = 1;
			constraintsJTextFieldExpireTime.insets = new java.awt.Insets(5, 6, 4, 1);
			getJPanelDate().add(getJTextFieldExpireTime(), constraintsJTextFieldExpireTime);

			java.awt.GridBagConstraints constraintsJLabelStartTime = new java.awt.GridBagConstraints();
			constraintsJLabelStartTime.gridx = 3; constraintsJLabelStartTime.gridy = 1;
			constraintsJLabelStartTime.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelStartTime.ipadx = -18;
			constraintsJLabelStartTime.ipady = 1;
			constraintsJLabelStartTime.insets = new java.awt.Insets(2, 26, 0, 17);
			getJPanelDate().add(getJLabelStartTime(), constraintsJLabelStartTime);

			java.awt.GridBagConstraints constraintsJLabelNotifyDate = new java.awt.GridBagConstraints();
			constraintsJLabelNotifyDate.gridx = 1; constraintsJLabelNotifyDate.gridy = 2;
			constraintsJLabelNotifyDate.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelNotifyDate.ipadx = 36;
			constraintsJLabelNotifyDate.ipady = -2;
			constraintsJLabelNotifyDate.insets = new java.awt.Insets(4, 5, 9, 4);
			getJPanelDate().add(getJLabelNotifyDate(), constraintsJLabelNotifyDate);

			java.awt.GridBagConstraints constraintsJLabelNotifTime = new java.awt.GridBagConstraints();
			constraintsJLabelNotifTime.gridx = 2; constraintsJLabelNotifTime.gridy = 1;
			constraintsJLabelNotifTime.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelNotifTime.ipadx = 16;
			constraintsJLabelNotifTime.ipady = -2;
			constraintsJLabelNotifTime.insets = new java.awt.Insets(2, 47, 3, 57);
			getJPanelDate().add(getJLabelNotifTime(), constraintsJLabelNotifTime);

			java.awt.GridBagConstraints constraintsJTextFieldNotifTime = new java.awt.GridBagConstraints();
			constraintsJTextFieldNotifTime.gridx = 3; constraintsJTextFieldNotifTime.gridy = 2;
			constraintsJTextFieldNotifTime.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsJTextFieldNotifTime.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJTextFieldNotifTime.weightx = 1.0;
			constraintsJTextFieldNotifTime.ipadx = 72;
			constraintsJTextFieldNotifTime.insets = new java.awt.Insets(1, 6, 6, 2);
			getJPanelDate().add(getJTextFieldNotifTime(), constraintsJTextFieldNotifTime);

			java.awt.GridBagConstraints constraintsJLabel1 = new java.awt.GridBagConstraints();
			constraintsJLabel1.gridx = 4; constraintsJLabel1.gridy = 3;
			constraintsJLabel1.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabel1.ipadx = 17;
			constraintsJLabel1.ipady = -2;
			constraintsJLabel1.insets = new java.awt.Insets(8, 2, 8, 35);
			getJPanelDate().add(getJLabel1(), constraintsJLabel1);

			java.awt.GridBagConstraints constraintsJLabel2 = new java.awt.GridBagConstraints();
			constraintsJLabel2.gridx = 4; constraintsJLabel2.gridy = 2;
			constraintsJLabel2.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabel2.ipadx = 17;
			constraintsJLabel2.ipady = -2;
			constraintsJLabel2.insets = new java.awt.Insets(4, 2, 9, 35);
			getJPanelDate().add(getJLabel2(), constraintsJLabel2);

			java.awt.GridBagConstraints constraintsJLabelOfferDate = new java.awt.GridBagConstraints();
			constraintsJLabelOfferDate.gridx = 1; constraintsJLabelOfferDate.gridy = 4;
			constraintsJLabelOfferDate.anchor = java.awt.GridBagConstraints.WEST;
			constraintsJLabelOfferDate.ipadx = 40;
			constraintsJLabelOfferDate.ipady = 1;
			constraintsJLabelOfferDate.insets = new java.awt.Insets(7, 5, 14, 4);
			getJPanelDate().add(getJLabelOfferDate(), constraintsJLabelOfferDate);

			java.awt.GridBagConstraints constraintsDateComboDay = new java.awt.GridBagConstraints();
			constraintsDateComboDay.gridx = 2; constraintsDateComboDay.gridy = 4;
			constraintsDateComboDay.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsDateComboDay.anchor = java.awt.GridBagConstraints.WEST;
			constraintsDateComboDay.weightx = 1.0;
			constraintsDateComboDay.ipadx = 40;
			constraintsDateComboDay.insets = new java.awt.Insets(4, 5, 11, 6);
			getJPanelDate().add(getDateComboDay(), constraintsDateComboDay);

			java.awt.GridBagConstraints constraintsDateComboExpire = new java.awt.GridBagConstraints();
			constraintsDateComboExpire.gridx = 2; constraintsDateComboExpire.gridy = 3;
			constraintsDateComboExpire.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsDateComboExpire.anchor = java.awt.GridBagConstraints.WEST;
			constraintsDateComboExpire.weightx = 1.0;
			constraintsDateComboExpire.ipadx = 40;
			constraintsDateComboExpire.insets = new java.awt.Insets(4, 5, 3, 6);
			getJPanelDate().add(getDateComboExpire(), constraintsDateComboExpire);

			java.awt.GridBagConstraints constraintsDateComboNotify = new java.awt.GridBagConstraints();
			constraintsDateComboNotify.gridx = 2; constraintsDateComboNotify.gridy = 2;
			constraintsDateComboNotify.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsDateComboNotify.anchor = java.awt.GridBagConstraints.WEST;
			constraintsDateComboNotify.weightx = 1.0;
			constraintsDateComboNotify.ipadx = 40;
			constraintsDateComboNotify.insets = new java.awt.Insets(0, 5, 4, 6);
			getJPanelDate().add(getDateComboNotify(), constraintsDateComboNotify);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelDate;
}

/**
 * Return the JPanelHourOffer property value.
 * @return com.cannontech.loadcontrol.eexchange.views.JPanelHourOffer
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private JPanelHourOffer getJPanelHourOffer() {
	if (ivjJPanelHourOffer == null) {
		try {
			ivjJPanelHourOffer = new com.cannontech.loadcontrol.eexchange.views.JPanelHourOffer();
			ivjJPanelHourOffer.setName("JPanelHourOffer");
			// user code begin {1}

			ivjJPanelHourOffer.getTableModel().setMode(
				com.cannontech.loadcontrol.eexchange.datamodels.HourTableModel.MODE_MW );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanelHourOffer;
}

/**
 * Return the JTextFieldArea property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getJTextFieldArea() {
	if (ivjJTextFieldArea == null) {
		try {
			ivjJTextFieldArea = new javax.swing.JTextField();
			ivjJTextFieldArea.setName("JTextFieldArea");
			ivjJTextFieldArea.setEnabled(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldArea;
}

/**
 * Return the JTextFieldCurtTime property value.
 * @return com.cannontech.common.gui.util.JTextFieldTimeEntry
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.JTextFieldTimeEntry getJTextFieldExpireTime() {
	if (ivjJTextFieldExpireTime == null) {
		try {
			ivjJTextFieldExpireTime = new com.cannontech.common.gui.util.JTextFieldTimeEntry();
			ivjJTextFieldExpireTime.setName("JTextFieldExpireTime");
			ivjJTextFieldExpireTime.setHighlighter(new javax.swing.plaf.basic.BasicTextUI.BasicHighlighter());
			// user code begin {1}

			java.util.GregorianCalendar cal = new java.util.GregorianCalendar();
			cal.setTime( new java.util.Date() );

			StringBuffer hour = new StringBuffer( String.valueOf(cal.get( java.util.GregorianCalendar.HOUR_OF_DAY)+4) );
			if( hour.length() < 2 )
				hour.insert(0, "0" );
				
			StringBuffer minute = new StringBuffer( String.valueOf(cal.get(java.util.GregorianCalendar.MINUTE)) );
			if( minute.length() < 2 )
				minute.insert(0, "0" );
				
			if( cal.get( java.util.GregorianCalendar.HOUR_OF_DAY) > 20 )
				hour = new StringBuffer("23");
				
			ivjJTextFieldExpireTime.setText( hour + ":" + minute );
			
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldExpireTime;
}

/**
 * Return the JTextFieldNotifTime property value.
 * @return com.cannontech.common.gui.util.JTextFieldTimeEntry
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private com.cannontech.common.gui.util.JTextFieldTimeEntry getJTextFieldNotifTime() {
	if (ivjJTextFieldNotifTime == null) {
		try {
			ivjJTextFieldNotifTime = new com.cannontech.common.gui.util.JTextFieldTimeEntry();
			ivjJTextFieldNotifTime.setName("JTextFieldNotifTime");
			// user code begin {1}

			ivjJTextFieldNotifTime.setTimeText( new java.util.Date() );

			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJTextFieldNotifTime;
}

/**
 * Insert the method's description here.
 * Creation date: (8/14/2001 10:59:19 AM)
 * @return int
 */
public int getMode() {
	return mode;
}


/**
 * Insert the method's description here.
 * Creation date: (8/6/2001 11:26:35 AM)
 * @return java.util.GregorianCalendar
 */
private java.util.GregorianCalendar getNotifCalendar() 
{
	java.util.GregorianCalendar cal = new java.util.GregorianCalendar();

	cal.setTime( getDateComboNotify().getSelectedDate() );

	cal.set( cal.HOUR_OF_DAY, 
			Integer.parseInt(getJTextFieldNotifTime().getTimeText().substring(0, 2)) );

	cal.set( cal.MINUTE, 
			Integer.parseInt(getJTextFieldNotifTime().getTimeText().substring(3, 5)) );

	cal.set( cal.SECOND, 0 );
	
	return cal;
}


/**
 * Insert the method's description here.
 * Creation date: (8/6/2001 11:26:35 AM)
 * @return java.util.GregorianCalendar
 */
private java.util.GregorianCalendar getOfferCalendar() 
{
	java.util.GregorianCalendar cal = new java.util.GregorianCalendar();

	cal.setTime( getDateComboDay().getSelectedDate() );

	cal.set( cal.HOUR_OF_DAY, 0 );
	cal.set( cal.MINUTE, 0 );
	cal.set( cal.SECOND, 0 );
	
	return cal;
}


/**
 * Insert the method's description here.
 * Creation date: (8/7/2001 10:55:48 AM)
 * @return java.util.ArrayList
 */
private java.util.ArrayList getOwnerAreaStrings() 
{
	if( ownerAreaStrings == null )
		ownerAreaStrings = new java.util.ArrayList(10);

	return ownerAreaStrings;
}


/**
 * Insert the method's description here.
 * Creation date: (8/2/2001 12:31:24 PM)
 * @return com.cannontech.loadcontrol.data.LMProgramEnergyExchange
 */
public LMProgramEnergyExchange getSelectedEnergyExchangeProgram() 
{
	if( getJComboBoxProgram().getSelectedIndex() >= 0 )
	{
		if( getJComboBoxProgram().getSelectedItem() instanceof LMProgramEnergyExchange )
			return (LMProgramEnergyExchange)getJComboBoxProgram().getSelectedItem();
		else
		{
			System.out.println("*** Found an object of type : " + getJComboBoxProgram().getSelectedItem().getClass().getName());
			System.out.println("    in the JComboBox of " + this.getClass().getName());
			System.out.println("    when expecting object of type LMProgramEnergyExchange only!!!");
		}

	}

	return null;
}


/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}


/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getJButtonConfirm().addActionListener(this);
	getJButtonCancel().addActionListener(this);
	getJComboBoxProgram().addActionListener(this);
}


/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("JPanelCreateOffer");
		setPreferredSize(new java.awt.Dimension(436, 513));
		setLayout(new java.awt.GridBagLayout());
		setSize(436, 513);

		java.awt.GridBagConstraints constraintsJPanelDate = new java.awt.GridBagConstraints();
		constraintsJPanelDate.gridx = 1; constraintsJPanelDate.gridy = 2;
		constraintsJPanelDate.gridwidth = 4;
		constraintsJPanelDate.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelDate.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJPanelDate.weightx = 1.0;
		constraintsJPanelDate.weighty = 1.0;
		constraintsJPanelDate.ipadx = -3;
		constraintsJPanelDate.ipady = -17;
		constraintsJPanelDate.insets = new java.awt.Insets(3, 6, 3, 4);
		add(getJPanelDate(), constraintsJPanelDate);

		java.awt.GridBagConstraints constraintsJLabelProgram = new java.awt.GridBagConstraints();
		constraintsJLabelProgram.gridx = 1; constraintsJLabelProgram.gridy = 1;
		constraintsJLabelProgram.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJLabelProgram.ipadx = 7;
		constraintsJLabelProgram.ipady = -2;
		constraintsJLabelProgram.insets = new java.awt.Insets(21, 4, 7, 0);
		add(getJLabelProgram(), constraintsJLabelProgram);

		java.awt.GridBagConstraints constraintsJComboBoxProgram = new java.awt.GridBagConstraints();
		constraintsJComboBoxProgram.gridx = 2; constraintsJComboBoxProgram.gridy = 1;
		constraintsJComboBoxProgram.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJComboBoxProgram.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJComboBoxProgram.weightx = 1.0;
		constraintsJComboBoxProgram.ipadx = 23;
		constraintsJComboBoxProgram.insets = new java.awt.Insets(17, 1, 2, 17);
		add(getJComboBoxProgram(), constraintsJComboBoxProgram);

		java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
		constraintsJPanel1.gridx = 1; constraintsJPanel1.gridy = 4;
		constraintsJPanel1.gridwidth = 4;
		constraintsJPanel1.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanel1.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJPanel1.weightx = 1.0;
		constraintsJPanel1.weighty = 1.0;
		constraintsJPanel1.ipadx = 259;
		constraintsJPanel1.ipady = 9;
		constraintsJPanel1.insets = new java.awt.Insets(1, 6, 4, 4);
		add(getJPanel1(), constraintsJPanel1);

		java.awt.GridBagConstraints constraintsJPanelHourOffer = new java.awt.GridBagConstraints();
		constraintsJPanelHourOffer.gridx = 1; constraintsJPanelHourOffer.gridy = 3;
		constraintsJPanelHourOffer.gridwidth = 4;
		constraintsJPanelHourOffer.fill = java.awt.GridBagConstraints.BOTH;
		constraintsJPanelHourOffer.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJPanelHourOffer.weightx = 1.0;
		constraintsJPanelHourOffer.weighty = 1.0;
		constraintsJPanelHourOffer.ipadx = 406;
		constraintsJPanelHourOffer.ipady = 259;
		constraintsJPanelHourOffer.insets = new java.awt.Insets(4, 6, 1, 2);
		add(getJPanelHourOffer(), constraintsJPanelHourOffer);

		java.awt.GridBagConstraints constraintsJLabelArea = new java.awt.GridBagConstraints();
		constraintsJLabelArea.gridx = 3; constraintsJLabelArea.gridy = 1;
		constraintsJLabelArea.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJLabelArea.ipadx = 4;
		constraintsJLabelArea.ipady = -2;
		constraintsJLabelArea.insets = new java.awt.Insets(21, 17, 7, 0);
		add(getJLabelArea(), constraintsJLabelArea);

		java.awt.GridBagConstraints constraintsJTextFieldArea = new java.awt.GridBagConstraints();
		constraintsJTextFieldArea.gridx = 4; constraintsJTextFieldArea.gridy = 1;
		constraintsJTextFieldArea.fill = java.awt.GridBagConstraints.HORIZONTAL;
		constraintsJTextFieldArea.anchor = java.awt.GridBagConstraints.WEST;
		constraintsJTextFieldArea.weightx = 1.0;
		constraintsJTextFieldArea.ipadx = 145;
		constraintsJTextFieldArea.insets = new java.awt.Insets(18, 1, 4, 8);
		add(getJTextFieldArea(), constraintsJTextFieldArea);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}

	for( int i = 0; i < getEExchangePrgs().length; i++ )
		getJComboBoxProgram().addItem( getEExchangePrgs()[i] );

	// user code end
}

/**
 * Insert the method's description here.
 * Creation date: (8/7/2001 11:20:51 AM)
 * @return boolean
 */
public boolean isEditable() {
	return editable;
}


/**
 * Comment
 */
public void jButtonCancel_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	exit();

	return;
}


/**
 * Comment
 */
public void jButtonConfirm_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{
	//tell our table that we are done editing it
	getJPanelHourOffer().getJTableHour().editingStopped(
		new javax.swing.event.ChangeEvent(this) );

	int res = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to send this new offer?", "Offer Confirmation",
		javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE );

	if( res == javax.swing.JOptionPane.OK_OPTION )
	{
		com.cannontech.loadcontrol.messages.LMEnergyExchangeControlMsg s = new com.cannontech.loadcontrol.messages.LMEnergyExchangeControlMsg();

		s.setExpirationDateTime( getExpireCalendar().getTime() );
		s.setNotificationDateTime( getNotifCalendar().getTime() );
		s.setOfferDate( getOfferCalendar().getTime() );
		
		s.setYukonID( new Integer(getEExchangePrgs()[getJComboBoxProgram().getSelectedIndex()].getYukonID().intValue()) );
		s.setAmountRequested( getJPanelHourOffer().getTarget() );
		s.setPricesOffered( getJPanelHourOffer().getOfferPrices() );

		if( getMode() == MODE_REVISE )
		{
			s.setMessage("Offer revised by a TDC operator named : " + com.cannontech.common.util.CtiUtilities.getUserName() );
			s.setAdditionalInfo("Offer revised for program : " + getEExchangePrgs()[getJComboBoxProgram().getSelectedIndex()] );
			s.setCommand( new Integer(com.cannontech.loadcontrol.messages.LMEnergyExchangeControlMsg.OFFER_REVISION) );

			if( offerData != null )
				s.setOfferID( offerData.getOwnerOffer().getOfferID() );
		}
		else
		{
			s.setMessage("Offer created by a TDC operator named : " + com.cannontech.common.util.CtiUtilities.getUserName() );
			s.setAdditionalInfo("Offer created for program : " + getEExchangePrgs()[getJComboBoxProgram().getSelectedIndex()] );			
			s.setCommand( new Integer(com.cannontech.loadcontrol.messages.LMEnergyExchangeControlMsg.NEW_OFFER) );
		}
		
		com.cannontech.loadcontrol.LoadControlClientConnection.getInstance().write(s)	;


		exit();
	}

	return;
}


/**
 * Comment
 */
public void jComboBoxProgram_ActionPerformed(java.awt.event.ActionEvent actionEvent) 
{

	javax.swing.SwingUtilities.invokeLater( new Runnable()
	{
		public void run()
		{
			if( getJComboBoxProgram().getSelectedIndex() >= 0 )
				getJTextFieldArea().setText( getOwnerAreaStrings().get(
						getJComboBoxProgram().getSelectedIndex()).toString() );			
		}
		
	});

	
	return;
}


/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		JPanelCreateOffer aJPanelCreateOffer;
		aJPanelCreateOffer = new JPanelCreateOffer();
		frame.setContentPane(aJPanelCreateOffer);
		frame.setSize(aJPanelCreateOffer.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		exception.printStackTrace(System.out);
	}
}


/**
 * Insert the method's description here.
 * Creation date: (8/7/2001 12:40:31 PM)
 * @param JComboBox
 * @param cal java.util.GregorianCalendar
 */
private void setDateValues(com.cannontech.common.gui.util.DateComboBox box, java.util.Date date) 
{
	box.setSelectedDate( date );

	if( box == getDateComboExpire() )
		getJTextFieldExpireTime().setTimeText( date );
	else if( box == getDateComboNotify() )
		getJTextFieldNotifTime().setTimeText( date );
	
}


/**
 * Insert the method's description here.
 * Creation date: (8/7/2001 11:20:51 AM)
 * @param newEditable boolean
 */
public void setEditable(boolean newEditable) 
{
	editable = newEditable;

	getJTextFieldArea().setEnabled( editable );
	getJComboBoxProgram().setEnabled( editable );
	
	getDateComboDay().setEnabled( editable );
	getDateComboExpire().setEnabled( editable );
	getDateComboNotify().setEnabled( editable );
	getJTextFieldExpireTime().setEnabled( editable );
	getJTextFieldNotifTime().setEnabled( editable );

	
	getJPanelHourOffer().getTableModel().setEditable( editable );
	getJButtonConfirm().setEnabled( editable );
}


/**
 * Insert the method's description here.
 * Creation date: (8/14/2001 10:59:19 AM)
 * @param newMode int
 */
public void setMode(int newMode) 
{
	mode = newMode;

	//do not allow the user to change the ComboBox if we are Revising an offer
	getJComboBoxProgram().setEnabled( getMode() != MODE_REVISE );
	


}


/**
 * Insert the method's description here.
 * Creation date: (8/7/2001 11:44:41 AM)
 * @param offer com.cannontech.loadcontrol.eexchange.datamodels.OfferRowData
 */
public void setOfferData(com.cannontech.loadcontrol.eexchange.datamodels.OfferRowData offer) 
{
	offerData = offer;
	//set the values of the program and area name
	getJComboBoxProgram().setSelectedItem( offer.getEnergyExchangeProgram() );



	//set all of our Date and Time fields to the correct values
	setDateValues( getDateComboDay(), offer.getOwnerOffer().getOfferDate() );	
	setDateValues( getDateComboNotify(), offer.getCurrentRevision().getNotificationDateTime() );
	setDateValues( getDateComboExpire(), offer.getCurrentRevision().getOfferExpirationDateTime() );



	//set the values in our JTable
	double[] target = new double[offer.getCurrentRevision().getEnergyExchangeHourlyOffers().size()];
	double[] offerPrice = new double[offer.getCurrentRevision().getEnergyExchangeHourlyOffers().size()];	
	for( int i = 0; i < offer.getCurrentRevision().getEnergyExchangeHourlyOffers().size(); i++ )
	{
		target[i] = ((com.cannontech.loadcontrol.data.LMEnergyExchangeHourlyOffer)
			offer.getCurrentRevision().getEnergyExchangeHourlyOffers().get(i)).getAmountRequested().doubleValue();
		
		offerPrice[i] = ((com.cannontech.loadcontrol.data.LMEnergyExchangeHourlyOffer)
			offer.getCurrentRevision().getEnergyExchangeHourlyOffers().get(i)).getPrice().doubleValue() * .01;
	}

	getJPanelHourOffer().getTableModel().setRowData( offerPrice, target );	
}
}