package com.cannontech.export.gui;


import com.cannontech.export.ExportFormatBase;
import com.cannontech.export.ExportFormatTypes;
import com.cannontech.export.ExportPropertiesBase;
public class ExportGui extends javax.swing.JFrame implements java.awt.event.ActionListener, java.awt.event.ItemListener
{
	private javax.swing.JComboBox ivjFileFormatComboBox = null;
	private javax.swing.JLabel ivjFileFormatLabel = null;
	private javax.swing.JButton ivjAdvancedButton = null;
	private javax.swing.JPanel ivjFormatPanel = null;
	private javax.swing.JPanel ivjRunAsPanel = null;
	private javax.swing.JRadioButton ivjRunConsoleButton = null;
	private javax.swing.JRadioButton ivjRunOnceButton = null;
	private javax.swing.JPanel ivjJFrameContentPane = null;
	private javax.swing.JMenuItem ivjAboutMenuItem = null;
	private javax.swing.JMenuItem ivjExitMenuItem = null;
	private javax.swing.JMenuBar ivjExportGuiJMenuBar = null;
	private javax.swing.JMenu ivjFileMenu = null;
	private javax.swing.JMenuItem ivjHelpTopicsMenuItem = null;
	private javax.swing.ButtonGroup runAsButtonGroup = null;
	private javax.swing.JRadioButton ivjRunAsServiceButton = null;
	private javax.swing.JMenu ivjHelpMenu = null;
	private javax.swing.JButton ivjBrowseButton = null;
	private javax.swing.JLabel ivjFileDirectoryExportLabel = null;
	private javax.swing.JTextField ivjFileDirectoryTextField = null;
	private javax.swing.JButton ivjGenerateFileButton = null;
	private javax.swing.JPanel ivjGeneratePanel = null;
	private javax.swing.JCheckBox ivjStartServiceCheckBox = null;
	private javax.swing.JCheckBox ivjInstallServiceCheckBox = null;
	private javax.swing.JPanel ivjRunPanel = null;
	private javax.swing.JPanel ivjJPanel1 = null;
	private javax.swing.JCheckBox ivjStopServiceCheckBox = null;
	private javax.swing.JCheckBox ivjUninstallServiceCheckBox = null;
	private com.cannontech.export.ExportFormatBase formatBase = null;
	
	private AdvancedOptionsPanel advOptsPanel = null;
	private final String BATCHFILENAME= "export.bat";

	private final java.text.SimpleDateFormat DATE_FORMAT = new java.text.SimpleDateFormat("MM/dd/yyyy");
	private int RUN_ONCE = 0;
	private int RUN_CONSOLE = 1;
	private int RUN_AS_SERVICE = 2;
	private int selectedRunAsButton = -1;
	private ExportPropertiesBase exportProperties = new ExportPropertiesBase();
	
	/**
	 * ExportGui constructor comment.
	 */
	public ExportGui() {
		super();
		initialize();
	}
	/**
	 * Display popup frame of ExportGUI about information.
	 */
	private void about()
	{
		javax.swing.JFrame popupFrame = new javax.swing.JFrame();
		popupFrame.setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage("ctismall.gif"));
		javax.swing.JOptionPane.showMessageDialog(popupFrame,
		"This is version " + formatBase.getVersion() + "\nCopyright (C) 1999-2002 Cannon Technologies.",
		"About Yukon Export Client",javax.swing.JOptionPane.INFORMATION_MESSAGE);
	}

	/**
	 * Set exportProperties.
	 * @param exportProps ExportPropertiesBase
	 */
	private void setExportPropertes(ExportPropertiesBase exportProps)
	{
		exportProperties = exportProps;
	}
	
	/**
	 * Return exportProperties.
	 * @return ExportPropertiesBase
	 */
	private ExportPropertiesBase getExportProperties()
	{
		return exportProperties;
	}
	
	/**
	 * @see java.awt.event.ActionListener#actionPerformed(ActionEvent)
	 */
	public void actionPerformed(java.awt.event.ActionEvent event) 
	{
		if ( event.getSource() == getFileFormatComboBox())
		{
			String format = getFileFormatComboBox().getSelectedItem().toString();
			getExportProperties().setFormatID(ExportFormatTypes.getFormatTypeInt(format));
			
			if( getExportProperties().getFormatID() == com.cannontech.export.ExportFormatTypes.IONEVENTLOG_FORMAT)
				getAdvancedButton().setEnabled(false);
			else
				getAdvancedButton().setEnabled(true);
		}
		else if (event.getSource() == getRunOnceButton())
		{
			setSelectedRunAsButton(RUN_ONCE);
			getStartServiceCheckBox().setEnabled(false);
			getStopServiceCheckBox().setEnabled(false);
			getInstallServiceCheckBox().setEnabled(false);
			getUninstallServiceCheckBox().setEnabled(false);
		}
		else if (event.getSource() == getRunConsoleButton())
		{
			setSelectedRunAsButton(RUN_CONSOLE);
			getStartServiceCheckBox().setEnabled(false);
			getStopServiceCheckBox().setEnabled(false);
			getInstallServiceCheckBox().setEnabled(false);
			getUninstallServiceCheckBox().setEnabled(false);
		}
		else if (event.getSource() == getRunAsServiceButton())
		{
			setSelectedRunAsButton(RUN_AS_SERVICE);
			getStartServiceCheckBox().setEnabled(true);
			getStopServiceCheckBox().setEnabled(true);
			getInstallServiceCheckBox().setEnabled(true);		
			getUninstallServiceCheckBox().setEnabled(true);
		}
		else if (event.getSource() == getAdvancedButton())
		{
			AdvancedOptionsPanel advOpts = getAdvOptsPanel();
			advOpts.setValue(getExportProperties());		
			ExportPropertiesBase props = advOpts.showAdvancedOptions( this );
			if( props != null)
			{
				setExportPropertes( props);
			}
		}
		else if( event.getSource() == getExitMenuItem())
		{
			System.exit(0);
		}
		else if( event.getSource() == getHelpTopicsMenuItem())
		{
		}
		else if( event.getSource() == getAboutMenuItem())
		{
			about();
		}
		else if(event.getSource() == getGenerateFileButton())
		{
			formatBase = ExportFormatBase.createFileFormat(getExportProperties().getFormatID());
			formatBase.setExportProperties(getExportProperties());
			formatBase.setDirectory(getFileDirectoryTextField().getText());
			formatBase.setIsService(false);
			System.out.println("NEXT RUN TIME = " + formatBase.getNextRunTime().getTime());
			generateFile();
			System.out.println("NEXT RUN TIME(after generate) = " + formatBase.getNextRunTime().getTime());
		}
	}

	/**
	 * @see java.awt.event.ItemListener#itemStateChanged(ItemEvent)
	 */
	public void itemStateChanged(java.awt.event.ItemEvent event)
	{
		if (event.getStateChange() == java.awt.event.ItemEvent.SELECTED)
		{
			if (event.getSource() == getInstallServiceCheckBox())
			{
				getUninstallServiceCheckBox().setSelected(false);
				getStopServiceCheckBox().setSelected(false);
				getStopServiceCheckBox().setEnabled(false);
				getStartServiceCheckBox().setEnabled(true);
			}
			else if (event.getSource() == getUninstallServiceCheckBox())
			{
				getInstallServiceCheckBox().setSelected(false);
				getStartServiceCheckBox().setSelected(false);
				getStartServiceCheckBox().setEnabled(false);
				getStopServiceCheckBox().setEnabled(true);
			}
			else if (event.getSource() == getStartServiceCheckBox())
			{
				getUninstallServiceCheckBox().setSelected(false);
				getStopServiceCheckBox().setSelected(false);
			}
			else if (event.getSource() == getStopServiceCheckBox())
			{
				getInstallServiceCheckBox().setSelected(false);
				getStartServiceCheckBox().setSelected(false);
			}
		}
		else if( event.getStateChange() == java.awt.event.ItemEvent.DESELECTED)
		{
			if (event.getSource() == getInstallServiceCheckBox())
			{
				getStopServiceCheckBox().setEnabled(true);
				getStartServiceCheckBox().setEnabled(true);
			}
			else if (event.getSource() == getUninstallServiceCheckBox())
			{
				getStartServiceCheckBox().setEnabled(true);
				getStopServiceCheckBox().setEnabled(true);
			}
		}
	}
	/**
	 * Write batchString to the file BATCHFILENAME.
	 * @param batchString java.lang.String
	 */
	public void createBatchFile(String batchString)
	{
		char [] text = batchString.toCharArray();
		if (batchString != null)
		{
			try
			{
				java.io.FileWriter writer = new java.io.FileWriter( BATCHFILENAME );
	
				for( int i = 0; i < text.length; i++ )
				{
					if( new Character(text[i]) != null)
						writer.write( text[ i ] );
				}
						
				writer.close();
			}
			catch ( java.io.IOException e )
			{
				e.printStackTrace();
			}
		}
	
	}

	/**
	 * ExportFormatBase.runMainWithGui() for RUN_ONCE
	 * CreateBatchFile() and writeDatFile() for RUN_CONSOLE or RUN_AS_SERVICE and exits this application.
	 */
	public void generateFile()
	{
		if( getSelectedRunAsButton() == RUN_ONCE)
		{
			ExportFormatBase.runMainWithGui(formatBase);
			return;
		}
		
		String string = "";
		if( getSelectedRunAsButton() == RUN_CONSOLE)
		{
			string += "Wrapper.exe -c " + ExportFormatTypes.getFormatWrapperConf(getExportProperties().getFormatID());
		}
		else if( getSelectedRunAsButton() == RUN_AS_SERVICE)
		{
			if( getInstallServiceCheckBox().isSelected())
			{
				string += "Wrapper.exe -i " + ExportFormatTypes.getFormatWrapperConf(getExportProperties().getFormatID());
			}
			else if( getUninstallServiceCheckBox().isSelected())
			{
				string += "Wrapper.exe -r " + ExportFormatTypes.getFormatWrapperConf(getExportProperties().getFormatID());
			}
		
			if( getStartServiceCheckBox().isSelected())
			{
				string += "\r\n";
				string += "net start \"" + getServiceName() + "\" ";
			}
			else if( getStopServiceCheckBox().isSelected())
			{
				string += "\r\n";
				string += "net stop \"" + getServiceName() + "\"";
			}
		}
	
		formatBase.writeDatFile();
		createBatchFile(string);
	
		try
		{
			Runtime.getRuntime().exec("cmd /c\"start " + BATCHFILENAME + "\"");
		}
		catch(java.io.IOException ioe)
		{
			ioe.printStackTrace();
		}
		System.exit(0);
	
	}
	
	/**
	 * Returns a serviceName dependant on exportProperties.getFormatID().
	 * @return String
	 */
	private String getServiceName()
	{
		return com.cannontech.export.ExportFormatTypes.getFormatTypeName(getExportProperties().getFormatID());
	}
	
	/**
	 * Returns advOptsPanel for the selectedIndex of fileFormatComboBoxMethod.
	 * @return AdvancedOptionsPanel
	 */
	private AdvancedOptionsPanel getAdvOptsPanel()
	{
		if( advOptsPanel == null)
		{
			advOptsPanel  = new AdvancedOptionsPanel(getFileFormatComboBox().getSelectedIndex());
		}
		return advOptsPanel;
	}

	/**
	 * Return selectedRunAsButton.
	 * @return int
	 */
	private int getSelectedRunAsButton ()
	{
		return selectedRunAsButton;
	}
	
	/**
	 * Set selectedRunAsButton.
	 * Valid selected values are RUN_ONCE, RUN_CONSOLE, RUN_AS_SERVICE
	 * @param selected int
	 */
	private void setSelectedRunAsButton (int selected)
	{
		selectedRunAsButton = selected;
	}
	
	/**
	 * Return the AboutMenuItem property value.
	 * @return javax.swing.JMenuItem
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JMenuItem getAboutMenuItem() {
		if (ivjAboutMenuItem == null) {
			try {
				ivjAboutMenuItem = new javax.swing.JMenuItem();
				ivjAboutMenuItem.setName("AboutMenuItem");
				ivjAboutMenuItem.setText("About");
				// user code begin {1}
				ivjAboutMenuItem.addActionListener(this);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjAboutMenuItem;
	}
	/**
	 * Return the AdvancedButton property value.
	 * @return javax.swing.JButton
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JButton getAdvancedButton() {
		if (ivjAdvancedButton == null) {
			try {
				ivjAdvancedButton = new javax.swing.JButton();
				ivjAdvancedButton.setName("AdvancedButton");
				ivjAdvancedButton.setAlignmentX(java.awt.Component.CENTER_ALIGNMENT);
				ivjAdvancedButton.setText("Advanced ...");
				ivjAdvancedButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
				// user code begin {1}
				ivjAdvancedButton.addActionListener(this);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjAdvancedButton;
	}
	/**
	 * Return the BrowseButton property value.
	 * @return javax.swing.JButton
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JButton getBrowseButton() {
		if (ivjBrowseButton == null) {
			try {
				ivjBrowseButton = new javax.swing.JButton();
				ivjBrowseButton.setName("BrowseButton");
				ivjBrowseButton.setFont(new java.awt.Font("dialog", 0, 12));
				ivjBrowseButton.setText("Browse");
				ivjBrowseButton.setMargin(new java.awt.Insets(0, 2, 0, 2));
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjBrowseButton;
	}
	/**
	 * 
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88G99DBD5AEGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E155DD8FDCD4D53E274DFA3E77FC3B6EFB3479A9FA6B363631AF76BDAAAACAAAAA5B7CC3292D1A959935E4549A30E9C9E6FA01C1C0C1C77CC7C9B1A4996CAA7FB1A494D0A4B1CAD6D82524F2E0AEB0BA4C0CB3979D0AED5F6F1CF3FF675E39F38704DD5FE79F1F4F4FBB67FB7E7CFE67F7FE671C5F791DBB2330B5FFEADAF24AD6C1C8CE93643F0F1285A140AE8846295F5F05D8C6E83CC1D07D95GED9666
	DEA4E0AE64053E1BE0B08ACD3599105E836920AD89069D70F90B105BE969018FFE7854C15E4936F71E9B194FCE8372C92769BBF6E741F3A3D099E09DC0D3010C42233BF3E55C83690D72E7C249A90250F4ABA9F3F7E92E8A0F154B65C25E9E200C5BC819385DF9F27EA4402681C583A55E2A3419C9253B2A36C6CEF77DF82A30E2766E14EC42CB55BED25BED2C2EA4BFCD42FFD3C5248A016287702CEBBB57F73047B1D052E3365B9DF6C96C69AF91BDCE07CB2A2DBDC21F1F8CDA093CD43EE7CBB3E8DDC1880134
	73F6021DAAA3BAA9024F8DC01DC0CC467959F5328C0167268AB1BFFF5B2F0CE137B359965F2E4858FF4BDFD2A6061176B7FF18A5574B05F49B90137FCF56629165AF699B346A75610B8F318FD1E15807D7CB888F439D7106BC202ABB308F87BE44BEF4FE77BFC2D2F7CB4AA6BFFDE83DC356739DCA9F120E949B5E26F6F3F39A997BD048DBG948714F5A70CBBD0AB50CEEA2F5D06BF403331DBBA6C9898F0589B1D4EC3B60B6BB307C53441675ADA48113193E20F43E59184E6133125FBF464C1325C69ED0F0A8D
	1D925006C2CE7CC210247A14B41D3E05ADACCA7148EDCC3AD3695B4CBB095E6650318F014F49F23B8CDFCC712C3B941C0D65D794A769A2481BF4976A39F3A34A52EA38CEB016FF1A122EA34B14879BD2926FE2B2E404AB32B09DDF11CEF4DC85F89BD0BFD0G50D42048F054F10821F2B49D37008D396CE6DB7BE037536C128E8DDAED9651A56BFA4707A369DA0FD83D8F46DC0F69A538D2BDC651379F5355CBF4F0E9CA342C0F95AA3DB05EDF7B653D75EEDF5B5848473037144E6B3B599826F25CC9719A954E46
	B6094EA112BE8AF9A1C0ECDC72B3491AE63C876C9D2889288BE898E88AD048BDB8B6AB8D2517E87FED2AF1E1F5C3533643D374C8AEF30B5DAD196DBD62C9334BEA6E3609EEC1AEF3F79A51C737D73D7B683C6C819E1F08F651E5162C8EBB34EE9E9041885C2C4CA3E91BC99917C8F3BB2C83A2B098F08A586E5C34AD7034195D521F1D9633A4AAA5D87E93E9E4ACAF18CFC20B50GFCDEFD8F51571BF4AD0D024FF177202EDA57932CE1BA2C2353D1AFA756654073D3B0CA51D6DB5BE46DA1E218DDC3E8DB734B0C
	04BF141FG948494BA9D67D5FCA75ACFD376CD421E05AD3A76C3E846F4E68B51533576330436EF0808B79482B58175C760FE58D356B9C63BC61AA07331CD773641A0B9CD7A40F88C0F1BC71A7CCC551913B847185E6F59C0ECF79274AB98E8E6846A7E5F561918CD9EB23BC5344263AEB0A051220C84AB7BAF69E4EF90AF08F629C9F40AF68BFCF04BB6706374CC45BEFB9D5CF62E25B8D9E78E038139B9FEC37AE606C39BEAEB477C1BE83ED912DC566EC1C9EC97A549EA6FD36A7F0A4A6276DA425CF2DFA332C8
	DFE3200FC9C09977E2DF77E5ECD159D92B43F1EE5059C1E610EC2F03F45F4C0372D577625858CA09FF54495397E8DA49DFD3F2A9E3C76A0FE7FC65B53974D2F8E8ED60D2096926B8537F5816E56A0F6D3ECC7D312D4B9CF96C1AB275460E65FD1AC9EC5AF1512E320536CC32BE74B86CF6119AA42FA2B0BFA93E037443EA37CA272C16BED1EA37FEAB42DEFAAF99531CB2B226CE78BC61DEDCB3AE6E42B523705B1F89115F946A7A85D3EEBA1C92AD0FDB623D4A1A41E47A53FAE2E322CD9CGC59DF68C5AA5061F
	226B1B0C3BD3A91650389E1E47BE936D03AD12B8D04E46EA0B90D06705D7A01EB5C05AE8365AC4124530399788F6D434B989466CBCA11B48E03C8F56AD203A7B504EFF337EED151D4B13793043E6E36A033C8977D15D14EFD5753763BE666FEF6479877D66B3FF7FEC395A5F0F12738D77479BF201D8191BAA754A14117C7BD15E488DE47DF50B6787C5585648047CD49C423DE9C30EA66F2459B6286CF9F3B7EC0027CDB517997EE0167E784C4CA273779CEFBFAAEB1DC076AE56A63327D0B3E95369328E4052C7
	96A7393F13BED477258B64A7E721GF8865E0FBE7B14A2E2E3EA1FBC64FED237388CFD72D20EB5D02C858458E2C0FF68B3237A5CE3F157695AA635497B59D898A235FEE261A652EEA160D511286366EC755A5768F6BBFA2CF43B177575DA365AEE9936AA1B58E72F5565861F51A2FAD06742C6A2AB7187E4D8565BCB5B5F97FC7D1BA3962B64F0F167330798A06B6BDF1A55672708CD65A99B7C7475285C47FED5DF2B1A0BE51DFF311E1CAB78B9495ABDD0B2F8E120445CAD1508403C3616CE3113D6772059C607
	D3BEA75DD81EA14B9E9C494FC995F46F00F492107101F883AB7BCCA516ADFAG4B96D71332E7A06D811A7CG5A409B6F6422BCE74D974C1E9277C5D87FC00CE662F73176DE27FB8DD95F03F9FBB376D35E10CE82B2BE086B55298A35CDC44614793509228719FE6A9E545A441DC6422F93F05B03E8935FED5C2C3289B8F301DB5987B3086F891BD259DC1153FBB72561DC91502FD83E192C918150E690D098D09450B24EA3EC53286711A31E914EA3B7176B7976D98F497DFB48F7DF15FD7BCA224B2A07188F1F4C
	F187459BD4386C5BD760993C9572C29F427D7D79CABD7EDBE7B03EC5B37C713F015AC65D8CAD7FDFD07C688CAD7F52EA645F81F961B3107F1B74EC1377303E7FD026411BA04D7854541276BA9F561EED8ED13C7FE16D59E676FEBC5BF8A0AF7AE17457F336D0FF7D57F0667CB50E69C6E3364AEE5A9CD63B44EDE63A112C278E17354FEAC7AC12E2F022271BBA435E5C6C5F5FC8495177B7B2F2747D0D0DB9A37B125BF37C79A34C6F3B0F2E83E720FFCEA0066D2AA058B02483FF4DFDC1E24A32DD8E2ABE2F2998
	2F7FBE869F3072F272E0FDFE239275904E7570E5956AE18657434F2B153E0728BED7D7DFFEBDFCFED9F930BE679411BE47919DF0BD7C318675E0FA8431567D84EB02F467A3281B0335443F307074D11A1E405373760FA6BF297B37696825D1F90C772CC0084D299DDB487A6161691DB4BDA4208F3B301C74DB02C99C7C8809BB4FA74B096CA75CFA116C733D309942B4ECF70ABDC243CC224F5A8A742F1649BA90E64A6BBCBCD9BBAB5EA1B0ABFF3E8A4BCF144B85494F88F8B2B90A69D8D287601059D5B50B7ADD
	C5D8AF9A4A2D106B644DE267BE5676219AACB38C78E420D020F9C00933306D1E7D24BF12D522FBA6136F84898549BA1815CD569D366B9FA611DB32BC59C9D966CF8E552A7DC963EC463F8A1EC7E7635EBF7734FA6FB7DEE7CA41FDC3BBAEE7E64B7106594A5E4FFC0DB3F4ADA3F526C25E6259847BE1055A37A7F212D8F389904B0F744ACFD365B33966FC003E5B6AB941026D0E9A3F31EF539C794CA0BFC3BF5DA934BDF7AE1549F6ED954AB6BC87E5FB38EAE459D6D6E9E55BE1E079ECAF6BAF423DB48C5ADCB6
	877D329F6CA746236317495681FB887543EE22758B2360CC85549105E361590DFD8E7945F5C2EB40B15DBE47F414275822D8DFA7C7294662C8316CCB7657E01F2322304FBF29D17709584F7294F51FE756E8F5F24ECBA72B3C72093CF7F8555F33DF2B33BFA633FC261B6545FEFCD6E231B6A6772D3568839B9EC51FB576G75F3A05D81E4FB947D06056F920D313561A7F9649E6624792C6E09609830BB5EFD963C4F8EF31F00EB18D8B13EF8728369B8C6E1775CA804DF1D146C6FCCB161D1B6B653646751E3BB
	A94E64AF49A77AD8GF909C0DB9F0BB76C81EAG6AFC8C7D2068BCA2A371E021C30D12E46E692727A76C59C92BF8D10149C2477A96D4B53E983B3DE8FC750647DC0F790AEF97133135BD46FC45B40E97D2BCC00533F9F78B1DB7A49D88F9C90F21AD7C13096832EBAE1C1300A68385834D840A1D0B3A7C605DB2E114F3C20743598A8E23CD6562317E8D540CCFAFF756EA6BA54DD5765E2CF97EFC7B4E03241F26F92C7F699C37D03CC605B33D3CCC6788C937C1DE58BC544BE385E4CE664E07B59F2893488694B0
	9FF552711EFC1E56312DA316BE3227101BG896759C7797EFD6A0379235F9FFC12CF4E7B5D8EC9F28C1076917FAC1F48AEB91C9414E37679E43E011B5FAF3122B25E19CF56881B58CBE126677CE20285C13FC267239F74870A4D00F49C47EEAD7AFB7BF604A75DF3B80F59FFF79E68CB25F19DCCB6799F07EBCD7AE71B9BCC7AE71B1F1BC60E255EE2729FCB3D4D240E25B21F75D13A06E7BD8EFE6C6368475EF6GFD5B2647D1CFDFD3DB6E07F4G50940E1F25F8982497137A9CCFBCF0A9FAA56D6861819A3CDF
	13E6BCB28FDE8A0FF4BFF81AA62D7501194E9695789F3BE78AC61FC3CB8BE89C8DEC3FE348A9B26CF78574CC5C5B6B9679DCCDACB0F22C455D66F0DBC9B06ED2633F4CFF7C46AB7EEA7A8DBB2FB4413373B798FFCD2D52AB630467045F209F9BDBCB643319079C03A09F73115F643EE990148B830A86CAA475404F4DD8C04A4CBA10AB789F8756F654BA327FB6BBDC83E66A7C5AE4FC49E932561C9834B73A99AC63D7D808CFA55FD50AF2166CAF5FF0D06BAF93D95AC0964B826CEFD029DE19E1481F4C4B3CDD2F
	D7A69872A396202F1839033CE36347D71463072F15E3CCF741827407A652B8D25642F8C3A1D05DC20C9FFEDC053ED347C2AC9BC7E3BE13A0BD8DA882086D973BBEC67FF581E0D90BD02672B3F9EA19CA4C97255A5ACFDCD64BA1F3DFAB9DBD46EBFE9D7A17CD0B10575ABA5266B0248301C29621CFFB769C7ACBF937DCCF7DD4FFFE7C0CC5ECCE46ADD2FCDA72E4BC979E44F8E6519348533C1346C7A16D811A7C846AE2C1A90FFD7232B3EDB4768969A4A063E2AC7B27FA5E6EE2AC1B14C25B053487E872E2DC03
	D669468A03977BBFCF33FDFBB59D3308455AD859BA9AAB0CDA2C0D157D3082E3E551105770A472EF50756B26BD694DBFDC15E6FC3A76D1BECFEA7D2CBE0A47BC297533622B514FDA81F91DCFA17F9F550D4F8F3AE11C75960D399E6B171B7AC391CFE9E32343941F7914B6B61AF6004F87482BF99A7DA75BAEB20F03A09D8E948D3482A8A39A7636E874212EFA1F846AF44F9EG1EF0B8682AC4CE67E6AB2CB95425F219C9C413757129036ABED6C13BC72315716B0A7667A3AE24366F0C560EE98C45A7C4EB4734
	EFA70E699448DB9D0DE37A24573BCFE71E09B7C84FA8BCA7BE630FFF5DGE9AF68992D0FFA1462E14FE8FD5447EC6823C6C1DE599264FF32DE4DBF907060A58A4F08A57E785BD2C9FB7316E85F1B9A227832A55A7726562460FBD3994F029F7CAC7AA61BE96CE29E24E31EC519D2AAC9ECE999CFE75134A1865301DE71D8D2EEACB6FAE9367FABAF9EFFCBBCCD0FD85FCFD5E15F8BE3D09F6194AB03F4AB6FEF77BEFA3783E98F4786A8968869B00E2D98B1F6CA6A0ED75ECE4EA3FB5FC8BC34BE58D8A8156BFE68
	0040BF7FC075F943A57920FF5B3897DED69EEC4D9A5C655F879D5EB53A8FFA55AE7DF35C3F6E72BD47CD5E25FF0E7B49AE75B90E595E6F699E3FG46BA0E5BE38D5D1F13A01D759CE2F7B560F9226CB9340B27F792ACG52D3B93614E291100E6658404E7168173469AFAFC01547F8DCBDAE9EA3592EFA7EB39DA416222ED6F33DD414F1DDBD0FD8C8B95755732803C3F40D8E00F490D0A847BF27788CC84782E57C96718536CE393C1EEC21FEF0BD8A52A94BF83CC2F978DB677C1D39AED50FCC9783541676C03F
	9AFE0B7A8923D89B24AD9C2BECC41DCD64BAF025127354E2C8A782ED0D85BFA196737ECA73BAA16D811A82944E738C29FA36C06A7A13FF2BAA0F70A2BCC7DEB35E556511B9020E547ACC9BC16FE8FBDB04228A6F7B16B492F215731ED8C76C660847AA612BC66C7D1E83156A1870E26897094788AF60DDCB75EE250D39D564DCE026AF9011901D59EE91704E2373C3255C0396723E8EB927F6B81C569EB7F2447C03DF12F69A3B613022E4496F9B7DF41FD69E929B5A8A7230FC71A33D7C2297709C1BD1CF4E315D
	8E973D7CBD7A822913DFCF74D2474B9C2F77BD6B76727360249758D9F79ABC43496747638D062554BFEAE89AE18C50DFCD15E99E540D855AA62713DED0FCDAA64701EC22A7F246E7E7E350E9376310430379DFFE3649AB3F555C8DA7E126075CBC359EDA17B2B925252827DF38547993657C90F8B21D3CDDC6F49289E9567F53E5587F28252C7F3170CCDA4AE2BC2C7F8F150F567FD49599DF841F65C5257FB5AFEA7B7FFA952957E839C0F6B04B21C1582B6C5C16290FF3E250CE0F7F8CFB270C4C89F69BD1AE6B
	610A81F5BF1BDEE4725ADE44F37E16CA6DB91F6487C0FEA0AFF3DB3EDE1990480FFC91EDE6020EDDDDCF6DEAB1AFB3C7472E1E67F6957BA2536BEAF89A63D85C0C6975D863E8FA4579CF28886A5645A9FAED0B536A751B9EB2578F399C975DA253AA43A37F1CAB5BD31355A5764099E8083D24C68D0B15D9FFF23B36CC87ACA84DD651E64176FF78A931DB0C4F1032B8F6ECCCEECF550E8969EBD79C5A66CAC1EB1BA45F497367F84D7189322EC2F87E2CBE3D76A363B0C6B2B30D78AFFE62B6F435E1F185291247
	EE62B05630E89FE2D9AFA1967491E2CDAF61D8D75743C33EEFBAA02A6FE74B3E93D2D2857D784970CB72F7CC64E75EDFF6E2BC219E4F379110370273DED40FF11CBDAFE36C4350C04ADAA0BD8C948814CFE502F31300FF0975FA98DB2B0B0A95591F4BD247FE1A1EC8CA5E65C7761017194C2BDFD6E2BF052DFF10F55EE77323F33E28317E9C4F4398D8556FF03C16777A39F724F6A93FFB6742FA365F619814126BA2D9FFD716217E26C1FE746FD0FFF34AD0FFDB17217E5E20E5DBA1ED819ADEB6D67D5DCCDEB5
	14676426763775E547A9A177BB1C46F3094E831721EC1F7277892338EC1FB869F734DE09B76481D53D02E5DF4E47322D2FE059DDDDB40EG69A02030D7D0AF3756ABFAD95F00FA0902FCC3BC36F7228175D2970F6D8550329224A781CD0B9F2BDEE67FD1607DFDB9957B9B41F916A4E39FD6446358FFD064954FD47447D79DD6B72586E300FB9230BD219F5B33A420AFB7247B2EDED042E87E59537B746A050EDA6FE79F69551BB1C2BD96373A38076E9D8998233A7EC3F24F67AFC6F558E1915BA597E886798656
	0FAFDEF763B86BBDBD66FAAC566321B635ACC19B673B0262C9895AB81FE22F0644F8C3FFA24679027712BDB28A52F1C0D93F875F822886288D488264811A84B48DA882E89ED0ACD092D0462BB01F004ADEC5FD8F94970F20EFB9202E0A84229EBA727C6921895A6EFC555F5969F917DEBD1BDCBE40EF3DFFAE9B5FF8DDBB4EFA7346DC0F0D67C0B9993740D73563FC0162D3DF550E73DA3EDE07C01EF1B94E5FAB1DEA7E52F226170972B3C8FE06AE571E675BFC667D8CD519454B7D45A8275375F659F2ED0C7491
	368E2F5046C8BFF3E20CB48F7282D6205C8979DA7E31AB941EC9AB7C713F162E61D92FE9E32453A8DE741AB6C6DA5C05B152A6488BFE8D799B9B46B75E6F0D335E29B157E37DDAC167F7566BDABBF90B62392FEB6D64EA3E9E94C25E4457393ED3557C173DAE3FAB3812BD374233E8255E7DF1E5321E5CF5F25936157E66E13A577BA596391CC7FECE72DBAF2DDF0F5FD439FC18CEBD965F18DC09F15F19ABB166716ABE4496F0AC7CA39E9BDF495F695FC34EA1EE2F7D627B86014B74CF2A4F46064B9FAFAD3E2C
	BCD81FA3767A0F17BE34F774F8E954DE7DF86963FBFD6325CF6C550F17BE33D79DAFE55873FB09FF52877BC9A7AF77A2473E6058B25AA641CED9ADD2BF47DF25F2917C28C898A21EC4653AC831CE99FBCB05FD016F511790DB00AE77BB78FB7769A5447768355AECAC3D0116315A5D224475E1ACA1B2DA1DE6155C5BB876853753F3541FDF8636E7C8C21B8CB0E2ECAE17E3EFD07F3D9F529E0ED95DD8EEC2924EEBF739E21B432A4FE965175FCE5F3B2CBCD81F2FF35218B074F7995743B2A76AC6F883314F4E23
	EE32B876ABFA8F568569E10E7551F5E2B22427F1ECA9FFDFFF669B285787683E153B8A4E94C0ED2B90FF1462CEC8CF868A65F83BF33C3A48155B5762D52B34FB36ED5CBC709EC80B2B634ACC976BCCF4FD845E312BD0BF6E8254CF461B585F9B3AE8FC98529E20A020C81E77DFB4AF8652426AF8038928E1B56615F6796B83E987BFF73E697FBC0094A41709FCD32B2723FEF9287BFBA9770F2833CC8D36D9D855A0704F290D4A67C97F877B43CD171507EC87867A3D9698B767EA340383748CBB8152019C3BD1C0
	5B184AB18BFDB7AE9152063790BB160CF50D9C3BA5996B66F16CBDFAEE35C1FA18E32FEF27F39652D3B9F6FA87568D61D8DEBF72D84D313F74F35BDD03B17A6B4857C965B87C3DE54A67983AFE3218408F72687EE66EB95767F28C12407D14B5F4BD226BF7A7FC362C41F8643546116211985B42F8E4B454CBDC43FC8F7ADE78DAEDBC5268763E17C8255F1BE23C825CE309299B57B2DE5BE43C5007572DCE52CF334D5AE7A76F4AF6E2BFE751B5368C4AB72DC53D6D2ED264301CC7B924353EF3D55DE77A3E8614
	89DA2B48916AA3470C8A92A301CD577AADF92F445608924972AC615F4708D80BF11B6FABFD6347577078753235ACFEEC90928C39C0647E0F497ED6954ADE8678C8BAA4732D894AF482E17C58861F3DE58FF4127B199303766360A971B8964B8B2377E810C74E468E1BD7FCD922F1E17ABEDF3B683AE06D51440505736A382DC76E43B4F8327CC955FA7961BC7F1153FA79D170E47C5FB5796A2F4A047A0B01F2C4FFC9704CCAE6FAE27A7B178254DFE1322F7EF04C5186EB20CCEB32223FB349DA7D7D083E535DAE
	19DD122C07437DE24F39C38E8F4B3F6A2F449F252E284D26A901EDDC58CE647E335D2ADB0A15C94C5FC279B81C5AC6183E16F42975E583B949FDF1E0B26AF36310DEFEB04F2FAF544B0F6079C77669654FCB6663C1FFD72C976C1F59FCA5DD03E3A1BF111769903C570616EAE5CE5EAD0C34B660771FF1DCCCA98986C2BBE53CAAC5BBAE5F9DA076B1E0F6516F254A771B9F91FE729DE60D427B4164312CCB489BE3678DBE3C2BEB3CF571A95D97DA21DCE78A6AA2FB0737AE3E5B2F48635AB116B5F922AC4FB6D9
	CFC1AAF9D85B7FD92B349D58BFDA5BEAB2295A266D7934DDCD5F47E1FDF29B4985B23E2ADA52BE64164401438E1B43D5C2AE12AF08074DCE7A0BC350EB3C1318FAD1FD1FD233FE1F5F6F3A07253079BAD3FE127B14CB0BD9232CBFBDC8BE7B0FE9BFD62F1F9FD34F7A97635C256E5FE1470053E107E53E6470114FBB0E1C7826313565134FBF034FF2DC7C1A73983396D2934698DFDF592C6875350A82192F9CB2AFE9A77F6257C15CB2FF8163A877D6E29C258678BA0118BCE97C3BF741842777G15D5741DD3C8
	A781998DD836241A7F7E01E12C323FF3D490F09D5DFE68BDC1B766FF42EC31BAF04FE0BCBFBA0F7788E7389C8FD563DD40940E2DB90D58BC40D81F3BCC58670C3484C3C39A161DE642BEFB52304F0F533221101E8994434BCEAF40BEA7250D354F87DA14BE9FBC696FFE8C57EC46EF5BD7585F32F5A84311A1FEF744318B0508A5F1EC184607483B76E56989320F734F1FABB6D3AE10BB863BF851446D359996242277ADD6334D51777E9ED3599ED3F9C5311E3D63FC89B92EFC7EED1B727906F6054F4B5B474F87
	F5975921345DFF12FCE677G5BCE5133B274EFC2FA029C6F7A76G39F872974BEFF3B91C22CB9AE2A87D6598795CF15DF9F5ECEE9A34971E6E3B7F7B1ED79E523DE39A3D5E7CF156DBBF666F8A32186A4DF49EC725A7E8E22D2194DF2C4259FC59DF0573A596720EE6A448E75C4AEAB57F9040A3B3AEC5CFF5D43F8BB4E5636474EA79E94CCC501CF7E7D66B7537D0AED7A3BFDBFD6A25F66955BBA317136467C41FFA5D26710D0BF31C75FEB966FAEC5C1A8B687B5C195A71BCCE7160CC6DF8AE666BDF9864652E
	47710CACD0739F86FC727ACB994FF73E52BB27CF9B25AE21F0CD19A8C847E8B0466358109E0F951740A3E303F719BCC817ED506371DD213A7FCDF219CE79E903E700EE3DAB3C6E088365B24172B3821E73D475E2B7607A744EA912665F5FE3CB109CD3ADB8C5FCE8723BE530B6DA3F25BF4744EEFA59F97FD63A7FA5EDE0E34B30BBA9E64CCA60F7D31B05DF5133AC7BFC276AF3FD55650F5FF4DED69EF23C259A75101F0C5871EA5443B53CDCBB554D9E409A009896F49E632B9D9CFB0B47D74FF06CC35ADEA824
	67F16C59EA2C9B4B3106FDD8B711E313CE7B56FD278B6BB6E4A376DD9756ED655845FCF5DD26535682E58C7F2C7A3C44F47947F365E565417A7CC4012FDDC797286D1AE1F5549F8A82DD05F0FD7D0CE261101E4931D9F52857E80E5D6621363091ECE1A3E2B66ACBF5C05A42317994F3C2BA00E3E1ED58DEA04762F6E1FB319C7BF76A07A5C1BAE393E2B7D33EF9105E43312CA1EC2F06E3AFD15B1A8869A00ECD59076D05AA58B6ECEF86475E58066D4D6358753D581E4908D88C452AA0FD94087922E67A7B5E72
	1AC32F1B981E6749D6F03CEE12FD3A33F43E38C5727B0122051DE12FB80F6F45F598515F3C1A180EFC2E5C6A9A4B395282ED9042B3344728BDC39F2C9EB92656494FA79338BC3F7CC21167543E5164C99BC11ED023761C9B752552763FF70D56F67A88EDC77874357DAB6FD8C042E9016705FF659DCBF80C4E0719504682A0A6CFCC5DD85E55B5EC06FA1B95F9F2B7EB651965A1720BF6F2E9EA11759D6341F3D461E60CE1DCB964ADF74ED70A5CF1C35EF22F21F322866AB6EDC63967340DA56E2215DBD2494DF8
	ECAEC49983380C3FAC741663FEDAA690722772B277F93C7BD17D35B2563B06D046F91B756305A349986B23DBE11F2FEEF76CC3399321BC439E2018A1874E64B9E85F1D5FA8F2993723DC8DB97AF20DB4669DB9DA5D4D68C5994E6420DED676525FF19BF43949FDB213E15299E50C271C27FAF38D0A7E4F107FE3D64ABB2AC9399162982DC71ABB64FA0FF7ABED3C5623FC7ED32F525E3DF5FF7B99F7681C525ECA8FD993FA4DB637727BCEE76CCAFEF05B2572E3F52FF4A8F50B8AFD5BFE763C12FF3D67D25BE667
	7F0EA1DC7FA4EE9FA9EE253D12FD3E7C3E9ED472A7ED9B9B3F466D48AF04733B6202525E533DEAFE4C37F876FB358F9D8B7512F4EC5557A7E95E2E2E1735857638ADA357136F5A3E7775B35E7C5E574F78EA3BEF396E6D6AF26C7F5B4812B256C3FFDF9152A441C0DEFD078779260BA46430F769CD84B49D36D9E1DF529649405FEEF03B04CDDC47AD74450B188B1535293F7DF9EA0AE0E891563197D1DA8483F91B24C5C823AF1B348829124369F14ACADF0F64BEAFFCAF2CD3A32404BE8A3210AF81C94286A20B
	09FDC1C792526837F1A4A10BCA4F3EEED28BC97CF206292424C49256316F94701649DF0ACC02A42C67DF99002ABBFAEA3B06864FB96CDDBDD497DD6C7F2B681204EC7C66GD59528E22BDEF8786077E724127B7EE3A2346DF1899BD591D648CC3EE94715469FD58E2688994D42BA30B0E73F9934C4FF1634D55850CD55C53E49ED1384E3AB29DB8AF5CBE95D0FDB059452651D8A5EC3F0165B6EB47708D0A453E2F61D23AD104EEEBFADE4763A7A3AA983C9C8B95DFC9A585294494EED9556CB7D6C775DBC20459D
	CA53ED646DD1B963E3BAF4D4E9CE7A6725C872C75EE1923CD07E5F39F0B4CDCD9CB528498F6A92323DA67643BF2BDE9A356424BBD5D857A23CCD7643F651C50F21222549AC61EF79B78B19CE727B1E64A73541A25D7411661606EC206B2D3DA7486FB24330D99A71008B4A5D46B4B0A8D9ED25C74D6EFE096CED20D6031D7C2F83C28E4B36196DFD256C344BF4135C58C0BB1BC5FB6C9236D0F9C9ABA53C15AD53B7FDD0F0ACB6BCD5C8E996565B9CE6CB331998DD0B10A9753BC4F73F43E671B86BD9C39997B1A4
	1A8A4D6D645DA71DADA1F78EDC68F31E9BA6E547E5B7B3FBAB25A5492015709216437DE6973092DDAD9231DF072B1067DD711E347B51CFF6F4258849F2A749903C6F01C98F66B9E0358D4107A63A0C524159AD0134AE335D5D8BD38DA4B3E9A443AC4E2064BFE615DD734BD5DFD286CAD5C948D7EC2DCFF48C14B67676DA6DA2EFG748A4D3F4B1BA7E5CAB4E5F2BCBF5EF6EC615AEE3003A6A1F5202C0C7EDBCE7F2DA07F16D3241CA26595205CC4E144BFED3E877BCC0D07AFFEE478CB1AE1842527DE19F56353
	F5094B20F74D72B406C1B0AA25BE9F9C6896DDD707DC736E064018FFA5E364A42662A16D7E41B34A5C70C5CDBE36C650C2DF23A1F0919FBA127AA3AD3A177EDBB6E6C510DA9534EE95177F63B1498F0B7209C13B6938DDB4117F03C392B612E40B5DA4DF484BC0235BA4DF8A4362CE2F22A5A1DD3EF2865B63974BB0A6648259EBC3BACC3DBB4759740BABF312272688A9B06B25A12768ED59A0CC26A4ECE907FD235FF4C2A4A3EBE2B53DF69E5F85CC9F95FC50FF28C1EA7378C81A760FA969297FB712FE7D7FC6
	D2510F246C3E3A782F6A7B6A242BF6783D2FDE71AE73D9B35ECB507CB67B2F69D93A8970B36FE15CF83BE72F607FB7B35B874874B55B4EB55AAD6477B38F8DC922721BF0F3BC24FDB71611B365F71ABDC46E332ABA7F8BD0CB87882AF79427D5A3GG28EEGGD0CB818294G94G88G88G99DBD5AE2AF79427D5A3GG28EEGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG0FA3GGGG
**end of data**/
}
	/**
	 * Return the ExitMenuItem property value.
	 * @return javax.swing.JMenuItem
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JMenuItem getExitMenuItem() {
		if (ivjExitMenuItem == null) {
			try {
				ivjExitMenuItem = new javax.swing.JMenuItem();
				ivjExitMenuItem.setName("ExitMenuItem");
				ivjExitMenuItem.setText("Exit");
				// user code begin {1}
				ivjExitMenuItem.addActionListener(this);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjExitMenuItem;
	}
	/**
	 * Return the ExportGuiJMenuBar property value.
	 * @return javax.swing.JMenuBar
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JMenuBar getExportGuiJMenuBar() {
		if (ivjExportGuiJMenuBar == null) {
			try {
				ivjExportGuiJMenuBar = new javax.swing.JMenuBar();
				ivjExportGuiJMenuBar.setName("ExportGuiJMenuBar");
				ivjExportGuiJMenuBar.add(getFileMenu());
				ivjExportGuiJMenuBar.add(getHelpMenu());
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjExportGuiJMenuBar;
	}
	/**
	 * Return the FileDirectoryExportLabel property value.
	 * @return javax.swing.JLabel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JLabel getFileDirectoryExportLabel() {
		if (ivjFileDirectoryExportLabel == null) {
			try {
				ivjFileDirectoryExportLabel = new javax.swing.JLabel();
				ivjFileDirectoryExportLabel.setName("FileDirectoryExportLabel");
				ivjFileDirectoryExportLabel.setText("Directory:");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjFileDirectoryExportLabel;
	}
	/**
	 * Return the FileDirectoryTextField property value.
	 * @return javax.swing.JTextField
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JTextField getFileDirectoryTextField() {
		if (ivjFileDirectoryTextField == null) {
			try {
				ivjFileDirectoryTextField = new javax.swing.JTextField();
				ivjFileDirectoryTextField.setName("FileDirectoryTextField");
				ivjFileDirectoryTextField.setFont(new java.awt.Font("dialog", 0, 12));
				ivjFileDirectoryTextField.setText("c:\\yukon\\client\\export\\");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjFileDirectoryTextField;
	}
	/**
	 * Return the FileFormatComboBox property value.
	 * @return javax.swing.JComboBox
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JComboBox getFileFormatComboBox() {
		if (ivjFileFormatComboBox == null) {
			try {
				ivjFileFormatComboBox = new javax.swing.JComboBox();
				ivjFileFormatComboBox.setName("FileFormatComboBox");
				ivjFileFormatComboBox.setBackground(java.awt.SystemColor.activeCaptionText);
				// user code begin {1}
				ivjFileFormatComboBox.addActionListener(this);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjFileFormatComboBox;
	}
	/**
	 * Return the FileFormatLabel property value.
	 * @return javax.swing.JLabel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JLabel getFileFormatLabel() {
		if (ivjFileFormatLabel == null) {
			try {
				ivjFileFormatLabel = new javax.swing.JLabel();
				ivjFileFormatLabel.setName("FileFormatLabel");
				ivjFileFormatLabel.setText("File Format:");
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjFileFormatLabel;
	}
	/**
	 * Return the FileMenu property value.
	 * @return javax.swing.JMenu
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JMenu getFileMenu() {
		if (ivjFileMenu == null) {
			try {
				ivjFileMenu = new javax.swing.JMenu();
				ivjFileMenu.setName("FileMenu");
				ivjFileMenu.setText("File");
				ivjFileMenu.add(getExitMenuItem());
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjFileMenu;
	}
	/**
	 * Return the JPanel1 property value.
	 * @return javax.swing.JPanel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JPanel getFormatPanel() {
		if (ivjFormatPanel == null) {
			try {
				ivjFormatPanel = new javax.swing.JPanel();
				ivjFormatPanel.setName("FormatPanel");
				ivjFormatPanel.setLayout(new java.awt.GridBagLayout());
	
				java.awt.GridBagConstraints constraintsFileFormatComboBox = new java.awt.GridBagConstraints();
				constraintsFileFormatComboBox.gridx = 1; constraintsFileFormatComboBox.gridy = 0;
				constraintsFileFormatComboBox.fill = java.awt.GridBagConstraints.HORIZONTAL;
				constraintsFileFormatComboBox.anchor = java.awt.GridBagConstraints.EAST;
				constraintsFileFormatComboBox.weightx = 1.0;
				constraintsFileFormatComboBox.insets = new java.awt.Insets(0, 0, 0, 15);
				getFormatPanel().add(getFileFormatComboBox(), constraintsFileFormatComboBox);
	
				java.awt.GridBagConstraints constraintsFileFormatLabel = new java.awt.GridBagConstraints();
				constraintsFileFormatLabel.gridx = 0; constraintsFileFormatLabel.gridy = 0;
				constraintsFileFormatLabel.weightx = 1.0;
				constraintsFileFormatLabel.insets = new java.awt.Insets(0, 5, 0, 0);
				getFormatPanel().add(getFileFormatLabel(), constraintsFileFormatLabel);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjFormatPanel;
	}
	/**
	 * Return the GenerateFileButton property value.
	 * @return javax.swing.JButton
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JButton getGenerateFileButton() {
		if (ivjGenerateFileButton == null) {
			try {
				ivjGenerateFileButton = new javax.swing.JButton();
				ivjGenerateFileButton.setName("GenerateFileButton");
				ivjGenerateFileButton.setText("Generate File");
				// user code begin {1}
				ivjGenerateFileButton.addActionListener(this);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjGenerateFileButton;
	}
	/**
	 * Return the JPanel1 property value.
	 * @return javax.swing.JPanel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JPanel getGeneratePanel() {
		if (ivjGeneratePanel == null) {
			try {
				ivjGeneratePanel = new javax.swing.JPanel();
				ivjGeneratePanel.setName("GeneratePanel");
				ivjGeneratePanel.setLayout(new java.awt.GridBagLayout());
	
				java.awt.GridBagConstraints constraintsBrowseButton = new java.awt.GridBagConstraints();
				constraintsBrowseButton.gridx = 2; constraintsBrowseButton.gridy = 0;
				constraintsBrowseButton.anchor = java.awt.GridBagConstraints.EAST;
				constraintsBrowseButton.insets = new java.awt.Insets(5, 5, 5, 5);
				getGeneratePanel().add(getBrowseButton(), constraintsBrowseButton);
	
				java.awt.GridBagConstraints constraintsFileDirectoryExportLabel = new java.awt.GridBagConstraints();
				constraintsFileDirectoryExportLabel.gridx = 0; constraintsFileDirectoryExportLabel.gridy = 0;
				constraintsFileDirectoryExportLabel.anchor = java.awt.GridBagConstraints.WEST;
				constraintsFileDirectoryExportLabel.insets = new java.awt.Insets(5, 5, 5, 5);
				getGeneratePanel().add(getFileDirectoryExportLabel(), constraintsFileDirectoryExportLabel);
	
				java.awt.GridBagConstraints constraintsFileDirectoryTextField = new java.awt.GridBagConstraints();
				constraintsFileDirectoryTextField.gridx = 1; constraintsFileDirectoryTextField.gridy = 0;
				constraintsFileDirectoryTextField.fill = java.awt.GridBagConstraints.HORIZONTAL;
				constraintsFileDirectoryTextField.weightx = 1.0;
				constraintsFileDirectoryTextField.insets = new java.awt.Insets(5, 5, 5, 5);
				getGeneratePanel().add(getFileDirectoryTextField(), constraintsFileDirectoryTextField);
	
				java.awt.GridBagConstraints constraintsGenerateFileButton = new java.awt.GridBagConstraints();
				constraintsGenerateFileButton.gridx = 1; constraintsGenerateFileButton.gridy = 1;
				constraintsGenerateFileButton.insets = new java.awt.Insets(5, 5, 5, 5);
				getGeneratePanel().add(getGenerateFileButton(), constraintsGenerateFileButton);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjGeneratePanel;
	}
	/**
	 * Return the JMenu2 property value.
	 * @return javax.swing.JMenu
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JMenu getHelpMenu() {
		if (ivjHelpMenu == null) {
			try {
				ivjHelpMenu = new javax.swing.JMenu();
				ivjHelpMenu.setName("HelpMenu");
				ivjHelpMenu.setText("Help");
				ivjHelpMenu.setActionCommand("HelpMenu");
				ivjHelpMenu.add(getHelpTopicsMenuItem());
				ivjHelpMenu.add(getAboutMenuItem());
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjHelpMenu;
	}
	/**
	 * Return the HelpTopicsMenuItem property value.
	 * @return javax.swing.JMenuItem
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JMenuItem getHelpTopicsMenuItem() {
		if (ivjHelpTopicsMenuItem == null) {
			try {
				ivjHelpTopicsMenuItem = new javax.swing.JMenuItem();
				ivjHelpTopicsMenuItem.setName("HelpTopicsMenuItem");
				ivjHelpTopicsMenuItem.setText("Help Topics");
				// user code begin {1}
				ivjHelpTopicsMenuItem.addActionListener(this);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjHelpTopicsMenuItem;
	}
	/**
	 * Return the InstallServiceCheckBox property value.
	 * @return javax.swing.JCheckBox
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JCheckBox getInstallServiceCheckBox() {
		if (ivjInstallServiceCheckBox == null) {
			try {
				ivjInstallServiceCheckBox = new javax.swing.JCheckBox();
				ivjInstallServiceCheckBox.setName("InstallServiceCheckBox");
				ivjInstallServiceCheckBox.setText("Install");
				ivjInstallServiceCheckBox.setFont(new java.awt.Font("dialog", 0, 12));
				ivjInstallServiceCheckBox.setEnabled(false);
				// user code begin {1}
				ivjInstallServiceCheckBox.addItemListener(this);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjInstallServiceCheckBox;
	}
	/**
	 * Return the JFrameContentPane property value.
	 * @return javax.swing.JPanel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JPanel getJFrameContentPane() {
		if (ivjJFrameContentPane == null) {
			try {
				ivjJFrameContentPane = new javax.swing.JPanel();
				ivjJFrameContentPane.setName("JFrameContentPane");
				ivjJFrameContentPane.setLayout(new java.awt.GridBagLayout());
	
				java.awt.GridBagConstraints constraintsFormatPanel = new java.awt.GridBagConstraints();
				constraintsFormatPanel.gridx = 0; constraintsFormatPanel.gridy = 0;
				constraintsFormatPanel.fill = java.awt.GridBagConstraints.BOTH;
				constraintsFormatPanel.weightx = 1.0;
				constraintsFormatPanel.weighty = 1.0;
				constraintsFormatPanel.insets = new java.awt.Insets(10, 10, 5, 10);
				getJFrameContentPane().add(getFormatPanel(), constraintsFormatPanel);
	
				java.awt.GridBagConstraints constraintsRunAsPanel = new java.awt.GridBagConstraints();
				constraintsRunAsPanel.gridx = 0; constraintsRunAsPanel.gridy = 1;
				constraintsRunAsPanel.fill = java.awt.GridBagConstraints.BOTH;
				constraintsRunAsPanel.weightx = 1.0;
				constraintsRunAsPanel.weighty = 1.0;
				constraintsRunAsPanel.insets = new java.awt.Insets(5, 10, 10, 10);
				getJFrameContentPane().add(getRunAsPanel(), constraintsRunAsPanel);
	
				java.awt.GridBagConstraints constraintsGeneratePanel = new java.awt.GridBagConstraints();
				constraintsGeneratePanel.gridx = 0; constraintsGeneratePanel.gridy = 2;
				constraintsGeneratePanel.fill = java.awt.GridBagConstraints.BOTH;
				constraintsGeneratePanel.weightx = 1.0;
				constraintsGeneratePanel.weighty = 1.0;
				constraintsGeneratePanel.insets = new java.awt.Insets(5, 10, 10, 10);
				getJFrameContentPane().add(getGeneratePanel(), constraintsGeneratePanel);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjJFrameContentPane;
	}
/**
 * Return the JPanel1 property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJPanel1() {
	if (ivjJPanel1 == null) {
		try {
			ivjJPanel1 = new javax.swing.JPanel();
			ivjJPanel1.setName("JPanel1");
			ivjJPanel1.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsStartServiceCheckBox = new java.awt.GridBagConstraints();
			constraintsStartServiceCheckBox.gridx = 0; constraintsStartServiceCheckBox.gridy = 1;
			constraintsStartServiceCheckBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStartServiceCheckBox.insets = new java.awt.Insets(0, 5, 0, 5);
			getJPanel1().add(getStartServiceCheckBox(), constraintsStartServiceCheckBox);

			java.awt.GridBagConstraints constraintsInstallServiceCheckBox = new java.awt.GridBagConstraints();
			constraintsInstallServiceCheckBox.gridx = 0; constraintsInstallServiceCheckBox.gridy = 0;
			constraintsInstallServiceCheckBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsInstallServiceCheckBox.insets = new java.awt.Insets(0, 5, 0, 5);
			getJPanel1().add(getInstallServiceCheckBox(), constraintsInstallServiceCheckBox);

			java.awt.GridBagConstraints constraintsUninstallServiceCheckBox = new java.awt.GridBagConstraints();
			constraintsUninstallServiceCheckBox.gridx = 1; constraintsUninstallServiceCheckBox.gridy = 0;
			constraintsUninstallServiceCheckBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsUninstallServiceCheckBox.insets = new java.awt.Insets(0, 5, 0, 5);
			getJPanel1().add(getUninstallServiceCheckBox(), constraintsUninstallServiceCheckBox);

			java.awt.GridBagConstraints constraintsStopServiceCheckBox = new java.awt.GridBagConstraints();
			constraintsStopServiceCheckBox.gridx = 1; constraintsStopServiceCheckBox.gridy = 1;
			constraintsStopServiceCheckBox.anchor = java.awt.GridBagConstraints.WEST;
			constraintsStopServiceCheckBox.insets = new java.awt.Insets(0, 5, 0, 5);
			getJPanel1().add(getStopServiceCheckBox(), constraintsStopServiceCheckBox);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJPanel1;
}
	/**
	 * Insert the method's description here.
	 * Creation date: (4/11/2002 3:05:31 PM)
	 * @return javax.swing.ButtonGroup
	 */
	public javax.swing.ButtonGroup getRunAsButtonGroup()
	{
		if (runAsButtonGroup == null)
		{
			runAsButtonGroup = new javax.swing.ButtonGroup();
			runAsButtonGroup.add(getRunOnceButton());
			runAsButtonGroup.add(getRunConsoleButton());
			runAsButtonGroup.add(getRunAsServiceButton());
		}
		return runAsButtonGroup;
	}
	/**
	 * Return the RunAsPanel property value.
	 * @return javax.swing.JPanel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JPanel getRunAsPanel() {
	if (ivjRunAsPanel == null) {
		try {
			ivjRunAsPanel = new javax.swing.JPanel();
			ivjRunAsPanel.setName("RunAsPanel");
			ivjRunAsPanel.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsAdvancedButton = new java.awt.GridBagConstraints();
			constraintsAdvancedButton.gridx = 1; constraintsAdvancedButton.gridy = 0;
constraintsAdvancedButton.gridheight = 2;
			constraintsAdvancedButton.weightx = 1.0;
			constraintsAdvancedButton.weighty = 1.0;
			constraintsAdvancedButton.insets = new java.awt.Insets(5, 5, 5, 5);
			getRunAsPanel().add(getAdvancedButton(), constraintsAdvancedButton);

			java.awt.GridBagConstraints constraintsRunPanel = new java.awt.GridBagConstraints();
			constraintsRunPanel.gridx = 0; constraintsRunPanel.gridy = 0;
constraintsRunPanel.gridheight = 3;
			constraintsRunPanel.fill = java.awt.GridBagConstraints.BOTH;
			constraintsRunPanel.weightx = 1.0;
			constraintsRunPanel.weighty = 1.0;
			constraintsRunPanel.insets = new java.awt.Insets(4, 4, 4, 4);
			getRunAsPanel().add(getRunPanel(), constraintsRunPanel);

			java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.GridBagConstraints();
			constraintsJPanel1.gridx = 1; constraintsJPanel1.gridy = 2;
			constraintsJPanel1.fill = java.awt.GridBagConstraints.BOTH;
			constraintsJPanel1.weightx = 1.0;
			constraintsJPanel1.weighty = 1.0;
			constraintsJPanel1.insets = new java.awt.Insets(4, 4, 4, 4);
			getRunAsPanel().add(getJPanel1(), constraintsJPanel1);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjRunAsPanel;
}
	/**
	 * Return the RunAsService property value.
	 * @return javax.swing.JRadioButton
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JRadioButton getRunAsServiceButton() {
		if (ivjRunAsServiceButton == null) {
			try {
				ivjRunAsServiceButton = new javax.swing.JRadioButton();
				ivjRunAsServiceButton.setName("RunAsServiceButton");
				ivjRunAsServiceButton.setText("Run As Service");
				ivjRunAsServiceButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
				// user code begin {1}
				ivjRunAsServiceButton.addActionListener(this);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjRunAsServiceButton;
	}
	/**
	 * Return the RunConsoleButton property value.
	 * @return javax.swing.JRadioButton
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JRadioButton getRunConsoleButton() {
		if (ivjRunConsoleButton == null) {
			try {
				ivjRunConsoleButton = new javax.swing.JRadioButton();
				ivjRunConsoleButton.setName("RunConsoleButton");
				ivjRunConsoleButton.setText("Run In Console");
				ivjRunConsoleButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
				// user code begin {1}
				ivjRunConsoleButton.addActionListener(this);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjRunConsoleButton;
	}
	/**
	 * Return the RunOnceButton property value.
	 * @return javax.swing.JRadioButton
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JRadioButton getRunOnceButton() {
		if (ivjRunOnceButton == null) {
			try {
				ivjRunOnceButton = new javax.swing.JRadioButton();
				ivjRunOnceButton.setName("RunOnceButton");
				ivjRunOnceButton.setSelected(true);
				ivjRunOnceButton.setText("Run One Time");
				ivjRunOnceButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
				// user code begin {1}
				ivjRunOnceButton.addActionListener(this);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjRunOnceButton;
	}
	/**
	 * Return the RunPanel property value.
	 * @return javax.swing.JPanel
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JPanel getRunPanel() {
		if (ivjRunPanel == null) {
			try {
				ivjRunPanel = new javax.swing.JPanel();
				ivjRunPanel.setName("RunPanel");
				ivjRunPanel.setLayout(new java.awt.GridBagLayout());
	
				java.awt.GridBagConstraints constraintsRunOnceButton = new java.awt.GridBagConstraints();
				constraintsRunOnceButton.gridx = 1; constraintsRunOnceButton.gridy = 1;
				constraintsRunOnceButton.anchor = java.awt.GridBagConstraints.WEST;
				constraintsRunOnceButton.insets = new java.awt.Insets(0, 5, 10, 0);
				getRunPanel().add(getRunOnceButton(), constraintsRunOnceButton);
	
				java.awt.GridBagConstraints constraintsRunConsoleButton = new java.awt.GridBagConstraints();
				constraintsRunConsoleButton.gridx = 1; constraintsRunConsoleButton.gridy = 2;
				constraintsRunConsoleButton.anchor = java.awt.GridBagConstraints.WEST;
				constraintsRunConsoleButton.insets = new java.awt.Insets(0, 5, 10, 0);
				getRunPanel().add(getRunConsoleButton(), constraintsRunConsoleButton);
	
				java.awt.GridBagConstraints constraintsRunAsServiceButton = new java.awt.GridBagConstraints();
				constraintsRunAsServiceButton.gridx = 1; constraintsRunAsServiceButton.gridy = 3;
				constraintsRunAsServiceButton.anchor = java.awt.GridBagConstraints.WEST;
				constraintsRunAsServiceButton.insets = new java.awt.Insets(0, 5, 0, 0);
				getRunPanel().add(getRunAsServiceButton(), constraintsRunAsServiceButton);
				// user code begin {1}
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjRunPanel;
	}
	/**
	 * Return the StartServiceCheckBox property value.
	 * @return javax.swing.JCheckBox
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private javax.swing.JCheckBox getStartServiceCheckBox() {
		if (ivjStartServiceCheckBox == null) {
			try {
				ivjStartServiceCheckBox = new javax.swing.JCheckBox();
				ivjStartServiceCheckBox.setName("StartServiceCheckBox");
				ivjStartServiceCheckBox.setText("Start");
				ivjStartServiceCheckBox.setFont(new java.awt.Font("dialog", 0, 12));
				ivjStartServiceCheckBox.setEnabled(false);
				// user code begin {1}
				ivjStartServiceCheckBox.addItemListener(this);
				// user code end
			} catch (java.lang.Throwable ivjExc) {
				// user code begin {2}
				// user code end
				handleException(ivjExc);
			}
		}
		return ivjStartServiceCheckBox;
	}
/**
 * Return the JCheckBox2 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getStopServiceCheckBox() {
	if (ivjStopServiceCheckBox == null) {
		try {
			ivjStopServiceCheckBox = new javax.swing.JCheckBox();
			ivjStopServiceCheckBox.setName("StopServiceCheckBox");
			ivjStopServiceCheckBox.setFont(new java.awt.Font("dialog", 0, 12));
			ivjStopServiceCheckBox.setText("Stop");
			ivjStopServiceCheckBox.setEnabled(false);
			ivjStopServiceCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.S_RESIZE_CURSOR));
			// user code begin {1}
			ivjStopServiceCheckBox.addItemListener(this);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStopServiceCheckBox;
}
/**
 * Return the JCheckBox1 property value.
 * @return javax.swing.JCheckBox
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JCheckBox getUninstallServiceCheckBox() {
	if (ivjUninstallServiceCheckBox == null) {
		try {
			ivjUninstallServiceCheckBox = new javax.swing.JCheckBox();
			ivjUninstallServiceCheckBox.setName("UninstallServiceCheckBox");
			ivjUninstallServiceCheckBox.setFont(new java.awt.Font("dialog", 0, 12));
			ivjUninstallServiceCheckBox.setText("Uninstall");
			ivjUninstallServiceCheckBox.setEnabled(false);
			// user code begin {1}
			ivjUninstallServiceCheckBox.addItemListener(this);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjUninstallServiceCheckBox;
}
	/**
	 * Called whenever the part throws an exception.
	 * @param exception java.lang.Throwable
	 */
	private void handleException(java.lang.Throwable exception) {
	
		/* Uncomment the following lines to print uncaught exceptions to stdout */
		// com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
		// exception.printStackTrace(System.out);
	}
	/**
	 * Initialize the class.
	 */
	/* WARNING: THIS METHOD WILL BE REGENERATED. */
	private void initialize() {
		try {
			// user code begin {1}
			// user code end
			setName("ExportGui");
			setJMenuBar(getExportGuiJMenuBar());
			setSize(346, 377);
			setTitle("Export File Client");
			setContentPane(getJFrameContentPane());
		} catch (java.lang.Throwable ivjExc) {
			handleException(ivjExc);
		}
		// user code begin {2}
		getRunAsButtonGroup();
		/*for( int i = 0; i < ExportFormatTypes.formatTypeNames.length; i++)
		{
			getFileFormatComboBox().addItem(ExportFormatTypes.formatTypeNames[i]);
		}*/
		getFileFormatComboBox().addItem(ExportFormatTypes.getFormatTypeName(com.cannontech.export.ExportFormatTypes.CSVBILLING_FORMAT));
		getFileFormatComboBox().addItem(ExportFormatTypes.getFormatTypeName(com.cannontech.export.ExportFormatTypes.DBPURGE_FORMAT));
		setSelectedRunAsButton(RUN_ONCE);
	
		// user code end
	}
	/**
	 * main entrypoint - starts the part when it is run as an application
	 * @param args java.lang.String[]
	 */
	public static void main(java.lang.String[] args)
	{
		try
		{
			System.setProperty("cti.app.name", "Export");
			javax.swing.UIManager.setLookAndFeel( javax.swing.UIManager.getSystemLookAndFeelClassName());		
			ExportGui aExportGui;
			aExportGui = new ExportGui();
			aExportGui.addWindowListener(new java.awt.event.WindowAdapter(){
					public void windowClosing(java.awt.event.WindowEvent e){ 
						System.exit(0);
					};
				});
	
			//set the app to start as close to the center as you can....
			//  only works with small gui interfaces.
			java.awt.Dimension d = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
			aExportGui.setLocation((int)(d.width * .3),(int)(d.height * .2));
			aExportGui.show();
					
		}
		catch (Throwable exception)
		{
			System.err.println("Exception occurred in main() of java.lang.Object");
			exception.printStackTrace(System.out);
		}
	}
}
