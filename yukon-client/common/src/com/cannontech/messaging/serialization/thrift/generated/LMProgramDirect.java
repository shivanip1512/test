/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-09-24")
public class LMProgramDirect implements org.apache.thrift.TBase<LMProgramDirect, LMProgramDirect._Fields>, java.io.Serializable, Cloneable, Comparable<LMProgramDirect> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("LMProgramDirect");

  private static final org.apache.thrift.protocol.TField _BASE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_baseMessage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField _CURRENT_GEAR_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("_currentGearNumber", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _LAST_GROUP_CONTROLLED_FIELD_DESC = new org.apache.thrift.protocol.TField("_lastGroupControlled", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField _DIRECT_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_directStartTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField _DIRECTSTOP_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_directstopTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField _NOTIFY_ACTIVE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_notifyActiveTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField _NOTIFY_INACTIVE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_notifyInactiveTime", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField _STARTED_RAMPING_OUT_FIELD_DESC = new org.apache.thrift.protocol.TField("_startedRampingOut", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField _TRIGGER_OFFSET_FIELD_DESC = new org.apache.thrift.protocol.TField("_triggerOffset", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField _TRIGGER_RESTORE_OFFSET_FIELD_DESC = new org.apache.thrift.protocol.TField("_triggerRestoreOffset", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField _CONSTRAINT_OVERRIDE_FIELD_DESC = new org.apache.thrift.protocol.TField("_constraintOverride", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField _LM_PROGRAM_DIRECT_GEARS_FIELD_DESC = new org.apache.thrift.protocol.TField("_lmProgramDirectGears", org.apache.thrift.protocol.TType.LIST, (short)12);
  private static final org.apache.thrift.protocol.TField _LM_PROGRAM_DIRECT_GROUPS_FIELD_DESC = new org.apache.thrift.protocol.TField("_lmProgramDirectGroups", org.apache.thrift.protocol.TType.LIST, (short)13);
  private static final org.apache.thrift.protocol.TField _ACTIVE_MASTERS_FIELD_DESC = new org.apache.thrift.protocol.TField("_activeMasters", org.apache.thrift.protocol.TType.LIST, (short)14);
  private static final org.apache.thrift.protocol.TField _ACTIVE_SUBORDINATES_FIELD_DESC = new org.apache.thrift.protocol.TField("_activeSubordinates", org.apache.thrift.protocol.TType.LIST, (short)15);
  private static final org.apache.thrift.protocol.TField _ORIGIN_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("_originSource", org.apache.thrift.protocol.TType.STRING, (short)16);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new LMProgramDirectStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new LMProgramDirectTupleSchemeFactory();

  private @org.apache.thrift.annotation.Nullable LMProgramBase _baseMessage; // required
  private int _currentGearNumber; // required
  private int _lastGroupControlled; // required
  private long _directStartTime; // required
  private long _directstopTime; // required
  private long _notifyActiveTime; // required
  private long _notifyInactiveTime; // required
  private long _startedRampingOut; // required
  private int _triggerOffset; // required
  private int _triggerRestoreOffset; // required
  private boolean _constraintOverride; // required
  private @org.apache.thrift.annotation.Nullable java.util.List<LMProgramDirectGear> _lmProgramDirectGears; // required
  private @org.apache.thrift.annotation.Nullable java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> _lmProgramDirectGroups; // required
  private @org.apache.thrift.annotation.Nullable java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> _activeMasters; // required
  private @org.apache.thrift.annotation.Nullable java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> _activeSubordinates; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _originSource; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _BASE_MESSAGE((short)1, "_baseMessage"),
    _CURRENT_GEAR_NUMBER((short)2, "_currentGearNumber"),
    _LAST_GROUP_CONTROLLED((short)3, "_lastGroupControlled"),
    _DIRECT_START_TIME((short)4, "_directStartTime"),
    _DIRECTSTOP_TIME((short)5, "_directstopTime"),
    _NOTIFY_ACTIVE_TIME((short)6, "_notifyActiveTime"),
    _NOTIFY_INACTIVE_TIME((short)7, "_notifyInactiveTime"),
    _STARTED_RAMPING_OUT((short)8, "_startedRampingOut"),
    _TRIGGER_OFFSET((short)9, "_triggerOffset"),
    _TRIGGER_RESTORE_OFFSET((short)10, "_triggerRestoreOffset"),
    _CONSTRAINT_OVERRIDE((short)11, "_constraintOverride"),
    _LM_PROGRAM_DIRECT_GEARS((short)12, "_lmProgramDirectGears"),
    _LM_PROGRAM_DIRECT_GROUPS((short)13, "_lmProgramDirectGroups"),
    _ACTIVE_MASTERS((short)14, "_activeMasters"),
    _ACTIVE_SUBORDINATES((short)15, "_activeSubordinates"),
    _ORIGIN_SOURCE((short)16, "_originSource");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _BASE_MESSAGE
          return _BASE_MESSAGE;
        case 2: // _CURRENT_GEAR_NUMBER
          return _CURRENT_GEAR_NUMBER;
        case 3: // _LAST_GROUP_CONTROLLED
          return _LAST_GROUP_CONTROLLED;
        case 4: // _DIRECT_START_TIME
          return _DIRECT_START_TIME;
        case 5: // _DIRECTSTOP_TIME
          return _DIRECTSTOP_TIME;
        case 6: // _NOTIFY_ACTIVE_TIME
          return _NOTIFY_ACTIVE_TIME;
        case 7: // _NOTIFY_INACTIVE_TIME
          return _NOTIFY_INACTIVE_TIME;
        case 8: // _STARTED_RAMPING_OUT
          return _STARTED_RAMPING_OUT;
        case 9: // _TRIGGER_OFFSET
          return _TRIGGER_OFFSET;
        case 10: // _TRIGGER_RESTORE_OFFSET
          return _TRIGGER_RESTORE_OFFSET;
        case 11: // _CONSTRAINT_OVERRIDE
          return _CONSTRAINT_OVERRIDE;
        case 12: // _LM_PROGRAM_DIRECT_GEARS
          return _LM_PROGRAM_DIRECT_GEARS;
        case 13: // _LM_PROGRAM_DIRECT_GROUPS
          return _LM_PROGRAM_DIRECT_GROUPS;
        case 14: // _ACTIVE_MASTERS
          return _ACTIVE_MASTERS;
        case 15: // _ACTIVE_SUBORDINATES
          return _ACTIVE_SUBORDINATES;
        case 16: // _ORIGIN_SOURCE
          return _ORIGIN_SOURCE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___CURRENTGEARNUMBER_ISSET_ID = 0;
  private static final int ___LASTGROUPCONTROLLED_ISSET_ID = 1;
  private static final int ___DIRECTSTARTTIME_ISSET_ID = 2;
  private static final int ___DIRECTSTOPTIME_ISSET_ID = 3;
  private static final int ___NOTIFYACTIVETIME_ISSET_ID = 4;
  private static final int ___NOTIFYINACTIVETIME_ISSET_ID = 5;
  private static final int ___STARTEDRAMPINGOUT_ISSET_ID = 6;
  private static final int ___TRIGGEROFFSET_ISSET_ID = 7;
  private static final int ___TRIGGERRESTOREOFFSET_ISSET_ID = 8;
  private static final int ___CONSTRAINTOVERRIDE_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._BASE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_baseMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LMProgramBase.class)));
    tmpMap.put(_Fields._CURRENT_GEAR_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("_currentGearNumber", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._LAST_GROUP_CONTROLLED, new org.apache.thrift.meta_data.FieldMetaData("_lastGroupControlled", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._DIRECT_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("_directStartTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._DIRECTSTOP_TIME, new org.apache.thrift.meta_data.FieldMetaData("_directstopTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._NOTIFY_ACTIVE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_notifyActiveTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._NOTIFY_INACTIVE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_notifyInactiveTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._STARTED_RAMPING_OUT, new org.apache.thrift.meta_data.FieldMetaData("_startedRampingOut", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._TRIGGER_OFFSET, new org.apache.thrift.meta_data.FieldMetaData("_triggerOffset", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._TRIGGER_RESTORE_OFFSET, new org.apache.thrift.meta_data.FieldMetaData("_triggerRestoreOffset", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._CONSTRAINT_OVERRIDE, new org.apache.thrift.meta_data.FieldMetaData("_constraintOverride", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields._LM_PROGRAM_DIRECT_GEARS, new org.apache.thrift.meta_data.FieldMetaData("_lmProgramDirectGears", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LMProgramDirectGear.class))));
    tmpMap.put(_Fields._LM_PROGRAM_DIRECT_GROUPS, new org.apache.thrift.meta_data.FieldMetaData("_lmProgramDirectGroups", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.cannontech.messaging.serialization.thrift.generated.GenericMessage.class))));
    tmpMap.put(_Fields._ACTIVE_MASTERS, new org.apache.thrift.meta_data.FieldMetaData("_activeMasters", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.cannontech.messaging.serialization.thrift.generated.GenericMessage.class))));
    tmpMap.put(_Fields._ACTIVE_SUBORDINATES, new org.apache.thrift.meta_data.FieldMetaData("_activeSubordinates", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.cannontech.messaging.serialization.thrift.generated.GenericMessage.class))));
    tmpMap.put(_Fields._ORIGIN_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("_originSource", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(LMProgramDirect.class, metaDataMap);
  }

  public LMProgramDirect() {
  }

  public LMProgramDirect(
    LMProgramBase _baseMessage,
    int _currentGearNumber,
    int _lastGroupControlled,
    long _directStartTime,
    long _directstopTime,
    long _notifyActiveTime,
    long _notifyInactiveTime,
    long _startedRampingOut,
    int _triggerOffset,
    int _triggerRestoreOffset,
    boolean _constraintOverride,
    java.util.List<LMProgramDirectGear> _lmProgramDirectGears,
    java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> _lmProgramDirectGroups,
    java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> _activeMasters,
    java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> _activeSubordinates,
    java.lang.String _originSource)
  {
    this();
    this._baseMessage = _baseMessage;
    this._currentGearNumber = _currentGearNumber;
    set_currentGearNumberIsSet(true);
    this._lastGroupControlled = _lastGroupControlled;
    set_lastGroupControlledIsSet(true);
    this._directStartTime = _directStartTime;
    set_directStartTimeIsSet(true);
    this._directstopTime = _directstopTime;
    set_directstopTimeIsSet(true);
    this._notifyActiveTime = _notifyActiveTime;
    set_notifyActiveTimeIsSet(true);
    this._notifyInactiveTime = _notifyInactiveTime;
    set_notifyInactiveTimeIsSet(true);
    this._startedRampingOut = _startedRampingOut;
    set_startedRampingOutIsSet(true);
    this._triggerOffset = _triggerOffset;
    set_triggerOffsetIsSet(true);
    this._triggerRestoreOffset = _triggerRestoreOffset;
    set_triggerRestoreOffsetIsSet(true);
    this._constraintOverride = _constraintOverride;
    set_constraintOverrideIsSet(true);
    this._lmProgramDirectGears = _lmProgramDirectGears;
    this._lmProgramDirectGroups = _lmProgramDirectGroups;
    this._activeMasters = _activeMasters;
    this._activeSubordinates = _activeSubordinates;
    this._originSource = _originSource;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public LMProgramDirect(LMProgramDirect other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSet_baseMessage()) {
      this._baseMessage = new LMProgramBase(other._baseMessage);
    }
    this._currentGearNumber = other._currentGearNumber;
    this._lastGroupControlled = other._lastGroupControlled;
    this._directStartTime = other._directStartTime;
    this._directstopTime = other._directstopTime;
    this._notifyActiveTime = other._notifyActiveTime;
    this._notifyInactiveTime = other._notifyInactiveTime;
    this._startedRampingOut = other._startedRampingOut;
    this._triggerOffset = other._triggerOffset;
    this._triggerRestoreOffset = other._triggerRestoreOffset;
    this._constraintOverride = other._constraintOverride;
    if (other.isSet_lmProgramDirectGears()) {
      java.util.List<LMProgramDirectGear> __this___lmProgramDirectGears = new java.util.ArrayList<LMProgramDirectGear>(other._lmProgramDirectGears.size());
      for (LMProgramDirectGear other_element : other._lmProgramDirectGears) {
        __this___lmProgramDirectGears.add(new LMProgramDirectGear(other_element));
      }
      this._lmProgramDirectGears = __this___lmProgramDirectGears;
    }
    if (other.isSet_lmProgramDirectGroups()) {
      java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> __this___lmProgramDirectGroups = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>(other._lmProgramDirectGroups.size());
      for (com.cannontech.messaging.serialization.thrift.generated.GenericMessage other_element : other._lmProgramDirectGroups) {
        __this___lmProgramDirectGroups.add(new com.cannontech.messaging.serialization.thrift.generated.GenericMessage(other_element));
      }
      this._lmProgramDirectGroups = __this___lmProgramDirectGroups;
    }
    if (other.isSet_activeMasters()) {
      java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> __this___activeMasters = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>(other._activeMasters.size());
      for (com.cannontech.messaging.serialization.thrift.generated.GenericMessage other_element : other._activeMasters) {
        __this___activeMasters.add(new com.cannontech.messaging.serialization.thrift.generated.GenericMessage(other_element));
      }
      this._activeMasters = __this___activeMasters;
    }
    if (other.isSet_activeSubordinates()) {
      java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> __this___activeSubordinates = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>(other._activeSubordinates.size());
      for (com.cannontech.messaging.serialization.thrift.generated.GenericMessage other_element : other._activeSubordinates) {
        __this___activeSubordinates.add(new com.cannontech.messaging.serialization.thrift.generated.GenericMessage(other_element));
      }
      this._activeSubordinates = __this___activeSubordinates;
    }
    if (other.isSet_originSource()) {
      this._originSource = other._originSource;
    }
  }

  public LMProgramDirect deepCopy() {
    return new LMProgramDirect(this);
  }

  @Override
  public void clear() {
    this._baseMessage = null;
    set_currentGearNumberIsSet(false);
    this._currentGearNumber = 0;
    set_lastGroupControlledIsSet(false);
    this._lastGroupControlled = 0;
    set_directStartTimeIsSet(false);
    this._directStartTime = 0;
    set_directstopTimeIsSet(false);
    this._directstopTime = 0;
    set_notifyActiveTimeIsSet(false);
    this._notifyActiveTime = 0;
    set_notifyInactiveTimeIsSet(false);
    this._notifyInactiveTime = 0;
    set_startedRampingOutIsSet(false);
    this._startedRampingOut = 0;
    set_triggerOffsetIsSet(false);
    this._triggerOffset = 0;
    set_triggerRestoreOffsetIsSet(false);
    this._triggerRestoreOffset = 0;
    set_constraintOverrideIsSet(false);
    this._constraintOverride = false;
    this._lmProgramDirectGears = null;
    this._lmProgramDirectGroups = null;
    this._activeMasters = null;
    this._activeSubordinates = null;
    this._originSource = null;
  }

  @org.apache.thrift.annotation.Nullable
  public LMProgramBase get_baseMessage() {
    return this._baseMessage;
  }

  public void set_baseMessage(@org.apache.thrift.annotation.Nullable LMProgramBase _baseMessage) {
    this._baseMessage = _baseMessage;
  }

  public void unset_baseMessage() {
    this._baseMessage = null;
  }

  /** Returns true if field _baseMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_baseMessage() {
    return this._baseMessage != null;
  }

  public void set_baseMessageIsSet(boolean value) {
    if (!value) {
      this._baseMessage = null;
    }
  }

  public int get_currentGearNumber() {
    return this._currentGearNumber;
  }

  public void set_currentGearNumber(int _currentGearNumber) {
    this._currentGearNumber = _currentGearNumber;
    set_currentGearNumberIsSet(true);
  }

  public void unset_currentGearNumber() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___CURRENTGEARNUMBER_ISSET_ID);
  }

  /** Returns true if field _currentGearNumber is set (has been assigned a value) and false otherwise */
  public boolean isSet_currentGearNumber() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___CURRENTGEARNUMBER_ISSET_ID);
  }

  public void set_currentGearNumberIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___CURRENTGEARNUMBER_ISSET_ID, value);
  }

  public int get_lastGroupControlled() {
    return this._lastGroupControlled;
  }

  public void set_lastGroupControlled(int _lastGroupControlled) {
    this._lastGroupControlled = _lastGroupControlled;
    set_lastGroupControlledIsSet(true);
  }

  public void unset_lastGroupControlled() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___LASTGROUPCONTROLLED_ISSET_ID);
  }

  /** Returns true if field _lastGroupControlled is set (has been assigned a value) and false otherwise */
  public boolean isSet_lastGroupControlled() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___LASTGROUPCONTROLLED_ISSET_ID);
  }

  public void set_lastGroupControlledIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___LASTGROUPCONTROLLED_ISSET_ID, value);
  }

  public long get_directStartTime() {
    return this._directStartTime;
  }

  public void set_directStartTime(long _directStartTime) {
    this._directStartTime = _directStartTime;
    set_directStartTimeIsSet(true);
  }

  public void unset_directStartTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___DIRECTSTARTTIME_ISSET_ID);
  }

  /** Returns true if field _directStartTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_directStartTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___DIRECTSTARTTIME_ISSET_ID);
  }

  public void set_directStartTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___DIRECTSTARTTIME_ISSET_ID, value);
  }

  public long get_directstopTime() {
    return this._directstopTime;
  }

  public void set_directstopTime(long _directstopTime) {
    this._directstopTime = _directstopTime;
    set_directstopTimeIsSet(true);
  }

  public void unset_directstopTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___DIRECTSTOPTIME_ISSET_ID);
  }

  /** Returns true if field _directstopTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_directstopTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___DIRECTSTOPTIME_ISSET_ID);
  }

  public void set_directstopTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___DIRECTSTOPTIME_ISSET_ID, value);
  }

  public long get_notifyActiveTime() {
    return this._notifyActiveTime;
  }

  public void set_notifyActiveTime(long _notifyActiveTime) {
    this._notifyActiveTime = _notifyActiveTime;
    set_notifyActiveTimeIsSet(true);
  }

  public void unset_notifyActiveTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___NOTIFYACTIVETIME_ISSET_ID);
  }

  /** Returns true if field _notifyActiveTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_notifyActiveTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___NOTIFYACTIVETIME_ISSET_ID);
  }

  public void set_notifyActiveTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___NOTIFYACTIVETIME_ISSET_ID, value);
  }

  public long get_notifyInactiveTime() {
    return this._notifyInactiveTime;
  }

  public void set_notifyInactiveTime(long _notifyInactiveTime) {
    this._notifyInactiveTime = _notifyInactiveTime;
    set_notifyInactiveTimeIsSet(true);
  }

  public void unset_notifyInactiveTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___NOTIFYINACTIVETIME_ISSET_ID);
  }

  /** Returns true if field _notifyInactiveTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_notifyInactiveTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___NOTIFYINACTIVETIME_ISSET_ID);
  }

  public void set_notifyInactiveTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___NOTIFYINACTIVETIME_ISSET_ID, value);
  }

  public long get_startedRampingOut() {
    return this._startedRampingOut;
  }

  public void set_startedRampingOut(long _startedRampingOut) {
    this._startedRampingOut = _startedRampingOut;
    set_startedRampingOutIsSet(true);
  }

  public void unset_startedRampingOut() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___STARTEDRAMPINGOUT_ISSET_ID);
  }

  /** Returns true if field _startedRampingOut is set (has been assigned a value) and false otherwise */
  public boolean isSet_startedRampingOut() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___STARTEDRAMPINGOUT_ISSET_ID);
  }

  public void set_startedRampingOutIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___STARTEDRAMPINGOUT_ISSET_ID, value);
  }

  public int get_triggerOffset() {
    return this._triggerOffset;
  }

  public void set_triggerOffset(int _triggerOffset) {
    this._triggerOffset = _triggerOffset;
    set_triggerOffsetIsSet(true);
  }

  public void unset_triggerOffset() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___TRIGGEROFFSET_ISSET_ID);
  }

  /** Returns true if field _triggerOffset is set (has been assigned a value) and false otherwise */
  public boolean isSet_triggerOffset() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___TRIGGEROFFSET_ISSET_ID);
  }

  public void set_triggerOffsetIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___TRIGGEROFFSET_ISSET_ID, value);
  }

  public int get_triggerRestoreOffset() {
    return this._triggerRestoreOffset;
  }

  public void set_triggerRestoreOffset(int _triggerRestoreOffset) {
    this._triggerRestoreOffset = _triggerRestoreOffset;
    set_triggerRestoreOffsetIsSet(true);
  }

  public void unset_triggerRestoreOffset() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___TRIGGERRESTOREOFFSET_ISSET_ID);
  }

  /** Returns true if field _triggerRestoreOffset is set (has been assigned a value) and false otherwise */
  public boolean isSet_triggerRestoreOffset() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___TRIGGERRESTOREOFFSET_ISSET_ID);
  }

  public void set_triggerRestoreOffsetIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___TRIGGERRESTOREOFFSET_ISSET_ID, value);
  }

  public boolean is_constraintOverride() {
    return this._constraintOverride;
  }

  public void set_constraintOverride(boolean _constraintOverride) {
    this._constraintOverride = _constraintOverride;
    set_constraintOverrideIsSet(true);
  }

  public void unset_constraintOverride() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___CONSTRAINTOVERRIDE_ISSET_ID);
  }

  /** Returns true if field _constraintOverride is set (has been assigned a value) and false otherwise */
  public boolean isSet_constraintOverride() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___CONSTRAINTOVERRIDE_ISSET_ID);
  }

  public void set_constraintOverrideIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___CONSTRAINTOVERRIDE_ISSET_ID, value);
  }

  public int get_lmProgramDirectGearsSize() {
    return (this._lmProgramDirectGears == null) ? 0 : this._lmProgramDirectGears.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<LMProgramDirectGear> get_lmProgramDirectGearsIterator() {
    return (this._lmProgramDirectGears == null) ? null : this._lmProgramDirectGears.iterator();
  }

  public void addTo_lmProgramDirectGears(LMProgramDirectGear elem) {
    if (this._lmProgramDirectGears == null) {
      this._lmProgramDirectGears = new java.util.ArrayList<LMProgramDirectGear>();
    }
    this._lmProgramDirectGears.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<LMProgramDirectGear> get_lmProgramDirectGears() {
    return this._lmProgramDirectGears;
  }

  public void set_lmProgramDirectGears(@org.apache.thrift.annotation.Nullable java.util.List<LMProgramDirectGear> _lmProgramDirectGears) {
    this._lmProgramDirectGears = _lmProgramDirectGears;
  }

  public void unset_lmProgramDirectGears() {
    this._lmProgramDirectGears = null;
  }

  /** Returns true if field _lmProgramDirectGears is set (has been assigned a value) and false otherwise */
  public boolean isSet_lmProgramDirectGears() {
    return this._lmProgramDirectGears != null;
  }

  public void set_lmProgramDirectGearsIsSet(boolean value) {
    if (!value) {
      this._lmProgramDirectGears = null;
    }
  }

  public int get_lmProgramDirectGroupsSize() {
    return (this._lmProgramDirectGroups == null) ? 0 : this._lmProgramDirectGroups.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> get_lmProgramDirectGroupsIterator() {
    return (this._lmProgramDirectGroups == null) ? null : this._lmProgramDirectGroups.iterator();
  }

  public void addTo_lmProgramDirectGroups(com.cannontech.messaging.serialization.thrift.generated.GenericMessage elem) {
    if (this._lmProgramDirectGroups == null) {
      this._lmProgramDirectGroups = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>();
    }
    this._lmProgramDirectGroups.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> get_lmProgramDirectGroups() {
    return this._lmProgramDirectGroups;
  }

  public void set_lmProgramDirectGroups(@org.apache.thrift.annotation.Nullable java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> _lmProgramDirectGroups) {
    this._lmProgramDirectGroups = _lmProgramDirectGroups;
  }

  public void unset_lmProgramDirectGroups() {
    this._lmProgramDirectGroups = null;
  }

  /** Returns true if field _lmProgramDirectGroups is set (has been assigned a value) and false otherwise */
  public boolean isSet_lmProgramDirectGroups() {
    return this._lmProgramDirectGroups != null;
  }

  public void set_lmProgramDirectGroupsIsSet(boolean value) {
    if (!value) {
      this._lmProgramDirectGroups = null;
    }
  }

  public int get_activeMastersSize() {
    return (this._activeMasters == null) ? 0 : this._activeMasters.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> get_activeMastersIterator() {
    return (this._activeMasters == null) ? null : this._activeMasters.iterator();
  }

  public void addTo_activeMasters(com.cannontech.messaging.serialization.thrift.generated.GenericMessage elem) {
    if (this._activeMasters == null) {
      this._activeMasters = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>();
    }
    this._activeMasters.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> get_activeMasters() {
    return this._activeMasters;
  }

  public void set_activeMasters(@org.apache.thrift.annotation.Nullable java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> _activeMasters) {
    this._activeMasters = _activeMasters;
  }

  public void unset_activeMasters() {
    this._activeMasters = null;
  }

  /** Returns true if field _activeMasters is set (has been assigned a value) and false otherwise */
  public boolean isSet_activeMasters() {
    return this._activeMasters != null;
  }

  public void set_activeMastersIsSet(boolean value) {
    if (!value) {
      this._activeMasters = null;
    }
  }

  public int get_activeSubordinatesSize() {
    return (this._activeSubordinates == null) ? 0 : this._activeSubordinates.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> get_activeSubordinatesIterator() {
    return (this._activeSubordinates == null) ? null : this._activeSubordinates.iterator();
  }

  public void addTo_activeSubordinates(com.cannontech.messaging.serialization.thrift.generated.GenericMessage elem) {
    if (this._activeSubordinates == null) {
      this._activeSubordinates = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>();
    }
    this._activeSubordinates.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> get_activeSubordinates() {
    return this._activeSubordinates;
  }

  public void set_activeSubordinates(@org.apache.thrift.annotation.Nullable java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage> _activeSubordinates) {
    this._activeSubordinates = _activeSubordinates;
  }

  public void unset_activeSubordinates() {
    this._activeSubordinates = null;
  }

  /** Returns true if field _activeSubordinates is set (has been assigned a value) and false otherwise */
  public boolean isSet_activeSubordinates() {
    return this._activeSubordinates != null;
  }

  public void set_activeSubordinatesIsSet(boolean value) {
    if (!value) {
      this._activeSubordinates = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_originSource() {
    return this._originSource;
  }

  public void set_originSource(@org.apache.thrift.annotation.Nullable java.lang.String _originSource) {
    this._originSource = _originSource;
  }

  public void unset_originSource() {
    this._originSource = null;
  }

  /** Returns true if field _originSource is set (has been assigned a value) and false otherwise */
  public boolean isSet_originSource() {
    return this._originSource != null;
  }

  public void set_originSourceIsSet(boolean value) {
    if (!value) {
      this._originSource = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case _BASE_MESSAGE:
      if (value == null) {
        unset_baseMessage();
      } else {
        set_baseMessage((LMProgramBase)value);
      }
      break;

    case _CURRENT_GEAR_NUMBER:
      if (value == null) {
        unset_currentGearNumber();
      } else {
        set_currentGearNumber((java.lang.Integer)value);
      }
      break;

    case _LAST_GROUP_CONTROLLED:
      if (value == null) {
        unset_lastGroupControlled();
      } else {
        set_lastGroupControlled((java.lang.Integer)value);
      }
      break;

    case _DIRECT_START_TIME:
      if (value == null) {
        unset_directStartTime();
      } else {
        set_directStartTime((java.lang.Long)value);
      }
      break;

    case _DIRECTSTOP_TIME:
      if (value == null) {
        unset_directstopTime();
      } else {
        set_directstopTime((java.lang.Long)value);
      }
      break;

    case _NOTIFY_ACTIVE_TIME:
      if (value == null) {
        unset_notifyActiveTime();
      } else {
        set_notifyActiveTime((java.lang.Long)value);
      }
      break;

    case _NOTIFY_INACTIVE_TIME:
      if (value == null) {
        unset_notifyInactiveTime();
      } else {
        set_notifyInactiveTime((java.lang.Long)value);
      }
      break;

    case _STARTED_RAMPING_OUT:
      if (value == null) {
        unset_startedRampingOut();
      } else {
        set_startedRampingOut((java.lang.Long)value);
      }
      break;

    case _TRIGGER_OFFSET:
      if (value == null) {
        unset_triggerOffset();
      } else {
        set_triggerOffset((java.lang.Integer)value);
      }
      break;

    case _TRIGGER_RESTORE_OFFSET:
      if (value == null) {
        unset_triggerRestoreOffset();
      } else {
        set_triggerRestoreOffset((java.lang.Integer)value);
      }
      break;

    case _CONSTRAINT_OVERRIDE:
      if (value == null) {
        unset_constraintOverride();
      } else {
        set_constraintOverride((java.lang.Boolean)value);
      }
      break;

    case _LM_PROGRAM_DIRECT_GEARS:
      if (value == null) {
        unset_lmProgramDirectGears();
      } else {
        set_lmProgramDirectGears((java.util.List<LMProgramDirectGear>)value);
      }
      break;

    case _LM_PROGRAM_DIRECT_GROUPS:
      if (value == null) {
        unset_lmProgramDirectGroups();
      } else {
        set_lmProgramDirectGroups((java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>)value);
      }
      break;

    case _ACTIVE_MASTERS:
      if (value == null) {
        unset_activeMasters();
      } else {
        set_activeMasters((java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>)value);
      }
      break;

    case _ACTIVE_SUBORDINATES:
      if (value == null) {
        unset_activeSubordinates();
      } else {
        set_activeSubordinates((java.util.List<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>)value);
      }
      break;

    case _ORIGIN_SOURCE:
      if (value == null) {
        unset_originSource();
      } else {
        set_originSource((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _BASE_MESSAGE:
      return get_baseMessage();

    case _CURRENT_GEAR_NUMBER:
      return get_currentGearNumber();

    case _LAST_GROUP_CONTROLLED:
      return get_lastGroupControlled();

    case _DIRECT_START_TIME:
      return get_directStartTime();

    case _DIRECTSTOP_TIME:
      return get_directstopTime();

    case _NOTIFY_ACTIVE_TIME:
      return get_notifyActiveTime();

    case _NOTIFY_INACTIVE_TIME:
      return get_notifyInactiveTime();

    case _STARTED_RAMPING_OUT:
      return get_startedRampingOut();

    case _TRIGGER_OFFSET:
      return get_triggerOffset();

    case _TRIGGER_RESTORE_OFFSET:
      return get_triggerRestoreOffset();

    case _CONSTRAINT_OVERRIDE:
      return is_constraintOverride();

    case _LM_PROGRAM_DIRECT_GEARS:
      return get_lmProgramDirectGears();

    case _LM_PROGRAM_DIRECT_GROUPS:
      return get_lmProgramDirectGroups();

    case _ACTIVE_MASTERS:
      return get_activeMasters();

    case _ACTIVE_SUBORDINATES:
      return get_activeSubordinates();

    case _ORIGIN_SOURCE:
      return get_originSource();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _BASE_MESSAGE:
      return isSet_baseMessage();
    case _CURRENT_GEAR_NUMBER:
      return isSet_currentGearNumber();
    case _LAST_GROUP_CONTROLLED:
      return isSet_lastGroupControlled();
    case _DIRECT_START_TIME:
      return isSet_directStartTime();
    case _DIRECTSTOP_TIME:
      return isSet_directstopTime();
    case _NOTIFY_ACTIVE_TIME:
      return isSet_notifyActiveTime();
    case _NOTIFY_INACTIVE_TIME:
      return isSet_notifyInactiveTime();
    case _STARTED_RAMPING_OUT:
      return isSet_startedRampingOut();
    case _TRIGGER_OFFSET:
      return isSet_triggerOffset();
    case _TRIGGER_RESTORE_OFFSET:
      return isSet_triggerRestoreOffset();
    case _CONSTRAINT_OVERRIDE:
      return isSet_constraintOverride();
    case _LM_PROGRAM_DIRECT_GEARS:
      return isSet_lmProgramDirectGears();
    case _LM_PROGRAM_DIRECT_GROUPS:
      return isSet_lmProgramDirectGroups();
    case _ACTIVE_MASTERS:
      return isSet_activeMasters();
    case _ACTIVE_SUBORDINATES:
      return isSet_activeSubordinates();
    case _ORIGIN_SOURCE:
      return isSet_originSource();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof LMProgramDirect)
      return this.equals((LMProgramDirect)that);
    return false;
  }

  public boolean equals(LMProgramDirect that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__baseMessage = true && this.isSet_baseMessage();
    boolean that_present__baseMessage = true && that.isSet_baseMessage();
    if (this_present__baseMessage || that_present__baseMessage) {
      if (!(this_present__baseMessage && that_present__baseMessage))
        return false;
      if (!this._baseMessage.equals(that._baseMessage))
        return false;
    }

    boolean this_present__currentGearNumber = true;
    boolean that_present__currentGearNumber = true;
    if (this_present__currentGearNumber || that_present__currentGearNumber) {
      if (!(this_present__currentGearNumber && that_present__currentGearNumber))
        return false;
      if (this._currentGearNumber != that._currentGearNumber)
        return false;
    }

    boolean this_present__lastGroupControlled = true;
    boolean that_present__lastGroupControlled = true;
    if (this_present__lastGroupControlled || that_present__lastGroupControlled) {
      if (!(this_present__lastGroupControlled && that_present__lastGroupControlled))
        return false;
      if (this._lastGroupControlled != that._lastGroupControlled)
        return false;
    }

    boolean this_present__directStartTime = true;
    boolean that_present__directStartTime = true;
    if (this_present__directStartTime || that_present__directStartTime) {
      if (!(this_present__directStartTime && that_present__directStartTime))
        return false;
      if (this._directStartTime != that._directStartTime)
        return false;
    }

    boolean this_present__directstopTime = true;
    boolean that_present__directstopTime = true;
    if (this_present__directstopTime || that_present__directstopTime) {
      if (!(this_present__directstopTime && that_present__directstopTime))
        return false;
      if (this._directstopTime != that._directstopTime)
        return false;
    }

    boolean this_present__notifyActiveTime = true;
    boolean that_present__notifyActiveTime = true;
    if (this_present__notifyActiveTime || that_present__notifyActiveTime) {
      if (!(this_present__notifyActiveTime && that_present__notifyActiveTime))
        return false;
      if (this._notifyActiveTime != that._notifyActiveTime)
        return false;
    }

    boolean this_present__notifyInactiveTime = true;
    boolean that_present__notifyInactiveTime = true;
    if (this_present__notifyInactiveTime || that_present__notifyInactiveTime) {
      if (!(this_present__notifyInactiveTime && that_present__notifyInactiveTime))
        return false;
      if (this._notifyInactiveTime != that._notifyInactiveTime)
        return false;
    }

    boolean this_present__startedRampingOut = true;
    boolean that_present__startedRampingOut = true;
    if (this_present__startedRampingOut || that_present__startedRampingOut) {
      if (!(this_present__startedRampingOut && that_present__startedRampingOut))
        return false;
      if (this._startedRampingOut != that._startedRampingOut)
        return false;
    }

    boolean this_present__triggerOffset = true;
    boolean that_present__triggerOffset = true;
    if (this_present__triggerOffset || that_present__triggerOffset) {
      if (!(this_present__triggerOffset && that_present__triggerOffset))
        return false;
      if (this._triggerOffset != that._triggerOffset)
        return false;
    }

    boolean this_present__triggerRestoreOffset = true;
    boolean that_present__triggerRestoreOffset = true;
    if (this_present__triggerRestoreOffset || that_present__triggerRestoreOffset) {
      if (!(this_present__triggerRestoreOffset && that_present__triggerRestoreOffset))
        return false;
      if (this._triggerRestoreOffset != that._triggerRestoreOffset)
        return false;
    }

    boolean this_present__constraintOverride = true;
    boolean that_present__constraintOverride = true;
    if (this_present__constraintOverride || that_present__constraintOverride) {
      if (!(this_present__constraintOverride && that_present__constraintOverride))
        return false;
      if (this._constraintOverride != that._constraintOverride)
        return false;
    }

    boolean this_present__lmProgramDirectGears = true && this.isSet_lmProgramDirectGears();
    boolean that_present__lmProgramDirectGears = true && that.isSet_lmProgramDirectGears();
    if (this_present__lmProgramDirectGears || that_present__lmProgramDirectGears) {
      if (!(this_present__lmProgramDirectGears && that_present__lmProgramDirectGears))
        return false;
      if (!this._lmProgramDirectGears.equals(that._lmProgramDirectGears))
        return false;
    }

    boolean this_present__lmProgramDirectGroups = true && this.isSet_lmProgramDirectGroups();
    boolean that_present__lmProgramDirectGroups = true && that.isSet_lmProgramDirectGroups();
    if (this_present__lmProgramDirectGroups || that_present__lmProgramDirectGroups) {
      if (!(this_present__lmProgramDirectGroups && that_present__lmProgramDirectGroups))
        return false;
      if (!this._lmProgramDirectGroups.equals(that._lmProgramDirectGroups))
        return false;
    }

    boolean this_present__activeMasters = true && this.isSet_activeMasters();
    boolean that_present__activeMasters = true && that.isSet_activeMasters();
    if (this_present__activeMasters || that_present__activeMasters) {
      if (!(this_present__activeMasters && that_present__activeMasters))
        return false;
      if (!this._activeMasters.equals(that._activeMasters))
        return false;
    }

    boolean this_present__activeSubordinates = true && this.isSet_activeSubordinates();
    boolean that_present__activeSubordinates = true && that.isSet_activeSubordinates();
    if (this_present__activeSubordinates || that_present__activeSubordinates) {
      if (!(this_present__activeSubordinates && that_present__activeSubordinates))
        return false;
      if (!this._activeSubordinates.equals(that._activeSubordinates))
        return false;
    }

    boolean this_present__originSource = true && this.isSet_originSource();
    boolean that_present__originSource = true && that.isSet_originSource();
    if (this_present__originSource || that_present__originSource) {
      if (!(this_present__originSource && that_present__originSource))
        return false;
      if (!this._originSource.equals(that._originSource))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSet_baseMessage()) ? 131071 : 524287);
    if (isSet_baseMessage())
      hashCode = hashCode * 8191 + _baseMessage.hashCode();

    hashCode = hashCode * 8191 + _currentGearNumber;

    hashCode = hashCode * 8191 + _lastGroupControlled;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_directStartTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_directstopTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_notifyActiveTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_notifyInactiveTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_startedRampingOut);

    hashCode = hashCode * 8191 + _triggerOffset;

    hashCode = hashCode * 8191 + _triggerRestoreOffset;

    hashCode = hashCode * 8191 + ((_constraintOverride) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSet_lmProgramDirectGears()) ? 131071 : 524287);
    if (isSet_lmProgramDirectGears())
      hashCode = hashCode * 8191 + _lmProgramDirectGears.hashCode();

    hashCode = hashCode * 8191 + ((isSet_lmProgramDirectGroups()) ? 131071 : 524287);
    if (isSet_lmProgramDirectGroups())
      hashCode = hashCode * 8191 + _lmProgramDirectGroups.hashCode();

    hashCode = hashCode * 8191 + ((isSet_activeMasters()) ? 131071 : 524287);
    if (isSet_activeMasters())
      hashCode = hashCode * 8191 + _activeMasters.hashCode();

    hashCode = hashCode * 8191 + ((isSet_activeSubordinates()) ? 131071 : 524287);
    if (isSet_activeSubordinates())
      hashCode = hashCode * 8191 + _activeSubordinates.hashCode();

    hashCode = hashCode * 8191 + ((isSet_originSource()) ? 131071 : 524287);
    if (isSet_originSource())
      hashCode = hashCode * 8191 + _originSource.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(LMProgramDirect other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSet_baseMessage()).compareTo(other.isSet_baseMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_baseMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._baseMessage, other._baseMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_currentGearNumber()).compareTo(other.isSet_currentGearNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_currentGearNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._currentGearNumber, other._currentGearNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_lastGroupControlled()).compareTo(other.isSet_lastGroupControlled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lastGroupControlled()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lastGroupControlled, other._lastGroupControlled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_directStartTime()).compareTo(other.isSet_directStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_directStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._directStartTime, other._directStartTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_directstopTime()).compareTo(other.isSet_directstopTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_directstopTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._directstopTime, other._directstopTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_notifyActiveTime()).compareTo(other.isSet_notifyActiveTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_notifyActiveTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._notifyActiveTime, other._notifyActiveTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_notifyInactiveTime()).compareTo(other.isSet_notifyInactiveTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_notifyInactiveTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._notifyInactiveTime, other._notifyInactiveTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_startedRampingOut()).compareTo(other.isSet_startedRampingOut());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_startedRampingOut()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._startedRampingOut, other._startedRampingOut);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_triggerOffset()).compareTo(other.isSet_triggerOffset());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_triggerOffset()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._triggerOffset, other._triggerOffset);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_triggerRestoreOffset()).compareTo(other.isSet_triggerRestoreOffset());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_triggerRestoreOffset()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._triggerRestoreOffset, other._triggerRestoreOffset);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_constraintOverride()).compareTo(other.isSet_constraintOverride());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_constraintOverride()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._constraintOverride, other._constraintOverride);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_lmProgramDirectGears()).compareTo(other.isSet_lmProgramDirectGears());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lmProgramDirectGears()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lmProgramDirectGears, other._lmProgramDirectGears);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_lmProgramDirectGroups()).compareTo(other.isSet_lmProgramDirectGroups());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lmProgramDirectGroups()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lmProgramDirectGroups, other._lmProgramDirectGroups);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_activeMasters()).compareTo(other.isSet_activeMasters());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_activeMasters()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._activeMasters, other._activeMasters);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_activeSubordinates()).compareTo(other.isSet_activeSubordinates());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_activeSubordinates()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._activeSubordinates, other._activeSubordinates);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_originSource()).compareTo(other.isSet_originSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_originSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._originSource, other._originSource);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("LMProgramDirect(");
    boolean first = true;

    sb.append("_baseMessage:");
    if (this._baseMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._baseMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_currentGearNumber:");
    sb.append(this._currentGearNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lastGroupControlled:");
    sb.append(this._lastGroupControlled);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_directStartTime:");
    sb.append(this._directStartTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_directstopTime:");
    sb.append(this._directstopTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_notifyActiveTime:");
    sb.append(this._notifyActiveTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_notifyInactiveTime:");
    sb.append(this._notifyInactiveTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_startedRampingOut:");
    sb.append(this._startedRampingOut);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_triggerOffset:");
    sb.append(this._triggerOffset);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_triggerRestoreOffset:");
    sb.append(this._triggerRestoreOffset);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_constraintOverride:");
    sb.append(this._constraintOverride);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lmProgramDirectGears:");
    if (this._lmProgramDirectGears == null) {
      sb.append("null");
    } else {
      sb.append(this._lmProgramDirectGears);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lmProgramDirectGroups:");
    if (this._lmProgramDirectGroups == null) {
      sb.append("null");
    } else {
      sb.append(this._lmProgramDirectGroups);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_activeMasters:");
    if (this._activeMasters == null) {
      sb.append("null");
    } else {
      sb.append(this._activeMasters);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_activeSubordinates:");
    if (this._activeSubordinates == null) {
      sb.append("null");
    } else {
      sb.append(this._activeSubordinates);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_originSource:");
    if (this._originSource == null) {
      sb.append("null");
    } else {
      sb.append(this._originSource);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_baseMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_baseMessage' is unset! Struct:" + toString());
    }

    if (!isSet_currentGearNumber()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_currentGearNumber' is unset! Struct:" + toString());
    }

    if (!isSet_lastGroupControlled()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lastGroupControlled' is unset! Struct:" + toString());
    }

    if (!isSet_directStartTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_directStartTime' is unset! Struct:" + toString());
    }

    if (!isSet_directstopTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_directstopTime' is unset! Struct:" + toString());
    }

    if (!isSet_notifyActiveTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_notifyActiveTime' is unset! Struct:" + toString());
    }

    if (!isSet_notifyInactiveTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_notifyInactiveTime' is unset! Struct:" + toString());
    }

    if (!isSet_startedRampingOut()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_startedRampingOut' is unset! Struct:" + toString());
    }

    if (!isSet_triggerOffset()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_triggerOffset' is unset! Struct:" + toString());
    }

    if (!isSet_triggerRestoreOffset()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_triggerRestoreOffset' is unset! Struct:" + toString());
    }

    if (!isSet_constraintOverride()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_constraintOverride' is unset! Struct:" + toString());
    }

    if (!isSet_lmProgramDirectGears()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lmProgramDirectGears' is unset! Struct:" + toString());
    }

    if (!isSet_lmProgramDirectGroups()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lmProgramDirectGroups' is unset! Struct:" + toString());
    }

    if (!isSet_activeMasters()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_activeMasters' is unset! Struct:" + toString());
    }

    if (!isSet_activeSubordinates()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_activeSubordinates' is unset! Struct:" + toString());
    }

    if (!isSet_originSource()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_originSource' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (_baseMessage != null) {
      _baseMessage.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class LMProgramDirectStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMProgramDirectStandardScheme getScheme() {
      return new LMProgramDirectStandardScheme();
    }
  }

  private static class LMProgramDirectStandardScheme extends org.apache.thrift.scheme.StandardScheme<LMProgramDirect> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, LMProgramDirect struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _BASE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct._baseMessage = new LMProgramBase();
              struct._baseMessage.read(iprot);
              struct.set_baseMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _CURRENT_GEAR_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._currentGearNumber = iprot.readI32();
              struct.set_currentGearNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _LAST_GROUP_CONTROLLED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._lastGroupControlled = iprot.readI32();
              struct.set_lastGroupControlledIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _DIRECT_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._directStartTime = iprot.readI64();
              struct.set_directStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _DIRECTSTOP_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._directstopTime = iprot.readI64();
              struct.set_directstopTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // _NOTIFY_ACTIVE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._notifyActiveTime = iprot.readI64();
              struct.set_notifyActiveTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // _NOTIFY_INACTIVE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._notifyInactiveTime = iprot.readI64();
              struct.set_notifyInactiveTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // _STARTED_RAMPING_OUT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._startedRampingOut = iprot.readI64();
              struct.set_startedRampingOutIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // _TRIGGER_OFFSET
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._triggerOffset = iprot.readI32();
              struct.set_triggerOffsetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // _TRIGGER_RESTORE_OFFSET
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._triggerRestoreOffset = iprot.readI32();
              struct.set_triggerRestoreOffsetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // _CONSTRAINT_OVERRIDE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct._constraintOverride = iprot.readBool();
              struct.set_constraintOverrideIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // _LM_PROGRAM_DIRECT_GEARS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                struct._lmProgramDirectGears = new java.util.ArrayList<LMProgramDirectGear>(_list16.size);
                @org.apache.thrift.annotation.Nullable LMProgramDirectGear _elem17;
                for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                {
                  _elem17 = new LMProgramDirectGear();
                  _elem17.read(iprot);
                  struct._lmProgramDirectGears.add(_elem17);
                }
                iprot.readListEnd();
              }
              struct.set_lmProgramDirectGearsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // _LM_PROGRAM_DIRECT_GROUPS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list19 = iprot.readListBegin();
                struct._lmProgramDirectGroups = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>(_list19.size);
                @org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.GenericMessage _elem20;
                for (int _i21 = 0; _i21 < _list19.size; ++_i21)
                {
                  _elem20 = new com.cannontech.messaging.serialization.thrift.generated.GenericMessage();
                  _elem20.read(iprot);
                  struct._lmProgramDirectGroups.add(_elem20);
                }
                iprot.readListEnd();
              }
              struct.set_lmProgramDirectGroupsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // _ACTIVE_MASTERS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list22 = iprot.readListBegin();
                struct._activeMasters = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>(_list22.size);
                @org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.GenericMessage _elem23;
                for (int _i24 = 0; _i24 < _list22.size; ++_i24)
                {
                  _elem23 = new com.cannontech.messaging.serialization.thrift.generated.GenericMessage();
                  _elem23.read(iprot);
                  struct._activeMasters.add(_elem23);
                }
                iprot.readListEnd();
              }
              struct.set_activeMastersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // _ACTIVE_SUBORDINATES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list25 = iprot.readListBegin();
                struct._activeSubordinates = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>(_list25.size);
                @org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.GenericMessage _elem26;
                for (int _i27 = 0; _i27 < _list25.size; ++_i27)
                {
                  _elem26 = new com.cannontech.messaging.serialization.thrift.generated.GenericMessage();
                  _elem26.read(iprot);
                  struct._activeSubordinates.add(_elem26);
                }
                iprot.readListEnd();
              }
              struct.set_activeSubordinatesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // _ORIGIN_SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._originSource = iprot.readString();
              struct.set_originSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, LMProgramDirect struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct._baseMessage != null) {
        oprot.writeFieldBegin(_BASE_MESSAGE_FIELD_DESC);
        struct._baseMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_CURRENT_GEAR_NUMBER_FIELD_DESC);
      oprot.writeI32(struct._currentGearNumber);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_LAST_GROUP_CONTROLLED_FIELD_DESC);
      oprot.writeI32(struct._lastGroupControlled);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_DIRECT_START_TIME_FIELD_DESC);
      oprot.writeI64(struct._directStartTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_DIRECTSTOP_TIME_FIELD_DESC);
      oprot.writeI64(struct._directstopTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_NOTIFY_ACTIVE_TIME_FIELD_DESC);
      oprot.writeI64(struct._notifyActiveTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_NOTIFY_INACTIVE_TIME_FIELD_DESC);
      oprot.writeI64(struct._notifyInactiveTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_STARTED_RAMPING_OUT_FIELD_DESC);
      oprot.writeI64(struct._startedRampingOut);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_TRIGGER_OFFSET_FIELD_DESC);
      oprot.writeI32(struct._triggerOffset);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_TRIGGER_RESTORE_OFFSET_FIELD_DESC);
      oprot.writeI32(struct._triggerRestoreOffset);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_CONSTRAINT_OVERRIDE_FIELD_DESC);
      oprot.writeBool(struct._constraintOverride);
      oprot.writeFieldEnd();
      if (struct._lmProgramDirectGears != null) {
        oprot.writeFieldBegin(_LM_PROGRAM_DIRECT_GEARS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct._lmProgramDirectGears.size()));
          for (LMProgramDirectGear _iter28 : struct._lmProgramDirectGears)
          {
            _iter28.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct._lmProgramDirectGroups != null) {
        oprot.writeFieldBegin(_LM_PROGRAM_DIRECT_GROUPS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct._lmProgramDirectGroups.size()));
          for (com.cannontech.messaging.serialization.thrift.generated.GenericMessage _iter29 : struct._lmProgramDirectGroups)
          {
            _iter29.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct._activeMasters != null) {
        oprot.writeFieldBegin(_ACTIVE_MASTERS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct._activeMasters.size()));
          for (com.cannontech.messaging.serialization.thrift.generated.GenericMessage _iter30 : struct._activeMasters)
          {
            _iter30.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct._activeSubordinates != null) {
        oprot.writeFieldBegin(_ACTIVE_SUBORDINATES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct._activeSubordinates.size()));
          for (com.cannontech.messaging.serialization.thrift.generated.GenericMessage _iter31 : struct._activeSubordinates)
          {
            _iter31.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct._originSource != null) {
        oprot.writeFieldBegin(_ORIGIN_SOURCE_FIELD_DESC);
        oprot.writeString(struct._originSource);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class LMProgramDirectTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMProgramDirectTupleScheme getScheme() {
      return new LMProgramDirectTupleScheme();
    }
  }

  private static class LMProgramDirectTupleScheme extends org.apache.thrift.scheme.TupleScheme<LMProgramDirect> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, LMProgramDirect struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage.write(oprot);
      oprot.writeI32(struct._currentGearNumber);
      oprot.writeI32(struct._lastGroupControlled);
      oprot.writeI64(struct._directStartTime);
      oprot.writeI64(struct._directstopTime);
      oprot.writeI64(struct._notifyActiveTime);
      oprot.writeI64(struct._notifyInactiveTime);
      oprot.writeI64(struct._startedRampingOut);
      oprot.writeI32(struct._triggerOffset);
      oprot.writeI32(struct._triggerRestoreOffset);
      oprot.writeBool(struct._constraintOverride);
      {
        oprot.writeI32(struct._lmProgramDirectGears.size());
        for (LMProgramDirectGear _iter32 : struct._lmProgramDirectGears)
        {
          _iter32.write(oprot);
        }
      }
      {
        oprot.writeI32(struct._lmProgramDirectGroups.size());
        for (com.cannontech.messaging.serialization.thrift.generated.GenericMessage _iter33 : struct._lmProgramDirectGroups)
        {
          _iter33.write(oprot);
        }
      }
      {
        oprot.writeI32(struct._activeMasters.size());
        for (com.cannontech.messaging.serialization.thrift.generated.GenericMessage _iter34 : struct._activeMasters)
        {
          _iter34.write(oprot);
        }
      }
      {
        oprot.writeI32(struct._activeSubordinates.size());
        for (com.cannontech.messaging.serialization.thrift.generated.GenericMessage _iter35 : struct._activeSubordinates)
        {
          _iter35.write(oprot);
        }
      }
      oprot.writeString(struct._originSource);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, LMProgramDirect struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage = new LMProgramBase();
      struct._baseMessage.read(iprot);
      struct.set_baseMessageIsSet(true);
      struct._currentGearNumber = iprot.readI32();
      struct.set_currentGearNumberIsSet(true);
      struct._lastGroupControlled = iprot.readI32();
      struct.set_lastGroupControlledIsSet(true);
      struct._directStartTime = iprot.readI64();
      struct.set_directStartTimeIsSet(true);
      struct._directstopTime = iprot.readI64();
      struct.set_directstopTimeIsSet(true);
      struct._notifyActiveTime = iprot.readI64();
      struct.set_notifyActiveTimeIsSet(true);
      struct._notifyInactiveTime = iprot.readI64();
      struct.set_notifyInactiveTimeIsSet(true);
      struct._startedRampingOut = iprot.readI64();
      struct.set_startedRampingOutIsSet(true);
      struct._triggerOffset = iprot.readI32();
      struct.set_triggerOffsetIsSet(true);
      struct._triggerRestoreOffset = iprot.readI32();
      struct.set_triggerRestoreOffsetIsSet(true);
      struct._constraintOverride = iprot.readBool();
      struct.set_constraintOverrideIsSet(true);
      {
        org.apache.thrift.protocol.TList _list36 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct._lmProgramDirectGears = new java.util.ArrayList<LMProgramDirectGear>(_list36.size);
        @org.apache.thrift.annotation.Nullable LMProgramDirectGear _elem37;
        for (int _i38 = 0; _i38 < _list36.size; ++_i38)
        {
          _elem37 = new LMProgramDirectGear();
          _elem37.read(iprot);
          struct._lmProgramDirectGears.add(_elem37);
        }
      }
      struct.set_lmProgramDirectGearsIsSet(true);
      {
        org.apache.thrift.protocol.TList _list39 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct._lmProgramDirectGroups = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>(_list39.size);
        @org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.GenericMessage _elem40;
        for (int _i41 = 0; _i41 < _list39.size; ++_i41)
        {
          _elem40 = new com.cannontech.messaging.serialization.thrift.generated.GenericMessage();
          _elem40.read(iprot);
          struct._lmProgramDirectGroups.add(_elem40);
        }
      }
      struct.set_lmProgramDirectGroupsIsSet(true);
      {
        org.apache.thrift.protocol.TList _list42 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct._activeMasters = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>(_list42.size);
        @org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.GenericMessage _elem43;
        for (int _i44 = 0; _i44 < _list42.size; ++_i44)
        {
          _elem43 = new com.cannontech.messaging.serialization.thrift.generated.GenericMessage();
          _elem43.read(iprot);
          struct._activeMasters.add(_elem43);
        }
      }
      struct.set_activeMastersIsSet(true);
      {
        org.apache.thrift.protocol.TList _list45 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct._activeSubordinates = new java.util.ArrayList<com.cannontech.messaging.serialization.thrift.generated.GenericMessage>(_list45.size);
        @org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.GenericMessage _elem46;
        for (int _i47 = 0; _i47 < _list45.size; ++_i47)
        {
          _elem46 = new com.cannontech.messaging.serialization.thrift.generated.GenericMessage();
          _elem46.read(iprot);
          struct._activeSubordinates.add(_elem46);
        }
      }
      struct.set_activeSubordinatesIsSet(true);
      struct._originSource = iprot.readString();
      struct.set_originSourceIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

