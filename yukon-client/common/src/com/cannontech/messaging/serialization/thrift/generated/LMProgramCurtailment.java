/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-05-31")
public class LMProgramCurtailment implements org.apache.thrift.TBase<LMProgramCurtailment, LMProgramCurtailment._Fields>, java.io.Serializable, Cloneable, Comparable<LMProgramCurtailment> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("LMProgramCurtailment");

  private static final org.apache.thrift.protocol.TField _BASE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_baseMessage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField _MIN_NOTIFY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_minNotifyTime", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _HEADING_FIELD_DESC = new org.apache.thrift.protocol.TField("_heading", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField _MESSAGE_HEADER_FIELD_DESC = new org.apache.thrift.protocol.TField("_messageHeader", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField _MESSAGE_FOOTER_FIELD_DESC = new org.apache.thrift.protocol.TField("_messageFooter", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField _ACKTIME_LIMIT_FIELD_DESC = new org.apache.thrift.protocol.TField("_acktimeLimit", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField _CANCELED_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("_canceledMsg", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField _STOPPED_EARLY_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("_stoppedEarlyMsg", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField _CURTAIL_REFERENCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_curtailReferenceId", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField _ACTION_DATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_actionDateTime", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField _NOTIFICATION_DATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_notificationDateTime", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField _CURTAILMENT_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_curtailmentStartTime", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField _CURTAILMENT_STOP_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_curtailmentStopTime", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField _RUN_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("_runStatus", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField _ADDITIONAL_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("_additionalInfo", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField _LM_PROGRAM_CURTAILMENT_CUSTOMERS_FIELD_DESC = new org.apache.thrift.protocol.TField("_lmProgramCurtailmentCustomers", org.apache.thrift.protocol.TType.LIST, (short)16);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new LMProgramCurtailmentStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new LMProgramCurtailmentTupleSchemeFactory();

  private @org.apache.thrift.annotation.Nullable LMProgramBase _baseMessage; // required
  private int _minNotifyTime; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _heading; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _messageHeader; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _messageFooter; // required
  private int _acktimeLimit; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _canceledMsg; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _stoppedEarlyMsg; // required
  private int _curtailReferenceId; // required
  private long _actionDateTime; // required
  private long _notificationDateTime; // required
  private long _curtailmentStartTime; // required
  private long _curtailmentStopTime; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _runStatus; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _additionalInfo; // required
  private @org.apache.thrift.annotation.Nullable java.util.List<LMCurtailCustomer> _lmProgramCurtailmentCustomers; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _BASE_MESSAGE((short)1, "_baseMessage"),
    _MIN_NOTIFY_TIME((short)2, "_minNotifyTime"),
    _HEADING((short)3, "_heading"),
    _MESSAGE_HEADER((short)4, "_messageHeader"),
    _MESSAGE_FOOTER((short)5, "_messageFooter"),
    _ACKTIME_LIMIT((short)6, "_acktimeLimit"),
    _CANCELED_MSG((short)7, "_canceledMsg"),
    _STOPPED_EARLY_MSG((short)8, "_stoppedEarlyMsg"),
    _CURTAIL_REFERENCE_ID((short)9, "_curtailReferenceId"),
    _ACTION_DATE_TIME((short)10, "_actionDateTime"),
    _NOTIFICATION_DATE_TIME((short)11, "_notificationDateTime"),
    _CURTAILMENT_START_TIME((short)12, "_curtailmentStartTime"),
    _CURTAILMENT_STOP_TIME((short)13, "_curtailmentStopTime"),
    _RUN_STATUS((short)14, "_runStatus"),
    _ADDITIONAL_INFO((short)15, "_additionalInfo"),
    _LM_PROGRAM_CURTAILMENT_CUSTOMERS((short)16, "_lmProgramCurtailmentCustomers");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _BASE_MESSAGE
          return _BASE_MESSAGE;
        case 2: // _MIN_NOTIFY_TIME
          return _MIN_NOTIFY_TIME;
        case 3: // _HEADING
          return _HEADING;
        case 4: // _MESSAGE_HEADER
          return _MESSAGE_HEADER;
        case 5: // _MESSAGE_FOOTER
          return _MESSAGE_FOOTER;
        case 6: // _ACKTIME_LIMIT
          return _ACKTIME_LIMIT;
        case 7: // _CANCELED_MSG
          return _CANCELED_MSG;
        case 8: // _STOPPED_EARLY_MSG
          return _STOPPED_EARLY_MSG;
        case 9: // _CURTAIL_REFERENCE_ID
          return _CURTAIL_REFERENCE_ID;
        case 10: // _ACTION_DATE_TIME
          return _ACTION_DATE_TIME;
        case 11: // _NOTIFICATION_DATE_TIME
          return _NOTIFICATION_DATE_TIME;
        case 12: // _CURTAILMENT_START_TIME
          return _CURTAILMENT_START_TIME;
        case 13: // _CURTAILMENT_STOP_TIME
          return _CURTAILMENT_STOP_TIME;
        case 14: // _RUN_STATUS
          return _RUN_STATUS;
        case 15: // _ADDITIONAL_INFO
          return _ADDITIONAL_INFO;
        case 16: // _LM_PROGRAM_CURTAILMENT_CUSTOMERS
          return _LM_PROGRAM_CURTAILMENT_CUSTOMERS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___MINNOTIFYTIME_ISSET_ID = 0;
  private static final int ___ACKTIMELIMIT_ISSET_ID = 1;
  private static final int ___CURTAILREFERENCEID_ISSET_ID = 2;
  private static final int ___ACTIONDATETIME_ISSET_ID = 3;
  private static final int ___NOTIFICATIONDATETIME_ISSET_ID = 4;
  private static final int ___CURTAILMENTSTARTTIME_ISSET_ID = 5;
  private static final int ___CURTAILMENTSTOPTIME_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._BASE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_baseMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LMProgramBase.class)));
    tmpMap.put(_Fields._MIN_NOTIFY_TIME, new org.apache.thrift.meta_data.FieldMetaData("_minNotifyTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._HEADING, new org.apache.thrift.meta_data.FieldMetaData("_heading", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._MESSAGE_HEADER, new org.apache.thrift.meta_data.FieldMetaData("_messageHeader", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._MESSAGE_FOOTER, new org.apache.thrift.meta_data.FieldMetaData("_messageFooter", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._ACKTIME_LIMIT, new org.apache.thrift.meta_data.FieldMetaData("_acktimeLimit", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._CANCELED_MSG, new org.apache.thrift.meta_data.FieldMetaData("_canceledMsg", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._STOPPED_EARLY_MSG, new org.apache.thrift.meta_data.FieldMetaData("_stoppedEarlyMsg", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._CURTAIL_REFERENCE_ID, new org.apache.thrift.meta_data.FieldMetaData("_curtailReferenceId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._ACTION_DATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_actionDateTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._NOTIFICATION_DATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_notificationDateTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._CURTAILMENT_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("_curtailmentStartTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._CURTAILMENT_STOP_TIME, new org.apache.thrift.meta_data.FieldMetaData("_curtailmentStopTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._RUN_STATUS, new org.apache.thrift.meta_data.FieldMetaData("_runStatus", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._ADDITIONAL_INFO, new org.apache.thrift.meta_data.FieldMetaData("_additionalInfo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._LM_PROGRAM_CURTAILMENT_CUSTOMERS, new org.apache.thrift.meta_data.FieldMetaData("_lmProgramCurtailmentCustomers", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LMCurtailCustomer.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(LMProgramCurtailment.class, metaDataMap);
  }

  public LMProgramCurtailment() {
  }

  public LMProgramCurtailment(
    LMProgramBase _baseMessage,
    int _minNotifyTime,
    java.lang.String _heading,
    java.lang.String _messageHeader,
    java.lang.String _messageFooter,
    int _acktimeLimit,
    java.lang.String _canceledMsg,
    java.lang.String _stoppedEarlyMsg,
    int _curtailReferenceId,
    long _actionDateTime,
    long _notificationDateTime,
    long _curtailmentStartTime,
    long _curtailmentStopTime,
    java.lang.String _runStatus,
    java.lang.String _additionalInfo,
    java.util.List<LMCurtailCustomer> _lmProgramCurtailmentCustomers)
  {
    this();
    this._baseMessage = _baseMessage;
    this._minNotifyTime = _minNotifyTime;
    set_minNotifyTimeIsSet(true);
    this._heading = _heading;
    this._messageHeader = _messageHeader;
    this._messageFooter = _messageFooter;
    this._acktimeLimit = _acktimeLimit;
    set_acktimeLimitIsSet(true);
    this._canceledMsg = _canceledMsg;
    this._stoppedEarlyMsg = _stoppedEarlyMsg;
    this._curtailReferenceId = _curtailReferenceId;
    set_curtailReferenceIdIsSet(true);
    this._actionDateTime = _actionDateTime;
    set_actionDateTimeIsSet(true);
    this._notificationDateTime = _notificationDateTime;
    set_notificationDateTimeIsSet(true);
    this._curtailmentStartTime = _curtailmentStartTime;
    set_curtailmentStartTimeIsSet(true);
    this._curtailmentStopTime = _curtailmentStopTime;
    set_curtailmentStopTimeIsSet(true);
    this._runStatus = _runStatus;
    this._additionalInfo = _additionalInfo;
    this._lmProgramCurtailmentCustomers = _lmProgramCurtailmentCustomers;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public LMProgramCurtailment(LMProgramCurtailment other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSet_baseMessage()) {
      this._baseMessage = new LMProgramBase(other._baseMessage);
    }
    this._minNotifyTime = other._minNotifyTime;
    if (other.isSet_heading()) {
      this._heading = other._heading;
    }
    if (other.isSet_messageHeader()) {
      this._messageHeader = other._messageHeader;
    }
    if (other.isSet_messageFooter()) {
      this._messageFooter = other._messageFooter;
    }
    this._acktimeLimit = other._acktimeLimit;
    if (other.isSet_canceledMsg()) {
      this._canceledMsg = other._canceledMsg;
    }
    if (other.isSet_stoppedEarlyMsg()) {
      this._stoppedEarlyMsg = other._stoppedEarlyMsg;
    }
    this._curtailReferenceId = other._curtailReferenceId;
    this._actionDateTime = other._actionDateTime;
    this._notificationDateTime = other._notificationDateTime;
    this._curtailmentStartTime = other._curtailmentStartTime;
    this._curtailmentStopTime = other._curtailmentStopTime;
    if (other.isSet_runStatus()) {
      this._runStatus = other._runStatus;
    }
    if (other.isSet_additionalInfo()) {
      this._additionalInfo = other._additionalInfo;
    }
    if (other.isSet_lmProgramCurtailmentCustomers()) {
      java.util.List<LMCurtailCustomer> __this___lmProgramCurtailmentCustomers = new java.util.ArrayList<LMCurtailCustomer>(other._lmProgramCurtailmentCustomers.size());
      for (LMCurtailCustomer other_element : other._lmProgramCurtailmentCustomers) {
        __this___lmProgramCurtailmentCustomers.add(new LMCurtailCustomer(other_element));
      }
      this._lmProgramCurtailmentCustomers = __this___lmProgramCurtailmentCustomers;
    }
  }

  public LMProgramCurtailment deepCopy() {
    return new LMProgramCurtailment(this);
  }

  @Override
  public void clear() {
    this._baseMessage = null;
    set_minNotifyTimeIsSet(false);
    this._minNotifyTime = 0;
    this._heading = null;
    this._messageHeader = null;
    this._messageFooter = null;
    set_acktimeLimitIsSet(false);
    this._acktimeLimit = 0;
    this._canceledMsg = null;
    this._stoppedEarlyMsg = null;
    set_curtailReferenceIdIsSet(false);
    this._curtailReferenceId = 0;
    set_actionDateTimeIsSet(false);
    this._actionDateTime = 0;
    set_notificationDateTimeIsSet(false);
    this._notificationDateTime = 0;
    set_curtailmentStartTimeIsSet(false);
    this._curtailmentStartTime = 0;
    set_curtailmentStopTimeIsSet(false);
    this._curtailmentStopTime = 0;
    this._runStatus = null;
    this._additionalInfo = null;
    this._lmProgramCurtailmentCustomers = null;
  }

  @org.apache.thrift.annotation.Nullable
  public LMProgramBase get_baseMessage() {
    return this._baseMessage;
  }

  public void set_baseMessage(@org.apache.thrift.annotation.Nullable LMProgramBase _baseMessage) {
    this._baseMessage = _baseMessage;
  }

  public void unset_baseMessage() {
    this._baseMessage = null;
  }

  /** Returns true if field _baseMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_baseMessage() {
    return this._baseMessage != null;
  }

  public void set_baseMessageIsSet(boolean value) {
    if (!value) {
      this._baseMessage = null;
    }
  }

  public int get_minNotifyTime() {
    return this._minNotifyTime;
  }

  public void set_minNotifyTime(int _minNotifyTime) {
    this._minNotifyTime = _minNotifyTime;
    set_minNotifyTimeIsSet(true);
  }

  public void unset_minNotifyTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___MINNOTIFYTIME_ISSET_ID);
  }

  /** Returns true if field _minNotifyTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_minNotifyTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___MINNOTIFYTIME_ISSET_ID);
  }

  public void set_minNotifyTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___MINNOTIFYTIME_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_heading() {
    return this._heading;
  }

  public void set_heading(@org.apache.thrift.annotation.Nullable java.lang.String _heading) {
    this._heading = _heading;
  }

  public void unset_heading() {
    this._heading = null;
  }

  /** Returns true if field _heading is set (has been assigned a value) and false otherwise */
  public boolean isSet_heading() {
    return this._heading != null;
  }

  public void set_headingIsSet(boolean value) {
    if (!value) {
      this._heading = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_messageHeader() {
    return this._messageHeader;
  }

  public void set_messageHeader(@org.apache.thrift.annotation.Nullable java.lang.String _messageHeader) {
    this._messageHeader = _messageHeader;
  }

  public void unset_messageHeader() {
    this._messageHeader = null;
  }

  /** Returns true if field _messageHeader is set (has been assigned a value) and false otherwise */
  public boolean isSet_messageHeader() {
    return this._messageHeader != null;
  }

  public void set_messageHeaderIsSet(boolean value) {
    if (!value) {
      this._messageHeader = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_messageFooter() {
    return this._messageFooter;
  }

  public void set_messageFooter(@org.apache.thrift.annotation.Nullable java.lang.String _messageFooter) {
    this._messageFooter = _messageFooter;
  }

  public void unset_messageFooter() {
    this._messageFooter = null;
  }

  /** Returns true if field _messageFooter is set (has been assigned a value) and false otherwise */
  public boolean isSet_messageFooter() {
    return this._messageFooter != null;
  }

  public void set_messageFooterIsSet(boolean value) {
    if (!value) {
      this._messageFooter = null;
    }
  }

  public int get_acktimeLimit() {
    return this._acktimeLimit;
  }

  public void set_acktimeLimit(int _acktimeLimit) {
    this._acktimeLimit = _acktimeLimit;
    set_acktimeLimitIsSet(true);
  }

  public void unset_acktimeLimit() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___ACKTIMELIMIT_ISSET_ID);
  }

  /** Returns true if field _acktimeLimit is set (has been assigned a value) and false otherwise */
  public boolean isSet_acktimeLimit() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___ACKTIMELIMIT_ISSET_ID);
  }

  public void set_acktimeLimitIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___ACKTIMELIMIT_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_canceledMsg() {
    return this._canceledMsg;
  }

  public void set_canceledMsg(@org.apache.thrift.annotation.Nullable java.lang.String _canceledMsg) {
    this._canceledMsg = _canceledMsg;
  }

  public void unset_canceledMsg() {
    this._canceledMsg = null;
  }

  /** Returns true if field _canceledMsg is set (has been assigned a value) and false otherwise */
  public boolean isSet_canceledMsg() {
    return this._canceledMsg != null;
  }

  public void set_canceledMsgIsSet(boolean value) {
    if (!value) {
      this._canceledMsg = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_stoppedEarlyMsg() {
    return this._stoppedEarlyMsg;
  }

  public void set_stoppedEarlyMsg(@org.apache.thrift.annotation.Nullable java.lang.String _stoppedEarlyMsg) {
    this._stoppedEarlyMsg = _stoppedEarlyMsg;
  }

  public void unset_stoppedEarlyMsg() {
    this._stoppedEarlyMsg = null;
  }

  /** Returns true if field _stoppedEarlyMsg is set (has been assigned a value) and false otherwise */
  public boolean isSet_stoppedEarlyMsg() {
    return this._stoppedEarlyMsg != null;
  }

  public void set_stoppedEarlyMsgIsSet(boolean value) {
    if (!value) {
      this._stoppedEarlyMsg = null;
    }
  }

  public int get_curtailReferenceId() {
    return this._curtailReferenceId;
  }

  public void set_curtailReferenceId(int _curtailReferenceId) {
    this._curtailReferenceId = _curtailReferenceId;
    set_curtailReferenceIdIsSet(true);
  }

  public void unset_curtailReferenceId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___CURTAILREFERENCEID_ISSET_ID);
  }

  /** Returns true if field _curtailReferenceId is set (has been assigned a value) and false otherwise */
  public boolean isSet_curtailReferenceId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___CURTAILREFERENCEID_ISSET_ID);
  }

  public void set_curtailReferenceIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___CURTAILREFERENCEID_ISSET_ID, value);
  }

  public long get_actionDateTime() {
    return this._actionDateTime;
  }

  public void set_actionDateTime(long _actionDateTime) {
    this._actionDateTime = _actionDateTime;
    set_actionDateTimeIsSet(true);
  }

  public void unset_actionDateTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___ACTIONDATETIME_ISSET_ID);
  }

  /** Returns true if field _actionDateTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_actionDateTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___ACTIONDATETIME_ISSET_ID);
  }

  public void set_actionDateTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___ACTIONDATETIME_ISSET_ID, value);
  }

  public long get_notificationDateTime() {
    return this._notificationDateTime;
  }

  public void set_notificationDateTime(long _notificationDateTime) {
    this._notificationDateTime = _notificationDateTime;
    set_notificationDateTimeIsSet(true);
  }

  public void unset_notificationDateTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___NOTIFICATIONDATETIME_ISSET_ID);
  }

  /** Returns true if field _notificationDateTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_notificationDateTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___NOTIFICATIONDATETIME_ISSET_ID);
  }

  public void set_notificationDateTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___NOTIFICATIONDATETIME_ISSET_ID, value);
  }

  public long get_curtailmentStartTime() {
    return this._curtailmentStartTime;
  }

  public void set_curtailmentStartTime(long _curtailmentStartTime) {
    this._curtailmentStartTime = _curtailmentStartTime;
    set_curtailmentStartTimeIsSet(true);
  }

  public void unset_curtailmentStartTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___CURTAILMENTSTARTTIME_ISSET_ID);
  }

  /** Returns true if field _curtailmentStartTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_curtailmentStartTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___CURTAILMENTSTARTTIME_ISSET_ID);
  }

  public void set_curtailmentStartTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___CURTAILMENTSTARTTIME_ISSET_ID, value);
  }

  public long get_curtailmentStopTime() {
    return this._curtailmentStopTime;
  }

  public void set_curtailmentStopTime(long _curtailmentStopTime) {
    this._curtailmentStopTime = _curtailmentStopTime;
    set_curtailmentStopTimeIsSet(true);
  }

  public void unset_curtailmentStopTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___CURTAILMENTSTOPTIME_ISSET_ID);
  }

  /** Returns true if field _curtailmentStopTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_curtailmentStopTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___CURTAILMENTSTOPTIME_ISSET_ID);
  }

  public void set_curtailmentStopTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___CURTAILMENTSTOPTIME_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_runStatus() {
    return this._runStatus;
  }

  public void set_runStatus(@org.apache.thrift.annotation.Nullable java.lang.String _runStatus) {
    this._runStatus = _runStatus;
  }

  public void unset_runStatus() {
    this._runStatus = null;
  }

  /** Returns true if field _runStatus is set (has been assigned a value) and false otherwise */
  public boolean isSet_runStatus() {
    return this._runStatus != null;
  }

  public void set_runStatusIsSet(boolean value) {
    if (!value) {
      this._runStatus = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_additionalInfo() {
    return this._additionalInfo;
  }

  public void set_additionalInfo(@org.apache.thrift.annotation.Nullable java.lang.String _additionalInfo) {
    this._additionalInfo = _additionalInfo;
  }

  public void unset_additionalInfo() {
    this._additionalInfo = null;
  }

  /** Returns true if field _additionalInfo is set (has been assigned a value) and false otherwise */
  public boolean isSet_additionalInfo() {
    return this._additionalInfo != null;
  }

  public void set_additionalInfoIsSet(boolean value) {
    if (!value) {
      this._additionalInfo = null;
    }
  }

  public int get_lmProgramCurtailmentCustomersSize() {
    return (this._lmProgramCurtailmentCustomers == null) ? 0 : this._lmProgramCurtailmentCustomers.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<LMCurtailCustomer> get_lmProgramCurtailmentCustomersIterator() {
    return (this._lmProgramCurtailmentCustomers == null) ? null : this._lmProgramCurtailmentCustomers.iterator();
  }

  public void addTo_lmProgramCurtailmentCustomers(LMCurtailCustomer elem) {
    if (this._lmProgramCurtailmentCustomers == null) {
      this._lmProgramCurtailmentCustomers = new java.util.ArrayList<LMCurtailCustomer>();
    }
    this._lmProgramCurtailmentCustomers.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<LMCurtailCustomer> get_lmProgramCurtailmentCustomers() {
    return this._lmProgramCurtailmentCustomers;
  }

  public void set_lmProgramCurtailmentCustomers(@org.apache.thrift.annotation.Nullable java.util.List<LMCurtailCustomer> _lmProgramCurtailmentCustomers) {
    this._lmProgramCurtailmentCustomers = _lmProgramCurtailmentCustomers;
  }

  public void unset_lmProgramCurtailmentCustomers() {
    this._lmProgramCurtailmentCustomers = null;
  }

  /** Returns true if field _lmProgramCurtailmentCustomers is set (has been assigned a value) and false otherwise */
  public boolean isSet_lmProgramCurtailmentCustomers() {
    return this._lmProgramCurtailmentCustomers != null;
  }

  public void set_lmProgramCurtailmentCustomersIsSet(boolean value) {
    if (!value) {
      this._lmProgramCurtailmentCustomers = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case _BASE_MESSAGE:
      if (value == null) {
        unset_baseMessage();
      } else {
        set_baseMessage((LMProgramBase)value);
      }
      break;

    case _MIN_NOTIFY_TIME:
      if (value == null) {
        unset_minNotifyTime();
      } else {
        set_minNotifyTime((java.lang.Integer)value);
      }
      break;

    case _HEADING:
      if (value == null) {
        unset_heading();
      } else {
        set_heading((java.lang.String)value);
      }
      break;

    case _MESSAGE_HEADER:
      if (value == null) {
        unset_messageHeader();
      } else {
        set_messageHeader((java.lang.String)value);
      }
      break;

    case _MESSAGE_FOOTER:
      if (value == null) {
        unset_messageFooter();
      } else {
        set_messageFooter((java.lang.String)value);
      }
      break;

    case _ACKTIME_LIMIT:
      if (value == null) {
        unset_acktimeLimit();
      } else {
        set_acktimeLimit((java.lang.Integer)value);
      }
      break;

    case _CANCELED_MSG:
      if (value == null) {
        unset_canceledMsg();
      } else {
        set_canceledMsg((java.lang.String)value);
      }
      break;

    case _STOPPED_EARLY_MSG:
      if (value == null) {
        unset_stoppedEarlyMsg();
      } else {
        set_stoppedEarlyMsg((java.lang.String)value);
      }
      break;

    case _CURTAIL_REFERENCE_ID:
      if (value == null) {
        unset_curtailReferenceId();
      } else {
        set_curtailReferenceId((java.lang.Integer)value);
      }
      break;

    case _ACTION_DATE_TIME:
      if (value == null) {
        unset_actionDateTime();
      } else {
        set_actionDateTime((java.lang.Long)value);
      }
      break;

    case _NOTIFICATION_DATE_TIME:
      if (value == null) {
        unset_notificationDateTime();
      } else {
        set_notificationDateTime((java.lang.Long)value);
      }
      break;

    case _CURTAILMENT_START_TIME:
      if (value == null) {
        unset_curtailmentStartTime();
      } else {
        set_curtailmentStartTime((java.lang.Long)value);
      }
      break;

    case _CURTAILMENT_STOP_TIME:
      if (value == null) {
        unset_curtailmentStopTime();
      } else {
        set_curtailmentStopTime((java.lang.Long)value);
      }
      break;

    case _RUN_STATUS:
      if (value == null) {
        unset_runStatus();
      } else {
        set_runStatus((java.lang.String)value);
      }
      break;

    case _ADDITIONAL_INFO:
      if (value == null) {
        unset_additionalInfo();
      } else {
        set_additionalInfo((java.lang.String)value);
      }
      break;

    case _LM_PROGRAM_CURTAILMENT_CUSTOMERS:
      if (value == null) {
        unset_lmProgramCurtailmentCustomers();
      } else {
        set_lmProgramCurtailmentCustomers((java.util.List<LMCurtailCustomer>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _BASE_MESSAGE:
      return get_baseMessage();

    case _MIN_NOTIFY_TIME:
      return get_minNotifyTime();

    case _HEADING:
      return get_heading();

    case _MESSAGE_HEADER:
      return get_messageHeader();

    case _MESSAGE_FOOTER:
      return get_messageFooter();

    case _ACKTIME_LIMIT:
      return get_acktimeLimit();

    case _CANCELED_MSG:
      return get_canceledMsg();

    case _STOPPED_EARLY_MSG:
      return get_stoppedEarlyMsg();

    case _CURTAIL_REFERENCE_ID:
      return get_curtailReferenceId();

    case _ACTION_DATE_TIME:
      return get_actionDateTime();

    case _NOTIFICATION_DATE_TIME:
      return get_notificationDateTime();

    case _CURTAILMENT_START_TIME:
      return get_curtailmentStartTime();

    case _CURTAILMENT_STOP_TIME:
      return get_curtailmentStopTime();

    case _RUN_STATUS:
      return get_runStatus();

    case _ADDITIONAL_INFO:
      return get_additionalInfo();

    case _LM_PROGRAM_CURTAILMENT_CUSTOMERS:
      return get_lmProgramCurtailmentCustomers();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _BASE_MESSAGE:
      return isSet_baseMessage();
    case _MIN_NOTIFY_TIME:
      return isSet_minNotifyTime();
    case _HEADING:
      return isSet_heading();
    case _MESSAGE_HEADER:
      return isSet_messageHeader();
    case _MESSAGE_FOOTER:
      return isSet_messageFooter();
    case _ACKTIME_LIMIT:
      return isSet_acktimeLimit();
    case _CANCELED_MSG:
      return isSet_canceledMsg();
    case _STOPPED_EARLY_MSG:
      return isSet_stoppedEarlyMsg();
    case _CURTAIL_REFERENCE_ID:
      return isSet_curtailReferenceId();
    case _ACTION_DATE_TIME:
      return isSet_actionDateTime();
    case _NOTIFICATION_DATE_TIME:
      return isSet_notificationDateTime();
    case _CURTAILMENT_START_TIME:
      return isSet_curtailmentStartTime();
    case _CURTAILMENT_STOP_TIME:
      return isSet_curtailmentStopTime();
    case _RUN_STATUS:
      return isSet_runStatus();
    case _ADDITIONAL_INFO:
      return isSet_additionalInfo();
    case _LM_PROGRAM_CURTAILMENT_CUSTOMERS:
      return isSet_lmProgramCurtailmentCustomers();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof LMProgramCurtailment)
      return this.equals((LMProgramCurtailment)that);
    return false;
  }

  public boolean equals(LMProgramCurtailment that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__baseMessage = true && this.isSet_baseMessage();
    boolean that_present__baseMessage = true && that.isSet_baseMessage();
    if (this_present__baseMessage || that_present__baseMessage) {
      if (!(this_present__baseMessage && that_present__baseMessage))
        return false;
      if (!this._baseMessage.equals(that._baseMessage))
        return false;
    }

    boolean this_present__minNotifyTime = true;
    boolean that_present__minNotifyTime = true;
    if (this_present__minNotifyTime || that_present__minNotifyTime) {
      if (!(this_present__minNotifyTime && that_present__minNotifyTime))
        return false;
      if (this._minNotifyTime != that._minNotifyTime)
        return false;
    }

    boolean this_present__heading = true && this.isSet_heading();
    boolean that_present__heading = true && that.isSet_heading();
    if (this_present__heading || that_present__heading) {
      if (!(this_present__heading && that_present__heading))
        return false;
      if (!this._heading.equals(that._heading))
        return false;
    }

    boolean this_present__messageHeader = true && this.isSet_messageHeader();
    boolean that_present__messageHeader = true && that.isSet_messageHeader();
    if (this_present__messageHeader || that_present__messageHeader) {
      if (!(this_present__messageHeader && that_present__messageHeader))
        return false;
      if (!this._messageHeader.equals(that._messageHeader))
        return false;
    }

    boolean this_present__messageFooter = true && this.isSet_messageFooter();
    boolean that_present__messageFooter = true && that.isSet_messageFooter();
    if (this_present__messageFooter || that_present__messageFooter) {
      if (!(this_present__messageFooter && that_present__messageFooter))
        return false;
      if (!this._messageFooter.equals(that._messageFooter))
        return false;
    }

    boolean this_present__acktimeLimit = true;
    boolean that_present__acktimeLimit = true;
    if (this_present__acktimeLimit || that_present__acktimeLimit) {
      if (!(this_present__acktimeLimit && that_present__acktimeLimit))
        return false;
      if (this._acktimeLimit != that._acktimeLimit)
        return false;
    }

    boolean this_present__canceledMsg = true && this.isSet_canceledMsg();
    boolean that_present__canceledMsg = true && that.isSet_canceledMsg();
    if (this_present__canceledMsg || that_present__canceledMsg) {
      if (!(this_present__canceledMsg && that_present__canceledMsg))
        return false;
      if (!this._canceledMsg.equals(that._canceledMsg))
        return false;
    }

    boolean this_present__stoppedEarlyMsg = true && this.isSet_stoppedEarlyMsg();
    boolean that_present__stoppedEarlyMsg = true && that.isSet_stoppedEarlyMsg();
    if (this_present__stoppedEarlyMsg || that_present__stoppedEarlyMsg) {
      if (!(this_present__stoppedEarlyMsg && that_present__stoppedEarlyMsg))
        return false;
      if (!this._stoppedEarlyMsg.equals(that._stoppedEarlyMsg))
        return false;
    }

    boolean this_present__curtailReferenceId = true;
    boolean that_present__curtailReferenceId = true;
    if (this_present__curtailReferenceId || that_present__curtailReferenceId) {
      if (!(this_present__curtailReferenceId && that_present__curtailReferenceId))
        return false;
      if (this._curtailReferenceId != that._curtailReferenceId)
        return false;
    }

    boolean this_present__actionDateTime = true;
    boolean that_present__actionDateTime = true;
    if (this_present__actionDateTime || that_present__actionDateTime) {
      if (!(this_present__actionDateTime && that_present__actionDateTime))
        return false;
      if (this._actionDateTime != that._actionDateTime)
        return false;
    }

    boolean this_present__notificationDateTime = true;
    boolean that_present__notificationDateTime = true;
    if (this_present__notificationDateTime || that_present__notificationDateTime) {
      if (!(this_present__notificationDateTime && that_present__notificationDateTime))
        return false;
      if (this._notificationDateTime != that._notificationDateTime)
        return false;
    }

    boolean this_present__curtailmentStartTime = true;
    boolean that_present__curtailmentStartTime = true;
    if (this_present__curtailmentStartTime || that_present__curtailmentStartTime) {
      if (!(this_present__curtailmentStartTime && that_present__curtailmentStartTime))
        return false;
      if (this._curtailmentStartTime != that._curtailmentStartTime)
        return false;
    }

    boolean this_present__curtailmentStopTime = true;
    boolean that_present__curtailmentStopTime = true;
    if (this_present__curtailmentStopTime || that_present__curtailmentStopTime) {
      if (!(this_present__curtailmentStopTime && that_present__curtailmentStopTime))
        return false;
      if (this._curtailmentStopTime != that._curtailmentStopTime)
        return false;
    }

    boolean this_present__runStatus = true && this.isSet_runStatus();
    boolean that_present__runStatus = true && that.isSet_runStatus();
    if (this_present__runStatus || that_present__runStatus) {
      if (!(this_present__runStatus && that_present__runStatus))
        return false;
      if (!this._runStatus.equals(that._runStatus))
        return false;
    }

    boolean this_present__additionalInfo = true && this.isSet_additionalInfo();
    boolean that_present__additionalInfo = true && that.isSet_additionalInfo();
    if (this_present__additionalInfo || that_present__additionalInfo) {
      if (!(this_present__additionalInfo && that_present__additionalInfo))
        return false;
      if (!this._additionalInfo.equals(that._additionalInfo))
        return false;
    }

    boolean this_present__lmProgramCurtailmentCustomers = true && this.isSet_lmProgramCurtailmentCustomers();
    boolean that_present__lmProgramCurtailmentCustomers = true && that.isSet_lmProgramCurtailmentCustomers();
    if (this_present__lmProgramCurtailmentCustomers || that_present__lmProgramCurtailmentCustomers) {
      if (!(this_present__lmProgramCurtailmentCustomers && that_present__lmProgramCurtailmentCustomers))
        return false;
      if (!this._lmProgramCurtailmentCustomers.equals(that._lmProgramCurtailmentCustomers))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSet_baseMessage()) ? 131071 : 524287);
    if (isSet_baseMessage())
      hashCode = hashCode * 8191 + _baseMessage.hashCode();

    hashCode = hashCode * 8191 + _minNotifyTime;

    hashCode = hashCode * 8191 + ((isSet_heading()) ? 131071 : 524287);
    if (isSet_heading())
      hashCode = hashCode * 8191 + _heading.hashCode();

    hashCode = hashCode * 8191 + ((isSet_messageHeader()) ? 131071 : 524287);
    if (isSet_messageHeader())
      hashCode = hashCode * 8191 + _messageHeader.hashCode();

    hashCode = hashCode * 8191 + ((isSet_messageFooter()) ? 131071 : 524287);
    if (isSet_messageFooter())
      hashCode = hashCode * 8191 + _messageFooter.hashCode();

    hashCode = hashCode * 8191 + _acktimeLimit;

    hashCode = hashCode * 8191 + ((isSet_canceledMsg()) ? 131071 : 524287);
    if (isSet_canceledMsg())
      hashCode = hashCode * 8191 + _canceledMsg.hashCode();

    hashCode = hashCode * 8191 + ((isSet_stoppedEarlyMsg()) ? 131071 : 524287);
    if (isSet_stoppedEarlyMsg())
      hashCode = hashCode * 8191 + _stoppedEarlyMsg.hashCode();

    hashCode = hashCode * 8191 + _curtailReferenceId;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_actionDateTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_notificationDateTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_curtailmentStartTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_curtailmentStopTime);

    hashCode = hashCode * 8191 + ((isSet_runStatus()) ? 131071 : 524287);
    if (isSet_runStatus())
      hashCode = hashCode * 8191 + _runStatus.hashCode();

    hashCode = hashCode * 8191 + ((isSet_additionalInfo()) ? 131071 : 524287);
    if (isSet_additionalInfo())
      hashCode = hashCode * 8191 + _additionalInfo.hashCode();

    hashCode = hashCode * 8191 + ((isSet_lmProgramCurtailmentCustomers()) ? 131071 : 524287);
    if (isSet_lmProgramCurtailmentCustomers())
      hashCode = hashCode * 8191 + _lmProgramCurtailmentCustomers.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(LMProgramCurtailment other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSet_baseMessage(), other.isSet_baseMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_baseMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._baseMessage, other._baseMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_minNotifyTime(), other.isSet_minNotifyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_minNotifyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._minNotifyTime, other._minNotifyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_heading(), other.isSet_heading());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_heading()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._heading, other._heading);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_messageHeader(), other.isSet_messageHeader());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_messageHeader()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._messageHeader, other._messageHeader);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_messageFooter(), other.isSet_messageFooter());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_messageFooter()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._messageFooter, other._messageFooter);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_acktimeLimit(), other.isSet_acktimeLimit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_acktimeLimit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._acktimeLimit, other._acktimeLimit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_canceledMsg(), other.isSet_canceledMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_canceledMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._canceledMsg, other._canceledMsg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_stoppedEarlyMsg(), other.isSet_stoppedEarlyMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_stoppedEarlyMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._stoppedEarlyMsg, other._stoppedEarlyMsg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_curtailReferenceId(), other.isSet_curtailReferenceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_curtailReferenceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._curtailReferenceId, other._curtailReferenceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_actionDateTime(), other.isSet_actionDateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_actionDateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._actionDateTime, other._actionDateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_notificationDateTime(), other.isSet_notificationDateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_notificationDateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._notificationDateTime, other._notificationDateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_curtailmentStartTime(), other.isSet_curtailmentStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_curtailmentStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._curtailmentStartTime, other._curtailmentStartTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_curtailmentStopTime(), other.isSet_curtailmentStopTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_curtailmentStopTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._curtailmentStopTime, other._curtailmentStopTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_runStatus(), other.isSet_runStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_runStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._runStatus, other._runStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_additionalInfo(), other.isSet_additionalInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_additionalInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._additionalInfo, other._additionalInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_lmProgramCurtailmentCustomers(), other.isSet_lmProgramCurtailmentCustomers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lmProgramCurtailmentCustomers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lmProgramCurtailmentCustomers, other._lmProgramCurtailmentCustomers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("LMProgramCurtailment(");
    boolean first = true;

    sb.append("_baseMessage:");
    if (this._baseMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._baseMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_minNotifyTime:");
    sb.append(this._minNotifyTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_heading:");
    if (this._heading == null) {
      sb.append("null");
    } else {
      sb.append(this._heading);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_messageHeader:");
    if (this._messageHeader == null) {
      sb.append("null");
    } else {
      sb.append(this._messageHeader);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_messageFooter:");
    if (this._messageFooter == null) {
      sb.append("null");
    } else {
      sb.append(this._messageFooter);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_acktimeLimit:");
    sb.append(this._acktimeLimit);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_canceledMsg:");
    if (this._canceledMsg == null) {
      sb.append("null");
    } else {
      sb.append(this._canceledMsg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_stoppedEarlyMsg:");
    if (this._stoppedEarlyMsg == null) {
      sb.append("null");
    } else {
      sb.append(this._stoppedEarlyMsg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_curtailReferenceId:");
    sb.append(this._curtailReferenceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_actionDateTime:");
    sb.append(this._actionDateTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_notificationDateTime:");
    sb.append(this._notificationDateTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_curtailmentStartTime:");
    sb.append(this._curtailmentStartTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_curtailmentStopTime:");
    sb.append(this._curtailmentStopTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_runStatus:");
    if (this._runStatus == null) {
      sb.append("null");
    } else {
      sb.append(this._runStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_additionalInfo:");
    if (this._additionalInfo == null) {
      sb.append("null");
    } else {
      sb.append(this._additionalInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lmProgramCurtailmentCustomers:");
    if (this._lmProgramCurtailmentCustomers == null) {
      sb.append("null");
    } else {
      sb.append(this._lmProgramCurtailmentCustomers);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_baseMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_baseMessage' is unset! Struct:" + toString());
    }

    if (!isSet_minNotifyTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_minNotifyTime' is unset! Struct:" + toString());
    }

    if (!isSet_heading()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_heading' is unset! Struct:" + toString());
    }

    if (!isSet_messageHeader()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_messageHeader' is unset! Struct:" + toString());
    }

    if (!isSet_messageFooter()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_messageFooter' is unset! Struct:" + toString());
    }

    if (!isSet_acktimeLimit()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_acktimeLimit' is unset! Struct:" + toString());
    }

    if (!isSet_canceledMsg()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_canceledMsg' is unset! Struct:" + toString());
    }

    if (!isSet_stoppedEarlyMsg()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_stoppedEarlyMsg' is unset! Struct:" + toString());
    }

    if (!isSet_curtailReferenceId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_curtailReferenceId' is unset! Struct:" + toString());
    }

    if (!isSet_actionDateTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_actionDateTime' is unset! Struct:" + toString());
    }

    if (!isSet_notificationDateTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_notificationDateTime' is unset! Struct:" + toString());
    }

    if (!isSet_curtailmentStartTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_curtailmentStartTime' is unset! Struct:" + toString());
    }

    if (!isSet_curtailmentStopTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_curtailmentStopTime' is unset! Struct:" + toString());
    }

    if (!isSet_runStatus()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_runStatus' is unset! Struct:" + toString());
    }

    if (!isSet_additionalInfo()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_additionalInfo' is unset! Struct:" + toString());
    }

    if (!isSet_lmProgramCurtailmentCustomers()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lmProgramCurtailmentCustomers' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (_baseMessage != null) {
      _baseMessage.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class LMProgramCurtailmentStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMProgramCurtailmentStandardScheme getScheme() {
      return new LMProgramCurtailmentStandardScheme();
    }
  }

  private static class LMProgramCurtailmentStandardScheme extends org.apache.thrift.scheme.StandardScheme<LMProgramCurtailment> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, LMProgramCurtailment struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _BASE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct._baseMessage = new LMProgramBase();
              struct._baseMessage.read(iprot);
              struct.set_baseMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _MIN_NOTIFY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._minNotifyTime = iprot.readI32();
              struct.set_minNotifyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _HEADING
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._heading = iprot.readString();
              struct.set_headingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _MESSAGE_HEADER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._messageHeader = iprot.readString();
              struct.set_messageHeaderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _MESSAGE_FOOTER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._messageFooter = iprot.readString();
              struct.set_messageFooterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // _ACKTIME_LIMIT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._acktimeLimit = iprot.readI32();
              struct.set_acktimeLimitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // _CANCELED_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._canceledMsg = iprot.readString();
              struct.set_canceledMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // _STOPPED_EARLY_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._stoppedEarlyMsg = iprot.readString();
              struct.set_stoppedEarlyMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // _CURTAIL_REFERENCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._curtailReferenceId = iprot.readI32();
              struct.set_curtailReferenceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // _ACTION_DATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._actionDateTime = iprot.readI64();
              struct.set_actionDateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // _NOTIFICATION_DATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._notificationDateTime = iprot.readI64();
              struct.set_notificationDateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // _CURTAILMENT_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._curtailmentStartTime = iprot.readI64();
              struct.set_curtailmentStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // _CURTAILMENT_STOP_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._curtailmentStopTime = iprot.readI64();
              struct.set_curtailmentStopTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // _RUN_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._runStatus = iprot.readString();
              struct.set_runStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // _ADDITIONAL_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._additionalInfo = iprot.readString();
              struct.set_additionalInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // _LM_PROGRAM_CURTAILMENT_CUSTOMERS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                struct._lmProgramCurtailmentCustomers = new java.util.ArrayList<LMCurtailCustomer>(_list8.size);
                @org.apache.thrift.annotation.Nullable LMCurtailCustomer _elem9;
                for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                {
                  _elem9 = new LMCurtailCustomer();
                  _elem9.read(iprot);
                  struct._lmProgramCurtailmentCustomers.add(_elem9);
                }
                iprot.readListEnd();
              }
              struct.set_lmProgramCurtailmentCustomersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, LMProgramCurtailment struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct._baseMessage != null) {
        oprot.writeFieldBegin(_BASE_MESSAGE_FIELD_DESC);
        struct._baseMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_MIN_NOTIFY_TIME_FIELD_DESC);
      oprot.writeI32(struct._minNotifyTime);
      oprot.writeFieldEnd();
      if (struct._heading != null) {
        oprot.writeFieldBegin(_HEADING_FIELD_DESC);
        oprot.writeString(struct._heading);
        oprot.writeFieldEnd();
      }
      if (struct._messageHeader != null) {
        oprot.writeFieldBegin(_MESSAGE_HEADER_FIELD_DESC);
        oprot.writeString(struct._messageHeader);
        oprot.writeFieldEnd();
      }
      if (struct._messageFooter != null) {
        oprot.writeFieldBegin(_MESSAGE_FOOTER_FIELD_DESC);
        oprot.writeString(struct._messageFooter);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_ACKTIME_LIMIT_FIELD_DESC);
      oprot.writeI32(struct._acktimeLimit);
      oprot.writeFieldEnd();
      if (struct._canceledMsg != null) {
        oprot.writeFieldBegin(_CANCELED_MSG_FIELD_DESC);
        oprot.writeString(struct._canceledMsg);
        oprot.writeFieldEnd();
      }
      if (struct._stoppedEarlyMsg != null) {
        oprot.writeFieldBegin(_STOPPED_EARLY_MSG_FIELD_DESC);
        oprot.writeString(struct._stoppedEarlyMsg);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_CURTAIL_REFERENCE_ID_FIELD_DESC);
      oprot.writeI32(struct._curtailReferenceId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_ACTION_DATE_TIME_FIELD_DESC);
      oprot.writeI64(struct._actionDateTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_NOTIFICATION_DATE_TIME_FIELD_DESC);
      oprot.writeI64(struct._notificationDateTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_CURTAILMENT_START_TIME_FIELD_DESC);
      oprot.writeI64(struct._curtailmentStartTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_CURTAILMENT_STOP_TIME_FIELD_DESC);
      oprot.writeI64(struct._curtailmentStopTime);
      oprot.writeFieldEnd();
      if (struct._runStatus != null) {
        oprot.writeFieldBegin(_RUN_STATUS_FIELD_DESC);
        oprot.writeString(struct._runStatus);
        oprot.writeFieldEnd();
      }
      if (struct._additionalInfo != null) {
        oprot.writeFieldBegin(_ADDITIONAL_INFO_FIELD_DESC);
        oprot.writeString(struct._additionalInfo);
        oprot.writeFieldEnd();
      }
      if (struct._lmProgramCurtailmentCustomers != null) {
        oprot.writeFieldBegin(_LM_PROGRAM_CURTAILMENT_CUSTOMERS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct._lmProgramCurtailmentCustomers.size()));
          for (LMCurtailCustomer _iter11 : struct._lmProgramCurtailmentCustomers)
          {
            _iter11.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class LMProgramCurtailmentTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMProgramCurtailmentTupleScheme getScheme() {
      return new LMProgramCurtailmentTupleScheme();
    }
  }

  private static class LMProgramCurtailmentTupleScheme extends org.apache.thrift.scheme.TupleScheme<LMProgramCurtailment> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, LMProgramCurtailment struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage.write(oprot);
      oprot.writeI32(struct._minNotifyTime);
      oprot.writeString(struct._heading);
      oprot.writeString(struct._messageHeader);
      oprot.writeString(struct._messageFooter);
      oprot.writeI32(struct._acktimeLimit);
      oprot.writeString(struct._canceledMsg);
      oprot.writeString(struct._stoppedEarlyMsg);
      oprot.writeI32(struct._curtailReferenceId);
      oprot.writeI64(struct._actionDateTime);
      oprot.writeI64(struct._notificationDateTime);
      oprot.writeI64(struct._curtailmentStartTime);
      oprot.writeI64(struct._curtailmentStopTime);
      oprot.writeString(struct._runStatus);
      oprot.writeString(struct._additionalInfo);
      {
        oprot.writeI32(struct._lmProgramCurtailmentCustomers.size());
        for (LMCurtailCustomer _iter12 : struct._lmProgramCurtailmentCustomers)
        {
          _iter12.write(oprot);
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, LMProgramCurtailment struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage = new LMProgramBase();
      struct._baseMessage.read(iprot);
      struct.set_baseMessageIsSet(true);
      struct._minNotifyTime = iprot.readI32();
      struct.set_minNotifyTimeIsSet(true);
      struct._heading = iprot.readString();
      struct.set_headingIsSet(true);
      struct._messageHeader = iprot.readString();
      struct.set_messageHeaderIsSet(true);
      struct._messageFooter = iprot.readString();
      struct.set_messageFooterIsSet(true);
      struct._acktimeLimit = iprot.readI32();
      struct.set_acktimeLimitIsSet(true);
      struct._canceledMsg = iprot.readString();
      struct.set_canceledMsgIsSet(true);
      struct._stoppedEarlyMsg = iprot.readString();
      struct.set_stoppedEarlyMsgIsSet(true);
      struct._curtailReferenceId = iprot.readI32();
      struct.set_curtailReferenceIdIsSet(true);
      struct._actionDateTime = iprot.readI64();
      struct.set_actionDateTimeIsSet(true);
      struct._notificationDateTime = iprot.readI64();
      struct.set_notificationDateTimeIsSet(true);
      struct._curtailmentStartTime = iprot.readI64();
      struct.set_curtailmentStartTimeIsSet(true);
      struct._curtailmentStopTime = iprot.readI64();
      struct.set_curtailmentStopTimeIsSet(true);
      struct._runStatus = iprot.readString();
      struct.set_runStatusIsSet(true);
      struct._additionalInfo = iprot.readString();
      struct.set_additionalInfoIsSet(true);
      {
        org.apache.thrift.protocol.TList _list13 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
        struct._lmProgramCurtailmentCustomers = new java.util.ArrayList<LMCurtailCustomer>(_list13.size);
        @org.apache.thrift.annotation.Nullable LMCurtailCustomer _elem14;
        for (int _i15 = 0; _i15 < _list13.size; ++_i15)
        {
          _elem14 = new LMCurtailCustomer();
          _elem14.read(iprot);
          struct._lmProgramCurtailmentCustomers.add(_elem14);
        }
      }
      struct.set_lmProgramCurtailmentCustomersIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

