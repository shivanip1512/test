/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CCVoltageRegulatorItem implements org.apache.thrift.TBase<CCVoltageRegulatorItem, CCVoltageRegulatorItem._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CCVoltageRegulatorItem");

  private static final org.apache.thrift.protocol.TField _BASE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_baseMessage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField _PARENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_parentId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _LAST_TAP_OPERATION_FIELD_DESC = new org.apache.thrift.protocol.TField("_lastTapOperation", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField _LAST_TAP_OPERATION_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_lastTapOperationTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField _REGULATOR_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("_regulatorType", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField _RECENT_TAP_OPERATION_FIELD_DESC = new org.apache.thrift.protocol.TField("_recentTapOperation", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField _LAST_OPERATING_MODE_FIELD_DESC = new org.apache.thrift.protocol.TField("_lastOperatingMode", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField _LAST_COMMANDED_OPERATING_MODE_FIELD_DESC = new org.apache.thrift.protocol.TField("_lastCommandedOperatingMode", org.apache.thrift.protocol.TType.I32, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CCVoltageRegulatorItemStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CCVoltageRegulatorItemTupleSchemeFactory());
  }

  private com.cannontech.messaging.serialization.thrift.generated.CCPao _baseMessage; // required
  private int _parentId; // required
  private int _lastTapOperation; // required
  private long _lastTapOperationTime; // required
  private int _regulatorType; // required
  private boolean _recentTapOperation; // required
  private int _lastOperatingMode; // required
  private int _lastCommandedOperatingMode; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _BASE_MESSAGE((short)1, "_baseMessage"),
    _PARENT_ID((short)2, "_parentId"),
    _LAST_TAP_OPERATION((short)3, "_lastTapOperation"),
    _LAST_TAP_OPERATION_TIME((short)4, "_lastTapOperationTime"),
    _REGULATOR_TYPE((short)5, "_regulatorType"),
    _RECENT_TAP_OPERATION((short)6, "_recentTapOperation"),
    _LAST_OPERATING_MODE((short)7, "_lastOperatingMode"),
    _LAST_COMMANDED_OPERATING_MODE((short)8, "_lastCommandedOperatingMode");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _BASE_MESSAGE
          return _BASE_MESSAGE;
        case 2: // _PARENT_ID
          return _PARENT_ID;
        case 3: // _LAST_TAP_OPERATION
          return _LAST_TAP_OPERATION;
        case 4: // _LAST_TAP_OPERATION_TIME
          return _LAST_TAP_OPERATION_TIME;
        case 5: // _REGULATOR_TYPE
          return _REGULATOR_TYPE;
        case 6: // _RECENT_TAP_OPERATION
          return _RECENT_TAP_OPERATION;
        case 7: // _LAST_OPERATING_MODE
          return _LAST_OPERATING_MODE;
        case 8: // _LAST_COMMANDED_OPERATING_MODE
          return _LAST_COMMANDED_OPERATING_MODE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___PARENTID_ISSET_ID = 0;
  private static final int ___LASTTAPOPERATION_ISSET_ID = 1;
  private static final int ___LASTTAPOPERATIONTIME_ISSET_ID = 2;
  private static final int ___REGULATORTYPE_ISSET_ID = 3;
  private static final int ___RECENTTAPOPERATION_ISSET_ID = 4;
  private static final int ___LASTOPERATINGMODE_ISSET_ID = 5;
  private static final int ___LASTCOMMANDEDOPERATINGMODE_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._BASE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_baseMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.cannontech.messaging.serialization.thrift.generated.CCPao.class)));
    tmpMap.put(_Fields._PARENT_ID, new org.apache.thrift.meta_data.FieldMetaData("_parentId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._LAST_TAP_OPERATION, new org.apache.thrift.meta_data.FieldMetaData("_lastTapOperation", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._LAST_TAP_OPERATION_TIME, new org.apache.thrift.meta_data.FieldMetaData("_lastTapOperationTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._REGULATOR_TYPE, new org.apache.thrift.meta_data.FieldMetaData("_regulatorType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._RECENT_TAP_OPERATION, new org.apache.thrift.meta_data.FieldMetaData("_recentTapOperation", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields._LAST_OPERATING_MODE, new org.apache.thrift.meta_data.FieldMetaData("_lastOperatingMode", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._LAST_COMMANDED_OPERATING_MODE, new org.apache.thrift.meta_data.FieldMetaData("_lastCommandedOperatingMode", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CCVoltageRegulatorItem.class, metaDataMap);
  }

  public CCVoltageRegulatorItem() {
  }

  public CCVoltageRegulatorItem(
    com.cannontech.messaging.serialization.thrift.generated.CCPao _baseMessage,
    int _parentId,
    int _lastTapOperation,
    long _lastTapOperationTime,
    int _regulatorType,
    boolean _recentTapOperation,
    int _lastOperatingMode,
    int _lastCommandedOperatingMode)
  {
    this();
    this._baseMessage = _baseMessage;
    this._parentId = _parentId;
    set_parentIdIsSet(true);
    this._lastTapOperation = _lastTapOperation;
    set_lastTapOperationIsSet(true);
    this._lastTapOperationTime = _lastTapOperationTime;
    set_lastTapOperationTimeIsSet(true);
    this._regulatorType = _regulatorType;
    set_regulatorTypeIsSet(true);
    this._recentTapOperation = _recentTapOperation;
    set_recentTapOperationIsSet(true);
    this._lastOperatingMode = _lastOperatingMode;
    set_lastOperatingModeIsSet(true);
    this._lastCommandedOperatingMode = _lastCommandedOperatingMode;
    set_lastCommandedOperatingModeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CCVoltageRegulatorItem(CCVoltageRegulatorItem other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSet_baseMessage()) {
      this._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.CCPao(other._baseMessage);
    }
    this._parentId = other._parentId;
    this._lastTapOperation = other._lastTapOperation;
    this._lastTapOperationTime = other._lastTapOperationTime;
    this._regulatorType = other._regulatorType;
    this._recentTapOperation = other._recentTapOperation;
    this._lastOperatingMode = other._lastOperatingMode;
    this._lastCommandedOperatingMode = other._lastCommandedOperatingMode;
  }

  public CCVoltageRegulatorItem deepCopy() {
    return new CCVoltageRegulatorItem(this);
  }

  @Override
  public void clear() {
    this._baseMessage = null;
    set_parentIdIsSet(false);
    this._parentId = 0;
    set_lastTapOperationIsSet(false);
    this._lastTapOperation = 0;
    set_lastTapOperationTimeIsSet(false);
    this._lastTapOperationTime = 0;
    set_regulatorTypeIsSet(false);
    this._regulatorType = 0;
    set_recentTapOperationIsSet(false);
    this._recentTapOperation = false;
    set_lastOperatingModeIsSet(false);
    this._lastOperatingMode = 0;
    set_lastCommandedOperatingModeIsSet(false);
    this._lastCommandedOperatingMode = 0;
  }

  public com.cannontech.messaging.serialization.thrift.generated.CCPao get_baseMessage() {
    return this._baseMessage;
  }

  public void set_baseMessage(com.cannontech.messaging.serialization.thrift.generated.CCPao _baseMessage) {
    this._baseMessage = _baseMessage;
  }

  public void unset_baseMessage() {
    this._baseMessage = null;
  }

  /** Returns true if field _baseMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_baseMessage() {
    return this._baseMessage != null;
  }

  public void set_baseMessageIsSet(boolean value) {
    if (!value) {
      this._baseMessage = null;
    }
  }

  public int get_parentId() {
    return this._parentId;
  }

  public void set_parentId(int _parentId) {
    this._parentId = _parentId;
    set_parentIdIsSet(true);
  }

  public void unset_parentId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___PARENTID_ISSET_ID);
  }

  /** Returns true if field _parentId is set (has been assigned a value) and false otherwise */
  public boolean isSet_parentId() {
    return EncodingUtils.testBit(__isset_bitfield, ___PARENTID_ISSET_ID);
  }

  public void set_parentIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___PARENTID_ISSET_ID, value);
  }

  public int get_lastTapOperation() {
    return this._lastTapOperation;
  }

  public void set_lastTapOperation(int _lastTapOperation) {
    this._lastTapOperation = _lastTapOperation;
    set_lastTapOperationIsSet(true);
  }

  public void unset_lastTapOperation() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___LASTTAPOPERATION_ISSET_ID);
  }

  /** Returns true if field _lastTapOperation is set (has been assigned a value) and false otherwise */
  public boolean isSet_lastTapOperation() {
    return EncodingUtils.testBit(__isset_bitfield, ___LASTTAPOPERATION_ISSET_ID);
  }

  public void set_lastTapOperationIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___LASTTAPOPERATION_ISSET_ID, value);
  }

  public long get_lastTapOperationTime() {
    return this._lastTapOperationTime;
  }

  public void set_lastTapOperationTime(long _lastTapOperationTime) {
    this._lastTapOperationTime = _lastTapOperationTime;
    set_lastTapOperationTimeIsSet(true);
  }

  public void unset_lastTapOperationTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___LASTTAPOPERATIONTIME_ISSET_ID);
  }

  /** Returns true if field _lastTapOperationTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_lastTapOperationTime() {
    return EncodingUtils.testBit(__isset_bitfield, ___LASTTAPOPERATIONTIME_ISSET_ID);
  }

  public void set_lastTapOperationTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___LASTTAPOPERATIONTIME_ISSET_ID, value);
  }

  public int get_regulatorType() {
    return this._regulatorType;
  }

  public void set_regulatorType(int _regulatorType) {
    this._regulatorType = _regulatorType;
    set_regulatorTypeIsSet(true);
  }

  public void unset_regulatorType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___REGULATORTYPE_ISSET_ID);
  }

  /** Returns true if field _regulatorType is set (has been assigned a value) and false otherwise */
  public boolean isSet_regulatorType() {
    return EncodingUtils.testBit(__isset_bitfield, ___REGULATORTYPE_ISSET_ID);
  }

  public void set_regulatorTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___REGULATORTYPE_ISSET_ID, value);
  }

  public boolean is_recentTapOperation() {
    return this._recentTapOperation;
  }

  public void set_recentTapOperation(boolean _recentTapOperation) {
    this._recentTapOperation = _recentTapOperation;
    set_recentTapOperationIsSet(true);
  }

  public void unset_recentTapOperation() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___RECENTTAPOPERATION_ISSET_ID);
  }

  /** Returns true if field _recentTapOperation is set (has been assigned a value) and false otherwise */
  public boolean isSet_recentTapOperation() {
    return EncodingUtils.testBit(__isset_bitfield, ___RECENTTAPOPERATION_ISSET_ID);
  }

  public void set_recentTapOperationIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___RECENTTAPOPERATION_ISSET_ID, value);
  }

  public int get_lastOperatingMode() {
    return this._lastOperatingMode;
  }

  public void set_lastOperatingMode(int _lastOperatingMode) {
    this._lastOperatingMode = _lastOperatingMode;
    set_lastOperatingModeIsSet(true);
  }

  public void unset_lastOperatingMode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___LASTOPERATINGMODE_ISSET_ID);
  }

  /** Returns true if field _lastOperatingMode is set (has been assigned a value) and false otherwise */
  public boolean isSet_lastOperatingMode() {
    return EncodingUtils.testBit(__isset_bitfield, ___LASTOPERATINGMODE_ISSET_ID);
  }

  public void set_lastOperatingModeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___LASTOPERATINGMODE_ISSET_ID, value);
  }

  public int get_lastCommandedOperatingMode() {
    return this._lastCommandedOperatingMode;
  }

  public void set_lastCommandedOperatingMode(int _lastCommandedOperatingMode) {
    this._lastCommandedOperatingMode = _lastCommandedOperatingMode;
    set_lastCommandedOperatingModeIsSet(true);
  }

  public void unset_lastCommandedOperatingMode() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___LASTCOMMANDEDOPERATINGMODE_ISSET_ID);
  }

  /** Returns true if field _lastCommandedOperatingMode is set (has been assigned a value) and false otherwise */
  public boolean isSet_lastCommandedOperatingMode() {
    return EncodingUtils.testBit(__isset_bitfield, ___LASTCOMMANDEDOPERATINGMODE_ISSET_ID);
  }

  public void set_lastCommandedOperatingModeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___LASTCOMMANDEDOPERATINGMODE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case _BASE_MESSAGE:
      if (value == null) {
        unset_baseMessage();
      } else {
        set_baseMessage((com.cannontech.messaging.serialization.thrift.generated.CCPao)value);
      }
      break;

    case _PARENT_ID:
      if (value == null) {
        unset_parentId();
      } else {
        set_parentId((Integer)value);
      }
      break;

    case _LAST_TAP_OPERATION:
      if (value == null) {
        unset_lastTapOperation();
      } else {
        set_lastTapOperation((Integer)value);
      }
      break;

    case _LAST_TAP_OPERATION_TIME:
      if (value == null) {
        unset_lastTapOperationTime();
      } else {
        set_lastTapOperationTime((Long)value);
      }
      break;

    case _REGULATOR_TYPE:
      if (value == null) {
        unset_regulatorType();
      } else {
        set_regulatorType((Integer)value);
      }
      break;

    case _RECENT_TAP_OPERATION:
      if (value == null) {
        unset_recentTapOperation();
      } else {
        set_recentTapOperation((Boolean)value);
      }
      break;

    case _LAST_OPERATING_MODE:
      if (value == null) {
        unset_lastOperatingMode();
      } else {
        set_lastOperatingMode((Integer)value);
      }
      break;

    case _LAST_COMMANDED_OPERATING_MODE:
      if (value == null) {
        unset_lastCommandedOperatingMode();
      } else {
        set_lastCommandedOperatingMode((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case _BASE_MESSAGE:
      return get_baseMessage();

    case _PARENT_ID:
      return Integer.valueOf(get_parentId());

    case _LAST_TAP_OPERATION:
      return Integer.valueOf(get_lastTapOperation());

    case _LAST_TAP_OPERATION_TIME:
      return Long.valueOf(get_lastTapOperationTime());

    case _REGULATOR_TYPE:
      return Integer.valueOf(get_regulatorType());

    case _RECENT_TAP_OPERATION:
      return Boolean.valueOf(is_recentTapOperation());

    case _LAST_OPERATING_MODE:
      return Integer.valueOf(get_lastOperatingMode());

    case _LAST_COMMANDED_OPERATING_MODE:
      return Integer.valueOf(get_lastCommandedOperatingMode());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case _BASE_MESSAGE:
      return isSet_baseMessage();
    case _PARENT_ID:
      return isSet_parentId();
    case _LAST_TAP_OPERATION:
      return isSet_lastTapOperation();
    case _LAST_TAP_OPERATION_TIME:
      return isSet_lastTapOperationTime();
    case _REGULATOR_TYPE:
      return isSet_regulatorType();
    case _RECENT_TAP_OPERATION:
      return isSet_recentTapOperation();
    case _LAST_OPERATING_MODE:
      return isSet_lastOperatingMode();
    case _LAST_COMMANDED_OPERATING_MODE:
      return isSet_lastCommandedOperatingMode();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CCVoltageRegulatorItem)
      return this.equals((CCVoltageRegulatorItem)that);
    return false;
  }

  public boolean equals(CCVoltageRegulatorItem that) {
    if (that == null)
      return false;

    boolean this_present__baseMessage = true && this.isSet_baseMessage();
    boolean that_present__baseMessage = true && that.isSet_baseMessage();
    if (this_present__baseMessage || that_present__baseMessage) {
      if (!(this_present__baseMessage && that_present__baseMessage))
        return false;
      if (!this._baseMessage.equals(that._baseMessage))
        return false;
    }

    boolean this_present__parentId = true;
    boolean that_present__parentId = true;
    if (this_present__parentId || that_present__parentId) {
      if (!(this_present__parentId && that_present__parentId))
        return false;
      if (this._parentId != that._parentId)
        return false;
    }

    boolean this_present__lastTapOperation = true;
    boolean that_present__lastTapOperation = true;
    if (this_present__lastTapOperation || that_present__lastTapOperation) {
      if (!(this_present__lastTapOperation && that_present__lastTapOperation))
        return false;
      if (this._lastTapOperation != that._lastTapOperation)
        return false;
    }

    boolean this_present__lastTapOperationTime = true;
    boolean that_present__lastTapOperationTime = true;
    if (this_present__lastTapOperationTime || that_present__lastTapOperationTime) {
      if (!(this_present__lastTapOperationTime && that_present__lastTapOperationTime))
        return false;
      if (this._lastTapOperationTime != that._lastTapOperationTime)
        return false;
    }

    boolean this_present__regulatorType = true;
    boolean that_present__regulatorType = true;
    if (this_present__regulatorType || that_present__regulatorType) {
      if (!(this_present__regulatorType && that_present__regulatorType))
        return false;
      if (this._regulatorType != that._regulatorType)
        return false;
    }

    boolean this_present__recentTapOperation = true;
    boolean that_present__recentTapOperation = true;
    if (this_present__recentTapOperation || that_present__recentTapOperation) {
      if (!(this_present__recentTapOperation && that_present__recentTapOperation))
        return false;
      if (this._recentTapOperation != that._recentTapOperation)
        return false;
    }

    boolean this_present__lastOperatingMode = true;
    boolean that_present__lastOperatingMode = true;
    if (this_present__lastOperatingMode || that_present__lastOperatingMode) {
      if (!(this_present__lastOperatingMode && that_present__lastOperatingMode))
        return false;
      if (this._lastOperatingMode != that._lastOperatingMode)
        return false;
    }

    boolean this_present__lastCommandedOperatingMode = true;
    boolean that_present__lastCommandedOperatingMode = true;
    if (this_present__lastCommandedOperatingMode || that_present__lastCommandedOperatingMode) {
      if (!(this_present__lastCommandedOperatingMode && that_present__lastCommandedOperatingMode))
        return false;
      if (this._lastCommandedOperatingMode != that._lastCommandedOperatingMode)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(CCVoltageRegulatorItem other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    CCVoltageRegulatorItem typedOther = (CCVoltageRegulatorItem)other;

    lastComparison = Boolean.valueOf(isSet_baseMessage()).compareTo(typedOther.isSet_baseMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_baseMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._baseMessage, typedOther._baseMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_parentId()).compareTo(typedOther.isSet_parentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_parentId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._parentId, typedOther._parentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_lastTapOperation()).compareTo(typedOther.isSet_lastTapOperation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lastTapOperation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lastTapOperation, typedOther._lastTapOperation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_lastTapOperationTime()).compareTo(typedOther.isSet_lastTapOperationTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lastTapOperationTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lastTapOperationTime, typedOther._lastTapOperationTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_regulatorType()).compareTo(typedOther.isSet_regulatorType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_regulatorType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._regulatorType, typedOther._regulatorType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_recentTapOperation()).compareTo(typedOther.isSet_recentTapOperation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_recentTapOperation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._recentTapOperation, typedOther._recentTapOperation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_lastOperatingMode()).compareTo(typedOther.isSet_lastOperatingMode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lastOperatingMode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lastOperatingMode, typedOther._lastOperatingMode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_lastCommandedOperatingMode()).compareTo(typedOther.isSet_lastCommandedOperatingMode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lastCommandedOperatingMode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lastCommandedOperatingMode, typedOther._lastCommandedOperatingMode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CCVoltageRegulatorItem(");
    boolean first = true;

    sb.append("_baseMessage:");
    if (this._baseMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._baseMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_parentId:");
    sb.append(this._parentId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lastTapOperation:");
    sb.append(this._lastTapOperation);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lastTapOperationTime:");
    sb.append(this._lastTapOperationTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_regulatorType:");
    sb.append(this._regulatorType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_recentTapOperation:");
    sb.append(this._recentTapOperation);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lastOperatingMode:");
    sb.append(this._lastOperatingMode);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lastCommandedOperatingMode:");
    sb.append(this._lastCommandedOperatingMode);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_baseMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_baseMessage' is unset! Struct:" + toString());
    }

    if (!isSet_parentId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_parentId' is unset! Struct:" + toString());
    }

    if (!isSet_lastTapOperation()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lastTapOperation' is unset! Struct:" + toString());
    }

    if (!isSet_lastTapOperationTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lastTapOperationTime' is unset! Struct:" + toString());
    }

    if (!isSet_regulatorType()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_regulatorType' is unset! Struct:" + toString());
    }

    if (!isSet_recentTapOperation()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_recentTapOperation' is unset! Struct:" + toString());
    }

    if (!isSet_lastOperatingMode()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lastOperatingMode' is unset! Struct:" + toString());
    }

    if (!isSet_lastCommandedOperatingMode()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lastCommandedOperatingMode' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (_baseMessage != null) {
      _baseMessage.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CCVoltageRegulatorItemStandardSchemeFactory implements SchemeFactory {
    public CCVoltageRegulatorItemStandardScheme getScheme() {
      return new CCVoltageRegulatorItemStandardScheme();
    }
  }

  private static class CCVoltageRegulatorItemStandardScheme extends StandardScheme<CCVoltageRegulatorItem> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CCVoltageRegulatorItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _BASE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.CCPao();
              struct._baseMessage.read(iprot);
              struct.set_baseMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _PARENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._parentId = iprot.readI32();
              struct.set_parentIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _LAST_TAP_OPERATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._lastTapOperation = iprot.readI32();
              struct.set_lastTapOperationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _LAST_TAP_OPERATION_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._lastTapOperationTime = iprot.readI64();
              struct.set_lastTapOperationTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _REGULATOR_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._regulatorType = iprot.readI32();
              struct.set_regulatorTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // _RECENT_TAP_OPERATION
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct._recentTapOperation = iprot.readBool();
              struct.set_recentTapOperationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // _LAST_OPERATING_MODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._lastOperatingMode = iprot.readI32();
              struct.set_lastOperatingModeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // _LAST_COMMANDED_OPERATING_MODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._lastCommandedOperatingMode = iprot.readI32();
              struct.set_lastCommandedOperatingModeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CCVoltageRegulatorItem struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct._baseMessage != null) {
        oprot.writeFieldBegin(_BASE_MESSAGE_FIELD_DESC);
        struct._baseMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_PARENT_ID_FIELD_DESC);
      oprot.writeI32(struct._parentId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_LAST_TAP_OPERATION_FIELD_DESC);
      oprot.writeI32(struct._lastTapOperation);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_LAST_TAP_OPERATION_TIME_FIELD_DESC);
      oprot.writeI64(struct._lastTapOperationTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_REGULATOR_TYPE_FIELD_DESC);
      oprot.writeI32(struct._regulatorType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_RECENT_TAP_OPERATION_FIELD_DESC);
      oprot.writeBool(struct._recentTapOperation);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_LAST_OPERATING_MODE_FIELD_DESC);
      oprot.writeI32(struct._lastOperatingMode);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_LAST_COMMANDED_OPERATING_MODE_FIELD_DESC);
      oprot.writeI32(struct._lastCommandedOperatingMode);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CCVoltageRegulatorItemTupleSchemeFactory implements SchemeFactory {
    public CCVoltageRegulatorItemTupleScheme getScheme() {
      return new CCVoltageRegulatorItemTupleScheme();
    }
  }

  private static class CCVoltageRegulatorItemTupleScheme extends TupleScheme<CCVoltageRegulatorItem> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CCVoltageRegulatorItem struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      struct._baseMessage.write(oprot);
      oprot.writeI32(struct._parentId);
      oprot.writeI32(struct._lastTapOperation);
      oprot.writeI64(struct._lastTapOperationTime);
      oprot.writeI32(struct._regulatorType);
      oprot.writeBool(struct._recentTapOperation);
      oprot.writeI32(struct._lastOperatingMode);
      oprot.writeI32(struct._lastCommandedOperatingMode);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CCVoltageRegulatorItem struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.CCPao();
      struct._baseMessage.read(iprot);
      struct.set_baseMessageIsSet(true);
      struct._parentId = iprot.readI32();
      struct.set_parentIdIsSet(true);
      struct._lastTapOperation = iprot.readI32();
      struct.set_lastTapOperationIsSet(true);
      struct._lastTapOperationTime = iprot.readI64();
      struct.set_lastTapOperationTimeIsSet(true);
      struct._regulatorType = iprot.readI32();
      struct.set_regulatorTypeIsSet(true);
      struct._recentTapOperation = iprot.readBool();
      struct.set_recentTapOperationIsSet(true);
      struct._lastOperatingMode = iprot.readI32();
      struct.set_lastOperatingModeIsSet(true);
      struct._lastCommandedOperatingMode = iprot.readI32();
      struct.set_lastCommandedOperatingModeIsSet(true);
    }
  }

}

