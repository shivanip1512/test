/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-09-24")
public class RfnE2eDataIndication implements org.apache.thrift.TBase<RfnE2eDataIndication, RfnE2eDataIndication._Fields>, java.io.Serializable, Cloneable, Comparable<RfnE2eDataIndication> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RfnE2eDataIndication");

  private static final org.apache.thrift.protocol.TField E2E_PROTOCOL_FIELD_DESC = new org.apache.thrift.protocol.TField("e2eProtocol", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField APPLICATION_SERVICE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("applicationServiceId", org.apache.thrift.protocol.TType.BYTE, (short)2);
  private static final org.apache.thrift.protocol.TField RFN_IDENTIFIER_FIELD_DESC = new org.apache.thrift.protocol.TField("rfnIdentifier", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("priority", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField SECURITY_FIELD_DESC = new org.apache.thrift.protocol.TField("security", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PAYLOAD_FIELD_DESC = new org.apache.thrift.protocol.TField("payload", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new RfnE2eDataIndicationStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new RfnE2eDataIndicationTupleSchemeFactory();

  private @org.apache.thrift.annotation.Nullable RfnE2eProtocol e2eProtocol; // required
  private byte applicationServiceId; // required
  private @org.apache.thrift.annotation.Nullable RfnIdentifier rfnIdentifier; // required
  private @org.apache.thrift.annotation.Nullable RfnE2eMessagePriority priority; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String security; // optional
  private @org.apache.thrift.annotation.Nullable java.nio.ByteBuffer payload; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see RfnE2eProtocol
     */
    E2E_PROTOCOL((short)1, "e2eProtocol"),
    APPLICATION_SERVICE_ID((short)2, "applicationServiceId"),
    RFN_IDENTIFIER((short)3, "rfnIdentifier"),
    /**
     * 
     * @see RfnE2eMessagePriority
     */
    PRIORITY((short)4, "priority"),
    SECURITY((short)5, "security"),
    PAYLOAD((short)6, "payload");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // E2E_PROTOCOL
          return E2E_PROTOCOL;
        case 2: // APPLICATION_SERVICE_ID
          return APPLICATION_SERVICE_ID;
        case 3: // RFN_IDENTIFIER
          return RFN_IDENTIFIER;
        case 4: // PRIORITY
          return PRIORITY;
        case 5: // SECURITY
          return SECURITY;
        case 6: // PAYLOAD
          return PAYLOAD;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __APPLICATIONSERVICEID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.SECURITY};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.E2E_PROTOCOL, new org.apache.thrift.meta_data.FieldMetaData("e2eProtocol", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, RfnE2eProtocol.class)));
    tmpMap.put(_Fields.APPLICATION_SERVICE_ID, new org.apache.thrift.meta_data.FieldMetaData("applicationServiceId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.RFN_IDENTIFIER, new org.apache.thrift.meta_data.FieldMetaData("rfnIdentifier", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, RfnIdentifier.class)));
    tmpMap.put(_Fields.PRIORITY, new org.apache.thrift.meta_data.FieldMetaData("priority", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, RfnE2eMessagePriority.class)));
    tmpMap.put(_Fields.SECURITY, new org.apache.thrift.meta_data.FieldMetaData("security", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYLOAD, new org.apache.thrift.meta_data.FieldMetaData("payload", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , true)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RfnE2eDataIndication.class, metaDataMap);
  }

  public RfnE2eDataIndication() {
  }

  public RfnE2eDataIndication(
    RfnE2eProtocol e2eProtocol,
    byte applicationServiceId,
    RfnIdentifier rfnIdentifier,
    RfnE2eMessagePriority priority,
    java.nio.ByteBuffer payload)
  {
    this();
    this.e2eProtocol = e2eProtocol;
    this.applicationServiceId = applicationServiceId;
    setApplicationServiceIdIsSet(true);
    this.rfnIdentifier = rfnIdentifier;
    this.priority = priority;
    this.payload = org.apache.thrift.TBaseHelper.copyBinary(payload);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public RfnE2eDataIndication(RfnE2eDataIndication other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetE2eProtocol()) {
      this.e2eProtocol = other.e2eProtocol;
    }
    this.applicationServiceId = other.applicationServiceId;
    if (other.isSetRfnIdentifier()) {
      this.rfnIdentifier = new RfnIdentifier(other.rfnIdentifier);
    }
    if (other.isSetPriority()) {
      this.priority = other.priority;
    }
    if (other.isSetSecurity()) {
      this.security = other.security;
    }
    if (other.isSetPayload()) {
      this.payload = org.apache.thrift.TBaseHelper.copyBinary(other.payload);
    }
  }

  public RfnE2eDataIndication deepCopy() {
    return new RfnE2eDataIndication(this);
  }

  @Override
  public void clear() {
    this.e2eProtocol = null;
    setApplicationServiceIdIsSet(false);
    this.applicationServiceId = 0;
    this.rfnIdentifier = null;
    this.priority = null;
    this.security = null;
    this.payload = null;
  }

  /**
   * 
   * @see RfnE2eProtocol
   */
  @org.apache.thrift.annotation.Nullable
  public RfnE2eProtocol getE2eProtocol() {
    return this.e2eProtocol;
  }

  /**
   * 
   * @see RfnE2eProtocol
   */
  public void setE2eProtocol(@org.apache.thrift.annotation.Nullable RfnE2eProtocol e2eProtocol) {
    this.e2eProtocol = e2eProtocol;
  }

  public void unsetE2eProtocol() {
    this.e2eProtocol = null;
  }

  /** Returns true if field e2eProtocol is set (has been assigned a value) and false otherwise */
  public boolean isSetE2eProtocol() {
    return this.e2eProtocol != null;
  }

  public void setE2eProtocolIsSet(boolean value) {
    if (!value) {
      this.e2eProtocol = null;
    }
  }

  public byte getApplicationServiceId() {
    return this.applicationServiceId;
  }

  public void setApplicationServiceId(byte applicationServiceId) {
    this.applicationServiceId = applicationServiceId;
    setApplicationServiceIdIsSet(true);
  }

  public void unsetApplicationServiceId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __APPLICATIONSERVICEID_ISSET_ID);
  }

  /** Returns true if field applicationServiceId is set (has been assigned a value) and false otherwise */
  public boolean isSetApplicationServiceId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __APPLICATIONSERVICEID_ISSET_ID);
  }

  public void setApplicationServiceIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __APPLICATIONSERVICEID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public RfnIdentifier getRfnIdentifier() {
    return this.rfnIdentifier;
  }

  public void setRfnIdentifier(@org.apache.thrift.annotation.Nullable RfnIdentifier rfnIdentifier) {
    this.rfnIdentifier = rfnIdentifier;
  }

  public void unsetRfnIdentifier() {
    this.rfnIdentifier = null;
  }

  /** Returns true if field rfnIdentifier is set (has been assigned a value) and false otherwise */
  public boolean isSetRfnIdentifier() {
    return this.rfnIdentifier != null;
  }

  public void setRfnIdentifierIsSet(boolean value) {
    if (!value) {
      this.rfnIdentifier = null;
    }
  }

  /**
   * 
   * @see RfnE2eMessagePriority
   */
  @org.apache.thrift.annotation.Nullable
  public RfnE2eMessagePriority getPriority() {
    return this.priority;
  }

  /**
   * 
   * @see RfnE2eMessagePriority
   */
  public void setPriority(@org.apache.thrift.annotation.Nullable RfnE2eMessagePriority priority) {
    this.priority = priority;
  }

  public void unsetPriority() {
    this.priority = null;
  }

  /** Returns true if field priority is set (has been assigned a value) and false otherwise */
  public boolean isSetPriority() {
    return this.priority != null;
  }

  public void setPriorityIsSet(boolean value) {
    if (!value) {
      this.priority = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSecurity() {
    return this.security;
  }

  public void setSecurity(@org.apache.thrift.annotation.Nullable java.lang.String security) {
    this.security = security;
  }

  public void unsetSecurity() {
    this.security = null;
  }

  /** Returns true if field security is set (has been assigned a value) and false otherwise */
  public boolean isSetSecurity() {
    return this.security != null;
  }

  public void setSecurityIsSet(boolean value) {
    if (!value) {
      this.security = null;
    }
  }

  public byte[] getPayload() {
    setPayload(org.apache.thrift.TBaseHelper.rightSize(payload));
    return payload == null ? null : payload.array();
  }

  public java.nio.ByteBuffer bufferForPayload() {
    return org.apache.thrift.TBaseHelper.copyBinary(payload);
  }

  public void setPayload(byte[] payload) {
    this.payload = payload == null ? (java.nio.ByteBuffer)null   : java.nio.ByteBuffer.wrap(payload.clone());
  }

  public void setPayload(@org.apache.thrift.annotation.Nullable java.nio.ByteBuffer payload) {
    this.payload = org.apache.thrift.TBaseHelper.copyBinary(payload);
  }

  public void unsetPayload() {
    this.payload = null;
  }

  /** Returns true if field payload is set (has been assigned a value) and false otherwise */
  public boolean isSetPayload() {
    return this.payload != null;
  }

  public void setPayloadIsSet(boolean value) {
    if (!value) {
      this.payload = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case E2E_PROTOCOL:
      if (value == null) {
        unsetE2eProtocol();
      } else {
        setE2eProtocol((RfnE2eProtocol)value);
      }
      break;

    case APPLICATION_SERVICE_ID:
      if (value == null) {
        unsetApplicationServiceId();
      } else {
        setApplicationServiceId((java.lang.Byte)value);
      }
      break;

    case RFN_IDENTIFIER:
      if (value == null) {
        unsetRfnIdentifier();
      } else {
        setRfnIdentifier((RfnIdentifier)value);
      }
      break;

    case PRIORITY:
      if (value == null) {
        unsetPriority();
      } else {
        setPriority((RfnE2eMessagePriority)value);
      }
      break;

    case SECURITY:
      if (value == null) {
        unsetSecurity();
      } else {
        setSecurity((java.lang.String)value);
      }
      break;

    case PAYLOAD:
      if (value == null) {
        unsetPayload();
      } else {
        if (value instanceof byte[]) {
          setPayload((byte[])value);
        } else {
          setPayload((java.nio.ByteBuffer)value);
        }
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case E2E_PROTOCOL:
      return getE2eProtocol();

    case APPLICATION_SERVICE_ID:
      return getApplicationServiceId();

    case RFN_IDENTIFIER:
      return getRfnIdentifier();

    case PRIORITY:
      return getPriority();

    case SECURITY:
      return getSecurity();

    case PAYLOAD:
      return getPayload();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case E2E_PROTOCOL:
      return isSetE2eProtocol();
    case APPLICATION_SERVICE_ID:
      return isSetApplicationServiceId();
    case RFN_IDENTIFIER:
      return isSetRfnIdentifier();
    case PRIORITY:
      return isSetPriority();
    case SECURITY:
      return isSetSecurity();
    case PAYLOAD:
      return isSetPayload();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof RfnE2eDataIndication)
      return this.equals((RfnE2eDataIndication)that);
    return false;
  }

  public boolean equals(RfnE2eDataIndication that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_e2eProtocol = true && this.isSetE2eProtocol();
    boolean that_present_e2eProtocol = true && that.isSetE2eProtocol();
    if (this_present_e2eProtocol || that_present_e2eProtocol) {
      if (!(this_present_e2eProtocol && that_present_e2eProtocol))
        return false;
      if (!this.e2eProtocol.equals(that.e2eProtocol))
        return false;
    }

    boolean this_present_applicationServiceId = true;
    boolean that_present_applicationServiceId = true;
    if (this_present_applicationServiceId || that_present_applicationServiceId) {
      if (!(this_present_applicationServiceId && that_present_applicationServiceId))
        return false;
      if (this.applicationServiceId != that.applicationServiceId)
        return false;
    }

    boolean this_present_rfnIdentifier = true && this.isSetRfnIdentifier();
    boolean that_present_rfnIdentifier = true && that.isSetRfnIdentifier();
    if (this_present_rfnIdentifier || that_present_rfnIdentifier) {
      if (!(this_present_rfnIdentifier && that_present_rfnIdentifier))
        return false;
      if (!this.rfnIdentifier.equals(that.rfnIdentifier))
        return false;
    }

    boolean this_present_priority = true && this.isSetPriority();
    boolean that_present_priority = true && that.isSetPriority();
    if (this_present_priority || that_present_priority) {
      if (!(this_present_priority && that_present_priority))
        return false;
      if (!this.priority.equals(that.priority))
        return false;
    }

    boolean this_present_security = true && this.isSetSecurity();
    boolean that_present_security = true && that.isSetSecurity();
    if (this_present_security || that_present_security) {
      if (!(this_present_security && that_present_security))
        return false;
      if (!this.security.equals(that.security))
        return false;
    }

    boolean this_present_payload = true && this.isSetPayload();
    boolean that_present_payload = true && that.isSetPayload();
    if (this_present_payload || that_present_payload) {
      if (!(this_present_payload && that_present_payload))
        return false;
      if (!this.payload.equals(that.payload))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetE2eProtocol()) ? 131071 : 524287);
    if (isSetE2eProtocol())
      hashCode = hashCode * 8191 + e2eProtocol.getValue();

    hashCode = hashCode * 8191 + (int) (applicationServiceId);

    hashCode = hashCode * 8191 + ((isSetRfnIdentifier()) ? 131071 : 524287);
    if (isSetRfnIdentifier())
      hashCode = hashCode * 8191 + rfnIdentifier.hashCode();

    hashCode = hashCode * 8191 + ((isSetPriority()) ? 131071 : 524287);
    if (isSetPriority())
      hashCode = hashCode * 8191 + priority.getValue();

    hashCode = hashCode * 8191 + ((isSetSecurity()) ? 131071 : 524287);
    if (isSetSecurity())
      hashCode = hashCode * 8191 + security.hashCode();

    hashCode = hashCode * 8191 + ((isSetPayload()) ? 131071 : 524287);
    if (isSetPayload())
      hashCode = hashCode * 8191 + payload.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(RfnE2eDataIndication other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetE2eProtocol()).compareTo(other.isSetE2eProtocol());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetE2eProtocol()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e2eProtocol, other.e2eProtocol);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplicationServiceId()).compareTo(other.isSetApplicationServiceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplicationServiceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applicationServiceId, other.applicationServiceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRfnIdentifier()).compareTo(other.isSetRfnIdentifier());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRfnIdentifier()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rfnIdentifier, other.rfnIdentifier);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPriority()).compareTo(other.isSetPriority());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPriority()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.priority, other.priority);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSecurity()).compareTo(other.isSetSecurity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSecurity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.security, other.security);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPayload()).compareTo(other.isSetPayload());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayload()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payload, other.payload);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("RfnE2eDataIndication(");
    boolean first = true;

    sb.append("e2eProtocol:");
    if (this.e2eProtocol == null) {
      sb.append("null");
    } else {
      sb.append(this.e2eProtocol);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("applicationServiceId:");
    sb.append(this.applicationServiceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("rfnIdentifier:");
    if (this.rfnIdentifier == null) {
      sb.append("null");
    } else {
      sb.append(this.rfnIdentifier);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("priority:");
    if (this.priority == null) {
      sb.append("null");
    } else {
      sb.append(this.priority);
    }
    first = false;
    if (isSetSecurity()) {
      if (!first) sb.append(", ");
      sb.append("security:");
      if (this.security == null) {
        sb.append("null");
      } else {
        sb.append(this.security);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("payload:");
    if (this.payload == null) {
      sb.append("null");
    } else {
      org.apache.thrift.TBaseHelper.toString(this.payload, sb);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetE2eProtocol()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'e2eProtocol' is unset! Struct:" + toString());
    }

    if (!isSetApplicationServiceId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'applicationServiceId' is unset! Struct:" + toString());
    }

    if (!isSetRfnIdentifier()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'rfnIdentifier' is unset! Struct:" + toString());
    }

    if (!isSetPriority()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'priority' is unset! Struct:" + toString());
    }

    if (!isSetPayload()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'payload' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (rfnIdentifier != null) {
      rfnIdentifier.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class RfnE2eDataIndicationStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public RfnE2eDataIndicationStandardScheme getScheme() {
      return new RfnE2eDataIndicationStandardScheme();
    }
  }

  private static class RfnE2eDataIndicationStandardScheme extends org.apache.thrift.scheme.StandardScheme<RfnE2eDataIndication> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, RfnE2eDataIndication struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // E2E_PROTOCOL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.e2eProtocol = com.cannontech.messaging.serialization.thrift.generated.RfnE2eProtocol.findByValue(iprot.readI32());
              struct.setE2eProtocolIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // APPLICATION_SERVICE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.applicationServiceId = iprot.readByte();
              struct.setApplicationServiceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // RFN_IDENTIFIER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.rfnIdentifier = new RfnIdentifier();
              struct.rfnIdentifier.read(iprot);
              struct.setRfnIdentifierIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRIORITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.priority = com.cannontech.messaging.serialization.thrift.generated.RfnE2eMessagePriority.findByValue(iprot.readI32());
              struct.setPriorityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SECURITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.security = iprot.readString();
              struct.setSecurityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PAYLOAD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.payload = iprot.readBinary();
              struct.setPayloadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, RfnE2eDataIndication struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.e2eProtocol != null) {
        oprot.writeFieldBegin(E2E_PROTOCOL_FIELD_DESC);
        oprot.writeI32(struct.e2eProtocol.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(APPLICATION_SERVICE_ID_FIELD_DESC);
      oprot.writeByte(struct.applicationServiceId);
      oprot.writeFieldEnd();
      if (struct.rfnIdentifier != null) {
        oprot.writeFieldBegin(RFN_IDENTIFIER_FIELD_DESC);
        struct.rfnIdentifier.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.priority != null) {
        oprot.writeFieldBegin(PRIORITY_FIELD_DESC);
        oprot.writeI32(struct.priority.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.security != null) {
        if (struct.isSetSecurity()) {
          oprot.writeFieldBegin(SECURITY_FIELD_DESC);
          oprot.writeString(struct.security);
          oprot.writeFieldEnd();
        }
      }
      if (struct.payload != null) {
        oprot.writeFieldBegin(PAYLOAD_FIELD_DESC);
        oprot.writeBinary(struct.payload);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class RfnE2eDataIndicationTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public RfnE2eDataIndicationTupleScheme getScheme() {
      return new RfnE2eDataIndicationTupleScheme();
    }
  }

  private static class RfnE2eDataIndicationTupleScheme extends org.apache.thrift.scheme.TupleScheme<RfnE2eDataIndication> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, RfnE2eDataIndication struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct.e2eProtocol.getValue());
      oprot.writeByte(struct.applicationServiceId);
      struct.rfnIdentifier.write(oprot);
      oprot.writeI32(struct.priority.getValue());
      oprot.writeBinary(struct.payload);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSecurity()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetSecurity()) {
        oprot.writeString(struct.security);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, RfnE2eDataIndication struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.e2eProtocol = com.cannontech.messaging.serialization.thrift.generated.RfnE2eProtocol.findByValue(iprot.readI32());
      struct.setE2eProtocolIsSet(true);
      struct.applicationServiceId = iprot.readByte();
      struct.setApplicationServiceIdIsSet(true);
      struct.rfnIdentifier = new RfnIdentifier();
      struct.rfnIdentifier.read(iprot);
      struct.setRfnIdentifierIsSet(true);
      struct.priority = com.cannontech.messaging.serialization.thrift.generated.RfnE2eMessagePriority.findByValue(iprot.readI32());
      struct.setPriorityIsSet(true);
      struct.payload = iprot.readBinary();
      struct.setPayloadIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        struct.security = iprot.readString();
        struct.setSecurityIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

