/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class LMCurtailmentAcknowledge implements org.apache.thrift.TBase<LMCurtailmentAcknowledge, LMCurtailmentAcknowledge._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("LMCurtailmentAcknowledge");

  private static final org.apache.thrift.protocol.TField _BASE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_baseMessage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField _PAO_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_paoId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _CURTAIL_REFERENCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_curtailReferenceId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField _ACKNOWLEDGE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("_acknowledgeStatus", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField _IP_ADDRESS_OF_ACK_USER_FIELD_DESC = new org.apache.thrift.protocol.TField("_ipAddressOfAckUser", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField _USER_ID_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("_userIdName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField _NAME_OF_ACK_PERSON_FIELD_DESC = new org.apache.thrift.protocol.TField("_nameOfAckPerson", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField _CURTAILMENT_NOTES_FIELD_DESC = new org.apache.thrift.protocol.TField("_curtailmentNotes", org.apache.thrift.protocol.TType.STRING, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new LMCurtailmentAcknowledgeStandardSchemeFactory());
    schemes.put(TupleScheme.class, new LMCurtailmentAcknowledgeTupleSchemeFactory());
  }

  private com.cannontech.messaging.serialization.thrift.generated.LMMessage _baseMessage; // required
  private int _paoId; // required
  private int _curtailReferenceId; // required
  private String _acknowledgeStatus; // required
  private String _ipAddressOfAckUser; // required
  private String _userIdName; // required
  private String _nameOfAckPerson; // required
  private String _curtailmentNotes; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _BASE_MESSAGE((short)1, "_baseMessage"),
    _PAO_ID((short)2, "_paoId"),
    _CURTAIL_REFERENCE_ID((short)3, "_curtailReferenceId"),
    _ACKNOWLEDGE_STATUS((short)4, "_acknowledgeStatus"),
    _IP_ADDRESS_OF_ACK_USER((short)5, "_ipAddressOfAckUser"),
    _USER_ID_NAME((short)6, "_userIdName"),
    _NAME_OF_ACK_PERSON((short)7, "_nameOfAckPerson"),
    _CURTAILMENT_NOTES((short)8, "_curtailmentNotes");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _BASE_MESSAGE
          return _BASE_MESSAGE;
        case 2: // _PAO_ID
          return _PAO_ID;
        case 3: // _CURTAIL_REFERENCE_ID
          return _CURTAIL_REFERENCE_ID;
        case 4: // _ACKNOWLEDGE_STATUS
          return _ACKNOWLEDGE_STATUS;
        case 5: // _IP_ADDRESS_OF_ACK_USER
          return _IP_ADDRESS_OF_ACK_USER;
        case 6: // _USER_ID_NAME
          return _USER_ID_NAME;
        case 7: // _NAME_OF_ACK_PERSON
          return _NAME_OF_ACK_PERSON;
        case 8: // _CURTAILMENT_NOTES
          return _CURTAILMENT_NOTES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___PAOID_ISSET_ID = 0;
  private static final int ___CURTAILREFERENCEID_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._BASE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_baseMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.cannontech.messaging.serialization.thrift.generated.LMMessage.class)));
    tmpMap.put(_Fields._PAO_ID, new org.apache.thrift.meta_data.FieldMetaData("_paoId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._CURTAIL_REFERENCE_ID, new org.apache.thrift.meta_data.FieldMetaData("_curtailReferenceId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._ACKNOWLEDGE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("_acknowledgeStatus", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._IP_ADDRESS_OF_ACK_USER, new org.apache.thrift.meta_data.FieldMetaData("_ipAddressOfAckUser", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._USER_ID_NAME, new org.apache.thrift.meta_data.FieldMetaData("_userIdName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._NAME_OF_ACK_PERSON, new org.apache.thrift.meta_data.FieldMetaData("_nameOfAckPerson", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._CURTAILMENT_NOTES, new org.apache.thrift.meta_data.FieldMetaData("_curtailmentNotes", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(LMCurtailmentAcknowledge.class, metaDataMap);
  }

  public LMCurtailmentAcknowledge() {
  }

  public LMCurtailmentAcknowledge(
    com.cannontech.messaging.serialization.thrift.generated.LMMessage _baseMessage,
    int _paoId,
    int _curtailReferenceId,
    String _acknowledgeStatus,
    String _ipAddressOfAckUser,
    String _userIdName,
    String _nameOfAckPerson,
    String _curtailmentNotes)
  {
    this();
    this._baseMessage = _baseMessage;
    this._paoId = _paoId;
    set_paoIdIsSet(true);
    this._curtailReferenceId = _curtailReferenceId;
    set_curtailReferenceIdIsSet(true);
    this._acknowledgeStatus = _acknowledgeStatus;
    this._ipAddressOfAckUser = _ipAddressOfAckUser;
    this._userIdName = _userIdName;
    this._nameOfAckPerson = _nameOfAckPerson;
    this._curtailmentNotes = _curtailmentNotes;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public LMCurtailmentAcknowledge(LMCurtailmentAcknowledge other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSet_baseMessage()) {
      this._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.LMMessage(other._baseMessage);
    }
    this._paoId = other._paoId;
    this._curtailReferenceId = other._curtailReferenceId;
    if (other.isSet_acknowledgeStatus()) {
      this._acknowledgeStatus = other._acknowledgeStatus;
    }
    if (other.isSet_ipAddressOfAckUser()) {
      this._ipAddressOfAckUser = other._ipAddressOfAckUser;
    }
    if (other.isSet_userIdName()) {
      this._userIdName = other._userIdName;
    }
    if (other.isSet_nameOfAckPerson()) {
      this._nameOfAckPerson = other._nameOfAckPerson;
    }
    if (other.isSet_curtailmentNotes()) {
      this._curtailmentNotes = other._curtailmentNotes;
    }
  }

  public LMCurtailmentAcknowledge deepCopy() {
    return new LMCurtailmentAcknowledge(this);
  }

  @Override
  public void clear() {
    this._baseMessage = null;
    set_paoIdIsSet(false);
    this._paoId = 0;
    set_curtailReferenceIdIsSet(false);
    this._curtailReferenceId = 0;
    this._acknowledgeStatus = null;
    this._ipAddressOfAckUser = null;
    this._userIdName = null;
    this._nameOfAckPerson = null;
    this._curtailmentNotes = null;
  }

  public com.cannontech.messaging.serialization.thrift.generated.LMMessage get_baseMessage() {
    return this._baseMessage;
  }

  public void set_baseMessage(com.cannontech.messaging.serialization.thrift.generated.LMMessage _baseMessage) {
    this._baseMessage = _baseMessage;
  }

  public void unset_baseMessage() {
    this._baseMessage = null;
  }

  /** Returns true if field _baseMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_baseMessage() {
    return this._baseMessage != null;
  }

  public void set_baseMessageIsSet(boolean value) {
    if (!value) {
      this._baseMessage = null;
    }
  }

  public int get_paoId() {
    return this._paoId;
  }

  public void set_paoId(int _paoId) {
    this._paoId = _paoId;
    set_paoIdIsSet(true);
  }

  public void unset_paoId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___PAOID_ISSET_ID);
  }

  /** Returns true if field _paoId is set (has been assigned a value) and false otherwise */
  public boolean isSet_paoId() {
    return EncodingUtils.testBit(__isset_bitfield, ___PAOID_ISSET_ID);
  }

  public void set_paoIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___PAOID_ISSET_ID, value);
  }

  public int get_curtailReferenceId() {
    return this._curtailReferenceId;
  }

  public void set_curtailReferenceId(int _curtailReferenceId) {
    this._curtailReferenceId = _curtailReferenceId;
    set_curtailReferenceIdIsSet(true);
  }

  public void unset_curtailReferenceId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___CURTAILREFERENCEID_ISSET_ID);
  }

  /** Returns true if field _curtailReferenceId is set (has been assigned a value) and false otherwise */
  public boolean isSet_curtailReferenceId() {
    return EncodingUtils.testBit(__isset_bitfield, ___CURTAILREFERENCEID_ISSET_ID);
  }

  public void set_curtailReferenceIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___CURTAILREFERENCEID_ISSET_ID, value);
  }

  public String get_acknowledgeStatus() {
    return this._acknowledgeStatus;
  }

  public void set_acknowledgeStatus(String _acknowledgeStatus) {
    this._acknowledgeStatus = _acknowledgeStatus;
  }

  public void unset_acknowledgeStatus() {
    this._acknowledgeStatus = null;
  }

  /** Returns true if field _acknowledgeStatus is set (has been assigned a value) and false otherwise */
  public boolean isSet_acknowledgeStatus() {
    return this._acknowledgeStatus != null;
  }

  public void set_acknowledgeStatusIsSet(boolean value) {
    if (!value) {
      this._acknowledgeStatus = null;
    }
  }

  public String get_ipAddressOfAckUser() {
    return this._ipAddressOfAckUser;
  }

  public void set_ipAddressOfAckUser(String _ipAddressOfAckUser) {
    this._ipAddressOfAckUser = _ipAddressOfAckUser;
  }

  public void unset_ipAddressOfAckUser() {
    this._ipAddressOfAckUser = null;
  }

  /** Returns true if field _ipAddressOfAckUser is set (has been assigned a value) and false otherwise */
  public boolean isSet_ipAddressOfAckUser() {
    return this._ipAddressOfAckUser != null;
  }

  public void set_ipAddressOfAckUserIsSet(boolean value) {
    if (!value) {
      this._ipAddressOfAckUser = null;
    }
  }

  public String get_userIdName() {
    return this._userIdName;
  }

  public void set_userIdName(String _userIdName) {
    this._userIdName = _userIdName;
  }

  public void unset_userIdName() {
    this._userIdName = null;
  }

  /** Returns true if field _userIdName is set (has been assigned a value) and false otherwise */
  public boolean isSet_userIdName() {
    return this._userIdName != null;
  }

  public void set_userIdNameIsSet(boolean value) {
    if (!value) {
      this._userIdName = null;
    }
  }

  public String get_nameOfAckPerson() {
    return this._nameOfAckPerson;
  }

  public void set_nameOfAckPerson(String _nameOfAckPerson) {
    this._nameOfAckPerson = _nameOfAckPerson;
  }

  public void unset_nameOfAckPerson() {
    this._nameOfAckPerson = null;
  }

  /** Returns true if field _nameOfAckPerson is set (has been assigned a value) and false otherwise */
  public boolean isSet_nameOfAckPerson() {
    return this._nameOfAckPerson != null;
  }

  public void set_nameOfAckPersonIsSet(boolean value) {
    if (!value) {
      this._nameOfAckPerson = null;
    }
  }

  public String get_curtailmentNotes() {
    return this._curtailmentNotes;
  }

  public void set_curtailmentNotes(String _curtailmentNotes) {
    this._curtailmentNotes = _curtailmentNotes;
  }

  public void unset_curtailmentNotes() {
    this._curtailmentNotes = null;
  }

  /** Returns true if field _curtailmentNotes is set (has been assigned a value) and false otherwise */
  public boolean isSet_curtailmentNotes() {
    return this._curtailmentNotes != null;
  }

  public void set_curtailmentNotesIsSet(boolean value) {
    if (!value) {
      this._curtailmentNotes = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case _BASE_MESSAGE:
      if (value == null) {
        unset_baseMessage();
      } else {
        set_baseMessage((com.cannontech.messaging.serialization.thrift.generated.LMMessage)value);
      }
      break;

    case _PAO_ID:
      if (value == null) {
        unset_paoId();
      } else {
        set_paoId((Integer)value);
      }
      break;

    case _CURTAIL_REFERENCE_ID:
      if (value == null) {
        unset_curtailReferenceId();
      } else {
        set_curtailReferenceId((Integer)value);
      }
      break;

    case _ACKNOWLEDGE_STATUS:
      if (value == null) {
        unset_acknowledgeStatus();
      } else {
        set_acknowledgeStatus((String)value);
      }
      break;

    case _IP_ADDRESS_OF_ACK_USER:
      if (value == null) {
        unset_ipAddressOfAckUser();
      } else {
        set_ipAddressOfAckUser((String)value);
      }
      break;

    case _USER_ID_NAME:
      if (value == null) {
        unset_userIdName();
      } else {
        set_userIdName((String)value);
      }
      break;

    case _NAME_OF_ACK_PERSON:
      if (value == null) {
        unset_nameOfAckPerson();
      } else {
        set_nameOfAckPerson((String)value);
      }
      break;

    case _CURTAILMENT_NOTES:
      if (value == null) {
        unset_curtailmentNotes();
      } else {
        set_curtailmentNotes((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case _BASE_MESSAGE:
      return get_baseMessage();

    case _PAO_ID:
      return Integer.valueOf(get_paoId());

    case _CURTAIL_REFERENCE_ID:
      return Integer.valueOf(get_curtailReferenceId());

    case _ACKNOWLEDGE_STATUS:
      return get_acknowledgeStatus();

    case _IP_ADDRESS_OF_ACK_USER:
      return get_ipAddressOfAckUser();

    case _USER_ID_NAME:
      return get_userIdName();

    case _NAME_OF_ACK_PERSON:
      return get_nameOfAckPerson();

    case _CURTAILMENT_NOTES:
      return get_curtailmentNotes();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case _BASE_MESSAGE:
      return isSet_baseMessage();
    case _PAO_ID:
      return isSet_paoId();
    case _CURTAIL_REFERENCE_ID:
      return isSet_curtailReferenceId();
    case _ACKNOWLEDGE_STATUS:
      return isSet_acknowledgeStatus();
    case _IP_ADDRESS_OF_ACK_USER:
      return isSet_ipAddressOfAckUser();
    case _USER_ID_NAME:
      return isSet_userIdName();
    case _NAME_OF_ACK_PERSON:
      return isSet_nameOfAckPerson();
    case _CURTAILMENT_NOTES:
      return isSet_curtailmentNotes();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof LMCurtailmentAcknowledge)
      return this.equals((LMCurtailmentAcknowledge)that);
    return false;
  }

  public boolean equals(LMCurtailmentAcknowledge that) {
    if (that == null)
      return false;

    boolean this_present__baseMessage = true && this.isSet_baseMessage();
    boolean that_present__baseMessage = true && that.isSet_baseMessage();
    if (this_present__baseMessage || that_present__baseMessage) {
      if (!(this_present__baseMessage && that_present__baseMessage))
        return false;
      if (!this._baseMessage.equals(that._baseMessage))
        return false;
    }

    boolean this_present__paoId = true;
    boolean that_present__paoId = true;
    if (this_present__paoId || that_present__paoId) {
      if (!(this_present__paoId && that_present__paoId))
        return false;
      if (this._paoId != that._paoId)
        return false;
    }

    boolean this_present__curtailReferenceId = true;
    boolean that_present__curtailReferenceId = true;
    if (this_present__curtailReferenceId || that_present__curtailReferenceId) {
      if (!(this_present__curtailReferenceId && that_present__curtailReferenceId))
        return false;
      if (this._curtailReferenceId != that._curtailReferenceId)
        return false;
    }

    boolean this_present__acknowledgeStatus = true && this.isSet_acknowledgeStatus();
    boolean that_present__acknowledgeStatus = true && that.isSet_acknowledgeStatus();
    if (this_present__acknowledgeStatus || that_present__acknowledgeStatus) {
      if (!(this_present__acknowledgeStatus && that_present__acknowledgeStatus))
        return false;
      if (!this._acknowledgeStatus.equals(that._acknowledgeStatus))
        return false;
    }

    boolean this_present__ipAddressOfAckUser = true && this.isSet_ipAddressOfAckUser();
    boolean that_present__ipAddressOfAckUser = true && that.isSet_ipAddressOfAckUser();
    if (this_present__ipAddressOfAckUser || that_present__ipAddressOfAckUser) {
      if (!(this_present__ipAddressOfAckUser && that_present__ipAddressOfAckUser))
        return false;
      if (!this._ipAddressOfAckUser.equals(that._ipAddressOfAckUser))
        return false;
    }

    boolean this_present__userIdName = true && this.isSet_userIdName();
    boolean that_present__userIdName = true && that.isSet_userIdName();
    if (this_present__userIdName || that_present__userIdName) {
      if (!(this_present__userIdName && that_present__userIdName))
        return false;
      if (!this._userIdName.equals(that._userIdName))
        return false;
    }

    boolean this_present__nameOfAckPerson = true && this.isSet_nameOfAckPerson();
    boolean that_present__nameOfAckPerson = true && that.isSet_nameOfAckPerson();
    if (this_present__nameOfAckPerson || that_present__nameOfAckPerson) {
      if (!(this_present__nameOfAckPerson && that_present__nameOfAckPerson))
        return false;
      if (!this._nameOfAckPerson.equals(that._nameOfAckPerson))
        return false;
    }

    boolean this_present__curtailmentNotes = true && this.isSet_curtailmentNotes();
    boolean that_present__curtailmentNotes = true && that.isSet_curtailmentNotes();
    if (this_present__curtailmentNotes || that_present__curtailmentNotes) {
      if (!(this_present__curtailmentNotes && that_present__curtailmentNotes))
        return false;
      if (!this._curtailmentNotes.equals(that._curtailmentNotes))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(LMCurtailmentAcknowledge other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    LMCurtailmentAcknowledge typedOther = (LMCurtailmentAcknowledge)other;

    lastComparison = Boolean.valueOf(isSet_baseMessage()).compareTo(typedOther.isSet_baseMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_baseMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._baseMessage, typedOther._baseMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_paoId()).compareTo(typedOther.isSet_paoId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_paoId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._paoId, typedOther._paoId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_curtailReferenceId()).compareTo(typedOther.isSet_curtailReferenceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_curtailReferenceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._curtailReferenceId, typedOther._curtailReferenceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_acknowledgeStatus()).compareTo(typedOther.isSet_acknowledgeStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_acknowledgeStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._acknowledgeStatus, typedOther._acknowledgeStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_ipAddressOfAckUser()).compareTo(typedOther.isSet_ipAddressOfAckUser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_ipAddressOfAckUser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._ipAddressOfAckUser, typedOther._ipAddressOfAckUser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_userIdName()).compareTo(typedOther.isSet_userIdName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_userIdName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._userIdName, typedOther._userIdName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_nameOfAckPerson()).compareTo(typedOther.isSet_nameOfAckPerson());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_nameOfAckPerson()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._nameOfAckPerson, typedOther._nameOfAckPerson);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_curtailmentNotes()).compareTo(typedOther.isSet_curtailmentNotes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_curtailmentNotes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._curtailmentNotes, typedOther._curtailmentNotes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("LMCurtailmentAcknowledge(");
    boolean first = true;

    sb.append("_baseMessage:");
    if (this._baseMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._baseMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_paoId:");
    sb.append(this._paoId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_curtailReferenceId:");
    sb.append(this._curtailReferenceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_acknowledgeStatus:");
    if (this._acknowledgeStatus == null) {
      sb.append("null");
    } else {
      sb.append(this._acknowledgeStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_ipAddressOfAckUser:");
    if (this._ipAddressOfAckUser == null) {
      sb.append("null");
    } else {
      sb.append(this._ipAddressOfAckUser);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_userIdName:");
    if (this._userIdName == null) {
      sb.append("null");
    } else {
      sb.append(this._userIdName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_nameOfAckPerson:");
    if (this._nameOfAckPerson == null) {
      sb.append("null");
    } else {
      sb.append(this._nameOfAckPerson);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_curtailmentNotes:");
    if (this._curtailmentNotes == null) {
      sb.append("null");
    } else {
      sb.append(this._curtailmentNotes);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_baseMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_baseMessage' is unset! Struct:" + toString());
    }

    if (!isSet_paoId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_paoId' is unset! Struct:" + toString());
    }

    if (!isSet_curtailReferenceId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_curtailReferenceId' is unset! Struct:" + toString());
    }

    if (!isSet_acknowledgeStatus()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_acknowledgeStatus' is unset! Struct:" + toString());
    }

    if (!isSet_ipAddressOfAckUser()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_ipAddressOfAckUser' is unset! Struct:" + toString());
    }

    if (!isSet_userIdName()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_userIdName' is unset! Struct:" + toString());
    }

    if (!isSet_nameOfAckPerson()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_nameOfAckPerson' is unset! Struct:" + toString());
    }

    if (!isSet_curtailmentNotes()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_curtailmentNotes' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (_baseMessage != null) {
      _baseMessage.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class LMCurtailmentAcknowledgeStandardSchemeFactory implements SchemeFactory {
    public LMCurtailmentAcknowledgeStandardScheme getScheme() {
      return new LMCurtailmentAcknowledgeStandardScheme();
    }
  }

  private static class LMCurtailmentAcknowledgeStandardScheme extends StandardScheme<LMCurtailmentAcknowledge> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, LMCurtailmentAcknowledge struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _BASE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.LMMessage();
              struct._baseMessage.read(iprot);
              struct.set_baseMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _PAO_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._paoId = iprot.readI32();
              struct.set_paoIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _CURTAIL_REFERENCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._curtailReferenceId = iprot.readI32();
              struct.set_curtailReferenceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _ACKNOWLEDGE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._acknowledgeStatus = iprot.readString();
              struct.set_acknowledgeStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _IP_ADDRESS_OF_ACK_USER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._ipAddressOfAckUser = iprot.readString();
              struct.set_ipAddressOfAckUserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // _USER_ID_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._userIdName = iprot.readString();
              struct.set_userIdNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // _NAME_OF_ACK_PERSON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._nameOfAckPerson = iprot.readString();
              struct.set_nameOfAckPersonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // _CURTAILMENT_NOTES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._curtailmentNotes = iprot.readString();
              struct.set_curtailmentNotesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, LMCurtailmentAcknowledge struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct._baseMessage != null) {
        oprot.writeFieldBegin(_BASE_MESSAGE_FIELD_DESC);
        struct._baseMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_PAO_ID_FIELD_DESC);
      oprot.writeI32(struct._paoId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_CURTAIL_REFERENCE_ID_FIELD_DESC);
      oprot.writeI32(struct._curtailReferenceId);
      oprot.writeFieldEnd();
      if (struct._acknowledgeStatus != null) {
        oprot.writeFieldBegin(_ACKNOWLEDGE_STATUS_FIELD_DESC);
        oprot.writeString(struct._acknowledgeStatus);
        oprot.writeFieldEnd();
      }
      if (struct._ipAddressOfAckUser != null) {
        oprot.writeFieldBegin(_IP_ADDRESS_OF_ACK_USER_FIELD_DESC);
        oprot.writeString(struct._ipAddressOfAckUser);
        oprot.writeFieldEnd();
      }
      if (struct._userIdName != null) {
        oprot.writeFieldBegin(_USER_ID_NAME_FIELD_DESC);
        oprot.writeString(struct._userIdName);
        oprot.writeFieldEnd();
      }
      if (struct._nameOfAckPerson != null) {
        oprot.writeFieldBegin(_NAME_OF_ACK_PERSON_FIELD_DESC);
        oprot.writeString(struct._nameOfAckPerson);
        oprot.writeFieldEnd();
      }
      if (struct._curtailmentNotes != null) {
        oprot.writeFieldBegin(_CURTAILMENT_NOTES_FIELD_DESC);
        oprot.writeString(struct._curtailmentNotes);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class LMCurtailmentAcknowledgeTupleSchemeFactory implements SchemeFactory {
    public LMCurtailmentAcknowledgeTupleScheme getScheme() {
      return new LMCurtailmentAcknowledgeTupleScheme();
    }
  }

  private static class LMCurtailmentAcknowledgeTupleScheme extends TupleScheme<LMCurtailmentAcknowledge> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, LMCurtailmentAcknowledge struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      struct._baseMessage.write(oprot);
      oprot.writeI32(struct._paoId);
      oprot.writeI32(struct._curtailReferenceId);
      oprot.writeString(struct._acknowledgeStatus);
      oprot.writeString(struct._ipAddressOfAckUser);
      oprot.writeString(struct._userIdName);
      oprot.writeString(struct._nameOfAckPerson);
      oprot.writeString(struct._curtailmentNotes);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, LMCurtailmentAcknowledge struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.LMMessage();
      struct._baseMessage.read(iprot);
      struct.set_baseMessageIsSet(true);
      struct._paoId = iprot.readI32();
      struct.set_paoIdIsSet(true);
      struct._curtailReferenceId = iprot.readI32();
      struct.set_curtailReferenceIdIsSet(true);
      struct._acknowledgeStatus = iprot.readString();
      struct.set_acknowledgeStatusIsSet(true);
      struct._ipAddressOfAckUser = iprot.readString();
      struct.set_ipAddressOfAckUserIsSet(true);
      struct._userIdName = iprot.readString();
      struct.set_userIdNameIsSet(true);
      struct._nameOfAckPerson = iprot.readString();
      struct.set_nameOfAckPersonIsSet(true);
      struct._curtailmentNotes = iprot.readString();
      struct.set_curtailmentNotesIsSet(true);
    }
  }

}

