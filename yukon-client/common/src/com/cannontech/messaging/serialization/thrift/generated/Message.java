/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-09-24")
public class Message implements org.apache.thrift.TBase<Message, Message._Fields>, java.io.Serializable, Cloneable, Comparable<Message> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Message");

  private static final org.apache.thrift.protocol.TField _MESSAGE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_messageTime", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField _MESSAGE_PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("_messagePriority", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _SOE_FIELD_DESC = new org.apache.thrift.protocol.TField("_soe", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField _USR_FIELD_DESC = new org.apache.thrift.protocol.TField("_usr", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField _SRC_FIELD_DESC = new org.apache.thrift.protocol.TField("_src", org.apache.thrift.protocol.TType.STRING, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new MessageStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new MessageTupleSchemeFactory();

  private long _messageTime; // required
  private int _messagePriority; // required
  private int _soe; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _usr; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _src; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _MESSAGE_TIME((short)1, "_messageTime"),
    _MESSAGE_PRIORITY((short)2, "_messagePriority"),
    _SOE((short)3, "_soe"),
    _USR((short)4, "_usr"),
    _SRC((short)5, "_src");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _MESSAGE_TIME
          return _MESSAGE_TIME;
        case 2: // _MESSAGE_PRIORITY
          return _MESSAGE_PRIORITY;
        case 3: // _SOE
          return _SOE;
        case 4: // _USR
          return _USR;
        case 5: // _SRC
          return _SRC;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___MESSAGETIME_ISSET_ID = 0;
  private static final int ___MESSAGEPRIORITY_ISSET_ID = 1;
  private static final int ___SOE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._MESSAGE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_messageTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._MESSAGE_PRIORITY, new org.apache.thrift.meta_data.FieldMetaData("_messagePriority", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._SOE, new org.apache.thrift.meta_data.FieldMetaData("_soe", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._USR, new org.apache.thrift.meta_data.FieldMetaData("_usr", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._SRC, new org.apache.thrift.meta_data.FieldMetaData("_src", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Message.class, metaDataMap);
  }

  public Message() {
  }

  public Message(
    long _messageTime,
    int _messagePriority,
    int _soe,
    java.lang.String _usr,
    java.lang.String _src)
  {
    this();
    this._messageTime = _messageTime;
    set_messageTimeIsSet(true);
    this._messagePriority = _messagePriority;
    set_messagePriorityIsSet(true);
    this._soe = _soe;
    set_soeIsSet(true);
    this._usr = _usr;
    this._src = _src;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Message(Message other) {
    __isset_bitfield = other.__isset_bitfield;
    this._messageTime = other._messageTime;
    this._messagePriority = other._messagePriority;
    this._soe = other._soe;
    if (other.isSet_usr()) {
      this._usr = other._usr;
    }
    if (other.isSet_src()) {
      this._src = other._src;
    }
  }

  public Message deepCopy() {
    return new Message(this);
  }

  @Override
  public void clear() {
    set_messageTimeIsSet(false);
    this._messageTime = 0;
    set_messagePriorityIsSet(false);
    this._messagePriority = 0;
    set_soeIsSet(false);
    this._soe = 0;
    this._usr = null;
    this._src = null;
  }

  public long get_messageTime() {
    return this._messageTime;
  }

  public void set_messageTime(long _messageTime) {
    this._messageTime = _messageTime;
    set_messageTimeIsSet(true);
  }

  public void unset_messageTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___MESSAGETIME_ISSET_ID);
  }

  /** Returns true if field _messageTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_messageTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___MESSAGETIME_ISSET_ID);
  }

  public void set_messageTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___MESSAGETIME_ISSET_ID, value);
  }

  public int get_messagePriority() {
    return this._messagePriority;
  }

  public void set_messagePriority(int _messagePriority) {
    this._messagePriority = _messagePriority;
    set_messagePriorityIsSet(true);
  }

  public void unset_messagePriority() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___MESSAGEPRIORITY_ISSET_ID);
  }

  /** Returns true if field _messagePriority is set (has been assigned a value) and false otherwise */
  public boolean isSet_messagePriority() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___MESSAGEPRIORITY_ISSET_ID);
  }

  public void set_messagePriorityIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___MESSAGEPRIORITY_ISSET_ID, value);
  }

  public int get_soe() {
    return this._soe;
  }

  public void set_soe(int _soe) {
    this._soe = _soe;
    set_soeIsSet(true);
  }

  public void unset_soe() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___SOE_ISSET_ID);
  }

  /** Returns true if field _soe is set (has been assigned a value) and false otherwise */
  public boolean isSet_soe() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___SOE_ISSET_ID);
  }

  public void set_soeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___SOE_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_usr() {
    return this._usr;
  }

  public void set_usr(@org.apache.thrift.annotation.Nullable java.lang.String _usr) {
    this._usr = _usr;
  }

  public void unset_usr() {
    this._usr = null;
  }

  /** Returns true if field _usr is set (has been assigned a value) and false otherwise */
  public boolean isSet_usr() {
    return this._usr != null;
  }

  public void set_usrIsSet(boolean value) {
    if (!value) {
      this._usr = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_src() {
    return this._src;
  }

  public void set_src(@org.apache.thrift.annotation.Nullable java.lang.String _src) {
    this._src = _src;
  }

  public void unset_src() {
    this._src = null;
  }

  /** Returns true if field _src is set (has been assigned a value) and false otherwise */
  public boolean isSet_src() {
    return this._src != null;
  }

  public void set_srcIsSet(boolean value) {
    if (!value) {
      this._src = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case _MESSAGE_TIME:
      if (value == null) {
        unset_messageTime();
      } else {
        set_messageTime((java.lang.Long)value);
      }
      break;

    case _MESSAGE_PRIORITY:
      if (value == null) {
        unset_messagePriority();
      } else {
        set_messagePriority((java.lang.Integer)value);
      }
      break;

    case _SOE:
      if (value == null) {
        unset_soe();
      } else {
        set_soe((java.lang.Integer)value);
      }
      break;

    case _USR:
      if (value == null) {
        unset_usr();
      } else {
        set_usr((java.lang.String)value);
      }
      break;

    case _SRC:
      if (value == null) {
        unset_src();
      } else {
        set_src((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _MESSAGE_TIME:
      return get_messageTime();

    case _MESSAGE_PRIORITY:
      return get_messagePriority();

    case _SOE:
      return get_soe();

    case _USR:
      return get_usr();

    case _SRC:
      return get_src();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _MESSAGE_TIME:
      return isSet_messageTime();
    case _MESSAGE_PRIORITY:
      return isSet_messagePriority();
    case _SOE:
      return isSet_soe();
    case _USR:
      return isSet_usr();
    case _SRC:
      return isSet_src();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Message)
      return this.equals((Message)that);
    return false;
  }

  public boolean equals(Message that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__messageTime = true;
    boolean that_present__messageTime = true;
    if (this_present__messageTime || that_present__messageTime) {
      if (!(this_present__messageTime && that_present__messageTime))
        return false;
      if (this._messageTime != that._messageTime)
        return false;
    }

    boolean this_present__messagePriority = true;
    boolean that_present__messagePriority = true;
    if (this_present__messagePriority || that_present__messagePriority) {
      if (!(this_present__messagePriority && that_present__messagePriority))
        return false;
      if (this._messagePriority != that._messagePriority)
        return false;
    }

    boolean this_present__soe = true;
    boolean that_present__soe = true;
    if (this_present__soe || that_present__soe) {
      if (!(this_present__soe && that_present__soe))
        return false;
      if (this._soe != that._soe)
        return false;
    }

    boolean this_present__usr = true && this.isSet_usr();
    boolean that_present__usr = true && that.isSet_usr();
    if (this_present__usr || that_present__usr) {
      if (!(this_present__usr && that_present__usr))
        return false;
      if (!this._usr.equals(that._usr))
        return false;
    }

    boolean this_present__src = true && this.isSet_src();
    boolean that_present__src = true && that.isSet_src();
    if (this_present__src || that_present__src) {
      if (!(this_present__src && that_present__src))
        return false;
      if (!this._src.equals(that._src))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_messageTime);

    hashCode = hashCode * 8191 + _messagePriority;

    hashCode = hashCode * 8191 + _soe;

    hashCode = hashCode * 8191 + ((isSet_usr()) ? 131071 : 524287);
    if (isSet_usr())
      hashCode = hashCode * 8191 + _usr.hashCode();

    hashCode = hashCode * 8191 + ((isSet_src()) ? 131071 : 524287);
    if (isSet_src())
      hashCode = hashCode * 8191 + _src.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Message other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSet_messageTime()).compareTo(other.isSet_messageTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_messageTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._messageTime, other._messageTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_messagePriority()).compareTo(other.isSet_messagePriority());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_messagePriority()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._messagePriority, other._messagePriority);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_soe()).compareTo(other.isSet_soe());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_soe()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._soe, other._soe);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_usr()).compareTo(other.isSet_usr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_usr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._usr, other._usr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_src()).compareTo(other.isSet_src());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_src()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._src, other._src);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Message(");
    boolean first = true;

    sb.append("_messageTime:");
    sb.append(this._messageTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_messagePriority:");
    sb.append(this._messagePriority);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_soe:");
    sb.append(this._soe);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_usr:");
    if (this._usr == null) {
      sb.append("null");
    } else {
      sb.append(this._usr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_src:");
    if (this._src == null) {
      sb.append("null");
    } else {
      sb.append(this._src);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_messageTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_messageTime' is unset! Struct:" + toString());
    }

    if (!isSet_messagePriority()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_messagePriority' is unset! Struct:" + toString());
    }

    if (!isSet_soe()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_soe' is unset! Struct:" + toString());
    }

    if (!isSet_usr()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_usr' is unset! Struct:" + toString());
    }

    if (!isSet_src()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_src' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MessageStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public MessageStandardScheme getScheme() {
      return new MessageStandardScheme();
    }
  }

  private static class MessageStandardScheme extends org.apache.thrift.scheme.StandardScheme<Message> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Message struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _MESSAGE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._messageTime = iprot.readI64();
              struct.set_messageTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _MESSAGE_PRIORITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._messagePriority = iprot.readI32();
              struct.set_messagePriorityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _SOE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._soe = iprot.readI32();
              struct.set_soeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _USR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._usr = iprot.readString();
              struct.set_usrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _SRC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._src = iprot.readString();
              struct.set_srcIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Message struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(_MESSAGE_TIME_FIELD_DESC);
      oprot.writeI64(struct._messageTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_MESSAGE_PRIORITY_FIELD_DESC);
      oprot.writeI32(struct._messagePriority);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_SOE_FIELD_DESC);
      oprot.writeI32(struct._soe);
      oprot.writeFieldEnd();
      if (struct._usr != null) {
        oprot.writeFieldBegin(_USR_FIELD_DESC);
        oprot.writeString(struct._usr);
        oprot.writeFieldEnd();
      }
      if (struct._src != null) {
        oprot.writeFieldBegin(_SRC_FIELD_DESC);
        oprot.writeString(struct._src);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MessageTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public MessageTupleScheme getScheme() {
      return new MessageTupleScheme();
    }
  }

  private static class MessageTupleScheme extends org.apache.thrift.scheme.TupleScheme<Message> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Message struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI64(struct._messageTime);
      oprot.writeI32(struct._messagePriority);
      oprot.writeI32(struct._soe);
      oprot.writeString(struct._usr);
      oprot.writeString(struct._src);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Message struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._messageTime = iprot.readI64();
      struct.set_messageTimeIsSet(true);
      struct._messagePriority = iprot.readI32();
      struct.set_messagePriorityIsSet(true);
      struct._soe = iprot.readI32();
      struct.set_soeIsSet(true);
      struct._usr = iprot.readString();
      struct.set_usrIsSet(true);
      struct._src = iprot.readString();
      struct.set_srcIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

