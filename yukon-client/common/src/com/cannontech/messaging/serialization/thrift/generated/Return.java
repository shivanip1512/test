/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2019-12-16")
public class Return implements org.apache.thrift.TBase<Return, Return._Fields>, java.io.Serializable, Cloneable, Comparable<Return> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Return");

  private static final org.apache.thrift.protocol.TField _BASE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_baseMessage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField _DEVICE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_deviceId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _COMMAND_STRING_FIELD_DESC = new org.apache.thrift.protocol.TField("_commandString", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField _RESULT_STRING_FIELD_DESC = new org.apache.thrift.protocol.TField("_resultString", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField _STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("_status", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField _ROUTE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_routeId", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField _MACRO_OFFSET_FIELD_DESC = new org.apache.thrift.protocol.TField("_macroOffset", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField _ATTEMPT_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("_attemptNum", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField _GROUP_MESSAGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_groupMessageId", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField _USER_MESSAGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_userMessageId", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField _EXPECT_MORE_FIELD_DESC = new org.apache.thrift.protocol.TField("_expectMore", org.apache.thrift.protocol.TType.BOOL, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ReturnStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ReturnTupleSchemeFactory();

  private @org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.Multi _baseMessage; // required
  private int _deviceId; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _commandString; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _resultString; // required
  private int _status; // required
  private int _routeId; // required
  private int _macroOffset; // required
  private int _attemptNum; // required
  private int _groupMessageId; // required
  private int _userMessageId; // required
  private boolean _expectMore; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _BASE_MESSAGE((short)1, "_baseMessage"),
    _DEVICE_ID((short)2, "_deviceId"),
    _COMMAND_STRING((short)3, "_commandString"),
    _RESULT_STRING((short)4, "_resultString"),
    _STATUS((short)5, "_status"),
    _ROUTE_ID((short)6, "_routeId"),
    _MACRO_OFFSET((short)7, "_macroOffset"),
    _ATTEMPT_NUM((short)8, "_attemptNum"),
    _GROUP_MESSAGE_ID((short)9, "_groupMessageId"),
    _USER_MESSAGE_ID((short)10, "_userMessageId"),
    _EXPECT_MORE((short)11, "_expectMore");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _BASE_MESSAGE
          return _BASE_MESSAGE;
        case 2: // _DEVICE_ID
          return _DEVICE_ID;
        case 3: // _COMMAND_STRING
          return _COMMAND_STRING;
        case 4: // _RESULT_STRING
          return _RESULT_STRING;
        case 5: // _STATUS
          return _STATUS;
        case 6: // _ROUTE_ID
          return _ROUTE_ID;
        case 7: // _MACRO_OFFSET
          return _MACRO_OFFSET;
        case 8: // _ATTEMPT_NUM
          return _ATTEMPT_NUM;
        case 9: // _GROUP_MESSAGE_ID
          return _GROUP_MESSAGE_ID;
        case 10: // _USER_MESSAGE_ID
          return _USER_MESSAGE_ID;
        case 11: // _EXPECT_MORE
          return _EXPECT_MORE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___DEVICEID_ISSET_ID = 0;
  private static final int ___STATUS_ISSET_ID = 1;
  private static final int ___ROUTEID_ISSET_ID = 2;
  private static final int ___MACROOFFSET_ISSET_ID = 3;
  private static final int ___ATTEMPTNUM_ISSET_ID = 4;
  private static final int ___GROUPMESSAGEID_ISSET_ID = 5;
  private static final int ___USERMESSAGEID_ISSET_ID = 6;
  private static final int ___EXPECTMORE_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._BASE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_baseMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.cannontech.messaging.serialization.thrift.generated.Multi.class)));
    tmpMap.put(_Fields._DEVICE_ID, new org.apache.thrift.meta_data.FieldMetaData("_deviceId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._COMMAND_STRING, new org.apache.thrift.meta_data.FieldMetaData("_commandString", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._RESULT_STRING, new org.apache.thrift.meta_data.FieldMetaData("_resultString", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._STATUS, new org.apache.thrift.meta_data.FieldMetaData("_status", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._ROUTE_ID, new org.apache.thrift.meta_data.FieldMetaData("_routeId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._MACRO_OFFSET, new org.apache.thrift.meta_data.FieldMetaData("_macroOffset", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._ATTEMPT_NUM, new org.apache.thrift.meta_data.FieldMetaData("_attemptNum", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._GROUP_MESSAGE_ID, new org.apache.thrift.meta_data.FieldMetaData("_groupMessageId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._USER_MESSAGE_ID, new org.apache.thrift.meta_data.FieldMetaData("_userMessageId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._EXPECT_MORE, new org.apache.thrift.meta_data.FieldMetaData("_expectMore", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Return.class, metaDataMap);
  }

  public Return() {
  }

  public Return(
    com.cannontech.messaging.serialization.thrift.generated.Multi _baseMessage,
    int _deviceId,
    java.lang.String _commandString,
    java.lang.String _resultString,
    int _status,
    int _routeId,
    int _macroOffset,
    int _attemptNum,
    int _groupMessageId,
    int _userMessageId,
    boolean _expectMore)
  {
    this();
    this._baseMessage = _baseMessage;
    this._deviceId = _deviceId;
    set_deviceIdIsSet(true);
    this._commandString = _commandString;
    this._resultString = _resultString;
    this._status = _status;
    set_statusIsSet(true);
    this._routeId = _routeId;
    set_routeIdIsSet(true);
    this._macroOffset = _macroOffset;
    set_macroOffsetIsSet(true);
    this._attemptNum = _attemptNum;
    set_attemptNumIsSet(true);
    this._groupMessageId = _groupMessageId;
    set_groupMessageIdIsSet(true);
    this._userMessageId = _userMessageId;
    set_userMessageIdIsSet(true);
    this._expectMore = _expectMore;
    set_expectMoreIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Return(Return other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSet_baseMessage()) {
      this._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.Multi(other._baseMessage);
    }
    this._deviceId = other._deviceId;
    if (other.isSet_commandString()) {
      this._commandString = other._commandString;
    }
    if (other.isSet_resultString()) {
      this._resultString = other._resultString;
    }
    this._status = other._status;
    this._routeId = other._routeId;
    this._macroOffset = other._macroOffset;
    this._attemptNum = other._attemptNum;
    this._groupMessageId = other._groupMessageId;
    this._userMessageId = other._userMessageId;
    this._expectMore = other._expectMore;
  }

  public Return deepCopy() {
    return new Return(this);
  }

  @Override
  public void clear() {
    this._baseMessage = null;
    set_deviceIdIsSet(false);
    this._deviceId = 0;
    this._commandString = null;
    this._resultString = null;
    set_statusIsSet(false);
    this._status = 0;
    set_routeIdIsSet(false);
    this._routeId = 0;
    set_macroOffsetIsSet(false);
    this._macroOffset = 0;
    set_attemptNumIsSet(false);
    this._attemptNum = 0;
    set_groupMessageIdIsSet(false);
    this._groupMessageId = 0;
    set_userMessageIdIsSet(false);
    this._userMessageId = 0;
    set_expectMoreIsSet(false);
    this._expectMore = false;
  }

  @org.apache.thrift.annotation.Nullable
  public com.cannontech.messaging.serialization.thrift.generated.Multi get_baseMessage() {
    return this._baseMessage;
  }

  public void set_baseMessage(@org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.Multi _baseMessage) {
    this._baseMessage = _baseMessage;
  }

  public void unset_baseMessage() {
    this._baseMessage = null;
  }

  /** Returns true if field _baseMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_baseMessage() {
    return this._baseMessage != null;
  }

  public void set_baseMessageIsSet(boolean value) {
    if (!value) {
      this._baseMessage = null;
    }
  }

  public int get_deviceId() {
    return this._deviceId;
  }

  public void set_deviceId(int _deviceId) {
    this._deviceId = _deviceId;
    set_deviceIdIsSet(true);
  }

  public void unset_deviceId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___DEVICEID_ISSET_ID);
  }

  /** Returns true if field _deviceId is set (has been assigned a value) and false otherwise */
  public boolean isSet_deviceId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___DEVICEID_ISSET_ID);
  }

  public void set_deviceIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___DEVICEID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_commandString() {
    return this._commandString;
  }

  public void set_commandString(@org.apache.thrift.annotation.Nullable java.lang.String _commandString) {
    this._commandString = _commandString;
  }

  public void unset_commandString() {
    this._commandString = null;
  }

  /** Returns true if field _commandString is set (has been assigned a value) and false otherwise */
  public boolean isSet_commandString() {
    return this._commandString != null;
  }

  public void set_commandStringIsSet(boolean value) {
    if (!value) {
      this._commandString = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_resultString() {
    return this._resultString;
  }

  public void set_resultString(@org.apache.thrift.annotation.Nullable java.lang.String _resultString) {
    this._resultString = _resultString;
  }

  public void unset_resultString() {
    this._resultString = null;
  }

  /** Returns true if field _resultString is set (has been assigned a value) and false otherwise */
  public boolean isSet_resultString() {
    return this._resultString != null;
  }

  public void set_resultStringIsSet(boolean value) {
    if (!value) {
      this._resultString = null;
    }
  }

  public int get_status() {
    return this._status;
  }

  public void set_status(int _status) {
    this._status = _status;
    set_statusIsSet(true);
  }

  public void unset_status() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___STATUS_ISSET_ID);
  }

  /** Returns true if field _status is set (has been assigned a value) and false otherwise */
  public boolean isSet_status() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___STATUS_ISSET_ID);
  }

  public void set_statusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___STATUS_ISSET_ID, value);
  }

  public int get_routeId() {
    return this._routeId;
  }

  public void set_routeId(int _routeId) {
    this._routeId = _routeId;
    set_routeIdIsSet(true);
  }

  public void unset_routeId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___ROUTEID_ISSET_ID);
  }

  /** Returns true if field _routeId is set (has been assigned a value) and false otherwise */
  public boolean isSet_routeId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___ROUTEID_ISSET_ID);
  }

  public void set_routeIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___ROUTEID_ISSET_ID, value);
  }

  public int get_macroOffset() {
    return this._macroOffset;
  }

  public void set_macroOffset(int _macroOffset) {
    this._macroOffset = _macroOffset;
    set_macroOffsetIsSet(true);
  }

  public void unset_macroOffset() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___MACROOFFSET_ISSET_ID);
  }

  /** Returns true if field _macroOffset is set (has been assigned a value) and false otherwise */
  public boolean isSet_macroOffset() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___MACROOFFSET_ISSET_ID);
  }

  public void set_macroOffsetIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___MACROOFFSET_ISSET_ID, value);
  }

  public int get_attemptNum() {
    return this._attemptNum;
  }

  public void set_attemptNum(int _attemptNum) {
    this._attemptNum = _attemptNum;
    set_attemptNumIsSet(true);
  }

  public void unset_attemptNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___ATTEMPTNUM_ISSET_ID);
  }

  /** Returns true if field _attemptNum is set (has been assigned a value) and false otherwise */
  public boolean isSet_attemptNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___ATTEMPTNUM_ISSET_ID);
  }

  public void set_attemptNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___ATTEMPTNUM_ISSET_ID, value);
  }

  public int get_groupMessageId() {
    return this._groupMessageId;
  }

  public void set_groupMessageId(int _groupMessageId) {
    this._groupMessageId = _groupMessageId;
    set_groupMessageIdIsSet(true);
  }

  public void unset_groupMessageId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___GROUPMESSAGEID_ISSET_ID);
  }

  /** Returns true if field _groupMessageId is set (has been assigned a value) and false otherwise */
  public boolean isSet_groupMessageId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___GROUPMESSAGEID_ISSET_ID);
  }

  public void set_groupMessageIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___GROUPMESSAGEID_ISSET_ID, value);
  }

  public int get_userMessageId() {
    return this._userMessageId;
  }

  public void set_userMessageId(int _userMessageId) {
    this._userMessageId = _userMessageId;
    set_userMessageIdIsSet(true);
  }

  public void unset_userMessageId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___USERMESSAGEID_ISSET_ID);
  }

  /** Returns true if field _userMessageId is set (has been assigned a value) and false otherwise */
  public boolean isSet_userMessageId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___USERMESSAGEID_ISSET_ID);
  }

  public void set_userMessageIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___USERMESSAGEID_ISSET_ID, value);
  }

  public boolean is_expectMore() {
    return this._expectMore;
  }

  public void set_expectMore(boolean _expectMore) {
    this._expectMore = _expectMore;
    set_expectMoreIsSet(true);
  }

  public void unset_expectMore() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___EXPECTMORE_ISSET_ID);
  }

  /** Returns true if field _expectMore is set (has been assigned a value) and false otherwise */
  public boolean isSet_expectMore() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___EXPECTMORE_ISSET_ID);
  }

  public void set_expectMoreIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___EXPECTMORE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case _BASE_MESSAGE:
      if (value == null) {
        unset_baseMessage();
      } else {
        set_baseMessage((com.cannontech.messaging.serialization.thrift.generated.Multi)value);
      }
      break;

    case _DEVICE_ID:
      if (value == null) {
        unset_deviceId();
      } else {
        set_deviceId((java.lang.Integer)value);
      }
      break;

    case _COMMAND_STRING:
      if (value == null) {
        unset_commandString();
      } else {
        set_commandString((java.lang.String)value);
      }
      break;

    case _RESULT_STRING:
      if (value == null) {
        unset_resultString();
      } else {
        set_resultString((java.lang.String)value);
      }
      break;

    case _STATUS:
      if (value == null) {
        unset_status();
      } else {
        set_status((java.lang.Integer)value);
      }
      break;

    case _ROUTE_ID:
      if (value == null) {
        unset_routeId();
      } else {
        set_routeId((java.lang.Integer)value);
      }
      break;

    case _MACRO_OFFSET:
      if (value == null) {
        unset_macroOffset();
      } else {
        set_macroOffset((java.lang.Integer)value);
      }
      break;

    case _ATTEMPT_NUM:
      if (value == null) {
        unset_attemptNum();
      } else {
        set_attemptNum((java.lang.Integer)value);
      }
      break;

    case _GROUP_MESSAGE_ID:
      if (value == null) {
        unset_groupMessageId();
      } else {
        set_groupMessageId((java.lang.Integer)value);
      }
      break;

    case _USER_MESSAGE_ID:
      if (value == null) {
        unset_userMessageId();
      } else {
        set_userMessageId((java.lang.Integer)value);
      }
      break;

    case _EXPECT_MORE:
      if (value == null) {
        unset_expectMore();
      } else {
        set_expectMore((java.lang.Boolean)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _BASE_MESSAGE:
      return get_baseMessage();

    case _DEVICE_ID:
      return get_deviceId();

    case _COMMAND_STRING:
      return get_commandString();

    case _RESULT_STRING:
      return get_resultString();

    case _STATUS:
      return get_status();

    case _ROUTE_ID:
      return get_routeId();

    case _MACRO_OFFSET:
      return get_macroOffset();

    case _ATTEMPT_NUM:
      return get_attemptNum();

    case _GROUP_MESSAGE_ID:
      return get_groupMessageId();

    case _USER_MESSAGE_ID:
      return get_userMessageId();

    case _EXPECT_MORE:
      return is_expectMore();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _BASE_MESSAGE:
      return isSet_baseMessage();
    case _DEVICE_ID:
      return isSet_deviceId();
    case _COMMAND_STRING:
      return isSet_commandString();
    case _RESULT_STRING:
      return isSet_resultString();
    case _STATUS:
      return isSet_status();
    case _ROUTE_ID:
      return isSet_routeId();
    case _MACRO_OFFSET:
      return isSet_macroOffset();
    case _ATTEMPT_NUM:
      return isSet_attemptNum();
    case _GROUP_MESSAGE_ID:
      return isSet_groupMessageId();
    case _USER_MESSAGE_ID:
      return isSet_userMessageId();
    case _EXPECT_MORE:
      return isSet_expectMore();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Return)
      return this.equals((Return)that);
    return false;
  }

  public boolean equals(Return that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__baseMessage = true && this.isSet_baseMessage();
    boolean that_present__baseMessage = true && that.isSet_baseMessage();
    if (this_present__baseMessage || that_present__baseMessage) {
      if (!(this_present__baseMessage && that_present__baseMessage))
        return false;
      if (!this._baseMessage.equals(that._baseMessage))
        return false;
    }

    boolean this_present__deviceId = true;
    boolean that_present__deviceId = true;
    if (this_present__deviceId || that_present__deviceId) {
      if (!(this_present__deviceId && that_present__deviceId))
        return false;
      if (this._deviceId != that._deviceId)
        return false;
    }

    boolean this_present__commandString = true && this.isSet_commandString();
    boolean that_present__commandString = true && that.isSet_commandString();
    if (this_present__commandString || that_present__commandString) {
      if (!(this_present__commandString && that_present__commandString))
        return false;
      if (!this._commandString.equals(that._commandString))
        return false;
    }

    boolean this_present__resultString = true && this.isSet_resultString();
    boolean that_present__resultString = true && that.isSet_resultString();
    if (this_present__resultString || that_present__resultString) {
      if (!(this_present__resultString && that_present__resultString))
        return false;
      if (!this._resultString.equals(that._resultString))
        return false;
    }

    boolean this_present__status = true;
    boolean that_present__status = true;
    if (this_present__status || that_present__status) {
      if (!(this_present__status && that_present__status))
        return false;
      if (this._status != that._status)
        return false;
    }

    boolean this_present__routeId = true;
    boolean that_present__routeId = true;
    if (this_present__routeId || that_present__routeId) {
      if (!(this_present__routeId && that_present__routeId))
        return false;
      if (this._routeId != that._routeId)
        return false;
    }

    boolean this_present__macroOffset = true;
    boolean that_present__macroOffset = true;
    if (this_present__macroOffset || that_present__macroOffset) {
      if (!(this_present__macroOffset && that_present__macroOffset))
        return false;
      if (this._macroOffset != that._macroOffset)
        return false;
    }

    boolean this_present__attemptNum = true;
    boolean that_present__attemptNum = true;
    if (this_present__attemptNum || that_present__attemptNum) {
      if (!(this_present__attemptNum && that_present__attemptNum))
        return false;
      if (this._attemptNum != that._attemptNum)
        return false;
    }

    boolean this_present__groupMessageId = true;
    boolean that_present__groupMessageId = true;
    if (this_present__groupMessageId || that_present__groupMessageId) {
      if (!(this_present__groupMessageId && that_present__groupMessageId))
        return false;
      if (this._groupMessageId != that._groupMessageId)
        return false;
    }

    boolean this_present__userMessageId = true;
    boolean that_present__userMessageId = true;
    if (this_present__userMessageId || that_present__userMessageId) {
      if (!(this_present__userMessageId && that_present__userMessageId))
        return false;
      if (this._userMessageId != that._userMessageId)
        return false;
    }

    boolean this_present__expectMore = true;
    boolean that_present__expectMore = true;
    if (this_present__expectMore || that_present__expectMore) {
      if (!(this_present__expectMore && that_present__expectMore))
        return false;
      if (this._expectMore != that._expectMore)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSet_baseMessage()) ? 131071 : 524287);
    if (isSet_baseMessage())
      hashCode = hashCode * 8191 + _baseMessage.hashCode();

    hashCode = hashCode * 8191 + _deviceId;

    hashCode = hashCode * 8191 + ((isSet_commandString()) ? 131071 : 524287);
    if (isSet_commandString())
      hashCode = hashCode * 8191 + _commandString.hashCode();

    hashCode = hashCode * 8191 + ((isSet_resultString()) ? 131071 : 524287);
    if (isSet_resultString())
      hashCode = hashCode * 8191 + _resultString.hashCode();

    hashCode = hashCode * 8191 + _status;

    hashCode = hashCode * 8191 + _routeId;

    hashCode = hashCode * 8191 + _macroOffset;

    hashCode = hashCode * 8191 + _attemptNum;

    hashCode = hashCode * 8191 + _groupMessageId;

    hashCode = hashCode * 8191 + _userMessageId;

    hashCode = hashCode * 8191 + ((_expectMore) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(Return other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSet_baseMessage()).compareTo(other.isSet_baseMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_baseMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._baseMessage, other._baseMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_deviceId()).compareTo(other.isSet_deviceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_deviceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._deviceId, other._deviceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_commandString()).compareTo(other.isSet_commandString());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_commandString()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._commandString, other._commandString);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_resultString()).compareTo(other.isSet_resultString());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_resultString()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._resultString, other._resultString);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_status()).compareTo(other.isSet_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._status, other._status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_routeId()).compareTo(other.isSet_routeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_routeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._routeId, other._routeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_macroOffset()).compareTo(other.isSet_macroOffset());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_macroOffset()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._macroOffset, other._macroOffset);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_attemptNum()).compareTo(other.isSet_attemptNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_attemptNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._attemptNum, other._attemptNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_groupMessageId()).compareTo(other.isSet_groupMessageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_groupMessageId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._groupMessageId, other._groupMessageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_userMessageId()).compareTo(other.isSet_userMessageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_userMessageId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._userMessageId, other._userMessageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_expectMore()).compareTo(other.isSet_expectMore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_expectMore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._expectMore, other._expectMore);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Return(");
    boolean first = true;

    sb.append("_baseMessage:");
    if (this._baseMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._baseMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_deviceId:");
    sb.append(this._deviceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_commandString:");
    if (this._commandString == null) {
      sb.append("null");
    } else {
      sb.append(this._commandString);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_resultString:");
    if (this._resultString == null) {
      sb.append("null");
    } else {
      sb.append(this._resultString);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_status:");
    sb.append(this._status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_routeId:");
    sb.append(this._routeId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_macroOffset:");
    sb.append(this._macroOffset);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_attemptNum:");
    sb.append(this._attemptNum);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_groupMessageId:");
    sb.append(this._groupMessageId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_userMessageId:");
    sb.append(this._userMessageId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_expectMore:");
    sb.append(this._expectMore);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_baseMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_baseMessage' is unset! Struct:" + toString());
    }

    if (!isSet_deviceId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_deviceId' is unset! Struct:" + toString());
    }

    if (!isSet_commandString()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_commandString' is unset! Struct:" + toString());
    }

    if (!isSet_resultString()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_resultString' is unset! Struct:" + toString());
    }

    if (!isSet_status()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_status' is unset! Struct:" + toString());
    }

    if (!isSet_routeId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_routeId' is unset! Struct:" + toString());
    }

    if (!isSet_macroOffset()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_macroOffset' is unset! Struct:" + toString());
    }

    if (!isSet_attemptNum()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_attemptNum' is unset! Struct:" + toString());
    }

    if (!isSet_groupMessageId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_groupMessageId' is unset! Struct:" + toString());
    }

    if (!isSet_userMessageId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_userMessageId' is unset! Struct:" + toString());
    }

    if (!isSet_expectMore()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_expectMore' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (_baseMessage != null) {
      _baseMessage.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReturnStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ReturnStandardScheme getScheme() {
      return new ReturnStandardScheme();
    }
  }

  private static class ReturnStandardScheme extends org.apache.thrift.scheme.StandardScheme<Return> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Return struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _BASE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.Multi();
              struct._baseMessage.read(iprot);
              struct.set_baseMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _DEVICE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._deviceId = iprot.readI32();
              struct.set_deviceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _COMMAND_STRING
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._commandString = iprot.readString();
              struct.set_commandStringIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _RESULT_STRING
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._resultString = iprot.readString();
              struct.set_resultStringIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._status = iprot.readI32();
              struct.set_statusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // _ROUTE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._routeId = iprot.readI32();
              struct.set_routeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // _MACRO_OFFSET
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._macroOffset = iprot.readI32();
              struct.set_macroOffsetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // _ATTEMPT_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._attemptNum = iprot.readI32();
              struct.set_attemptNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // _GROUP_MESSAGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._groupMessageId = iprot.readI32();
              struct.set_groupMessageIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // _USER_MESSAGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._userMessageId = iprot.readI32();
              struct.set_userMessageIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // _EXPECT_MORE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct._expectMore = iprot.readBool();
              struct.set_expectMoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Return struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct._baseMessage != null) {
        oprot.writeFieldBegin(_BASE_MESSAGE_FIELD_DESC);
        struct._baseMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_DEVICE_ID_FIELD_DESC);
      oprot.writeI32(struct._deviceId);
      oprot.writeFieldEnd();
      if (struct._commandString != null) {
        oprot.writeFieldBegin(_COMMAND_STRING_FIELD_DESC);
        oprot.writeString(struct._commandString);
        oprot.writeFieldEnd();
      }
      if (struct._resultString != null) {
        oprot.writeFieldBegin(_RESULT_STRING_FIELD_DESC);
        oprot.writeString(struct._resultString);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_STATUS_FIELD_DESC);
      oprot.writeI32(struct._status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_ROUTE_ID_FIELD_DESC);
      oprot.writeI32(struct._routeId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_MACRO_OFFSET_FIELD_DESC);
      oprot.writeI32(struct._macroOffset);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_ATTEMPT_NUM_FIELD_DESC);
      oprot.writeI32(struct._attemptNum);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_GROUP_MESSAGE_ID_FIELD_DESC);
      oprot.writeI32(struct._groupMessageId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_USER_MESSAGE_ID_FIELD_DESC);
      oprot.writeI32(struct._userMessageId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_EXPECT_MORE_FIELD_DESC);
      oprot.writeBool(struct._expectMore);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReturnTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ReturnTupleScheme getScheme() {
      return new ReturnTupleScheme();
    }
  }

  private static class ReturnTupleScheme extends org.apache.thrift.scheme.TupleScheme<Return> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Return struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage.write(oprot);
      oprot.writeI32(struct._deviceId);
      oprot.writeString(struct._commandString);
      oprot.writeString(struct._resultString);
      oprot.writeI32(struct._status);
      oprot.writeI32(struct._routeId);
      oprot.writeI32(struct._macroOffset);
      oprot.writeI32(struct._attemptNum);
      oprot.writeI32(struct._groupMessageId);
      oprot.writeI32(struct._userMessageId);
      oprot.writeBool(struct._expectMore);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Return struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.Multi();
      struct._baseMessage.read(iprot);
      struct.set_baseMessageIsSet(true);
      struct._deviceId = iprot.readI32();
      struct.set_deviceIdIsSet(true);
      struct._commandString = iprot.readString();
      struct.set_commandStringIsSet(true);
      struct._resultString = iprot.readString();
      struct.set_resultStringIsSet(true);
      struct._status = iprot.readI32();
      struct.set_statusIsSet(true);
      struct._routeId = iprot.readI32();
      struct.set_routeIdIsSet(true);
      struct._macroOffset = iprot.readI32();
      struct.set_macroOffsetIsSet(true);
      struct._attemptNum = iprot.readI32();
      struct.set_attemptNumIsSet(true);
      struct._groupMessageId = iprot.readI32();
      struct.set_groupMessageIdIsSet(true);
      struct._userMessageId = iprot.readI32();
      struct.set_userMessageIdIsSet(true);
      struct._expectMore = iprot.readBool();
      struct.set_expectMoreIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

