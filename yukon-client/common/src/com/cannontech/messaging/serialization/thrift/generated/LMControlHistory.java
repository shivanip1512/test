/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-05-31")
public class LMControlHistory implements org.apache.thrift.TBase<LMControlHistory, LMControlHistory._Fields>, java.io.Serializable, Cloneable, Comparable<LMControlHistory> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("LMControlHistory");

  private static final org.apache.thrift.protocol.TField _BASE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_baseMessage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField _PAO_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_paoId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _POINT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_pointId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField _RAW_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("_rawState", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField _START_DATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_startDateTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField _CONTROL_DURATION_FIELD_DESC = new org.apache.thrift.protocol.TField("_controlDuration", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField _REDUCTION_RATIO_FIELD_DESC = new org.apache.thrift.protocol.TField("_reductionRatio", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField _CONTROL_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("_controlType", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField _ACTIVE_RESTORE_FIELD_DESC = new org.apache.thrift.protocol.TField("_activeRestore", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField _REDUCTION_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("_reductionValue", org.apache.thrift.protocol.TType.DOUBLE, (short)10);
  private static final org.apache.thrift.protocol.TField _CONTROL_PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("_controlPriority", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField _ASSOCIATION_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("_associationKey", org.apache.thrift.protocol.TType.I32, (short)12);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new LMControlHistoryStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new LMControlHistoryTupleSchemeFactory();

  private @org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.Message _baseMessage; // required
  private int _paoId; // required
  private int _pointId; // required
  private int _rawState; // required
  private long _startDateTime; // required
  private int _controlDuration; // required
  private int _reductionRatio; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _controlType; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _activeRestore; // required
  private double _reductionValue; // required
  private int _controlPriority; // required
  private int _associationKey; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _BASE_MESSAGE((short)1, "_baseMessage"),
    _PAO_ID((short)2, "_paoId"),
    _POINT_ID((short)3, "_pointId"),
    _RAW_STATE((short)4, "_rawState"),
    _START_DATE_TIME((short)5, "_startDateTime"),
    _CONTROL_DURATION((short)6, "_controlDuration"),
    _REDUCTION_RATIO((short)7, "_reductionRatio"),
    _CONTROL_TYPE((short)8, "_controlType"),
    _ACTIVE_RESTORE((short)9, "_activeRestore"),
    _REDUCTION_VALUE((short)10, "_reductionValue"),
    _CONTROL_PRIORITY((short)11, "_controlPriority"),
    _ASSOCIATION_KEY((short)12, "_associationKey");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _BASE_MESSAGE
          return _BASE_MESSAGE;
        case 2: // _PAO_ID
          return _PAO_ID;
        case 3: // _POINT_ID
          return _POINT_ID;
        case 4: // _RAW_STATE
          return _RAW_STATE;
        case 5: // _START_DATE_TIME
          return _START_DATE_TIME;
        case 6: // _CONTROL_DURATION
          return _CONTROL_DURATION;
        case 7: // _REDUCTION_RATIO
          return _REDUCTION_RATIO;
        case 8: // _CONTROL_TYPE
          return _CONTROL_TYPE;
        case 9: // _ACTIVE_RESTORE
          return _ACTIVE_RESTORE;
        case 10: // _REDUCTION_VALUE
          return _REDUCTION_VALUE;
        case 11: // _CONTROL_PRIORITY
          return _CONTROL_PRIORITY;
        case 12: // _ASSOCIATION_KEY
          return _ASSOCIATION_KEY;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___PAOID_ISSET_ID = 0;
  private static final int ___POINTID_ISSET_ID = 1;
  private static final int ___RAWSTATE_ISSET_ID = 2;
  private static final int ___STARTDATETIME_ISSET_ID = 3;
  private static final int ___CONTROLDURATION_ISSET_ID = 4;
  private static final int ___REDUCTIONRATIO_ISSET_ID = 5;
  private static final int ___REDUCTIONVALUE_ISSET_ID = 6;
  private static final int ___CONTROLPRIORITY_ISSET_ID = 7;
  private static final int ___ASSOCIATIONKEY_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._BASE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_baseMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.cannontech.messaging.serialization.thrift.generated.Message.class)));
    tmpMap.put(_Fields._PAO_ID, new org.apache.thrift.meta_data.FieldMetaData("_paoId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._POINT_ID, new org.apache.thrift.meta_data.FieldMetaData("_pointId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._RAW_STATE, new org.apache.thrift.meta_data.FieldMetaData("_rawState", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._START_DATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_startDateTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._CONTROL_DURATION, new org.apache.thrift.meta_data.FieldMetaData("_controlDuration", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._REDUCTION_RATIO, new org.apache.thrift.meta_data.FieldMetaData("_reductionRatio", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._CONTROL_TYPE, new org.apache.thrift.meta_data.FieldMetaData("_controlType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._ACTIVE_RESTORE, new org.apache.thrift.meta_data.FieldMetaData("_activeRestore", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._REDUCTION_VALUE, new org.apache.thrift.meta_data.FieldMetaData("_reductionValue", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields._CONTROL_PRIORITY, new org.apache.thrift.meta_data.FieldMetaData("_controlPriority", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._ASSOCIATION_KEY, new org.apache.thrift.meta_data.FieldMetaData("_associationKey", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(LMControlHistory.class, metaDataMap);
  }

  public LMControlHistory() {
  }

  public LMControlHistory(
    com.cannontech.messaging.serialization.thrift.generated.Message _baseMessage,
    int _paoId,
    int _pointId,
    int _rawState,
    long _startDateTime,
    int _controlDuration,
    int _reductionRatio,
    java.lang.String _controlType,
    java.lang.String _activeRestore,
    double _reductionValue,
    int _controlPriority,
    int _associationKey)
  {
    this();
    this._baseMessage = _baseMessage;
    this._paoId = _paoId;
    set_paoIdIsSet(true);
    this._pointId = _pointId;
    set_pointIdIsSet(true);
    this._rawState = _rawState;
    set_rawStateIsSet(true);
    this._startDateTime = _startDateTime;
    set_startDateTimeIsSet(true);
    this._controlDuration = _controlDuration;
    set_controlDurationIsSet(true);
    this._reductionRatio = _reductionRatio;
    set_reductionRatioIsSet(true);
    this._controlType = _controlType;
    this._activeRestore = _activeRestore;
    this._reductionValue = _reductionValue;
    set_reductionValueIsSet(true);
    this._controlPriority = _controlPriority;
    set_controlPriorityIsSet(true);
    this._associationKey = _associationKey;
    set_associationKeyIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public LMControlHistory(LMControlHistory other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSet_baseMessage()) {
      this._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.Message(other._baseMessage);
    }
    this._paoId = other._paoId;
    this._pointId = other._pointId;
    this._rawState = other._rawState;
    this._startDateTime = other._startDateTime;
    this._controlDuration = other._controlDuration;
    this._reductionRatio = other._reductionRatio;
    if (other.isSet_controlType()) {
      this._controlType = other._controlType;
    }
    if (other.isSet_activeRestore()) {
      this._activeRestore = other._activeRestore;
    }
    this._reductionValue = other._reductionValue;
    this._controlPriority = other._controlPriority;
    this._associationKey = other._associationKey;
  }

  public LMControlHistory deepCopy() {
    return new LMControlHistory(this);
  }

  @Override
  public void clear() {
    this._baseMessage = null;
    set_paoIdIsSet(false);
    this._paoId = 0;
    set_pointIdIsSet(false);
    this._pointId = 0;
    set_rawStateIsSet(false);
    this._rawState = 0;
    set_startDateTimeIsSet(false);
    this._startDateTime = 0;
    set_controlDurationIsSet(false);
    this._controlDuration = 0;
    set_reductionRatioIsSet(false);
    this._reductionRatio = 0;
    this._controlType = null;
    this._activeRestore = null;
    set_reductionValueIsSet(false);
    this._reductionValue = 0.0;
    set_controlPriorityIsSet(false);
    this._controlPriority = 0;
    set_associationKeyIsSet(false);
    this._associationKey = 0;
  }

  @org.apache.thrift.annotation.Nullable
  public com.cannontech.messaging.serialization.thrift.generated.Message get_baseMessage() {
    return this._baseMessage;
  }

  public void set_baseMessage(@org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.Message _baseMessage) {
    this._baseMessage = _baseMessage;
  }

  public void unset_baseMessage() {
    this._baseMessage = null;
  }

  /** Returns true if field _baseMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_baseMessage() {
    return this._baseMessage != null;
  }

  public void set_baseMessageIsSet(boolean value) {
    if (!value) {
      this._baseMessage = null;
    }
  }

  public int get_paoId() {
    return this._paoId;
  }

  public void set_paoId(int _paoId) {
    this._paoId = _paoId;
    set_paoIdIsSet(true);
  }

  public void unset_paoId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___PAOID_ISSET_ID);
  }

  /** Returns true if field _paoId is set (has been assigned a value) and false otherwise */
  public boolean isSet_paoId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___PAOID_ISSET_ID);
  }

  public void set_paoIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___PAOID_ISSET_ID, value);
  }

  public int get_pointId() {
    return this._pointId;
  }

  public void set_pointId(int _pointId) {
    this._pointId = _pointId;
    set_pointIdIsSet(true);
  }

  public void unset_pointId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___POINTID_ISSET_ID);
  }

  /** Returns true if field _pointId is set (has been assigned a value) and false otherwise */
  public boolean isSet_pointId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___POINTID_ISSET_ID);
  }

  public void set_pointIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___POINTID_ISSET_ID, value);
  }

  public int get_rawState() {
    return this._rawState;
  }

  public void set_rawState(int _rawState) {
    this._rawState = _rawState;
    set_rawStateIsSet(true);
  }

  public void unset_rawState() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___RAWSTATE_ISSET_ID);
  }

  /** Returns true if field _rawState is set (has been assigned a value) and false otherwise */
  public boolean isSet_rawState() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___RAWSTATE_ISSET_ID);
  }

  public void set_rawStateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___RAWSTATE_ISSET_ID, value);
  }

  public long get_startDateTime() {
    return this._startDateTime;
  }

  public void set_startDateTime(long _startDateTime) {
    this._startDateTime = _startDateTime;
    set_startDateTimeIsSet(true);
  }

  public void unset_startDateTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___STARTDATETIME_ISSET_ID);
  }

  /** Returns true if field _startDateTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_startDateTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___STARTDATETIME_ISSET_ID);
  }

  public void set_startDateTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___STARTDATETIME_ISSET_ID, value);
  }

  public int get_controlDuration() {
    return this._controlDuration;
  }

  public void set_controlDuration(int _controlDuration) {
    this._controlDuration = _controlDuration;
    set_controlDurationIsSet(true);
  }

  public void unset_controlDuration() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___CONTROLDURATION_ISSET_ID);
  }

  /** Returns true if field _controlDuration is set (has been assigned a value) and false otherwise */
  public boolean isSet_controlDuration() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___CONTROLDURATION_ISSET_ID);
  }

  public void set_controlDurationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___CONTROLDURATION_ISSET_ID, value);
  }

  public int get_reductionRatio() {
    return this._reductionRatio;
  }

  public void set_reductionRatio(int _reductionRatio) {
    this._reductionRatio = _reductionRatio;
    set_reductionRatioIsSet(true);
  }

  public void unset_reductionRatio() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___REDUCTIONRATIO_ISSET_ID);
  }

  /** Returns true if field _reductionRatio is set (has been assigned a value) and false otherwise */
  public boolean isSet_reductionRatio() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___REDUCTIONRATIO_ISSET_ID);
  }

  public void set_reductionRatioIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___REDUCTIONRATIO_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_controlType() {
    return this._controlType;
  }

  public void set_controlType(@org.apache.thrift.annotation.Nullable java.lang.String _controlType) {
    this._controlType = _controlType;
  }

  public void unset_controlType() {
    this._controlType = null;
  }

  /** Returns true if field _controlType is set (has been assigned a value) and false otherwise */
  public boolean isSet_controlType() {
    return this._controlType != null;
  }

  public void set_controlTypeIsSet(boolean value) {
    if (!value) {
      this._controlType = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_activeRestore() {
    return this._activeRestore;
  }

  public void set_activeRestore(@org.apache.thrift.annotation.Nullable java.lang.String _activeRestore) {
    this._activeRestore = _activeRestore;
  }

  public void unset_activeRestore() {
    this._activeRestore = null;
  }

  /** Returns true if field _activeRestore is set (has been assigned a value) and false otherwise */
  public boolean isSet_activeRestore() {
    return this._activeRestore != null;
  }

  public void set_activeRestoreIsSet(boolean value) {
    if (!value) {
      this._activeRestore = null;
    }
  }

  public double get_reductionValue() {
    return this._reductionValue;
  }

  public void set_reductionValue(double _reductionValue) {
    this._reductionValue = _reductionValue;
    set_reductionValueIsSet(true);
  }

  public void unset_reductionValue() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___REDUCTIONVALUE_ISSET_ID);
  }

  /** Returns true if field _reductionValue is set (has been assigned a value) and false otherwise */
  public boolean isSet_reductionValue() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___REDUCTIONVALUE_ISSET_ID);
  }

  public void set_reductionValueIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___REDUCTIONVALUE_ISSET_ID, value);
  }

  public int get_controlPriority() {
    return this._controlPriority;
  }

  public void set_controlPriority(int _controlPriority) {
    this._controlPriority = _controlPriority;
    set_controlPriorityIsSet(true);
  }

  public void unset_controlPriority() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___CONTROLPRIORITY_ISSET_ID);
  }

  /** Returns true if field _controlPriority is set (has been assigned a value) and false otherwise */
  public boolean isSet_controlPriority() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___CONTROLPRIORITY_ISSET_ID);
  }

  public void set_controlPriorityIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___CONTROLPRIORITY_ISSET_ID, value);
  }

  public int get_associationKey() {
    return this._associationKey;
  }

  public void set_associationKey(int _associationKey) {
    this._associationKey = _associationKey;
    set_associationKeyIsSet(true);
  }

  public void unset_associationKey() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___ASSOCIATIONKEY_ISSET_ID);
  }

  /** Returns true if field _associationKey is set (has been assigned a value) and false otherwise */
  public boolean isSet_associationKey() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___ASSOCIATIONKEY_ISSET_ID);
  }

  public void set_associationKeyIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___ASSOCIATIONKEY_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case _BASE_MESSAGE:
      if (value == null) {
        unset_baseMessage();
      } else {
        set_baseMessage((com.cannontech.messaging.serialization.thrift.generated.Message)value);
      }
      break;

    case _PAO_ID:
      if (value == null) {
        unset_paoId();
      } else {
        set_paoId((java.lang.Integer)value);
      }
      break;

    case _POINT_ID:
      if (value == null) {
        unset_pointId();
      } else {
        set_pointId((java.lang.Integer)value);
      }
      break;

    case _RAW_STATE:
      if (value == null) {
        unset_rawState();
      } else {
        set_rawState((java.lang.Integer)value);
      }
      break;

    case _START_DATE_TIME:
      if (value == null) {
        unset_startDateTime();
      } else {
        set_startDateTime((java.lang.Long)value);
      }
      break;

    case _CONTROL_DURATION:
      if (value == null) {
        unset_controlDuration();
      } else {
        set_controlDuration((java.lang.Integer)value);
      }
      break;

    case _REDUCTION_RATIO:
      if (value == null) {
        unset_reductionRatio();
      } else {
        set_reductionRatio((java.lang.Integer)value);
      }
      break;

    case _CONTROL_TYPE:
      if (value == null) {
        unset_controlType();
      } else {
        set_controlType((java.lang.String)value);
      }
      break;

    case _ACTIVE_RESTORE:
      if (value == null) {
        unset_activeRestore();
      } else {
        set_activeRestore((java.lang.String)value);
      }
      break;

    case _REDUCTION_VALUE:
      if (value == null) {
        unset_reductionValue();
      } else {
        set_reductionValue((java.lang.Double)value);
      }
      break;

    case _CONTROL_PRIORITY:
      if (value == null) {
        unset_controlPriority();
      } else {
        set_controlPriority((java.lang.Integer)value);
      }
      break;

    case _ASSOCIATION_KEY:
      if (value == null) {
        unset_associationKey();
      } else {
        set_associationKey((java.lang.Integer)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _BASE_MESSAGE:
      return get_baseMessage();

    case _PAO_ID:
      return get_paoId();

    case _POINT_ID:
      return get_pointId();

    case _RAW_STATE:
      return get_rawState();

    case _START_DATE_TIME:
      return get_startDateTime();

    case _CONTROL_DURATION:
      return get_controlDuration();

    case _REDUCTION_RATIO:
      return get_reductionRatio();

    case _CONTROL_TYPE:
      return get_controlType();

    case _ACTIVE_RESTORE:
      return get_activeRestore();

    case _REDUCTION_VALUE:
      return get_reductionValue();

    case _CONTROL_PRIORITY:
      return get_controlPriority();

    case _ASSOCIATION_KEY:
      return get_associationKey();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _BASE_MESSAGE:
      return isSet_baseMessage();
    case _PAO_ID:
      return isSet_paoId();
    case _POINT_ID:
      return isSet_pointId();
    case _RAW_STATE:
      return isSet_rawState();
    case _START_DATE_TIME:
      return isSet_startDateTime();
    case _CONTROL_DURATION:
      return isSet_controlDuration();
    case _REDUCTION_RATIO:
      return isSet_reductionRatio();
    case _CONTROL_TYPE:
      return isSet_controlType();
    case _ACTIVE_RESTORE:
      return isSet_activeRestore();
    case _REDUCTION_VALUE:
      return isSet_reductionValue();
    case _CONTROL_PRIORITY:
      return isSet_controlPriority();
    case _ASSOCIATION_KEY:
      return isSet_associationKey();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof LMControlHistory)
      return this.equals((LMControlHistory)that);
    return false;
  }

  public boolean equals(LMControlHistory that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__baseMessage = true && this.isSet_baseMessage();
    boolean that_present__baseMessage = true && that.isSet_baseMessage();
    if (this_present__baseMessage || that_present__baseMessage) {
      if (!(this_present__baseMessage && that_present__baseMessage))
        return false;
      if (!this._baseMessage.equals(that._baseMessage))
        return false;
    }

    boolean this_present__paoId = true;
    boolean that_present__paoId = true;
    if (this_present__paoId || that_present__paoId) {
      if (!(this_present__paoId && that_present__paoId))
        return false;
      if (this._paoId != that._paoId)
        return false;
    }

    boolean this_present__pointId = true;
    boolean that_present__pointId = true;
    if (this_present__pointId || that_present__pointId) {
      if (!(this_present__pointId && that_present__pointId))
        return false;
      if (this._pointId != that._pointId)
        return false;
    }

    boolean this_present__rawState = true;
    boolean that_present__rawState = true;
    if (this_present__rawState || that_present__rawState) {
      if (!(this_present__rawState && that_present__rawState))
        return false;
      if (this._rawState != that._rawState)
        return false;
    }

    boolean this_present__startDateTime = true;
    boolean that_present__startDateTime = true;
    if (this_present__startDateTime || that_present__startDateTime) {
      if (!(this_present__startDateTime && that_present__startDateTime))
        return false;
      if (this._startDateTime != that._startDateTime)
        return false;
    }

    boolean this_present__controlDuration = true;
    boolean that_present__controlDuration = true;
    if (this_present__controlDuration || that_present__controlDuration) {
      if (!(this_present__controlDuration && that_present__controlDuration))
        return false;
      if (this._controlDuration != that._controlDuration)
        return false;
    }

    boolean this_present__reductionRatio = true;
    boolean that_present__reductionRatio = true;
    if (this_present__reductionRatio || that_present__reductionRatio) {
      if (!(this_present__reductionRatio && that_present__reductionRatio))
        return false;
      if (this._reductionRatio != that._reductionRatio)
        return false;
    }

    boolean this_present__controlType = true && this.isSet_controlType();
    boolean that_present__controlType = true && that.isSet_controlType();
    if (this_present__controlType || that_present__controlType) {
      if (!(this_present__controlType && that_present__controlType))
        return false;
      if (!this._controlType.equals(that._controlType))
        return false;
    }

    boolean this_present__activeRestore = true && this.isSet_activeRestore();
    boolean that_present__activeRestore = true && that.isSet_activeRestore();
    if (this_present__activeRestore || that_present__activeRestore) {
      if (!(this_present__activeRestore && that_present__activeRestore))
        return false;
      if (!this._activeRestore.equals(that._activeRestore))
        return false;
    }

    boolean this_present__reductionValue = true;
    boolean that_present__reductionValue = true;
    if (this_present__reductionValue || that_present__reductionValue) {
      if (!(this_present__reductionValue && that_present__reductionValue))
        return false;
      if (this._reductionValue != that._reductionValue)
        return false;
    }

    boolean this_present__controlPriority = true;
    boolean that_present__controlPriority = true;
    if (this_present__controlPriority || that_present__controlPriority) {
      if (!(this_present__controlPriority && that_present__controlPriority))
        return false;
      if (this._controlPriority != that._controlPriority)
        return false;
    }

    boolean this_present__associationKey = true;
    boolean that_present__associationKey = true;
    if (this_present__associationKey || that_present__associationKey) {
      if (!(this_present__associationKey && that_present__associationKey))
        return false;
      if (this._associationKey != that._associationKey)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSet_baseMessage()) ? 131071 : 524287);
    if (isSet_baseMessage())
      hashCode = hashCode * 8191 + _baseMessage.hashCode();

    hashCode = hashCode * 8191 + _paoId;

    hashCode = hashCode * 8191 + _pointId;

    hashCode = hashCode * 8191 + _rawState;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_startDateTime);

    hashCode = hashCode * 8191 + _controlDuration;

    hashCode = hashCode * 8191 + _reductionRatio;

    hashCode = hashCode * 8191 + ((isSet_controlType()) ? 131071 : 524287);
    if (isSet_controlType())
      hashCode = hashCode * 8191 + _controlType.hashCode();

    hashCode = hashCode * 8191 + ((isSet_activeRestore()) ? 131071 : 524287);
    if (isSet_activeRestore())
      hashCode = hashCode * 8191 + _activeRestore.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_reductionValue);

    hashCode = hashCode * 8191 + _controlPriority;

    hashCode = hashCode * 8191 + _associationKey;

    return hashCode;
  }

  @Override
  public int compareTo(LMControlHistory other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSet_baseMessage(), other.isSet_baseMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_baseMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._baseMessage, other._baseMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_paoId(), other.isSet_paoId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_paoId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._paoId, other._paoId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_pointId(), other.isSet_pointId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_pointId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._pointId, other._pointId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_rawState(), other.isSet_rawState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_rawState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._rawState, other._rawState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_startDateTime(), other.isSet_startDateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_startDateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._startDateTime, other._startDateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_controlDuration(), other.isSet_controlDuration());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_controlDuration()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._controlDuration, other._controlDuration);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_reductionRatio(), other.isSet_reductionRatio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_reductionRatio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._reductionRatio, other._reductionRatio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_controlType(), other.isSet_controlType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_controlType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._controlType, other._controlType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_activeRestore(), other.isSet_activeRestore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_activeRestore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._activeRestore, other._activeRestore);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_reductionValue(), other.isSet_reductionValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_reductionValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._reductionValue, other._reductionValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_controlPriority(), other.isSet_controlPriority());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_controlPriority()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._controlPriority, other._controlPriority);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_associationKey(), other.isSet_associationKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_associationKey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._associationKey, other._associationKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("LMControlHistory(");
    boolean first = true;

    sb.append("_baseMessage:");
    if (this._baseMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._baseMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_paoId:");
    sb.append(this._paoId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_pointId:");
    sb.append(this._pointId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_rawState:");
    sb.append(this._rawState);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_startDateTime:");
    sb.append(this._startDateTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_controlDuration:");
    sb.append(this._controlDuration);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_reductionRatio:");
    sb.append(this._reductionRatio);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_controlType:");
    if (this._controlType == null) {
      sb.append("null");
    } else {
      sb.append(this._controlType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_activeRestore:");
    if (this._activeRestore == null) {
      sb.append("null");
    } else {
      sb.append(this._activeRestore);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_reductionValue:");
    sb.append(this._reductionValue);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_controlPriority:");
    sb.append(this._controlPriority);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_associationKey:");
    sb.append(this._associationKey);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_baseMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_baseMessage' is unset! Struct:" + toString());
    }

    if (!isSet_paoId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_paoId' is unset! Struct:" + toString());
    }

    if (!isSet_pointId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_pointId' is unset! Struct:" + toString());
    }

    if (!isSet_rawState()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_rawState' is unset! Struct:" + toString());
    }

    if (!isSet_startDateTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_startDateTime' is unset! Struct:" + toString());
    }

    if (!isSet_controlDuration()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_controlDuration' is unset! Struct:" + toString());
    }

    if (!isSet_reductionRatio()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_reductionRatio' is unset! Struct:" + toString());
    }

    if (!isSet_controlType()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_controlType' is unset! Struct:" + toString());
    }

    if (!isSet_activeRestore()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_activeRestore' is unset! Struct:" + toString());
    }

    if (!isSet_reductionValue()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_reductionValue' is unset! Struct:" + toString());
    }

    if (!isSet_controlPriority()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_controlPriority' is unset! Struct:" + toString());
    }

    if (!isSet_associationKey()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_associationKey' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (_baseMessage != null) {
      _baseMessage.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class LMControlHistoryStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMControlHistoryStandardScheme getScheme() {
      return new LMControlHistoryStandardScheme();
    }
  }

  private static class LMControlHistoryStandardScheme extends org.apache.thrift.scheme.StandardScheme<LMControlHistory> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, LMControlHistory struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _BASE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.Message();
              struct._baseMessage.read(iprot);
              struct.set_baseMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _PAO_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._paoId = iprot.readI32();
              struct.set_paoIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _POINT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._pointId = iprot.readI32();
              struct.set_pointIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _RAW_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._rawState = iprot.readI32();
              struct.set_rawStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _START_DATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._startDateTime = iprot.readI64();
              struct.set_startDateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // _CONTROL_DURATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._controlDuration = iprot.readI32();
              struct.set_controlDurationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // _REDUCTION_RATIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._reductionRatio = iprot.readI32();
              struct.set_reductionRatioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // _CONTROL_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._controlType = iprot.readString();
              struct.set_controlTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // _ACTIVE_RESTORE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._activeRestore = iprot.readString();
              struct.set_activeRestoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // _REDUCTION_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct._reductionValue = iprot.readDouble();
              struct.set_reductionValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // _CONTROL_PRIORITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._controlPriority = iprot.readI32();
              struct.set_controlPriorityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // _ASSOCIATION_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._associationKey = iprot.readI32();
              struct.set_associationKeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, LMControlHistory struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct._baseMessage != null) {
        oprot.writeFieldBegin(_BASE_MESSAGE_FIELD_DESC);
        struct._baseMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_PAO_ID_FIELD_DESC);
      oprot.writeI32(struct._paoId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_POINT_ID_FIELD_DESC);
      oprot.writeI32(struct._pointId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_RAW_STATE_FIELD_DESC);
      oprot.writeI32(struct._rawState);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_START_DATE_TIME_FIELD_DESC);
      oprot.writeI64(struct._startDateTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_CONTROL_DURATION_FIELD_DESC);
      oprot.writeI32(struct._controlDuration);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_REDUCTION_RATIO_FIELD_DESC);
      oprot.writeI32(struct._reductionRatio);
      oprot.writeFieldEnd();
      if (struct._controlType != null) {
        oprot.writeFieldBegin(_CONTROL_TYPE_FIELD_DESC);
        oprot.writeString(struct._controlType);
        oprot.writeFieldEnd();
      }
      if (struct._activeRestore != null) {
        oprot.writeFieldBegin(_ACTIVE_RESTORE_FIELD_DESC);
        oprot.writeString(struct._activeRestore);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_REDUCTION_VALUE_FIELD_DESC);
      oprot.writeDouble(struct._reductionValue);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_CONTROL_PRIORITY_FIELD_DESC);
      oprot.writeI32(struct._controlPriority);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_ASSOCIATION_KEY_FIELD_DESC);
      oprot.writeI32(struct._associationKey);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class LMControlHistoryTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMControlHistoryTupleScheme getScheme() {
      return new LMControlHistoryTupleScheme();
    }
  }

  private static class LMControlHistoryTupleScheme extends org.apache.thrift.scheme.TupleScheme<LMControlHistory> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, LMControlHistory struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage.write(oprot);
      oprot.writeI32(struct._paoId);
      oprot.writeI32(struct._pointId);
      oprot.writeI32(struct._rawState);
      oprot.writeI64(struct._startDateTime);
      oprot.writeI32(struct._controlDuration);
      oprot.writeI32(struct._reductionRatio);
      oprot.writeString(struct._controlType);
      oprot.writeString(struct._activeRestore);
      oprot.writeDouble(struct._reductionValue);
      oprot.writeI32(struct._controlPriority);
      oprot.writeI32(struct._associationKey);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, LMControlHistory struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.Message();
      struct._baseMessage.read(iprot);
      struct.set_baseMessageIsSet(true);
      struct._paoId = iprot.readI32();
      struct.set_paoIdIsSet(true);
      struct._pointId = iprot.readI32();
      struct.set_pointIdIsSet(true);
      struct._rawState = iprot.readI32();
      struct.set_rawStateIsSet(true);
      struct._startDateTime = iprot.readI64();
      struct.set_startDateTimeIsSet(true);
      struct._controlDuration = iprot.readI32();
      struct.set_controlDurationIsSet(true);
      struct._reductionRatio = iprot.readI32();
      struct.set_reductionRatioIsSet(true);
      struct._controlType = iprot.readString();
      struct.set_controlTypeIsSet(true);
      struct._activeRestore = iprot.readString();
      struct.set_activeRestoreIsSet(true);
      struct._reductionValue = iprot.readDouble();
      struct.set_reductionValueIsSet(true);
      struct._controlPriority = iprot.readI32();
      struct.set_controlPriorityIsSet(true);
      struct._associationKey = iprot.readI32();
      struct.set_associationKeyIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

