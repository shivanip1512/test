/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CommErrorHistory implements org.apache.thrift.TBase<CommErrorHistory, CommErrorHistory._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CommErrorHistory");

  private static final org.apache.thrift.protocol.TField _BASE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_baseMessage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField _COMM_ERROR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_commErrorId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _PAO_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_paoId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField _DATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_dateTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField _ERROR_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("_errorType", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField _ERROR_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("_errorNumber", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField _COMMAND_FIELD_DESC = new org.apache.thrift.protocol.TField("_command", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField _OUT_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_outMessage", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField _IN_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_inMessage", org.apache.thrift.protocol.TType.STRING, (short)9);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CommErrorHistoryStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CommErrorHistoryTupleSchemeFactory());
  }

  private com.cannontech.messaging.serialization.thrift.generated.Message _baseMessage; // required
  private int _commErrorId; // required
  private int _paoId; // required
  private long _dateTime; // required
  private int _errorType; // required
  private int _errorNumber; // required
  private String _command; // required
  private String _outMessage; // required
  private String _inMessage; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _BASE_MESSAGE((short)1, "_baseMessage"),
    _COMM_ERROR_ID((short)2, "_commErrorId"),
    _PAO_ID((short)3, "_paoId"),
    _DATE_TIME((short)4, "_dateTime"),
    _ERROR_TYPE((short)5, "_errorType"),
    _ERROR_NUMBER((short)6, "_errorNumber"),
    _COMMAND((short)7, "_command"),
    _OUT_MESSAGE((short)8, "_outMessage"),
    _IN_MESSAGE((short)9, "_inMessage");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _BASE_MESSAGE
          return _BASE_MESSAGE;
        case 2: // _COMM_ERROR_ID
          return _COMM_ERROR_ID;
        case 3: // _PAO_ID
          return _PAO_ID;
        case 4: // _DATE_TIME
          return _DATE_TIME;
        case 5: // _ERROR_TYPE
          return _ERROR_TYPE;
        case 6: // _ERROR_NUMBER
          return _ERROR_NUMBER;
        case 7: // _COMMAND
          return _COMMAND;
        case 8: // _OUT_MESSAGE
          return _OUT_MESSAGE;
        case 9: // _IN_MESSAGE
          return _IN_MESSAGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___COMMERRORID_ISSET_ID = 0;
  private static final int ___PAOID_ISSET_ID = 1;
  private static final int ___DATETIME_ISSET_ID = 2;
  private static final int ___ERRORTYPE_ISSET_ID = 3;
  private static final int ___ERRORNUMBER_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._BASE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_baseMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.cannontech.messaging.serialization.thrift.generated.Message.class)));
    tmpMap.put(_Fields._COMM_ERROR_ID, new org.apache.thrift.meta_data.FieldMetaData("_commErrorId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._PAO_ID, new org.apache.thrift.meta_data.FieldMetaData("_paoId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._DATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_dateTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._ERROR_TYPE, new org.apache.thrift.meta_data.FieldMetaData("_errorType", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._ERROR_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("_errorNumber", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._COMMAND, new org.apache.thrift.meta_data.FieldMetaData("_command", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._OUT_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_outMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._IN_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_inMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CommErrorHistory.class, metaDataMap);
  }

  public CommErrorHistory() {
  }

  public CommErrorHistory(
    com.cannontech.messaging.serialization.thrift.generated.Message _baseMessage,
    int _commErrorId,
    int _paoId,
    long _dateTime,
    int _errorType,
    int _errorNumber,
    String _command,
    String _outMessage,
    String _inMessage)
  {
    this();
    this._baseMessage = _baseMessage;
    this._commErrorId = _commErrorId;
    set_commErrorIdIsSet(true);
    this._paoId = _paoId;
    set_paoIdIsSet(true);
    this._dateTime = _dateTime;
    set_dateTimeIsSet(true);
    this._errorType = _errorType;
    set_errorTypeIsSet(true);
    this._errorNumber = _errorNumber;
    set_errorNumberIsSet(true);
    this._command = _command;
    this._outMessage = _outMessage;
    this._inMessage = _inMessage;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CommErrorHistory(CommErrorHistory other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSet_baseMessage()) {
      this._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.Message(other._baseMessage);
    }
    this._commErrorId = other._commErrorId;
    this._paoId = other._paoId;
    this._dateTime = other._dateTime;
    this._errorType = other._errorType;
    this._errorNumber = other._errorNumber;
    if (other.isSet_command()) {
      this._command = other._command;
    }
    if (other.isSet_outMessage()) {
      this._outMessage = other._outMessage;
    }
    if (other.isSet_inMessage()) {
      this._inMessage = other._inMessage;
    }
  }

  public CommErrorHistory deepCopy() {
    return new CommErrorHistory(this);
  }

  @Override
  public void clear() {
    this._baseMessage = null;
    set_commErrorIdIsSet(false);
    this._commErrorId = 0;
    set_paoIdIsSet(false);
    this._paoId = 0;
    set_dateTimeIsSet(false);
    this._dateTime = 0;
    set_errorTypeIsSet(false);
    this._errorType = 0;
    set_errorNumberIsSet(false);
    this._errorNumber = 0;
    this._command = null;
    this._outMessage = null;
    this._inMessage = null;
  }

  public com.cannontech.messaging.serialization.thrift.generated.Message get_baseMessage() {
    return this._baseMessage;
  }

  public void set_baseMessage(com.cannontech.messaging.serialization.thrift.generated.Message _baseMessage) {
    this._baseMessage = _baseMessage;
  }

  public void unset_baseMessage() {
    this._baseMessage = null;
  }

  /** Returns true if field _baseMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_baseMessage() {
    return this._baseMessage != null;
  }

  public void set_baseMessageIsSet(boolean value) {
    if (!value) {
      this._baseMessage = null;
    }
  }

  public int get_commErrorId() {
    return this._commErrorId;
  }

  public void set_commErrorId(int _commErrorId) {
    this._commErrorId = _commErrorId;
    set_commErrorIdIsSet(true);
  }

  public void unset_commErrorId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___COMMERRORID_ISSET_ID);
  }

  /** Returns true if field _commErrorId is set (has been assigned a value) and false otherwise */
  public boolean isSet_commErrorId() {
    return EncodingUtils.testBit(__isset_bitfield, ___COMMERRORID_ISSET_ID);
  }

  public void set_commErrorIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___COMMERRORID_ISSET_ID, value);
  }

  public int get_paoId() {
    return this._paoId;
  }

  public void set_paoId(int _paoId) {
    this._paoId = _paoId;
    set_paoIdIsSet(true);
  }

  public void unset_paoId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___PAOID_ISSET_ID);
  }

  /** Returns true if field _paoId is set (has been assigned a value) and false otherwise */
  public boolean isSet_paoId() {
    return EncodingUtils.testBit(__isset_bitfield, ___PAOID_ISSET_ID);
  }

  public void set_paoIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___PAOID_ISSET_ID, value);
  }

  public long get_dateTime() {
    return this._dateTime;
  }

  public void set_dateTime(long _dateTime) {
    this._dateTime = _dateTime;
    set_dateTimeIsSet(true);
  }

  public void unset_dateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___DATETIME_ISSET_ID);
  }

  /** Returns true if field _dateTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_dateTime() {
    return EncodingUtils.testBit(__isset_bitfield, ___DATETIME_ISSET_ID);
  }

  public void set_dateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___DATETIME_ISSET_ID, value);
  }

  public int get_errorType() {
    return this._errorType;
  }

  public void set_errorType(int _errorType) {
    this._errorType = _errorType;
    set_errorTypeIsSet(true);
  }

  public void unset_errorType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___ERRORTYPE_ISSET_ID);
  }

  /** Returns true if field _errorType is set (has been assigned a value) and false otherwise */
  public boolean isSet_errorType() {
    return EncodingUtils.testBit(__isset_bitfield, ___ERRORTYPE_ISSET_ID);
  }

  public void set_errorTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___ERRORTYPE_ISSET_ID, value);
  }

  public int get_errorNumber() {
    return this._errorNumber;
  }

  public void set_errorNumber(int _errorNumber) {
    this._errorNumber = _errorNumber;
    set_errorNumberIsSet(true);
  }

  public void unset_errorNumber() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___ERRORNUMBER_ISSET_ID);
  }

  /** Returns true if field _errorNumber is set (has been assigned a value) and false otherwise */
  public boolean isSet_errorNumber() {
    return EncodingUtils.testBit(__isset_bitfield, ___ERRORNUMBER_ISSET_ID);
  }

  public void set_errorNumberIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___ERRORNUMBER_ISSET_ID, value);
  }

  public String get_command() {
    return this._command;
  }

  public void set_command(String _command) {
    this._command = _command;
  }

  public void unset_command() {
    this._command = null;
  }

  /** Returns true if field _command is set (has been assigned a value) and false otherwise */
  public boolean isSet_command() {
    return this._command != null;
  }

  public void set_commandIsSet(boolean value) {
    if (!value) {
      this._command = null;
    }
  }

  public String get_outMessage() {
    return this._outMessage;
  }

  public void set_outMessage(String _outMessage) {
    this._outMessage = _outMessage;
  }

  public void unset_outMessage() {
    this._outMessage = null;
  }

  /** Returns true if field _outMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_outMessage() {
    return this._outMessage != null;
  }

  public void set_outMessageIsSet(boolean value) {
    if (!value) {
      this._outMessage = null;
    }
  }

  public String get_inMessage() {
    return this._inMessage;
  }

  public void set_inMessage(String _inMessage) {
    this._inMessage = _inMessage;
  }

  public void unset_inMessage() {
    this._inMessage = null;
  }

  /** Returns true if field _inMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_inMessage() {
    return this._inMessage != null;
  }

  public void set_inMessageIsSet(boolean value) {
    if (!value) {
      this._inMessage = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case _BASE_MESSAGE:
      if (value == null) {
        unset_baseMessage();
      } else {
        set_baseMessage((com.cannontech.messaging.serialization.thrift.generated.Message)value);
      }
      break;

    case _COMM_ERROR_ID:
      if (value == null) {
        unset_commErrorId();
      } else {
        set_commErrorId((Integer)value);
      }
      break;

    case _PAO_ID:
      if (value == null) {
        unset_paoId();
      } else {
        set_paoId((Integer)value);
      }
      break;

    case _DATE_TIME:
      if (value == null) {
        unset_dateTime();
      } else {
        set_dateTime((Long)value);
      }
      break;

    case _ERROR_TYPE:
      if (value == null) {
        unset_errorType();
      } else {
        set_errorType((Integer)value);
      }
      break;

    case _ERROR_NUMBER:
      if (value == null) {
        unset_errorNumber();
      } else {
        set_errorNumber((Integer)value);
      }
      break;

    case _COMMAND:
      if (value == null) {
        unset_command();
      } else {
        set_command((String)value);
      }
      break;

    case _OUT_MESSAGE:
      if (value == null) {
        unset_outMessage();
      } else {
        set_outMessage((String)value);
      }
      break;

    case _IN_MESSAGE:
      if (value == null) {
        unset_inMessage();
      } else {
        set_inMessage((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case _BASE_MESSAGE:
      return get_baseMessage();

    case _COMM_ERROR_ID:
      return Integer.valueOf(get_commErrorId());

    case _PAO_ID:
      return Integer.valueOf(get_paoId());

    case _DATE_TIME:
      return Long.valueOf(get_dateTime());

    case _ERROR_TYPE:
      return Integer.valueOf(get_errorType());

    case _ERROR_NUMBER:
      return Integer.valueOf(get_errorNumber());

    case _COMMAND:
      return get_command();

    case _OUT_MESSAGE:
      return get_outMessage();

    case _IN_MESSAGE:
      return get_inMessage();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case _BASE_MESSAGE:
      return isSet_baseMessage();
    case _COMM_ERROR_ID:
      return isSet_commErrorId();
    case _PAO_ID:
      return isSet_paoId();
    case _DATE_TIME:
      return isSet_dateTime();
    case _ERROR_TYPE:
      return isSet_errorType();
    case _ERROR_NUMBER:
      return isSet_errorNumber();
    case _COMMAND:
      return isSet_command();
    case _OUT_MESSAGE:
      return isSet_outMessage();
    case _IN_MESSAGE:
      return isSet_inMessage();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CommErrorHistory)
      return this.equals((CommErrorHistory)that);
    return false;
  }

  public boolean equals(CommErrorHistory that) {
    if (that == null)
      return false;

    boolean this_present__baseMessage = true && this.isSet_baseMessage();
    boolean that_present__baseMessage = true && that.isSet_baseMessage();
    if (this_present__baseMessage || that_present__baseMessage) {
      if (!(this_present__baseMessage && that_present__baseMessage))
        return false;
      if (!this._baseMessage.equals(that._baseMessage))
        return false;
    }

    boolean this_present__commErrorId = true;
    boolean that_present__commErrorId = true;
    if (this_present__commErrorId || that_present__commErrorId) {
      if (!(this_present__commErrorId && that_present__commErrorId))
        return false;
      if (this._commErrorId != that._commErrorId)
        return false;
    }

    boolean this_present__paoId = true;
    boolean that_present__paoId = true;
    if (this_present__paoId || that_present__paoId) {
      if (!(this_present__paoId && that_present__paoId))
        return false;
      if (this._paoId != that._paoId)
        return false;
    }

    boolean this_present__dateTime = true;
    boolean that_present__dateTime = true;
    if (this_present__dateTime || that_present__dateTime) {
      if (!(this_present__dateTime && that_present__dateTime))
        return false;
      if (this._dateTime != that._dateTime)
        return false;
    }

    boolean this_present__errorType = true;
    boolean that_present__errorType = true;
    if (this_present__errorType || that_present__errorType) {
      if (!(this_present__errorType && that_present__errorType))
        return false;
      if (this._errorType != that._errorType)
        return false;
    }

    boolean this_present__errorNumber = true;
    boolean that_present__errorNumber = true;
    if (this_present__errorNumber || that_present__errorNumber) {
      if (!(this_present__errorNumber && that_present__errorNumber))
        return false;
      if (this._errorNumber != that._errorNumber)
        return false;
    }

    boolean this_present__command = true && this.isSet_command();
    boolean that_present__command = true && that.isSet_command();
    if (this_present__command || that_present__command) {
      if (!(this_present__command && that_present__command))
        return false;
      if (!this._command.equals(that._command))
        return false;
    }

    boolean this_present__outMessage = true && this.isSet_outMessage();
    boolean that_present__outMessage = true && that.isSet_outMessage();
    if (this_present__outMessage || that_present__outMessage) {
      if (!(this_present__outMessage && that_present__outMessage))
        return false;
      if (!this._outMessage.equals(that._outMessage))
        return false;
    }

    boolean this_present__inMessage = true && this.isSet_inMessage();
    boolean that_present__inMessage = true && that.isSet_inMessage();
    if (this_present__inMessage || that_present__inMessage) {
      if (!(this_present__inMessage && that_present__inMessage))
        return false;
      if (!this._inMessage.equals(that._inMessage))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(CommErrorHistory other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    CommErrorHistory typedOther = (CommErrorHistory)other;

    lastComparison = Boolean.valueOf(isSet_baseMessage()).compareTo(typedOther.isSet_baseMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_baseMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._baseMessage, typedOther._baseMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_commErrorId()).compareTo(typedOther.isSet_commErrorId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_commErrorId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._commErrorId, typedOther._commErrorId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_paoId()).compareTo(typedOther.isSet_paoId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_paoId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._paoId, typedOther._paoId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_dateTime()).compareTo(typedOther.isSet_dateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_dateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._dateTime, typedOther._dateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_errorType()).compareTo(typedOther.isSet_errorType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_errorType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._errorType, typedOther._errorType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_errorNumber()).compareTo(typedOther.isSet_errorNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_errorNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._errorNumber, typedOther._errorNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_command()).compareTo(typedOther.isSet_command());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_command()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._command, typedOther._command);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_outMessage()).compareTo(typedOther.isSet_outMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_outMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._outMessage, typedOther._outMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_inMessage()).compareTo(typedOther.isSet_inMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_inMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._inMessage, typedOther._inMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CommErrorHistory(");
    boolean first = true;

    sb.append("_baseMessage:");
    if (this._baseMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._baseMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_commErrorId:");
    sb.append(this._commErrorId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_paoId:");
    sb.append(this._paoId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_dateTime:");
    sb.append(this._dateTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_errorType:");
    sb.append(this._errorType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_errorNumber:");
    sb.append(this._errorNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_command:");
    if (this._command == null) {
      sb.append("null");
    } else {
      sb.append(this._command);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_outMessage:");
    if (this._outMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._outMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_inMessage:");
    if (this._inMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._inMessage);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_baseMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_baseMessage' is unset! Struct:" + toString());
    }

    if (!isSet_commErrorId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_commErrorId' is unset! Struct:" + toString());
    }

    if (!isSet_paoId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_paoId' is unset! Struct:" + toString());
    }

    if (!isSet_dateTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_dateTime' is unset! Struct:" + toString());
    }

    if (!isSet_errorType()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_errorType' is unset! Struct:" + toString());
    }

    if (!isSet_errorNumber()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_errorNumber' is unset! Struct:" + toString());
    }

    if (!isSet_command()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_command' is unset! Struct:" + toString());
    }

    if (!isSet_outMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_outMessage' is unset! Struct:" + toString());
    }

    if (!isSet_inMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_inMessage' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (_baseMessage != null) {
      _baseMessage.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CommErrorHistoryStandardSchemeFactory implements SchemeFactory {
    public CommErrorHistoryStandardScheme getScheme() {
      return new CommErrorHistoryStandardScheme();
    }
  }

  private static class CommErrorHistoryStandardScheme extends StandardScheme<CommErrorHistory> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CommErrorHistory struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _BASE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.Message();
              struct._baseMessage.read(iprot);
              struct.set_baseMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _COMM_ERROR_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._commErrorId = iprot.readI32();
              struct.set_commErrorIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _PAO_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._paoId = iprot.readI32();
              struct.set_paoIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _DATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._dateTime = iprot.readI64();
              struct.set_dateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _ERROR_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._errorType = iprot.readI32();
              struct.set_errorTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // _ERROR_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._errorNumber = iprot.readI32();
              struct.set_errorNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // _COMMAND
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._command = iprot.readString();
              struct.set_commandIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // _OUT_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._outMessage = iprot.readString();
              struct.set_outMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // _IN_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._inMessage = iprot.readString();
              struct.set_inMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CommErrorHistory struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct._baseMessage != null) {
        oprot.writeFieldBegin(_BASE_MESSAGE_FIELD_DESC);
        struct._baseMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_COMM_ERROR_ID_FIELD_DESC);
      oprot.writeI32(struct._commErrorId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_PAO_ID_FIELD_DESC);
      oprot.writeI32(struct._paoId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_DATE_TIME_FIELD_DESC);
      oprot.writeI64(struct._dateTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_ERROR_TYPE_FIELD_DESC);
      oprot.writeI32(struct._errorType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_ERROR_NUMBER_FIELD_DESC);
      oprot.writeI32(struct._errorNumber);
      oprot.writeFieldEnd();
      if (struct._command != null) {
        oprot.writeFieldBegin(_COMMAND_FIELD_DESC);
        oprot.writeString(struct._command);
        oprot.writeFieldEnd();
      }
      if (struct._outMessage != null) {
        oprot.writeFieldBegin(_OUT_MESSAGE_FIELD_DESC);
        oprot.writeString(struct._outMessage);
        oprot.writeFieldEnd();
      }
      if (struct._inMessage != null) {
        oprot.writeFieldBegin(_IN_MESSAGE_FIELD_DESC);
        oprot.writeString(struct._inMessage);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CommErrorHistoryTupleSchemeFactory implements SchemeFactory {
    public CommErrorHistoryTupleScheme getScheme() {
      return new CommErrorHistoryTupleScheme();
    }
  }

  private static class CommErrorHistoryTupleScheme extends TupleScheme<CommErrorHistory> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CommErrorHistory struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      struct._baseMessage.write(oprot);
      oprot.writeI32(struct._commErrorId);
      oprot.writeI32(struct._paoId);
      oprot.writeI64(struct._dateTime);
      oprot.writeI32(struct._errorType);
      oprot.writeI32(struct._errorNumber);
      oprot.writeString(struct._command);
      oprot.writeString(struct._outMessage);
      oprot.writeString(struct._inMessage);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CommErrorHistory struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.Message();
      struct._baseMessage.read(iprot);
      struct.set_baseMessageIsSet(true);
      struct._commErrorId = iprot.readI32();
      struct.set_commErrorIdIsSet(true);
      struct._paoId = iprot.readI32();
      struct.set_paoIdIsSet(true);
      struct._dateTime = iprot.readI64();
      struct.set_dateTimeIsSet(true);
      struct._errorType = iprot.readI32();
      struct.set_errorTypeIsSet(true);
      struct._errorNumber = iprot.readI32();
      struct.set_errorNumberIsSet(true);
      struct._command = iprot.readString();
      struct.set_commandIsSet(true);
      struct._outMessage = iprot.readString();
      struct.set_outMessageIsSet(true);
      struct._inMessage = iprot.readString();
      struct.set_inMessageIsSet(true);
    }
  }

}

