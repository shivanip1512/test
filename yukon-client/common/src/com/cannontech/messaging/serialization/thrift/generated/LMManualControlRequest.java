/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-05-31")
public class LMManualControlRequest implements org.apache.thrift.TBase<LMManualControlRequest, LMManualControlRequest._Fields>, java.io.Serializable, Cloneable, Comparable<LMManualControlRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("LMManualControlRequest");

  private static final org.apache.thrift.protocol.TField _BASE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_baseMessage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField _COMMAND_FIELD_DESC = new org.apache.thrift.protocol.TField("_command", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _PAO_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_paoId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField _NOTIFY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_notifyTime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField _START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_startTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField _STOP_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_stopTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField _START_GEAR_FIELD_DESC = new org.apache.thrift.protocol.TField("_startGear", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField _START_PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("_startPriority", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField _ADDITIONAL_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("_additionalInfo", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField _CONSTRAINT_CMD_FIELD_DESC = new org.apache.thrift.protocol.TField("_constraintCmd", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField _ORIGIN_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("_originSource", org.apache.thrift.protocol.TType.STRING, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new LMManualControlRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new LMManualControlRequestTupleSchemeFactory();

  private @org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.LMMessage _baseMessage; // required
  private int _command; // required
  private int _paoId; // required
  private long _notifyTime; // required
  private long _startTime; // required
  private long _stopTime; // required
  private int _startGear; // required
  private int _startPriority; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _additionalInfo; // required
  private int _constraintCmd; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _originSource; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _BASE_MESSAGE((short)1, "_baseMessage"),
    _COMMAND((short)2, "_command"),
    _PAO_ID((short)3, "_paoId"),
    _NOTIFY_TIME((short)4, "_notifyTime"),
    _START_TIME((short)5, "_startTime"),
    _STOP_TIME((short)6, "_stopTime"),
    _START_GEAR((short)7, "_startGear"),
    _START_PRIORITY((short)8, "_startPriority"),
    _ADDITIONAL_INFO((short)9, "_additionalInfo"),
    _CONSTRAINT_CMD((short)10, "_constraintCmd"),
    _ORIGIN_SOURCE((short)11, "_originSource");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _BASE_MESSAGE
          return _BASE_MESSAGE;
        case 2: // _COMMAND
          return _COMMAND;
        case 3: // _PAO_ID
          return _PAO_ID;
        case 4: // _NOTIFY_TIME
          return _NOTIFY_TIME;
        case 5: // _START_TIME
          return _START_TIME;
        case 6: // _STOP_TIME
          return _STOP_TIME;
        case 7: // _START_GEAR
          return _START_GEAR;
        case 8: // _START_PRIORITY
          return _START_PRIORITY;
        case 9: // _ADDITIONAL_INFO
          return _ADDITIONAL_INFO;
        case 10: // _CONSTRAINT_CMD
          return _CONSTRAINT_CMD;
        case 11: // _ORIGIN_SOURCE
          return _ORIGIN_SOURCE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___COMMAND_ISSET_ID = 0;
  private static final int ___PAOID_ISSET_ID = 1;
  private static final int ___NOTIFYTIME_ISSET_ID = 2;
  private static final int ___STARTTIME_ISSET_ID = 3;
  private static final int ___STOPTIME_ISSET_ID = 4;
  private static final int ___STARTGEAR_ISSET_ID = 5;
  private static final int ___STARTPRIORITY_ISSET_ID = 6;
  private static final int ___CONSTRAINTCMD_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._BASE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_baseMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.cannontech.messaging.serialization.thrift.generated.LMMessage.class)));
    tmpMap.put(_Fields._COMMAND, new org.apache.thrift.meta_data.FieldMetaData("_command", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._PAO_ID, new org.apache.thrift.meta_data.FieldMetaData("_paoId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._NOTIFY_TIME, new org.apache.thrift.meta_data.FieldMetaData("_notifyTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._START_TIME, new org.apache.thrift.meta_data.FieldMetaData("_startTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._STOP_TIME, new org.apache.thrift.meta_data.FieldMetaData("_stopTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._START_GEAR, new org.apache.thrift.meta_data.FieldMetaData("_startGear", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._START_PRIORITY, new org.apache.thrift.meta_data.FieldMetaData("_startPriority", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._ADDITIONAL_INFO, new org.apache.thrift.meta_data.FieldMetaData("_additionalInfo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._CONSTRAINT_CMD, new org.apache.thrift.meta_data.FieldMetaData("_constraintCmd", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._ORIGIN_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("_originSource", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(LMManualControlRequest.class, metaDataMap);
  }

  public LMManualControlRequest() {
  }

  public LMManualControlRequest(
    com.cannontech.messaging.serialization.thrift.generated.LMMessage _baseMessage,
    int _command,
    int _paoId,
    long _notifyTime,
    long _startTime,
    long _stopTime,
    int _startGear,
    int _startPriority,
    java.lang.String _additionalInfo,
    int _constraintCmd,
    java.lang.String _originSource)
  {
    this();
    this._baseMessage = _baseMessage;
    this._command = _command;
    set_commandIsSet(true);
    this._paoId = _paoId;
    set_paoIdIsSet(true);
    this._notifyTime = _notifyTime;
    set_notifyTimeIsSet(true);
    this._startTime = _startTime;
    set_startTimeIsSet(true);
    this._stopTime = _stopTime;
    set_stopTimeIsSet(true);
    this._startGear = _startGear;
    set_startGearIsSet(true);
    this._startPriority = _startPriority;
    set_startPriorityIsSet(true);
    this._additionalInfo = _additionalInfo;
    this._constraintCmd = _constraintCmd;
    set_constraintCmdIsSet(true);
    this._originSource = _originSource;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public LMManualControlRequest(LMManualControlRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSet_baseMessage()) {
      this._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.LMMessage(other._baseMessage);
    }
    this._command = other._command;
    this._paoId = other._paoId;
    this._notifyTime = other._notifyTime;
    this._startTime = other._startTime;
    this._stopTime = other._stopTime;
    this._startGear = other._startGear;
    this._startPriority = other._startPriority;
    if (other.isSet_additionalInfo()) {
      this._additionalInfo = other._additionalInfo;
    }
    this._constraintCmd = other._constraintCmd;
    if (other.isSet_originSource()) {
      this._originSource = other._originSource;
    }
  }

  public LMManualControlRequest deepCopy() {
    return new LMManualControlRequest(this);
  }

  @Override
  public void clear() {
    this._baseMessage = null;
    set_commandIsSet(false);
    this._command = 0;
    set_paoIdIsSet(false);
    this._paoId = 0;
    set_notifyTimeIsSet(false);
    this._notifyTime = 0;
    set_startTimeIsSet(false);
    this._startTime = 0;
    set_stopTimeIsSet(false);
    this._stopTime = 0;
    set_startGearIsSet(false);
    this._startGear = 0;
    set_startPriorityIsSet(false);
    this._startPriority = 0;
    this._additionalInfo = null;
    set_constraintCmdIsSet(false);
    this._constraintCmd = 0;
    this._originSource = null;
  }

  @org.apache.thrift.annotation.Nullable
  public com.cannontech.messaging.serialization.thrift.generated.LMMessage get_baseMessage() {
    return this._baseMessage;
  }

  public void set_baseMessage(@org.apache.thrift.annotation.Nullable com.cannontech.messaging.serialization.thrift.generated.LMMessage _baseMessage) {
    this._baseMessage = _baseMessage;
  }

  public void unset_baseMessage() {
    this._baseMessage = null;
  }

  /** Returns true if field _baseMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_baseMessage() {
    return this._baseMessage != null;
  }

  public void set_baseMessageIsSet(boolean value) {
    if (!value) {
      this._baseMessage = null;
    }
  }

  public int get_command() {
    return this._command;
  }

  public void set_command(int _command) {
    this._command = _command;
    set_commandIsSet(true);
  }

  public void unset_command() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___COMMAND_ISSET_ID);
  }

  /** Returns true if field _command is set (has been assigned a value) and false otherwise */
  public boolean isSet_command() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___COMMAND_ISSET_ID);
  }

  public void set_commandIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___COMMAND_ISSET_ID, value);
  }

  public int get_paoId() {
    return this._paoId;
  }

  public void set_paoId(int _paoId) {
    this._paoId = _paoId;
    set_paoIdIsSet(true);
  }

  public void unset_paoId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___PAOID_ISSET_ID);
  }

  /** Returns true if field _paoId is set (has been assigned a value) and false otherwise */
  public boolean isSet_paoId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___PAOID_ISSET_ID);
  }

  public void set_paoIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___PAOID_ISSET_ID, value);
  }

  public long get_notifyTime() {
    return this._notifyTime;
  }

  public void set_notifyTime(long _notifyTime) {
    this._notifyTime = _notifyTime;
    set_notifyTimeIsSet(true);
  }

  public void unset_notifyTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___NOTIFYTIME_ISSET_ID);
  }

  /** Returns true if field _notifyTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_notifyTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___NOTIFYTIME_ISSET_ID);
  }

  public void set_notifyTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___NOTIFYTIME_ISSET_ID, value);
  }

  public long get_startTime() {
    return this._startTime;
  }

  public void set_startTime(long _startTime) {
    this._startTime = _startTime;
    set_startTimeIsSet(true);
  }

  public void unset_startTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___STARTTIME_ISSET_ID);
  }

  /** Returns true if field _startTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_startTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___STARTTIME_ISSET_ID);
  }

  public void set_startTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___STARTTIME_ISSET_ID, value);
  }

  public long get_stopTime() {
    return this._stopTime;
  }

  public void set_stopTime(long _stopTime) {
    this._stopTime = _stopTime;
    set_stopTimeIsSet(true);
  }

  public void unset_stopTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___STOPTIME_ISSET_ID);
  }

  /** Returns true if field _stopTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_stopTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___STOPTIME_ISSET_ID);
  }

  public void set_stopTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___STOPTIME_ISSET_ID, value);
  }

  public int get_startGear() {
    return this._startGear;
  }

  public void set_startGear(int _startGear) {
    this._startGear = _startGear;
    set_startGearIsSet(true);
  }

  public void unset_startGear() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___STARTGEAR_ISSET_ID);
  }

  /** Returns true if field _startGear is set (has been assigned a value) and false otherwise */
  public boolean isSet_startGear() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___STARTGEAR_ISSET_ID);
  }

  public void set_startGearIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___STARTGEAR_ISSET_ID, value);
  }

  public int get_startPriority() {
    return this._startPriority;
  }

  public void set_startPriority(int _startPriority) {
    this._startPriority = _startPriority;
    set_startPriorityIsSet(true);
  }

  public void unset_startPriority() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___STARTPRIORITY_ISSET_ID);
  }

  /** Returns true if field _startPriority is set (has been assigned a value) and false otherwise */
  public boolean isSet_startPriority() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___STARTPRIORITY_ISSET_ID);
  }

  public void set_startPriorityIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___STARTPRIORITY_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_additionalInfo() {
    return this._additionalInfo;
  }

  public void set_additionalInfo(@org.apache.thrift.annotation.Nullable java.lang.String _additionalInfo) {
    this._additionalInfo = _additionalInfo;
  }

  public void unset_additionalInfo() {
    this._additionalInfo = null;
  }

  /** Returns true if field _additionalInfo is set (has been assigned a value) and false otherwise */
  public boolean isSet_additionalInfo() {
    return this._additionalInfo != null;
  }

  public void set_additionalInfoIsSet(boolean value) {
    if (!value) {
      this._additionalInfo = null;
    }
  }

  public int get_constraintCmd() {
    return this._constraintCmd;
  }

  public void set_constraintCmd(int _constraintCmd) {
    this._constraintCmd = _constraintCmd;
    set_constraintCmdIsSet(true);
  }

  public void unset_constraintCmd() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___CONSTRAINTCMD_ISSET_ID);
  }

  /** Returns true if field _constraintCmd is set (has been assigned a value) and false otherwise */
  public boolean isSet_constraintCmd() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___CONSTRAINTCMD_ISSET_ID);
  }

  public void set_constraintCmdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___CONSTRAINTCMD_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_originSource() {
    return this._originSource;
  }

  public void set_originSource(@org.apache.thrift.annotation.Nullable java.lang.String _originSource) {
    this._originSource = _originSource;
  }

  public void unset_originSource() {
    this._originSource = null;
  }

  /** Returns true if field _originSource is set (has been assigned a value) and false otherwise */
  public boolean isSet_originSource() {
    return this._originSource != null;
  }

  public void set_originSourceIsSet(boolean value) {
    if (!value) {
      this._originSource = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case _BASE_MESSAGE:
      if (value == null) {
        unset_baseMessage();
      } else {
        set_baseMessage((com.cannontech.messaging.serialization.thrift.generated.LMMessage)value);
      }
      break;

    case _COMMAND:
      if (value == null) {
        unset_command();
      } else {
        set_command((java.lang.Integer)value);
      }
      break;

    case _PAO_ID:
      if (value == null) {
        unset_paoId();
      } else {
        set_paoId((java.lang.Integer)value);
      }
      break;

    case _NOTIFY_TIME:
      if (value == null) {
        unset_notifyTime();
      } else {
        set_notifyTime((java.lang.Long)value);
      }
      break;

    case _START_TIME:
      if (value == null) {
        unset_startTime();
      } else {
        set_startTime((java.lang.Long)value);
      }
      break;

    case _STOP_TIME:
      if (value == null) {
        unset_stopTime();
      } else {
        set_stopTime((java.lang.Long)value);
      }
      break;

    case _START_GEAR:
      if (value == null) {
        unset_startGear();
      } else {
        set_startGear((java.lang.Integer)value);
      }
      break;

    case _START_PRIORITY:
      if (value == null) {
        unset_startPriority();
      } else {
        set_startPriority((java.lang.Integer)value);
      }
      break;

    case _ADDITIONAL_INFO:
      if (value == null) {
        unset_additionalInfo();
      } else {
        set_additionalInfo((java.lang.String)value);
      }
      break;

    case _CONSTRAINT_CMD:
      if (value == null) {
        unset_constraintCmd();
      } else {
        set_constraintCmd((java.lang.Integer)value);
      }
      break;

    case _ORIGIN_SOURCE:
      if (value == null) {
        unset_originSource();
      } else {
        set_originSource((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _BASE_MESSAGE:
      return get_baseMessage();

    case _COMMAND:
      return get_command();

    case _PAO_ID:
      return get_paoId();

    case _NOTIFY_TIME:
      return get_notifyTime();

    case _START_TIME:
      return get_startTime();

    case _STOP_TIME:
      return get_stopTime();

    case _START_GEAR:
      return get_startGear();

    case _START_PRIORITY:
      return get_startPriority();

    case _ADDITIONAL_INFO:
      return get_additionalInfo();

    case _CONSTRAINT_CMD:
      return get_constraintCmd();

    case _ORIGIN_SOURCE:
      return get_originSource();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _BASE_MESSAGE:
      return isSet_baseMessage();
    case _COMMAND:
      return isSet_command();
    case _PAO_ID:
      return isSet_paoId();
    case _NOTIFY_TIME:
      return isSet_notifyTime();
    case _START_TIME:
      return isSet_startTime();
    case _STOP_TIME:
      return isSet_stopTime();
    case _START_GEAR:
      return isSet_startGear();
    case _START_PRIORITY:
      return isSet_startPriority();
    case _ADDITIONAL_INFO:
      return isSet_additionalInfo();
    case _CONSTRAINT_CMD:
      return isSet_constraintCmd();
    case _ORIGIN_SOURCE:
      return isSet_originSource();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof LMManualControlRequest)
      return this.equals((LMManualControlRequest)that);
    return false;
  }

  public boolean equals(LMManualControlRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__baseMessage = true && this.isSet_baseMessage();
    boolean that_present__baseMessage = true && that.isSet_baseMessage();
    if (this_present__baseMessage || that_present__baseMessage) {
      if (!(this_present__baseMessage && that_present__baseMessage))
        return false;
      if (!this._baseMessage.equals(that._baseMessage))
        return false;
    }

    boolean this_present__command = true;
    boolean that_present__command = true;
    if (this_present__command || that_present__command) {
      if (!(this_present__command && that_present__command))
        return false;
      if (this._command != that._command)
        return false;
    }

    boolean this_present__paoId = true;
    boolean that_present__paoId = true;
    if (this_present__paoId || that_present__paoId) {
      if (!(this_present__paoId && that_present__paoId))
        return false;
      if (this._paoId != that._paoId)
        return false;
    }

    boolean this_present__notifyTime = true;
    boolean that_present__notifyTime = true;
    if (this_present__notifyTime || that_present__notifyTime) {
      if (!(this_present__notifyTime && that_present__notifyTime))
        return false;
      if (this._notifyTime != that._notifyTime)
        return false;
    }

    boolean this_present__startTime = true;
    boolean that_present__startTime = true;
    if (this_present__startTime || that_present__startTime) {
      if (!(this_present__startTime && that_present__startTime))
        return false;
      if (this._startTime != that._startTime)
        return false;
    }

    boolean this_present__stopTime = true;
    boolean that_present__stopTime = true;
    if (this_present__stopTime || that_present__stopTime) {
      if (!(this_present__stopTime && that_present__stopTime))
        return false;
      if (this._stopTime != that._stopTime)
        return false;
    }

    boolean this_present__startGear = true;
    boolean that_present__startGear = true;
    if (this_present__startGear || that_present__startGear) {
      if (!(this_present__startGear && that_present__startGear))
        return false;
      if (this._startGear != that._startGear)
        return false;
    }

    boolean this_present__startPriority = true;
    boolean that_present__startPriority = true;
    if (this_present__startPriority || that_present__startPriority) {
      if (!(this_present__startPriority && that_present__startPriority))
        return false;
      if (this._startPriority != that._startPriority)
        return false;
    }

    boolean this_present__additionalInfo = true && this.isSet_additionalInfo();
    boolean that_present__additionalInfo = true && that.isSet_additionalInfo();
    if (this_present__additionalInfo || that_present__additionalInfo) {
      if (!(this_present__additionalInfo && that_present__additionalInfo))
        return false;
      if (!this._additionalInfo.equals(that._additionalInfo))
        return false;
    }

    boolean this_present__constraintCmd = true;
    boolean that_present__constraintCmd = true;
    if (this_present__constraintCmd || that_present__constraintCmd) {
      if (!(this_present__constraintCmd && that_present__constraintCmd))
        return false;
      if (this._constraintCmd != that._constraintCmd)
        return false;
    }

    boolean this_present__originSource = true && this.isSet_originSource();
    boolean that_present__originSource = true && that.isSet_originSource();
    if (this_present__originSource || that_present__originSource) {
      if (!(this_present__originSource && that_present__originSource))
        return false;
      if (!this._originSource.equals(that._originSource))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSet_baseMessage()) ? 131071 : 524287);
    if (isSet_baseMessage())
      hashCode = hashCode * 8191 + _baseMessage.hashCode();

    hashCode = hashCode * 8191 + _command;

    hashCode = hashCode * 8191 + _paoId;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_notifyTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_startTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_stopTime);

    hashCode = hashCode * 8191 + _startGear;

    hashCode = hashCode * 8191 + _startPriority;

    hashCode = hashCode * 8191 + ((isSet_additionalInfo()) ? 131071 : 524287);
    if (isSet_additionalInfo())
      hashCode = hashCode * 8191 + _additionalInfo.hashCode();

    hashCode = hashCode * 8191 + _constraintCmd;

    hashCode = hashCode * 8191 + ((isSet_originSource()) ? 131071 : 524287);
    if (isSet_originSource())
      hashCode = hashCode * 8191 + _originSource.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(LMManualControlRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSet_baseMessage(), other.isSet_baseMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_baseMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._baseMessage, other._baseMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_command(), other.isSet_command());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_command()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._command, other._command);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_paoId(), other.isSet_paoId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_paoId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._paoId, other._paoId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_notifyTime(), other.isSet_notifyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_notifyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._notifyTime, other._notifyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_startTime(), other.isSet_startTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_startTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._startTime, other._startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_stopTime(), other.isSet_stopTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_stopTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._stopTime, other._stopTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_startGear(), other.isSet_startGear());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_startGear()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._startGear, other._startGear);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_startPriority(), other.isSet_startPriority());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_startPriority()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._startPriority, other._startPriority);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_additionalInfo(), other.isSet_additionalInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_additionalInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._additionalInfo, other._additionalInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_constraintCmd(), other.isSet_constraintCmd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_constraintCmd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._constraintCmd, other._constraintCmd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSet_originSource(), other.isSet_originSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_originSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._originSource, other._originSource);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("LMManualControlRequest(");
    boolean first = true;

    sb.append("_baseMessage:");
    if (this._baseMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._baseMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_command:");
    sb.append(this._command);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_paoId:");
    sb.append(this._paoId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_notifyTime:");
    sb.append(this._notifyTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_startTime:");
    sb.append(this._startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_stopTime:");
    sb.append(this._stopTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_startGear:");
    sb.append(this._startGear);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_startPriority:");
    sb.append(this._startPriority);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_additionalInfo:");
    if (this._additionalInfo == null) {
      sb.append("null");
    } else {
      sb.append(this._additionalInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_constraintCmd:");
    sb.append(this._constraintCmd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_originSource:");
    if (this._originSource == null) {
      sb.append("null");
    } else {
      sb.append(this._originSource);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_baseMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_baseMessage' is unset! Struct:" + toString());
    }

    if (!isSet_command()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_command' is unset! Struct:" + toString());
    }

    if (!isSet_paoId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_paoId' is unset! Struct:" + toString());
    }

    if (!isSet_notifyTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_notifyTime' is unset! Struct:" + toString());
    }

    if (!isSet_startTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_startTime' is unset! Struct:" + toString());
    }

    if (!isSet_stopTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_stopTime' is unset! Struct:" + toString());
    }

    if (!isSet_startGear()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_startGear' is unset! Struct:" + toString());
    }

    if (!isSet_startPriority()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_startPriority' is unset! Struct:" + toString());
    }

    if (!isSet_additionalInfo()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_additionalInfo' is unset! Struct:" + toString());
    }

    if (!isSet_constraintCmd()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_constraintCmd' is unset! Struct:" + toString());
    }

    if (!isSet_originSource()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_originSource' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (_baseMessage != null) {
      _baseMessage.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class LMManualControlRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMManualControlRequestStandardScheme getScheme() {
      return new LMManualControlRequestStandardScheme();
    }
  }

  private static class LMManualControlRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<LMManualControlRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, LMManualControlRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _BASE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.LMMessage();
              struct._baseMessage.read(iprot);
              struct.set_baseMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _COMMAND
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._command = iprot.readI32();
              struct.set_commandIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _PAO_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._paoId = iprot.readI32();
              struct.set_paoIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _NOTIFY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._notifyTime = iprot.readI64();
              struct.set_notifyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._startTime = iprot.readI64();
              struct.set_startTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // _STOP_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._stopTime = iprot.readI64();
              struct.set_stopTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // _START_GEAR
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._startGear = iprot.readI32();
              struct.set_startGearIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // _START_PRIORITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._startPriority = iprot.readI32();
              struct.set_startPriorityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // _ADDITIONAL_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._additionalInfo = iprot.readString();
              struct.set_additionalInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // _CONSTRAINT_CMD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._constraintCmd = iprot.readI32();
              struct.set_constraintCmdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // _ORIGIN_SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._originSource = iprot.readString();
              struct.set_originSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, LMManualControlRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct._baseMessage != null) {
        oprot.writeFieldBegin(_BASE_MESSAGE_FIELD_DESC);
        struct._baseMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_COMMAND_FIELD_DESC);
      oprot.writeI32(struct._command);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_PAO_ID_FIELD_DESC);
      oprot.writeI32(struct._paoId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_NOTIFY_TIME_FIELD_DESC);
      oprot.writeI64(struct._notifyTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_START_TIME_FIELD_DESC);
      oprot.writeI64(struct._startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_STOP_TIME_FIELD_DESC);
      oprot.writeI64(struct._stopTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_START_GEAR_FIELD_DESC);
      oprot.writeI32(struct._startGear);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_START_PRIORITY_FIELD_DESC);
      oprot.writeI32(struct._startPriority);
      oprot.writeFieldEnd();
      if (struct._additionalInfo != null) {
        oprot.writeFieldBegin(_ADDITIONAL_INFO_FIELD_DESC);
        oprot.writeString(struct._additionalInfo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_CONSTRAINT_CMD_FIELD_DESC);
      oprot.writeI32(struct._constraintCmd);
      oprot.writeFieldEnd();
      if (struct._originSource != null) {
        oprot.writeFieldBegin(_ORIGIN_SOURCE_FIELD_DESC);
        oprot.writeString(struct._originSource);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class LMManualControlRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMManualControlRequestTupleScheme getScheme() {
      return new LMManualControlRequestTupleScheme();
    }
  }

  private static class LMManualControlRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<LMManualControlRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, LMManualControlRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage.write(oprot);
      oprot.writeI32(struct._command);
      oprot.writeI32(struct._paoId);
      oprot.writeI64(struct._notifyTime);
      oprot.writeI64(struct._startTime);
      oprot.writeI64(struct._stopTime);
      oprot.writeI32(struct._startGear);
      oprot.writeI32(struct._startPriority);
      oprot.writeString(struct._additionalInfo);
      oprot.writeI32(struct._constraintCmd);
      oprot.writeString(struct._originSource);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, LMManualControlRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.LMMessage();
      struct._baseMessage.read(iprot);
      struct.set_baseMessageIsSet(true);
      struct._command = iprot.readI32();
      struct.set_commandIsSet(true);
      struct._paoId = iprot.readI32();
      struct.set_paoIdIsSet(true);
      struct._notifyTime = iprot.readI64();
      struct.set_notifyTimeIsSet(true);
      struct._startTime = iprot.readI64();
      struct.set_startTimeIsSet(true);
      struct._stopTime = iprot.readI64();
      struct.set_stopTimeIsSet(true);
      struct._startGear = iprot.readI32();
      struct.set_startGearIsSet(true);
      struct._startPriority = iprot.readI32();
      struct.set_startPriorityIsSet(true);
      struct._additionalInfo = iprot.readString();
      struct.set_additionalInfoIsSet(true);
      struct._constraintCmd = iprot.readI32();
      struct.set_constraintCmdIsSet(true);
      struct._originSource = iprot.readString();
      struct.set_originSourceIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

