/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-09-24")
public class LMProgramEnergyExchange implements org.apache.thrift.TBase<LMProgramEnergyExchange, LMProgramEnergyExchange._Fields>, java.io.Serializable, Cloneable, Comparable<LMProgramEnergyExchange> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("LMProgramEnergyExchange");

  private static final org.apache.thrift.protocol.TField _BASE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_baseMessage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField _MIN_NOTIFY_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_minNotifyTime", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _HEADING_FIELD_DESC = new org.apache.thrift.protocol.TField("_heading", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField _MESSAGE_HEADER_FIELD_DESC = new org.apache.thrift.protocol.TField("_messageHeader", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField _MESSAGE_FOOTER_FIELD_DESC = new org.apache.thrift.protocol.TField("_messageFooter", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField _CANCELED_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("_canceledMsg", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField _STOPPED_EARLY_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("_stoppedEarlyMsg", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField _LM_ENERGY_EXCHANGE_OFFERS_FIELD_DESC = new org.apache.thrift.protocol.TField("_lmEnergyExchangeOffers", org.apache.thrift.protocol.TType.LIST, (short)8);
  private static final org.apache.thrift.protocol.TField _LM_ENERGY_EXCHANGE_CUSTOMERS_FIELD_DESC = new org.apache.thrift.protocol.TField("_lmEnergyExchangeCustomers", org.apache.thrift.protocol.TType.LIST, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new LMProgramEnergyExchangeStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new LMProgramEnergyExchangeTupleSchemeFactory();

  private @org.apache.thrift.annotation.Nullable LMProgramBase _baseMessage; // required
  private int _minNotifyTime; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _heading; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _messageHeader; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _messageFooter; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _canceledMsg; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _stoppedEarlyMsg; // required
  private @org.apache.thrift.annotation.Nullable java.util.List<LMEnergyExchangeOffer> _lmEnergyExchangeOffers; // required
  private @org.apache.thrift.annotation.Nullable java.util.List<LMEnergyExchangeCustomer> _lmEnergyExchangeCustomers; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _BASE_MESSAGE((short)1, "_baseMessage"),
    _MIN_NOTIFY_TIME((short)2, "_minNotifyTime"),
    _HEADING((short)3, "_heading"),
    _MESSAGE_HEADER((short)4, "_messageHeader"),
    _MESSAGE_FOOTER((short)5, "_messageFooter"),
    _CANCELED_MSG((short)6, "_canceledMsg"),
    _STOPPED_EARLY_MSG((short)7, "_stoppedEarlyMsg"),
    _LM_ENERGY_EXCHANGE_OFFERS((short)8, "_lmEnergyExchangeOffers"),
    _LM_ENERGY_EXCHANGE_CUSTOMERS((short)9, "_lmEnergyExchangeCustomers");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _BASE_MESSAGE
          return _BASE_MESSAGE;
        case 2: // _MIN_NOTIFY_TIME
          return _MIN_NOTIFY_TIME;
        case 3: // _HEADING
          return _HEADING;
        case 4: // _MESSAGE_HEADER
          return _MESSAGE_HEADER;
        case 5: // _MESSAGE_FOOTER
          return _MESSAGE_FOOTER;
        case 6: // _CANCELED_MSG
          return _CANCELED_MSG;
        case 7: // _STOPPED_EARLY_MSG
          return _STOPPED_EARLY_MSG;
        case 8: // _LM_ENERGY_EXCHANGE_OFFERS
          return _LM_ENERGY_EXCHANGE_OFFERS;
        case 9: // _LM_ENERGY_EXCHANGE_CUSTOMERS
          return _LM_ENERGY_EXCHANGE_CUSTOMERS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___MINNOTIFYTIME_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._BASE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_baseMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LMProgramBase.class)));
    tmpMap.put(_Fields._MIN_NOTIFY_TIME, new org.apache.thrift.meta_data.FieldMetaData("_minNotifyTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._HEADING, new org.apache.thrift.meta_data.FieldMetaData("_heading", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._MESSAGE_HEADER, new org.apache.thrift.meta_data.FieldMetaData("_messageHeader", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._MESSAGE_FOOTER, new org.apache.thrift.meta_data.FieldMetaData("_messageFooter", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._CANCELED_MSG, new org.apache.thrift.meta_data.FieldMetaData("_canceledMsg", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._STOPPED_EARLY_MSG, new org.apache.thrift.meta_data.FieldMetaData("_stoppedEarlyMsg", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._LM_ENERGY_EXCHANGE_OFFERS, new org.apache.thrift.meta_data.FieldMetaData("_lmEnergyExchangeOffers", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LMEnergyExchangeOffer.class))));
    tmpMap.put(_Fields._LM_ENERGY_EXCHANGE_CUSTOMERS, new org.apache.thrift.meta_data.FieldMetaData("_lmEnergyExchangeCustomers", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LMEnergyExchangeCustomer.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(LMProgramEnergyExchange.class, metaDataMap);
  }

  public LMProgramEnergyExchange() {
  }

  public LMProgramEnergyExchange(
    LMProgramBase _baseMessage,
    int _minNotifyTime,
    java.lang.String _heading,
    java.lang.String _messageHeader,
    java.lang.String _messageFooter,
    java.lang.String _canceledMsg,
    java.lang.String _stoppedEarlyMsg,
    java.util.List<LMEnergyExchangeOffer> _lmEnergyExchangeOffers,
    java.util.List<LMEnergyExchangeCustomer> _lmEnergyExchangeCustomers)
  {
    this();
    this._baseMessage = _baseMessage;
    this._minNotifyTime = _minNotifyTime;
    set_minNotifyTimeIsSet(true);
    this._heading = _heading;
    this._messageHeader = _messageHeader;
    this._messageFooter = _messageFooter;
    this._canceledMsg = _canceledMsg;
    this._stoppedEarlyMsg = _stoppedEarlyMsg;
    this._lmEnergyExchangeOffers = _lmEnergyExchangeOffers;
    this._lmEnergyExchangeCustomers = _lmEnergyExchangeCustomers;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public LMProgramEnergyExchange(LMProgramEnergyExchange other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSet_baseMessage()) {
      this._baseMessage = new LMProgramBase(other._baseMessage);
    }
    this._minNotifyTime = other._minNotifyTime;
    if (other.isSet_heading()) {
      this._heading = other._heading;
    }
    if (other.isSet_messageHeader()) {
      this._messageHeader = other._messageHeader;
    }
    if (other.isSet_messageFooter()) {
      this._messageFooter = other._messageFooter;
    }
    if (other.isSet_canceledMsg()) {
      this._canceledMsg = other._canceledMsg;
    }
    if (other.isSet_stoppedEarlyMsg()) {
      this._stoppedEarlyMsg = other._stoppedEarlyMsg;
    }
    if (other.isSet_lmEnergyExchangeOffers()) {
      java.util.List<LMEnergyExchangeOffer> __this___lmEnergyExchangeOffers = new java.util.ArrayList<LMEnergyExchangeOffer>(other._lmEnergyExchangeOffers.size());
      for (LMEnergyExchangeOffer other_element : other._lmEnergyExchangeOffers) {
        __this___lmEnergyExchangeOffers.add(new LMEnergyExchangeOffer(other_element));
      }
      this._lmEnergyExchangeOffers = __this___lmEnergyExchangeOffers;
    }
    if (other.isSet_lmEnergyExchangeCustomers()) {
      java.util.List<LMEnergyExchangeCustomer> __this___lmEnergyExchangeCustomers = new java.util.ArrayList<LMEnergyExchangeCustomer>(other._lmEnergyExchangeCustomers.size());
      for (LMEnergyExchangeCustomer other_element : other._lmEnergyExchangeCustomers) {
        __this___lmEnergyExchangeCustomers.add(new LMEnergyExchangeCustomer(other_element));
      }
      this._lmEnergyExchangeCustomers = __this___lmEnergyExchangeCustomers;
    }
  }

  public LMProgramEnergyExchange deepCopy() {
    return new LMProgramEnergyExchange(this);
  }

  @Override
  public void clear() {
    this._baseMessage = null;
    set_minNotifyTimeIsSet(false);
    this._minNotifyTime = 0;
    this._heading = null;
    this._messageHeader = null;
    this._messageFooter = null;
    this._canceledMsg = null;
    this._stoppedEarlyMsg = null;
    this._lmEnergyExchangeOffers = null;
    this._lmEnergyExchangeCustomers = null;
  }

  @org.apache.thrift.annotation.Nullable
  public LMProgramBase get_baseMessage() {
    return this._baseMessage;
  }

  public void set_baseMessage(@org.apache.thrift.annotation.Nullable LMProgramBase _baseMessage) {
    this._baseMessage = _baseMessage;
  }

  public void unset_baseMessage() {
    this._baseMessage = null;
  }

  /** Returns true if field _baseMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_baseMessage() {
    return this._baseMessage != null;
  }

  public void set_baseMessageIsSet(boolean value) {
    if (!value) {
      this._baseMessage = null;
    }
  }

  public int get_minNotifyTime() {
    return this._minNotifyTime;
  }

  public void set_minNotifyTime(int _minNotifyTime) {
    this._minNotifyTime = _minNotifyTime;
    set_minNotifyTimeIsSet(true);
  }

  public void unset_minNotifyTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___MINNOTIFYTIME_ISSET_ID);
  }

  /** Returns true if field _minNotifyTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_minNotifyTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___MINNOTIFYTIME_ISSET_ID);
  }

  public void set_minNotifyTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___MINNOTIFYTIME_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_heading() {
    return this._heading;
  }

  public void set_heading(@org.apache.thrift.annotation.Nullable java.lang.String _heading) {
    this._heading = _heading;
  }

  public void unset_heading() {
    this._heading = null;
  }

  /** Returns true if field _heading is set (has been assigned a value) and false otherwise */
  public boolean isSet_heading() {
    return this._heading != null;
  }

  public void set_headingIsSet(boolean value) {
    if (!value) {
      this._heading = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_messageHeader() {
    return this._messageHeader;
  }

  public void set_messageHeader(@org.apache.thrift.annotation.Nullable java.lang.String _messageHeader) {
    this._messageHeader = _messageHeader;
  }

  public void unset_messageHeader() {
    this._messageHeader = null;
  }

  /** Returns true if field _messageHeader is set (has been assigned a value) and false otherwise */
  public boolean isSet_messageHeader() {
    return this._messageHeader != null;
  }

  public void set_messageHeaderIsSet(boolean value) {
    if (!value) {
      this._messageHeader = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_messageFooter() {
    return this._messageFooter;
  }

  public void set_messageFooter(@org.apache.thrift.annotation.Nullable java.lang.String _messageFooter) {
    this._messageFooter = _messageFooter;
  }

  public void unset_messageFooter() {
    this._messageFooter = null;
  }

  /** Returns true if field _messageFooter is set (has been assigned a value) and false otherwise */
  public boolean isSet_messageFooter() {
    return this._messageFooter != null;
  }

  public void set_messageFooterIsSet(boolean value) {
    if (!value) {
      this._messageFooter = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_canceledMsg() {
    return this._canceledMsg;
  }

  public void set_canceledMsg(@org.apache.thrift.annotation.Nullable java.lang.String _canceledMsg) {
    this._canceledMsg = _canceledMsg;
  }

  public void unset_canceledMsg() {
    this._canceledMsg = null;
  }

  /** Returns true if field _canceledMsg is set (has been assigned a value) and false otherwise */
  public boolean isSet_canceledMsg() {
    return this._canceledMsg != null;
  }

  public void set_canceledMsgIsSet(boolean value) {
    if (!value) {
      this._canceledMsg = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_stoppedEarlyMsg() {
    return this._stoppedEarlyMsg;
  }

  public void set_stoppedEarlyMsg(@org.apache.thrift.annotation.Nullable java.lang.String _stoppedEarlyMsg) {
    this._stoppedEarlyMsg = _stoppedEarlyMsg;
  }

  public void unset_stoppedEarlyMsg() {
    this._stoppedEarlyMsg = null;
  }

  /** Returns true if field _stoppedEarlyMsg is set (has been assigned a value) and false otherwise */
  public boolean isSet_stoppedEarlyMsg() {
    return this._stoppedEarlyMsg != null;
  }

  public void set_stoppedEarlyMsgIsSet(boolean value) {
    if (!value) {
      this._stoppedEarlyMsg = null;
    }
  }

  public int get_lmEnergyExchangeOffersSize() {
    return (this._lmEnergyExchangeOffers == null) ? 0 : this._lmEnergyExchangeOffers.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<LMEnergyExchangeOffer> get_lmEnergyExchangeOffersIterator() {
    return (this._lmEnergyExchangeOffers == null) ? null : this._lmEnergyExchangeOffers.iterator();
  }

  public void addTo_lmEnergyExchangeOffers(LMEnergyExchangeOffer elem) {
    if (this._lmEnergyExchangeOffers == null) {
      this._lmEnergyExchangeOffers = new java.util.ArrayList<LMEnergyExchangeOffer>();
    }
    this._lmEnergyExchangeOffers.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<LMEnergyExchangeOffer> get_lmEnergyExchangeOffers() {
    return this._lmEnergyExchangeOffers;
  }

  public void set_lmEnergyExchangeOffers(@org.apache.thrift.annotation.Nullable java.util.List<LMEnergyExchangeOffer> _lmEnergyExchangeOffers) {
    this._lmEnergyExchangeOffers = _lmEnergyExchangeOffers;
  }

  public void unset_lmEnergyExchangeOffers() {
    this._lmEnergyExchangeOffers = null;
  }

  /** Returns true if field _lmEnergyExchangeOffers is set (has been assigned a value) and false otherwise */
  public boolean isSet_lmEnergyExchangeOffers() {
    return this._lmEnergyExchangeOffers != null;
  }

  public void set_lmEnergyExchangeOffersIsSet(boolean value) {
    if (!value) {
      this._lmEnergyExchangeOffers = null;
    }
  }

  public int get_lmEnergyExchangeCustomersSize() {
    return (this._lmEnergyExchangeCustomers == null) ? 0 : this._lmEnergyExchangeCustomers.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<LMEnergyExchangeCustomer> get_lmEnergyExchangeCustomersIterator() {
    return (this._lmEnergyExchangeCustomers == null) ? null : this._lmEnergyExchangeCustomers.iterator();
  }

  public void addTo_lmEnergyExchangeCustomers(LMEnergyExchangeCustomer elem) {
    if (this._lmEnergyExchangeCustomers == null) {
      this._lmEnergyExchangeCustomers = new java.util.ArrayList<LMEnergyExchangeCustomer>();
    }
    this._lmEnergyExchangeCustomers.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<LMEnergyExchangeCustomer> get_lmEnergyExchangeCustomers() {
    return this._lmEnergyExchangeCustomers;
  }

  public void set_lmEnergyExchangeCustomers(@org.apache.thrift.annotation.Nullable java.util.List<LMEnergyExchangeCustomer> _lmEnergyExchangeCustomers) {
    this._lmEnergyExchangeCustomers = _lmEnergyExchangeCustomers;
  }

  public void unset_lmEnergyExchangeCustomers() {
    this._lmEnergyExchangeCustomers = null;
  }

  /** Returns true if field _lmEnergyExchangeCustomers is set (has been assigned a value) and false otherwise */
  public boolean isSet_lmEnergyExchangeCustomers() {
    return this._lmEnergyExchangeCustomers != null;
  }

  public void set_lmEnergyExchangeCustomersIsSet(boolean value) {
    if (!value) {
      this._lmEnergyExchangeCustomers = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case _BASE_MESSAGE:
      if (value == null) {
        unset_baseMessage();
      } else {
        set_baseMessage((LMProgramBase)value);
      }
      break;

    case _MIN_NOTIFY_TIME:
      if (value == null) {
        unset_minNotifyTime();
      } else {
        set_minNotifyTime((java.lang.Integer)value);
      }
      break;

    case _HEADING:
      if (value == null) {
        unset_heading();
      } else {
        set_heading((java.lang.String)value);
      }
      break;

    case _MESSAGE_HEADER:
      if (value == null) {
        unset_messageHeader();
      } else {
        set_messageHeader((java.lang.String)value);
      }
      break;

    case _MESSAGE_FOOTER:
      if (value == null) {
        unset_messageFooter();
      } else {
        set_messageFooter((java.lang.String)value);
      }
      break;

    case _CANCELED_MSG:
      if (value == null) {
        unset_canceledMsg();
      } else {
        set_canceledMsg((java.lang.String)value);
      }
      break;

    case _STOPPED_EARLY_MSG:
      if (value == null) {
        unset_stoppedEarlyMsg();
      } else {
        set_stoppedEarlyMsg((java.lang.String)value);
      }
      break;

    case _LM_ENERGY_EXCHANGE_OFFERS:
      if (value == null) {
        unset_lmEnergyExchangeOffers();
      } else {
        set_lmEnergyExchangeOffers((java.util.List<LMEnergyExchangeOffer>)value);
      }
      break;

    case _LM_ENERGY_EXCHANGE_CUSTOMERS:
      if (value == null) {
        unset_lmEnergyExchangeCustomers();
      } else {
        set_lmEnergyExchangeCustomers((java.util.List<LMEnergyExchangeCustomer>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _BASE_MESSAGE:
      return get_baseMessage();

    case _MIN_NOTIFY_TIME:
      return get_minNotifyTime();

    case _HEADING:
      return get_heading();

    case _MESSAGE_HEADER:
      return get_messageHeader();

    case _MESSAGE_FOOTER:
      return get_messageFooter();

    case _CANCELED_MSG:
      return get_canceledMsg();

    case _STOPPED_EARLY_MSG:
      return get_stoppedEarlyMsg();

    case _LM_ENERGY_EXCHANGE_OFFERS:
      return get_lmEnergyExchangeOffers();

    case _LM_ENERGY_EXCHANGE_CUSTOMERS:
      return get_lmEnergyExchangeCustomers();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _BASE_MESSAGE:
      return isSet_baseMessage();
    case _MIN_NOTIFY_TIME:
      return isSet_minNotifyTime();
    case _HEADING:
      return isSet_heading();
    case _MESSAGE_HEADER:
      return isSet_messageHeader();
    case _MESSAGE_FOOTER:
      return isSet_messageFooter();
    case _CANCELED_MSG:
      return isSet_canceledMsg();
    case _STOPPED_EARLY_MSG:
      return isSet_stoppedEarlyMsg();
    case _LM_ENERGY_EXCHANGE_OFFERS:
      return isSet_lmEnergyExchangeOffers();
    case _LM_ENERGY_EXCHANGE_CUSTOMERS:
      return isSet_lmEnergyExchangeCustomers();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof LMProgramEnergyExchange)
      return this.equals((LMProgramEnergyExchange)that);
    return false;
  }

  public boolean equals(LMProgramEnergyExchange that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__baseMessage = true && this.isSet_baseMessage();
    boolean that_present__baseMessage = true && that.isSet_baseMessage();
    if (this_present__baseMessage || that_present__baseMessage) {
      if (!(this_present__baseMessage && that_present__baseMessage))
        return false;
      if (!this._baseMessage.equals(that._baseMessage))
        return false;
    }

    boolean this_present__minNotifyTime = true;
    boolean that_present__minNotifyTime = true;
    if (this_present__minNotifyTime || that_present__minNotifyTime) {
      if (!(this_present__minNotifyTime && that_present__minNotifyTime))
        return false;
      if (this._minNotifyTime != that._minNotifyTime)
        return false;
    }

    boolean this_present__heading = true && this.isSet_heading();
    boolean that_present__heading = true && that.isSet_heading();
    if (this_present__heading || that_present__heading) {
      if (!(this_present__heading && that_present__heading))
        return false;
      if (!this._heading.equals(that._heading))
        return false;
    }

    boolean this_present__messageHeader = true && this.isSet_messageHeader();
    boolean that_present__messageHeader = true && that.isSet_messageHeader();
    if (this_present__messageHeader || that_present__messageHeader) {
      if (!(this_present__messageHeader && that_present__messageHeader))
        return false;
      if (!this._messageHeader.equals(that._messageHeader))
        return false;
    }

    boolean this_present__messageFooter = true && this.isSet_messageFooter();
    boolean that_present__messageFooter = true && that.isSet_messageFooter();
    if (this_present__messageFooter || that_present__messageFooter) {
      if (!(this_present__messageFooter && that_present__messageFooter))
        return false;
      if (!this._messageFooter.equals(that._messageFooter))
        return false;
    }

    boolean this_present__canceledMsg = true && this.isSet_canceledMsg();
    boolean that_present__canceledMsg = true && that.isSet_canceledMsg();
    if (this_present__canceledMsg || that_present__canceledMsg) {
      if (!(this_present__canceledMsg && that_present__canceledMsg))
        return false;
      if (!this._canceledMsg.equals(that._canceledMsg))
        return false;
    }

    boolean this_present__stoppedEarlyMsg = true && this.isSet_stoppedEarlyMsg();
    boolean that_present__stoppedEarlyMsg = true && that.isSet_stoppedEarlyMsg();
    if (this_present__stoppedEarlyMsg || that_present__stoppedEarlyMsg) {
      if (!(this_present__stoppedEarlyMsg && that_present__stoppedEarlyMsg))
        return false;
      if (!this._stoppedEarlyMsg.equals(that._stoppedEarlyMsg))
        return false;
    }

    boolean this_present__lmEnergyExchangeOffers = true && this.isSet_lmEnergyExchangeOffers();
    boolean that_present__lmEnergyExchangeOffers = true && that.isSet_lmEnergyExchangeOffers();
    if (this_present__lmEnergyExchangeOffers || that_present__lmEnergyExchangeOffers) {
      if (!(this_present__lmEnergyExchangeOffers && that_present__lmEnergyExchangeOffers))
        return false;
      if (!this._lmEnergyExchangeOffers.equals(that._lmEnergyExchangeOffers))
        return false;
    }

    boolean this_present__lmEnergyExchangeCustomers = true && this.isSet_lmEnergyExchangeCustomers();
    boolean that_present__lmEnergyExchangeCustomers = true && that.isSet_lmEnergyExchangeCustomers();
    if (this_present__lmEnergyExchangeCustomers || that_present__lmEnergyExchangeCustomers) {
      if (!(this_present__lmEnergyExchangeCustomers && that_present__lmEnergyExchangeCustomers))
        return false;
      if (!this._lmEnergyExchangeCustomers.equals(that._lmEnergyExchangeCustomers))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSet_baseMessage()) ? 131071 : 524287);
    if (isSet_baseMessage())
      hashCode = hashCode * 8191 + _baseMessage.hashCode();

    hashCode = hashCode * 8191 + _minNotifyTime;

    hashCode = hashCode * 8191 + ((isSet_heading()) ? 131071 : 524287);
    if (isSet_heading())
      hashCode = hashCode * 8191 + _heading.hashCode();

    hashCode = hashCode * 8191 + ((isSet_messageHeader()) ? 131071 : 524287);
    if (isSet_messageHeader())
      hashCode = hashCode * 8191 + _messageHeader.hashCode();

    hashCode = hashCode * 8191 + ((isSet_messageFooter()) ? 131071 : 524287);
    if (isSet_messageFooter())
      hashCode = hashCode * 8191 + _messageFooter.hashCode();

    hashCode = hashCode * 8191 + ((isSet_canceledMsg()) ? 131071 : 524287);
    if (isSet_canceledMsg())
      hashCode = hashCode * 8191 + _canceledMsg.hashCode();

    hashCode = hashCode * 8191 + ((isSet_stoppedEarlyMsg()) ? 131071 : 524287);
    if (isSet_stoppedEarlyMsg())
      hashCode = hashCode * 8191 + _stoppedEarlyMsg.hashCode();

    hashCode = hashCode * 8191 + ((isSet_lmEnergyExchangeOffers()) ? 131071 : 524287);
    if (isSet_lmEnergyExchangeOffers())
      hashCode = hashCode * 8191 + _lmEnergyExchangeOffers.hashCode();

    hashCode = hashCode * 8191 + ((isSet_lmEnergyExchangeCustomers()) ? 131071 : 524287);
    if (isSet_lmEnergyExchangeCustomers())
      hashCode = hashCode * 8191 + _lmEnergyExchangeCustomers.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(LMProgramEnergyExchange other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSet_baseMessage()).compareTo(other.isSet_baseMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_baseMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._baseMessage, other._baseMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_minNotifyTime()).compareTo(other.isSet_minNotifyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_minNotifyTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._minNotifyTime, other._minNotifyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_heading()).compareTo(other.isSet_heading());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_heading()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._heading, other._heading);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_messageHeader()).compareTo(other.isSet_messageHeader());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_messageHeader()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._messageHeader, other._messageHeader);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_messageFooter()).compareTo(other.isSet_messageFooter());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_messageFooter()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._messageFooter, other._messageFooter);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_canceledMsg()).compareTo(other.isSet_canceledMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_canceledMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._canceledMsg, other._canceledMsg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_stoppedEarlyMsg()).compareTo(other.isSet_stoppedEarlyMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_stoppedEarlyMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._stoppedEarlyMsg, other._stoppedEarlyMsg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_lmEnergyExchangeOffers()).compareTo(other.isSet_lmEnergyExchangeOffers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lmEnergyExchangeOffers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lmEnergyExchangeOffers, other._lmEnergyExchangeOffers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_lmEnergyExchangeCustomers()).compareTo(other.isSet_lmEnergyExchangeCustomers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lmEnergyExchangeCustomers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lmEnergyExchangeCustomers, other._lmEnergyExchangeCustomers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("LMProgramEnergyExchange(");
    boolean first = true;

    sb.append("_baseMessage:");
    if (this._baseMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._baseMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_minNotifyTime:");
    sb.append(this._minNotifyTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_heading:");
    if (this._heading == null) {
      sb.append("null");
    } else {
      sb.append(this._heading);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_messageHeader:");
    if (this._messageHeader == null) {
      sb.append("null");
    } else {
      sb.append(this._messageHeader);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_messageFooter:");
    if (this._messageFooter == null) {
      sb.append("null");
    } else {
      sb.append(this._messageFooter);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_canceledMsg:");
    if (this._canceledMsg == null) {
      sb.append("null");
    } else {
      sb.append(this._canceledMsg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_stoppedEarlyMsg:");
    if (this._stoppedEarlyMsg == null) {
      sb.append("null");
    } else {
      sb.append(this._stoppedEarlyMsg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lmEnergyExchangeOffers:");
    if (this._lmEnergyExchangeOffers == null) {
      sb.append("null");
    } else {
      sb.append(this._lmEnergyExchangeOffers);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lmEnergyExchangeCustomers:");
    if (this._lmEnergyExchangeCustomers == null) {
      sb.append("null");
    } else {
      sb.append(this._lmEnergyExchangeCustomers);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_baseMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_baseMessage' is unset! Struct:" + toString());
    }

    if (!isSet_minNotifyTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_minNotifyTime' is unset! Struct:" + toString());
    }

    if (!isSet_heading()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_heading' is unset! Struct:" + toString());
    }

    if (!isSet_messageHeader()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_messageHeader' is unset! Struct:" + toString());
    }

    if (!isSet_messageFooter()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_messageFooter' is unset! Struct:" + toString());
    }

    if (!isSet_canceledMsg()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_canceledMsg' is unset! Struct:" + toString());
    }

    if (!isSet_stoppedEarlyMsg()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_stoppedEarlyMsg' is unset! Struct:" + toString());
    }

    if (!isSet_lmEnergyExchangeOffers()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lmEnergyExchangeOffers' is unset! Struct:" + toString());
    }

    if (!isSet_lmEnergyExchangeCustomers()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lmEnergyExchangeCustomers' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (_baseMessage != null) {
      _baseMessage.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class LMProgramEnergyExchangeStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMProgramEnergyExchangeStandardScheme getScheme() {
      return new LMProgramEnergyExchangeStandardScheme();
    }
  }

  private static class LMProgramEnergyExchangeStandardScheme extends org.apache.thrift.scheme.StandardScheme<LMProgramEnergyExchange> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, LMProgramEnergyExchange struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _BASE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct._baseMessage = new LMProgramBase();
              struct._baseMessage.read(iprot);
              struct.set_baseMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _MIN_NOTIFY_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._minNotifyTime = iprot.readI32();
              struct.set_minNotifyTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _HEADING
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._heading = iprot.readString();
              struct.set_headingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _MESSAGE_HEADER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._messageHeader = iprot.readString();
              struct.set_messageHeaderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _MESSAGE_FOOTER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._messageFooter = iprot.readString();
              struct.set_messageFooterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // _CANCELED_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._canceledMsg = iprot.readString();
              struct.set_canceledMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // _STOPPED_EARLY_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._stoppedEarlyMsg = iprot.readString();
              struct.set_stoppedEarlyMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // _LM_ENERGY_EXCHANGE_OFFERS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list80 = iprot.readListBegin();
                struct._lmEnergyExchangeOffers = new java.util.ArrayList<LMEnergyExchangeOffer>(_list80.size);
                @org.apache.thrift.annotation.Nullable LMEnergyExchangeOffer _elem81;
                for (int _i82 = 0; _i82 < _list80.size; ++_i82)
                {
                  _elem81 = new LMEnergyExchangeOffer();
                  _elem81.read(iprot);
                  struct._lmEnergyExchangeOffers.add(_elem81);
                }
                iprot.readListEnd();
              }
              struct.set_lmEnergyExchangeOffersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // _LM_ENERGY_EXCHANGE_CUSTOMERS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list83 = iprot.readListBegin();
                struct._lmEnergyExchangeCustomers = new java.util.ArrayList<LMEnergyExchangeCustomer>(_list83.size);
                @org.apache.thrift.annotation.Nullable LMEnergyExchangeCustomer _elem84;
                for (int _i85 = 0; _i85 < _list83.size; ++_i85)
                {
                  _elem84 = new LMEnergyExchangeCustomer();
                  _elem84.read(iprot);
                  struct._lmEnergyExchangeCustomers.add(_elem84);
                }
                iprot.readListEnd();
              }
              struct.set_lmEnergyExchangeCustomersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, LMProgramEnergyExchange struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct._baseMessage != null) {
        oprot.writeFieldBegin(_BASE_MESSAGE_FIELD_DESC);
        struct._baseMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_MIN_NOTIFY_TIME_FIELD_DESC);
      oprot.writeI32(struct._minNotifyTime);
      oprot.writeFieldEnd();
      if (struct._heading != null) {
        oprot.writeFieldBegin(_HEADING_FIELD_DESC);
        oprot.writeString(struct._heading);
        oprot.writeFieldEnd();
      }
      if (struct._messageHeader != null) {
        oprot.writeFieldBegin(_MESSAGE_HEADER_FIELD_DESC);
        oprot.writeString(struct._messageHeader);
        oprot.writeFieldEnd();
      }
      if (struct._messageFooter != null) {
        oprot.writeFieldBegin(_MESSAGE_FOOTER_FIELD_DESC);
        oprot.writeString(struct._messageFooter);
        oprot.writeFieldEnd();
      }
      if (struct._canceledMsg != null) {
        oprot.writeFieldBegin(_CANCELED_MSG_FIELD_DESC);
        oprot.writeString(struct._canceledMsg);
        oprot.writeFieldEnd();
      }
      if (struct._stoppedEarlyMsg != null) {
        oprot.writeFieldBegin(_STOPPED_EARLY_MSG_FIELD_DESC);
        oprot.writeString(struct._stoppedEarlyMsg);
        oprot.writeFieldEnd();
      }
      if (struct._lmEnergyExchangeOffers != null) {
        oprot.writeFieldBegin(_LM_ENERGY_EXCHANGE_OFFERS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct._lmEnergyExchangeOffers.size()));
          for (LMEnergyExchangeOffer _iter86 : struct._lmEnergyExchangeOffers)
          {
            _iter86.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct._lmEnergyExchangeCustomers != null) {
        oprot.writeFieldBegin(_LM_ENERGY_EXCHANGE_CUSTOMERS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct._lmEnergyExchangeCustomers.size()));
          for (LMEnergyExchangeCustomer _iter87 : struct._lmEnergyExchangeCustomers)
          {
            _iter87.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class LMProgramEnergyExchangeTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMProgramEnergyExchangeTupleScheme getScheme() {
      return new LMProgramEnergyExchangeTupleScheme();
    }
  }

  private static class LMProgramEnergyExchangeTupleScheme extends org.apache.thrift.scheme.TupleScheme<LMProgramEnergyExchange> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, LMProgramEnergyExchange struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage.write(oprot);
      oprot.writeI32(struct._minNotifyTime);
      oprot.writeString(struct._heading);
      oprot.writeString(struct._messageHeader);
      oprot.writeString(struct._messageFooter);
      oprot.writeString(struct._canceledMsg);
      oprot.writeString(struct._stoppedEarlyMsg);
      {
        oprot.writeI32(struct._lmEnergyExchangeOffers.size());
        for (LMEnergyExchangeOffer _iter88 : struct._lmEnergyExchangeOffers)
        {
          _iter88.write(oprot);
        }
      }
      {
        oprot.writeI32(struct._lmEnergyExchangeCustomers.size());
        for (LMEnergyExchangeCustomer _iter89 : struct._lmEnergyExchangeCustomers)
        {
          _iter89.write(oprot);
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, LMProgramEnergyExchange struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage = new LMProgramBase();
      struct._baseMessage.read(iprot);
      struct.set_baseMessageIsSet(true);
      struct._minNotifyTime = iprot.readI32();
      struct.set_minNotifyTimeIsSet(true);
      struct._heading = iprot.readString();
      struct.set_headingIsSet(true);
      struct._messageHeader = iprot.readString();
      struct.set_messageHeaderIsSet(true);
      struct._messageFooter = iprot.readString();
      struct.set_messageFooterIsSet(true);
      struct._canceledMsg = iprot.readString();
      struct.set_canceledMsgIsSet(true);
      struct._stoppedEarlyMsg = iprot.readString();
      struct.set_stoppedEarlyMsgIsSet(true);
      {
        org.apache.thrift.protocol.TList _list90 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct._lmEnergyExchangeOffers = new java.util.ArrayList<LMEnergyExchangeOffer>(_list90.size);
        @org.apache.thrift.annotation.Nullable LMEnergyExchangeOffer _elem91;
        for (int _i92 = 0; _i92 < _list90.size; ++_i92)
        {
          _elem91 = new LMEnergyExchangeOffer();
          _elem91.read(iprot);
          struct._lmEnergyExchangeOffers.add(_elem91);
        }
      }
      struct.set_lmEnergyExchangeOffersIsSet(true);
      {
        org.apache.thrift.protocol.TList _list93 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct._lmEnergyExchangeCustomers = new java.util.ArrayList<LMEnergyExchangeCustomer>(_list93.size);
        @org.apache.thrift.annotation.Nullable LMEnergyExchangeCustomer _elem94;
        for (int _i95 = 0; _i95 < _list93.size; ++_i95)
        {
          _elem94 = new LMEnergyExchangeCustomer();
          _elem94.read(iprot);
          struct._lmEnergyExchangeCustomers.add(_elem94);
        }
      }
      struct.set_lmEnergyExchangeCustomersIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

