/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2021-06-15")
public class LMEcobeeRestore implements org.apache.thrift.TBase<LMEcobeeRestore, LMEcobeeRestore._Fields>, java.io.Serializable, Cloneable, Comparable<LMEcobeeRestore> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("LMEcobeeRestore");

  private static final org.apache.thrift.protocol.TField _GROUP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_groupId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField _RESTORE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_restoreTime", org.apache.thrift.protocol.TType.I64, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new LMEcobeeRestoreStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new LMEcobeeRestoreTupleSchemeFactory();

  private int _groupId; // required
  private long _restoreTime; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _GROUP_ID((short)1, "_groupId"),
    _RESTORE_TIME((short)2, "_restoreTime");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _GROUP_ID
          return _GROUP_ID;
        case 2: // _RESTORE_TIME
          return _RESTORE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___GROUPID_ISSET_ID = 0;
  private static final int ___RESTORETIME_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._GROUP_ID, new org.apache.thrift.meta_data.FieldMetaData("_groupId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._RESTORE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_restoreTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(LMEcobeeRestore.class, metaDataMap);
  }

  public LMEcobeeRestore() {
  }

  public LMEcobeeRestore(
    int _groupId,
    long _restoreTime)
  {
    this();
    this._groupId = _groupId;
    set_groupIdIsSet(true);
    this._restoreTime = _restoreTime;
    set_restoreTimeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public LMEcobeeRestore(LMEcobeeRestore other) {
    __isset_bitfield = other.__isset_bitfield;
    this._groupId = other._groupId;
    this._restoreTime = other._restoreTime;
  }

  public LMEcobeeRestore deepCopy() {
    return new LMEcobeeRestore(this);
  }

  @Override
  public void clear() {
    set_groupIdIsSet(false);
    this._groupId = 0;
    set_restoreTimeIsSet(false);
    this._restoreTime = 0;
  }

  public int get_groupId() {
    return this._groupId;
  }

  public void set_groupId(int _groupId) {
    this._groupId = _groupId;
    set_groupIdIsSet(true);
  }

  public void unset_groupId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___GROUPID_ISSET_ID);
  }

  /** Returns true if field _groupId is set (has been assigned a value) and false otherwise */
  public boolean isSet_groupId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___GROUPID_ISSET_ID);
  }

  public void set_groupIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___GROUPID_ISSET_ID, value);
  }

  public long get_restoreTime() {
    return this._restoreTime;
  }

  public void set_restoreTime(long _restoreTime) {
    this._restoreTime = _restoreTime;
    set_restoreTimeIsSet(true);
  }

  public void unset_restoreTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___RESTORETIME_ISSET_ID);
  }

  /** Returns true if field _restoreTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_restoreTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___RESTORETIME_ISSET_ID);
  }

  public void set_restoreTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___RESTORETIME_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case _GROUP_ID:
      if (value == null) {
        unset_groupId();
      } else {
        set_groupId((java.lang.Integer)value);
      }
      break;

    case _RESTORE_TIME:
      if (value == null) {
        unset_restoreTime();
      } else {
        set_restoreTime((java.lang.Long)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _GROUP_ID:
      return get_groupId();

    case _RESTORE_TIME:
      return get_restoreTime();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _GROUP_ID:
      return isSet_groupId();
    case _RESTORE_TIME:
      return isSet_restoreTime();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof LMEcobeeRestore)
      return this.equals((LMEcobeeRestore)that);
    return false;
  }

  public boolean equals(LMEcobeeRestore that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__groupId = true;
    boolean that_present__groupId = true;
    if (this_present__groupId || that_present__groupId) {
      if (!(this_present__groupId && that_present__groupId))
        return false;
      if (this._groupId != that._groupId)
        return false;
    }

    boolean this_present__restoreTime = true;
    boolean that_present__restoreTime = true;
    if (this_present__restoreTime || that_present__restoreTime) {
      if (!(this_present__restoreTime && that_present__restoreTime))
        return false;
      if (this._restoreTime != that._restoreTime)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + _groupId;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_restoreTime);

    return hashCode;
  }

  @Override
  public int compareTo(LMEcobeeRestore other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSet_groupId()).compareTo(other.isSet_groupId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_groupId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._groupId, other._groupId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_restoreTime()).compareTo(other.isSet_restoreTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_restoreTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._restoreTime, other._restoreTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("LMEcobeeRestore(");
    boolean first = true;

    sb.append("_groupId:");
    sb.append(this._groupId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_restoreTime:");
    sb.append(this._restoreTime);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_groupId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_groupId' is unset! Struct:" + toString());
    }

    if (!isSet_restoreTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_restoreTime' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class LMEcobeeRestoreStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMEcobeeRestoreStandardScheme getScheme() {
      return new LMEcobeeRestoreStandardScheme();
    }
  }

  private static class LMEcobeeRestoreStandardScheme extends org.apache.thrift.scheme.StandardScheme<LMEcobeeRestore> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, LMEcobeeRestore struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _GROUP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._groupId = iprot.readI32();
              struct.set_groupIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _RESTORE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._restoreTime = iprot.readI64();
              struct.set_restoreTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, LMEcobeeRestore struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(_GROUP_ID_FIELD_DESC);
      oprot.writeI32(struct._groupId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_RESTORE_TIME_FIELD_DESC);
      oprot.writeI64(struct._restoreTime);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class LMEcobeeRestoreTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMEcobeeRestoreTupleScheme getScheme() {
      return new LMEcobeeRestoreTupleScheme();
    }
  }

  private static class LMEcobeeRestoreTupleScheme extends org.apache.thrift.scheme.TupleScheme<LMEcobeeRestore> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, LMEcobeeRestore struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct._groupId);
      oprot.writeI64(struct._restoreTime);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, LMEcobeeRestore struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._groupId = iprot.readI32();
      struct.set_groupIdIsSet(true);
      struct._restoreTime = iprot.readI64();
      struct.set_restoreTimeIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

