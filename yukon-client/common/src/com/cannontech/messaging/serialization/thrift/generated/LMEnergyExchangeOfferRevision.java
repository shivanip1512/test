/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-09-24")
public class LMEnergyExchangeOfferRevision implements org.apache.thrift.TBase<LMEnergyExchangeOfferRevision, LMEnergyExchangeOfferRevision._Fields>, java.io.Serializable, Cloneable, Comparable<LMEnergyExchangeOfferRevision> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("LMEnergyExchangeOfferRevision");

  private static final org.apache.thrift.protocol.TField _OFFER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_offerId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField _REVISION_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("_revisionNumber", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _ACTION_DATETIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_actionDatetime", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField _NOTIFICATION_DATETIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_notificationDatetime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField _OFFEREXPIRATION_DATETIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_offerexpirationDatetime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField _ADDITIONAL_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("_additionalInfo", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField _LM_ENERGY_EXCHANGE_HOURLY_OFFERS_FIELD_DESC = new org.apache.thrift.protocol.TField("_lmEnergyExchangeHourlyOffers", org.apache.thrift.protocol.TType.LIST, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new LMEnergyExchangeOfferRevisionStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new LMEnergyExchangeOfferRevisionTupleSchemeFactory();

  private int _offerId; // required
  private int _revisionNumber; // required
  private long _actionDatetime; // required
  private long _notificationDatetime; // required
  private long _offerexpirationDatetime; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _additionalInfo; // required
  private @org.apache.thrift.annotation.Nullable java.util.List<LMEnergyExchangeHourlyOffer> _lmEnergyExchangeHourlyOffers; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _OFFER_ID((short)1, "_offerId"),
    _REVISION_NUMBER((short)2, "_revisionNumber"),
    _ACTION_DATETIME((short)3, "_actionDatetime"),
    _NOTIFICATION_DATETIME((short)4, "_notificationDatetime"),
    _OFFEREXPIRATION_DATETIME((short)5, "_offerexpirationDatetime"),
    _ADDITIONAL_INFO((short)6, "_additionalInfo"),
    _LM_ENERGY_EXCHANGE_HOURLY_OFFERS((short)7, "_lmEnergyExchangeHourlyOffers");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _OFFER_ID
          return _OFFER_ID;
        case 2: // _REVISION_NUMBER
          return _REVISION_NUMBER;
        case 3: // _ACTION_DATETIME
          return _ACTION_DATETIME;
        case 4: // _NOTIFICATION_DATETIME
          return _NOTIFICATION_DATETIME;
        case 5: // _OFFEREXPIRATION_DATETIME
          return _OFFEREXPIRATION_DATETIME;
        case 6: // _ADDITIONAL_INFO
          return _ADDITIONAL_INFO;
        case 7: // _LM_ENERGY_EXCHANGE_HOURLY_OFFERS
          return _LM_ENERGY_EXCHANGE_HOURLY_OFFERS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___OFFERID_ISSET_ID = 0;
  private static final int ___REVISIONNUMBER_ISSET_ID = 1;
  private static final int ___ACTIONDATETIME_ISSET_ID = 2;
  private static final int ___NOTIFICATIONDATETIME_ISSET_ID = 3;
  private static final int ___OFFEREXPIRATIONDATETIME_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._OFFER_ID, new org.apache.thrift.meta_data.FieldMetaData("_offerId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._REVISION_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("_revisionNumber", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._ACTION_DATETIME, new org.apache.thrift.meta_data.FieldMetaData("_actionDatetime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._NOTIFICATION_DATETIME, new org.apache.thrift.meta_data.FieldMetaData("_notificationDatetime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._OFFEREXPIRATION_DATETIME, new org.apache.thrift.meta_data.FieldMetaData("_offerexpirationDatetime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._ADDITIONAL_INFO, new org.apache.thrift.meta_data.FieldMetaData("_additionalInfo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._LM_ENERGY_EXCHANGE_HOURLY_OFFERS, new org.apache.thrift.meta_data.FieldMetaData("_lmEnergyExchangeHourlyOffers", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LMEnergyExchangeHourlyOffer.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(LMEnergyExchangeOfferRevision.class, metaDataMap);
  }

  public LMEnergyExchangeOfferRevision() {
  }

  public LMEnergyExchangeOfferRevision(
    int _offerId,
    int _revisionNumber,
    long _actionDatetime,
    long _notificationDatetime,
    long _offerexpirationDatetime,
    java.lang.String _additionalInfo,
    java.util.List<LMEnergyExchangeHourlyOffer> _lmEnergyExchangeHourlyOffers)
  {
    this();
    this._offerId = _offerId;
    set_offerIdIsSet(true);
    this._revisionNumber = _revisionNumber;
    set_revisionNumberIsSet(true);
    this._actionDatetime = _actionDatetime;
    set_actionDatetimeIsSet(true);
    this._notificationDatetime = _notificationDatetime;
    set_notificationDatetimeIsSet(true);
    this._offerexpirationDatetime = _offerexpirationDatetime;
    set_offerexpirationDatetimeIsSet(true);
    this._additionalInfo = _additionalInfo;
    this._lmEnergyExchangeHourlyOffers = _lmEnergyExchangeHourlyOffers;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public LMEnergyExchangeOfferRevision(LMEnergyExchangeOfferRevision other) {
    __isset_bitfield = other.__isset_bitfield;
    this._offerId = other._offerId;
    this._revisionNumber = other._revisionNumber;
    this._actionDatetime = other._actionDatetime;
    this._notificationDatetime = other._notificationDatetime;
    this._offerexpirationDatetime = other._offerexpirationDatetime;
    if (other.isSet_additionalInfo()) {
      this._additionalInfo = other._additionalInfo;
    }
    if (other.isSet_lmEnergyExchangeHourlyOffers()) {
      java.util.List<LMEnergyExchangeHourlyOffer> __this___lmEnergyExchangeHourlyOffers = new java.util.ArrayList<LMEnergyExchangeHourlyOffer>(other._lmEnergyExchangeHourlyOffers.size());
      for (LMEnergyExchangeHourlyOffer other_element : other._lmEnergyExchangeHourlyOffers) {
        __this___lmEnergyExchangeHourlyOffers.add(new LMEnergyExchangeHourlyOffer(other_element));
      }
      this._lmEnergyExchangeHourlyOffers = __this___lmEnergyExchangeHourlyOffers;
    }
  }

  public LMEnergyExchangeOfferRevision deepCopy() {
    return new LMEnergyExchangeOfferRevision(this);
  }

  @Override
  public void clear() {
    set_offerIdIsSet(false);
    this._offerId = 0;
    set_revisionNumberIsSet(false);
    this._revisionNumber = 0;
    set_actionDatetimeIsSet(false);
    this._actionDatetime = 0;
    set_notificationDatetimeIsSet(false);
    this._notificationDatetime = 0;
    set_offerexpirationDatetimeIsSet(false);
    this._offerexpirationDatetime = 0;
    this._additionalInfo = null;
    this._lmEnergyExchangeHourlyOffers = null;
  }

  public int get_offerId() {
    return this._offerId;
  }

  public void set_offerId(int _offerId) {
    this._offerId = _offerId;
    set_offerIdIsSet(true);
  }

  public void unset_offerId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___OFFERID_ISSET_ID);
  }

  /** Returns true if field _offerId is set (has been assigned a value) and false otherwise */
  public boolean isSet_offerId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___OFFERID_ISSET_ID);
  }

  public void set_offerIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___OFFERID_ISSET_ID, value);
  }

  public int get_revisionNumber() {
    return this._revisionNumber;
  }

  public void set_revisionNumber(int _revisionNumber) {
    this._revisionNumber = _revisionNumber;
    set_revisionNumberIsSet(true);
  }

  public void unset_revisionNumber() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___REVISIONNUMBER_ISSET_ID);
  }

  /** Returns true if field _revisionNumber is set (has been assigned a value) and false otherwise */
  public boolean isSet_revisionNumber() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___REVISIONNUMBER_ISSET_ID);
  }

  public void set_revisionNumberIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___REVISIONNUMBER_ISSET_ID, value);
  }

  public long get_actionDatetime() {
    return this._actionDatetime;
  }

  public void set_actionDatetime(long _actionDatetime) {
    this._actionDatetime = _actionDatetime;
    set_actionDatetimeIsSet(true);
  }

  public void unset_actionDatetime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___ACTIONDATETIME_ISSET_ID);
  }

  /** Returns true if field _actionDatetime is set (has been assigned a value) and false otherwise */
  public boolean isSet_actionDatetime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___ACTIONDATETIME_ISSET_ID);
  }

  public void set_actionDatetimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___ACTIONDATETIME_ISSET_ID, value);
  }

  public long get_notificationDatetime() {
    return this._notificationDatetime;
  }

  public void set_notificationDatetime(long _notificationDatetime) {
    this._notificationDatetime = _notificationDatetime;
    set_notificationDatetimeIsSet(true);
  }

  public void unset_notificationDatetime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___NOTIFICATIONDATETIME_ISSET_ID);
  }

  /** Returns true if field _notificationDatetime is set (has been assigned a value) and false otherwise */
  public boolean isSet_notificationDatetime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___NOTIFICATIONDATETIME_ISSET_ID);
  }

  public void set_notificationDatetimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___NOTIFICATIONDATETIME_ISSET_ID, value);
  }

  public long get_offerexpirationDatetime() {
    return this._offerexpirationDatetime;
  }

  public void set_offerexpirationDatetime(long _offerexpirationDatetime) {
    this._offerexpirationDatetime = _offerexpirationDatetime;
    set_offerexpirationDatetimeIsSet(true);
  }

  public void unset_offerexpirationDatetime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___OFFEREXPIRATIONDATETIME_ISSET_ID);
  }

  /** Returns true if field _offerexpirationDatetime is set (has been assigned a value) and false otherwise */
  public boolean isSet_offerexpirationDatetime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___OFFEREXPIRATIONDATETIME_ISSET_ID);
  }

  public void set_offerexpirationDatetimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___OFFEREXPIRATIONDATETIME_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_additionalInfo() {
    return this._additionalInfo;
  }

  public void set_additionalInfo(@org.apache.thrift.annotation.Nullable java.lang.String _additionalInfo) {
    this._additionalInfo = _additionalInfo;
  }

  public void unset_additionalInfo() {
    this._additionalInfo = null;
  }

  /** Returns true if field _additionalInfo is set (has been assigned a value) and false otherwise */
  public boolean isSet_additionalInfo() {
    return this._additionalInfo != null;
  }

  public void set_additionalInfoIsSet(boolean value) {
    if (!value) {
      this._additionalInfo = null;
    }
  }

  public int get_lmEnergyExchangeHourlyOffersSize() {
    return (this._lmEnergyExchangeHourlyOffers == null) ? 0 : this._lmEnergyExchangeHourlyOffers.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<LMEnergyExchangeHourlyOffer> get_lmEnergyExchangeHourlyOffersIterator() {
    return (this._lmEnergyExchangeHourlyOffers == null) ? null : this._lmEnergyExchangeHourlyOffers.iterator();
  }

  public void addTo_lmEnergyExchangeHourlyOffers(LMEnergyExchangeHourlyOffer elem) {
    if (this._lmEnergyExchangeHourlyOffers == null) {
      this._lmEnergyExchangeHourlyOffers = new java.util.ArrayList<LMEnergyExchangeHourlyOffer>();
    }
    this._lmEnergyExchangeHourlyOffers.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<LMEnergyExchangeHourlyOffer> get_lmEnergyExchangeHourlyOffers() {
    return this._lmEnergyExchangeHourlyOffers;
  }

  public void set_lmEnergyExchangeHourlyOffers(@org.apache.thrift.annotation.Nullable java.util.List<LMEnergyExchangeHourlyOffer> _lmEnergyExchangeHourlyOffers) {
    this._lmEnergyExchangeHourlyOffers = _lmEnergyExchangeHourlyOffers;
  }

  public void unset_lmEnergyExchangeHourlyOffers() {
    this._lmEnergyExchangeHourlyOffers = null;
  }

  /** Returns true if field _lmEnergyExchangeHourlyOffers is set (has been assigned a value) and false otherwise */
  public boolean isSet_lmEnergyExchangeHourlyOffers() {
    return this._lmEnergyExchangeHourlyOffers != null;
  }

  public void set_lmEnergyExchangeHourlyOffersIsSet(boolean value) {
    if (!value) {
      this._lmEnergyExchangeHourlyOffers = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case _OFFER_ID:
      if (value == null) {
        unset_offerId();
      } else {
        set_offerId((java.lang.Integer)value);
      }
      break;

    case _REVISION_NUMBER:
      if (value == null) {
        unset_revisionNumber();
      } else {
        set_revisionNumber((java.lang.Integer)value);
      }
      break;

    case _ACTION_DATETIME:
      if (value == null) {
        unset_actionDatetime();
      } else {
        set_actionDatetime((java.lang.Long)value);
      }
      break;

    case _NOTIFICATION_DATETIME:
      if (value == null) {
        unset_notificationDatetime();
      } else {
        set_notificationDatetime((java.lang.Long)value);
      }
      break;

    case _OFFEREXPIRATION_DATETIME:
      if (value == null) {
        unset_offerexpirationDatetime();
      } else {
        set_offerexpirationDatetime((java.lang.Long)value);
      }
      break;

    case _ADDITIONAL_INFO:
      if (value == null) {
        unset_additionalInfo();
      } else {
        set_additionalInfo((java.lang.String)value);
      }
      break;

    case _LM_ENERGY_EXCHANGE_HOURLY_OFFERS:
      if (value == null) {
        unset_lmEnergyExchangeHourlyOffers();
      } else {
        set_lmEnergyExchangeHourlyOffers((java.util.List<LMEnergyExchangeHourlyOffer>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _OFFER_ID:
      return get_offerId();

    case _REVISION_NUMBER:
      return get_revisionNumber();

    case _ACTION_DATETIME:
      return get_actionDatetime();

    case _NOTIFICATION_DATETIME:
      return get_notificationDatetime();

    case _OFFEREXPIRATION_DATETIME:
      return get_offerexpirationDatetime();

    case _ADDITIONAL_INFO:
      return get_additionalInfo();

    case _LM_ENERGY_EXCHANGE_HOURLY_OFFERS:
      return get_lmEnergyExchangeHourlyOffers();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _OFFER_ID:
      return isSet_offerId();
    case _REVISION_NUMBER:
      return isSet_revisionNumber();
    case _ACTION_DATETIME:
      return isSet_actionDatetime();
    case _NOTIFICATION_DATETIME:
      return isSet_notificationDatetime();
    case _OFFEREXPIRATION_DATETIME:
      return isSet_offerexpirationDatetime();
    case _ADDITIONAL_INFO:
      return isSet_additionalInfo();
    case _LM_ENERGY_EXCHANGE_HOURLY_OFFERS:
      return isSet_lmEnergyExchangeHourlyOffers();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof LMEnergyExchangeOfferRevision)
      return this.equals((LMEnergyExchangeOfferRevision)that);
    return false;
  }

  public boolean equals(LMEnergyExchangeOfferRevision that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__offerId = true;
    boolean that_present__offerId = true;
    if (this_present__offerId || that_present__offerId) {
      if (!(this_present__offerId && that_present__offerId))
        return false;
      if (this._offerId != that._offerId)
        return false;
    }

    boolean this_present__revisionNumber = true;
    boolean that_present__revisionNumber = true;
    if (this_present__revisionNumber || that_present__revisionNumber) {
      if (!(this_present__revisionNumber && that_present__revisionNumber))
        return false;
      if (this._revisionNumber != that._revisionNumber)
        return false;
    }

    boolean this_present__actionDatetime = true;
    boolean that_present__actionDatetime = true;
    if (this_present__actionDatetime || that_present__actionDatetime) {
      if (!(this_present__actionDatetime && that_present__actionDatetime))
        return false;
      if (this._actionDatetime != that._actionDatetime)
        return false;
    }

    boolean this_present__notificationDatetime = true;
    boolean that_present__notificationDatetime = true;
    if (this_present__notificationDatetime || that_present__notificationDatetime) {
      if (!(this_present__notificationDatetime && that_present__notificationDatetime))
        return false;
      if (this._notificationDatetime != that._notificationDatetime)
        return false;
    }

    boolean this_present__offerexpirationDatetime = true;
    boolean that_present__offerexpirationDatetime = true;
    if (this_present__offerexpirationDatetime || that_present__offerexpirationDatetime) {
      if (!(this_present__offerexpirationDatetime && that_present__offerexpirationDatetime))
        return false;
      if (this._offerexpirationDatetime != that._offerexpirationDatetime)
        return false;
    }

    boolean this_present__additionalInfo = true && this.isSet_additionalInfo();
    boolean that_present__additionalInfo = true && that.isSet_additionalInfo();
    if (this_present__additionalInfo || that_present__additionalInfo) {
      if (!(this_present__additionalInfo && that_present__additionalInfo))
        return false;
      if (!this._additionalInfo.equals(that._additionalInfo))
        return false;
    }

    boolean this_present__lmEnergyExchangeHourlyOffers = true && this.isSet_lmEnergyExchangeHourlyOffers();
    boolean that_present__lmEnergyExchangeHourlyOffers = true && that.isSet_lmEnergyExchangeHourlyOffers();
    if (this_present__lmEnergyExchangeHourlyOffers || that_present__lmEnergyExchangeHourlyOffers) {
      if (!(this_present__lmEnergyExchangeHourlyOffers && that_present__lmEnergyExchangeHourlyOffers))
        return false;
      if (!this._lmEnergyExchangeHourlyOffers.equals(that._lmEnergyExchangeHourlyOffers))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + _offerId;

    hashCode = hashCode * 8191 + _revisionNumber;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_actionDatetime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_notificationDatetime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_offerexpirationDatetime);

    hashCode = hashCode * 8191 + ((isSet_additionalInfo()) ? 131071 : 524287);
    if (isSet_additionalInfo())
      hashCode = hashCode * 8191 + _additionalInfo.hashCode();

    hashCode = hashCode * 8191 + ((isSet_lmEnergyExchangeHourlyOffers()) ? 131071 : 524287);
    if (isSet_lmEnergyExchangeHourlyOffers())
      hashCode = hashCode * 8191 + _lmEnergyExchangeHourlyOffers.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(LMEnergyExchangeOfferRevision other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSet_offerId()).compareTo(other.isSet_offerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_offerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._offerId, other._offerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_revisionNumber()).compareTo(other.isSet_revisionNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_revisionNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._revisionNumber, other._revisionNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_actionDatetime()).compareTo(other.isSet_actionDatetime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_actionDatetime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._actionDatetime, other._actionDatetime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_notificationDatetime()).compareTo(other.isSet_notificationDatetime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_notificationDatetime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._notificationDatetime, other._notificationDatetime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_offerexpirationDatetime()).compareTo(other.isSet_offerexpirationDatetime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_offerexpirationDatetime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._offerexpirationDatetime, other._offerexpirationDatetime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_additionalInfo()).compareTo(other.isSet_additionalInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_additionalInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._additionalInfo, other._additionalInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_lmEnergyExchangeHourlyOffers()).compareTo(other.isSet_lmEnergyExchangeHourlyOffers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lmEnergyExchangeHourlyOffers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lmEnergyExchangeHourlyOffers, other._lmEnergyExchangeHourlyOffers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("LMEnergyExchangeOfferRevision(");
    boolean first = true;

    sb.append("_offerId:");
    sb.append(this._offerId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_revisionNumber:");
    sb.append(this._revisionNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_actionDatetime:");
    sb.append(this._actionDatetime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_notificationDatetime:");
    sb.append(this._notificationDatetime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_offerexpirationDatetime:");
    sb.append(this._offerexpirationDatetime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_additionalInfo:");
    if (this._additionalInfo == null) {
      sb.append("null");
    } else {
      sb.append(this._additionalInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lmEnergyExchangeHourlyOffers:");
    if (this._lmEnergyExchangeHourlyOffers == null) {
      sb.append("null");
    } else {
      sb.append(this._lmEnergyExchangeHourlyOffers);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_offerId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_offerId' is unset! Struct:" + toString());
    }

    if (!isSet_revisionNumber()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_revisionNumber' is unset! Struct:" + toString());
    }

    if (!isSet_actionDatetime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_actionDatetime' is unset! Struct:" + toString());
    }

    if (!isSet_notificationDatetime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_notificationDatetime' is unset! Struct:" + toString());
    }

    if (!isSet_offerexpirationDatetime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_offerexpirationDatetime' is unset! Struct:" + toString());
    }

    if (!isSet_additionalInfo()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_additionalInfo' is unset! Struct:" + toString());
    }

    if (!isSet_lmEnergyExchangeHourlyOffers()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lmEnergyExchangeHourlyOffers' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class LMEnergyExchangeOfferRevisionStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMEnergyExchangeOfferRevisionStandardScheme getScheme() {
      return new LMEnergyExchangeOfferRevisionStandardScheme();
    }
  }

  private static class LMEnergyExchangeOfferRevisionStandardScheme extends org.apache.thrift.scheme.StandardScheme<LMEnergyExchangeOfferRevision> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, LMEnergyExchangeOfferRevision struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _OFFER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._offerId = iprot.readI32();
              struct.set_offerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _REVISION_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._revisionNumber = iprot.readI32();
              struct.set_revisionNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _ACTION_DATETIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._actionDatetime = iprot.readI64();
              struct.set_actionDatetimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _NOTIFICATION_DATETIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._notificationDatetime = iprot.readI64();
              struct.set_notificationDatetimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _OFFEREXPIRATION_DATETIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._offerexpirationDatetime = iprot.readI64();
              struct.set_offerexpirationDatetimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // _ADDITIONAL_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._additionalInfo = iprot.readString();
              struct.set_additionalInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // _LM_ENERGY_EXCHANGE_HOURLY_OFFERS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list48 = iprot.readListBegin();
                struct._lmEnergyExchangeHourlyOffers = new java.util.ArrayList<LMEnergyExchangeHourlyOffer>(_list48.size);
                @org.apache.thrift.annotation.Nullable LMEnergyExchangeHourlyOffer _elem49;
                for (int _i50 = 0; _i50 < _list48.size; ++_i50)
                {
                  _elem49 = new LMEnergyExchangeHourlyOffer();
                  _elem49.read(iprot);
                  struct._lmEnergyExchangeHourlyOffers.add(_elem49);
                }
                iprot.readListEnd();
              }
              struct.set_lmEnergyExchangeHourlyOffersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, LMEnergyExchangeOfferRevision struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(_OFFER_ID_FIELD_DESC);
      oprot.writeI32(struct._offerId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_REVISION_NUMBER_FIELD_DESC);
      oprot.writeI32(struct._revisionNumber);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_ACTION_DATETIME_FIELD_DESC);
      oprot.writeI64(struct._actionDatetime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_NOTIFICATION_DATETIME_FIELD_DESC);
      oprot.writeI64(struct._notificationDatetime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_OFFEREXPIRATION_DATETIME_FIELD_DESC);
      oprot.writeI64(struct._offerexpirationDatetime);
      oprot.writeFieldEnd();
      if (struct._additionalInfo != null) {
        oprot.writeFieldBegin(_ADDITIONAL_INFO_FIELD_DESC);
        oprot.writeString(struct._additionalInfo);
        oprot.writeFieldEnd();
      }
      if (struct._lmEnergyExchangeHourlyOffers != null) {
        oprot.writeFieldBegin(_LM_ENERGY_EXCHANGE_HOURLY_OFFERS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct._lmEnergyExchangeHourlyOffers.size()));
          for (LMEnergyExchangeHourlyOffer _iter51 : struct._lmEnergyExchangeHourlyOffers)
          {
            _iter51.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class LMEnergyExchangeOfferRevisionTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMEnergyExchangeOfferRevisionTupleScheme getScheme() {
      return new LMEnergyExchangeOfferRevisionTupleScheme();
    }
  }

  private static class LMEnergyExchangeOfferRevisionTupleScheme extends org.apache.thrift.scheme.TupleScheme<LMEnergyExchangeOfferRevision> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, LMEnergyExchangeOfferRevision struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct._offerId);
      oprot.writeI32(struct._revisionNumber);
      oprot.writeI64(struct._actionDatetime);
      oprot.writeI64(struct._notificationDatetime);
      oprot.writeI64(struct._offerexpirationDatetime);
      oprot.writeString(struct._additionalInfo);
      {
        oprot.writeI32(struct._lmEnergyExchangeHourlyOffers.size());
        for (LMEnergyExchangeHourlyOffer _iter52 : struct._lmEnergyExchangeHourlyOffers)
        {
          _iter52.write(oprot);
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, LMEnergyExchangeOfferRevision struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._offerId = iprot.readI32();
      struct.set_offerIdIsSet(true);
      struct._revisionNumber = iprot.readI32();
      struct.set_revisionNumberIsSet(true);
      struct._actionDatetime = iprot.readI64();
      struct.set_actionDatetimeIsSet(true);
      struct._notificationDatetime = iprot.readI64();
      struct.set_notificationDatetimeIsSet(true);
      struct._offerexpirationDatetime = iprot.readI64();
      struct.set_offerexpirationDatetimeIsSet(true);
      struct._additionalInfo = iprot.readString();
      struct.set_additionalInfoIsSet(true);
      {
        org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct._lmEnergyExchangeHourlyOffers = new java.util.ArrayList<LMEnergyExchangeHourlyOffer>(_list53.size);
        @org.apache.thrift.annotation.Nullable LMEnergyExchangeHourlyOffer _elem54;
        for (int _i55 = 0; _i55 < _list53.size; ++_i55)
        {
          _elem54 = new LMEnergyExchangeHourlyOffer();
          _elem54.read(iprot);
          struct._lmEnergyExchangeHourlyOffers.add(_elem54);
        }
      }
      struct.set_lmEnergyExchangeHourlyOffersIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

