/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-06-27")
public class CCVerifyInactiveBanks implements org.apache.thrift.TBase<CCVerifyInactiveBanks, CCVerifyInactiveBanks._Fields>, java.io.Serializable, Cloneable, Comparable<CCVerifyInactiveBanks> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CCVerifyInactiveBanks");

  private static final org.apache.thrift.protocol.TField _BASE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("_baseMessage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField _BANK_INACTIVE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_bankInactiveTime", org.apache.thrift.protocol.TType.I32, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CCVerifyInactiveBanksStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CCVerifyInactiveBanksTupleSchemeFactory();

  private com.cannontech.messaging.serialization.thrift.generated.CCVerifyBanks _baseMessage; // required
  private int _bankInactiveTime; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _BASE_MESSAGE((short)1, "_baseMessage"),
    _BANK_INACTIVE_TIME((short)2, "_bankInactiveTime");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _BASE_MESSAGE
          return _BASE_MESSAGE;
        case 2: // _BANK_INACTIVE_TIME
          return _BANK_INACTIVE_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___BANKINACTIVETIME_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._BASE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("_baseMessage", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.cannontech.messaging.serialization.thrift.generated.CCVerifyBanks.class)));
    tmpMap.put(_Fields._BANK_INACTIVE_TIME, new org.apache.thrift.meta_data.FieldMetaData("_bankInactiveTime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CCVerifyInactiveBanks.class, metaDataMap);
  }

  public CCVerifyInactiveBanks() {
  }

  public CCVerifyInactiveBanks(
    com.cannontech.messaging.serialization.thrift.generated.CCVerifyBanks _baseMessage,
    int _bankInactiveTime)
  {
    this();
    this._baseMessage = _baseMessage;
    this._bankInactiveTime = _bankInactiveTime;
    set_bankInactiveTimeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CCVerifyInactiveBanks(CCVerifyInactiveBanks other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSet_baseMessage()) {
      this._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.CCVerifyBanks(other._baseMessage);
    }
    this._bankInactiveTime = other._bankInactiveTime;
  }

  public CCVerifyInactiveBanks deepCopy() {
    return new CCVerifyInactiveBanks(this);
  }

  @Override
  public void clear() {
    this._baseMessage = null;
    set_bankInactiveTimeIsSet(false);
    this._bankInactiveTime = 0;
  }

  public com.cannontech.messaging.serialization.thrift.generated.CCVerifyBanks get_baseMessage() {
    return this._baseMessage;
  }

  public void set_baseMessage(com.cannontech.messaging.serialization.thrift.generated.CCVerifyBanks _baseMessage) {
    this._baseMessage = _baseMessage;
  }

  public void unset_baseMessage() {
    this._baseMessage = null;
  }

  /** Returns true if field _baseMessage is set (has been assigned a value) and false otherwise */
  public boolean isSet_baseMessage() {
    return this._baseMessage != null;
  }

  public void set_baseMessageIsSet(boolean value) {
    if (!value) {
      this._baseMessage = null;
    }
  }

  public int get_bankInactiveTime() {
    return this._bankInactiveTime;
  }

  public void set_bankInactiveTime(int _bankInactiveTime) {
    this._bankInactiveTime = _bankInactiveTime;
    set_bankInactiveTimeIsSet(true);
  }

  public void unset_bankInactiveTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___BANKINACTIVETIME_ISSET_ID);
  }

  /** Returns true if field _bankInactiveTime is set (has been assigned a value) and false otherwise */
  public boolean isSet_bankInactiveTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___BANKINACTIVETIME_ISSET_ID);
  }

  public void set_bankInactiveTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___BANKINACTIVETIME_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case _BASE_MESSAGE:
      if (value == null) {
        unset_baseMessage();
      } else {
        set_baseMessage((com.cannontech.messaging.serialization.thrift.generated.CCVerifyBanks)value);
      }
      break;

    case _BANK_INACTIVE_TIME:
      if (value == null) {
        unset_bankInactiveTime();
      } else {
        set_bankInactiveTime((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _BASE_MESSAGE:
      return get_baseMessage();

    case _BANK_INACTIVE_TIME:
      return get_bankInactiveTime();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _BASE_MESSAGE:
      return isSet_baseMessage();
    case _BANK_INACTIVE_TIME:
      return isSet_bankInactiveTime();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof CCVerifyInactiveBanks)
      return this.equals((CCVerifyInactiveBanks)that);
    return false;
  }

  public boolean equals(CCVerifyInactiveBanks that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__baseMessage = true && this.isSet_baseMessage();
    boolean that_present__baseMessage = true && that.isSet_baseMessage();
    if (this_present__baseMessage || that_present__baseMessage) {
      if (!(this_present__baseMessage && that_present__baseMessage))
        return false;
      if (!this._baseMessage.equals(that._baseMessage))
        return false;
    }

    boolean this_present__bankInactiveTime = true;
    boolean that_present__bankInactiveTime = true;
    if (this_present__bankInactiveTime || that_present__bankInactiveTime) {
      if (!(this_present__bankInactiveTime && that_present__bankInactiveTime))
        return false;
      if (this._bankInactiveTime != that._bankInactiveTime)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSet_baseMessage()) ? 131071 : 524287);
    if (isSet_baseMessage())
      hashCode = hashCode * 8191 + _baseMessage.hashCode();

    hashCode = hashCode * 8191 + _bankInactiveTime;

    return hashCode;
  }

  @Override
  public int compareTo(CCVerifyInactiveBanks other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSet_baseMessage()).compareTo(other.isSet_baseMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_baseMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._baseMessage, other._baseMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_bankInactiveTime()).compareTo(other.isSet_bankInactiveTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_bankInactiveTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._bankInactiveTime, other._bankInactiveTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("CCVerifyInactiveBanks(");
    boolean first = true;

    sb.append("_baseMessage:");
    if (this._baseMessage == null) {
      sb.append("null");
    } else {
      sb.append(this._baseMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_bankInactiveTime:");
    sb.append(this._bankInactiveTime);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_baseMessage()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_baseMessage' is unset! Struct:" + toString());
    }

    if (!isSet_bankInactiveTime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_bankInactiveTime' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (_baseMessage != null) {
      _baseMessage.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CCVerifyInactiveBanksStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CCVerifyInactiveBanksStandardScheme getScheme() {
      return new CCVerifyInactiveBanksStandardScheme();
    }
  }

  private static class CCVerifyInactiveBanksStandardScheme extends org.apache.thrift.scheme.StandardScheme<CCVerifyInactiveBanks> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CCVerifyInactiveBanks struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _BASE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.CCVerifyBanks();
              struct._baseMessage.read(iprot);
              struct.set_baseMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _BANK_INACTIVE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._bankInactiveTime = iprot.readI32();
              struct.set_bankInactiveTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CCVerifyInactiveBanks struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct._baseMessage != null) {
        oprot.writeFieldBegin(_BASE_MESSAGE_FIELD_DESC);
        struct._baseMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_BANK_INACTIVE_TIME_FIELD_DESC);
      oprot.writeI32(struct._bankInactiveTime);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CCVerifyInactiveBanksTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CCVerifyInactiveBanksTupleScheme getScheme() {
      return new CCVerifyInactiveBanksTupleScheme();
    }
  }

  private static class CCVerifyInactiveBanksTupleScheme extends org.apache.thrift.scheme.TupleScheme<CCVerifyInactiveBanks> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CCVerifyInactiveBanks struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage.write(oprot);
      oprot.writeI32(struct._bankInactiveTime);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CCVerifyInactiveBanks struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._baseMessage = new com.cannontech.messaging.serialization.thrift.generated.CCVerifyBanks();
      struct._baseMessage.read(iprot);
      struct.set_baseMessageIsSet(true);
      struct._bankInactiveTime = iprot.readI32();
      struct.set_bankInactiveTimeIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

