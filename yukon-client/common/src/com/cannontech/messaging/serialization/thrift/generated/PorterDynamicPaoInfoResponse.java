/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class PorterDynamicPaoInfoResponse implements org.apache.thrift.TBase<PorterDynamicPaoInfoResponse, PorterDynamicPaoInfoResponse._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PorterDynamicPaoInfoResponse");

  private static final org.apache.thrift.protocol.TField _DEVICE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_deviceId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField _VALUES_FIELD_DESC = new org.apache.thrift.protocol.TField("_values", org.apache.thrift.protocol.TType.MAP, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PorterDynamicPaoInfoResponseStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PorterDynamicPaoInfoResponseTupleSchemeFactory());
  }

  private int _deviceId; // required
  private Map<DynamicPaoInfoKeys,DynamicPaoInfoTypes> _values; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _DEVICE_ID((short)1, "_deviceId"),
    _VALUES((short)2, "_values");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _DEVICE_ID
          return _DEVICE_ID;
        case 2: // _VALUES
          return _VALUES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___DEVICEID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._DEVICE_ID, new org.apache.thrift.meta_data.FieldMetaData("_deviceId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._VALUES, new org.apache.thrift.meta_data.FieldMetaData("_values", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, DynamicPaoInfoKeys.class), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DynamicPaoInfoTypes.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PorterDynamicPaoInfoResponse.class, metaDataMap);
  }

  public PorterDynamicPaoInfoResponse() {
  }

  public PorterDynamicPaoInfoResponse(
    int _deviceId,
    Map<DynamicPaoInfoKeys,DynamicPaoInfoTypes> _values)
  {
    this();
    this._deviceId = _deviceId;
    set_deviceIdIsSet(true);
    this._values = _values;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PorterDynamicPaoInfoResponse(PorterDynamicPaoInfoResponse other) {
    __isset_bitfield = other.__isset_bitfield;
    this._deviceId = other._deviceId;
    if (other.isSet_values()) {
      Map<DynamicPaoInfoKeys,DynamicPaoInfoTypes> __this___values = new HashMap<DynamicPaoInfoKeys,DynamicPaoInfoTypes>();
      for (Map.Entry<DynamicPaoInfoKeys, DynamicPaoInfoTypes> other_element : other._values.entrySet()) {

        DynamicPaoInfoKeys other_element_key = other_element.getKey();
        DynamicPaoInfoTypes other_element_value = other_element.getValue();

        DynamicPaoInfoKeys __this___values_copy_key = other_element_key;

        DynamicPaoInfoTypes __this___values_copy_value = new DynamicPaoInfoTypes(other_element_value);

        __this___values.put(__this___values_copy_key, __this___values_copy_value);
      }
      this._values = __this___values;
    }
  }

  public PorterDynamicPaoInfoResponse deepCopy() {
    return new PorterDynamicPaoInfoResponse(this);
  }

  @Override
  public void clear() {
    set_deviceIdIsSet(false);
    this._deviceId = 0;
    this._values = null;
  }

  public int get_deviceId() {
    return this._deviceId;
  }

  public void set_deviceId(int _deviceId) {
    this._deviceId = _deviceId;
    set_deviceIdIsSet(true);
  }

  public void unset_deviceId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___DEVICEID_ISSET_ID);
  }

  /** Returns true if field _deviceId is set (has been assigned a value) and false otherwise */
  public boolean isSet_deviceId() {
    return EncodingUtils.testBit(__isset_bitfield, ___DEVICEID_ISSET_ID);
  }

  public void set_deviceIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___DEVICEID_ISSET_ID, value);
  }

  public int get_valuesSize() {
    return (this._values == null) ? 0 : this._values.size();
  }

  public void putTo_values(DynamicPaoInfoKeys key, DynamicPaoInfoTypes val) {
    if (this._values == null) {
      this._values = new HashMap<DynamicPaoInfoKeys,DynamicPaoInfoTypes>();
    }
    this._values.put(key, val);
  }

  public Map<DynamicPaoInfoKeys,DynamicPaoInfoTypes> get_values() {
    return this._values;
  }

  public void set_values(Map<DynamicPaoInfoKeys,DynamicPaoInfoTypes> _values) {
    this._values = _values;
  }

  public void unset_values() {
    this._values = null;
  }

  /** Returns true if field _values is set (has been assigned a value) and false otherwise */
  public boolean isSet_values() {
    return this._values != null;
  }

  public void set_valuesIsSet(boolean value) {
    if (!value) {
      this._values = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case _DEVICE_ID:
      if (value == null) {
        unset_deviceId();
      } else {
        set_deviceId((Integer)value);
      }
      break;

    case _VALUES:
      if (value == null) {
        unset_values();
      } else {
        set_values((Map<DynamicPaoInfoKeys,DynamicPaoInfoTypes>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case _DEVICE_ID:
      return Integer.valueOf(get_deviceId());

    case _VALUES:
      return get_values();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case _DEVICE_ID:
      return isSet_deviceId();
    case _VALUES:
      return isSet_values();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PorterDynamicPaoInfoResponse)
      return this.equals((PorterDynamicPaoInfoResponse)that);
    return false;
  }

  public boolean equals(PorterDynamicPaoInfoResponse that) {
    if (that == null)
      return false;

    boolean this_present__deviceId = true;
    boolean that_present__deviceId = true;
    if (this_present__deviceId || that_present__deviceId) {
      if (!(this_present__deviceId && that_present__deviceId))
        return false;
      if (this._deviceId != that._deviceId)
        return false;
    }

    boolean this_present__values = true && this.isSet_values();
    boolean that_present__values = true && that.isSet_values();
    if (this_present__values || that_present__values) {
      if (!(this_present__values && that_present__values))
        return false;
      if (!this._values.equals(that._values))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(PorterDynamicPaoInfoResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    PorterDynamicPaoInfoResponse typedOther = (PorterDynamicPaoInfoResponse)other;

    lastComparison = Boolean.valueOf(isSet_deviceId()).compareTo(typedOther.isSet_deviceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_deviceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._deviceId, typedOther._deviceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_values()).compareTo(typedOther.isSet_values());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_values()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._values, typedOther._values);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PorterDynamicPaoInfoResponse(");
    boolean first = true;

    sb.append("_deviceId:");
    sb.append(this._deviceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_values:");
    if (this._values == null) {
      sb.append("null");
    } else {
      sb.append(this._values);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_deviceId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_deviceId' is unset! Struct:" + toString());
    }

    if (!isSet_values()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_values' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PorterDynamicPaoInfoResponseStandardSchemeFactory implements SchemeFactory {
    public PorterDynamicPaoInfoResponseStandardScheme getScheme() {
      return new PorterDynamicPaoInfoResponseStandardScheme();
    }
  }

  private static class PorterDynamicPaoInfoResponseStandardScheme extends StandardScheme<PorterDynamicPaoInfoResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PorterDynamicPaoInfoResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _DEVICE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._deviceId = iprot.readI32();
              struct.set_deviceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _VALUES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map8 = iprot.readMapBegin();
                struct._values = new HashMap<DynamicPaoInfoKeys,DynamicPaoInfoTypes>(2*_map8.size);
                for (int _i9 = 0; _i9 < _map8.size; ++_i9)
                {
                  DynamicPaoInfoKeys _key10; // required
                  DynamicPaoInfoTypes _val11; // required
                  _key10 = DynamicPaoInfoKeys.findByValue(iprot.readI32());
                  _val11 = new DynamicPaoInfoTypes();
                  _val11.read(iprot);
                  struct._values.put(_key10, _val11);
                }
                iprot.readMapEnd();
              }
              struct.set_valuesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PorterDynamicPaoInfoResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(_DEVICE_ID_FIELD_DESC);
      oprot.writeI32(struct._deviceId);
      oprot.writeFieldEnd();
      if (struct._values != null) {
        oprot.writeFieldBegin(_VALUES_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRUCT, struct._values.size()));
          for (Map.Entry<DynamicPaoInfoKeys, DynamicPaoInfoTypes> _iter12 : struct._values.entrySet())
          {
            oprot.writeI32(_iter12.getKey().getValue());
            _iter12.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PorterDynamicPaoInfoResponseTupleSchemeFactory implements SchemeFactory {
    public PorterDynamicPaoInfoResponseTupleScheme getScheme() {
      return new PorterDynamicPaoInfoResponseTupleScheme();
    }
  }

  private static class PorterDynamicPaoInfoResponseTupleScheme extends TupleScheme<PorterDynamicPaoInfoResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PorterDynamicPaoInfoResponse struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct._deviceId);
      {
        oprot.writeI32(struct._values.size());
        for (Map.Entry<DynamicPaoInfoKeys, DynamicPaoInfoTypes> _iter13 : struct._values.entrySet())
        {
          oprot.writeI32(_iter13.getKey().getValue());
          _iter13.getValue().write(oprot);
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PorterDynamicPaoInfoResponse struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct._deviceId = iprot.readI32();
      struct.set_deviceIdIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map14 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct._values = new HashMap<DynamicPaoInfoKeys,DynamicPaoInfoTypes>(2*_map14.size);
        for (int _i15 = 0; _i15 < _map14.size; ++_i15)
        {
          DynamicPaoInfoKeys _key16; // required
          DynamicPaoInfoTypes _val17; // required
          _key16 = DynamicPaoInfoKeys.findByValue(iprot.readI32());
          _val17 = new DynamicPaoInfoTypes();
          _val17.read(iprot);
          struct._values.put(_key16, _val17);
        }
      }
      struct.set_valuesIsSet(true);
    }
  }

}

