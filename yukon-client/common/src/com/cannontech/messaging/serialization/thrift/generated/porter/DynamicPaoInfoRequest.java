/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated.porter;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class DynamicPaoInfoRequest implements org.apache.thrift.TBase<DynamicPaoInfoRequest, DynamicPaoInfoRequest._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("DynamicPaoInfoRequest");

  private static final org.apache.thrift.protocol.TField _DEVICE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_deviceId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField _DURATION_KEYS_FIELD_DESC = new org.apache.thrift.protocol.TField("_durationKeys", org.apache.thrift.protocol.TType.SET, (short)2);
  private static final org.apache.thrift.protocol.TField _TIMESTAMP_KEYS_FIELD_DESC = new org.apache.thrift.protocol.TField("_timestampKeys", org.apache.thrift.protocol.TType.SET, (short)3);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new DynamicPaoInfoRequestStandardSchemeFactory());
    schemes.put(TupleScheme.class, new DynamicPaoInfoRequestTupleSchemeFactory());
  }

  private int _deviceId; // required
  private Set<DynamicPaoInfoDurationKeys> _durationKeys; // required
  private Set<DynamicPaoInfoTimestampKeys> _timestampKeys; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _DEVICE_ID((short)1, "_deviceId"),
    _DURATION_KEYS((short)2, "_durationKeys"),
    _TIMESTAMP_KEYS((short)3, "_timestampKeys");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _DEVICE_ID
          return _DEVICE_ID;
        case 2: // _DURATION_KEYS
          return _DURATION_KEYS;
        case 3: // _TIMESTAMP_KEYS
          return _TIMESTAMP_KEYS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___DEVICEID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._DEVICE_ID, new org.apache.thrift.meta_data.FieldMetaData("_deviceId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._DURATION_KEYS, new org.apache.thrift.meta_data.FieldMetaData("_durationKeys", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, DynamicPaoInfoDurationKeys.class))));
    tmpMap.put(_Fields._TIMESTAMP_KEYS, new org.apache.thrift.meta_data.FieldMetaData("_timestampKeys", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, DynamicPaoInfoTimestampKeys.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(DynamicPaoInfoRequest.class, metaDataMap);
  }

  public DynamicPaoInfoRequest() {
  }

  public DynamicPaoInfoRequest(
    int _deviceId,
    Set<DynamicPaoInfoDurationKeys> _durationKeys,
    Set<DynamicPaoInfoTimestampKeys> _timestampKeys)
  {
    this();
    this._deviceId = _deviceId;
    set_deviceIdIsSet(true);
    this._durationKeys = _durationKeys;
    this._timestampKeys = _timestampKeys;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public DynamicPaoInfoRequest(DynamicPaoInfoRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    this._deviceId = other._deviceId;
    if (other.isSet_durationKeys()) {
      Set<DynamicPaoInfoDurationKeys> __this___durationKeys = new HashSet<DynamicPaoInfoDurationKeys>();
      for (DynamicPaoInfoDurationKeys other_element : other._durationKeys) {
        __this___durationKeys.add(other_element);
      }
      this._durationKeys = __this___durationKeys;
    }
    if (other.isSet_timestampKeys()) {
      Set<DynamicPaoInfoTimestampKeys> __this___timestampKeys = new HashSet<DynamicPaoInfoTimestampKeys>();
      for (DynamicPaoInfoTimestampKeys other_element : other._timestampKeys) {
        __this___timestampKeys.add(other_element);
      }
      this._timestampKeys = __this___timestampKeys;
    }
  }

  public DynamicPaoInfoRequest deepCopy() {
    return new DynamicPaoInfoRequest(this);
  }

  @Override
  public void clear() {
    set_deviceIdIsSet(false);
    this._deviceId = 0;
    this._durationKeys = null;
    this._timestampKeys = null;
  }

  public int get_deviceId() {
    return this._deviceId;
  }

  public void set_deviceId(int _deviceId) {
    this._deviceId = _deviceId;
    set_deviceIdIsSet(true);
  }

  public void unset_deviceId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, ___DEVICEID_ISSET_ID);
  }

  /** Returns true if field _deviceId is set (has been assigned a value) and false otherwise */
  public boolean isSet_deviceId() {
    return EncodingUtils.testBit(__isset_bitfield, ___DEVICEID_ISSET_ID);
  }

  public void set_deviceIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, ___DEVICEID_ISSET_ID, value);
  }

  public int get_durationKeysSize() {
    return (this._durationKeys == null) ? 0 : this._durationKeys.size();
  }

  public java.util.Iterator<DynamicPaoInfoDurationKeys> get_durationKeysIterator() {
    return (this._durationKeys == null) ? null : this._durationKeys.iterator();
  }

  public void addTo_durationKeys(DynamicPaoInfoDurationKeys elem) {
    if (this._durationKeys == null) {
      this._durationKeys = new HashSet<DynamicPaoInfoDurationKeys>();
    }
    this._durationKeys.add(elem);
  }

  public Set<DynamicPaoInfoDurationKeys> get_durationKeys() {
    return this._durationKeys;
  }

  public void set_durationKeys(Set<DynamicPaoInfoDurationKeys> _durationKeys) {
    this._durationKeys = _durationKeys;
  }

  public void unset_durationKeys() {
    this._durationKeys = null;
  }

  /** Returns true if field _durationKeys is set (has been assigned a value) and false otherwise */
  public boolean isSet_durationKeys() {
    return this._durationKeys != null;
  }

  public void set_durationKeysIsSet(boolean value) {
    if (!value) {
      this._durationKeys = null;
    }
  }

  public int get_timestampKeysSize() {
    return (this._timestampKeys == null) ? 0 : this._timestampKeys.size();
  }

  public java.util.Iterator<DynamicPaoInfoTimestampKeys> get_timestampKeysIterator() {
    return (this._timestampKeys == null) ? null : this._timestampKeys.iterator();
  }

  public void addTo_timestampKeys(DynamicPaoInfoTimestampKeys elem) {
    if (this._timestampKeys == null) {
      this._timestampKeys = new HashSet<DynamicPaoInfoTimestampKeys>();
    }
    this._timestampKeys.add(elem);
  }

  public Set<DynamicPaoInfoTimestampKeys> get_timestampKeys() {
    return this._timestampKeys;
  }

  public void set_timestampKeys(Set<DynamicPaoInfoTimestampKeys> _timestampKeys) {
    this._timestampKeys = _timestampKeys;
  }

  public void unset_timestampKeys() {
    this._timestampKeys = null;
  }

  /** Returns true if field _timestampKeys is set (has been assigned a value) and false otherwise */
  public boolean isSet_timestampKeys() {
    return this._timestampKeys != null;
  }

  public void set_timestampKeysIsSet(boolean value) {
    if (!value) {
      this._timestampKeys = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case _DEVICE_ID:
      if (value == null) {
        unset_deviceId();
      } else {
        set_deviceId((Integer)value);
      }
      break;

    case _DURATION_KEYS:
      if (value == null) {
        unset_durationKeys();
      } else {
        set_durationKeys((Set<DynamicPaoInfoDurationKeys>)value);
      }
      break;

    case _TIMESTAMP_KEYS:
      if (value == null) {
        unset_timestampKeys();
      } else {
        set_timestampKeys((Set<DynamicPaoInfoTimestampKeys>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case _DEVICE_ID:
      return Integer.valueOf(get_deviceId());

    case _DURATION_KEYS:
      return get_durationKeys();

    case _TIMESTAMP_KEYS:
      return get_timestampKeys();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case _DEVICE_ID:
      return isSet_deviceId();
    case _DURATION_KEYS:
      return isSet_durationKeys();
    case _TIMESTAMP_KEYS:
      return isSet_timestampKeys();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof DynamicPaoInfoRequest)
      return this.equals((DynamicPaoInfoRequest)that);
    return false;
  }

  public boolean equals(DynamicPaoInfoRequest that) {
    if (that == null)
      return false;

    boolean this_present__deviceId = true;
    boolean that_present__deviceId = true;
    if (this_present__deviceId || that_present__deviceId) {
      if (!(this_present__deviceId && that_present__deviceId))
        return false;
      if (this._deviceId != that._deviceId)
        return false;
    }

    boolean this_present__durationKeys = true && this.isSet_durationKeys();
    boolean that_present__durationKeys = true && that.isSet_durationKeys();
    if (this_present__durationKeys || that_present__durationKeys) {
      if (!(this_present__durationKeys && that_present__durationKeys))
        return false;
      if (!this._durationKeys.equals(that._durationKeys))
        return false;
    }

    boolean this_present__timestampKeys = true && this.isSet_timestampKeys();
    boolean that_present__timestampKeys = true && that.isSet_timestampKeys();
    if (this_present__timestampKeys || that_present__timestampKeys) {
      if (!(this_present__timestampKeys && that_present__timestampKeys))
        return false;
      if (!this._timestampKeys.equals(that._timestampKeys))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(DynamicPaoInfoRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    DynamicPaoInfoRequest typedOther = (DynamicPaoInfoRequest)other;

    lastComparison = Boolean.valueOf(isSet_deviceId()).compareTo(typedOther.isSet_deviceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_deviceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._deviceId, typedOther._deviceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_durationKeys()).compareTo(typedOther.isSet_durationKeys());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_durationKeys()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._durationKeys, typedOther._durationKeys);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSet_timestampKeys()).compareTo(typedOther.isSet_timestampKeys());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_timestampKeys()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._timestampKeys, typedOther._timestampKeys);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("DynamicPaoInfoRequest(");
    boolean first = true;

    sb.append("_deviceId:");
    sb.append(this._deviceId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_durationKeys:");
    if (this._durationKeys == null) {
      sb.append("null");
    } else {
      sb.append(this._durationKeys);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_timestampKeys:");
    if (this._timestampKeys == null) {
      sb.append("null");
    } else {
      sb.append(this._timestampKeys);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_deviceId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_deviceId' is unset! Struct:" + toString());
    }

    if (!isSet_durationKeys()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_durationKeys' is unset! Struct:" + toString());
    }

    if (!isSet_timestampKeys()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_timestampKeys' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class DynamicPaoInfoRequestStandardSchemeFactory implements SchemeFactory {
    public DynamicPaoInfoRequestStandardScheme getScheme() {
      return new DynamicPaoInfoRequestStandardScheme();
    }
  }

  private static class DynamicPaoInfoRequestStandardScheme extends StandardScheme<DynamicPaoInfoRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, DynamicPaoInfoRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _DEVICE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._deviceId = iprot.readI32();
              struct.set_deviceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _DURATION_KEYS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set0 = iprot.readSetBegin();
                struct._durationKeys = new HashSet<DynamicPaoInfoDurationKeys>(2*_set0.size);
                for (int _i1 = 0; _i1 < _set0.size; ++_i1)
                {
                  DynamicPaoInfoDurationKeys _elem2; // required
                  _elem2 = DynamicPaoInfoDurationKeys.findByValue(iprot.readI32());
                  struct._durationKeys.add(_elem2);
                }
                iprot.readSetEnd();
              }
              struct.set_durationKeysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _TIMESTAMP_KEYS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set3 = iprot.readSetBegin();
                struct._timestampKeys = new HashSet<DynamicPaoInfoTimestampKeys>(2*_set3.size);
                for (int _i4 = 0; _i4 < _set3.size; ++_i4)
                {
                  DynamicPaoInfoTimestampKeys _elem5; // required
                  _elem5 = DynamicPaoInfoTimestampKeys.findByValue(iprot.readI32());
                  struct._timestampKeys.add(_elem5);
                }
                iprot.readSetEnd();
              }
              struct.set_timestampKeysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, DynamicPaoInfoRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(_DEVICE_ID_FIELD_DESC);
      oprot.writeI32(struct._deviceId);
      oprot.writeFieldEnd();
      if (struct._durationKeys != null) {
        oprot.writeFieldBegin(_DURATION_KEYS_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct._durationKeys.size()));
          for (DynamicPaoInfoDurationKeys _iter6 : struct._durationKeys)
          {
            oprot.writeI32(_iter6.getValue());
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct._timestampKeys != null) {
        oprot.writeFieldBegin(_TIMESTAMP_KEYS_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct._timestampKeys.size()));
          for (DynamicPaoInfoTimestampKeys _iter7 : struct._timestampKeys)
          {
            oprot.writeI32(_iter7.getValue());
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class DynamicPaoInfoRequestTupleSchemeFactory implements SchemeFactory {
    public DynamicPaoInfoRequestTupleScheme getScheme() {
      return new DynamicPaoInfoRequestTupleScheme();
    }
  }

  private static class DynamicPaoInfoRequestTupleScheme extends TupleScheme<DynamicPaoInfoRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, DynamicPaoInfoRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct._deviceId);
      {
        oprot.writeI32(struct._durationKeys.size());
        for (DynamicPaoInfoDurationKeys _iter8 : struct._durationKeys)
        {
          oprot.writeI32(_iter8.getValue());
        }
      }
      {
        oprot.writeI32(struct._timestampKeys.size());
        for (DynamicPaoInfoTimestampKeys _iter9 : struct._timestampKeys)
        {
          oprot.writeI32(_iter9.getValue());
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, DynamicPaoInfoRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct._deviceId = iprot.readI32();
      struct.set_deviceIdIsSet(true);
      {
        org.apache.thrift.protocol.TSet _set10 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
        struct._durationKeys = new HashSet<DynamicPaoInfoDurationKeys>(2*_set10.size);
        for (int _i11 = 0; _i11 < _set10.size; ++_i11)
        {
          DynamicPaoInfoDurationKeys _elem12; // required
          _elem12 = DynamicPaoInfoDurationKeys.findByValue(iprot.readI32());
          struct._durationKeys.add(_elem12);
        }
      }
      struct.set_durationKeysIsSet(true);
      {
        org.apache.thrift.protocol.TSet _set13 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
        struct._timestampKeys = new HashSet<DynamicPaoInfoTimestampKeys>(2*_set13.size);
        for (int _i14 = 0; _i14 < _set13.size; ++_i14)
        {
          DynamicPaoInfoTimestampKeys _elem15; // required
          _elem15 = DynamicPaoInfoTimestampKeys.findByValue(iprot.readI32());
          struct._timestampKeys.add(_elem15);
        }
      }
      struct.set_timestampKeysIsSet(true);
    }
  }

}

