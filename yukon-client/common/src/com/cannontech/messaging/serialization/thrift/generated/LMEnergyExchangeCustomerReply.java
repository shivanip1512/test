/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-09-24")
public class LMEnergyExchangeCustomerReply implements org.apache.thrift.TBase<LMEnergyExchangeCustomerReply, LMEnergyExchangeCustomerReply._Fields>, java.io.Serializable, Cloneable, Comparable<LMEnergyExchangeCustomerReply> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("LMEnergyExchangeCustomerReply");

  private static final org.apache.thrift.protocol.TField _CUSTOMER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_customerId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField _OFFER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_offerId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _ACCEPT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("_acceptStatus", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField _ACCEPT_DATETIME_FIELD_DESC = new org.apache.thrift.protocol.TField("_acceptDatetime", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField _REVISION_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("_revisionNumber", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField _IP_ADDRESS_OF_ACCEPT_USER_FIELD_DESC = new org.apache.thrift.protocol.TField("_ipAddressOfAcceptUser", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField _USER_ID_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("_userIdName", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField _NAME_OF_ACCEPT_PERSON_FIELD_DESC = new org.apache.thrift.protocol.TField("_nameOfAcceptPerson", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField _ENERGY_EXCHANGE_NOTES_FIELD_DESC = new org.apache.thrift.protocol.TField("_energyExchangeNotes", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField _LM_ENERGY_EXCHANGE_HOURLY_CUSTOMERS_FIELD_DESC = new org.apache.thrift.protocol.TField("_lmEnergyExchangeHourlyCustomers", org.apache.thrift.protocol.TType.LIST, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new LMEnergyExchangeCustomerReplyStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new LMEnergyExchangeCustomerReplyTupleSchemeFactory();

  private int _customerId; // required
  private int _offerId; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _acceptStatus; // required
  private long _acceptDatetime; // required
  private int _revisionNumber; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _ipAddressOfAcceptUser; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _userIdName; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _nameOfAcceptPerson; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _energyExchangeNotes; // required
  private @org.apache.thrift.annotation.Nullable java.util.List<LMEnergyExchangeHourlyCustomer> _lmEnergyExchangeHourlyCustomers; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _CUSTOMER_ID((short)1, "_customerId"),
    _OFFER_ID((short)2, "_offerId"),
    _ACCEPT_STATUS((short)3, "_acceptStatus"),
    _ACCEPT_DATETIME((short)4, "_acceptDatetime"),
    _REVISION_NUMBER((short)5, "_revisionNumber"),
    _IP_ADDRESS_OF_ACCEPT_USER((short)6, "_ipAddressOfAcceptUser"),
    _USER_ID_NAME((short)7, "_userIdName"),
    _NAME_OF_ACCEPT_PERSON((short)8, "_nameOfAcceptPerson"),
    _ENERGY_EXCHANGE_NOTES((short)9, "_energyExchangeNotes"),
    _LM_ENERGY_EXCHANGE_HOURLY_CUSTOMERS((short)10, "_lmEnergyExchangeHourlyCustomers");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _CUSTOMER_ID
          return _CUSTOMER_ID;
        case 2: // _OFFER_ID
          return _OFFER_ID;
        case 3: // _ACCEPT_STATUS
          return _ACCEPT_STATUS;
        case 4: // _ACCEPT_DATETIME
          return _ACCEPT_DATETIME;
        case 5: // _REVISION_NUMBER
          return _REVISION_NUMBER;
        case 6: // _IP_ADDRESS_OF_ACCEPT_USER
          return _IP_ADDRESS_OF_ACCEPT_USER;
        case 7: // _USER_ID_NAME
          return _USER_ID_NAME;
        case 8: // _NAME_OF_ACCEPT_PERSON
          return _NAME_OF_ACCEPT_PERSON;
        case 9: // _ENERGY_EXCHANGE_NOTES
          return _ENERGY_EXCHANGE_NOTES;
        case 10: // _LM_ENERGY_EXCHANGE_HOURLY_CUSTOMERS
          return _LM_ENERGY_EXCHANGE_HOURLY_CUSTOMERS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___CUSTOMERID_ISSET_ID = 0;
  private static final int ___OFFERID_ISSET_ID = 1;
  private static final int ___ACCEPTDATETIME_ISSET_ID = 2;
  private static final int ___REVISIONNUMBER_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._CUSTOMER_ID, new org.apache.thrift.meta_data.FieldMetaData("_customerId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._OFFER_ID, new org.apache.thrift.meta_data.FieldMetaData("_offerId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._ACCEPT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("_acceptStatus", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._ACCEPT_DATETIME, new org.apache.thrift.meta_data.FieldMetaData("_acceptDatetime", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._REVISION_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("_revisionNumber", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._IP_ADDRESS_OF_ACCEPT_USER, new org.apache.thrift.meta_data.FieldMetaData("_ipAddressOfAcceptUser", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._USER_ID_NAME, new org.apache.thrift.meta_data.FieldMetaData("_userIdName", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._NAME_OF_ACCEPT_PERSON, new org.apache.thrift.meta_data.FieldMetaData("_nameOfAcceptPerson", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._ENERGY_EXCHANGE_NOTES, new org.apache.thrift.meta_data.FieldMetaData("_energyExchangeNotes", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._LM_ENERGY_EXCHANGE_HOURLY_CUSTOMERS, new org.apache.thrift.meta_data.FieldMetaData("_lmEnergyExchangeHourlyCustomers", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LMEnergyExchangeHourlyCustomer.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(LMEnergyExchangeCustomerReply.class, metaDataMap);
  }

  public LMEnergyExchangeCustomerReply() {
  }

  public LMEnergyExchangeCustomerReply(
    int _customerId,
    int _offerId,
    java.lang.String _acceptStatus,
    long _acceptDatetime,
    int _revisionNumber,
    java.lang.String _ipAddressOfAcceptUser,
    java.lang.String _userIdName,
    java.lang.String _nameOfAcceptPerson,
    java.lang.String _energyExchangeNotes,
    java.util.List<LMEnergyExchangeHourlyCustomer> _lmEnergyExchangeHourlyCustomers)
  {
    this();
    this._customerId = _customerId;
    set_customerIdIsSet(true);
    this._offerId = _offerId;
    set_offerIdIsSet(true);
    this._acceptStatus = _acceptStatus;
    this._acceptDatetime = _acceptDatetime;
    set_acceptDatetimeIsSet(true);
    this._revisionNumber = _revisionNumber;
    set_revisionNumberIsSet(true);
    this._ipAddressOfAcceptUser = _ipAddressOfAcceptUser;
    this._userIdName = _userIdName;
    this._nameOfAcceptPerson = _nameOfAcceptPerson;
    this._energyExchangeNotes = _energyExchangeNotes;
    this._lmEnergyExchangeHourlyCustomers = _lmEnergyExchangeHourlyCustomers;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public LMEnergyExchangeCustomerReply(LMEnergyExchangeCustomerReply other) {
    __isset_bitfield = other.__isset_bitfield;
    this._customerId = other._customerId;
    this._offerId = other._offerId;
    if (other.isSet_acceptStatus()) {
      this._acceptStatus = other._acceptStatus;
    }
    this._acceptDatetime = other._acceptDatetime;
    this._revisionNumber = other._revisionNumber;
    if (other.isSet_ipAddressOfAcceptUser()) {
      this._ipAddressOfAcceptUser = other._ipAddressOfAcceptUser;
    }
    if (other.isSet_userIdName()) {
      this._userIdName = other._userIdName;
    }
    if (other.isSet_nameOfAcceptPerson()) {
      this._nameOfAcceptPerson = other._nameOfAcceptPerson;
    }
    if (other.isSet_energyExchangeNotes()) {
      this._energyExchangeNotes = other._energyExchangeNotes;
    }
    if (other.isSet_lmEnergyExchangeHourlyCustomers()) {
      java.util.List<LMEnergyExchangeHourlyCustomer> __this___lmEnergyExchangeHourlyCustomers = new java.util.ArrayList<LMEnergyExchangeHourlyCustomer>(other._lmEnergyExchangeHourlyCustomers.size());
      for (LMEnergyExchangeHourlyCustomer other_element : other._lmEnergyExchangeHourlyCustomers) {
        __this___lmEnergyExchangeHourlyCustomers.add(new LMEnergyExchangeHourlyCustomer(other_element));
      }
      this._lmEnergyExchangeHourlyCustomers = __this___lmEnergyExchangeHourlyCustomers;
    }
  }

  public LMEnergyExchangeCustomerReply deepCopy() {
    return new LMEnergyExchangeCustomerReply(this);
  }

  @Override
  public void clear() {
    set_customerIdIsSet(false);
    this._customerId = 0;
    set_offerIdIsSet(false);
    this._offerId = 0;
    this._acceptStatus = null;
    set_acceptDatetimeIsSet(false);
    this._acceptDatetime = 0;
    set_revisionNumberIsSet(false);
    this._revisionNumber = 0;
    this._ipAddressOfAcceptUser = null;
    this._userIdName = null;
    this._nameOfAcceptPerson = null;
    this._energyExchangeNotes = null;
    this._lmEnergyExchangeHourlyCustomers = null;
  }

  public int get_customerId() {
    return this._customerId;
  }

  public void set_customerId(int _customerId) {
    this._customerId = _customerId;
    set_customerIdIsSet(true);
  }

  public void unset_customerId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___CUSTOMERID_ISSET_ID);
  }

  /** Returns true if field _customerId is set (has been assigned a value) and false otherwise */
  public boolean isSet_customerId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___CUSTOMERID_ISSET_ID);
  }

  public void set_customerIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___CUSTOMERID_ISSET_ID, value);
  }

  public int get_offerId() {
    return this._offerId;
  }

  public void set_offerId(int _offerId) {
    this._offerId = _offerId;
    set_offerIdIsSet(true);
  }

  public void unset_offerId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___OFFERID_ISSET_ID);
  }

  /** Returns true if field _offerId is set (has been assigned a value) and false otherwise */
  public boolean isSet_offerId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___OFFERID_ISSET_ID);
  }

  public void set_offerIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___OFFERID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_acceptStatus() {
    return this._acceptStatus;
  }

  public void set_acceptStatus(@org.apache.thrift.annotation.Nullable java.lang.String _acceptStatus) {
    this._acceptStatus = _acceptStatus;
  }

  public void unset_acceptStatus() {
    this._acceptStatus = null;
  }

  /** Returns true if field _acceptStatus is set (has been assigned a value) and false otherwise */
  public boolean isSet_acceptStatus() {
    return this._acceptStatus != null;
  }

  public void set_acceptStatusIsSet(boolean value) {
    if (!value) {
      this._acceptStatus = null;
    }
  }

  public long get_acceptDatetime() {
    return this._acceptDatetime;
  }

  public void set_acceptDatetime(long _acceptDatetime) {
    this._acceptDatetime = _acceptDatetime;
    set_acceptDatetimeIsSet(true);
  }

  public void unset_acceptDatetime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___ACCEPTDATETIME_ISSET_ID);
  }

  /** Returns true if field _acceptDatetime is set (has been assigned a value) and false otherwise */
  public boolean isSet_acceptDatetime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___ACCEPTDATETIME_ISSET_ID);
  }

  public void set_acceptDatetimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___ACCEPTDATETIME_ISSET_ID, value);
  }

  public int get_revisionNumber() {
    return this._revisionNumber;
  }

  public void set_revisionNumber(int _revisionNumber) {
    this._revisionNumber = _revisionNumber;
    set_revisionNumberIsSet(true);
  }

  public void unset_revisionNumber() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___REVISIONNUMBER_ISSET_ID);
  }

  /** Returns true if field _revisionNumber is set (has been assigned a value) and false otherwise */
  public boolean isSet_revisionNumber() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___REVISIONNUMBER_ISSET_ID);
  }

  public void set_revisionNumberIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___REVISIONNUMBER_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_ipAddressOfAcceptUser() {
    return this._ipAddressOfAcceptUser;
  }

  public void set_ipAddressOfAcceptUser(@org.apache.thrift.annotation.Nullable java.lang.String _ipAddressOfAcceptUser) {
    this._ipAddressOfAcceptUser = _ipAddressOfAcceptUser;
  }

  public void unset_ipAddressOfAcceptUser() {
    this._ipAddressOfAcceptUser = null;
  }

  /** Returns true if field _ipAddressOfAcceptUser is set (has been assigned a value) and false otherwise */
  public boolean isSet_ipAddressOfAcceptUser() {
    return this._ipAddressOfAcceptUser != null;
  }

  public void set_ipAddressOfAcceptUserIsSet(boolean value) {
    if (!value) {
      this._ipAddressOfAcceptUser = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_userIdName() {
    return this._userIdName;
  }

  public void set_userIdName(@org.apache.thrift.annotation.Nullable java.lang.String _userIdName) {
    this._userIdName = _userIdName;
  }

  public void unset_userIdName() {
    this._userIdName = null;
  }

  /** Returns true if field _userIdName is set (has been assigned a value) and false otherwise */
  public boolean isSet_userIdName() {
    return this._userIdName != null;
  }

  public void set_userIdNameIsSet(boolean value) {
    if (!value) {
      this._userIdName = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_nameOfAcceptPerson() {
    return this._nameOfAcceptPerson;
  }

  public void set_nameOfAcceptPerson(@org.apache.thrift.annotation.Nullable java.lang.String _nameOfAcceptPerson) {
    this._nameOfAcceptPerson = _nameOfAcceptPerson;
  }

  public void unset_nameOfAcceptPerson() {
    this._nameOfAcceptPerson = null;
  }

  /** Returns true if field _nameOfAcceptPerson is set (has been assigned a value) and false otherwise */
  public boolean isSet_nameOfAcceptPerson() {
    return this._nameOfAcceptPerson != null;
  }

  public void set_nameOfAcceptPersonIsSet(boolean value) {
    if (!value) {
      this._nameOfAcceptPerson = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_energyExchangeNotes() {
    return this._energyExchangeNotes;
  }

  public void set_energyExchangeNotes(@org.apache.thrift.annotation.Nullable java.lang.String _energyExchangeNotes) {
    this._energyExchangeNotes = _energyExchangeNotes;
  }

  public void unset_energyExchangeNotes() {
    this._energyExchangeNotes = null;
  }

  /** Returns true if field _energyExchangeNotes is set (has been assigned a value) and false otherwise */
  public boolean isSet_energyExchangeNotes() {
    return this._energyExchangeNotes != null;
  }

  public void set_energyExchangeNotesIsSet(boolean value) {
    if (!value) {
      this._energyExchangeNotes = null;
    }
  }

  public int get_lmEnergyExchangeHourlyCustomersSize() {
    return (this._lmEnergyExchangeHourlyCustomers == null) ? 0 : this._lmEnergyExchangeHourlyCustomers.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<LMEnergyExchangeHourlyCustomer> get_lmEnergyExchangeHourlyCustomersIterator() {
    return (this._lmEnergyExchangeHourlyCustomers == null) ? null : this._lmEnergyExchangeHourlyCustomers.iterator();
  }

  public void addTo_lmEnergyExchangeHourlyCustomers(LMEnergyExchangeHourlyCustomer elem) {
    if (this._lmEnergyExchangeHourlyCustomers == null) {
      this._lmEnergyExchangeHourlyCustomers = new java.util.ArrayList<LMEnergyExchangeHourlyCustomer>();
    }
    this._lmEnergyExchangeHourlyCustomers.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<LMEnergyExchangeHourlyCustomer> get_lmEnergyExchangeHourlyCustomers() {
    return this._lmEnergyExchangeHourlyCustomers;
  }

  public void set_lmEnergyExchangeHourlyCustomers(@org.apache.thrift.annotation.Nullable java.util.List<LMEnergyExchangeHourlyCustomer> _lmEnergyExchangeHourlyCustomers) {
    this._lmEnergyExchangeHourlyCustomers = _lmEnergyExchangeHourlyCustomers;
  }

  public void unset_lmEnergyExchangeHourlyCustomers() {
    this._lmEnergyExchangeHourlyCustomers = null;
  }

  /** Returns true if field _lmEnergyExchangeHourlyCustomers is set (has been assigned a value) and false otherwise */
  public boolean isSet_lmEnergyExchangeHourlyCustomers() {
    return this._lmEnergyExchangeHourlyCustomers != null;
  }

  public void set_lmEnergyExchangeHourlyCustomersIsSet(boolean value) {
    if (!value) {
      this._lmEnergyExchangeHourlyCustomers = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case _CUSTOMER_ID:
      if (value == null) {
        unset_customerId();
      } else {
        set_customerId((java.lang.Integer)value);
      }
      break;

    case _OFFER_ID:
      if (value == null) {
        unset_offerId();
      } else {
        set_offerId((java.lang.Integer)value);
      }
      break;

    case _ACCEPT_STATUS:
      if (value == null) {
        unset_acceptStatus();
      } else {
        set_acceptStatus((java.lang.String)value);
      }
      break;

    case _ACCEPT_DATETIME:
      if (value == null) {
        unset_acceptDatetime();
      } else {
        set_acceptDatetime((java.lang.Long)value);
      }
      break;

    case _REVISION_NUMBER:
      if (value == null) {
        unset_revisionNumber();
      } else {
        set_revisionNumber((java.lang.Integer)value);
      }
      break;

    case _IP_ADDRESS_OF_ACCEPT_USER:
      if (value == null) {
        unset_ipAddressOfAcceptUser();
      } else {
        set_ipAddressOfAcceptUser((java.lang.String)value);
      }
      break;

    case _USER_ID_NAME:
      if (value == null) {
        unset_userIdName();
      } else {
        set_userIdName((java.lang.String)value);
      }
      break;

    case _NAME_OF_ACCEPT_PERSON:
      if (value == null) {
        unset_nameOfAcceptPerson();
      } else {
        set_nameOfAcceptPerson((java.lang.String)value);
      }
      break;

    case _ENERGY_EXCHANGE_NOTES:
      if (value == null) {
        unset_energyExchangeNotes();
      } else {
        set_energyExchangeNotes((java.lang.String)value);
      }
      break;

    case _LM_ENERGY_EXCHANGE_HOURLY_CUSTOMERS:
      if (value == null) {
        unset_lmEnergyExchangeHourlyCustomers();
      } else {
        set_lmEnergyExchangeHourlyCustomers((java.util.List<LMEnergyExchangeHourlyCustomer>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _CUSTOMER_ID:
      return get_customerId();

    case _OFFER_ID:
      return get_offerId();

    case _ACCEPT_STATUS:
      return get_acceptStatus();

    case _ACCEPT_DATETIME:
      return get_acceptDatetime();

    case _REVISION_NUMBER:
      return get_revisionNumber();

    case _IP_ADDRESS_OF_ACCEPT_USER:
      return get_ipAddressOfAcceptUser();

    case _USER_ID_NAME:
      return get_userIdName();

    case _NAME_OF_ACCEPT_PERSON:
      return get_nameOfAcceptPerson();

    case _ENERGY_EXCHANGE_NOTES:
      return get_energyExchangeNotes();

    case _LM_ENERGY_EXCHANGE_HOURLY_CUSTOMERS:
      return get_lmEnergyExchangeHourlyCustomers();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _CUSTOMER_ID:
      return isSet_customerId();
    case _OFFER_ID:
      return isSet_offerId();
    case _ACCEPT_STATUS:
      return isSet_acceptStatus();
    case _ACCEPT_DATETIME:
      return isSet_acceptDatetime();
    case _REVISION_NUMBER:
      return isSet_revisionNumber();
    case _IP_ADDRESS_OF_ACCEPT_USER:
      return isSet_ipAddressOfAcceptUser();
    case _USER_ID_NAME:
      return isSet_userIdName();
    case _NAME_OF_ACCEPT_PERSON:
      return isSet_nameOfAcceptPerson();
    case _ENERGY_EXCHANGE_NOTES:
      return isSet_energyExchangeNotes();
    case _LM_ENERGY_EXCHANGE_HOURLY_CUSTOMERS:
      return isSet_lmEnergyExchangeHourlyCustomers();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof LMEnergyExchangeCustomerReply)
      return this.equals((LMEnergyExchangeCustomerReply)that);
    return false;
  }

  public boolean equals(LMEnergyExchangeCustomerReply that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__customerId = true;
    boolean that_present__customerId = true;
    if (this_present__customerId || that_present__customerId) {
      if (!(this_present__customerId && that_present__customerId))
        return false;
      if (this._customerId != that._customerId)
        return false;
    }

    boolean this_present__offerId = true;
    boolean that_present__offerId = true;
    if (this_present__offerId || that_present__offerId) {
      if (!(this_present__offerId && that_present__offerId))
        return false;
      if (this._offerId != that._offerId)
        return false;
    }

    boolean this_present__acceptStatus = true && this.isSet_acceptStatus();
    boolean that_present__acceptStatus = true && that.isSet_acceptStatus();
    if (this_present__acceptStatus || that_present__acceptStatus) {
      if (!(this_present__acceptStatus && that_present__acceptStatus))
        return false;
      if (!this._acceptStatus.equals(that._acceptStatus))
        return false;
    }

    boolean this_present__acceptDatetime = true;
    boolean that_present__acceptDatetime = true;
    if (this_present__acceptDatetime || that_present__acceptDatetime) {
      if (!(this_present__acceptDatetime && that_present__acceptDatetime))
        return false;
      if (this._acceptDatetime != that._acceptDatetime)
        return false;
    }

    boolean this_present__revisionNumber = true;
    boolean that_present__revisionNumber = true;
    if (this_present__revisionNumber || that_present__revisionNumber) {
      if (!(this_present__revisionNumber && that_present__revisionNumber))
        return false;
      if (this._revisionNumber != that._revisionNumber)
        return false;
    }

    boolean this_present__ipAddressOfAcceptUser = true && this.isSet_ipAddressOfAcceptUser();
    boolean that_present__ipAddressOfAcceptUser = true && that.isSet_ipAddressOfAcceptUser();
    if (this_present__ipAddressOfAcceptUser || that_present__ipAddressOfAcceptUser) {
      if (!(this_present__ipAddressOfAcceptUser && that_present__ipAddressOfAcceptUser))
        return false;
      if (!this._ipAddressOfAcceptUser.equals(that._ipAddressOfAcceptUser))
        return false;
    }

    boolean this_present__userIdName = true && this.isSet_userIdName();
    boolean that_present__userIdName = true && that.isSet_userIdName();
    if (this_present__userIdName || that_present__userIdName) {
      if (!(this_present__userIdName && that_present__userIdName))
        return false;
      if (!this._userIdName.equals(that._userIdName))
        return false;
    }

    boolean this_present__nameOfAcceptPerson = true && this.isSet_nameOfAcceptPerson();
    boolean that_present__nameOfAcceptPerson = true && that.isSet_nameOfAcceptPerson();
    if (this_present__nameOfAcceptPerson || that_present__nameOfAcceptPerson) {
      if (!(this_present__nameOfAcceptPerson && that_present__nameOfAcceptPerson))
        return false;
      if (!this._nameOfAcceptPerson.equals(that._nameOfAcceptPerson))
        return false;
    }

    boolean this_present__energyExchangeNotes = true && this.isSet_energyExchangeNotes();
    boolean that_present__energyExchangeNotes = true && that.isSet_energyExchangeNotes();
    if (this_present__energyExchangeNotes || that_present__energyExchangeNotes) {
      if (!(this_present__energyExchangeNotes && that_present__energyExchangeNotes))
        return false;
      if (!this._energyExchangeNotes.equals(that._energyExchangeNotes))
        return false;
    }

    boolean this_present__lmEnergyExchangeHourlyCustomers = true && this.isSet_lmEnergyExchangeHourlyCustomers();
    boolean that_present__lmEnergyExchangeHourlyCustomers = true && that.isSet_lmEnergyExchangeHourlyCustomers();
    if (this_present__lmEnergyExchangeHourlyCustomers || that_present__lmEnergyExchangeHourlyCustomers) {
      if (!(this_present__lmEnergyExchangeHourlyCustomers && that_present__lmEnergyExchangeHourlyCustomers))
        return false;
      if (!this._lmEnergyExchangeHourlyCustomers.equals(that._lmEnergyExchangeHourlyCustomers))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + _customerId;

    hashCode = hashCode * 8191 + _offerId;

    hashCode = hashCode * 8191 + ((isSet_acceptStatus()) ? 131071 : 524287);
    if (isSet_acceptStatus())
      hashCode = hashCode * 8191 + _acceptStatus.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_acceptDatetime);

    hashCode = hashCode * 8191 + _revisionNumber;

    hashCode = hashCode * 8191 + ((isSet_ipAddressOfAcceptUser()) ? 131071 : 524287);
    if (isSet_ipAddressOfAcceptUser())
      hashCode = hashCode * 8191 + _ipAddressOfAcceptUser.hashCode();

    hashCode = hashCode * 8191 + ((isSet_userIdName()) ? 131071 : 524287);
    if (isSet_userIdName())
      hashCode = hashCode * 8191 + _userIdName.hashCode();

    hashCode = hashCode * 8191 + ((isSet_nameOfAcceptPerson()) ? 131071 : 524287);
    if (isSet_nameOfAcceptPerson())
      hashCode = hashCode * 8191 + _nameOfAcceptPerson.hashCode();

    hashCode = hashCode * 8191 + ((isSet_energyExchangeNotes()) ? 131071 : 524287);
    if (isSet_energyExchangeNotes())
      hashCode = hashCode * 8191 + _energyExchangeNotes.hashCode();

    hashCode = hashCode * 8191 + ((isSet_lmEnergyExchangeHourlyCustomers()) ? 131071 : 524287);
    if (isSet_lmEnergyExchangeHourlyCustomers())
      hashCode = hashCode * 8191 + _lmEnergyExchangeHourlyCustomers.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(LMEnergyExchangeCustomerReply other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSet_customerId()).compareTo(other.isSet_customerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_customerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._customerId, other._customerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_offerId()).compareTo(other.isSet_offerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_offerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._offerId, other._offerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_acceptStatus()).compareTo(other.isSet_acceptStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_acceptStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._acceptStatus, other._acceptStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_acceptDatetime()).compareTo(other.isSet_acceptDatetime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_acceptDatetime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._acceptDatetime, other._acceptDatetime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_revisionNumber()).compareTo(other.isSet_revisionNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_revisionNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._revisionNumber, other._revisionNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_ipAddressOfAcceptUser()).compareTo(other.isSet_ipAddressOfAcceptUser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_ipAddressOfAcceptUser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._ipAddressOfAcceptUser, other._ipAddressOfAcceptUser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_userIdName()).compareTo(other.isSet_userIdName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_userIdName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._userIdName, other._userIdName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_nameOfAcceptPerson()).compareTo(other.isSet_nameOfAcceptPerson());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_nameOfAcceptPerson()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._nameOfAcceptPerson, other._nameOfAcceptPerson);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_energyExchangeNotes()).compareTo(other.isSet_energyExchangeNotes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_energyExchangeNotes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._energyExchangeNotes, other._energyExchangeNotes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_lmEnergyExchangeHourlyCustomers()).compareTo(other.isSet_lmEnergyExchangeHourlyCustomers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lmEnergyExchangeHourlyCustomers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lmEnergyExchangeHourlyCustomers, other._lmEnergyExchangeHourlyCustomers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("LMEnergyExchangeCustomerReply(");
    boolean first = true;

    sb.append("_customerId:");
    sb.append(this._customerId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_offerId:");
    sb.append(this._offerId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_acceptStatus:");
    if (this._acceptStatus == null) {
      sb.append("null");
    } else {
      sb.append(this._acceptStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_acceptDatetime:");
    sb.append(this._acceptDatetime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_revisionNumber:");
    sb.append(this._revisionNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_ipAddressOfAcceptUser:");
    if (this._ipAddressOfAcceptUser == null) {
      sb.append("null");
    } else {
      sb.append(this._ipAddressOfAcceptUser);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_userIdName:");
    if (this._userIdName == null) {
      sb.append("null");
    } else {
      sb.append(this._userIdName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_nameOfAcceptPerson:");
    if (this._nameOfAcceptPerson == null) {
      sb.append("null");
    } else {
      sb.append(this._nameOfAcceptPerson);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_energyExchangeNotes:");
    if (this._energyExchangeNotes == null) {
      sb.append("null");
    } else {
      sb.append(this._energyExchangeNotes);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lmEnergyExchangeHourlyCustomers:");
    if (this._lmEnergyExchangeHourlyCustomers == null) {
      sb.append("null");
    } else {
      sb.append(this._lmEnergyExchangeHourlyCustomers);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_customerId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_customerId' is unset! Struct:" + toString());
    }

    if (!isSet_offerId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_offerId' is unset! Struct:" + toString());
    }

    if (!isSet_acceptStatus()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_acceptStatus' is unset! Struct:" + toString());
    }

    if (!isSet_acceptDatetime()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_acceptDatetime' is unset! Struct:" + toString());
    }

    if (!isSet_revisionNumber()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_revisionNumber' is unset! Struct:" + toString());
    }

    if (!isSet_ipAddressOfAcceptUser()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_ipAddressOfAcceptUser' is unset! Struct:" + toString());
    }

    if (!isSet_userIdName()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_userIdName' is unset! Struct:" + toString());
    }

    if (!isSet_nameOfAcceptPerson()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_nameOfAcceptPerson' is unset! Struct:" + toString());
    }

    if (!isSet_energyExchangeNotes()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_energyExchangeNotes' is unset! Struct:" + toString());
    }

    if (!isSet_lmEnergyExchangeHourlyCustomers()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lmEnergyExchangeHourlyCustomers' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class LMEnergyExchangeCustomerReplyStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMEnergyExchangeCustomerReplyStandardScheme getScheme() {
      return new LMEnergyExchangeCustomerReplyStandardScheme();
    }
  }

  private static class LMEnergyExchangeCustomerReplyStandardScheme extends org.apache.thrift.scheme.StandardScheme<LMEnergyExchangeCustomerReply> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, LMEnergyExchangeCustomerReply struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _CUSTOMER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._customerId = iprot.readI32();
              struct.set_customerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _OFFER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._offerId = iprot.readI32();
              struct.set_offerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _ACCEPT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._acceptStatus = iprot.readString();
              struct.set_acceptStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _ACCEPT_DATETIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._acceptDatetime = iprot.readI64();
              struct.set_acceptDatetimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _REVISION_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._revisionNumber = iprot.readI32();
              struct.set_revisionNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // _IP_ADDRESS_OF_ACCEPT_USER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._ipAddressOfAcceptUser = iprot.readString();
              struct.set_ipAddressOfAcceptUserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // _USER_ID_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._userIdName = iprot.readString();
              struct.set_userIdNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // _NAME_OF_ACCEPT_PERSON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._nameOfAcceptPerson = iprot.readString();
              struct.set_nameOfAcceptPersonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // _ENERGY_EXCHANGE_NOTES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._energyExchangeNotes = iprot.readString();
              struct.set_energyExchangeNotesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // _LM_ENERGY_EXCHANGE_HOURLY_CUSTOMERS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list64 = iprot.readListBegin();
                struct._lmEnergyExchangeHourlyCustomers = new java.util.ArrayList<LMEnergyExchangeHourlyCustomer>(_list64.size);
                @org.apache.thrift.annotation.Nullable LMEnergyExchangeHourlyCustomer _elem65;
                for (int _i66 = 0; _i66 < _list64.size; ++_i66)
                {
                  _elem65 = new LMEnergyExchangeHourlyCustomer();
                  _elem65.read(iprot);
                  struct._lmEnergyExchangeHourlyCustomers.add(_elem65);
                }
                iprot.readListEnd();
              }
              struct.set_lmEnergyExchangeHourlyCustomersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, LMEnergyExchangeCustomerReply struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(_CUSTOMER_ID_FIELD_DESC);
      oprot.writeI32(struct._customerId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_OFFER_ID_FIELD_DESC);
      oprot.writeI32(struct._offerId);
      oprot.writeFieldEnd();
      if (struct._acceptStatus != null) {
        oprot.writeFieldBegin(_ACCEPT_STATUS_FIELD_DESC);
        oprot.writeString(struct._acceptStatus);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_ACCEPT_DATETIME_FIELD_DESC);
      oprot.writeI64(struct._acceptDatetime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_REVISION_NUMBER_FIELD_DESC);
      oprot.writeI32(struct._revisionNumber);
      oprot.writeFieldEnd();
      if (struct._ipAddressOfAcceptUser != null) {
        oprot.writeFieldBegin(_IP_ADDRESS_OF_ACCEPT_USER_FIELD_DESC);
        oprot.writeString(struct._ipAddressOfAcceptUser);
        oprot.writeFieldEnd();
      }
      if (struct._userIdName != null) {
        oprot.writeFieldBegin(_USER_ID_NAME_FIELD_DESC);
        oprot.writeString(struct._userIdName);
        oprot.writeFieldEnd();
      }
      if (struct._nameOfAcceptPerson != null) {
        oprot.writeFieldBegin(_NAME_OF_ACCEPT_PERSON_FIELD_DESC);
        oprot.writeString(struct._nameOfAcceptPerson);
        oprot.writeFieldEnd();
      }
      if (struct._energyExchangeNotes != null) {
        oprot.writeFieldBegin(_ENERGY_EXCHANGE_NOTES_FIELD_DESC);
        oprot.writeString(struct._energyExchangeNotes);
        oprot.writeFieldEnd();
      }
      if (struct._lmEnergyExchangeHourlyCustomers != null) {
        oprot.writeFieldBegin(_LM_ENERGY_EXCHANGE_HOURLY_CUSTOMERS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct._lmEnergyExchangeHourlyCustomers.size()));
          for (LMEnergyExchangeHourlyCustomer _iter67 : struct._lmEnergyExchangeHourlyCustomers)
          {
            _iter67.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class LMEnergyExchangeCustomerReplyTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMEnergyExchangeCustomerReplyTupleScheme getScheme() {
      return new LMEnergyExchangeCustomerReplyTupleScheme();
    }
  }

  private static class LMEnergyExchangeCustomerReplyTupleScheme extends org.apache.thrift.scheme.TupleScheme<LMEnergyExchangeCustomerReply> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, LMEnergyExchangeCustomerReply struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct._customerId);
      oprot.writeI32(struct._offerId);
      oprot.writeString(struct._acceptStatus);
      oprot.writeI64(struct._acceptDatetime);
      oprot.writeI32(struct._revisionNumber);
      oprot.writeString(struct._ipAddressOfAcceptUser);
      oprot.writeString(struct._userIdName);
      oprot.writeString(struct._nameOfAcceptPerson);
      oprot.writeString(struct._energyExchangeNotes);
      {
        oprot.writeI32(struct._lmEnergyExchangeHourlyCustomers.size());
        for (LMEnergyExchangeHourlyCustomer _iter68 : struct._lmEnergyExchangeHourlyCustomers)
        {
          _iter68.write(oprot);
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, LMEnergyExchangeCustomerReply struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._customerId = iprot.readI32();
      struct.set_customerIdIsSet(true);
      struct._offerId = iprot.readI32();
      struct.set_offerIdIsSet(true);
      struct._acceptStatus = iprot.readString();
      struct.set_acceptStatusIsSet(true);
      struct._acceptDatetime = iprot.readI64();
      struct.set_acceptDatetimeIsSet(true);
      struct._revisionNumber = iprot.readI32();
      struct.set_revisionNumberIsSet(true);
      struct._ipAddressOfAcceptUser = iprot.readString();
      struct.set_ipAddressOfAcceptUserIsSet(true);
      struct._userIdName = iprot.readString();
      struct.set_userIdNameIsSet(true);
      struct._nameOfAcceptPerson = iprot.readString();
      struct.set_nameOfAcceptPersonIsSet(true);
      struct._energyExchangeNotes = iprot.readString();
      struct.set_energyExchangeNotesIsSet(true);
      {
        org.apache.thrift.protocol.TList _list69 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct._lmEnergyExchangeHourlyCustomers = new java.util.ArrayList<LMEnergyExchangeHourlyCustomer>(_list69.size);
        @org.apache.thrift.annotation.Nullable LMEnergyExchangeHourlyCustomer _elem70;
        for (int _i71 = 0; _i71 < _list69.size; ++_i71)
        {
          _elem70 = new LMEnergyExchangeHourlyCustomer();
          _elem70.read(iprot);
          struct._lmEnergyExchangeHourlyCustomers.add(_elem70);
        }
      }
      struct.set_lmEnergyExchangeHourlyCustomersIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

