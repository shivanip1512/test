/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.cannontech.messaging.serialization.thrift.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-09-24")
public class LMEnergyExchangeOffer implements org.apache.thrift.TBase<LMEnergyExchangeOffer, LMEnergyExchangeOffer._Fields>, java.io.Serializable, Cloneable, Comparable<LMEnergyExchangeOffer> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("LMEnergyExchangeOffer");

  private static final org.apache.thrift.protocol.TField _PAO_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_paoId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField _OFFER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("_offerId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField _RUN_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("_runStatus", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField _OFFER_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("_offerDate", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField _LM_ENERGY_EXCHANGE_OFFER_REVISIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("_lmEnergyExchangeOfferRevisions", org.apache.thrift.protocol.TType.LIST, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new LMEnergyExchangeOfferStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new LMEnergyExchangeOfferTupleSchemeFactory();

  private int _paoId; // required
  private int _offerId; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String _runStatus; // required
  private long _offerDate; // required
  private @org.apache.thrift.annotation.Nullable java.util.List<LMEnergyExchangeOfferRevision> _lmEnergyExchangeOfferRevisions; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    _PAO_ID((short)1, "_paoId"),
    _OFFER_ID((short)2, "_offerId"),
    _RUN_STATUS((short)3, "_runStatus"),
    _OFFER_DATE((short)4, "_offerDate"),
    _LM_ENERGY_EXCHANGE_OFFER_REVISIONS((short)5, "_lmEnergyExchangeOfferRevisions");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // _PAO_ID
          return _PAO_ID;
        case 2: // _OFFER_ID
          return _OFFER_ID;
        case 3: // _RUN_STATUS
          return _RUN_STATUS;
        case 4: // _OFFER_DATE
          return _OFFER_DATE;
        case 5: // _LM_ENERGY_EXCHANGE_OFFER_REVISIONS
          return _LM_ENERGY_EXCHANGE_OFFER_REVISIONS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int ___PAOID_ISSET_ID = 0;
  private static final int ___OFFERID_ISSET_ID = 1;
  private static final int ___OFFERDATE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields._PAO_ID, new org.apache.thrift.meta_data.FieldMetaData("_paoId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._OFFER_ID, new org.apache.thrift.meta_data.FieldMetaData("_offerId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields._RUN_STATUS, new org.apache.thrift.meta_data.FieldMetaData("_runStatus", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields._OFFER_DATE, new org.apache.thrift.meta_data.FieldMetaData("_offerDate", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "Timestamp")));
    tmpMap.put(_Fields._LM_ENERGY_EXCHANGE_OFFER_REVISIONS, new org.apache.thrift.meta_data.FieldMetaData("_lmEnergyExchangeOfferRevisions", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, LMEnergyExchangeOfferRevision.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(LMEnergyExchangeOffer.class, metaDataMap);
  }

  public LMEnergyExchangeOffer() {
  }

  public LMEnergyExchangeOffer(
    int _paoId,
    int _offerId,
    java.lang.String _runStatus,
    long _offerDate,
    java.util.List<LMEnergyExchangeOfferRevision> _lmEnergyExchangeOfferRevisions)
  {
    this();
    this._paoId = _paoId;
    set_paoIdIsSet(true);
    this._offerId = _offerId;
    set_offerIdIsSet(true);
    this._runStatus = _runStatus;
    this._offerDate = _offerDate;
    set_offerDateIsSet(true);
    this._lmEnergyExchangeOfferRevisions = _lmEnergyExchangeOfferRevisions;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public LMEnergyExchangeOffer(LMEnergyExchangeOffer other) {
    __isset_bitfield = other.__isset_bitfield;
    this._paoId = other._paoId;
    this._offerId = other._offerId;
    if (other.isSet_runStatus()) {
      this._runStatus = other._runStatus;
    }
    this._offerDate = other._offerDate;
    if (other.isSet_lmEnergyExchangeOfferRevisions()) {
      java.util.List<LMEnergyExchangeOfferRevision> __this___lmEnergyExchangeOfferRevisions = new java.util.ArrayList<LMEnergyExchangeOfferRevision>(other._lmEnergyExchangeOfferRevisions.size());
      for (LMEnergyExchangeOfferRevision other_element : other._lmEnergyExchangeOfferRevisions) {
        __this___lmEnergyExchangeOfferRevisions.add(new LMEnergyExchangeOfferRevision(other_element));
      }
      this._lmEnergyExchangeOfferRevisions = __this___lmEnergyExchangeOfferRevisions;
    }
  }

  public LMEnergyExchangeOffer deepCopy() {
    return new LMEnergyExchangeOffer(this);
  }

  @Override
  public void clear() {
    set_paoIdIsSet(false);
    this._paoId = 0;
    set_offerIdIsSet(false);
    this._offerId = 0;
    this._runStatus = null;
    set_offerDateIsSet(false);
    this._offerDate = 0;
    this._lmEnergyExchangeOfferRevisions = null;
  }

  public int get_paoId() {
    return this._paoId;
  }

  public void set_paoId(int _paoId) {
    this._paoId = _paoId;
    set_paoIdIsSet(true);
  }

  public void unset_paoId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___PAOID_ISSET_ID);
  }

  /** Returns true if field _paoId is set (has been assigned a value) and false otherwise */
  public boolean isSet_paoId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___PAOID_ISSET_ID);
  }

  public void set_paoIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___PAOID_ISSET_ID, value);
  }

  public int get_offerId() {
    return this._offerId;
  }

  public void set_offerId(int _offerId) {
    this._offerId = _offerId;
    set_offerIdIsSet(true);
  }

  public void unset_offerId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___OFFERID_ISSET_ID);
  }

  /** Returns true if field _offerId is set (has been assigned a value) and false otherwise */
  public boolean isSet_offerId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___OFFERID_ISSET_ID);
  }

  public void set_offerIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___OFFERID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String get_runStatus() {
    return this._runStatus;
  }

  public void set_runStatus(@org.apache.thrift.annotation.Nullable java.lang.String _runStatus) {
    this._runStatus = _runStatus;
  }

  public void unset_runStatus() {
    this._runStatus = null;
  }

  /** Returns true if field _runStatus is set (has been assigned a value) and false otherwise */
  public boolean isSet_runStatus() {
    return this._runStatus != null;
  }

  public void set_runStatusIsSet(boolean value) {
    if (!value) {
      this._runStatus = null;
    }
  }

  public long get_offerDate() {
    return this._offerDate;
  }

  public void set_offerDate(long _offerDate) {
    this._offerDate = _offerDate;
    set_offerDateIsSet(true);
  }

  public void unset_offerDate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, ___OFFERDATE_ISSET_ID);
  }

  /** Returns true if field _offerDate is set (has been assigned a value) and false otherwise */
  public boolean isSet_offerDate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, ___OFFERDATE_ISSET_ID);
  }

  public void set_offerDateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, ___OFFERDATE_ISSET_ID, value);
  }

  public int get_lmEnergyExchangeOfferRevisionsSize() {
    return (this._lmEnergyExchangeOfferRevisions == null) ? 0 : this._lmEnergyExchangeOfferRevisions.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<LMEnergyExchangeOfferRevision> get_lmEnergyExchangeOfferRevisionsIterator() {
    return (this._lmEnergyExchangeOfferRevisions == null) ? null : this._lmEnergyExchangeOfferRevisions.iterator();
  }

  public void addTo_lmEnergyExchangeOfferRevisions(LMEnergyExchangeOfferRevision elem) {
    if (this._lmEnergyExchangeOfferRevisions == null) {
      this._lmEnergyExchangeOfferRevisions = new java.util.ArrayList<LMEnergyExchangeOfferRevision>();
    }
    this._lmEnergyExchangeOfferRevisions.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<LMEnergyExchangeOfferRevision> get_lmEnergyExchangeOfferRevisions() {
    return this._lmEnergyExchangeOfferRevisions;
  }

  public void set_lmEnergyExchangeOfferRevisions(@org.apache.thrift.annotation.Nullable java.util.List<LMEnergyExchangeOfferRevision> _lmEnergyExchangeOfferRevisions) {
    this._lmEnergyExchangeOfferRevisions = _lmEnergyExchangeOfferRevisions;
  }

  public void unset_lmEnergyExchangeOfferRevisions() {
    this._lmEnergyExchangeOfferRevisions = null;
  }

  /** Returns true if field _lmEnergyExchangeOfferRevisions is set (has been assigned a value) and false otherwise */
  public boolean isSet_lmEnergyExchangeOfferRevisions() {
    return this._lmEnergyExchangeOfferRevisions != null;
  }

  public void set_lmEnergyExchangeOfferRevisionsIsSet(boolean value) {
    if (!value) {
      this._lmEnergyExchangeOfferRevisions = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case _PAO_ID:
      if (value == null) {
        unset_paoId();
      } else {
        set_paoId((java.lang.Integer)value);
      }
      break;

    case _OFFER_ID:
      if (value == null) {
        unset_offerId();
      } else {
        set_offerId((java.lang.Integer)value);
      }
      break;

    case _RUN_STATUS:
      if (value == null) {
        unset_runStatus();
      } else {
        set_runStatus((java.lang.String)value);
      }
      break;

    case _OFFER_DATE:
      if (value == null) {
        unset_offerDate();
      } else {
        set_offerDate((java.lang.Long)value);
      }
      break;

    case _LM_ENERGY_EXCHANGE_OFFER_REVISIONS:
      if (value == null) {
        unset_lmEnergyExchangeOfferRevisions();
      } else {
        set_lmEnergyExchangeOfferRevisions((java.util.List<LMEnergyExchangeOfferRevision>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case _PAO_ID:
      return get_paoId();

    case _OFFER_ID:
      return get_offerId();

    case _RUN_STATUS:
      return get_runStatus();

    case _OFFER_DATE:
      return get_offerDate();

    case _LM_ENERGY_EXCHANGE_OFFER_REVISIONS:
      return get_lmEnergyExchangeOfferRevisions();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case _PAO_ID:
      return isSet_paoId();
    case _OFFER_ID:
      return isSet_offerId();
    case _RUN_STATUS:
      return isSet_runStatus();
    case _OFFER_DATE:
      return isSet_offerDate();
    case _LM_ENERGY_EXCHANGE_OFFER_REVISIONS:
      return isSet_lmEnergyExchangeOfferRevisions();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof LMEnergyExchangeOffer)
      return this.equals((LMEnergyExchangeOffer)that);
    return false;
  }

  public boolean equals(LMEnergyExchangeOffer that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present__paoId = true;
    boolean that_present__paoId = true;
    if (this_present__paoId || that_present__paoId) {
      if (!(this_present__paoId && that_present__paoId))
        return false;
      if (this._paoId != that._paoId)
        return false;
    }

    boolean this_present__offerId = true;
    boolean that_present__offerId = true;
    if (this_present__offerId || that_present__offerId) {
      if (!(this_present__offerId && that_present__offerId))
        return false;
      if (this._offerId != that._offerId)
        return false;
    }

    boolean this_present__runStatus = true && this.isSet_runStatus();
    boolean that_present__runStatus = true && that.isSet_runStatus();
    if (this_present__runStatus || that_present__runStatus) {
      if (!(this_present__runStatus && that_present__runStatus))
        return false;
      if (!this._runStatus.equals(that._runStatus))
        return false;
    }

    boolean this_present__offerDate = true;
    boolean that_present__offerDate = true;
    if (this_present__offerDate || that_present__offerDate) {
      if (!(this_present__offerDate && that_present__offerDate))
        return false;
      if (this._offerDate != that._offerDate)
        return false;
    }

    boolean this_present__lmEnergyExchangeOfferRevisions = true && this.isSet_lmEnergyExchangeOfferRevisions();
    boolean that_present__lmEnergyExchangeOfferRevisions = true && that.isSet_lmEnergyExchangeOfferRevisions();
    if (this_present__lmEnergyExchangeOfferRevisions || that_present__lmEnergyExchangeOfferRevisions) {
      if (!(this_present__lmEnergyExchangeOfferRevisions && that_present__lmEnergyExchangeOfferRevisions))
        return false;
      if (!this._lmEnergyExchangeOfferRevisions.equals(that._lmEnergyExchangeOfferRevisions))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + _paoId;

    hashCode = hashCode * 8191 + _offerId;

    hashCode = hashCode * 8191 + ((isSet_runStatus()) ? 131071 : 524287);
    if (isSet_runStatus())
      hashCode = hashCode * 8191 + _runStatus.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(_offerDate);

    hashCode = hashCode * 8191 + ((isSet_lmEnergyExchangeOfferRevisions()) ? 131071 : 524287);
    if (isSet_lmEnergyExchangeOfferRevisions())
      hashCode = hashCode * 8191 + _lmEnergyExchangeOfferRevisions.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(LMEnergyExchangeOffer other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSet_paoId()).compareTo(other.isSet_paoId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_paoId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._paoId, other._paoId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_offerId()).compareTo(other.isSet_offerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_offerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._offerId, other._offerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_runStatus()).compareTo(other.isSet_runStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_runStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._runStatus, other._runStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_offerDate()).compareTo(other.isSet_offerDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_offerDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._offerDate, other._offerDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSet_lmEnergyExchangeOfferRevisions()).compareTo(other.isSet_lmEnergyExchangeOfferRevisions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSet_lmEnergyExchangeOfferRevisions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this._lmEnergyExchangeOfferRevisions, other._lmEnergyExchangeOfferRevisions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("LMEnergyExchangeOffer(");
    boolean first = true;

    sb.append("_paoId:");
    sb.append(this._paoId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_offerId:");
    sb.append(this._offerId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_runStatus:");
    if (this._runStatus == null) {
      sb.append("null");
    } else {
      sb.append(this._runStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("_offerDate:");
    sb.append(this._offerDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("_lmEnergyExchangeOfferRevisions:");
    if (this._lmEnergyExchangeOfferRevisions == null) {
      sb.append("null");
    } else {
      sb.append(this._lmEnergyExchangeOfferRevisions);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSet_paoId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_paoId' is unset! Struct:" + toString());
    }

    if (!isSet_offerId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_offerId' is unset! Struct:" + toString());
    }

    if (!isSet_runStatus()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_runStatus' is unset! Struct:" + toString());
    }

    if (!isSet_offerDate()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_offerDate' is unset! Struct:" + toString());
    }

    if (!isSet_lmEnergyExchangeOfferRevisions()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field '_lmEnergyExchangeOfferRevisions' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class LMEnergyExchangeOfferStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMEnergyExchangeOfferStandardScheme getScheme() {
      return new LMEnergyExchangeOfferStandardScheme();
    }
  }

  private static class LMEnergyExchangeOfferStandardScheme extends org.apache.thrift.scheme.StandardScheme<LMEnergyExchangeOffer> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, LMEnergyExchangeOffer struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // _PAO_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._paoId = iprot.readI32();
              struct.set_paoIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // _OFFER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct._offerId = iprot.readI32();
              struct.set_offerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // _RUN_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct._runStatus = iprot.readString();
              struct.set_runStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // _OFFER_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct._offerDate = iprot.readI64();
              struct.set_offerDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // _LM_ENERGY_EXCHANGE_OFFER_REVISIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list56 = iprot.readListBegin();
                struct._lmEnergyExchangeOfferRevisions = new java.util.ArrayList<LMEnergyExchangeOfferRevision>(_list56.size);
                @org.apache.thrift.annotation.Nullable LMEnergyExchangeOfferRevision _elem57;
                for (int _i58 = 0; _i58 < _list56.size; ++_i58)
                {
                  _elem57 = new LMEnergyExchangeOfferRevision();
                  _elem57.read(iprot);
                  struct._lmEnergyExchangeOfferRevisions.add(_elem57);
                }
                iprot.readListEnd();
              }
              struct.set_lmEnergyExchangeOfferRevisionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, LMEnergyExchangeOffer struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(_PAO_ID_FIELD_DESC);
      oprot.writeI32(struct._paoId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(_OFFER_ID_FIELD_DESC);
      oprot.writeI32(struct._offerId);
      oprot.writeFieldEnd();
      if (struct._runStatus != null) {
        oprot.writeFieldBegin(_RUN_STATUS_FIELD_DESC);
        oprot.writeString(struct._runStatus);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(_OFFER_DATE_FIELD_DESC);
      oprot.writeI64(struct._offerDate);
      oprot.writeFieldEnd();
      if (struct._lmEnergyExchangeOfferRevisions != null) {
        oprot.writeFieldBegin(_LM_ENERGY_EXCHANGE_OFFER_REVISIONS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct._lmEnergyExchangeOfferRevisions.size()));
          for (LMEnergyExchangeOfferRevision _iter59 : struct._lmEnergyExchangeOfferRevisions)
          {
            _iter59.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class LMEnergyExchangeOfferTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public LMEnergyExchangeOfferTupleScheme getScheme() {
      return new LMEnergyExchangeOfferTupleScheme();
    }
  }

  private static class LMEnergyExchangeOfferTupleScheme extends org.apache.thrift.scheme.TupleScheme<LMEnergyExchangeOffer> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, LMEnergyExchangeOffer struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct._paoId);
      oprot.writeI32(struct._offerId);
      oprot.writeString(struct._runStatus);
      oprot.writeI64(struct._offerDate);
      {
        oprot.writeI32(struct._lmEnergyExchangeOfferRevisions.size());
        for (LMEnergyExchangeOfferRevision _iter60 : struct._lmEnergyExchangeOfferRevisions)
        {
          _iter60.write(oprot);
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, LMEnergyExchangeOffer struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct._paoId = iprot.readI32();
      struct.set_paoIdIsSet(true);
      struct._offerId = iprot.readI32();
      struct.set_offerIdIsSet(true);
      struct._runStatus = iprot.readString();
      struct.set_runStatusIsSet(true);
      struct._offerDate = iprot.readI64();
      struct.set_offerDateIsSet(true);
      {
        org.apache.thrift.protocol.TList _list61 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct._lmEnergyExchangeOfferRevisions = new java.util.ArrayList<LMEnergyExchangeOfferRevision>(_list61.size);
        @org.apache.thrift.annotation.Nullable LMEnergyExchangeOfferRevision _elem62;
        for (int _i63 = 0; _i63 < _list61.size; ++_i63)
        {
          _elem62 = new LMEnergyExchangeOfferRevision();
          _elem62.read(iprot);
          struct._lmEnergyExchangeOfferRevisions.add(_elem62);
        }
      }
      struct.set_lmEnergyExchangeOfferRevisionsIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

