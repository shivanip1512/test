<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

  <bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
   <property name="dataSource" ref="yukonDataSource"/>
   <property name="annotatedClasses">
     <list>
       <value>com.cannontech.cc.model.Group</value>
       <value>com.cannontech.cc.model.Program</value>
       <value>com.cannontech.cc.model.ProgramType</value>
       <value>com.cannontech.cc.model.AvailableProgramGroup</value>
       <value>com.cannontech.cc.model.GroupCustomerNotif</value>
       <value>com.cannontech.cc.model.CICustomerStub</value>
       <value>com.cannontech.cc.model.CICustomerPointData</value>
       <value>com.cannontech.cc.model.CICustomerPointDataPk</value>
       <value>com.cannontech.cc.model.CurtailmentEvent</value>
       <value>com.cannontech.cc.model.CurtailmentEventNotif</value>
       <value>com.cannontech.cc.model.CurtailmentEventParticipant</value>
       <value>com.cannontech.cc.model.ProgramParameter</value>
       <value>com.cannontech.cc.model.EconomicEvent</value>
       <value>com.cannontech.cc.model.EconomicEventParticipant</value>
       <value>com.cannontech.cc.model.EconomicEventNotif</value>
       <value>com.cannontech.cc.model.EconomicEventParticipantSelection</value>
       <value>com.cannontech.cc.model.EconomicEventParticipantSelectionWindow</value>
       <value>com.cannontech.cc.model.EconomicEventPricing</value>
       <value>com.cannontech.cc.model.EconomicEventPricingWindow</value>
     </list>
   </property>
   <property name="hibernateProperties">
     <props>
       <prop key="hibernate.show_sql">false</prop>
       <prop key="hibernate.cache.use_second_level_cache">false</prop>
     </props>
   </property>
   <property name="eventListeners">
     <map>
       <!-- Install the IdTransferringMergeEventListener which makes hibernate's
            merge() method easier to work with. This implementation is coppied
            from the current Spring 2.0 nightly build (448 to be exact) because
            the version included with 1.2.7 does not support Hibernate 3.1.x). 
            It has no dependencies on any Spring classes.
         -->
       <entry key="merge">
         <bean class="com.cannontech.hibernate.IdTransferringMergeEventListener" />
       </entry>
     </map>
   </property>
  </bean>
  
  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory"><ref local="hibernateSessionFactory"/></property>
    <property name="dataSource"><ref bean="yukonDataSource"/></property>
  </bean>
  
  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <constructor-arg ref="transactionManager" index="0"/>
  </bean>
  
  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
  
  <bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
    <constructor-arg ref="txInterceptor"/>
  </bean>
  
  <bean id="txInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
    <property name="transactionManager" ref="transactionManager"/>
    <property name="transactionAttributeSource">
      <bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
    </property>
  </bean>
  
</beans>
