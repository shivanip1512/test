<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

    <bean id="authenticationService" class="com.cannontech.core.authentication.service.impl.AuthenticationServiceImpl">
      <property name="providerMap">
        <map>
          <entry key="PLAIN" value-ref="localPlainAuthentication"/>
          <entry key="HASH_SHA" value-ref="localShaAuthentication"/>
          <entry key="RADIUS" value-ref="radiusLoginProvider"/>
          <entry key="NONE" value-ref="nullAuthentication"/>
          <entry key="AD" value-ref="ADAuthentication"/>
          <entry key="LDAP" value-ref="ldapAuthentication"/>
        </map>
      </property>
      <property name="yukonUserDao" ref="yukonUserDao"/>
    </bean>
    
    <bean id="yukonUserPasswordDao" class="com.cannontech.core.authentication.dao.impl.YukonUserPasswordDaoImpl">
      <property name="template" ref="simpleJdbcTemplate"/>
    </bean>
    
    <bean id="localPlainAuthentication" class="com.cannontech.core.authentication.service.impl.LocalPlainAuthenticationService">
      <property name="yukonUserPasswordDao" ref="yukonUserPasswordDao"/>
    </bean>
    
    <bean id="localShaAuthentication" class="com.cannontech.core.authentication.service.impl.LocalHashAuthenticationService">
      <property name="yukonUserPasswordDao" ref="yukonUserPasswordDao"/>
      <property name="passwordHasher">
        <bean class="com.cannontech.core.authentication.service.impl.YukonPasswordHasher">
          <constructor-arg value="SHA"/>
        </bean>
      </property>
    </bean>
    
    <bean id="simpleMD5Hasher" class="com.cannontech.core.authentication.service.impl.SimpleMessageDigestHasher">
        <constructor-arg value="MD5"/>
    </bean>
    
    <!--  Allow startup when radius library is missing by using a proxy bean -->
    <bean id="radiusLoginProvider" class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="targetSource">
        <bean class="org.springframework.aop.target.LazyInitTargetSource">
           <property name="targetBeanName"><idref local="radiusLoginProviderTarget"/></property>
        </bean>
      </property>
    </bean>
     
     <bean id="radiusLoginProviderTarget" class="com.cannontech.common.login.radius.RadiusLogin" lazy-init="true">
      <property name="roleDao" ref="roleDao"/>
    </bean>
    
    <bean id="nullAuthentication" class="com.cannontech.core.authentication.service.impl.NullAuthenticationService">
    </bean>
    
    <bean id="ldapService" class="com.cannontech.common.login.ldap.LDAPService"/>
    
    <bean id="ADAuthentication" class="com.cannontech.common.login.ldap.impl.LDAPADLogin">
    	<property name="roleDao" ref="roleDao"/>
    	<property name="ldapService" ref="ldapService"/>
    </bean>
    
    <bean id="ldapAuthentication" class="com.cannontech.common.login.ldap.impl.LDAPX500Login">
    	<property name="roleDao" ref="roleDao"/>
    	<property name="ldapService" ref="ldapService"/>
    </bean>
    
    <bean id="cryptoService" class="com.cannontech.core.authentication.service.impl.CryptoServiceImpl"/>
    
</beans>

