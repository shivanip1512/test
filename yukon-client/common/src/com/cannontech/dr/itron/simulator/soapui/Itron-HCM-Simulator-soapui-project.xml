<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="5fb7b46e-c776-4b83-ab9b-13abfc18642e" activeEnvironment="Default" name="Itron HCM Simulator" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="fb529acd-ac45-4608-8f9b-9df6e418f5e7" wsaVersion="NONE" name="DeviceManagerSoapBinding" type="wsdl" bindingName="{urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager}DeviceManagerSoapBinding" soapVersion="1_1" anonymous="optional" definition="P:/Itron WSDL Files/wsdls/wsdls/2.3/DeviceManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/DeviceManager.wsdl"><con:part><con:url>file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/DeviceManager.wsdl</con:url><con:content><![CDATA[<!--root element wsdl:definitions defines set of related services-->
<wsdl:definitions name="DeviceManager" targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager" xmlns:basicxsd="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" xmlns:dm="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager" xmlns:dmxsd="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.wsdl" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.wsdl">
      <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd" schemaLocation="./DeviceManagerTypes_v1_8.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ActivateESIHANRadioRequest">
    <wsdl:part name="body" element="dmxsd:ActivateESIHANRadioRequest"/>
  </wsdl:message>
  <wsdl:message name="ActivateESIHANRadioResponse">
    <wsdl:part name="body" element="dmxsd:ActivateESIHANRadioResponse"/>
  </wsdl:message>
  <wsdl:message name="AddESIGroupRequest">
    <wsdl:part name="body" element="dmxsd:AddESIGroupRequest"/>
  </wsdl:message>
  <wsdl:message name="AddESIGroupResponse">
    <wsdl:part name="body" element="dmxsd:AddESIGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="AddHANDeviceRequest">
    <wsdl:part name="body" element="dmxsd:AddHANDeviceRequest"/>
  </wsdl:message>
  <wsdl:message name="AddHANDeviceResponse">
    <wsdl:part name="body" element="dmxsd:AddHANDeviceResponse"/>
  </wsdl:message>
  <wsdl:message name="EditESIGroupRequest">
    <wsdl:part name="body" element="dmxsd:EditESIGroupRequest"/>
  </wsdl:message>
  <wsdl:message name="EditESIGroupResponse">
    <wsdl:part name="body" element="dmxsd:EditESIGroupResponse"/>
  </wsdl:message>
  <wsdl:message name="EditHANDeviceRequest">
    <wsdl:part name="body" element="dmxsd:EditHANDeviceRequest"/>
  </wsdl:message>
  <wsdl:message name="EditHANDeviceResponse">
    <wsdl:part name="body" element="dmxsd:EditHANDeviceResponse"/>
  </wsdl:message>
  <wsdl:message name="ErrorFault">
    <wsdl:part name="fault" element="basicxsd:ErrorFault"/>
  </wsdl:message>
  <wsdl:message name="FindESIRequest">
    <wsdl:part name="body" element="dmxsd:FindESIRequest"/>
  </wsdl:message>
  <wsdl:message name="FindESIResponse">
    <wsdl:part name="body" element="dmxsd:FindESIResponse"/>
  </wsdl:message>
  <wsdl:message name="FindHANDeviceRequest">
    <wsdl:part name="body" element="dmxsd:FindHANDeviceRequest"/>
  </wsdl:message>
  <wsdl:message name="FindHANDeviceResponse">
    <wsdl:part name="body" element="dmxsd:FindHANDeviceResponse"/>
  </wsdl:message>
  <wsdl:message name="GetActivateESIHANRadioCommandStatusRequest">
    <wsdl:part name="body" element="dmxsd:GetActivateESIHANRadioCommandStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="GetActivateESIHANRadioCommandStatusResponse">
    <wsdl:part name="body" element="dmxsd:GetActivateESIHANRadioCommandStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="GetESIGroupMembersRequest">
    <wsdl:part name="body" element="dmxsd:GetESIGroupMembersRequest"/>
  </wsdl:message>
  <wsdl:message name="GetESIGroupMembersResponse">
    <wsdl:part name="body" element="dmxsd:GetESIGroupMembersResponse"/>
  </wsdl:message>
  <wsdl:message name="GetESISyncStatusRequest">
    <wsdl:part name="body" element="dmxsd:GetESISyncStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="GetESISyncStatusResponse">
    <wsdl:part name="body" element="dmxsd:GetESISyncStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="GetJobStatusRequest">
    <wsdl:part name="body" element="dmxsd:GetJobStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="GetJobStatusResponse">
    <wsdl:part name="body" element="dmxsd:GetJobStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="GetPCTStateRequest">
    <wsdl:part name="body" element="dmxsd:GetPCTStateRequest"/>
  </wsdl:message>
  <wsdl:message name="GetPCTStateResponse">
    <wsdl:part name="body" element="dmxsd:GetPCTStateResponse"/>
  </wsdl:message>
  <wsdl:message name="GetPingHANDeviceStatusRequest">
    <wsdl:part name="body" element="dmxsd:GetPingHANDeviceStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="GetPingHANDeviceStatusResponse">
    <wsdl:part name="body" element="dmxsd:GetPingHANDeviceStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="GetProvisionHANDeviceCommandStatusRequest">
    <wsdl:part name="body" element="dmxsd:GetProvisionHANDeviceCommandStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="GetProvisionHANDeviceCommandStatusResponse">
    <wsdl:part name="body" element="dmxsd:GetProvisionHANDeviceCommandStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="ListHANDevicesRequest">
    <wsdl:part name="body" element="dmxsd:ListHANDevicesRequest"/>
  </wsdl:message>
  <wsdl:message name="ListHANDevicesResponse">
    <wsdl:part name="body" element="dmxsd:ListHANDevicesResponse"/>
  </wsdl:message>
  <wsdl:message name="PingHANDeviceRequest">
    <wsdl:part name="body" element="dmxsd:PingHANDeviceRequest"/>
  </wsdl:message>
  <wsdl:message name="PingHANDeviceResponse">
    <wsdl:part name="body" element="dmxsd:PingHANDeviceResponse"/>
  </wsdl:message>
  <wsdl:message name="ProvisionHANDeviceRequest">
    <wsdl:part name="body" element="dmxsd:ProvisionHANDeviceRequest"/>
  </wsdl:message>
  <wsdl:message name="ProvisionHANDeviceResponse">
    <wsdl:part name="body" element="dmxsd:ProvisionHANDeviceResponse"/>
  </wsdl:message>
  <wsdl:message name="SetPCTStateRequest">
    <wsdl:part name="body" element="dmxsd:SetPCTStateRequest"/>
  </wsdl:message>
  <wsdl:message name="SetILCORequest">
    <wsdl:part name="body" element="dmxsd:SetILCORequest"/>
  </wsdl:message>
  <wsdl:message name="SetILCOResponse">
    <wsdl:part name="body" element="dmxsd:SetILCOResponse"/>
  </wsdl:message>
  <wsdl:message name="SetPCTStateResponse">
    <wsdl:part name="body" element="dmxsd:SetPCTStateResponse"/>
  </wsdl:message>
  <wsdl:message name="SyncESIRequest">
    <wsdl:part name="body" element="dmxsd:SyncESIRequest"/>
  </wsdl:message>
  <wsdl:message name="SyncESIResponse">
    <wsdl:part name="body" element="dmxsd:SyncESIResponse"/>
  </wsdl:message>
  <wsdl:message name="UnprovisionHANDeviceRequest">
    <wsdl:part name="body" element="dmxsd:UnprovisionHANDeviceRequest"/>
  </wsdl:message>
  <wsdl:message name="UpdateDeviceEventLogsRequest">
    <wsdl:part name="body" element="dmxsd:UpdateDeviceEventLogsRequest"/>
  </wsdl:message>
  <wsdl:message name="UpdateDeviceEventLogsResponse">
    <wsdl:part name="body" element="dmxsd:UpdateDeviceEventLogsResponse"/>
  </wsdl:message>
  <wsdl:portType name="DeviceManagerPortType">
    <wsdl:operation name="activateESIHANRadio">
      <wsdl:input message="dm:ActivateESIHANRadioRequest"/>
      <wsdl:output message="dm:ActivateESIHANRadioResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="addESIGroup">
      <wsdl:input message="dm:AddESIGroupRequest"/>
      <wsdl:output message="dm:AddESIGroupResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="addHANDevice">
      <wsdl:input message="dm:AddHANDeviceRequest"/>
      <wsdl:output message="dm:AddHANDeviceResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="editESIGroup">
      <wsdl:input message="dm:EditESIGroupRequest"/>
      <wsdl:output message="dm:EditESIGroupResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="editHANDevice">
      <wsdl:input message="dm:EditHANDeviceRequest"/>
      <wsdl:output message="dm:EditHANDeviceResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="findESI">
      <wsdl:input message="dm:FindESIRequest"/>
      <wsdl:output message="dm:FindESIResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="findHANDevice">
      <wsdl:input message="dm:FindHANDeviceRequest"/>
      <wsdl:output message="dm:FindHANDeviceResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getActivateESIHANRadioCommandStatus">
      <wsdl:input message="dm:GetActivateESIHANRadioCommandStatusRequest"/>
      <wsdl:output message="dm:GetActivateESIHANRadioCommandStatusResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getESIGroupMembers">
      <wsdl:input message="dm:GetESIGroupMembersRequest"/>
      <wsdl:output message="dm:GetESIGroupMembersResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getJobStatus">
      <wsdl:input message="dm:GetJobStatusRequest"/>
      <wsdl:output message="dm:GetJobStatusResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getPCTState">
      <wsdl:input message="dm:GetPCTStateRequest"/>
      <wsdl:output message="dm:GetPCTStateResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getPingHANDeviceStatus">
      <wsdl:input message="dm:GetPingHANDeviceStatusRequest"/>
      <wsdl:output message="dm:GetPingHANDeviceStatusResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getProvisionHANDeviceCommandStatus">
      <wsdl:input message="dm:GetProvisionHANDeviceCommandStatusRequest"/>
      <wsdl:output message="dm:GetProvisionHANDeviceCommandStatusResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getESISyncStatus">
      <wsdl:input message="dm:GetESISyncStatusRequest"/>
      <wsdl:output message="dm:GetESISyncStatusResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="listHANDevices">
      <wsdl:input message="dm:ListHANDevicesRequest"/>
      <wsdl:output message="dm:ListHANDevicesResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="pingHANDevice">
      <wsdl:input message="dm:PingHANDeviceRequest"/>
      <wsdl:output message="dm:PingHANDeviceResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="provisionHANDevice">
      <wsdl:input message="dm:ProvisionHANDeviceRequest"/>
      <wsdl:output message="dm:ProvisionHANDeviceResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="setILCO">
      <wsdl:input message="dm:SetILCORequest"/>
      <wsdl:output message="dm:SetILCOResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="setPCTState">
      <wsdl:input message="dm:SetPCTStateRequest"/>
      <wsdl:output message="dm:SetPCTStateResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="syncESI">
      <wsdl:input message="dm:SyncESIRequest"/>
      <wsdl:output message="dm:SyncESIResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="unprovisionHANDevice">
      <wsdl:input message="dm:UnprovisionHANDeviceRequest"/>
      <wsdl:output message="dm:ProvisionHANDeviceResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="updateDeviceEventLogs">
      <wsdl:input message="dm:UpdateDeviceEventLogsRequest"/>
      <wsdl:output message="dm:UpdateDeviceEventLogsResponse"/>
      <wsdl:fault name="ErrorFault" message="dm:ErrorFault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DeviceManagerSoapBinding" type="dm:DeviceManagerPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="activateESIHANRadio">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addESIGroup">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addHANDevice">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editESIGroup">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editHANDevice">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findESI">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findHANDevice">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActivateESIHANRadioCommandStatus">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getESIGroupMembers">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getESISyncStatus">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getJobStatus">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPCTState">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPingHANDeviceStatus">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProvisionHANDeviceCommandStatus">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listHANDevices">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pingHANDevice">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="provisionHANDevice">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setILCO">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPCTState">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="syncESI">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unprovisionHANDevice">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateDeviceEventLogs">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DeviceManagerService">
    <wsdl:documentation>Itron Device Manager Service</wsdl:documentation>
    <wsdl:port name="DeviceManagerPort" binding="dm:DeviceManagerSoapBinding">
      <soap:address location="https://localhost:8080/drm/services/v1_8/DeviceManagerPort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\DeviceManagerTypes_v1_8.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd" xmlns:basic="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" xmlns:location="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd">
  <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" schemaLocation="BasicTypes_v1_1.xsd"/>
  <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd" schemaLocation="LocationTypes_v1_0.xsd"/>
  <!--global element definitions that correspond to the message documents-->
  <xsd:element name="ActivateESIHANRadioRequest" type="ActivateESIHANRadioRequestType"/>
  <xsd:element name="ActivateESIHANRadioResponse" type="ActivateESIHANRadioResponseType"/>
  <xsd:element name="AddESIGroupRequest" type="ESIGroupRequestType"/>
  <xsd:element name="AddESIGroupResponse" type="ESIGroupResponseType"/>
  <xsd:element name="AddHANDeviceRequest" type="AddHANDeviceRequestType"/>
  <xsd:element name="AddHANDeviceResponse" type="AddHANDeviceResponseType"/>
  <xsd:element name="EditESIGroupRequest" type="ESIGroupRequestType"/>
  <xsd:element name="EditESIGroupResponse" type="ESIGroupResponseType"/>
  <xsd:element name="EditHANDeviceRequest" type="EditHANDeviceRequestType"/>
  <xsd:element name="EditHANDeviceResponse" type="EditHANDeviceResponseType"/>
  <xsd:element name="FindESIRequest" type="FindESIRequestType"/>
  <xsd:element name="FindESIResponse" type="FindDeviceResponseType"/>
  <xsd:element name="FindHANDeviceRequest" type="FindHANDeviceRequestType"/>
  <xsd:element name="FindHANDeviceResponse" type="FindDeviceResponseType"/>
  <xsd:element name="GetActivateESIHANRadioCommandStatusRequest" type="GetActivateESIHANRadioCommandStatusRequestType"/>
  <xsd:element name="GetActivateESIHANRadioCommandStatusResponse" type="GetActivateESIHANRadioCommandStatusResponseType"/>
  <xsd:element name="GetESIGroupMembersRequest" type="GetESIGroupMembersRequestType"/>
  <xsd:element name="GetESIGroupMembersResponse" type="GetESIGroupMembersResponseType"/>
  <xsd:element name="GetESISyncStatusRequest" type="GetESISyncStatusRequestType"/>
  <xsd:element name="GetESISyncStatusResponse" type="GetESISyncStatusResponseType"/>
  <xsd:element name="GetJobStatusRequest" type="GetJobStatusRequestType"/>
  <xsd:element name="GetJobStatusResponse" type="GetJobStatusResponseType"/>
  <xsd:element name="GetPCTStateRequest" type="GetPCTStateRequestType"/>
  <xsd:element name="GetPCTStateResponse" type="GetPCTStateResponseType"/>
  <xsd:element name="GetPingHANDeviceStatusRequest" type="GetPingHANDeviceStatusRequestType"/>
  <xsd:element name="GetPingHANDeviceStatusResponse" type="GetPingHANDeviceStatusResponseType"/>
  <xsd:element name="GetProvisionHANDeviceCommandStatusRequest" type="GetProvisionHANDeviceCommandStatusRequestType"/>
  <xsd:element name="GetProvisionHANDeviceCommandStatusResponse" type="GetProvisionHANDeviceCommandStatusResponseType"/>
  <xsd:element name="ListHANDevicesRequest" type="ListHANDevicesRequestType"/>
  <xsd:element name="ListHANDevicesResponse" type="ListHANDevicesResponseType"/>
  <xsd:element name="PingHANDeviceRequest" type="PingHANDeviceRequestType"/>
  <xsd:element name="PingHANDeviceResponse" type="PingHANDeviceResponseType"/>
  <xsd:element name="ProvisionHANDeviceRequest" type="ProvisionHANDeviceRequestType"/>
  <xsd:element name="ProvisionHANDeviceResponse" type="ProvisionHANDeviceResponseType"/>
  <xsd:element name="SetILCORequest" type="SetILCORequestType"/>
  <xsd:element name="SetILCOResponse" type="SetILCOResponseType"/>
  <xsd:element name="SetPCTStateRequest" type="SetPCTStateRequestType"/>
  <xsd:element name="SetPCTStateResponse" type="SetPCTStateResponseType"/>
  <xsd:element name="SyncESIRequest" type="SyncESIRequestType"/>
  <xsd:element name="SyncESIResponse" type="SyncESIResponseType"/>
  <xsd:element name="UnprovisionHANDeviceRequest" type="UnprovisionHANDeviceRequestType"/>
  <xsd:element name="UpdateDeviceEventLogsRequest" type="UpdateDeviceEventLogsRequestType"/>
  <xsd:element name="UpdateDeviceEventLogsResponse" type="UpdateDeviceEventLogsResponseType"/>
  <!--Complex Types in alphabetical order-->
  <xsd:complexType name="ActivateESIHANRadioRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    macID.Pattern.message
                    MACAddress.deviceManager.addressIsNotESI</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ESIMacID" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ActivateESIHANRadioResponseType">
    <xsd:sequence>
      <xsd:element name="ActivateESIHANRadioCommandID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddD2GAttributeType">
    <xsd:sequence>
      <xsd:element name="ESI" type="ESIType"/>
      <xsd:element name="ServicePointUtilID" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddHANDeviceRequestType">
    <xsd:complexContent>
      <xsd:extension base="HANDeviceType">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="ZigbeeAttributes" type="AddZigbeeAttributeType"/>
            <xsd:element name="D2GAttributes" type="AddD2GAttributeType"/>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddHANDeviceResponseType">
    <xsd:sequence>
      <xsd:element name="MacID" type="xsd:string"/>
      <xsd:element name="Error" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddZigbeeAttributeType">
    <xsd:complexContent>
      <xsd:extension base="ZigbeeAttributeType">
        <xsd:sequence>
          <xsd:choice>
            <xsd:element name="InstallCode" type="xsd:string"/>
            <xsd:element name="PreConfiguredLinkKey" type="xsd:string"/>
          </xsd:choice>
          <xsd:element name="UtilityEnrollmentGroup" type="UtilityEnrollmentGroupNumberType" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AssociatedHANDeviceType">
    <xsd:complexContent>
      <xsd:extension base="FindHANDeviceBaseType">
        <xsd:sequence>
          <xsd:element name="ZigbeeUtilityEnrollmentGroupNumber" type="UtilityEnrollmentGroupNumberType" minOccurs="0"/>
          <xsd:element name="ZigbeeConnectivityStatus" type="ConnectivityStatusEnumeration" minOccurs="0"/>
          <xsd:element name="D2GCLPSupported" type="xsd:boolean" minOccurs="0"/>
          <xsd:element name="TransportType" type="TransportTypeEnumeration" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BillingCycleMonthType">
    <xsd:sequence>
      <xsd:element name="BillingYear" type="xsd:int" minOccurs="0"/>
      <xsd:element name="BillingMonth" type="xsd:int" minOccurs="0"/>
      <xsd:element name="StartTime" type="xsd:date" minOccurs="0"/>
      <xsd:element name="EndTime" type="xsd:date" minOccurs="0"/>
      <xsd:element name="BillingTime" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BillingCycleType">
    <xsd:sequence>
      <xsd:element name="BillingCycleNumber" type="xsd:string" minOccurs="0"/>
      <xsd:element name="BillingCycleMonth" type="BillingCycleMonthType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DeviceIdentifierAttributeType">
    <xsd:sequence>
      <xsd:element name="MacID" type="xsd:string"/>
      <xsd:element name="DeviceName" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DeviceType">
    <xsd:sequence>
      <xsd:element name="ESIMacID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ESICommandStatus" type="ESICommandStatusType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DistributionNodeType">
    <xsd:sequence>
      <xsd:element name="AmpCapacity" type="xsd:double" minOccurs="0"/>
      <xsd:element name="DistNetUtilID" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EditD2GAttributeType">
    <xsd:sequence>
      <xsd:element name="PrimaryAttributes" type="EditPrimaryHANDeviceType" minOccurs="0"/>
      <xsd:element name="ESI" type="EditESIType" minOccurs="0"/>
      <xsd:element name="ServicePointUtilID" type="NullableString" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EditESIType">
    <xsd:sequence>
      <xsd:element name="MacID" type="xsd:string"/>
      <xsd:element name="DeviceName" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Notes" type="NullableString" minOccurs="0"/>
      <xsd:element name="OwnedBy" type="NullableOwnerTypeEnumeration" minOccurs="0"/>
      <xsd:element name="SerialNumber" type="NullableString" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EditHANDeviceRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    ESIMacID.Pattern.message
                    esiAssociate.hanDevice.notFound
                    esiAssociate.hanDevice.unmodifiable.deviceState
                    esiAssociate.hanDevice.provisioning.inProgress
                    esiAssociate.hanDevice.esiNotFound
                    esiAssociate.hanDevice.esiNotValid
                    esiAssociate.hanDevice.notESI</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="ZigbeeAttributes" type="EditZigbeeAttributeType"/>
        <xsd:element name="D2GAttributes" type="EditD2GAttributeType"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EditHANDeviceResponseType">
    <xsd:sequence>
      <xsd:element name="MacID" type="xsd:string"/>
      <xsd:element name="Error" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EditPrimaryHANDeviceType">
    <xsd:sequence>
      <xsd:element name="MacID" type="xsd:string"/>
      <xsd:element name="DeviceName" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Notes" type="NullableString" minOccurs="0"/>
      <xsd:element name="OwnedBy" type="NullableOwnerTypeEnumeration" minOccurs="0"/>
      <xsd:element name="BatteryPowered" type="NullableBoolean" minOccurs="0"/>
      <xsd:element name="LoadShedPotential" type="basic:NullableKiloWattType" minOccurs="0"/>
      <xsd:element name="NullableInputCapacity" type="NullableInputCapacityType" minOccurs="0"/>
      <xsd:element name="InputSeerRating" type="NullableInt" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EditZigbeeAttributeType">
    <xsd:sequence>
      <xsd:element name="PrimaryAttributes" type="EditPrimaryHANDeviceType"/>
      <xsd:element name="ManufacturerName" type="NullableString" minOccurs="0"/>
      <xsd:element name="ManufacturerModel" type="NullableString" minOccurs="0"/>
      <xsd:element name="HardwareVersion" type="NullableString" minOccurs="0"/>
      <xsd:element name="Firmware1Version" type="NullableString" minOccurs="0"/>
      <xsd:element name="Firmware1Type" type="NullableInt" minOccurs="0"/>
      <xsd:element name="Firmware2Version" type="NullableString" minOccurs="0"/>
      <xsd:element name="Firmware2Type" type="NullableInt" minOccurs="0"/>
      <xsd:element name="SerialNumber" type="NullableString" minOccurs="0"/>
      <xsd:element name="DeviceType" type="DeviceTypeEnumeration" minOccurs="0"/>
      <xsd:element name="ESIMacID" type="NullableString" minOccurs="0"/>
      <xsd:element name="UtilityEnrollmentGroup" type="NullableUtilityEnrollmentGroupType" minOccurs="0"/>
      <xsd:element name="SEPVersion" type="basic:NullableSEPVersionType" minOccurs="0"/>
      <xsd:element name="InstallCode" type="NullableString" minOccurs="0"/>
      <xsd:element name="PreConfiguredLinkKey" type="NullableString" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This should either be left null or kept in sync with InstallCode since it is usually generated from InstallCode</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="HANDeviceClass" type="NullableHANDeviceClassEnumeration" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EmptyType"/>
  <xsd:complexType name="ESICommandStatusType">
    <xsd:sequence>
      <xsd:element name="CommandName" type="xsd:string" minOccurs="0"/>
      <xsd:element name="CommandStatus" type="xsd:string" minOccurs="0"/>
      <xsd:element name="CommandDisplayStatus" type="xsd:string" minOccurs="0"/>
      <xsd:element name="CommandRunTime" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ESIGroupErrorType">
    <xsd:sequence>
      <xsd:element name="MacID" type="xsd:string"/>
      <xsd:element name="Error" type="HANDevicesErrorEnumeration"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ESIGroupRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    Unique.deviceGroup.groupName
                    group.import.error.groupType
                    group.import.error.groupEmpty</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="GroupName" type="xsd:string"/>
      <xsd:element name="GroupDescription" type="xsd:string" minOccurs="0"/>
      <xsd:element name="GroupType" type="DeviceGroupType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>defaults to Dynamic if omitted</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="StaticGroupMemberList" type="StaticGroupMemberListType" minOccurs="0"/>
      <xsd:element name="ESISearchRequest" type="ESISearchRequestType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ESIGroupResponseType">
    <xsd:sequence>
      <xsd:element name="GroupID" type="xsd:long"/>
      <xsd:element name="Errors" type="ESIGroupErrorType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ESIPrimaryDeviceExtType">
    <xsd:sequence>
      <xsd:element name="ManufacturerName" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ManufacturerModel" type="xsd:string" minOccurs="0"/>
      <xsd:element name="HardwareVersion" type="xsd:string" minOccurs="0"/>
      <xsd:element name="FirmwareVersion" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ESISearchRequestType">
    <xsd:complexContent>
      <xsd:extension base="FindDeviceBaseType">
        <xsd:sequence>
          <xsd:element name="Readiness" type="ESIReadinessType" minOccurs="0"/>
          <xsd:element name="FindDeviceCommonAttributes" type="FindDeviceCommonAttributeType" minOccurs="0"/>
          <xsd:element name="RatePlanID" type="xsd:long" minOccurs="0"/>
          <xsd:element name="AssociatedDevice" type="AssociatedHANDeviceType" minOccurs="0"/>
          <xsd:element name="AssociatedToServicePoint" type="xsd:boolean" minOccurs="0"/>
          <xsd:element name="HANRadioState" type="ESIHANRadioStateEnumeration" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ESIReadinessType">
    <xsd:sequence>
      <xsd:element name="EnrolledInProgram" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="Provisioned" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="Connected" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="Retired" type="xsd:boolean" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ESIType">
    <xsd:complexContent>
      <xsd:extension base="PrimaryDeviceBaseWithIdentifiersType">
        <xsd:sequence>
          <xsd:element name="SerialNumber" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="FeederType">
    <xsd:complexContent>
      <xsd:extension base="DistributionNodeType"></xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="FindD2GAttributeType">
    <xsd:sequence>
      <xsd:element name="TransportTypeD2G" type="TransportTypeD2GEnumeration" minOccurs="1"/>
      <xsd:element name="CLPSupported" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="Configured" type="xsd:boolean" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FindDeviceBaseType">
    <xsd:sequence>
      <xsd:element name="Manufacturer" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Model" type="xsd:string" minOccurs="0"/>
      <xsd:element name="DeviceState" type="DeviceStateEnumeration" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FindDeviceCommonAttributeType">
    <xsd:sequence>
      <xsd:element name="SerialNumber" type="xsd:string" minOccurs="0"/>
      <xsd:element name="MacID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServicePointID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ProgramID" type="ProgramIDType" minOccurs="0"/>
      <xsd:element name="BillingLocationType" type="BillingLocationTypeEnumeration" minOccurs="0"/>
      <xsd:element name="GridNode" type="GridNodeType" minOccurs="0"/>
      <xsd:element name="HardwareVersion" type="xsd:string" minOccurs="0"/>
      <xsd:element name="FirmwareVersion" type="xsd:string" minOccurs="0"/>
      <xsd:element name="City" type="xsd:string" minOccurs="0"/>
      <xsd:element name="State" type="xsd:string" minOccurs="0"/>
      <xsd:element name="PostalCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServicePointCustomAttribute1" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServicePointCustomAttribute2" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServicePointCustomAttribute3" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServicePointCustomAttribute4" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServicePointCustomAttribute5" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FindDeviceResponseType">
    <xsd:sequence>
      <xsd:element name="DeviceCount" type="xsd:int" minOccurs="0"/>
      <xsd:element name="MacID" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FindESIRequestType">
    <xsd:complexContent>
      <xsd:extension base="ESISearchRequestType">
        <xsd:sequence>
          <xsd:element name="Pagination" type="basic:PaginationType"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="FindHANDeviceBaseType">
    <xsd:complexContent>
      <xsd:extension base="FindDeviceBaseType">
        <xsd:sequence>
          <xsd:element name="HANDeviceType" type="DeviceTypeEnumeration" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="FindHANDeviceRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="FindHANDeviceBaseType">
        <xsd:sequence>
          <xsd:element name="FindDeviceCommonAttributes" type="FindDeviceCommonAttributeType" minOccurs="0"/>
          <xsd:element name="HANDeviceName" type="xsd:string" minOccurs="0"/>
          <xsd:element name="ESIMacID" type="xsd:string" minOccurs="0"/>
          <xsd:element name="ESIDeviceState" type="DeviceStateEnumeration" minOccurs="0"/>
          <xsd:element name="ESIReadiness" type="ESIReadinessType" minOccurs="0"/>
          <xsd:choice minOccurs="0">
            <xsd:element name="ZigbeeAttributes" type="FindZigbeeAttributeType"/>
            <xsd:element name="D2GAttributes" type="FindD2GAttributeType"/>
          </xsd:choice>
          <xsd:element name="Pagination" type="basic:PaginationType"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="FindZigbeeAttributeType">
    <xsd:sequence>
      <xsd:element name="TransportTypeZigbee" type="TransportTypeZigbeeEnumeration" minOccurs="1"/>
      <xsd:element name="UtilityEnrollmentGroupNumber" type="UtilityEnrollmentGroupNumberType" minOccurs="0"/>
      <xsd:element name="SupportedSEPCluster" type="HANDeviceSEPClusterEnumeration" minOccurs="0"/>
      <xsd:element name="ConnectivityStatus" type="ConnectivityStatusEnumeration" minOccurs="0"/>
      <xsd:element name="SEPVersion" type="basic:SEPVersionEnumeration" minOccurs="0"/>
      <xsd:element name="HANDeviceClass" type="HANDeviceClassEnumeration" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetActivateESIHANRadioCommandStatusRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    InvalidID.activateHANRadioStatus.activateCommandNotFound</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ActivateESIHANRadioCommandID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetActivateESIHANRadioCommandStatusResponseType">
    <xsd:sequence>
      <xsd:element name="ESIMacID" type="xsd:string"/>
      <xsd:element name="Status" type="SignalStatusEnumeration"/>
      <xsd:element name="UserHandle" type="xsd:string"/>
      <xsd:element name="Completed" type="xsd:boolean"/>
      <xsd:element name="Successful" type="xsd:boolean"/>
      <xsd:element name="RequestTime" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetESIGroupMembersRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    Invalid.group.groupIdentifier</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ESIGroupID" type="xsd:long"/>
      <xsd:element name="Pagination" type="basic:PaginationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetESIGroupMembersResponseType">
    <xsd:sequence>
      <xsd:element name="MacID" type="xsd:string" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetESISyncStatusRequestType">
    <xsd:sequence>
      <xsd:element name="JobID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetESISyncStatusResponseType">
    <xsd:sequence>
      <xsd:element name="SyncStatus" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Device" type="DeviceType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetJobStatusRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                     generic
                     fatal_error
                     authorization_failure
                     InvalidID.Job.ID</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="JobIdentifier" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetJobStatusResponseType">
    <xsd:sequence>
      <xsd:element name="Status" type="basic:JobStatusType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetPCTStateRequestType">
    <xsd:annotation>
      <xsd:documentation>The results of the get are only delivered over the JMS queue configured at instlall time.  You can use the returned JobIdentifier to poll the status of the get job via the getJobStatus operation or you can wait for the JMS queue message which will include the status.
                Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PCTMacID" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetPCTStateResponseType">
    <xsd:annotation>
      <xsd:documentation>The results of the get are only delivered over the JMS queue configured at instlall time.  You can use the returned JobIdentifier to poll the status of the get job via the getJobStatus operation or you can wait for the JMS queue message which will include the status.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="JobIdentifier" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetPingHANDeviceStatusRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PingHANDeviceCommandID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetPingHANDeviceStatusResponseType">
    <xsd:sequence>
      <xsd:element name="Status" type="PingStatusEnumeration"/>
      <xsd:element name="RoundTripTime" type="xsd:long"/>
      <xsd:element name="RunTime" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetProvisionHANDeviceCommandStatusRequestType">
    <xsd:annotation>
      <xsd:documentation>Used to get status for both provision and unprovision HAN Device.
                Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    InvalidID.provisionStatus.provisionCommandNotFound</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ProvisionHANDeviceCommandID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetProvisionHANDeviceCommandStatusResponseType">
    <xsd:sequence>
      <xsd:element name="HANMacID" type="xsd:string"/>
      <xsd:element name="ESIMacID" type="xsd:string"/>
      <xsd:element name="Status" type="SignalStatusEnumeration"/>
      <xsd:element name="UserHandle" type="xsd:string"/>
      <xsd:element name="Completed" type="xsd:boolean"/>
      <xsd:element name="Successful" type="xsd:boolean"/>
      <xsd:element name="RequestTime" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GridNodeType">
    <xsd:sequence>
      <xsd:element name="GridNodeType" type="GridNodeTypeEnumeration"/>
      <xsd:element name="GridNodeNumber" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="HANDeviceDetailsType">
    <xsd:sequence>
      <xsd:element name="HANDevice" type="ListHANDeviceType" minOccurs="0"/>
      <xsd:element name="ErrorCode" type="HANDevicesErrorEnumeration" minOccurs="0"/>
      <xsd:element name="MacID" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="HANDeviceType">
    <xsd:complexContent>
      <xsd:extension base="PrimaryDeviceBaseType">
        <xsd:sequence>
          <xsd:element name="DeviceIdentifiers" type="DeviceIdentifierAttributeType" minOccurs="0"/>
          <xsd:element name="BatteryPowered" type="xsd:boolean" minOccurs="0"/>
          <xsd:element name="LoadShedPotential" type="basic:KiloWattType" minOccurs="0"/>
          <xsd:element name="NullableInputCapacity" type="NullableInputCapacityType" minOccurs="0"/>
          <xsd:element name="InputSeerRating" type="xsd:int" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="InputCapacityType">
    <xsd:sequence>
      <xsd:element name="InputCapacityValue" type="xsd:double" minOccurs="1"/>
      <xsd:element name="InputCapacityUnit" type="InputCapacityUnitEnumeration" minOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ListD2GAttributeType">
    <xsd:sequence>
      <xsd:element name="ESIAdditionalInfo" type="ESIPrimaryDeviceExtType" minOccurs="0"/>
      <xsd:element name="HANDeviceAdditionalInfo" type="PrimaryDeviceExtType" minOccurs="0"/>
      <xsd:element name="DeviceSerialNumber" type="xsd:string" minOccurs="0"/>
      <xsd:element name="DeviceType" type="DeviceTypeEnumeration"/>
      <xsd:element name="CLPSupported" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="ILCSupportedType" type="ILCSupportedTypeEnumeration" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="VirtualRelay" type="VirtualRelayType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="ConfigHash" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Configured" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="ESI" type="ListESIType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ListESIType">
    <xsd:complexContent>
      <xsd:extension base="ESIType">
        <xsd:sequence>
          <xsd:element name="SupportsZigbee" type="xsd:boolean" minOccurs="0"/>
          <xsd:element name="SupportsD2GLCS" type="xsd:boolean" minOccurs="0"/>
          <xsd:element name="SupportsEVSE" type="xsd:boolean" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ListHANDevicesRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="MacID" type="xsd:string" maxOccurs="100"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ListHANDevicesResponseType">
    <xsd:sequence>
      <xsd:element name="HANDeviceDetail" type="HANDeviceDetailsType" maxOccurs="100"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ListHANDeviceType">
    <xsd:complexContent>
      <xsd:extension base="HANDeviceType">
        <xsd:sequence>
          <xsd:element name="ServicePoint" type="ServicePointType" minOccurs="0"/>
          <xsd:element name="DeviceState" type="DeviceStateEnumeration" minOccurs="0"/>
          <xsd:element name="ESIDeviceState" type="DeviceStateEnumeration" minOccurs="0"/>
          <xsd:element name="ESIIsRetired" type="xsd:boolean" minOccurs="0"/>
          <xsd:element name="ESIIsProvisioned" type="xsd:boolean" minOccurs="0"/>
          <xsd:element name="ESIIsConnected" type="xsd:boolean" minOccurs="0"/>
          <xsd:element name="InputLoad" type="xsd:double" minOccurs="0"/>
          <xsd:choice>
            <xsd:element name="ZigbeeAttributes" type="ListZigbeeAttributeType"/>
            <xsd:element name="D2GAttributes" type="ListD2GAttributeType"/>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ListZigbeeAttributeType">
    <xsd:complexContent>
      <xsd:extension base="ZigbeeAttributeType">
        <xsd:sequence>
          <xsd:element name="InstallCode" type="xsd:string" minOccurs="0"/>
          <xsd:element name="PreConfiguredLinkKey" type="xsd:string" minOccurs="0"/>
          <xsd:element name="UtilityEnrollmentGroup" type="UtilityEnrollmentGroupType" minOccurs="0"/>
          <xsd:element name="LinkQualityIndicator" type="xsd:int" minOccurs="0"/>
          <xsd:element name="ConnectivityStatus" type="ConnectivityStatusEnumeration" minOccurs="0"/>
          <xsd:element name="SupportedSEPCluster" type="HANDeviceSEPClusterEnumeration" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="NullableBase64Binary">
    <xsd:simpleContent>
      <xsd:extension base="xsd:base64Binary">
        <xsd:attribute name="Null" type="xsd:boolean" use="optional" default="false"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="NullableBoolean">
    <xsd:simpleContent>
      <xsd:extension base="xsd:boolean">
        <xsd:attribute name="Null" type="xsd:boolean" use="optional" default="false"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="NullableDouble">
    <xsd:simpleContent>
      <xsd:extension base="xsd:double">
        <xsd:attribute name="Null" type="xsd:boolean" use="optional" default="false"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="NullableHANDeviceClassEnumeration">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="HANDeviceClass" type="HANDeviceClassEnumeration"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="NullableInputCapacityType">
    <xsd:sequence>
      <xsd:element name="InputCapacity" type="InputCapacityType" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="Null" type="xsd:boolean" use="optional" default="false"/>
  </xsd:complexType>
  <xsd:complexType name="NullableInt">
    <xsd:simpleContent>
      <xsd:extension base="xsd:int">
        <xsd:attribute name="Null" type="xsd:boolean" use="optional" default="false"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="NullableLong">
    <xsd:simpleContent>
      <xsd:extension base="xsd:long">
        <xsd:attribute name="Null" type="xsd:boolean" use="optional" default="false"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="NullableOwnerTypeEnumeration">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="OwnerType" type="OwnerTypeEnumeration"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="NullableString">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="Null" type="xsd:boolean" use="optional" default="false"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="NullableUtilityEnrollmentGroupType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="UtilityEnrollmentGroup" type="UtilityEnrollmentGroupNumberType"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="PhysicalRelayType">
    <xsd:sequence>
      <xsd:element name="PhysicalRelayID" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PingHANDeviceRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    macID.Pattern.message
                    MACAddress.deviceManager.addressIsNotHANDevice
                    MACAddress.deviceManager.HANDeviceIsNotAssociatedToESI</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="MacID" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PingHANDeviceResponseType">
    <xsd:sequence>
      <xsd:element name="PingHANDeviceCommandID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PrimaryDeviceBaseType">
    <xsd:sequence>
      <xsd:element name="Notes" type="xsd:string" minOccurs="0"/>
      <xsd:element name="OwnedBy" type="OwnerTypeEnumeration" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PrimaryDeviceBaseWithIdentifiersType">
    <xsd:complexContent>
      <xsd:extension base="PrimaryDeviceBaseType">
        <xsd:sequence>
          <xsd:element name="DeviceIdentifiers" type="DeviceIdentifierAttributeType"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="PrimaryDeviceExtType">
    <xsd:sequence>
      <xsd:element name="ManufacturerName" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ManufacturerModel" type="xsd:string" minOccurs="0"/>
      <xsd:element name="HardwareVersion" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Firmware1Version" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Firmware1Type" type="xsd:int" minOccurs="0"/>
      <xsd:element name="Firmware2Version" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Firmware2Type" type="xsd:int" minOccurs="0"/>
      <xsd:element name="SoftwareVersion" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProvisionHANDeviceRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    NotFound.deviceManager.esiNotFound
                    MACAddress.deviceManager.addressIsNotESI
                    NotFound.deviceManager.hanDeviceNotFound
                    MACAddress.deviceManager.addressIsNotHANDevice
                    macID.Pattern.message</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="HANMacID" type="xsd:string"/>
      <xsd:element name="ESIMacID" type="xsd:string"/>
      <xsd:element name="JoinDurationSeconds" type="JoinDurationSecondsType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProvisionHANDeviceResponseType">
    <xsd:sequence>
      <xsd:element name="ProvisionHANDeviceCommandID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ServicePointType">
    <xsd:sequence>
      <xsd:element name="DRMProgramID" type="xsd:long" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="DRMRatePlanID" type="xsd:long" minOccurs="0"/>
      <xsd:element name="BillingCycle" type="BillingCycleType" minOccurs="0"/>
      <xsd:element name="Location" type="location:LocationType"/>
      <xsd:element name="UtilServicePointID" type="xsd:string"/>
      <xsd:element name="ServiceType" type="ServiceTypeEnumeration" minOccurs="0"/>
      <xsd:element name="Account" type="location:AccountType" minOccurs="0"/>
      <xsd:element name="Transformer" type="TransformerType" minOccurs="0"/>
      <xsd:element name="Substation" type="SubstationType" minOccurs="0"/>
      <xsd:element name="Feeder" type="FeederType" minOccurs="0"/>
      <xsd:element name="TransmissionCircuit" type="TransmissionCircuitType" minOccurs="0"/>
      <xsd:element name="MeterPhase" type="xsd:string" minOccurs="0"/>
      <xsd:element name="MeterLocationCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServicePhaseCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServiceVoltLevelCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="CurrentTransformerRatio" type="xsd:string" minOccurs="0"/>
      <xsd:element name="VoltageTransformerRatio" type="xsd:string" minOccurs="0"/>
      <xsd:element name="LineFrequency" type="xsd:string" minOccurs="0"/>
      <xsd:element name="GroundLevelEstHeight" type="xsd:int" minOccurs="0"/>
      <xsd:element name="DRMManaged" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="Attribute1" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Attribute2" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Attribute3" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Attribute4" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Attribute5" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SetILCORequestType">
    <xsd:annotation>
      <xsd:documentation>Enter zero to 1000 LCS DTG Mac IDs or device group ids.
                Dynamic device groups must include the Direct To Grid transport type filter.
                Static device groups should inlude only Direct to Grid LCS devices.
                
                Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    errorMsg.group.includes.non.d2glcs
                    errorMsg.group.subject.not.d2glcs
                    errorMsg.macIDTypeNotValid
                    errorMsg.macIDInvalid
                    errorMsg.macIDNotFound</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="LCSMacID" type="xsd:string" maxOccurs="1000"/>
        <xsd:element name="GroupID" type="xsd:long" maxOccurs="1000"/>
      </xsd:choice>
      <xsd:choice>
        <xsd:element name="Reset" type="EmptyType"/>
        <xsd:element name="DaysInThePastToUseForOptimization" type="ILCODaysInThePastToUseForOptimizationType"/>
      </xsd:choice>
      <xsd:choice>
        <xsd:element name="DeviceWideTarget" type="EmptyType"/>
        <xsd:element name="TargetVirtualRelayID" type="xsd:int"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SetILCOResponseType">
    <xsd:sequence>
      <xsd:element name="JobIdentifier" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SetPCTStateRequestType">
    <xsd:annotation>
      <xsd:documentation>You can use the returned JobIdentifier to poll the status of the set job via the getJobStatus operation or you can wait for the JMS queue message which will include the status.
                Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PCTMacID" type="xsd:string"/>
      <xsd:element name="HeatSetpoint" type="PCTTemperatureType" minOccurs="0"/>
      <xsd:element name="CoolSetpoint" type="PCTTemperatureType" minOccurs="0"/>
      <xsd:element name="HoldType" type="PCTHoldTypeEnumeration" minOccurs="0"/>
      <xsd:element name="HoldUntilTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="FanMode" type="PCTFanModeEnumeration" minOccurs="0"/>
      <xsd:element name="Mode" type="PCTModeTypeEnumeration" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SetPCTStateResponseType">
    <xsd:annotation>
      <xsd:documentation>You can use the returned JobIdentifier to poll the status of the set job via the getJobStatus operation or you can wait for the JMS queue message which will include the status.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="JobIdentifier" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="StaticGroupMemberListType">
    <xsd:sequence>
      <xsd:element name="MacID" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SubstationType">
    <xsd:complexContent>
      <xsd:extension base="DistributionNodeType">
        <xsd:sequence>
          <xsd:element name="SubstationBankCode" type="xsd:string" minOccurs="0"/>
          <xsd:element name="SubstationFeederCode" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SyncESIRequestType">
    <xsd:annotation>
      <xsd:documentation>Enter either a Macid String(Maximum of 1000 devices) or 
                a Group Id String(Can be multiple group Ids).</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="ESIMacID" type="xsd:string" maxOccurs="1000"/>
        <xsd:element name="GroupID" type="xsd:long" maxOccurs="unbounded"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SyncESIResponseType">
    <xsd:sequence>
      <xsd:element name="JobID" type="xsd:long" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TransformerType">
    <xsd:complexContent>
      <xsd:extension base="DistributionNodeType">
        <xsd:sequence>
          <xsd:element name="TransTransDist" type="xsd:string" minOccurs="0"/>
          <xsd:element name="TransInstCode" type="xsd:int" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="TransmissionCircuitType">
    <xsd:complexContent>
      <xsd:extension base="DistributionNodeType"></xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="UnprovisionHANDeviceRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    macID.Pattern.message
                    NotFound.deviceManager.hanDeviceNotFound
                    MACAddress.deviceManager.addressIsNotHANDevice</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="HANMacID" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="UtilityEnrollmentGroupType">
    <xsd:sequence>
      <xsd:element name="Name" type="xsd:string"/>
      <xsd:element name="Number" type="UtilityEnrollmentGroupNumberType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="VirtualRelayType">
    <xsd:sequence>
      <xsd:element name="VirtualRelayID" type="xsd:int"/>
      <xsd:element name="PhysicalRelay" type="PhysicalRelayType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ZigbeeAttributeType">
    <xsd:sequence>
      <xsd:element name="HANDeviceAdditionalInfo" type="PrimaryDeviceExtType" minOccurs="0"/>
      <xsd:element name="DeviceSerialNumber" type="xsd:string" minOccurs="0"/>
      <xsd:element name="DeviceType" type="DeviceTypeEnumeration"/>
      <xsd:element name="ESIMacID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="SEPVersion" type="basic:SEPVersionEnumeration" minOccurs="0"/>
      <xsd:element name="HANDeviceClass" type="HANDeviceClassEnumeration" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="UpdateDeviceEventLogsRequestType">
    <xsd:annotation>
      <xsd:documentation>Enter either a list of MacIDs (up to 1000 devices) or 
                a list of Group Ids.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="ESIMacID" type="xsd:string" maxOccurs="1000"/>
        <xsd:element name="GroupID" type="xsd:long" maxOccurs="unbounded"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="UpdateDeviceEventLogsResponseType">
    <xsd:sequence>
      <xsd:element name="updateRequested" type="xsd:boolean" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Simple Types in alphabetical order-->
  <xsd:simpleType name="BillingLocationTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RESIDENTIAL"/>
      <xsd:enumeration value="COMMERCIAL"/>
      <xsd:enumeration value="INDUSTRIAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ConnectivityStatusEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="JOINED"/>
      <xsd:enumeration value="UNJOINED"/>
      <xsd:enumeration value="UNASSOCIATED"/>
      <xsd:enumeration value="ASSOCIATED"/>
      <xsd:enumeration value="UNREACHABLE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DeviceGroupType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DYNAMIC_GROUP"/>
      <xsd:enumeration value="STATIC_GROUP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DeviceStateEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="READY"/>
      <xsd:enumeration value="NOT_READY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DeviceTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Range Extender"/>
      <xsd:enumeration value="Metering Device"/>
      <xsd:enumeration value="In-Premise Display"/>
      <xsd:enumeration value="Load Control Device"/>
      <xsd:enumeration value="Smart Appliance"/>
      <xsd:enumeration value="PCT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ESIHANRadioStateEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ENABLED"/>
      <xsd:enumeration value="DISABLED"/>
      <xsd:enumeration value="UNKNOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GridNodeTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Transmission"/>
      <xsd:enumeration value="Substation"/>
      <xsd:enumeration value="Feeder"/>
      <xsd:enumeration value="Transformer"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HANDeviceClassEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HVAC"/>
      <xsd:enumeration value="StripHeater"/>
      <xsd:enumeration value="WaterHeater"/>
      <xsd:enumeration value="PoolPump"/>
      <xsd:enumeration value="SmartAppliance"/>
      <xsd:enumeration value="IrrigationPump"/>
      <xsd:enumeration value="CommercialIndustrialLoad"/>
      <xsd:enumeration value="SimpleLoad"/>
      <xsd:enumeration value="ExteriorLighting"/>
      <xsd:enumeration value="InteriorLighting"/>
      <xsd:enumeration value="ElectricVehicle"/>
      <xsd:enumeration value="GenerationSystem"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HANDeviceSEPClusterEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PRICE_CLIENT"/>
      <xsd:enumeration value="PRICE_SERVER"/>
      <xsd:enumeration value="DRLC_CLIENT"/>
      <xsd:enumeration value="DRLC_SERVER"/>
      <xsd:enumeration value="MESSAGE_CLIENT"/>
      <xsd:enumeration value="MESSAGE_SERVER"/>
      <xsd:enumeration value="SIMPLE_METERING_CLIENT"/>
      <xsd:enumeration value="SIMPLE_METERING_SERVER"/>
      <xsd:enumeration value="SMART_ENERGY_TUNNELING_CLIENT"/>
      <xsd:enumeration value="SMART_ENERGY_TUNNELING_SERVER"/>
      <xsd:enumeration value="KEY_ESTABLISHMENT_CLIENT"/>
      <xsd:enumeration value="KEY_ESTABLISHMENT_SERVER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HANDevicesErrorEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR_MACID_NOT_FOUND"/>
      <xsd:enumeration value="ERROR_MACID_INVALID"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ILCSupportedTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ADVANCED_OPTION_1"/>
      <xsd:enumeration value="ADVANCED_OPTION_2"/>
      <xsd:enumeration value="ADVANCED_OPTION_3"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="InputCapacityUnitEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="KW"/>
      <xsd:enumeration value="TON"/>
      <xsd:enumeration value="BTU"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ILCODaysInThePastToUseForOptimizationType">
    <xsd:annotation>
      <xsd:documentation>A value of zero means today.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="6"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--The Join Duration allowed for HAN Devices-->
  <xsd:simpleType name="JoinDurationSecondsType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NetworkTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ENABLED"/>
      <xsd:enumeration value="DISABLED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="OwnerTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UTILITY"/>
      <xsd:enumeration value="CUSTOMER"/>
      <xsd:enumeration value="OTHER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PCTFanModeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AUTO"/>
      <xsd:enumeration value="ON"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PCTHoldTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="OFF"/>
      <xsd:enumeration value="PERMANENT"/>
      <xsd:enumeration value="TEMPORARY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PCTModeTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="OFF"/>
      <xsd:enumeration value="AUTO"/>
      <xsd:enumeration value="HEAT"/>
      <xsd:enumeration value="COOL"/>
      <xsd:enumeration value="EMERGENCY_HEAT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PCTTemperatureType">
    <xsd:annotation>
      <xsd:documentation>A PCT temperature value in Fahrenheit</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:double">
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PingStatusEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RESULT_SUCCESS"/>
      <xsd:enumeration value="RESULT_TIMEOUT"/>
      <xsd:enumeration value="RESULT_UNREACHABLE"/>
      <xsd:enumeration value="RESULT_ESI_REACHED"/>
      <xsd:enumeration value="RESULT_ESI_NOT_FOUND"/>
      <xsd:enumeration value="RESULT_ESI_UNREACHABLE"/>
      <xsd:enumeration value="RESULT_PING_NO_RESULTS"/>
      <xsd:enumeration value="JOB_NOT_STARTED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ProgramIDType">
    <xsd:restriction base="xsd:long">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="9223372036854775807"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ServiceTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ELECTRIC"/>
      <xsd:enumeration value="GAS"/>
      <xsd:enumeration value="WATER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SignalStatusEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Queued"/>
      <xsd:enumeration value="InProgress"/>
      <xsd:enumeration value="ErrorUnknown"/>
      <xsd:enumeration value="ErrorESIUnknown"/>
      <xsd:enumeration value="ErrorESIUnreachable"/>
      <xsd:enumeration value="ESINoData"/>
      <xsd:enumeration value="ErrorTimeout"/>
      <xsd:enumeration value="ESIRadioStatusUnknown"/>
      <xsd:enumeration value="ConfigurationError"/>
      <xsd:enumeration value="InstallCodeValidationError"/>
      <xsd:enumeration value="ProvisionInProgress"/>
      <xsd:enumeration value="InvalidState"/>
      <xsd:enumeration value="Success"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TransportTypeD2GEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="D2G"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TransportTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ZIGBEE"/>
      <xsd:enumeration value="D2G"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TransportTypeZigbeeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ZIGBEE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UtilityEnrollmentGroupNumberType">
    <xsd:annotation>
      <xsd:documentation>A value of zero means no UEG</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\BasicTypes_v1_1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <!--global element definitions that correspond to the message documents-->
  <xsd:element name="ErrorFault" type="ErrorFaultType"/>
  <!--Complex Types in alphabetical order-->
  <xsd:complexType name="ErrorFaultType">
    <xsd:sequence>
      <xsd:element name="Error" type="ErrorType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ErrorType">
    <xsd:sequence>
      <xsd:element name="ErrorCode" type="xsd:string"/>
      <xsd:element name="ErrorMessage" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NullableKiloWattType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="KiloWatts" type="KiloWattType"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="PaginationType">
    <xsd:annotation>
      <xsd:documentation>A reusable encapsulation of a page number and a page size.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PageNumber" type="PageNumber">
        <xsd:annotation>
          <xsd:documentation>An page number, should be greater or equal 1.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PageSize" type="PageSize">
        <xsd:annotation>
          <xsd:documentation>A page size, should be greater or equal 1 and smaller or equal 1000.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="JobStatusType">
    <xsd:sequence>
      <xsd:element name="JobID" type="xsd:long"/>
      <xsd:element name="ExecutionStatus" type="JobExecutionStatusType"/>
      <xsd:element name="ExecutionStatusDetail" type="xsd:string" minOccurs="0"/>
      <xsd:element name="StartTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="FinishTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Canceled" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="CanceledTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Duration" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalPending" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalCanceled" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalCompleted" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalTimeout" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalFailure" type="xsd:int" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NullableSEPVersionType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="SEPVersion" type="SEPVersionEnumeration"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <!--Simple types, in alphabetical order-->
  <xsd:simpleType name="DRMTimeType">
    <xsd:annotation>
      <xsd:documentation>DRM doesn't handle time values of 24:00:00.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:time">
      <xsd:maxInclusive value="23:59:59.99999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="KiloWattType">
    <xsd:restriction base="xsd:float">
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageNumber">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageSize">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="1000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="JobExecutionStatusType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PENDING">
        <xsd:annotation>
          <xsd:documentation>Used when the job execution status is not yet available.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="COMPLETE"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="RUNNING"/>
      <xsd:enumeration value="CANCELLED"/>
      <xsd:enumeration value="CANCELLATION_IN_PROGRESS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SEPVersionEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="1.0"/>
      <xsd:enumeration value="1.1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ZeroToFiftyNineInt">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="59"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ZeroToTwentyThreeInt">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="23"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\LocationTypes_v1_0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd">
  <xsd:complexType name="AccountType">
    <xsd:sequence>
      <xsd:element name="UtilAccountID" type="xsd:string"/>
      <xsd:element name="CustomerName" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Description" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Email" type="xsd:string" minOccurs="0"/>
      <xsd:element name="PhoneNumber" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LocationType">
    <xsd:sequence>
      <xsd:element name="Address1" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Address2" type="xsd:string" minOccurs="0"/>
      <xsd:element name="City" type="xsd:string" minOccurs="0"/>
      <xsd:element name="County" type="xsd:string" minOccurs="0"/>
      <xsd:element name="State" type="xsd:string" minOccurs="0"/>
      <xsd:element name="PostCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="CrossStreet" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Country" type="xsd:string" minOccurs="0"/>
      <xsd:element name="LocationType" type="LocationTypeEnumeration"/>
      <xsd:element name="PremiseUtilId" type="xsd:string"/>
      <xsd:element name="TZID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Longitude" type="xsd:double" minOccurs="0"/>
      <xsd:element name="Latitude" type="xsd:double" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="LocationTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOCATION_TYPE_PREMISE"/>
      <xsd:enumeration value="LOCATION_TYPE_NETWORK"/>
      <xsd:enumeration value="LOCATION_TYPE_POLE"/>
      <xsd:enumeration value="LOCATION_TYPE_TRANSFORM"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint></con:endpoints><con:operation id="14db039c-2bcf-4b33-8977-c06e35a09487" isOneWay="false" action="" name="activateESIHANRadio" bindingOperationName="activateESIHANRadio" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2b260b1b-cefa-43d2-a0ca-a1fda8293ba3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ActivateESIHANRadioRequest>\r
         <urn:ESIMacID>?</urn:ESIMacID>\r
      </urn:ActivateESIHANRadioRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/activateESIHANRadioRequest"/></con:call></con:operation><con:operation id="aae7ce55-2358-4f94-9410-58c77e6805f1" isOneWay="false" action="" name="addESIGroup" bindingOperationName="addESIGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f1d9ec15-71f0-4f77-a303-4550ccb91e16" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:AddESIGroupRequest>\r
         <urn:GroupName>?</urn:GroupName>\r
         <!--Optional:-->\r
         <urn:GroupDescription>?</urn:GroupDescription>\r
         <!--Optional:-->\r
         <urn:GroupType>?</urn:GroupType>\r
         <!--Optional:-->\r
         <urn:StaticGroupMemberList>\r
            <!--Zero or more repetitions:-->\r
            <urn:MacID>12:12:12:13:13:13</urn:MacID>\r
         </urn:StaticGroupMemberList>\r
         <!--Optional:-->\r
         <urn:ESISearchRequest>\r
            <!--Optional:-->\r
            <urn:Manufacturer>?</urn:Manufacturer>\r
            <!--Optional:-->\r
            <urn:Model>?</urn:Model>\r
            <!--Optional:-->\r
            <urn:DeviceState>?</urn:DeviceState>\r
            <!--Optional:-->\r
            <urn:Readiness>\r
               <!--Optional:-->\r
               <urn:EnrolledInProgram>?</urn:EnrolledInProgram>\r
               <!--Optional:-->\r
               <urn:Provisioned>?</urn:Provisioned>\r
               <!--Optional:-->\r
               <urn:Connected>?</urn:Connected>\r
               <!--Optional:-->\r
               <urn:Retired>?</urn:Retired>\r
            </urn:Readiness>\r
            <!--Optional:-->\r
            <urn:FindDeviceCommonAttributes>\r
               <!--Optional:-->\r
               <urn:SerialNumber>?</urn:SerialNumber>\r
               <!--Optional:-->\r
               <urn:MacID>?</urn:MacID>\r
               <!--Optional:-->\r
               <urn:ServicePointID>?</urn:ServicePointID>\r
               <!--Optional:-->\r
               <urn:ProgramID>?</urn:ProgramID>\r
               <!--Optional:-->\r
               <urn:BillingLocationType>?</urn:BillingLocationType>\r
               <!--Optional:-->\r
               <urn:GridNode>\r
                  <urn:GridNodeType>?</urn:GridNodeType>\r
                  <urn:GridNodeNumber>?</urn:GridNodeNumber>\r
               </urn:GridNode>\r
               <!--Optional:-->\r
               <urn:HardwareVersion>?</urn:HardwareVersion>\r
               <!--Optional:-->\r
               <urn:FirmwareVersion>?</urn:FirmwareVersion>\r
               <!--Optional:-->\r
               <urn:City>?</urn:City>\r
               <!--Optional:-->\r
               <urn:State>?</urn:State>\r
               <!--Optional:-->\r
               <urn:PostalCode>?</urn:PostalCode>\r
               <!--Optional:-->\r
               <urn:ServicePointCustomAttribute1>?</urn:ServicePointCustomAttribute1>\r
               <!--Optional:-->\r
               <urn:ServicePointCustomAttribute2>?</urn:ServicePointCustomAttribute2>\r
               <!--Optional:-->\r
               <urn:ServicePointCustomAttribute3>?</urn:ServicePointCustomAttribute3>\r
               <!--Optional:-->\r
               <urn:ServicePointCustomAttribute4>?</urn:ServicePointCustomAttribute4>\r
               <!--Optional:-->\r
               <urn:ServicePointCustomAttribute5>?</urn:ServicePointCustomAttribute5>\r
            </urn:FindDeviceCommonAttributes>\r
            <!--Optional:-->\r
            <urn:RatePlanID>?</urn:RatePlanID>\r
            <!--Optional:-->\r
            <urn:AssociatedDevice>\r
               <!--Optional:-->\r
               <urn:Manufacturer>?</urn:Manufacturer>\r
               <!--Optional:-->\r
               <urn:Model>?</urn:Model>\r
               <!--Optional:-->\r
               <urn:DeviceState>?</urn:DeviceState>\r
               <!--Optional:-->\r
               <urn:HANDeviceType>?</urn:HANDeviceType>\r
               <!--Optional:-->\r
               <urn:ZigbeeUtilityEnrollmentGroupNumber>?</urn:ZigbeeUtilityEnrollmentGroupNumber>\r
               <!--Optional:-->\r
               <urn:ZigbeeConnectivityStatus>?</urn:ZigbeeConnectivityStatus>\r
               <!--Optional:-->\r
               <urn:D2GCLPSupported>?</urn:D2GCLPSupported>\r
               <!--Optional:-->\r
               <urn:TransportType>?</urn:TransportType>\r
            </urn:AssociatedDevice>\r
            <!--Optional:-->\r
            <urn:AssociatedToServicePoint>?</urn:AssociatedToServicePoint>\r
            <!--Optional:-->\r
            <urn:HANRadioState>?</urn:HANRadioState>\r
         </urn:ESISearchRequest>\r
      </urn:AddESIGroupRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addESIGroupRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="62ecef48-9495-4d31-aefc-6556b779c70f" isOneWay="false" action="" name="addHANDevice" bindingOperationName="addHANDevice" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b302b7c1-2259-4523-acb6-4c4d01fe711f" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:AddHANDeviceRequest>\r
         <!--Optional:-->\r
         <urn:Notes>?</urn:Notes>\r
         <!--Optional:-->\r
         <urn:OwnedBy>?</urn:OwnedBy>\r
         <!--Optional:-->\r
         <urn:DeviceIdentifiers>\r
            <urn:MacID>?</urn:MacID>\r
            <!--Optional:-->\r
            <urn:DeviceName>?</urn:DeviceName>\r
         </urn:DeviceIdentifiers>\r
         <!--Optional:-->\r
         <urn:BatteryPowered>?</urn:BatteryPowered>\r
         <!--Optional:-->\r
         <urn:LoadShedPotential>?</urn:LoadShedPotential>\r
         <!--Optional:-->\r
         <urn:NullableInputCapacity Null="false">\r
            <!--Optional:-->\r
            <urn:InputCapacity>\r
               <urn:InputCapacityValue>?</urn:InputCapacityValue>\r
               <urn:InputCapacityUnit>?</urn:InputCapacityUnit>\r
            </urn:InputCapacity>\r
         </urn:NullableInputCapacity>\r
         <!--Optional:-->\r
         <urn:InputSeerRating>?</urn:InputSeerRating>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <urn:ZigbeeAttributes>\r
            <!--Optional:-->\r
            <urn:HANDeviceAdditionalInfo>\r
               <!--Optional:-->\r
               <urn:ManufacturerName>?</urn:ManufacturerName>\r
               <!--Optional:-->\r
               <urn:ManufacturerModel>?</urn:ManufacturerModel>\r
               <!--Optional:-->\r
               <urn:HardwareVersion>?</urn:HardwareVersion>\r
               <!--Optional:-->\r
               <urn:Firmware1Version>?</urn:Firmware1Version>\r
               <!--Optional:-->\r
               <urn:Firmware1Type>?</urn:Firmware1Type>\r
               <!--Optional:-->\r
               <urn:Firmware2Version>?</urn:Firmware2Version>\r
               <!--Optional:-->\r
               <urn:Firmware2Type>?</urn:Firmware2Type>\r
               <!--Optional:-->\r
               <urn:SoftwareVersion>?</urn:SoftwareVersion>\r
            </urn:HANDeviceAdditionalInfo>\r
            <!--Optional:-->\r
            <urn:DeviceSerialNumber>?</urn:DeviceSerialNumber>\r
            <urn:DeviceType>?</urn:DeviceType>\r
            <!--Optional:-->\r
            <urn:ESIMacID>?</urn:ESIMacID>\r
            <!--Optional:-->\r
            <urn:SEPVersion>?</urn:SEPVersion>\r
            <!--Optional:-->\r
            <urn:HANDeviceClass>?</urn:HANDeviceClass>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <urn:InstallCode>?</urn:InstallCode>\r
            <urn:PreConfiguredLinkKey>?</urn:PreConfiguredLinkKey>\r
            <!--Optional:-->\r
            <urn:UtilityEnrollmentGroup>?</urn:UtilityEnrollmentGroup>\r
         </urn:ZigbeeAttributes>\r
         <urn:D2GAttributes>\r
            <urn:ESI>\r
               <!--Optional:-->\r
               <urn:Notes>?</urn:Notes>\r
               <!--Optional:-->\r
               <urn:OwnedBy>?</urn:OwnedBy>\r
               <urn:DeviceIdentifiers>\r
                  <urn:MacID>66:55:44:33:22:11</urn:MacID>\r
                  <!--Optional:-->\r
                  <urn:DeviceName>?</urn:DeviceName>\r
               </urn:DeviceIdentifiers>\r
               <!--Optional:-->\r
               <urn:SerialNumber>?</urn:SerialNumber>\r
            </urn:ESI>\r
            <!--Optional:-->\r
            <urn:ServicePointUtilID>?</urn:ServicePointUtilID>\r
         </urn:D2GAttributes>\r
      </urn:AddHANDeviceRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addHANDeviceRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c5c35c45-8a57-4890-98a2-27dcce812540" isOneWay="false" action="" name="editESIGroup" bindingOperationName="editESIGroup" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="352f446d-e45d-4143-a7a1-b9cb84a2bd99" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:EditESIGroupRequest>\r
         <urn:GroupName>?</urn:GroupName>\r
         <!--Optional:-->\r
         <urn:GroupDescription>?</urn:GroupDescription>\r
         <!--Optional:-->\r
         <urn:GroupType>?</urn:GroupType>\r
         <!--Optional:-->\r
         <urn:StaticGroupMemberList>\r
            <!--Zero or more repetitions:-->\r
            <urn:MacID>11:22:33:44:55:66</urn:MacID>\r
         </urn:StaticGroupMemberList>\r
         <!--Optional:-->\r
         <urn:ESISearchRequest>\r
            <!--Optional:-->\r
            <urn:Manufacturer>?</urn:Manufacturer>\r
            <!--Optional:-->\r
            <urn:Model>?</urn:Model>\r
            <!--Optional:-->\r
            <urn:DeviceState>?</urn:DeviceState>\r
            <!--Optional:-->\r
            <urn:Readiness>\r
               <!--Optional:-->\r
               <urn:EnrolledInProgram>?</urn:EnrolledInProgram>\r
               <!--Optional:-->\r
               <urn:Provisioned>?</urn:Provisioned>\r
               <!--Optional:-->\r
               <urn:Connected>?</urn:Connected>\r
               <!--Optional:-->\r
               <urn:Retired>?</urn:Retired>\r
            </urn:Readiness>\r
            <!--Optional:-->\r
            <urn:FindDeviceCommonAttributes>\r
               <!--Optional:-->\r
               <urn:SerialNumber>?</urn:SerialNumber>\r
               <!--Optional:-->\r
               <urn:MacID>?</urn:MacID>\r
               <!--Optional:-->\r
               <urn:ServicePointID>?</urn:ServicePointID>\r
               <!--Optional:-->\r
               <urn:ProgramID>?</urn:ProgramID>\r
               <!--Optional:-->\r
               <urn:BillingLocationType>?</urn:BillingLocationType>\r
               <!--Optional:-->\r
               <urn:GridNode>\r
                  <urn:GridNodeType>?</urn:GridNodeType>\r
                  <urn:GridNodeNumber>?</urn:GridNodeNumber>\r
               </urn:GridNode>\r
               <!--Optional:-->\r
               <urn:HardwareVersion>?</urn:HardwareVersion>\r
               <!--Optional:-->\r
               <urn:FirmwareVersion>?</urn:FirmwareVersion>\r
               <!--Optional:-->\r
               <urn:City>?</urn:City>\r
               <!--Optional:-->\r
               <urn:State>?</urn:State>\r
               <!--Optional:-->\r
               <urn:PostalCode>?</urn:PostalCode>\r
               <!--Optional:-->\r
               <urn:ServicePointCustomAttribute1>?</urn:ServicePointCustomAttribute1>\r
               <!--Optional:-->\r
               <urn:ServicePointCustomAttribute2>?</urn:ServicePointCustomAttribute2>\r
               <!--Optional:-->\r
               <urn:ServicePointCustomAttribute3>?</urn:ServicePointCustomAttribute3>\r
               <!--Optional:-->\r
               <urn:ServicePointCustomAttribute4>?</urn:ServicePointCustomAttribute4>\r
               <!--Optional:-->\r
               <urn:ServicePointCustomAttribute5>?</urn:ServicePointCustomAttribute5>\r
            </urn:FindDeviceCommonAttributes>\r
            <!--Optional:-->\r
            <urn:RatePlanID>?</urn:RatePlanID>\r
            <!--Optional:-->\r
            <urn:AssociatedDevice>\r
               <!--Optional:-->\r
               <urn:Manufacturer>?</urn:Manufacturer>\r
               <!--Optional:-->\r
               <urn:Model>?</urn:Model>\r
               <!--Optional:-->\r
               <urn:DeviceState>?</urn:DeviceState>\r
               <!--Optional:-->\r
               <urn:HANDeviceType>?</urn:HANDeviceType>\r
               <!--Optional:-->\r
               <urn:ZigbeeUtilityEnrollmentGroupNumber>?</urn:ZigbeeUtilityEnrollmentGroupNumber>\r
               <!--Optional:-->\r
               <urn:ZigbeeConnectivityStatus>?</urn:ZigbeeConnectivityStatus>\r
               <!--Optional:-->\r
               <urn:D2GCLPSupported>?</urn:D2GCLPSupported>\r
               <!--Optional:-->\r
               <urn:TransportType>?</urn:TransportType>\r
            </urn:AssociatedDevice>\r
            <!--Optional:-->\r
            <urn:AssociatedToServicePoint>?</urn:AssociatedToServicePoint>\r
            <!--Optional:-->\r
            <urn:HANRadioState>?</urn:HANRadioState>\r
         </urn:ESISearchRequest>\r
      </urn:EditESIGroupRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editESIGroupRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="7eea439f-20e8-4d56-8b54-7a6ca13ef905" isOneWay="false" action="" name="editHANDevice" bindingOperationName="editHANDevice" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4eee8855-226a-475f-a720-afe2d4095d50" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:EditHANDeviceRequest>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <urn:ZigbeeAttributes>\r
            <urn:PrimaryAttributes>\r
               <urn:MacID>?</urn:MacID>\r
               <!--Optional:-->\r
               <urn:DeviceName>?</urn:DeviceName>\r
               <!--Optional:-->\r
               <urn:Notes Null="false">?</urn:Notes>\r
               <!--Optional:-->\r
               <urn:OwnedBy Null="false">\r
                  <!--Optional:-->\r
                  <urn:OwnerType>?</urn:OwnerType>\r
               </urn:OwnedBy>\r
               <!--Optional:-->\r
               <urn:BatteryPowered Null="false">?</urn:BatteryPowered>\r
               <!--Optional:-->\r
               <urn:LoadShedPotential Null="false">\r
                  <!--Optional:-->\r
                  <urn1:KiloWatts>?</urn1:KiloWatts>\r
               </urn:LoadShedPotential>\r
               <!--Optional:-->\r
               <urn:NullableInputCapacity Null="false">\r
                  <!--Optional:-->\r
                  <urn:InputCapacity>\r
                     <urn:InputCapacityValue>?</urn:InputCapacityValue>\r
                     <urn:InputCapacityUnit>?</urn:InputCapacityUnit>\r
                  </urn:InputCapacity>\r
               </urn:NullableInputCapacity>\r
               <!--Optional:-->\r
               <urn:InputSeerRating Null="false">?</urn:InputSeerRating>\r
            </urn:PrimaryAttributes>\r
            <!--Optional:-->\r
            <urn:ManufacturerName Null="false">?</urn:ManufacturerName>\r
            <!--Optional:-->\r
            <urn:ManufacturerModel Null="false">?</urn:ManufacturerModel>\r
            <!--Optional:-->\r
            <urn:HardwareVersion Null="false">?</urn:HardwareVersion>\r
            <!--Optional:-->\r
            <urn:Firmware1Version Null="false">?</urn:Firmware1Version>\r
            <!--Optional:-->\r
            <urn:Firmware1Type Null="false">?</urn:Firmware1Type>\r
            <!--Optional:-->\r
            <urn:Firmware2Version Null="false">?</urn:Firmware2Version>\r
            <!--Optional:-->\r
            <urn:Firmware2Type Null="false">?</urn:Firmware2Type>\r
            <!--Optional:-->\r
            <urn:SerialNumber Null="false">?</urn:SerialNumber>\r
            <!--Optional:-->\r
            <urn:DeviceType>?</urn:DeviceType>\r
            <!--Optional:-->\r
            <urn:ESIMacID Null="false">?</urn:ESIMacID>\r
            <!--Optional:-->\r
            <urn:UtilityEnrollmentGroup Null="false">\r
               <!--Optional:-->\r
               <urn:UtilityEnrollmentGroup>?</urn:UtilityEnrollmentGroup>\r
            </urn:UtilityEnrollmentGroup>\r
            <!--Optional:-->\r
            <urn:SEPVersion Null="false">\r
               <!--Optional:-->\r
               <urn1:SEPVersion>?</urn1:SEPVersion>\r
            </urn:SEPVersion>\r
            <!--Optional:-->\r
            <urn:InstallCode Null="false">?</urn:InstallCode>\r
            <!--Optional:-->\r
            <urn:PreConfiguredLinkKey Null="false">?</urn:PreConfiguredLinkKey>\r
            <!--Optional:-->\r
            <urn:HANDeviceClass Null="false">\r
               <!--Optional:-->\r
               <urn:HANDeviceClass>?</urn:HANDeviceClass>\r
            </urn:HANDeviceClass>\r
         </urn:ZigbeeAttributes>\r
         <urn:D2GAttributes>\r
            <!--Optional:-->\r
            <urn:PrimaryAttributes>\r
               <urn:MacID>12:23:34:45:56:67</urn:MacID>\r
               <!--Optional:-->\r
               <urn:DeviceName>?</urn:DeviceName>\r
               <!--Optional:-->\r
               <urn:Notes Null="false">?</urn:Notes>\r
               <!--Optional:-->\r
               <urn:OwnedBy Null="false">\r
                  <!--Optional:-->\r
                  <urn:OwnerType>?</urn:OwnerType>\r
               </urn:OwnedBy>\r
               <!--Optional:-->\r
               <urn:BatteryPowered Null="false">?</urn:BatteryPowered>\r
               <!--Optional:-->\r
               <urn:LoadShedPotential Null="false">\r
                  <!--Optional:-->\r
                  <urn1:KiloWatts>?</urn1:KiloWatts>\r
               </urn:LoadShedPotential>\r
               <!--Optional:-->\r
               <urn:NullableInputCapacity Null="false">\r
                  <!--Optional:-->\r
                  <urn:InputCapacity>\r
                     <urn:InputCapacityValue>?</urn:InputCapacityValue>\r
                     <urn:InputCapacityUnit>?</urn:InputCapacityUnit>\r
                  </urn:InputCapacity>\r
               </urn:NullableInputCapacity>\r
               <!--Optional:-->\r
               <urn:InputSeerRating Null="false">?</urn:InputSeerRating>\r
            </urn:PrimaryAttributes>\r
            <!--Optional:-->\r
            <urn:ESI>\r
               <urn:MacID>?</urn:MacID>\r
               <!--Optional:-->\r
               <urn:DeviceName>?</urn:DeviceName>\r
               <!--Optional:-->\r
               <urn:Notes Null="false">?</urn:Notes>\r
               <!--Optional:-->\r
               <urn:OwnedBy Null="false">\r
                  <!--Optional:-->\r
                  <urn:OwnerType>?</urn:OwnerType>\r
               </urn:OwnedBy>\r
               <!--Optional:-->\r
               <urn:SerialNumber Null="false">?</urn:SerialNumber>\r
            </urn:ESI>\r
            <!--Optional:-->\r
            <urn:ServicePointUtilID Null="false">?</urn:ServicePointUtilID>\r
         </urn:D2GAttributes>\r
      </urn:EditHANDeviceRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="32335866-bd09-49bc-a008-ee0c3b0fff4f" isOneWay="false" action="" name="findESI" bindingOperationName="findESI" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2143f301-6091-4906-a528-bbb3dc44a3ec" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:FindESIRequest>\r
         <!--Optional:-->\r
         <urn:Manufacturer>?</urn:Manufacturer>\r
         <!--Optional:-->\r
         <urn:Model>?</urn:Model>\r
         <!--Optional:-->\r
         <urn:DeviceState>?</urn:DeviceState>\r
         <!--Optional:-->\r
         <urn:Readiness>\r
            <!--Optional:-->\r
            <urn:EnrolledInProgram>?</urn:EnrolledInProgram>\r
            <!--Optional:-->\r
            <urn:Provisioned>?</urn:Provisioned>\r
            <!--Optional:-->\r
            <urn:Connected>?</urn:Connected>\r
            <!--Optional:-->\r
            <urn:Retired>?</urn:Retired>\r
         </urn:Readiness>\r
         <!--Optional:-->\r
         <urn:FindDeviceCommonAttributes>\r
            <!--Optional:-->\r
            <urn:SerialNumber>?</urn:SerialNumber>\r
            <!--Optional:-->\r
            <urn:MacID>?</urn:MacID>\r
            <!--Optional:-->\r
            <urn:ServicePointID>?</urn:ServicePointID>\r
            <!--Optional:-->\r
            <urn:ProgramID>?</urn:ProgramID>\r
            <!--Optional:-->\r
            <urn:BillingLocationType>?</urn:BillingLocationType>\r
            <!--Optional:-->\r
            <urn:GridNode>\r
               <urn:GridNodeType>?</urn:GridNodeType>\r
               <urn:GridNodeNumber>?</urn:GridNodeNumber>\r
            </urn:GridNode>\r
            <!--Optional:-->\r
            <urn:HardwareVersion>?</urn:HardwareVersion>\r
            <!--Optional:-->\r
            <urn:FirmwareVersion>?</urn:FirmwareVersion>\r
            <!--Optional:-->\r
            <urn:City>?</urn:City>\r
            <!--Optional:-->\r
            <urn:State>?</urn:State>\r
            <!--Optional:-->\r
            <urn:PostalCode>?</urn:PostalCode>\r
            <!--Optional:-->\r
            <urn:ServicePointCustomAttribute1>?</urn:ServicePointCustomAttribute1>\r
            <!--Optional:-->\r
            <urn:ServicePointCustomAttribute2>?</urn:ServicePointCustomAttribute2>\r
            <!--Optional:-->\r
            <urn:ServicePointCustomAttribute3>?</urn:ServicePointCustomAttribute3>\r
            <!--Optional:-->\r
            <urn:ServicePointCustomAttribute4>?</urn:ServicePointCustomAttribute4>\r
            <!--Optional:-->\r
            <urn:ServicePointCustomAttribute5>?</urn:ServicePointCustomAttribute5>\r
         </urn:FindDeviceCommonAttributes>\r
         <!--Optional:-->\r
         <urn:RatePlanID>?</urn:RatePlanID>\r
         <!--Optional:-->\r
         <urn:AssociatedDevice>\r
            <!--Optional:-->\r
            <urn:Manufacturer>?</urn:Manufacturer>\r
            <!--Optional:-->\r
            <urn:Model>?</urn:Model>\r
            <!--Optional:-->\r
            <urn:DeviceState>?</urn:DeviceState>\r
            <!--Optional:-->\r
            <urn:HANDeviceType>?</urn:HANDeviceType>\r
            <!--Optional:-->\r
            <urn:ZigbeeUtilityEnrollmentGroupNumber>?</urn:ZigbeeUtilityEnrollmentGroupNumber>\r
            <!--Optional:-->\r
            <urn:ZigbeeConnectivityStatus>?</urn:ZigbeeConnectivityStatus>\r
            <!--Optional:-->\r
            <urn:D2GCLPSupported>?</urn:D2GCLPSupported>\r
            <!--Optional:-->\r
            <urn:TransportType>?</urn:TransportType>\r
         </urn:AssociatedDevice>\r
         <!--Optional:-->\r
         <urn:AssociatedToServicePoint>?</urn:AssociatedToServicePoint>\r
         <!--Optional:-->\r
         <urn:HANRadioState>?</urn:HANRadioState>\r
         <urn:Pagination>\r
            <urn1:PageNumber>?</urn1:PageNumber>\r
            <urn1:PageSize>?</urn1:PageSize>\r
         </urn:Pagination>\r
      </urn:FindESIRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/findESIRequest"/></con:call></con:operation><con:operation id="42227d3c-a9b9-4d8b-a985-290b73df33b7" isOneWay="false" action="" name="findHANDevice" bindingOperationName="findHANDevice" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="24286fbe-0359-4839-9ded-c800321db564" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:FindHANDeviceRequest>\r
         <!--Optional:-->\r
         <urn:Manufacturer>?</urn:Manufacturer>\r
         <!--Optional:-->\r
         <urn:Model>?</urn:Model>\r
         <!--Optional:-->\r
         <urn:DeviceState>?</urn:DeviceState>\r
         <!--Optional:-->\r
         <urn:HANDeviceType>?</urn:HANDeviceType>\r
         <!--Optional:-->\r
         <urn:FindDeviceCommonAttributes>\r
            <!--Optional:-->\r
            <urn:SerialNumber>?</urn:SerialNumber>\r
            <!--Optional:-->\r
            <urn:MacID>?</urn:MacID>\r
            <!--Optional:-->\r
            <urn:ServicePointID>?</urn:ServicePointID>\r
            <!--Optional:-->\r
            <urn:ProgramID>?</urn:ProgramID>\r
            <!--Optional:-->\r
            <urn:BillingLocationType>?</urn:BillingLocationType>\r
            <!--Optional:-->\r
            <urn:GridNode>\r
               <urn:GridNodeType>?</urn:GridNodeType>\r
               <urn:GridNodeNumber>?</urn:GridNodeNumber>\r
            </urn:GridNode>\r
            <!--Optional:-->\r
            <urn:HardwareVersion>?</urn:HardwareVersion>\r
            <!--Optional:-->\r
            <urn:FirmwareVersion>?</urn:FirmwareVersion>\r
            <!--Optional:-->\r
            <urn:City>?</urn:City>\r
            <!--Optional:-->\r
            <urn:State>?</urn:State>\r
            <!--Optional:-->\r
            <urn:PostalCode>?</urn:PostalCode>\r
            <!--Optional:-->\r
            <urn:ServicePointCustomAttribute1>?</urn:ServicePointCustomAttribute1>\r
            <!--Optional:-->\r
            <urn:ServicePointCustomAttribute2>?</urn:ServicePointCustomAttribute2>\r
            <!--Optional:-->\r
            <urn:ServicePointCustomAttribute3>?</urn:ServicePointCustomAttribute3>\r
            <!--Optional:-->\r
            <urn:ServicePointCustomAttribute4>?</urn:ServicePointCustomAttribute4>\r
            <!--Optional:-->\r
            <urn:ServicePointCustomAttribute5>?</urn:ServicePointCustomAttribute5>\r
         </urn:FindDeviceCommonAttributes>\r
         <!--Optional:-->\r
         <urn:HANDeviceName>?</urn:HANDeviceName>\r
         <!--Optional:-->\r
         <urn:ESIMacID>?</urn:ESIMacID>\r
         <!--Optional:-->\r
         <urn:ESIDeviceState>?</urn:ESIDeviceState>\r
         <!--Optional:-->\r
         <urn:ESIReadiness>\r
            <!--Optional:-->\r
            <urn:EnrolledInProgram>?</urn:EnrolledInProgram>\r
            <!--Optional:-->\r
            <urn:Provisioned>?</urn:Provisioned>\r
            <!--Optional:-->\r
            <urn:Connected>?</urn:Connected>\r
            <!--Optional:-->\r
            <urn:Retired>?</urn:Retired>\r
         </urn:ESIReadiness>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <urn:ZigbeeAttributes>\r
            <urn:TransportTypeZigbee>?</urn:TransportTypeZigbee>\r
            <!--Optional:-->\r
            <urn:UtilityEnrollmentGroupNumber>?</urn:UtilityEnrollmentGroupNumber>\r
            <!--Optional:-->\r
            <urn:SupportedSEPCluster>?</urn:SupportedSEPCluster>\r
            <!--Optional:-->\r
            <urn:ConnectivityStatus>?</urn:ConnectivityStatus>\r
            <!--Optional:-->\r
            <urn:SEPVersion>?</urn:SEPVersion>\r
            <!--Optional:-->\r
            <urn:HANDeviceClass>?</urn:HANDeviceClass>\r
         </urn:ZigbeeAttributes>\r
         <urn:D2GAttributes>\r
            <urn:TransportTypeD2G>?</urn:TransportTypeD2G>\r
            <!--Optional:-->\r
            <urn:CLPSupported>?</urn:CLPSupported>\r
            <!--Optional:-->\r
            <urn:Configured>?</urn:Configured>\r
         </urn:D2GAttributes>\r
         <urn:Pagination>\r
            <urn1:PageNumber>?</urn1:PageNumber>\r
            <urn1:PageSize>?</urn1:PageSize>\r
         </urn:Pagination>\r
      </urn:FindHANDeviceRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/findHANDeviceRequest"/></con:call></con:operation><con:operation id="51764ffe-5a88-425f-bdae-4e984c726123" isOneWay="false" action="" name="getActivateESIHANRadioCommandStatus" bindingOperationName="getActivateESIHANRadioCommandStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1101413d-965c-4b53-969b-5c0533f9ab68" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetActivateESIHANRadioCommandStatusRequest>\r
         <urn:ActivateESIHANRadioCommandID>?</urn:ActivateESIHANRadioCommandID>\r
      </urn:GetActivateESIHANRadioCommandStatusRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/getActivateESIHANRadioCommandStatusRequest"/></con:call></con:operation><con:operation id="a4bda416-afa2-41f8-8383-21bc9b0f6bc5" isOneWay="false" action="" name="getESIGroupMembers" bindingOperationName="getESIGroupMembers" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="17b99d75-916b-4826-b00d-e05679a051c3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetESIGroupMembersRequest>\r
         <urn:ESIGroupID>?</urn:ESIGroupID>\r
         <urn:Pagination>\r
            <urn1:PageNumber>?</urn1:PageNumber>\r
            <urn1:PageSize>?</urn1:PageSize>\r
         </urn:Pagination>\r
      </urn:GetESIGroupMembersRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/getESIGroupMembersRequest"/></con:call></con:operation><con:operation id="de7b6392-68b8-4ecb-8861-0edd27777ac0" isOneWay="false" action="" name="getESISyncStatus" bindingOperationName="getESISyncStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8e6216c1-929c-4c53-8183-45ec57faa617" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetESISyncStatusRequest>\r
         <urn:JobID>?</urn:JobID>\r
      </urn:GetESISyncStatusRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/getESISyncStatusRequest"/></con:call></con:operation><con:operation id="80820ee4-cfe0-4725-858c-f2b6271eba48" isOneWay="false" action="" name="getJobStatus" bindingOperationName="getJobStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="921d7d76-0f68-4969-b539-254142014df1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetJobStatusRequest>\r
         <urn:JobIdentifier>?</urn:JobIdentifier>\r
      </urn:GetJobStatusRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/getJobStatusRequest"/></con:call></con:operation><con:operation id="2598ae49-c11a-42ba-9aaa-9e12345540f5" isOneWay="false" action="" name="getPCTState" bindingOperationName="getPCTState" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="581ca809-4c89-4dac-9e5d-5823541f3cad" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetPCTStateRequest>\r
         <urn:PCTMacID>?</urn:PCTMacID>\r
      </urn:GetPCTStateRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/getPCTStateRequest"/></con:call></con:operation><con:operation id="efa5f44d-9d9b-4850-bea7-c999b5114a4e" isOneWay="false" action="" name="getPingHANDeviceStatus" bindingOperationName="getPingHANDeviceStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2cf17b1d-f941-4d43-aa55-d20d5ea6ad37" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetPingHANDeviceStatusRequest>\r
         <urn:PingHANDeviceCommandID>?</urn:PingHANDeviceCommandID>\r
      </urn:GetPingHANDeviceStatusRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/getPingHANDeviceStatusRequest"/></con:call></con:operation><con:operation id="a09fff3a-058d-4dbc-87a0-df46849d3dc5" isOneWay="false" action="" name="getProvisionHANDeviceCommandStatus" bindingOperationName="getProvisionHANDeviceCommandStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0ae05831-b106-4156-a263-b95b23e6a26a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetProvisionHANDeviceCommandStatusRequest>\r
         <urn:ProvisionHANDeviceCommandID>?</urn:ProvisionHANDeviceCommandID>\r
      </urn:GetProvisionHANDeviceCommandStatusRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/getProvisionHANDeviceCommandStatusRequest"/></con:call></con:operation><con:operation id="cb4c5a68-0634-40d4-9abb-77efd8e62e11" isOneWay="false" action="" name="listHANDevices" bindingOperationName="listHANDevices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="929ff2e4-a896-47a9-b5a1-8217552d1b80" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ListHANDevicesRequest>\r
         <!--1 to 100 repetitions:-->\r
         <urn:MacID>?</urn:MacID>\r
      </urn:ListHANDevicesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/listHANDevicesRequest"/></con:call></con:operation><con:operation id="64c6a7a1-0e64-4e8a-9a37-dc9711865ded" isOneWay="false" action="" name="pingHANDevice" bindingOperationName="pingHANDevice" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1fb7ea52-e867-4e55-91a7-1e82e097eb2c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:PingHANDeviceRequest>\r
         <urn:MacID>?</urn:MacID>\r
      </urn:PingHANDeviceRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/pingHANDeviceRequest"/></con:call></con:operation><con:operation id="ba60bdf2-9c73-4b35-93d4-0b38aceb6ffb" isOneWay="false" action="" name="provisionHANDevice" bindingOperationName="provisionHANDevice" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="daaa791b-9e23-4c08-8c11-fb74d9b96c7e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ProvisionHANDeviceRequest>\r
         <urn:HANMacID>?</urn:HANMacID>\r
         <urn:ESIMacID>?</urn:ESIMacID>\r
         <urn:JoinDurationSeconds>?</urn:JoinDurationSeconds>\r
      </urn:ProvisionHANDeviceRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/provisionHANDeviceRequest"/></con:call></con:operation><con:operation id="d51ffb9c-93f8-4560-9242-329c99f12bb6" isOneWay="false" action="" name="setILCO" bindingOperationName="setILCO" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b3e779e7-a2a9-4c62-9a9e-220aa977f6cc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:SetILCORequest>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <!--1 to 1000 repetitions:-->\r
         <urn:LCSMacID>?</urn:LCSMacID>\r
         <!--1 to 1000 repetitions:-->\r
         <urn:GroupID>?</urn:GroupID>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <urn:Reset/>\r
         <urn:DaysInThePastToUseForOptimization>?</urn:DaysInThePastToUseForOptimization>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <urn:DeviceWideTarget/>\r
         <urn:TargetVirtualRelayID>?</urn:TargetVirtualRelayID>\r
      </urn:SetILCORequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/setILCORequest"/></con:call></con:operation><con:operation id="a845f1ef-3fb9-490f-b90e-c8a5f399e147" isOneWay="false" action="" name="setPCTState" bindingOperationName="setPCTState" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="56d7afe5-bf8b-4088-9010-4ffc1a6d0632" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:SetPCTStateRequest>\r
         <urn:PCTMacID>?</urn:PCTMacID>\r
         <!--Optional:-->\r
         <urn:HeatSetpoint>?</urn:HeatSetpoint>\r
         <!--Optional:-->\r
         <urn:CoolSetpoint>?</urn:CoolSetpoint>\r
         <!--Optional:-->\r
         <urn:HoldType>?</urn:HoldType>\r
         <!--Optional:-->\r
         <urn:HoldUntilTime>?</urn:HoldUntilTime>\r
         <!--Optional:-->\r
         <urn:FanMode>?</urn:FanMode>\r
         <!--Optional:-->\r
         <urn:Mode>?</urn:Mode>\r
      </urn:SetPCTStateRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/setPCTStateRequest"/></con:call></con:operation><con:operation id="8436c812-c745-451f-adc3-7541a9016569" isOneWay="false" action="" name="syncESI" bindingOperationName="syncESI" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="55e4f185-266e-40e1-9edf-2503a4409869" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:SyncESIRequest>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <!--1 to 1000 repetitions:-->\r
         <urn:ESIMacID>?</urn:ESIMacID>\r
         <!--1 or more repetitions:-->\r
         <urn:GroupID>?</urn:GroupID>\r
      </urn:SyncESIRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/syncESIRequest"/></con:call></con:operation><con:operation id="dacedda3-ffe0-452c-8b9c-d73c0f952572" isOneWay="false" action="" name="unprovisionHANDevice" bindingOperationName="unprovisionHANDevice" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c53af056-a131-4494-8856-71ed4f019270" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:UnprovisionHANDeviceRequest>\r
         <urn:HANMacID>?</urn:HANMacID>\r
      </urn:UnprovisionHANDeviceRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/unprovisionHANDeviceRequest"/></con:call></con:operation><con:operation id="80848e50-e250-43eb-b5b9-97c05160ce41" isOneWay="false" action="" name="updateDeviceEventLogs" bindingOperationName="updateDeviceEventLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bbc53912-b89e-4651-99b0-0a695552a622" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/DeviceManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:UpdateDeviceEventLogsRequest>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <!--1 to 1000 repetitions:-->\r
         <urn:ESIMacID>?</urn:ESIMacID>\r
         <!--1 or more repetitions:-->\r
         <urn:GroupID>?</urn:GroupID>\r
      </urn:UpdateDeviceEventLogsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/updateDeviceEventLogsRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="dffc4d07-809e-4bc2-9f72-83a24d31617c" wsaVersion="NONE" name="ServicePointManagerSoapBinding" type="wsdl" bindingName="{urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager}ServicePointManagerSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ServicePointManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ServicePointManager.wsdl"><con:part><con:url>file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ServicePointManager.wsdl</con:url><con:content><![CDATA[<!--root element wsdl:definitions defines set of related services-->
<wsdl:definitions name="ServicePointManager" targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager" xmlns:basicxsd="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" xmlns:location="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd" xmlns:spm="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager" xmlns:spmxsd="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.wsdl" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.wsdl">
      <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd" schemaLocation="./ServicePointManagerTypes_v1_3.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="AddServicePointRequest">
    <wsdl:part name="body" element="spmxsd:AddServicePointRequest"/>
  </wsdl:message>
  <wsdl:message name="AddServicePointResponse">
    <wsdl:part name="body" element="spmxsd:AddServicePointResponse"/>
  </wsdl:message>
  <wsdl:message name="EditServicePointRequest">
    <wsdl:part name="body" element="spmxsd:EditServicePointRequest"/>
  </wsdl:message>
  <wsdl:message name="EditServicePointResponse">
    <wsdl:part name="body" element="spmxsd:EditServicePointResponse"/>
  </wsdl:message>
  <wsdl:message name="GetServicePointEnrollmentRequest">
    <wsdl:part name="body" element="spmxsd:GetServicePointEnrollmentRequest"/>
  </wsdl:message>
  <wsdl:message name="GetServicePointEnrollmentResponse">
    <wsdl:part name="body" element="spmxsd:GetServicePointEnrollmentResponse"/>
  </wsdl:message>
  <wsdl:message name="ErrorFault">
    <wsdl:part name="fault" element="basicxsd:ErrorFault"/>
  </wsdl:message>
  <wsdl:portType name="ServicePointManagerPortType">
    <wsdl:operation name="addServicePoint">
      <wsdl:input message="spm:AddServicePointRequest"/>
      <wsdl:output message="spm:AddServicePointResponse"/>
      <wsdl:fault name="ErrorFault" message="spm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="editServicePoint">
      <wsdl:input message="spm:EditServicePointRequest"/>
      <wsdl:output message="spm:EditServicePointResponse"/>
      <wsdl:fault name="ErrorFault" message="spm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getServicePointEnrollment">
      <wsdl:input message="spm:GetServicePointEnrollmentRequest"/>
      <wsdl:output message="spm:GetServicePointEnrollmentResponse"/>
      <wsdl:fault name="ErrorFault" message="spm:ErrorFault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServicePointManagerSoapBinding" type="spm:ServicePointManagerPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="addServicePoint">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editServicePoint">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServicePointEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServicePointManagerService">
    <wsdl:documentation>Itron Service Point Manager Service</wsdl:documentation>
    <wsdl:port name="ServicePointManagerPort" binding="spm:ServicePointManagerSoapBinding">
      <soap:address location="https://localhost:8080/drm/services/v1_3/ServicePointManagerPort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\ServicePointManagerTypes_v1_3.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd" xmlns:basic="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" xmlns:location="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd">
  <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" schemaLocation="BasicTypes_v1_1.xsd"/>
  <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd" schemaLocation="LocationTypes_v1_0.xsd"/>
  <!--global element definitions that correspond to the message documents-->
  <xsd:element name="AddServicePointRequest" type="AddServicePointRequestType"/>
  <xsd:element name="AddServicePointResponse" type="AddServicePointResponseType"/>
  <xsd:element name="EditServicePointRequest" type="EditServicePointRequestType"/>
  <xsd:element name="EditServicePointResponse" type="EditServicePointResponseType"/>
  <xsd:element name="GetServicePointEnrollmentRequest" type="GetServicePointEnrollmentRequestType"/>
  <xsd:element name="GetServicePointEnrollmentResponse" type="GetServicePointEnrollmentResponseType"/>
  <!--Complex Types in alphabetical order-->
  <xsd:complexType name="GetServicePointEnrollmentRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
				generic
				fatal_error
				authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ServicePointID" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetServicePointEnrollmentResponseType">
    <xsd:sequence>
      <xsd:element name="ServicePointEnrollment" type="ServicePointEnrollmentType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="UnknownSPID" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ServicePointEnrollmentType">
    <xsd:sequence>
      <xsd:element name="ServicePointID" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>This is the Utility-defined service point ID, as opposed to the ID
						internal to DRM.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ServicePointName" type="xsd:string" minOccurs="0"/>
      <xsd:element name="BaseRatePlan" type="EnrollmentInfoType" minOccurs="0"/>
      <xsd:element name="LoadedRatePlan" type="EnrollmentInfoType" minOccurs="0"/>
      <xsd:element name="Program" type="EnrollmentInfoType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EnrollmentInfoType">
    <xsd:sequence>
      <xsd:element name="ID" type="xsd:long"/>
      <xsd:element name="Name" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddServicePointRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
				generic
				fatal_error
				authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ServicePoint" type="AddServicePointType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddServicePointResponseType">
    <xsd:sequence>
      <xsd:element name="UtilServicePointID" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EditServicePointRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
				generic
				fatal_error
				authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ServicePoint" type="EditServicePointType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EditServicePointResponseType">
    <xsd:sequence>
      <xsd:element name="UtilServicePointID" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddServicePointType">
    <xsd:complexContent>
      <xsd:extension base="BasicServicePointType">
        <xsd:sequence>
          <xsd:element name="Account" type="location:AccountType"/>
          <xsd:element name="Location" type="location:LocationType"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="EditServicePointType">
    <xsd:complexContent>
      <xsd:extension base="BasicServicePointType">
        <xsd:sequence>
          <xsd:element name="Account" type="location:AccountType" minOccurs="0"/>
          <xsd:element name="Location" type="location:LocationType" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BasicServicePointType">
    <xsd:sequence>
      <xsd:element name="UtilServicePointID" type="xsd:string"/>
      <xsd:element name="FeederDistNetUtilID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="SubstationDistNetUtilID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="TransformerDistNetUtilID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="TransmissionDistNetUtilID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Attribute1" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Attribute2" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Attribute3" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Attribute4" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Attribute5" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\BasicTypes_v1_1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <!--global element definitions that correspond to the message documents-->
  <xsd:element name="ErrorFault" type="ErrorFaultType"/>
  <!--Complex Types in alphabetical order-->
  <xsd:complexType name="ErrorFaultType">
    <xsd:sequence>
      <xsd:element name="Error" type="ErrorType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ErrorType">
    <xsd:sequence>
      <xsd:element name="ErrorCode" type="xsd:string"/>
      <xsd:element name="ErrorMessage" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NullableKiloWattType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="KiloWatts" type="KiloWattType"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="PaginationType">
    <xsd:annotation>
      <xsd:documentation>A reusable encapsulation of a page number and a page size.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PageNumber" type="PageNumber">
        <xsd:annotation>
          <xsd:documentation>An page number, should be greater or equal 1.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PageSize" type="PageSize">
        <xsd:annotation>
          <xsd:documentation>A page size, should be greater or equal 1 and smaller or equal 1000.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="JobStatusType">
    <xsd:sequence>
      <xsd:element name="JobID" type="xsd:long"/>
      <xsd:element name="ExecutionStatus" type="JobExecutionStatusType"/>
      <xsd:element name="ExecutionStatusDetail" type="xsd:string" minOccurs="0"/>
      <xsd:element name="StartTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="FinishTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Canceled" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="CanceledTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Duration" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalPending" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalCanceled" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalCompleted" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalTimeout" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalFailure" type="xsd:int" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NullableSEPVersionType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="SEPVersion" type="SEPVersionEnumeration"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <!--Simple types, in alphabetical order-->
  <xsd:simpleType name="DRMTimeType">
    <xsd:annotation>
      <xsd:documentation>DRM doesn't handle time values of 24:00:00.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:time">
      <xsd:maxInclusive value="23:59:59.99999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="KiloWattType">
    <xsd:restriction base="xsd:float">
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageNumber">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageSize">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="1000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="JobExecutionStatusType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PENDING">
        <xsd:annotation>
          <xsd:documentation>Used when the job execution status is not yet available.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="COMPLETE"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="RUNNING"/>
      <xsd:enumeration value="CANCELLED"/>
      <xsd:enumeration value="CANCELLATION_IN_PROGRESS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SEPVersionEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="1.0"/>
      <xsd:enumeration value="1.1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ZeroToFiftyNineInt">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="59"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ZeroToTwentyThreeInt">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="23"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\LocationTypes_v1_0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd">
  <xsd:complexType name="AccountType">
    <xsd:sequence>
      <xsd:element name="UtilAccountID" type="xsd:string"/>
      <xsd:element name="CustomerName" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Description" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Email" type="xsd:string" minOccurs="0"/>
      <xsd:element name="PhoneNumber" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LocationType">
    <xsd:sequence>
      <xsd:element name="Address1" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Address2" type="xsd:string" minOccurs="0"/>
      <xsd:element name="City" type="xsd:string" minOccurs="0"/>
      <xsd:element name="County" type="xsd:string" minOccurs="0"/>
      <xsd:element name="State" type="xsd:string" minOccurs="0"/>
      <xsd:element name="PostCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="CrossStreet" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Country" type="xsd:string" minOccurs="0"/>
      <xsd:element name="LocationType" type="LocationTypeEnumeration"/>
      <xsd:element name="PremiseUtilId" type="xsd:string"/>
      <xsd:element name="TZID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Longitude" type="xsd:double" minOccurs="0"/>
      <xsd:element name="Latitude" type="xsd:double" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="LocationTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOCATION_TYPE_PREMISE"/>
      <xsd:enumeration value="LOCATION_TYPE_NETWORK"/>
      <xsd:enumeration value="LOCATION_TYPE_POLE"/>
      <xsd:enumeration value="LOCATION_TYPE_TRANSFORM"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8083/ServicePointManagerPort</con:endpoint></con:endpoints><con:operation id="02cd0091-36d8-4eee-9b80-048e8694f5bc" isOneWay="false" action="" name="addServicePoint" bindingOperationName="addServicePoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="682ec93b-9fab-4627-b59c-1affa0d30d5f" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ServicePointManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:AddServicePointRequest>\r
         <urn:ServicePoint>\r
            <urn:UtilServicePointID>25</urn:UtilServicePointID>\r
            <!--Optional:-->\r
            <urn:FeederDistNetUtilID>?</urn:FeederDistNetUtilID>\r
            <!--Optional:-->\r
            <urn:SubstationDistNetUtilID>?</urn:SubstationDistNetUtilID>\r
            <!--Optional:-->\r
            <urn:TransformerDistNetUtilID>?</urn:TransformerDistNetUtilID>\r
            <!--Optional:-->\r
            <urn:TransmissionDistNetUtilID>?</urn:TransmissionDistNetUtilID>\r
            <!--Optional:-->\r
            <urn:Attribute1>?</urn:Attribute1>\r
            <!--Optional:-->\r
            <urn:Attribute2>?</urn:Attribute2>\r
            <!--Optional:-->\r
            <urn:Attribute3>?</urn:Attribute3>\r
            <!--Optional:-->\r
            <urn:Attribute4>?</urn:Attribute4>\r
            <!--Optional:-->\r
            <urn:Attribute5>?</urn:Attribute5>\r
            <urn:Account>\r
               <urn1:UtilAccountID>?</urn1:UtilAccountID>\r
               <!--Optional:-->\r
               <urn1:CustomerName>?</urn1:CustomerName>\r
               <!--Optional:-->\r
               <urn1:Description>?</urn1:Description>\r
               <!--Optional:-->\r
               <urn1:Email>?</urn1:Email>\r
               <!--Optional:-->\r
               <urn1:PhoneNumber>?</urn1:PhoneNumber>\r
            </urn:Account>\r
            <urn:Location>\r
               <!--Optional:-->\r
               <urn1:Address1>?</urn1:Address1>\r
               <!--Optional:-->\r
               <urn1:Address2>?</urn1:Address2>\r
               <!--Optional:-->\r
               <urn1:City>?</urn1:City>\r
               <!--Optional:-->\r
               <urn1:County>?</urn1:County>\r
               <!--Optional:-->\r
               <urn1:State>?</urn1:State>\r
               <!--Optional:-->\r
               <urn1:PostCode>?</urn1:PostCode>\r
               <!--Optional:-->\r
               <urn1:CrossStreet>?</urn1:CrossStreet>\r
               <!--Optional:-->\r
               <urn1:Country>?</urn1:Country>\r
               <urn1:LocationType>?</urn1:LocationType>\r
               <urn1:PremiseUtilId>?</urn1:PremiseUtilId>\r
               <!--Optional:-->\r
               <urn1:TZID>?</urn1:TZID>\r
               <!--Optional:-->\r
               <urn1:Longitude>?</urn1:Longitude>\r
               <!--Optional:-->\r
               <urn1:Latitude>?</urn1:Latitude>\r
            </urn:Location>\r
         </urn:ServicePoint>\r
      </urn:AddServicePointRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:preemptive>true</con:preemptive><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager/ServicePointManagerPortType/addServicePointRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c2e6a551-6b6e-4dd3-96c7-78aac9e4dfcd" isOneWay="false" action="" name="editServicePoint" bindingOperationName="editServicePoint" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="447e0cf7-a9aa-4a94-bc67-7748a1f90e0c" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ServicePointManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:EditServicePointRequest>\r
         <urn:ServicePoint>\r
            <urn:UtilServicePointID>25</urn:UtilServicePointID>\r
            <!--Optional:-->\r
            <urn:FeederDistNetUtilID>?</urn:FeederDistNetUtilID>\r
            <!--Optional:-->\r
            <urn:SubstationDistNetUtilID>?</urn:SubstationDistNetUtilID>\r
            <!--Optional:-->\r
            <urn:TransformerDistNetUtilID>?</urn:TransformerDistNetUtilID>\r
            <!--Optional:-->\r
            <urn:TransmissionDistNetUtilID>?</urn:TransmissionDistNetUtilID>\r
            <!--Optional:-->\r
            <urn:Attribute1>?</urn:Attribute1>\r
            <!--Optional:-->\r
            <urn:Attribute2>?</urn:Attribute2>\r
            <!--Optional:-->\r
            <urn:Attribute3>?</urn:Attribute3>\r
            <!--Optional:-->\r
            <urn:Attribute4>?</urn:Attribute4>\r
            <!--Optional:-->\r
            <urn:Attribute5>?</urn:Attribute5>\r
            <!--Optional:-->\r
            <urn:Account>\r
               <urn1:UtilAccountID>?</urn1:UtilAccountID>\r
               <!--Optional:-->\r
               <urn1:CustomerName>?</urn1:CustomerName>\r
               <!--Optional:-->\r
               <urn1:Description>?</urn1:Description>\r
               <!--Optional:-->\r
               <urn1:Email>?</urn1:Email>\r
               <!--Optional:-->\r
               <urn1:PhoneNumber>?</urn1:PhoneNumber>\r
            </urn:Account>\r
            <!--Optional:-->\r
            <urn:Location>\r
               <!--Optional:-->\r
               <urn1:Address1>?</urn1:Address1>\r
               <!--Optional:-->\r
               <urn1:Address2>?</urn1:Address2>\r
               <!--Optional:-->\r
               <urn1:City>?</urn1:City>\r
               <!--Optional:-->\r
               <urn1:County>?</urn1:County>\r
               <!--Optional:-->\r
               <urn1:State>?</urn1:State>\r
               <!--Optional:-->\r
               <urn1:PostCode>?</urn1:PostCode>\r
               <!--Optional:-->\r
               <urn1:CrossStreet>?</urn1:CrossStreet>\r
               <!--Optional:-->\r
               <urn1:Country>?</urn1:Country>\r
               <urn1:LocationType>?</urn1:LocationType>\r
               <urn1:PremiseUtilId>?</urn1:PremiseUtilId>\r
               <!--Optional:-->\r
               <urn1:TZID>?</urn1:TZID>\r
               <!--Optional:-->\r
               <urn1:Longitude>?</urn1:Longitude>\r
               <!--Optional:-->\r
               <urn1:Latitude>?</urn1:Latitude>\r
            </urn:Location>\r
         </urn:ServicePoint>\r
      </urn:EditServicePointRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager/ServicePointManagerPortType/editServicePointRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="c7ddf610-ecca-493b-82e7-93b527e29e54" isOneWay="false" action="" name="getServicePointEnrollment" bindingOperationName="getServicePointEnrollment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="429c01f6-f339-46ea-8aa9-c10463673869" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ServicePointManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetServicePointEnrollmentRequest>\r
         <!--1 or more repetitions:-->\r
         <urn:ServicePointID>?</urn:ServicePointID>\r
      </urn:GetServicePointEnrollmentRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager/ServicePointManagerPortType/getServicePointEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="95a18212-dcce-422c-8a97-e51c899a2e8d" wsaVersion="NONE" name="ProgramEventManagerSoapBinding" type="wsdl" bindingName="{urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager}ProgramEventManagerSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ProgramEventManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ProgramEventManager.wsdl"><con:part><con:url>file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ProgramEventManager.wsdl</con:url><con:content><![CDATA[<!--root element wsdl:definitions defines set of related services-->
<wsdl:definitions name="ProgramEventManager" targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager" xmlns:basicxsd="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" xmlns:pem="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager" xmlns:pemxsd="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.wsdl" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.wsdl">
      <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd" schemaLocation="./ProgramEventManagerTypes_v1_6.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ErrorFault">
    <wsdl:part name="fault" element="basicxsd:ErrorFault"/>
  </wsdl:message>
  <wsdl:message name="AddBatchMessageRequest">
    <wsdl:part name="body" element="pemxsd:AddBatchMessageRequest"/>
  </wsdl:message>
  <wsdl:message name="AddBatchMessageResponse">
    <wsdl:part name="body" element="pemxsd:AddBatchMessageResponse"/>
  </wsdl:message>
  <wsdl:message name="AddBatchMessageProgramEventRequest">
    <wsdl:part name="body" element="pemxsd:AddBatchMessageProgramEventRequest"/>
  </wsdl:message>
  <wsdl:message name="AddMessageProgramEventRequest">
    <wsdl:part name="body" element="pemxsd:AddMessageProgramEventRequest"/>
  </wsdl:message>
  <wsdl:message name="AddCriticalPeakPriceProgramEventRequest">
    <wsdl:part name="body" element="pemxsd:AddCriticalPeakPriceProgramEventRequest"/>
  </wsdl:message>
  <wsdl:message name="AddHANLoadControlProgramEventRequest">
    <wsdl:part name="body" element="pemxsd:AddHANLoadControlProgramEventRequest"/>
  </wsdl:message>
  <wsdl:message name="AddProgramEventResponse">
    <wsdl:part name="body" element="pemxsd:AddProgramEventResponse"/>
  </wsdl:message>
  <wsdl:message name="CancelAllHANLoadControlProgramEventOnDevicesRequest">
    <wsdl:part name="body" element="pemxsd:CancelAllHANLoadControlProgramEventOnDevicesRequest"/>
  </wsdl:message>
  <wsdl:message name="CancelAllHANLoadControlProgramEventOnDevicesResponse">
    <wsdl:part name="body" element="pemxsd:CancelAllHANLoadControlProgramEventOnDevicesResponse"/>
  </wsdl:message>
  <wsdl:message name="CancelHANLoadControlProgramEventOnDevicesRequest">
    <wsdl:part name="body" element="pemxsd:CancelHANLoadControlProgramEventOnDevicesRequest"/>
  </wsdl:message>
  <wsdl:message name="CancelHANLoadControlProgramEventOnDevicesResponse">
    <wsdl:part name="body" element="pemxsd:CancelHANLoadControlProgramEventOnDevicesResponse"/>
  </wsdl:message>
  <wsdl:message name="CancelCriticalPeakPriceProgramEventRequest">
    <wsdl:part name="body" element="pemxsd:CancelCriticalPeakPriceProgramEventRequest"/>
  </wsdl:message>
  <wsdl:message name="CancelCriticalPeakPriceProgramEventResponse">
    <wsdl:part name="body" element="pemxsd:CancelCriticalPeakPriceProgramEventResponse"/>
  </wsdl:message>
  <wsdl:message name="CancelHANLoadControlProgramEventRequest">
    <wsdl:part name="body" element="pemxsd:CancelHANLoadControlProgramEventRequest"/>
  </wsdl:message>
  <wsdl:message name="CancelHANLoadControlProgramEventResponse">
    <wsdl:part name="body" element="pemxsd:CancelHANLoadControlProgramEventResponse"/>
  </wsdl:message>
  <wsdl:message name="CancelMessageProgramEventRequest">
    <wsdl:part name="body" element="pemxsd:CancelMessageProgramEventRequest"/>
  </wsdl:message>
  <wsdl:message name="CancelMessageProgramEventResponse">
    <wsdl:part name="body" element="pemxsd:CancelMessageProgramEventResponse"/>
  </wsdl:message>
  <wsdl:message name="EditInProgressD2GHANLoadControlProgramEventRequest">
    <wsdl:part name="body" element="pemxsd:EditInProgressD2GHANLoadControlProgramEventRequest"/>
  </wsdl:message>
  <wsdl:message name="EditInProgressD2GHANLoadControlProgramEventResponse">
    <wsdl:part name="body" element="pemxsd:EditInProgressD2GHANLoadControlProgramEventResponse"/>
  </wsdl:message>
  <wsdl:message name="DeployBatchProgramEventRequest">
    <wsdl:part name="body" element="pemxsd:DeployBatchProgramEventRequest"/>
  </wsdl:message>
  <wsdl:message name="DeployBatchProgramEventResponse">
    <wsdl:part name="body" element="pemxsd:DeployBatchProgramEventResponse"/>
  </wsdl:message>
  <wsdl:message name="FindBatchMessagesRequest">
    <wsdl:part name="body" element="pemxsd:FindBatchMessagesRequest"/>
  </wsdl:message>
  <wsdl:message name="FindBatchMessagesResponse">
    <wsdl:part name="body" element="pemxsd:FindBatchMessagesResponse"/>
  </wsdl:message>
  <wsdl:message name="GetBatchMessageProgramEventResultsRequest">
    <wsdl:part name="body" element="pemxsd:GetBatchMessageProgramEventResultsRequest"/>
  </wsdl:message>
  <wsdl:message name="GetBatchMessageProgramEventResultsResponse">
    <wsdl:part name="body" element="pemxsd:GetBatchMessageProgramEventResultsResponse"/>
  </wsdl:message>
  <wsdl:message name="GetCriticalPeakPriceProgramEventResultsRequest">
    <wsdl:part name="body" element="pemxsd:GetCriticalPeakPriceProgramEventResultsRequest"/>
  </wsdl:message>
  <wsdl:message name="GetCriticalPeakPriceProgramEventResultsResponse">
    <wsdl:part name="body" element="pemxsd:GetCriticalPeakPriceProgramEventResultsResponse"/>
  </wsdl:message>
  <wsdl:message name="GetLoadControlProgramEventResultsRequest">
    <wsdl:part name="body" element="pemxsd:GetLoadControlProgramEventResultsRequest"/>
  </wsdl:message>
  <wsdl:message name="GetLoadControlProgramEventResultsResponse">
    <wsdl:part name="body" element="pemxsd:GetLoadControlProgramEventResultsResponse"/>
  </wsdl:message>
  <wsdl:message name="GetMessageProgramEventResultsRequest">
    <wsdl:part name="body" element="pemxsd:GetMessageProgramEventResultsRequest"/>
  </wsdl:message>
  <wsdl:message name="GetMessageProgramEventResultsResponse">
    <wsdl:part name="body" element="pemxsd:GetMessageProgramEventResultsResponse"/>
  </wsdl:message>
  <wsdl:message name="GetProgramEventStatusRequest">
    <wsdl:part name="body" element="pemxsd:GetProgramEventStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="GetProgramEventStatusResponse">
    <wsdl:part name="body" element="pemxsd:GetProgramEventStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="OptOutDeviceRequest">
    <wsdl:part name="body" element="pemxsd:OptOutDeviceRequest"/>
  </wsdl:message>
  <wsdl:message name="OptOutDeviceResponse">
    <wsdl:part name="body" element="pemxsd:OptOutDeviceResponse"/>
  </wsdl:message>
  <wsdl:message name="RemoveUnsentBatchMessageForProgramRequest">
    <wsdl:part name="body" element="pemxsd:RemoveUnsentBatchMessageForProgramRequest"/>
  </wsdl:message>
  <wsdl:message name="RemoveUnsentBatchMessageForProgramResponse">
    <wsdl:part name="body" element="pemxsd:RemoveUnsentBatchMessageForProgramResponse"/>
  </wsdl:message>
  <wsdl:portType name="ProgramEventManagerPortType">
    <wsdl:operation name="addBatchMessage">
      <wsdl:input message="pem:AddBatchMessageRequest"/>
      <wsdl:output message="pem:AddBatchMessageResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="addBatchMessageProgramEvent">
      <wsdl:input message="pem:AddBatchMessageProgramEventRequest"/>
      <wsdl:output message="pem:AddProgramEventResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="addMessageProgramEvent">
      <wsdl:input message="pem:AddMessageProgramEventRequest"/>
      <wsdl:output message="pem:AddProgramEventResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="addCriticalPeakPriceProgramEvent">
      <wsdl:input message="pem:AddCriticalPeakPriceProgramEventRequest"/>
      <wsdl:output message="pem:AddProgramEventResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="addHANLoadControlProgramEvent">
      <wsdl:input message="pem:AddHANLoadControlProgramEventRequest"/>
      <wsdl:output message="pem:AddProgramEventResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="cancelAllHANLoadControlProgramEventOnDevices">
      <wsdl:input message="pem:CancelAllHANLoadControlProgramEventOnDevicesRequest"/>
      <wsdl:output message="pem:CancelAllHANLoadControlProgramEventOnDevicesResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="cancelCriticalPeakPriceProgramEvent">
      <wsdl:input message="pem:CancelCriticalPeakPriceProgramEventRequest"/>
      <wsdl:output message="pem:CancelCriticalPeakPriceProgramEventResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="cancelHANLoadControlProgramEvent">
      <wsdl:input message="pem:CancelHANLoadControlProgramEventRequest"/>
      <wsdl:output message="pem:CancelHANLoadControlProgramEventResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="cancelHANLoadControlProgramEventOnDevices">
      <wsdl:input message="pem:CancelHANLoadControlProgramEventOnDevicesRequest"/>
      <wsdl:output message="pem:CancelHANLoadControlProgramEventOnDevicesResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="cancelMessageProgramEvent">
      <wsdl:input message="pem:CancelMessageProgramEventRequest"/>
      <wsdl:output message="pem:CancelMessageProgramEventResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="editInProgressD2GHANLoadControlProgramEvent">
      <wsdl:input message="pem:EditInProgressD2GHANLoadControlProgramEventRequest"/>
      <wsdl:output message="pem:EditInProgressD2GHANLoadControlProgramEventResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="deployBatchProgramEvent">
      <wsdl:input message="pem:DeployBatchProgramEventRequest"/>
      <wsdl:output message="pem:DeployBatchProgramEventResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="findBatchMessages">
      <wsdl:input message="pem:FindBatchMessagesRequest"/>
      <wsdl:output message="pem:FindBatchMessagesResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getBatchMessageProgramEventResults">
      <wsdl:input message="pem:GetBatchMessageProgramEventResultsRequest"/>
      <wsdl:output message="pem:GetBatchMessageProgramEventResultsResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getCriticalPeakPriceProgramEventResults">
      <wsdl:input message="pem:GetCriticalPeakPriceProgramEventResultsRequest"/>
      <wsdl:output message="pem:GetCriticalPeakPriceProgramEventResultsResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getLoadControlProgramEventResults">
      <wsdl:input message="pem:GetLoadControlProgramEventResultsRequest"/>
      <wsdl:output message="pem:GetLoadControlProgramEventResultsResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getMessageProgramEventResult">
      <wsdl:input message="pem:GetMessageProgramEventResultsRequest"/>
      <wsdl:output message="pem:GetMessageProgramEventResultsResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="getProgramEventStatus">
      <wsdl:input message="pem:GetProgramEventStatusRequest"/>
      <wsdl:output message="pem:GetProgramEventStatusResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="optOutDevice">
      <wsdl:input message="pem:OptOutDeviceRequest"/>
      <wsdl:output message="pem:OptOutDeviceResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="removeUnsentBatchMessageForProgram">
      <wsdl:input message="pem:RemoveUnsentBatchMessageForProgramRequest"/>
      <wsdl:output message="pem:RemoveUnsentBatchMessageForProgramResponse"/>
      <wsdl:fault name="ErrorFault" message="pem:ErrorFault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ProgramEventManagerSoapBinding" type="pem:ProgramEventManagerPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="addBatchMessage">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addBatchMessageProgramEvent">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addMessageProgramEvent">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCriticalPeakPriceProgramEvent">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addHANLoadControlProgramEvent">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelAllHANLoadControlProgramEventOnDevices">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelCriticalPeakPriceProgramEvent">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelHANLoadControlProgramEvent">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelHANLoadControlProgramEventOnDevices">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelMessageProgramEvent">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deployBatchProgramEvent">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editInProgressD2GHANLoadControlProgramEvent">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findBatchMessages">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getBatchMessageProgramEventResults">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCriticalPeakPriceProgramEventResults">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoadControlProgramEventResults">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMessageProgramEventResult">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProgramEventStatus">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="optOutDevice">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeUnsentBatchMessageForProgram">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ProgramEventManagerService">
    <wsdl:documentation>Itron Program Event Manager Service</wsdl:documentation>
    <wsdl:port name="ProgramEventManagerPort" binding="pem:ProgramEventManagerSoapBinding">
      <soap:address location="https://localhost:8080/drm/services/v1_6/ProgramEventManagerPort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\ProgramEventManagerTypes_v1_6.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd" xmlns:basic="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" schemaLocation="BasicTypes_v1_1.xsd"/>
  <!--Complex Types in alphabetical order-->
  <xsd:element name="AddBatchMessageProgramEventRequest" type="AddBatchMessageProgramEventRequestType"/>
  <xsd:element name="AddBatchMessageProgramEventResponse" type="AddProgramEventResponseType"/>
  <xsd:element name="AddCriticalPeakPriceProgramEventRequest" type="AddCriticalPeakPriceProgramEventRequestType"/>
  <xsd:element name="AddHANLoadControlProgramEventRequest" type="AddHANLoadControlProgramEventRequestType"/>
  <xsd:element name="AddMessageProgramEventRequest" type="AddMessageProgramEventRequestType"/>
  <xsd:element name="AddBatchMessageRequest" type="AddBatchMessageRequestType"/>
  <xsd:element name="AddBatchMessageResponse" type="AddBatchMessageResponseType"/>
  <xsd:element name="AddProgramEventResponse" type="AddProgramEventResponseType"/>
  <xsd:element name="CancelAllHANLoadControlProgramEventOnDevicesRequest" type="CancelAllHANLoadControlProgramEventOnDevicesRequestType"/>
  <xsd:element name="CancelAllHANLoadControlProgramEventOnDevicesResponse" type="CancelAllHANLoadControlProgramEventOnDevicesResponseType"/>
  <xsd:element name="CancelCriticalPeakPriceProgramEventRequest" type="CancelCriticalPeakPriceProgramEventRequestType"/>
  <xsd:element name="CancelCriticalPeakPriceProgramEventResponse" type="CancelCriticalPeakPriceProgramEventResponseType"/>
  <xsd:element name="CancelHANLoadControlProgramEventRequest" type="CancelHANLoadControlProgramEventRequestType"/>
  <xsd:element name="CancelHANLoadControlProgramEventResponse" type="CancelHANLoadControlProgramEventResponseType"/>
  <xsd:element name="CancelHANLoadControlProgramEventOnDevicesRequest" type="CancelHANLoadControlProgramEventOnDevicesRequestType"/>
  <xsd:element name="CancelHANLoadControlProgramEventOnDevicesResponse" type="CancelHANLoadControlProgramEventOnDevicesResponseType"/>
  <xsd:element name="CancelMessageProgramEventRequest" type="CancelMessageProgramEventRequestType"/>
  <xsd:element name="CancelMessageProgramEventResponse" type="CancelMessageProgramEventResponseType"/>
  <xsd:element name="DeployBatchProgramEventRequest" type="DeployBatchProgramEventRequestType"/>
  <xsd:element name="DeployBatchProgramEventResponse" type="EmptyType"/>
  <xsd:element name="EditInProgressD2GHANLoadControlProgramEventRequest" type="EditInProgressD2GHANLoadControlProgramEventRequestType"/>
  <xsd:element name="EditInProgressD2GHANLoadControlProgramEventResponse" type="EditInProgressD2GHANLoadControlProgramEventResponseType"/>
  <xsd:element name="GetBatchMessageProgramEventResultsRequest" type="GetProgramEventResultRequestType"/>
  <xsd:element name="GetBatchMessageProgramEventResultsResponse" type="GetBatchMessageProgramEventResultsResponseType"/>
  <xsd:element name="GetCriticalPeakPriceProgramEventResultsRequest" type="GetProgramEventResultRequestType"/>
  <xsd:element name="GetCriticalPeakPriceProgramEventResultsResponse" type="GetCriticalPeakPriceProgramEventResultsResponseType"/>
  <xsd:element name="GetLoadControlProgramEventResultsRequest" type="GetProgramEventResultRequestType"/>
  <xsd:element name="GetLoadControlProgramEventResultsResponse" type="GetLoadControlProgramEventResultsResponseType"/>
  <xsd:element name="GetMessageProgramEventResultsRequest" type="GetProgramEventResultRequestType"/>
  <xsd:element name="GetMessageProgramEventResultsResponse" type="GetMessageProgramEventResultsResponseType"/>
  <xsd:element name="GetProgramEventStatusRequest" type="GetProgramEventStatusRequestType"/>
  <xsd:element name="GetProgramEventStatusResponse" type="GetProgramEventStatusResponseType"/>
  <xsd:element name="FindBatchMessagesRequest" type="FindBatchMessagesRequestType"/>
  <xsd:element name="FindBatchMessagesResponse" type="FindBatchMessagesResponseType"/>
  <xsd:element name="OptOutDeviceRequest" type="OptOutDeviceRequestType"/>
  <xsd:element name="OptOutDeviceResponse" type="OptOutDeviceResponseType"/>
  <xsd:element name="RemoveUnsentBatchMessageForProgramRequest" type="RemoveUnsentBatchMessageForProgramRequestType"/>
  <xsd:element name="RemoveUnsentBatchMessageForProgramResponse" type="RemoveUnsentBatchMessageForProgramResponseType"/>
  <xsd:complexType name="AddBatchMessageProgramEventRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                generic
                fatal_error
                authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="BatchMessageProgramEvent" type="AddBatchMessageProgramEventType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddBatchMessageType">
    <xsd:sequence>
      <xsd:element name="ProgramID" type="xsd:long"/>
      <xsd:element name="ProgramEventID" type="xsd:long"/>
      <xsd:element name="ESIMacID" type="xsd:string"/>
      <xsd:element name="Message" type="xsd:string"/>
      <xsd:element name="Priority" type="MessagePriorityEnumeration"/>
      <xsd:element name="Duration" type="MessageDurationType"/>
      <xsd:element name="StartDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Omitting the start date will cause the message event to start when it's deployed. When
                        using Batch Messages, we strongly recommend providing a specific start date in case several
                        messages are batched for the same ESI and arrive at the same time.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddBatchProgramEventType">
    <xsd:complexContent>
      <xsd:extension base="ProgramEventType">
        <xsd:sequence>
          <xsd:annotation>
            <xsd:documentation>When sending batch events, the event is created first without any deployment information and then data is added. 
                            to the event with a call such as AddBatchMessage. Once you have added data to the event, call
                            DeployBatchProgramEvent to schedule the event for deployment.</xsd:documentation>
          </xsd:annotation>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddBatchMessageProgramEventType">
    <xsd:complexContent>
      <xsd:extension base="AddBatchProgramEventType"></xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BatchEventPublicationType">
    <xsd:sequence>
      <xsd:element name="DeploymentDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Omitting the deployment date will deploy the event immediately.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddBatchMessageResultType">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="BatchMessageID" type="xsd:long"/>
        <xsd:element name="Error" type="basic:ErrorType" maxOccurs="unbounded"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddCriticalPeakPriceProgramEventRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CriticalPeakPriceProgramEvent" type="AddCriticalPeakPriceProgramEventType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddCriticalPeakPriceProgramEventType">
    <xsd:complexContent>
      <xsd:extension base="UnbatchedProgramEventType">
        <xsd:sequence>
          <xsd:element name="CPPValue" type="CriticalPriceType"/>
          <xsd:element name="CPPOperation" type="CriticalPriceOperationType"/>
          <xsd:element name="PriceTier" type="CriticalPriceTierType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>In UtilOS versions 3.6.4 and earlier, as well as UtilOS version 3.8.0, this value is
                                required.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="MeterTier" type="CriticalPriceMeterTierType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>In UtilOS versions 3.6.4 and earlier, as well as UtilOS version 3.8.0, this value is
                                required.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="CPPLabel" type="xsd:string" minOccurs="0"/>
          <xsd:element name="Duration" type="CriticalPriceDurationType"/>
          <xsd:element name="SetRTPMode" type="xsd:boolean"/>
          <xsd:element name="Message" type="ProgramEventOptionalMessageType" minOccurs="0"/>
          <xsd:element name="RandomizedStartPreRollTime" type="RandomizedPrePostRollType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Omitting this will not randomize the start time.  Including it will randomize the start
                                time by up to the number of minutes specified in this element.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="RandomizedEndPostRollTime" type="RandomizedPrePostRollType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Omitting this will not randomize the end time.  Including it will randomize the end time
                                by up to the number of minutes specified in this element.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddHANLoadControlProgramEventRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="HANLoadControlProgramEvent" type="AddHANLoadControlProgramEventType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddHANLoadControlProgramEventType">
    <xsd:complexContent>
      <xsd:extension base="UnbatchedProgramEventType">
        <xsd:sequence>
          <xsd:element name="RandomizeStartTime" type="xsd:boolean"/>
          <xsd:element name="RandomizeEndTime" type="xsd:boolean"/>
          <xsd:element name="DutyCyclePercentage" type="LoadControlDutyCyclePercentageType" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>DutyCyclePercentage is required for D2G HAN devices to be targeted; it is optional
	                            for ZigBee HAN devices if at least one other load control option is specified (see
	                            LoadControlProgramEventZigBeeParamsType for details).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:choice>
            <xsd:element name="ZigBeeParams" type="LoadControlProgramEventZigBeeParamsType">
              <xsd:annotation>
                <xsd:documentation>Parameters specific to ZigBee HAN Devices targeted by this Load Control Event.
                                    
					                ZigBee specific load control options include AverageLoadAdjustmentPercentage, CoolingAdjustment,
					                and HeatingAdjustment (DutyCyclePercentage, found in AddHANLoadControlProgramEventType, is also
					                supported and is shared with D2G devices). At least one ZigBee supported load control option must
					                be specified for Zigbee HAN devices to be targeted by an event.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="D2GParams" type="LoadControlProgramEventD2GParamsType">
              <xsd:annotation>
                <xsd:documentation>Parameters specific to D2G HAN Devices targeted by this Load Control Event</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="CombinedParams" type="LoadControlProgramEventCombinedParamsType">
              <xsd:annotation>
                <xsd:documentation>Parameters for events that target both ZigBee and D2G HAN Devices
                                    
                                    ZigBee specific load control options include AverageLoadAdjustmentPercentage, CoolingAdjustment,
                                    and HeatingAdjustment (DutyCyclePercentage, found in AddHANLoadControlProgramEventType, is also
                                    supported and is shared with D2G devices). At least one ZigBee supported load control option must
                                    be specified for Zigbee HAN devices to be targeted by an event.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddMessageProgramEventRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="MessageProgramEvent" type="AddMessageProgramEventType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddMessageProgramEventType">
    <xsd:complexContent>
      <xsd:extension base="UnbatchedProgramEventType">
        <xsd:sequence>
          <xsd:element name="Message" type="xsd:string"/>
          <xsd:element name="Priority" type="MessagePriorityEnumeration"/>
          <xsd:element name="AcknowledgementRequired" type="xsd:boolean"/>
          <xsd:element name="Duration" type="MessageDurationType"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddBatchMessageResponseType">
    <xsd:sequence>
      <xsd:element name="BatchMessageResultResult" type="AddBatchMessageResultType" minOccurs="0" maxOccurs="1000"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddBatchMessageRequestType">
    <xsd:sequence>
      <xsd:element name="BatchMessage" type="AddBatchMessageType" maxOccurs="1000"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddProgramEventResponseType">
    <xsd:sequence>
      <xsd:element name="ProgramEventID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BatchMessageType">
    <xsd:complexContent>
      <xsd:extension base="AddBatchMessageType">
        <xsd:sequence>
          <xsd:element name="BatchMessageID" type="xsd:long"/>
          <xsd:element name="Status" type="BatchMessageStatusEnumeration"/>
          <xsd:element name="DateAdded" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BatchMessageProgramEventResultsType">
    <xsd:complexContent>
      <xsd:extension base="ProgramEventResultsType">
        <xsd:sequence>
          <xsd:element name="BatchMessageID" type="xsd:long"/>
          <xsd:element name="StartDate" type="xsd:dateTime" minOccurs="0"/>
          <xsd:element name="PublicationStatus" type="BatchMessageStatusEnumeration"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BatchMessageEventStatusType">
    <xsd:complexContent>
      <xsd:extension base="CommonEventStatusType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CancelAllHANLoadControlProgramEventOnDevicesRequestType">
    <xsd:annotation>
      <xsd:documentation>Cancel all event (message, load control event and cpp event) on the target devices.
			At least one of device group id or nic mac id are required but any combination (other than zero of both) is acceptable.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="EnableDRLCRandomization" type="xsd:boolean" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>Only applies to DRLC events that might be running on the devices. A value of "true" will cause the
	                    cancel event to use the randomization setting of DRLC event(s) running on the device. A value of 
	                    false means cancel at the effective time (generally immediately), overriding event randomization
	                    settings.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DeviceGroupID" type="xsd:long" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Target device group ID list</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="NicMacID" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Target NIC device list</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CancelAllHANLoadControlProgramEventOnDevicesResponseType">
    <xsd:sequence>
      <xsd:element name="JobID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CancelCriticalPeakPriceProgramEventRequestType">
    <xsd:sequence>
      <xsd:element name="ProgramEventID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CancelCriticalPeakPriceProgramEventResponseType">
    <xsd:sequence>
      <xsd:element name="ProgramEventID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CancelHANLoadControlProgramEventRequestType">
    <xsd:sequence>
      <xsd:element name="ProgramEventID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CancelHANLoadControlProgramEventResponseType">
    <xsd:sequence>
      <xsd:element name="ProgramEventID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CancelHANLoadControlProgramEventOnDevicesRequestType">
    <xsd:annotation>
      <xsd:documentation>Cancel the DRLC event in all the target devices. 
			  If caller input the value to DeviceGroupID and/or NicMacID, it will cancel the DRLC event on those specific target devices.
			  If caller won't input any value to DeviceGroupID and NicMacID, it will cancel the DRLC event on all of this event's target devices.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="EventID" type="xsd:long" minOccurs="1"/>
      <xsd:element name="EnableRandomization" type="xsd:boolean" minOccurs="1"/>
      <xsd:element name="DeviceGroupID" type="xsd:long" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>target device group ID list</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="NicMacID" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>target Nic device list</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CancelHANLoadControlProgramEventOnDevicesResponseType">
    <xsd:sequence>
      <xsd:element name="JobID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CancelMessageProgramEventRequestType">
    <xsd:sequence>
      <xsd:element name="ProgramEventID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CancelMessageProgramEventResponseType">
    <xsd:sequence>
      <xsd:element name="ProgramEventID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CommonEventStatusType">
    <xsd:sequence>
      <xsd:element name="TargetedESICount" type="ProgramEventStatusType"/>
      <xsd:element name="UnreachableESICount" type="ProgramEventStatusType"/>
      <xsd:element name="CancelledESICount" type="ProgramEventStatusType" minOccurs="0"/>
      <xsd:element name="NotCancelledESICount" type="ProgramEventStatusType" minOccurs="0"/>
      <xsd:element name="ReceivedESICount" type="ProgramEventStatusType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CPPEventStatusType">
    <xsd:complexContent>
      <xsd:extension base="CommonEventStatusType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="CriticalPeakPriceProgramEventResultsType">
    <xsd:complexContent>
      <xsd:extension base="ProgramEventResultsType">
        <xsd:sequence>
          <xsd:element name="StartTime" type="xsd:dateTime" minOccurs="0"/>
          <xsd:element name="EndTime" type="xsd:dateTime" minOccurs="0"/>
          <xsd:element name="RTPEnableStatus" type="RealTimePriceStatusEnumeration" minOccurs="0"/>
          <xsd:element name="RTPEnableTime" type="xsd:dateTime" minOccurs="0"/>
          <xsd:element name="RTPDisableStatus" type="RealTimePriceStatusEnumeration" minOccurs="0"/>
          <xsd:element name="RTPDisableTime" type="xsd:dateTime" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DeployBatchProgramEventRequestType">
    <xsd:complexContent>
      <xsd:extension base="BatchEventPublicationType">
        <xsd:sequence>
          <xsd:element name="ProgramEventID" type="xsd:long"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="EditInProgressD2GHANLoadControlProgramEventRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    editInProgressD2GHANLoadControlProgramEvent.eventNotFound
                    editInProgressD2GHANLoadControlProgramEvent.eventNotLoadControl
                    editInProgressD2GHANLoadControlProgramEvent.eventDurationTooShort
                    editInProgressD2GHANLoadControlProgramEvent.eventNotInProgress
                    editInProgressD2GHANLoadControlProgramEvent.eventNotEnoughProgress
                    editInProgressD2GHANLoadControlProgramEvent.eventHasNoValidTargetDevices
                    editInProgressD2GHANLoadControlProgramEvent.eventTargetsZigBeeDevice</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ExistingProgramEventID" type="xsd:long"/>
      <xsd:element name="DutyCyclePercentage" type="LoadControlDutyCyclePercentageType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If DutyCyclePercentage is not provided the value from the original program event will be used.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DutyCycleCount" type="ByteType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If DutyCycleCount is not provided the value from the original program event will be used.
                        Changing this is a way to extend or shorten the length of the event given that the start
                        time is the same as the original event.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EditInProgressD2GHANLoadControlProgramEventResponseType">
    <xsd:sequence>
      <xsd:element name="NewProgramEventID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EmptyType"/>
  <xsd:complexType name="FindBatchMessagesRequestType">
    <xsd:sequence>
      <xsd:element name="ProgramID" type="xsd:long"/>
      <xsd:element name="ESIMacID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ProgramEventID" type="xsd:long" minOccurs="0"/>
      <xsd:element name="Status" type="BatchMessageStatusEnumeration" minOccurs="0"/>
      <xsd:element name="DateAddedRangeStart" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="DateAddedRangeEnd" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Pagination" type="basic:PaginationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="FindBatchMessagesResponseType">
    <xsd:sequence>
      <xsd:element name="BatchMessageCount" type="xsd:long" minOccurs="0"/>
      <xsd:element name="BatchMessage" type="BatchMessageType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetProgramEventResultRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                generic
                fatal_error
                programEvent.notFound</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ProgramEventID" type="xsd:long"/>
      <xsd:element name="Pagination" type="basic:PaginationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetBatchMessageProgramEventResultsResponseType">
    <xsd:complexContent>
      <xsd:extension base="ProgramEventResultsResponseType">
        <xsd:sequence>
          <xsd:element name="Results" type="BatchMessageProgramEventResultsType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GetCriticalPeakPriceProgramEventResultsResponseType">
    <xsd:complexContent>
      <xsd:extension base="ProgramEventWithOptionalMessageResultsResponseType">
        <xsd:sequence>
          <xsd:element name="Results" type="CriticalPeakPriceProgramEventResultsType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GetMessageProgramEventResultsResponseType">
    <xsd:complexContent>
      <xsd:extension base="ProgramEventResultsResponseType">
        <xsd:sequence>
          <xsd:element name="Results" type="MessageProgramEventResultsType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GetLoadControlProgramEventResultsResponseType">
    <xsd:complexContent>
      <xsd:extension base="ProgramEventWithOptionalMessageResultsResponseType">
        <xsd:sequence>
          <xsd:element name="Results" type="LoadControlProgramEventResultsType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="GetProgramEventStatusRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    programEvent.notFound</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ProgramEventID" type="xsd:long" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetProgramEventStatusResponseType">
    <xsd:sequence>
      <xsd:element name="EventStatus" type="SingleEventStatusType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LoadControlEventStatusType">
    <xsd:complexContent>
      <xsd:extension base="CommonEventStatusType">
        <xsd:sequence>
          <xsd:element name="TargetedHANCount" type="ProgramEventStatusType" minOccurs="0"/>
          <xsd:element name="StartedHANCount" type="ProgramEventStatusType" minOccurs="0"/>
          <xsd:element name="CompletedHANCount" type="ProgramEventStatusType" minOccurs="0"/>
          <xsd:element name="OverriddenHANCount" type="ProgramEventStatusType" minOccurs="0"/>
          <xsd:element name="SupersededHANCount" type="ProgramEventStatusType" minOccurs="0"/>
          <xsd:element name="ReceivedLateHANCount" type="ProgramEventStatusType" minOccurs="0"/>
          <xsd:element name="CancelledHANCount" type="ProgramEventStatusType" minOccurs="0"/>
          <xsd:element name="NotCancelledHANCount" type="ProgramEventStatusType" minOccurs="0"/>
          <xsd:element name="UnknownHANCount" type="ProgramEventStatusType" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="LoadControlProgramEventCombinedParamsType">
    <xsd:sequence>
      <xsd:element name="ZigBeeParams" type="LoadControlProgramEventZigBeeParamsType"/>
      <xsd:element name="D2GParams" type="LoadControlProgramEventD2GParamsType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LoadControlProgramEventD2GParamsType">
    <xsd:sequence>
      <xsd:element name="Criticality" type="CriticalityType"/>
      <xsd:element name="DutyCyclePeriod" type="ByteType"/>
      <xsd:element name="DutyCycleCount" type="ByteType"/>
      <xsd:element name="VirtualRelayAddress" type="VirtualRelayAddressType"/>
      <xsd:element name="EventControl" type="EventControlType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LoadControlProgramEventResultsType">
    <xsd:complexContent>
      <xsd:extension base="ProgramEventResultsType">
        <xsd:sequence>
          <xsd:element name="Overridden" type="xsd:boolean"/>
          <xsd:element name="OverrideTime" type="xsd:dateTime" minOccurs="0"/>
          <xsd:element name="StartTime" type="xsd:dateTime" minOccurs="0"/>
          <xsd:element name="EndTime" type="xsd:dateTime" minOccurs="0"/>
          <xsd:element name="HANDeviceReceivedTime" type="xsd:dateTime" minOccurs="0"/>
          <xsd:element name="TargetDeviceClass" type="xsd:string" minOccurs="0"/>
          <xsd:element name="LoadControlStatus" type="LoadControlStatusEnumeration" minOccurs="0"/>
          <xsd:element name="LoadControlStatusTime" type="xsd:dateTime" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="LoadControlProgramEventZigBeeParamsType">
    <xsd:annotation>
      <xsd:documentation>ZigBee specific load control options include AverageLoadAdjustmentPercentage, CoolingAdjustment,
                and HeatingAdjustment (DutyCyclePercentage, found in AddHANLoadControlProgramEventType, is also
                supported and is shared with D2G devices). At least one ZigBee supported load control option must
                be specified for Zigbee HAN devices to be targeted by an event.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Duration" type="LoadControlDurationType"/>
      <xsd:element name="Priority" type="LoadControlPriorityEnumeration"/>
      <xsd:element name="EnrollmentGroup" type="xsd:int" minOccurs="0"/>
      <xsd:element name="DeviceClass" type="HANDeviceClassEnumeration" minOccurs="0"/>
      <xsd:element name="CoolingAdjustment" type="LoadControlTemperatureAdjustmentType" minOccurs="0"/>
      <xsd:element name="HeatingAdjustment" type="LoadControlTemperatureAdjustmentType" minOccurs="0"/>
      <xsd:element name="AverageLoadAdjustmentPercentage" type="LoadControlAverageLoadAdjustmentPercentageType" minOccurs="0"/>
      <xsd:element name="Message" type="ProgramEventOptionalMessageType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LoadControlTemperatureAdjustmentType">
    <xsd:sequence>
      <xsd:element name="Value" type="xsd:double"/>
      <xsd:element name="Type" type="LoadControlTemperatureTypeEnumeration"/>
      <xsd:element name="Units" type="LoadControlTemperatureUnitsEnumeration"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageEventStatusType">
    <xsd:complexContent>
      <xsd:extension base="CommonEventStatusType">
        <xsd:sequence>
          <xsd:element name="AcknowledgedESICount" type="ProgramEventStatusType" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="MessageProgramEventResultsType">
    <xsd:complexContent>
      <xsd:extension base="ProgramEventResultsType">
        <xsd:sequence>
          <xsd:element name="MessageAcknowledgeTime" type="xsd:dateTime" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="OptOutDeviceRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="OptOutDevice" type="OptOutDeviceType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OptOutDeviceResponseType">
    <xsd:sequence>
      <xsd:element name="OptOutDeviceResponse" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OptOutDeviceType">
    <xsd:sequence>
      <xsd:element name="DeploymentTime" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Omitting the deployment time will deploy the command immediately.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="StartTime" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Omitting the start time will execute the command when it's deployed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Duration" type="OptOutDurationType"/>
      <xsd:element minOccurs="1" maxOccurs="100" name="LCSMacID" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProgramEventOptionalMessageType">
    <xsd:sequence>
      <xsd:element name="Message" type="xsd:string"/>
      <xsd:element name="Priority" type="MessagePriorityEnumeration"/>
      <xsd:element name="AcknowledgementRequired" type="xsd:boolean"/>
      <xsd:element name="Duration" type="MessageDurationType"/>
      <xsd:element name="StartTime" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Omitting the start time will deploy the event immediately.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProgramEventResultsResponseType">
    <xsd:sequence>
      <xsd:element name="ResultCount" type="xsd:int"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProgramEventWithOptionalMessageResultsResponseType">
    <xsd:complexContent>
      <xsd:extension base="ProgramEventResultsResponseType">
        <xsd:sequence>
          <xsd:element name="OptionalMessageResults" type="MessageProgramEventResultsType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ProgramEventResultsType">
    <xsd:sequence>
      <xsd:element name="ESIMacID" type="xsd:string"/>
      <xsd:element name="MacID" type="xsd:string" minOccurs="0"/>
      <xsd:element name="PublicationTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="ReceivedTime" type="xsd:dateTime"/>
      <xsd:element name="DeviceStatus" type="ProgramEventDeviceStatusEnumeration"/>
      <xsd:element name="CommandStatus" type="ESICommandStatusEnumeration"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProgramEventStatusType">
    <xsd:sequence>
      <xsd:element name="CurrentValue" type="xsd:int"/>
      <xsd:element name="TotalValue" type="xsd:int"/>
      <xsd:element name="PercentCompleted" type="xsd:double" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ProgramEventType">
    <xsd:sequence>
      <xsd:element name="ProgramID" type="xsd:long"/>
      <xsd:element name="Name" type="xsd:string"/>
      <xsd:element name="Description" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RemoveUnsentBatchMessageForProgramRequestType">
    <xsd:annotation>
      <xsd:documentation>This method will remove unsent batch messages. Callers may filter the messages to be removed by
                Program ID or ESI Mac ID, or both Program ID and ESI Mac ID; if neither ProgramID or ESIMacID are
                provided, all unsent messages will be removed. Alternatively, callers may choose to remove up to
                1000 specific unsent messages using their specific IDs.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:sequence>
        <xsd:element name="ProgramID" type="xsd:long" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>If the ProgramID is specified, only unsent messages for that program will be removed.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="ESIMacID" type="xsd:string" minOccurs="0" maxOccurs="1000">
          <xsd:annotation>
            <xsd:documentation>If the ESIMacID is specified, only unsent messages for that ESI will be removed.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="BatchMessageID" type="xsd:long" minOccurs="0" maxOccurs="1000"/>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="RemoveUnsentBatchMessageForProgramResponseType">
    <xsd:annotation>
      <xsd:documentation>When removing unsent messages by ProgramID and/or ESIMacID (or all unsent messages) there are no
                error conditions; if no messages are eligible for removal under those conditions, the request is always
                considered a success.

                However, when trying to remove specific messages by message ID, error conditions may be returned for
                individual messages if they could not be deleted (not found, not eligible to be deleted, etc.).</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="RemovalError" type="RemoveUnsentBatchMessageErrorType" minOccurs="0" maxOccurs="1000"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="RemoveUnsentBatchMessageErrorType">
    <xsd:sequence>
      <xsd:element name="BatchMessageID" type="xsd:long"/>
      <xsd:element name="MessageRemovalError" type="basic:ErrorType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SingleEventStatusType">
    <xsd:sequence>
      <xsd:element name="EventID" type="xsd:long"/>
      <xsd:element name="EventType" type="ProgramEventEnumType"/>
      <xsd:element name="Status" type="ProgramEventRunStatusType"/>
      <xsd:element name="CanceledBeforeDeployment" type="xsd:boolean"/>
      <xsd:element name="BatchMessageEventStatus" type="BatchMessageEventStatusType" minOccurs="0"/>
      <xsd:element name="CPPEventStatus" type="CPPEventStatusType" minOccurs="0"/>
      <xsd:element name="LoadControlEventStatus" type="LoadControlEventStatusType" minOccurs="0"/>
      <xsd:element name="MessageEventStatus" type="MessageEventStatusType" minOccurs="0"/>
      <xsd:element name="OptionalMessageEventStatus" type="MessageEventStatusType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="UnbatchedProgramEventType">
    <xsd:complexContent>
      <xsd:extension base="ProgramEventType">
        <xsd:sequence>
          <xsd:element name="DeploymentDate" type="xsd:dateTime" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Omitting the deployment date will deploy the event immediately.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="StartDate" type="xsd:dateTime" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Omitting the start date will start the event when it's deployed.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="EventOptions" type="UnbatchedProgramEventOptionsType" minOccurs="0"/>
          <xsd:choice>
            <xsd:element name="TargetESIMacID" type="xsd:string"/>
            <xsd:element name="DeviceGroupID" type="xsd:long" minOccurs="0" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>If no device group IDs are provided, all devices on the program are eligible to
                                        receive the event. When device group IDs are provided, the definition of each
                                        device group is copied and the event's program is added as an additional
                                        restriction to the new group, if it is not already present. Editing the
                                        definition of a device group after an event using it has been created will have
                                        no effect on the device groups used by the event.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:choice>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="UnbatchedProgramEventOptionsType">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="FilterNotReadyDevices" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>Setting this value to true will cause the event to determine, at deployment time, which
                            devices are in the "Ready" state. Any device that is considered to be "Not Ready" will
                            be filtered out of the recipient list at that time and HCM will make no attempt to send
                            the event to those devices.

                            If the element is false or not present, the "Not Ready" devices will be included in the
                            event, though they may not be reachable. Note that some devices may be filtered out for
                            other reasons (such as the HAN radio being off).</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="UseRapidEventDispatch" type="xsd:boolean">
          <xsd:annotation>
            <xsd:documentation>Setting this value to true will cause the event to determine, at deployment time, which
                            Access Points (APs) will communicate the command to the event's target devices. The event
                            will then be distributed to all devices under those APs. This means that some devices not
                            explicitly in the DeviceGroupID list, and more devices than the single TargetESIMacID, may
                            receive and participate in the event.

                            This option may only be used for events created on a program that supports Rapid Event
                            Dispatch.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <!--Simple Types in alphabetical order-->
  <xsd:simpleType name="BatchMessageStatusEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UNSENT"/>
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="SENT"/>
      <xsd:enumeration value="FAILED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ByteType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CriticalityType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CriticalPriceDurationType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="32767"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CriticalPriceMeterTierType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="6"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CriticalPriceTierType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="6"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CriticalPriceType">
    <xsd:restriction base="xsd:double">
      <xsd:minInclusive value="0.000001"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CriticalPriceOperationType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REPLACEMENT"/>
      <xsd:enumeration value="ADDITIVE"/>
      <xsd:enumeration value="MULTIPLICATIVE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ESICommandStatusEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="ZIGBEE_VRAM_FAILURE"/>
      <xsd:enumeration value="ZIGBEE_TIMEOUT"/>
      <xsd:enumeration value="ZIGBEE_ROUTE_FAILURE"/>
      <xsd:enumeration value="ZIGBEE_OUT_OF_MEMORY"/>
      <xsd:enumeration value="ZIGBEE_UNSUPPORTED_COMMAND"/>
      <xsd:enumeration value="ZIGBEE_INVALID_ADDRESSING_MODE"/>
      <xsd:enumeration value="ZIGBEE_INVALID_COMMAND"/>
      <xsd:enumeration value="ZIGBEE_EVENT_TABLE_FULL"/>
      <xsd:enumeration value="ZIGBEE_EVENT_PAST"/>
      <xsd:enumeration value="ZIGBEE_DUPLICATE_EVENT"/>
      <xsd:enumeration value="ESI_TIME_NOT_SET"/>
      <xsd:enumeration value="HAN_DISABLED"/>
      <xsd:enumeration value="ZIGBEE_DATA_IN_USE"/>
      <xsd:enumeration value="ZIGBEE_DATA_NOT_FOUND"/>
      <xsd:enumeration value="ZIGBEE_SUPERSEDED"/>
      <xsd:enumeration value="ZIGBEE_DEADLINE_PAST"/>
      <xsd:enumeration value="ESI_NUMBER_OVERFLOW"/>
      <xsd:enumeration value="SUCCESS"/>
      <xsd:enumeration value="NOT_APPLICABLE_ASYNC_RESULT"/>
      <xsd:enumeration value="GENERAL_FAILURE"/>
      <xsd:enumeration value="APPLICATION_FAILURE"/>
      <xsd:enumeration value="TIMEOUT"/>
      <xsd:enumeration value="ERROR_SCHEDULE"/>
      <xsd:enumeration value="ERROR_CANCEL"/>
      <xsd:enumeration value="ERROR_EXPIRE"/>
      <xsd:enumeration value="ERROR_NIC_FAILURE"/>
      <xsd:enumeration value="ERROR_SECURITY_SEQUENCE"/>
      <xsd:enumeration value="ERROR_SECURITY_ASSOCIATION"/>
      <xsd:enumeration value="ERROR_SECURITY_VERIFY"/>
      <xsd:enumeration value="ERROR_SECURITY_FAILURE"/>
      <xsd:enumeration value="ERROR_SECURITY_NO_CERT"/>
      <xsd:enumeration value="ERROR_SECURITY_NO_PRIVILEGE"/>
      <xsd:enumeration value="ERROR_ASSOCIATION_TIMEOUT"/>
      <xsd:enumeration value="ERROR_SECURITY_NIC_IS_MISSING_EPHEMERAL_BLOB"/>
      <xsd:enumeration value="ERROR_SECURITY_NIC_HAS_NO_TIME"/>
      <xsd:enumeration value="ERROR_SECURITY_RATE_LIMIT_EXCEEDED"/>
      <xsd:enumeration value="ERROR_UNKNOWN"/>
      <xsd:enumeration value="NO_ROUTE_TO_DEVICE"/>
      <xsd:enumeration value="COMMAND_BUILD_FAILURE"/>
      <xsd:enumeration value="ERROR_EXCEPTION"/>
      <xsd:enumeration value="NOT_APPLICABLE"/>
      <xsd:enumeration value="CANCEL_SUCCESS"/>
      <xsd:enumeration value="UNKNOWN_STATUS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EventControlType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="STANDARD"/>
      <xsd:enumeration value="ADVANCED_OPTION_1"/>
      <xsd:enumeration value="ADVANCED_OPTION_2"/>
      <xsd:enumeration value="ADVANCED_OPTION_3"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HANDeviceClassEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="HVAC"/>
      <xsd:enumeration value="STRIP_HEATER"/>
      <xsd:enumeration value="WATER_HEATER"/>
      <xsd:enumeration value="POOL_PUMP"/>
      <xsd:enumeration value="SMART_APPLIANCE"/>
      <xsd:enumeration value="IRRIGATION_PUMP"/>
      <xsd:enumeration value="CI_LOAD"/>
      <xsd:enumeration value="SIMPLE_LOAD"/>
      <xsd:enumeration value="EXT_LIGHTING"/>
      <xsd:enumeration value="INT_LIGHTING"/>
      <xsd:enumeration value="ELECTRIC_VEHICLE"/>
      <xsd:enumeration value="GENERATION_SYSTEM"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LoadControlAverageLoadAdjustmentPercentageType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="-100"/>
      <xsd:maxInclusive value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LoadControlDurationType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="1440"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LoadControlDutyCyclePercentageType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LoadControlPriorityEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="GREEN"/>
      <xsd:enumeration value="ONE"/>
      <xsd:enumeration value="TWO"/>
      <xsd:enumeration value="THREE"/>
      <xsd:enumeration value="FOUR"/>
      <xsd:enumeration value="FIVE"/>
      <xsd:enumeration value="EMERGENCY"/>
      <xsd:enumeration value="PLANNED_OUTAGE"/>
      <xsd:enumeration value="SERVICE_DISCONNECT"/>
      <xsd:enumeration value="UTILITY_DEFINED_1"/>
      <xsd:enumeration value="UTILITY_DEFINED_2"/>
      <xsd:enumeration value="UTILITY_DEFINED_3"/>
      <xsd:enumeration value="UTILITY_DEFINED_4"/>
      <xsd:enumeration value="UTILITY_DEFINED_5"/>
      <xsd:enumeration value="UTILITY_DEFINED_6"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LoadControlStatusEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="COMMAND_RECEIVED"/>
      <xsd:enumeration value="EVENT_STARTED"/>
      <xsd:enumeration value="EVENT_COMPLETED"/>
      <xsd:enumeration value="USER_OPT_OUT"/>
      <xsd:enumeration value="USER_OPT_IN"/>
      <xsd:enumeration value="EVENT_CANCELLED"/>
      <xsd:enumeration value="EVENT_SUPERSEDED"/>
      <xsd:enumeration value="EVENT_PARTIALLY_COMPLETED_WITH_USER_OPT_OUT"/>
      <xsd:enumeration value="EVENT_PARTIALLY_COMPLETED_DUE_TO_USER_OPT_IN"/>
      <xsd:enumeration value="EVENT_COMPLETED_NO_USER_PARTICIPATION"/>
      <xsd:enumeration value="EVENT_SUSPENDED_DEVICE_HAS_NO_TIME"/>
      <xsd:enumeration value="EVENT_REJECTED_INVALID_CANCEL_COMMAND"/>
      <xsd:enumeration value="EVENT_REJECTED_INVALID_CANCEL_COMMAND_INVALID_EFF_TIME"/>
      <xsd:enumeration value="EVENT_REJECTED_RECEIVED_AFTER_EXPIRY"/>
      <xsd:enumeration value="EVENT_REJECTED_INVALID_CANCEL_COMMAND_UNDEFINED_EVENT"/>
      <xsd:enumeration value="EVENT_REJECTED"/>
      <xsd:enumeration value="UNKNOWN_EVENT_STATE"/>
      <xsd:enumeration value="INSUFFICIENT_COMMAND_PARAMETERS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LoadControlTemperatureTypeEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="OFFSET"/>
      <xsd:enumeration value="SET_POINT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LoadControlTemperatureUnitsEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FARENHEIT"/>
      <xsd:enumeration value="CELSIUS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="MessageDurationType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="32767"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="MessagePriorityEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="LOW"/>
      <xsd:enumeration value="MEDIUM"/>
      <xsd:enumeration value="HIGH"/>
      <xsd:enumeration value="CRITICAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="OptOutDurationType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="32767"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ProgramEventEnumType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MESSAGE"/>
      <xsd:enumeration value="CRITICAL_PEAK_PRICE"/>
      <xsd:enumeration value="LOAD_CONTROL"/>
      <xsd:enumeration value="BATCH_MESSAGE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ProgramEventDeviceStatusEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EVENT_CPP_SENT"/>
      <xsd:enumeration value="EVENT_CPP_CANCELED"/>
      <xsd:enumeration value="EVENT_CPP_RTP_SUCCESS"/>
      <xsd:enumeration value="EVENT_CPP_RTP_FAIL_UNSUPPORTED"/>
      <xsd:enumeration value="EVENT_CPP_RTP_FAIL_NIC"/>
      <xsd:enumeration value="EVENT_CPP_RTP_FAIL_METER"/>
      <xsd:enumeration value="EVENT_CPP_RTP_FAIL_TIMEOUT"/>
      <xsd:enumeration value="EVENT_MESSAGE_SENT"/>
      <xsd:enumeration value="EVENT_MESSAGE_CANCELLED"/>
      <xsd:enumeration value="EVENT_MESSAGE_ACKED"/>
      <xsd:enumeration value="EVENT_LC_SENT"/>
      <xsd:enumeration value="EVENT_LC_RECEIVED"/>
      <xsd:enumeration value="EVENT_LC_STARTED"/>
      <xsd:enumeration value="EVENT_LC_COMPLETED"/>
      <xsd:enumeration value="EVENT_LC_USER_OPT_OUT"/>
      <xsd:enumeration value="EVENT_LC_USER_OPT_IN"/>
      <xsd:enumeration value="EVENT_LC_CANCELLED"/>
      <xsd:enumeration value="EVENT_LC_SUPERSEDED"/>
      <xsd:enumeration value="EVENT_LC_PARTIALLY_COMPLETED_WITH_USER_OPT_OUT"/>
      <xsd:enumeration value="EVENT_LC_PARTIALLY_COMPLETED_DUE_TO_USER_OPT_IN"/>
      <xsd:enumeration value="EVENT_LC_COMPLETED_NO_USER_PARTICIPATION"/>
      <xsd:enumeration value="EVENT_LC_REJECTED_RECEIVED_AFTER_EXPIRY"/>
      <xsd:enumeration value="EVENT_LC_REJECTED"/>
      <xsd:enumeration value="EVENT_BATCH_DATA_SUCCESS"/>
      <xsd:enumeration value="EVENT_BATCH_DATA_FAILURE"/>
      <xsd:enumeration value="EVENT_PENDING_CANCELLATION"/>
      <xsd:enumeration value="EVENT_DEVICE_PENDING_CANCELLATION"/>
      <xsd:enumeration value="EVENT_DEVICE_CANCELLED"/>
      <xsd:enumeration value="DONE_NO_PROCESSING_EXPECTED"/>
      <xsd:enumeration value="APPLICATION_FAILURE"/>
      <xsd:enumeration value="AWAITING_ASYNC_RESPONSE"/>
      <xsd:enumeration value="RETRIES_EXHAUSTED"/>
      <xsd:enumeration value="NO_SUCCESSFUL_COMMUNICATION"/>
      <xsd:enumeration value="UNKNOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ProgramEventRunStatusType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PENDING"/>
      <xsd:enumeration value="DEPLOYED"/>
      <xsd:enumeration value="IN_PROGRESS"/>
      <xsd:enumeration value="COMPLETED"/>
      <xsd:enumeration value="CANCELED"/>
      <xsd:enumeration value="FAILED"/>
      <xsd:enumeration value="UNKNOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="RandomizedPrePostRollType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="RealTimePriceStatusEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EVENT_CPP_RTP_SUCCESS"/>
      <xsd:enumeration value="EVENT_CPP_RTP_FAIL_UNSUPPORTED"/>
      <xsd:enumeration value="EVENT_CPP_RTP_FAIL_NIC"/>
      <xsd:enumeration value="EVENT_CPP_RTP_FAIL_METER"/>
      <xsd:enumeration value="EVENT_CPP_RTP_FAIL_TIMEOUT"/>
      <xsd:enumeration value="EVENT_CPP_RTP_UNKNOWN"/>
      <xsd:enumeration value="AWAITING_ASYNC_RESPONSE"/>
      <xsd:enumeration value="UNKNOWN"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="VirtualRelayAddressType">
    <xsd:restriction base="xsd:short">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\BasicTypes_v1_1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <!--global element definitions that correspond to the message documents-->
  <xsd:element name="ErrorFault" type="ErrorFaultType"/>
  <!--Complex Types in alphabetical order-->
  <xsd:complexType name="ErrorFaultType">
    <xsd:sequence>
      <xsd:element name="Error" type="ErrorType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ErrorType">
    <xsd:sequence>
      <xsd:element name="ErrorCode" type="xsd:string"/>
      <xsd:element name="ErrorMessage" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NullableKiloWattType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="KiloWatts" type="KiloWattType"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="PaginationType">
    <xsd:annotation>
      <xsd:documentation>A reusable encapsulation of a page number and a page size.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PageNumber" type="PageNumber">
        <xsd:annotation>
          <xsd:documentation>An page number, should be greater or equal 1.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PageSize" type="PageSize">
        <xsd:annotation>
          <xsd:documentation>A page size, should be greater or equal 1 and smaller or equal 1000.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="JobStatusType">
    <xsd:sequence>
      <xsd:element name="JobID" type="xsd:long"/>
      <xsd:element name="ExecutionStatus" type="JobExecutionStatusType"/>
      <xsd:element name="ExecutionStatusDetail" type="xsd:string" minOccurs="0"/>
      <xsd:element name="StartTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="FinishTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Canceled" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="CanceledTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Duration" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalPending" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalCanceled" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalCompleted" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalTimeout" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalFailure" type="xsd:int" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NullableSEPVersionType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="SEPVersion" type="SEPVersionEnumeration"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <!--Simple types, in alphabetical order-->
  <xsd:simpleType name="DRMTimeType">
    <xsd:annotation>
      <xsd:documentation>DRM doesn't handle time values of 24:00:00.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:time">
      <xsd:maxInclusive value="23:59:59.99999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="KiloWattType">
    <xsd:restriction base="xsd:float">
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageNumber">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageSize">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="1000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="JobExecutionStatusType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PENDING">
        <xsd:annotation>
          <xsd:documentation>Used when the job execution status is not yet available.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="COMPLETE"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="RUNNING"/>
      <xsd:enumeration value="CANCELLED"/>
      <xsd:enumeration value="CANCELLATION_IN_PROGRESS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SEPVersionEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="1.0"/>
      <xsd:enumeration value="1.1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ZeroToFiftyNineInt">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="59"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ZeroToTwentyThreeInt">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="23"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint></con:endpoints><con:operation id="33d9eefd-6c1d-42b8-ad59-349b1a83d126" isOneWay="false" action="" name="addBatchMessage" bindingOperationName="addBatchMessage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="af9fa439-8f85-4cc6-b10b-357bc788f04f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:AddBatchMessageRequest>\r
         <!--1 to 1000 repetitions:-->\r
         <urn:BatchMessage>\r
            <urn:ProgramID>?</urn:ProgramID>\r
            <urn:ProgramEventID>?</urn:ProgramEventID>\r
            <urn:ESIMacID>?</urn:ESIMacID>\r
            <urn:Message>?</urn:Message>\r
            <urn:Priority>?</urn:Priority>\r
            <urn:Duration>?</urn:Duration>\r
            <!--Optional:-->\r
            <urn:StartDate>?</urn:StartDate>\r
         </urn:BatchMessage>\r
      </urn:AddBatchMessageRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/addBatchMessageRequest"/></con:call></con:operation><con:operation id="00682410-743b-472e-963b-56251cba55a8" isOneWay="false" action="" name="addBatchMessageProgramEvent" bindingOperationName="addBatchMessageProgramEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9b4dc5e5-c04c-4c2d-964f-3dc4993ce2a3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:AddBatchMessageProgramEventRequest>\r
         <urn:BatchMessageProgramEvent>\r
            <urn:ProgramID>?</urn:ProgramID>\r
            <urn:Name>?</urn:Name>\r
            <!--Optional:-->\r
            <urn:Description>?</urn:Description>\r
         </urn:BatchMessageProgramEvent>\r
      </urn:AddBatchMessageProgramEventRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/addBatchMessageProgramEventRequest"/></con:call></con:operation><con:operation id="dab99e18-708d-4f57-ada3-f632714163ff" isOneWay="false" action="" name="addCriticalPeakPriceProgramEvent" bindingOperationName="addCriticalPeakPriceProgramEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="19feddeb-77c7-43e9-ad7a-3f5625ff5cd1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:AddCriticalPeakPriceProgramEventRequest>\r
         <urn:CriticalPeakPriceProgramEvent>\r
            <urn:ProgramID>?</urn:ProgramID>\r
            <urn:Name>?</urn:Name>\r
            <!--Optional:-->\r
            <urn:Description>?</urn:Description>\r
            <!--Optional:-->\r
            <urn:DeploymentDate>?</urn:DeploymentDate>\r
            <!--Optional:-->\r
            <urn:StartDate>?</urn:StartDate>\r
            <!--Optional:-->\r
            <urn:EventOptions>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <urn:FilterNotReadyDevices>?</urn:FilterNotReadyDevices>\r
               <urn:UseRapidEventDispatch>?</urn:UseRapidEventDispatch>\r
            </urn:EventOptions>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <urn:TargetESIMacID>?</urn:TargetESIMacID>\r
            <!--Zero or more repetitions:-->\r
            <urn:DeviceGroupID>?</urn:DeviceGroupID>\r
            <urn:CPPValue>?</urn:CPPValue>\r
            <urn:CPPOperation>?</urn:CPPOperation>\r
            <!--Optional:-->\r
            <urn:PriceTier>?</urn:PriceTier>\r
            <!--Optional:-->\r
            <urn:MeterTier>?</urn:MeterTier>\r
            <!--Optional:-->\r
            <urn:CPPLabel>?</urn:CPPLabel>\r
            <urn:Duration>?</urn:Duration>\r
            <urn:SetRTPMode>?</urn:SetRTPMode>\r
            <!--Optional:-->\r
            <urn:Message>\r
               <urn:Message>?</urn:Message>\r
               <urn:Priority>?</urn:Priority>\r
               <urn:AcknowledgementRequired>?</urn:AcknowledgementRequired>\r
               <urn:Duration>?</urn:Duration>\r
               <!--Optional:-->\r
               <urn:StartTime>?</urn:StartTime>\r
            </urn:Message>\r
            <!--Optional:-->\r
            <urn:RandomizedStartPreRollTime>?</urn:RandomizedStartPreRollTime>\r
            <!--Optional:-->\r
            <urn:RandomizedEndPostRollTime>?</urn:RandomizedEndPostRollTime>\r
         </urn:CriticalPeakPriceProgramEvent>\r
      </urn:AddCriticalPeakPriceProgramEventRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/addCriticalPeakPriceProgramEventRequest"/></con:call></con:operation><con:operation id="bdd3e50d-ede8-4a1a-88f1-12d2dc6b25b5" isOneWay="false" action="" name="addHANLoadControlProgramEvent" bindingOperationName="addHANLoadControlProgramEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2ebc1236-f9b9-4f8a-bcb2-9a54f6905c7e" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:AddHANLoadControlProgramEventRequest>\r
         <urn:HANLoadControlProgramEvent>\r
            <urn:ProgramID>?</urn:ProgramID>\r
            <urn:Name>?</urn:Name>\r
            <!--Optional:-->\r
            <urn:Description>?</urn:Description>\r
            <!--Optional:-->\r
            <urn:DeploymentDate>?</urn:DeploymentDate>\r
            <!--Optional:-->\r
            <urn:StartDate>?</urn:StartDate>\r
            <!--Optional:-->\r
            <urn:EventOptions>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <urn:FilterNotReadyDevices>?</urn:FilterNotReadyDevices>\r
               <urn:UseRapidEventDispatch>?</urn:UseRapidEventDispatch>\r
            </urn:EventOptions>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <urn:TargetESIMacID>?</urn:TargetESIMacID>\r
            <!--Zero or more repetitions:-->\r
            <urn:DeviceGroupID>?</urn:DeviceGroupID>\r
            <urn:RandomizeStartTime>?</urn:RandomizeStartTime>\r
            <urn:RandomizeEndTime>?</urn:RandomizeEndTime>\r
            <!--Optional:-->\r
            <urn:DutyCyclePercentage>?</urn:DutyCyclePercentage>\r
            <!--You have a CHOICE of the next 3 items at this level-->\r
            <urn:ZigBeeParams>\r
               <urn:Duration>?</urn:Duration>\r
               <urn:Priority>?</urn:Priority>\r
               <!--Optional:-->\r
               <urn:EnrollmentGroup>?</urn:EnrollmentGroup>\r
               <!--Optional:-->\r
               <urn:DeviceClass>?</urn:DeviceClass>\r
               <!--Optional:-->\r
               <urn:CoolingAdjustment>\r
                  <urn:Value>?</urn:Value>\r
                  <urn:Type>?</urn:Type>\r
                  <urn:Units>?</urn:Units>\r
               </urn:CoolingAdjustment>\r
               <!--Optional:-->\r
               <urn:HeatingAdjustment>\r
                  <urn:Value>?</urn:Value>\r
                  <urn:Type>?</urn:Type>\r
                  <urn:Units>?</urn:Units>\r
               </urn:HeatingAdjustment>\r
               <!--Optional:-->\r
               <urn:AverageLoadAdjustmentPercentage>?</urn:AverageLoadAdjustmentPercentage>\r
               <!--Optional:-->\r
               <urn:Message>\r
                  <urn:Message>?</urn:Message>\r
                  <urn:Priority>?</urn:Priority>\r
                  <urn:AcknowledgementRequired>?</urn:AcknowledgementRequired>\r
                  <urn:Duration>?</urn:Duration>\r
                  <!--Optional:-->\r
                  <urn:StartTime>?</urn:StartTime>\r
               </urn:Message>\r
            </urn:ZigBeeParams>\r
            <urn:D2GParams>\r
               <urn:Criticality>?</urn:Criticality>\r
               <urn:DutyCyclePeriod>?</urn:DutyCyclePeriod>\r
               <urn:DutyCycleCount>?</urn:DutyCycleCount>\r
               <urn:VirtualRelayAddress>?</urn:VirtualRelayAddress>\r
               <urn:EventControl>?</urn:EventControl>\r
            </urn:D2GParams>\r
            <urn:CombinedParams>\r
               <urn:ZigBeeParams>\r
                  <urn:Duration>?</urn:Duration>\r
                  <urn:Priority>?</urn:Priority>\r
                  <!--Optional:-->\r
                  <urn:EnrollmentGroup>?</urn:EnrollmentGroup>\r
                  <!--Optional:-->\r
                  <urn:DeviceClass>?</urn:DeviceClass>\r
                  <!--Optional:-->\r
                  <urn:CoolingAdjustment>\r
                     <urn:Value>?</urn:Value>\r
                     <urn:Type>?</urn:Type>\r
                     <urn:Units>?</urn:Units>\r
                  </urn:CoolingAdjustment>\r
                  <!--Optional:-->\r
                  <urn:HeatingAdjustment>\r
                     <urn:Value>?</urn:Value>\r
                     <urn:Type>?</urn:Type>\r
                     <urn:Units>?</urn:Units>\r
                  </urn:HeatingAdjustment>\r
                  <!--Optional:-->\r
                  <urn:AverageLoadAdjustmentPercentage>?</urn:AverageLoadAdjustmentPercentage>\r
                  <!--Optional:-->\r
                  <urn:Message>\r
                     <urn:Message>?</urn:Message>\r
                     <urn:Priority>?</urn:Priority>\r
                     <urn:AcknowledgementRequired>?</urn:AcknowledgementRequired>\r
                     <urn:Duration>?</urn:Duration>\r
                     <!--Optional:-->\r
                     <urn:StartTime>?</urn:StartTime>\r
                  </urn:Message>\r
               </urn:ZigBeeParams>\r
               <urn:D2GParams>\r
                  <urn:Criticality>?</urn:Criticality>\r
                  <urn:DutyCyclePeriod>?</urn:DutyCyclePeriod>\r
                  <urn:DutyCycleCount>?</urn:DutyCycleCount>\r
                  <urn:VirtualRelayAddress>?</urn:VirtualRelayAddress>\r
                  <urn:EventControl>?</urn:EventControl>\r
               </urn:D2GParams>\r
            </urn:CombinedParams>\r
         </urn:HANLoadControlProgramEvent>\r
      </urn:AddHANLoadControlProgramEventRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/addHANLoadControlProgramEventRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="22aa0534-95c0-4877-86fa-70f85733f01b" isOneWay="false" action="" name="addMessageProgramEvent" bindingOperationName="addMessageProgramEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ceaf1654-661e-4c95-a2d2-db1d2f19e33c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:AddMessageProgramEventRequest>\r
         <urn:MessageProgramEvent>\r
            <urn:ProgramID>?</urn:ProgramID>\r
            <urn:Name>?</urn:Name>\r
            <!--Optional:-->\r
            <urn:Description>?</urn:Description>\r
            <!--Optional:-->\r
            <urn:DeploymentDate>?</urn:DeploymentDate>\r
            <!--Optional:-->\r
            <urn:StartDate>?</urn:StartDate>\r
            <!--Optional:-->\r
            <urn:EventOptions>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <urn:FilterNotReadyDevices>?</urn:FilterNotReadyDevices>\r
               <urn:UseRapidEventDispatch>?</urn:UseRapidEventDispatch>\r
            </urn:EventOptions>\r
            <!--You have a CHOICE of the next 2 items at this level-->\r
            <urn:TargetESIMacID>?</urn:TargetESIMacID>\r
            <!--Zero or more repetitions:-->\r
            <urn:DeviceGroupID>?</urn:DeviceGroupID>\r
            <urn:Message>?</urn:Message>\r
            <urn:Priority>?</urn:Priority>\r
            <urn:AcknowledgementRequired>?</urn:AcknowledgementRequired>\r
            <urn:Duration>?</urn:Duration>\r
         </urn:MessageProgramEvent>\r
      </urn:AddMessageProgramEventRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/addMessageProgramEventRequest"/></con:call></con:operation><con:operation id="dc9cb67e-44a2-4247-84a2-51bdf1b81185" isOneWay="false" action="" name="cancelAllHANLoadControlProgramEventOnDevices" bindingOperationName="cancelAllHANLoadControlProgramEventOnDevices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9be32fd6-9e50-42a8-89ca-2c2e2a4c6355" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:CancelAllHANLoadControlProgramEventOnDevicesRequest>\r
         <urn:EnableDRLCRandomization>false</urn:EnableDRLCRandomization>\r
         <!--Zero or more repetitions:-->\r
         <urn:DeviceGroupID>3955</urn:DeviceGroupID>\r
         <!--Zero or more repetitions:-->\r
         <urn:NicMacID>11:11:11:11:11:11</urn:NicMacID>\r
      </urn:CancelAllHANLoadControlProgramEventOnDevicesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/cancelAllHANLoadControlProgramEventOnDevicesRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="8aed4d1d-e58e-460c-9e2c-cf357f93c4c5" isOneWay="false" action="" name="cancelCriticalPeakPriceProgramEvent" bindingOperationName="cancelCriticalPeakPriceProgramEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8c7559e9-18e6-43f4-ba6c-9a6d5214abae" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:CancelCriticalPeakPriceProgramEventRequest>\r
         <urn:ProgramEventID>?</urn:ProgramEventID>\r
      </urn:CancelCriticalPeakPriceProgramEventRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/cancelCriticalPeakPriceProgramEventRequest"/></con:call></con:operation><con:operation id="c4e0c77e-c290-459c-9ddd-08bd77d6a43a" isOneWay="false" action="" name="cancelHANLoadControlProgramEvent" bindingOperationName="cancelHANLoadControlProgramEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8465c328-2876-4888-bf64-25f8bc47e8ea" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:CancelHANLoadControlProgramEventRequest>\r
         <urn:ProgramEventID>12345</urn:ProgramEventID>\r
      </urn:CancelHANLoadControlProgramEventRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/cancelHANLoadControlProgramEventRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="d066dc96-9a5a-415e-b359-f5a1c8c417a3" isOneWay="false" action="" name="cancelHANLoadControlProgramEventOnDevices" bindingOperationName="cancelHANLoadControlProgramEventOnDevices" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ce1216da-b12e-45cc-ac97-818c6c677132" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:CancelHANLoadControlProgramEventOnDevicesRequest>\r
         <urn:EventID>0</urn:EventID>\r
         <urn:EnableRandomization>false</urn:EnableRandomization>\r
         <!--Zero or more repetitions:-->\r
         <urn:DeviceGroupID>3955</urn:DeviceGroupID>\r
         <!--Zero or more repetitions:-->\r
         <urn:NicMacID>11:11:11:11:11:11</urn:NicMacID>\r
      </urn:CancelHANLoadControlProgramEventOnDevicesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/cancelHANLoadControlProgramEventOnDevicesRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="bf63b834-1570-4871-8ae9-840b0af3e020" isOneWay="false" action="" name="cancelMessageProgramEvent" bindingOperationName="cancelMessageProgramEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="81d29a8c-fc46-4cc9-86d0-d94eb3624e63" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:CancelMessageProgramEventRequest>\r
         <urn:ProgramEventID>?</urn:ProgramEventID>\r
      </urn:CancelMessageProgramEventRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/cancelMessageProgramEventRequest"/></con:call></con:operation><con:operation id="17889b9a-f768-46d6-acd6-43ee8142ddfb" isOneWay="false" action="" name="deployBatchProgramEvent" bindingOperationName="deployBatchProgramEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="180f1e77-8213-43b9-a2ed-16bf3689e7d1" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:DeployBatchProgramEventRequest>\r
         <!--Optional:-->\r
         <urn:DeploymentDate>?</urn:DeploymentDate>\r
         <urn:ProgramEventID>?</urn:ProgramEventID>\r
      </urn:DeployBatchProgramEventRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/deployBatchProgramEventRequest"/></con:call></con:operation><con:operation id="c5334413-71a9-4351-b26b-8b750f7d27dc" isOneWay="false" action="" name="editInProgressD2GHANLoadControlProgramEvent" bindingOperationName="editInProgressD2GHANLoadControlProgramEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dbd05bdd-8390-4dbe-a2aa-87c2674fe15b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:EditInProgressD2GHANLoadControlProgramEventRequest>\r
         <urn:ExistingProgramEventID>?</urn:ExistingProgramEventID>\r
         <!--Optional:-->\r
         <urn:DutyCyclePercentage>?</urn:DutyCyclePercentage>\r
         <!--Optional:-->\r
         <urn:DutyCycleCount>?</urn:DutyCycleCount>\r
      </urn:EditInProgressD2GHANLoadControlProgramEventRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/editInProgressD2GHANLoadControlProgramEventRequest"/></con:call></con:operation><con:operation id="73f372d8-42e5-4fdd-b97b-3f510bc4b8a1" isOneWay="false" action="" name="findBatchMessages" bindingOperationName="findBatchMessages" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2b197835-0cca-44ed-91f3-b4d3c64838f7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:FindBatchMessagesRequest>\r
         <urn:ProgramID>?</urn:ProgramID>\r
         <!--Optional:-->\r
         <urn:ESIMacID>?</urn:ESIMacID>\r
         <!--Optional:-->\r
         <urn:ProgramEventID>?</urn:ProgramEventID>\r
         <!--Optional:-->\r
         <urn:Status>?</urn:Status>\r
         <!--Optional:-->\r
         <urn:DateAddedRangeStart>?</urn:DateAddedRangeStart>\r
         <!--Optional:-->\r
         <urn:DateAddedRangeEnd>?</urn:DateAddedRangeEnd>\r
         <urn:Pagination>\r
            <urn1:PageNumber>?</urn1:PageNumber>\r
            <urn1:PageSize>?</urn1:PageSize>\r
         </urn:Pagination>\r
      </urn:FindBatchMessagesRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/findBatchMessagesRequest"/></con:call></con:operation><con:operation id="a0a093e1-82fc-41bf-8099-cea54e2a0267" isOneWay="false" action="" name="getBatchMessageProgramEventResults" bindingOperationName="getBatchMessageProgramEventResults" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fc40c7c0-9901-45e3-9c58-d2a58b4bd9a9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetBatchMessageProgramEventResultsRequest>\r
         <urn:ProgramEventID>?</urn:ProgramEventID>\r
         <urn:Pagination>\r
            <urn1:PageNumber>?</urn1:PageNumber>\r
            <urn1:PageSize>?</urn1:PageSize>\r
         </urn:Pagination>\r
      </urn:GetBatchMessageProgramEventResultsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/getBatchMessageProgramEventResultsRequest"/></con:call></con:operation><con:operation id="8c3b90e1-61fb-4f95-a90b-1ffd5b6f3ead" isOneWay="false" action="" name="getCriticalPeakPriceProgramEventResults" bindingOperationName="getCriticalPeakPriceProgramEventResults" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d8a88926-de62-4207-90bf-6104205d4ab3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetCriticalPeakPriceProgramEventResultsRequest>\r
         <urn:ProgramEventID>?</urn:ProgramEventID>\r
         <urn:Pagination>\r
            <urn1:PageNumber>?</urn1:PageNumber>\r
            <urn1:PageSize>?</urn1:PageSize>\r
         </urn:Pagination>\r
      </urn:GetCriticalPeakPriceProgramEventResultsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/getCriticalPeakPriceProgramEventResultsRequest"/></con:call></con:operation><con:operation id="a6b419fc-0656-4af9-acfa-38860bcea4b6" isOneWay="false" action="" name="getLoadControlProgramEventResults" bindingOperationName="getLoadControlProgramEventResults" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="414676ba-07cd-4ee4-b5e2-82baa8d1710d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetLoadControlProgramEventResultsRequest>\r
         <urn:ProgramEventID>?</urn:ProgramEventID>\r
         <urn:Pagination>\r
            <urn1:PageNumber>?</urn1:PageNumber>\r
            <urn1:PageSize>?</urn1:PageSize>\r
         </urn:Pagination>\r
      </urn:GetLoadControlProgramEventResultsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/getLoadControlProgramEventResultsRequest"/></con:call></con:operation><con:operation id="c9ecc9ab-b4ae-4d27-89e9-ed24b0b34d0f" isOneWay="false" action="" name="getMessageProgramEventResult" bindingOperationName="getMessageProgramEventResult" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="51e81202-8953-4fe0-b34d-ad278e33f9c0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetMessageProgramEventResultsRequest>\r
         <urn:ProgramEventID>?</urn:ProgramEventID>\r
         <urn:Pagination>\r
            <urn1:PageNumber>?</urn1:PageNumber>\r
            <urn1:PageSize>?</urn1:PageSize>\r
         </urn:Pagination>\r
      </urn:GetMessageProgramEventResultsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/getMessageProgramEventResultRequest"/></con:call></con:operation><con:operation id="14151c6a-e7a9-4b91-8331-22d7ba4ce154" isOneWay="false" action="" name="getProgramEventStatus" bindingOperationName="getProgramEventStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="187e5325-72bc-4384-8552-ed0d7e6dd6b8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetProgramEventStatusRequest>\r
         <!--1 or more repetitions:-->\r
         <urn:ProgramEventID>?</urn:ProgramEventID>\r
      </urn:GetProgramEventStatusRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/getProgramEventStatusRequest"/></con:call></con:operation><con:operation id="b90bb165-a523-4b47-bdf0-422bf59ab65d" isOneWay="false" action="" name="optOutDevice" bindingOperationName="optOutDevice" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c65199a9-2200-4fa0-b34d-d83a56a78aab" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:OptOutDeviceRequest>\r
         <urn:OptOutDevice>\r
            <!--Optional:-->\r
            <urn:DeploymentTime>?</urn:DeploymentTime>\r
            <!--Optional:-->\r
            <urn:StartTime>?</urn:StartTime>\r
            <urn:Duration>?</urn:Duration>\r
            <!--1 to 100 repetitions:-->\r
            <urn:LCSMacID>?</urn:LCSMacID>\r
         </urn:OptOutDevice>\r
      </urn:OptOutDeviceRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/optOutDeviceRequest"/></con:call></con:operation><con:operation id="f4c083c4-3ac7-41fc-8e87-541911a87847" isOneWay="false" action="" name="removeUnsentBatchMessageForProgram" bindingOperationName="removeUnsentBatchMessageForProgram" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7dbf58c6-7bfb-4a0d-b5da-05df1ead5a5a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramEventManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:RemoveUnsentBatchMessageForProgramRequest>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <!--Optional:-->\r
         <urn:ProgramID>?</urn:ProgramID>\r
         <!--0 to 1000 repetitions:-->\r
         <urn:ESIMacID>?</urn:ESIMacID>\r
         <!--0 to 1000 repetitions:-->\r
         <urn:BatchMessageID>?</urn:BatchMessageID>\r
      </urn:RemoveUnsentBatchMessageForProgramRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/removeUnsentBatchMessageForProgramRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d9621995-1826-4221-9b04-6ed09693182e" wsaVersion="NONE" name="ProgramManagerSoapBinding" type="wsdl" bindingName="{urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager}ProgramManagerSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ProgramManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ProgramManager.wsdl"><con:part><con:url>file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ProgramManager.wsdl</con:url><con:content><![CDATA[<!--root element wsdl:definitions defines set of related services-->
<wsdl:definitions name="ProgramManager" targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager" xmlns:basicxsd="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" xmlns:pm="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager" xmlns:pmxsd="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager.xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManagerWrapper.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManagerWrapper.xsd">
      <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager.xsd" schemaLocation="./ProgramManagerTypes_v1_1.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ErrorFault">
    <wsdl:part name="fault" element="basicxsd:ErrorFault"/>
  </wsdl:message>
  <wsdl:message name="AddProgramRequest">
    <wsdl:part name="body" element="pmxsd:AddProgramRequest"/>
  </wsdl:message>
  <wsdl:message name="AddProgramResponse">
    <wsdl:part name="body" element="pmxsd:AddProgramResponse"/>
  </wsdl:message>
  <wsdl:message name="SetServicePointEnrollmentRequest">
    <wsdl:part name="body" element="pmxsd:SetServicePointEnrollmentRequest"/>
  </wsdl:message>
  <wsdl:message name="SetServicePointEnrollmentResponse">
    <wsdl:part name="body" element="pmxsd:SetServicePointEnrollmentResponse"/>
  </wsdl:message>
  <wsdl:portType name="ProgramManagerPortType">
    <wsdl:operation name="addProgram">
      <wsdl:input message="pm:AddProgramRequest"/>
      <wsdl:output message="pm:AddProgramResponse"/>
      <wsdl:fault name="ErrorFault" message="pm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="setServicePointEnrollment">
      <wsdl:input message="pm:SetServicePointEnrollmentRequest"/>
      <wsdl:output message="pm:SetServicePointEnrollmentResponse"/>
      <wsdl:fault name="ErrorFault" message="pm:ErrorFault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ProgramManagerSoapBinding" type="pm:ProgramManagerPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="addProgram">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setServicePointEnrollment">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ProgramManagerService">
    <wsdl:documentation>Itron Program Manager Service</wsdl:documentation>
    <wsdl:port name="ProgramManagerPort" binding="pm:ProgramManagerSoapBinding">
      <soap:address location="https://localhost:8080/drm/services/v1_1/ProgramManagerPort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\ProgramManagerTypes_v1_1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager.xsd" xmlns:basic="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" schemaLocation="BasicTypes_v1_1.xsd"/>
  <!--global element definitions that correspond to the message documents-->
  <xsd:element name="AddProgramRequest" type="AddProgramRequestType"/>
  <xsd:element name="AddProgramResponse" type="AddProgramResponseType"/>
  <xsd:element name="SetServicePointEnrollmentRequest" type="SetServicePointEnrollmentRequestType"/>
  <xsd:element name="SetServicePointEnrollmentResponse" type="SetServicePointEnrollmentResponseType"/>
  <!--Complex Types in alphabetical order-->
  <xsd:complexType name="AddProgramRequestType">
    <xsd:annotation>
      <xsd:documentation>Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    Unique.program.programName
                    Size.program.programName
                    NotBlank.program.programName</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ProgramName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddProgramResponseType">
    <xsd:sequence>
      <xsd:element name="ProgramName" type="xsd:string"/>
      <xsd:element name="ProgramID" type="xsd:long"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="EmptyType"/>
  <xsd:complexType name="SetServicePointEnrollmentRequestType">
    <xsd:annotation>
      <xsd:documentation>Set all of the programs a service point is enrolled in.  Will replace all previous enrollments if they exist.  Use ServicePointManager getServicePointEnrollment if you want to see what programs a service point was enrolled in before calling this (e.g. to just add to the enrolled programs).
                 Possible ErrorCode values if you receive a BasicFaultType:
                     generic
                     fatal_error
                     authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Enroll" type="ServicePointEnrollmentType" minOccurs="1" maxOccurs="1000"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SetServicePointEnrollmentResponseType">
    <xsd:annotation>
      <xsd:documentation>use ServicePointManager getServicePointEnrollment to check enrollment status</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="ServicePointEnrollmentType">
    <xsd:sequence>
      <xsd:element name="UtilServicePointID" type="xsd:string"/>
      <xsd:element name="ProgramID" type="xsd:long" maxOccurs="unbounded" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Simple Types in alphabetical order-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\BasicTypes_v1_1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <!--global element definitions that correspond to the message documents-->
  <xsd:element name="ErrorFault" type="ErrorFaultType"/>
  <!--Complex Types in alphabetical order-->
  <xsd:complexType name="ErrorFaultType">
    <xsd:sequence>
      <xsd:element name="Error" type="ErrorType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ErrorType">
    <xsd:sequence>
      <xsd:element name="ErrorCode" type="xsd:string"/>
      <xsd:element name="ErrorMessage" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NullableKiloWattType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="KiloWatts" type="KiloWattType"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="PaginationType">
    <xsd:annotation>
      <xsd:documentation>A reusable encapsulation of a page number and a page size.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PageNumber" type="PageNumber">
        <xsd:annotation>
          <xsd:documentation>An page number, should be greater or equal 1.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PageSize" type="PageSize">
        <xsd:annotation>
          <xsd:documentation>A page size, should be greater or equal 1 and smaller or equal 1000.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="JobStatusType">
    <xsd:sequence>
      <xsd:element name="JobID" type="xsd:long"/>
      <xsd:element name="ExecutionStatus" type="JobExecutionStatusType"/>
      <xsd:element name="ExecutionStatusDetail" type="xsd:string" minOccurs="0"/>
      <xsd:element name="StartTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="FinishTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Canceled" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="CanceledTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Duration" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalPending" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalCanceled" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalCompleted" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalTimeout" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalFailure" type="xsd:int" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NullableSEPVersionType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="SEPVersion" type="SEPVersionEnumeration"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <!--Simple types, in alphabetical order-->
  <xsd:simpleType name="DRMTimeType">
    <xsd:annotation>
      <xsd:documentation>DRM doesn't handle time values of 24:00:00.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:time">
      <xsd:maxInclusive value="23:59:59.99999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="KiloWattType">
    <xsd:restriction base="xsd:float">
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageNumber">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageSize">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="1000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="JobExecutionStatusType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PENDING">
        <xsd:annotation>
          <xsd:documentation>Used when the job execution status is not yet available.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="COMPLETE"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="RUNNING"/>
      <xsd:enumeration value="CANCELLED"/>
      <xsd:enumeration value="CANCELLATION_IN_PROGRESS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SEPVersionEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="1.0"/>
      <xsd:enumeration value="1.1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ZeroToFiftyNineInt">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="59"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ZeroToTwentyThreeInt">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="23"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8083/ProgramManagerPort</con:endpoint></con:endpoints><con:operation id="a46ba479-6e78-431d-9f76-0932d5cb99d1" isOneWay="false" action="" name="addProgram" bindingOperationName="addProgram" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d1bfb99a-773c-418d-94a1-ce9256524b81" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:AddProgramRequest>\r
         <urn:ProgramName>Test_Program_Names</urn:ProgramName>\r
      </urn:AddProgramRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager/ProgramManagerPortType/addProgramRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="749cdc09-2f3f-4951-be22-0807d76d7414" isOneWay="false" action="" name="setServicePointEnrollment" bindingOperationName="setServicePointEnrollment" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="abe113c1-ca82-426a-bb82-cbd9ec0d15cd" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ProgramManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:SetServicePointEnrollmentRequest>\r
         <!--1 to 1000 repetitions:-->\r
         <urn:Enroll>\r
            <urn:UtilServicePointID>?</urn:UtilServicePointID>\r
            <!--Zero or more repetitions:-->\r
            <urn:ProgramID>?</urn:ProgramID>\r
         </urn:Enroll>\r
      </urn:SetServicePointEnrollmentRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager/ProgramManagerPortType/setServicePointEnrollmentRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="b503528e-9966-4b81-a3c0-ece849913a87" wsaVersion="NONE" name="ReportManagerSoapBinding" type="wsdl" bindingName="{urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd}ReportManagerSoapBinding" soapVersion="1_1" anonymous="optional" definition="file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ReportManager.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ReportManager.wsdl"><con:part><con:url>file:/P:/Itron%20WSDL%20Files/wsdls/wsdls/2.3/ReportManager.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ReportManager" targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd" xmlns:basicxsd="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" xmlns:rm="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManagerWrapper.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManagerWrapper.xsd">
      <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd" schemaLocation="ReportManagerTypes_v1_2.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ErrorFault">
    <wsdl:part name="fault" element="basicxsd:ErrorFault"/>
  </wsdl:message>
  <wsdl:message name="GetReportGenerationStatusRequest">
    <wsdl:part name="body" element="rm:GetReportGenerationStatusRequest"/>
  </wsdl:message>
  <wsdl:message name="GetReportGenerationStatusResponse">
    <wsdl:part name="body" element="rm:GetReportGenerationStatusResponse"/>
  </wsdl:message>
  <wsdl:message name="ListProgramEventsByDateRequest">
    <wsdl:part name="body" element="rm:ListProgramEventsByDateRequest"/>
  </wsdl:message>
  <wsdl:message name="ListProgramEventsByDateResponse">
    <wsdl:part name="body" element="rm:ListProgramEventsByDateResponse"/>
  </wsdl:message>
  <wsdl:message name="ListProgramEventsByProgramIDRequest">
    <wsdl:part name="body" element="rm:ListProgramEventsByProgramIDRequest"/>
  </wsdl:message>
  <wsdl:message name="ListProgramEventsByProgramIDResponse">
    <wsdl:part name="body" element="rm:ListProgramEventsByProgramIDResponse"/>
  </wsdl:message>
  <wsdl:message name="ListProgramEventsRequest">
    <wsdl:part name="body" element="rm:ListProgramEventsRequest"/>
  </wsdl:message>
  <wsdl:message name="ListProgramEventsResponse">
    <wsdl:part name="body" element="rm:ListProgramEventsResponse"/>
  </wsdl:message>
  <wsdl:message name="ExportDeviceLogRequest">
    <wsdl:part name="body" element="rm:ExportDeviceLogRequest"/>
  </wsdl:message>
  <wsdl:message name="CommandIDResponse">
    <wsdl:part name="body" element="rm:CommandIDResponse"/>
  </wsdl:message>
  <wsdl:portType name="ReportManagerPortType">
    <wsdl:operation name="getReportGenerationStatus">
      <wsdl:documentation>Will return the status of a report request and, when complete, the path to the report file.</wsdl:documentation>
      <wsdl:input message="rm:GetReportGenerationStatusRequest"/>
      <wsdl:output message="rm:GetReportGenerationStatusResponse"/>
      <wsdl:fault name="ErrorFault" message="rm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="listProgramEventsByDate">
      <wsdl:documentation>Returns a list of program events withing a given date range. The returned events can later be used to
                execute reports based on the event IDs.</wsdl:documentation>
      <wsdl:input message="rm:ListProgramEventsByDateRequest"/>
      <wsdl:output message="rm:ListProgramEventsByDateResponse"/>
      <wsdl:fault name="ErrorFault" message="rm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="listProgramEventsByProgramID">
      <wsdl:documentation>Returns a list of program events for a given program ID. The returned events can later be used to
                execute reports based on the event IDs.</wsdl:documentation>
      <wsdl:input message="rm:ListProgramEventsByProgramIDRequest"/>
      <wsdl:output message="rm:ListProgramEventsByProgramIDResponse"/>
      <wsdl:fault name="ErrorFault" message="rm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="listProgramEvents">
      <wsdl:documentation>Returns a list of program events for a given program ID and a date range. The returned events can later
                be used to execute reports based on the event IDs.</wsdl:documentation>
      <wsdl:input message="rm:ListProgramEventsRequest"/>
      <wsdl:output message="rm:ListProgramEventsResponse"/>
      <wsdl:fault name="ErrorFault" message="rm:ErrorFault"/>
    </wsdl:operation>
    <wsdl:operation name="exportDeviceLog">
      <wsdl:documentation>Adds a request for device logs to be added to the export queue. The status of the export, and the list
                of files generated, can be found by calling getReportGenerationStatus.</wsdl:documentation>
      <wsdl:input message="rm:ExportDeviceLogRequest"/>
      <wsdl:output message="rm:CommandIDResponse"/>
      <wsdl:fault name="ErrorFault" message="rm:ErrorFault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ReportManagerSoapBinding" type="rm:ReportManagerPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getReportGenerationStatus">
      <wsdl:documentation>Will return the status of a report request and, when complete, the path to the report file.</wsdl:documentation>
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listProgramEventsByDate">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listProgramEventsByProgramID">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listProgramEvents">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="exportDeviceLog">
      <soap:operation soapAction=""/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ErrorFault">
        <soap:fault name="ErrorFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ReportManagerService">
    <wsdl:documentation>Itron DRM Report Manager Service</wsdl:documentation>
    <wsdl:port name="ReportManagerPort" binding="rm:ReportManagerSoapBinding">
      <soap:address location="https://localhost:8080/drm/services/v1_2/ReportManagerPort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\ReportManagerTypes_v1_2.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd" xmlns:basic="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <xsd:import namespace="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" schemaLocation="BasicTypes_v1_1.xsd"/>
  <!--Complex types in alphabetical order-->
  <xsd:element name="GetReportGenerationStatusRequest" type="GetReportGenerationStatusRequestType"/>
  <xsd:element name="GetReportGenerationStatusResponse" type="GetReportGenerationStatusResponseType"/>
  <xsd:element name="ListProgramEventsByDateRequest" type="ListProgramEventsByDateRequestType"/>
  <xsd:element name="ListProgramEventsByDateResponse" type="ListProgramEventsByDateResponseType"/>
  <xsd:element name="ListProgramEventsByProgramIDRequest" type="ListProgramEventsByProgramIDRequestType"/>
  <xsd:element name="ListProgramEventsByProgramIDResponse" type="ListProgramEventsByProgramIDResponseType"/>
  <xsd:element name="ListProgramEventsRequest" type="ListProgramEventsRequestType"/>
  <xsd:element name="ListProgramEventsResponse" type="ListProgramEventsResponseType"/>
  <xsd:element name="ExportDeviceLogRequest" type="ExportDeviceLogRequestType"/>
  <xsd:element name="CommandIDResponse" type="CommandIDResponseType"/>
  <xsd:complexType name="GetReportGenerationStatusRequestType">
    <xsd:annotation>
      <xsd:documentation>A request to get the status of a report generation request.
                Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure
                    reportManager.commandIDInvalid</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CommandID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>CommandID comes from the result of the report operations.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetReportGenerationStatusResponseType">
    <xsd:annotation>
      <xsd:documentation>Shows if report generation has completed or not and, if it has, the path to the report file.
                Also shows if the generation failed or not (once it's complete) and if it did, provides a string that my have some details about the error.
                Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Completed" type="xsd:boolean"/>
      <xsd:element name="Failed" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="FailureMessage" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ReportFileName" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Available when Completed is true.
                        Report file's name follows this pattern: drm-report-&lt;event type>-&lt;event type specifics>-&lt;UUID>.csv where &lt;event type specifics> varies based on the report event type.

                        Example of a full path to the report:

                        /users/tomcat/.drm/reports/drm-report-critical-peak-price-event-03062011-03072011-e8c43823-642a-4834-9fec-bc4e2c65bffb.csv</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Definition of ListProgramEventsByDateRequestType-->
  <xsd:complexType name="ListProgramEventsByDateRequestType">
    <xsd:annotation>
      <xsd:documentation>A request to obtain a list of program events withing a given date range.
                Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:sequence>
        <xsd:element name="StartDate" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>A mandatory time stamp to start looking for events at.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="EndDate" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>A mandatory time stamp to finish looking for events at.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:element name="Pagination" type="basic:PaginationType">
        <xsd:annotation>
          <xsd:documentation>Pagination parameters.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Definition of ListProgramEventsByDateResponseType-->
  <xsd:complexType name="ListProgramEventsByDateResponseType">
    <xsd:annotation>
      <xsd:documentation>A response returned by ListProgramEventsByDateRequest.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="programEvents" type="ProgramEventType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>A list of program events.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Definition of ListProgramEventsByProgramIDRequestType-->
  <xsd:complexType name="ListProgramEventsByProgramIDRequestType">
    <xsd:annotation>
      <xsd:documentation>A request to obtains a list of program events for a program identified by a given program ID.
                Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ProgramID" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>A mandatory ID of a program.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Pagination" type="basic:PaginationType">
        <xsd:annotation>
          <xsd:documentation>Pagination data for the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Definition of ListProgramEventsByProgramIDResponseType-->
  <xsd:complexType name="ListProgramEventsByProgramIDResponseType">
    <xsd:annotation>
      <xsd:documentation>A response returned by ListProgramEventsByProgramIDRequest.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ProgramEvents" type="ProgramEventType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>A list of program events.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Definition of ListProgramEventsRequestType-->
  <xsd:complexType name="ListProgramEventsRequestType">
    <xsd:annotation>
      <xsd:documentation>A request to list program events for a given program ID and an event date range.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ProgramID" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>A program ID.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:sequence>
        <xsd:element name="StartDate" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>A mandatory time stamp to start looking for events at.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="EndDate" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>A mandatory time stamp to finish looking for events at.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:element name="Pagination" type="basic:PaginationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Definition of ListProgramEventsResponseType-->
  <xsd:complexType name="ListProgramEventsResponseType">
    <xsd:annotation>
      <xsd:documentation>A response returned by ListProgramEventsRequest.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ProgramEvents" type="ProgramEventType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>A list of program events.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Definition of ExportDeviceLogRequestType-->
  <xsd:complexType name="ExportDeviceLogRequestType">
    <xsd:annotation>
      <xsd:documentation>A request to export a range of device event logs for a set of devices.
                Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="DeviceGroupID" type="xsd:long" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>If provided, only events associated with devices in the groups will be exported.
                        This can leave gaps in the HCM Event ID sequence of the exported files.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordIDRangeStart" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>The ID of the first HCM Event to be included in the export.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordIDRangeEnd" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The ID of the last HCM Event to be included in the export. If this value is not
                        provided, all events after the range start will be included in the export.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ResultAction" type="ResultActionEnumeration" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>The set of actions to take at the end of the export. If no actions are specified, the exported
                        files will be available at the local report file path, as defined in the system's properties.
                        For each action specified, the files will be processed accordingly.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Definition of CommandIDResponseType-->
  <xsd:complexType name="CommandIDResponseType">
    <xsd:annotation>
      <xsd:documentation>CommandID can be used with getReportGenerationStatus to poll for the status of the report generation and the generated file path(s).
                Possible ErrorCode values if you receive a BasicFaultType:
                    generic
                    fatal_error
                    authorization_failure</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CommandID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Used with getReportGenerationStatus to poll for the status of the report generation and the generated file path(s).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Definition of ProgramEventType-->
  <xsd:complexType name="ProgramEventType">
    <xsd:annotation>
      <xsd:documentation>A program event.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ProgramID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>An ID of a program.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="EventID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>An event ID.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Type" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>A type of the event.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Name" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>An event name.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="StartDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time the event started. Note that batched events do not have a start date until they've been
                        scheduled for deployment.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DurationMinutes" type="xsd:int" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Duration of the event in minutes. Note that batched events do not have a duration.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Definition of EmptyType-->
  <xsd:complexType name="EmptyType"/>
  <xsd:simpleType name="ResultActionEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SCP"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\P:\Itron%20WSDL%20Files\wsdls\wsdls\2.3\BasicTypes_v1_1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <!--global element definitions that correspond to the message documents-->
  <xsd:element name="ErrorFault" type="ErrorFaultType"/>
  <!--Complex Types in alphabetical order-->
  <xsd:complexType name="ErrorFaultType">
    <xsd:sequence>
      <xsd:element name="Error" type="ErrorType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ErrorType">
    <xsd:sequence>
      <xsd:element name="ErrorCode" type="xsd:string"/>
      <xsd:element name="ErrorMessage" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NullableKiloWattType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="KiloWatts" type="KiloWattType"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="PaginationType">
    <xsd:annotation>
      <xsd:documentation>A reusable encapsulation of a page number and a page size.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="PageNumber" type="PageNumber">
        <xsd:annotation>
          <xsd:documentation>An page number, should be greater or equal 1.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PageSize" type="PageSize">
        <xsd:annotation>
          <xsd:documentation>A page size, should be greater or equal 1 and smaller or equal 1000.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="JobStatusType">
    <xsd:sequence>
      <xsd:element name="JobID" type="xsd:long"/>
      <xsd:element name="ExecutionStatus" type="JobExecutionStatusType"/>
      <xsd:element name="ExecutionStatusDetail" type="xsd:string" minOccurs="0"/>
      <xsd:element name="StartTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="FinishTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Canceled" type="xsd:boolean" minOccurs="0"/>
      <xsd:element name="CanceledTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Duration" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalPending" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalCanceled" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalCompleted" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalTimeout" type="xsd:int" minOccurs="0"/>
      <xsd:element name="TotalFailure" type="xsd:int" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NullableSEPVersionType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="SEPVersion" type="SEPVersionEnumeration"/>
    </xsd:sequence>
    <xsd:attribute default="false" name="Null" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <!--Simple types, in alphabetical order-->
  <xsd:simpleType name="DRMTimeType">
    <xsd:annotation>
      <xsd:documentation>DRM doesn't handle time values of 24:00:00.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:time">
      <xsd:maxInclusive value="23:59:59.99999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="KiloWattType">
    <xsd:restriction base="xsd:float">
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageNumber">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PageSize">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="1000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="JobExecutionStatusType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PENDING">
        <xsd:annotation>
          <xsd:documentation>Used when the job execution status is not yet available.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="COMPLETE"/>
      <xsd:enumeration value="FAILURE"/>
      <xsd:enumeration value="RUNNING"/>
      <xsd:enumeration value="CANCELLED"/>
      <xsd:enumeration value="CANCELLATION_IN_PROGRESS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SEPVersionEnumeration">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="1.0"/>
      <xsd:enumeration value="1.1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ZeroToFiftyNineInt">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="59"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ZeroToTwentyThreeInt">
    <xsd:restriction base="xsd:int">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="23"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8083/ReportManagerPort</con:endpoint></con:endpoints><con:operation id="df70770f-8d03-4e4f-a586-a4affcd51c83" isOneWay="false" action="" name="exportDeviceLog" bindingOperationName="exportDeviceLog" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c289dd94-8d61-4d5c-b63f-8dcac081e8f2" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ReportManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ExportDeviceLogRequest>\r
         <!--Zero or more repetitions:-->\r
         <urn:DeviceGroupID>?</urn:DeviceGroupID>\r
         <urn:RecordIDRangeStart>?</urn:RecordIDRangeStart>\r
         <!--Optional:-->\r
         <urn:RecordIDRangeEnd>?</urn:RecordIDRangeEnd>\r
         <!--Zero or more repetitions:-->\r
         <urn:ResultAction>?</urn:ResultAction>\r
      </urn:ExportDeviceLogRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd/ReportManagerPortType/exportDeviceLogRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="2cff6774-2a7c-4ca4-9d94-e2430c1205a5" isOneWay="false" action="" name="getReportGenerationStatus" bindingOperationName="getReportGenerationStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="033500a4-0b3c-4203-9896-a357761730d1" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ReportManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:GetReportGenerationStatusRequest>\r
         <urn:CommandID>12345</urn:CommandID>\r
      </urn:GetReportGenerationStatusRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:username>test</con:username><con:password>test</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:preemptive>true</con:preemptive><con:authType>Preemptive</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd/ReportManagerPortType/getReportGenerationStatusRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="027bdc0c-0973-4e72-a82a-ee73c4b95cc2" isOneWay="false" action="" name="listProgramEvents" bindingOperationName="listProgramEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f0dad81c-ccdc-4c17-85f1-3179306106f6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ReportManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ListProgramEventsRequest>\r
         <urn:ProgramID>?</urn:ProgramID>\r
         <urn:StartDate>?</urn:StartDate>\r
         <urn:EndDate>?</urn:EndDate>\r
         <urn:Pagination>\r
            <urn1:PageNumber>?</urn1:PageNumber>\r
            <urn1:PageSize>?</urn1:PageSize>\r
         </urn:Pagination>\r
      </urn:ListProgramEventsRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd/ReportManagerPortType/listProgramEventsRequest"/></con:call></con:operation><con:operation id="e16dd8cf-42b1-4d96-8657-890948558f70" isOneWay="false" action="" name="listProgramEventsByDate" bindingOperationName="listProgramEventsByDate" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7a3e5a15-c63e-425d-a03b-23b78eaf2f18" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ReportManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ListProgramEventsByDateRequest>\r
         <urn:StartDate>?</urn:StartDate>\r
         <urn:EndDate>?</urn:EndDate>\r
         <urn:Pagination>\r
            <urn1:PageNumber>?</urn1:PageNumber>\r
            <urn1:PageSize>?</urn1:PageSize>\r
         </urn:Pagination>\r
      </urn:ListProgramEventsByDateRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd/ReportManagerPortType/listProgramEventsByDateRequest"/></con:call></con:operation><con:operation id="c2b1e03b-425b-43d0-b706-ac03345c1bac" isOneWay="false" action="" name="listProgramEventsByProgramID" bindingOperationName="listProgramEventsByProgramID" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="690107db-b54d-43d5-9cff-786a7107299b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8083/ReportManagerPort</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd" xmlns:urn1="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <urn:ListProgramEventsByProgramIDRequest>\r
         <urn:ProgramID>?</urn:ProgramID>\r
         <urn:Pagination>\r
            <urn1:PageNumber>?</urn1:PageNumber>\r
            <urn1:PageSize>?</urn1:PageSize>\r
         </urn:Pagination>\r
      </urn:ListProgramEventsByProgramIDRequest>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd/ReportManagerPortType/listProgramEventsByProgramIDRequest"/></con:call></con:operation></con:interface><con:mockService id="3bd35ea7-0439-4c9a-8c37-191ef852a201" port="8083" path="/DeviceManagerPort" host="localhost" name="DeviceManager Mock Service" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:onRequestScript>log.info(mockRequest.getRequestHeaders())

import com.eviware.soapui.support.types.StringToStringsMap;

// Package the Username and Password into variables

// Uncomment the following to use the 'Global Properties' username/password values
//def globalProperties = com.eviware.soapui.model.propertyexpansion.PropertyExpansionUtils.globalProperties;   
//String httpUsername = globalProperties['httpUsername'].value;  
//String httpPassword = globalProperties['httpPassword'].value;  

// Uncomment the following to use these hard-coded values
String httpUsername = "test";
String httpPassword = "test";

// Retrieve the request headers for parsing
StringToStringsMap headers = mockRequest.getRequestHeaders();
headers.each
{
	if( it.key.equals( "Authorization" ) )
	{
		// Retrieve authorization string from request and clean it
		String content = it.value;
		String [] contentArray = content.split();
		if( contentArray.length == 2 )
		{
			// Decode the authorization string
			String base64Enc = contentArray[1].minus( "]" );
			byte[] decoded = base64Enc.decodeBase64();
			String s = new String( decoded );
			if( httpUsername != null &amp;&amp; httpPassword != null )
			{
				def credentials = s.split( ":" );
				assert credentials[0].equals( httpUsername ) : "Invalid Username or Password";
				assert credentials[1].equals( httpPassword ) : "Invalid Username or Password";
				log.info( "Mock Service authenticated request for credentials: " + s );
			}
		}
	}
}
</con:onRequestScript><con:mockOperation name="addHANDevice" id="c2bd9670-1640-4781-b80f-09157b26016c" interface="DeviceManagerSoapBinding" operation="addHANDevice"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response";
//return "Mock Failure Response";
//return "Mock SoapFault Response";</con:dispatchPath><con:response name="Mock Success Response" id="0d24637d-3b13-4a0d-8007-8e330637e2a8" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
//We must declare the namespace alias we will use in the xpath below.
//If we don't do this, the namespace aliases in the xpath must exactly match those in the request
holder.declareNamespace('soap-env',"http://schemas.xmlsoap.org/soap/envelope/")
holder.declareNamespace('itron-dm',"urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd")

//This will probably only work if there is a single mac ID specified.
requestContext.mac = holder["/soap-env:Envelope/soap-env:Body/itron-dm:AddHANDeviceRequest/itron-dm:D2GAttributes/itron-dm:ESI/itron-dm:DeviceIdentifiers/itron-dm:MacID"]

//switch to the line below to just return a default mac (which won't match the request
//requestContext.mac = "12.12.12.12.12.12"</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:AddHANDeviceResponse>
         <urn:MacID>${mac}</urn:MacID>
      </urn:AddHANDeviceResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addHANDeviceResponse"/></con:response><con:response name="Mock Failure Response" id="5712af10-3bba-456b-94c6-03123f55ee64" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:script>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
//We must declare the namespace alias we will use in the xpath below.
//If we don't do this, the namespace aliases in the xpath must exactly match those in the request
holder.declareNamespace('soap-env',"http://schemas.xmlsoap.org/soap/envelope/")
holder.declareNamespace('itron-dm',"urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd")

//This will probably only work if there is a single mac ID specified.
requestContext.mac = holder["/soap-env:Envelope/soap-env:Body/itron-dm:AddHANDeviceRequest/itron-dm:D2GAttributes/itron-dm:ESI/itron-dm:DeviceIdentifiers/itron-dm:MacID"]

//switch to the line below to just return a default mac (which won't match the request
//requestContext.mac = "12.12.12.12.12.12"</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:AddHANDeviceResponse>
         <urn:MacID>${mac}</urn:MacID>
         <!--Zero or more repetitions:-->
         <urn:Error>Test_Error_1</urn:Error>
         <urn:Error>Test_Error_2</urn:Error>
      </urn:AddHANDeviceResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response" id="825624c2-ceba-4986-a012-39e822e313db" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Improperly formatted message.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>INVALID_MESSAGE</urn:ErrorCode>
            <urn:ErrorMessage>Itron documentation does not detail possible errors.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addHANDeviceResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="addESIGroup" id="7f0e1d10-60a1-4a1b-a9ed-56d774d97473" interface="DeviceManagerSoapBinding" operation="addESIGroup"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response"
//return "Mock Failure Response"
//return "Mock SoapFault Response"</con:dispatchPath><con:response name="Mock Success Response" id="ed40081b-fa25-46cb-b73a-4e1ff7a1c56e" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>Random random = new Random()
requestContext.randGroupId = random.nextInt(10000)</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:AddESIGroupResponse>
         <urn:GroupID>${randGroupId}</urn:GroupID>
      </urn:AddESIGroupResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addESIGroupResponse"/></con:response><con:response name="Mock Failure Response" id="88ab84bf-c447-4cd8-96c6-ce88b048cded" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
//We must declare the namespace alias we will use in the xpath below.
//If we don't do this, the namespace aliases in the xpath must exactly match those in the request
holder.declareNamespace('soap-env',"http://schemas.xmlsoap.org/soap/envelope/")
holder.declareNamespace('itron-dm',"urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd")

requestContext.mac = holder["/soap-env:Envelope/soap-env:Body/itron-dm:AddESIGroupRequest/itron-dm:StaticGroupMemberList/itron-dm:MacID"]
</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:AddESIGroupResponse>
         <urn:GroupID>1</urn:GroupID>
         <!--Zero or more repetitions:-->
         <urn:Errors>
            <urn:MacID>${mac}</urn:MacID>
            <urn:Error>ERROR_MACID_NOT_FOUND</urn:Error>
         </urn:Errors>
      </urn:AddESIGroupResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addESIGroupResponse"/></con:response><con:response name="Mock SoapFault Response - generic" id="2a6f905b-49c3-406e-b002-8c342ec13239" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Generic error.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>generic</urn:ErrorCode>
            <urn:ErrorMessage>addESIGroup Error: A generic error has occurred.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addESIGroupResponse"/></con:response><con:response name="Mock SoapFault Response - fatal_error" id="d4e189aa-a754-461f-9ccb-02f78b41eab0" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Fatal error.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>fatal_error</urn:ErrorCode>
            <urn:ErrorMessage>A fatal error has occurred.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addESIGroupResponse"/></con:response><con:response name="Mock SoapFault Response - Unique.deviceGroup.groupName" id="215c5f42-f180-450c-8abc-b4012db7a80d" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Non-unique group name.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>Unique.deviceGroup.groupName</urn:ErrorCode>
            <urn:ErrorMessage>addESIGroup Error: Group name must be unique.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addESIGroupResponse"/></con:response><con:response name="Mock SoapFault Response - group.import.error.groupType" id="52b6419d-2e5f-453d-b38b-6a7b5c539d20" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid group type.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>group.import.error.groupType</urn:ErrorCode>
            <urn:ErrorMessage>addESIGroup Error: Invalid group type.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addESIGroupResponse"/></con:response><con:response name="Mock SoapFault Response - group.import.error.groupEmpty" id="df00d300-a982-44d5-b1ba-a6801a13e1aa" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Group empty.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>group.import.error.groupEmpty</urn:ErrorCode>
            <urn:ErrorMessage>addESIGroup Error: Imported group cannot be empty.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/addESIGroupResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="editHANDevice" id="6b244ef0-01c8-43ef-bf7a-1f323cb59856" interface="DeviceManagerSoapBinding" operation="editHANDevice"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response"
//return "Mock Failure Response"
//return "Mock SoapFault Response"</con:dispatchPath><con:response name="Mock Success Response" id="ee7dfd17-be58-4f7e-bbff-892d2acc4ff8" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
//We must declare the namespace alias we will use in the xpath below.
//If we don't do this, the namespace aliases in the xpath must exactly match those in the request
holder.declareNamespace('soap-env',"http://schemas.xmlsoap.org/soap/envelope/")
holder.declareNamespace('itron-dm',"urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd")

//This will probably only work if there is a single mac ID specified.
requestContext.mac = holder["/soap-env:Envelope/soap-env:Body/itron-dm:EditHANDeviceRequest/itron-dm:D2GAttributes/itron-dm:PrimaryAttributes/itron-dm:MacID"]

//switch to the line below to just return a default mac (which won't match the request)
//requestContext.mac = "12.12.12.12.12.12"</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:EditHANDeviceResponse>
         <urn:MacID>${mac}</urn:MacID>
      </urn:EditHANDeviceResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock Failure Response" id="dbbfb1fd-b2fd-4aa9-bbb7-8c6d2a3c4fd1" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
//We must declare the namespace alias we will use in the xpath below.
//If we don't do this, the namespace aliases in the xpath must exactly match those in the request
holder.declareNamespace('soap-env',"http://schemas.xmlsoap.org/soap/envelope/")
holder.declareNamespace('itron-dm',"urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd")

//This will probably only work if there is a single mac ID specified.
requestContext.mac = holder["/soap-env:Envelope/soap-env:Body/itron-dm:EditHANDeviceRequest/itron-dm:D2GAttributes/itron-dm:PrimaryAttributes/itron-dm:MacID"]

//switch to the line below to just return a default mac (which won't match the request)
//requestContext.mac = "12.12.12.12.12.12"</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:EditHANDeviceResponse>
         <urn:MacID>${mac}</urn:MacID>
         <!--Zero or more repetitions:-->
         <urn:Error>Test_Error_1</urn:Error>
         <urn:Error>Test_Error_2</urn:Error>
      </urn:EditHANDeviceResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response - generic" id="7badcfe0-d340-421e-8c2c-43b79389141f" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Generic error.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>generic</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: A generic error has occurred.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response - fatal_error" id="53856b2a-7300-4ed8-a943-56df4aadcf48" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Fatal error.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>fatal_error</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: A fatal error has occurred.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response - authorization_failure" id="4f8ed585-566a-4726-b599-75cacacb6fd3" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Authorization failure.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>authorization_error</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: Username or Password is incorrect.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response - ESIMackID.Pattern.message" id="9c417393-a76d-4968-80d8-c7e23adc63fc" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid ESIMackID Pattern.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>ESIMackID.Pattern.message</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: Invalid ESIMackID Pattern.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response - esiAssociate.hanDevice.notFound" id="ea7de492-85d8-4cce-a5c9-99b527ad07d9" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>HAN device not found.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>esiAssociate.hanDevice.notFound</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: HAN device was not found.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response - esiAssociate.hanDevice.unmodifiable.deviceState" id="3311020d-991b-429f-b803-a64f53ba00dc" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Device unmodifiable.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>esiAssociate.hanDevice.unmodifiable.deviceState</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: Device cannot be edited because it is unmodifiable.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response - esiAssociate.hanDevice.provisioning.inProgress" id="6592211d-74ef-45a7-863e-ff33406733a3" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Provisioning in progress.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>esiAssociate.hanDevice.provisioning.inProgress</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: Cannot edit device, provisioning in progress.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response - esiAssociate.hanDevice.esiNotFound" id="1bcd046f-eb4c-441a-9514-0dab10b22f9c" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>ESI not found.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>esiAssociate.hanDevice.esiNotFound</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: ESI not found.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response - esiAssociate.hanDevice.esiNotValid" id="b8743f27-3da9-4169-b3a5-355c170f2362" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>ESI not valid.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>esiAssociate.hanDevice.esiNotValid</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: ESI not valid.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response - esiAssociate.hanDevice.notESI" id="22c99827-bf42-4f10-9641-a14698c734f4" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Device not ESI.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>esiAssociate.hanDevice.notESI</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: Device is not ESI.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:response name="Mock SoapFault Response - generic - fatal_error - authorization_error" id="d7a93eb1-1b30-4613-8a87-03f5744cf02b" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Generic multi-error.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>generic</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: A generic error has occurred.</urn:ErrorMessage>
          </urn:Error>
          <urn:Error>
            <urn:ErrorCode>fatal_error</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: A fatal error has occurred.</urn:ErrorMessage>
          </urn:Error>
          <urn:Error>
            <urn:ErrorCode>authorization_error</urn:ErrorCode>
            <urn:ErrorMessage>editHANDevice Error: Username or Password is incorrect.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editHANDeviceResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="editESIGroup" id="85a71c1d-7bd1-4059-b9de-d5ee84ca1c11" interface="DeviceManagerSoapBinding" operation="editESIGroup"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response"
//return "Mock Failure Response"
//return "Mock SoapFault Response"</con:dispatchPath><con:response name="Mock Success Response" id="1048eab4-0d15-45b2-8520-674824e56090" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>Random random = new Random()
requestContext.randGroupId = random.nextInt(10000)</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:EditESIGroupResponse>
         <urn:GroupID>${randGroupId}</urn:GroupID>
      </urn:EditESIGroupResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editESIGroupResponse"/></con:response><con:response name="Mock Failure Response" id="e4375de8-3e56-4941-88a9-ce2e493efba7" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>Random random = new Random()
requestContext.randGroupId = random.nextInt(10000)

def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
//We must declare the namespace alias we will use in the xpath below.
//If we don't do this, the namespace aliases in the xpath must exactly match those in the request
holder.declareNamespace('soap-env',"http://schemas.xmlsoap.org/soap/envelope/")
holder.declareNamespace('itron-dm',"urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd")

requestContext.mac = holder["/soap-env:Envelope/soap-env:Body/itron-dm:EditESIGroupRequest/itron-dm:StaticGroupMemberList/itron-dm:MacID"]
</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:EditESIGroupResponse>
         <urn:GroupID>${randGroupId}</urn:GroupID>
         <!--Zero or more repetitions:-->
         <urn:Errors>
            <urn:MacID>${mac}</urn:MacID>
            <urn:Error>Test_Error_1</urn:Error>
         </urn:Errors>
         <urn:Errors>
            <urn:MacID>${mac}</urn:MacID>
            <urn:Error>Test_Error_2</urn:Error>
         </urn:Errors>
      </urn:EditESIGroupResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editESIGroupResponse"/></con:response><con:response name="Mock SoapFault Response - generic" id="4b64d342-be25-49dd-b3a5-0ebe4d816524" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Generic error.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>generic</urn:ErrorCode>
            <urn:ErrorMessage>editESIGroup Error: A generic error has occurred.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editESIGroupResponse"/></con:response><con:response name="Mock SoapFault Response - fatal_error" id="1b57de94-f076-4593-85fc-5444448f0158" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Fatal error.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>fatal_error</urn:ErrorCode>
            <urn:ErrorMessage>editESIGroup Error: A fatal error has occurred.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editESIGroupResponse"/></con:response><con:response name="Mock SoapFault Response - authorization_failure" id="cdf333f5-a3bd-4dca-addf-df7262730b78" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Authorization failure.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>authorization_failure</urn:ErrorCode>
            <urn:ErrorMessage>editESIGroup Error: Username or Password is incorrectA generic error has occurred.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editESIGroupResponse"/></con:response><con:response name="Mock SoapFault Response - Unique.deviceGroup.groupName" id="583fbf0a-1a2c-460b-af04-0d3d2ddf82f6" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Non-unique group name.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>Unique.deviceGroup.groupName</urn:ErrorCode>
            <urn:ErrorMessage>editESIGroup Error: Group name must be unique.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editESIGroupResponse"/></con:response><con:response name="Mock SoapFault Response - group.import.error.groupType" id="f0a51dc5-8ddf-4f10-8693-dbcebcb7ab39" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Invalid group type.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>group.import.error.groupType</urn:ErrorCode>
            <urn:ErrorMessage>editESIGroup Error: Invalid group type.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editESIGroupResponse"/></con:response><con:response name="Mock SoapFault Response - group.import.error.groupEmpty" id="b34f91eb-b0ab-48c5-ab1d-b4592540da9a" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Group empty.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>group.import.error.groupEmpty</urn:ErrorCode>
            <urn:ErrorMessage>editESIGroup Error: Imported group cannot be empty.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/editESIGroupResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="updateDeviceEventLogs" id="3dee0edc-1681-47f5-93e4-021dc231d105" interface="DeviceManagerSoapBinding" operation="updateDeviceEventLogs"><con:settings/><con:defaultResponse>Mock Success Response</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response"
//return "Mock Success Response (False)"
//return "Mock SoapFault Response"</con:dispatchPath><con:response name="Mock Success Response" id="0ec361b8-dbfd-4a64-83ec-4dc3768adb0d" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:UpdateDeviceEventLogsResponse>
         <urn:updateRequested>true</urn:updateRequested>
      </urn:UpdateDeviceEventLogsResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/updateDeviceEventLogsResponse"/></con:response><con:response name="Mock Success Response (False)" id="0ec361b8-dbfd-4a64-83ec-4dc3768adb0d" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>//requestContext.updateRequestedBool = true
requestContext.updateRequestBool = false</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:UpdateDeviceEventLogsResponse>
         <urn:updateRequested>false</urn:updateRequested>
      </urn:UpdateDeviceEventLogsResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/updateDeviceEventLogsResponse"/></con:response><con:response name="Mock SoapFault Response" id="164bdb31-1838-4219-8ac5-835f1aae082d" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Improperly formatted message.</faultstring>
      <!--Optional:-->
      <faultactor>http://mockError.com/error</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>INVALID_MESSAGE</urn:ErrorCode>
            <urn:ErrorMessage>Improperly formatted message.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/updateDeviceEventLogsResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="findHANDevice" id="d0498404-9367-48d3-96d2-d89ba755e247" interface="DeviceManagerSoapBinding" operation="findHANDevice"><con:settings/><con:defaultResponse>Mock Success Response (Reversed Mac)</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Mock Success Response (Reversed Mac)" id="d071333d-4f45-4d45-92d5-5d3b048b3d7c" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
//We must declare the namespace alias we will use in the xpath below.
//If we don't do this, the namespace aliases in the xpath must exactly match those in the request
holder.declareNamespace('soap-env',"http://schemas.xmlsoap.org/soap/envelope/")
holder.declareNamespace('itron-dm',"urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd")

//Reverse the mac in the request, and send that back as the secondary mac
requestContext.secondaryMac = holder.getNodeValue("/soap-env:Envelope/soap-env:Body/itron-dm:FindHANDeviceRequest/itron-dm:ESIMacID").reverse()</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:FindHANDeviceResponse>
         <!--Optional:-->
         <urn:DeviceCount>1</urn:DeviceCount>
         <!--Zero or more repetitions:-->
         <urn:MacID>${secondaryMac}</urn:MacID>
      </urn:FindHANDeviceResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/findHANDeviceResponse"/></con:response><con:response name="Mock Empty Response" id="ca5f5958-8c5f-46e0-937b-d822af49e82b" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:FindHANDeviceResponse>
         <urn:DeviceCount>0</urn:DeviceCount>
      </urn:FindHANDeviceResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager/DeviceManagerPortType/findHANDeviceResponse"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:mockService id="549c8aaf-ab99-4ab9-b0b7-6a43f74276fb" port="8083" path="/ServicePointManagerPort" host="localhost" name="ServicePointManager Mock Service" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:onRequestScript>import com.eviware.soapui.support.types.StringToStringsMap;

// Package the Username and Password into variables

// Uncomment the following to use the 'Global Properties' username/password values
//def globalProperties = com.eviware.soapui.model.propertyexpansion.PropertyExpansionUtils.globalProperties;   
//String httpUsername = globalProperties['httpUsername'].value;  
//String httpPassword = globalProperties['httpPassword'].value;  

// Uncomment the following to use these hard-coded values
String httpUsername = "test";
String httpPassword = "test";

// Retrieve the request headers for parsing
StringToStringsMap headers = mockRequest.getRequestHeaders();
headers.each
{
	if( it.key.equals( "Authorization" ) )
	{
		// Retrieve authorization string from request and clean it
		String content = it.value;
		String [] contentArray = content.split();
		if( contentArray.length == 2 )
		{
			// Decode the authorization string
			String base64Enc = contentArray[1].minus( "]" );
			byte[] decoded = base64Enc.decodeBase64();
			String s = new String( decoded );
			if( httpUsername != null &amp;&amp; httpPassword != null )
			{
				def credentials = s.split( ":" );
				assert credentials[0].equals( httpUsername ) : "Invalid Username or Password";
				assert credentials[1].equals( httpPassword ) : "Invalid Username or Password";
				log.info( "Mock Service authenticated request for credentials: " + s );
			}
		}
	}
}
</con:onRequestScript><con:mockOperation name="addServicePoint" id="4fe206dd-95b0-4b6f-bf2c-f39143729a4b" interface="ServicePointManagerSoapBinding" operation="addServicePoint"><con:settings/><con:defaultResponse>Mock Success Response</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response";
//return "Mock Failure Response";
//return "Mock SoapFault Response";</con:dispatchPath><con:response name="Mock Success Response" id="48115aff-0ec9-49ee-b00b-7d62965019cc" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
//We must declare the namespace alias we will use in the xpath below.
//If we don't do this, the namespace aliases in the xpath must exactly match those in the request
holder.declareNamespace('soap-env',"http://schemas.xmlsoap.org/soap/envelope/")
holder.declareNamespace('itron-dm',"urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd")

requestContext.utilServicePointId = holder["/soap-env:Envelope/soap-env:Body/itron-dm:AddServicePointRequest/itron-dm:ServicePoint/itron-dm:UtilServicePointID"]
</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:AddServicePointResponse>
         <urn:UtilServicePointID>${utilServicePointId}</urn:UtilServicePointID>
      </urn:AddServicePointResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager/ServicePointManagerPortType/addServicePointResponse"/></con:response><con:response name="Mock SoapFault Response" id="680da22a-0520-4683-b9cd-5dac37e7f2b6" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Improperly formatted message.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>INVALID_MESSAGE</urn:ErrorCode>
            <urn:ErrorMessage>Itron documentation does not detail possible errors.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager/ServicePointManagerPortType/addServicePointResponse"/></con:response><con:response name="Mock SoapFault Response - UtilServicePointID.Exists" id="d15e2d25-3f0f-41a1-9b78-8c3453366eef" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SOAP-ENV:Fault>
         <faultcode>SOAP-ENV:Server</faultcode>
         <faultstring xml:lang="en">UtilServicePointID '123456-SP' already exists</faultstring>
         <detail>
            <ns2:ErrorFault xmlns:ns10="urn:com:ssn:dr:xmlschema:service:v1.5:ProgramEventManager.xsd" xmlns:ns11="urn:com:ssn:dr:xmlschema:service:v1.4:RatePlanManager.xsd" xmlns:ns12="urn:com:ssn:dr:xmlschema:service:v1.3:RatePlanManager.xsd" xmlns:ns13="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd" xmlns:ns14="urn:com:ssn:dr:xmlschema:service:v1.1:ReportManager.xsd" xmlns:ns15="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd" xmlns:ns2="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd" xmlns:ns3="urn:com:ssn:dr:xmlschema:service:v1.0:BasicTypes.xsd" xmlns:ns4="urn:com:ssn:dr:xmlschema:service:v1.0:LocationTypes.xsd" xmlns:ns5="urn:com:ssn:dr:xmlschema:service:v1.8:DeviceManager.xsd" xmlns:ns6="urn:com:ssn:dr:xmlschema:service:v1.7:DeviceManager.xsd" xmlns:ns7="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager.xsd" xmlns:ns8="urn:com:ssn:dr:xmlschema:service:v1.0:ProgramManager.xsd" xmlns:ns9="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">
               <ns2:Error>
                  <ns2:ErrorCode>UtilServicePointID.Exists</ns2:ErrorCode>
                  <ns2:ErrorMessage>UtilServicePointID '123456-SP' already exists</ns2:ErrorMessage>
               </ns2:Error>
            </ns2:ErrorFault>
         </detail>
      </SOAP-ENV:Fault>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>
]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager/ServicePointManagerPortType/addServicePointResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="editServicePoint" id="6f5b900b-c668-43f6-81b7-df24b2acc379" interface="ServicePointManagerSoapBinding" operation="editServicePoint"><con:settings/><con:defaultResponse>Mock Success Response</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response";
//return "Mock Failure Response";
//return "Mock SoapFault Response";</con:dispatchPath><con:response name="Mock Success Response" id="6fb26844-6360-4fb7-8140-bcb630c87ea7" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
//We must declare the namespace alias we will use in the xpath below.
//If we don't do this, the namespace aliases in the xpath must exactly match those in the request
holder.declareNamespace('soap-env',"http://schemas.xmlsoap.org/soap/envelope/")
holder.declareNamespace('itron-dm',"urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd")

requestContext.utilServicePointId = holder["/soap-env:Envelope/soap-env:Body/itron-dm:EditServicePointRequest/itron-dm:ServicePoint/itron-dm:UtilServicePointID"]
</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:EditServicePointResponse>
         <urn:UtilServicePointID>${utilServicePointId}</urn:UtilServicePointID>
      </urn:EditServicePointResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager/ServicePointManagerPortType/editServicePointResponse"/></con:response><con:response name="Mock SoapFault Response" id="82d383f6-b9be-42e7-969c-70785c170037" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Improperly formatted message.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>INVALID_MESSAGE</urn:ErrorCode>
            <urn:ErrorMessage>Itron documentation does not detail possible errors.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.3:ServicePointManager/ServicePointManagerPortType/editServicePointResponse"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:mockService id="cbd82b96-26d1-42a4-a8e6-587ddb10dca7" port="8083" path="/ProgramEventManagerPort" host="USPLYWHP6035863" name="ProgramEventManagerSoapBinding MockService" bindToHostOnly="false" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:onRequestScript>import com.eviware.soapui.support.types.StringToStringsMap;

// Package the Username and Password into variables

// Uncomment the following to use the 'Global Properties' username/password values
//def globalProperties = com.eviware.soapui.model.propertyexpansion.PropertyExpansionUtils.globalProperties;   
//String httpUsername = globalProperties['httpUsername'].value;  
//String httpPassword = globalProperties['httpPassword'].value;  

// Uncomment the following to use these hard-coded values
String httpUsername = "test";
String httpPassword = "test";

// Retrieve the request headers for parsing
StringToStringsMap headers = mockRequest.getRequestHeaders();
headers.each
{
	if( it.key.equals( "Authorization" ) )
	{
		// Retrieve authorization string from request and clean it
		String content = it.value;
		String [] contentArray = content.split();
		if( contentArray.length == 2 )
		{
			// Decode the authorization string
			String base64Enc = contentArray[1].minus( "]" );
			byte[] decoded = base64Enc.decodeBase64();
			String s = new String( decoded );
			if( httpUsername != null &amp;&amp; httpPassword != null )
			{
				def credentials = s.split( ":" );
				assert credentials[0].equals( httpUsername ) : "Invalid Username or Password";
				assert credentials[1].equals( httpPassword ) : "Invalid Username or Password";
				log.info( "Mock Service authenticated request for credentials: " + s );
			}
		}
	}
}
</con:onRequestScript><con:mockOperation name="addHANLoadControlProgramEvent" id="5d07e677-4772-48e9-861a-d29b103d8bed" interface="ProgramEventManagerSoapBinding" operation="addHANLoadControlProgramEvent"><con:settings/><con:defaultResponse>Mock Success Response</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response"
//return "Mock SoapFault Response"</con:dispatchPath><con:response name="Mock Success Response" id="28dd5c35-a465-4a79-b55c-7fca065df0c2" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>Random random = new Random()
requestContext.randProgramId = random.nextInt(10000)</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:AddProgramEventResponse>
         <urn:ProgramEventID>${randProgramId}</urn:ProgramEventID>
      </urn:AddProgramEventResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/addHANLoadControlProgramEventResponse"/></con:response><con:response name="Mock SoapFault Response" id="bb8d9c75-fe3e-4bd5-b8c8-068640d5e460" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Improperly formatted message.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>INVALID_MESSAGE</urn:ErrorCode>
            <urn:ErrorMessage>Itron documentation does not detail possible errors.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/addHANLoadControlProgramEventResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="cancelHANLoadControlProgramEvent" id="a9902449-5221-4156-bab2-65598027ea8a" interface="ProgramEventManagerSoapBinding" operation="cancelHANLoadControlProgramEvent"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response";
//return "Mock SoapFault Response";</con:dispatchPath><con:response name="Mock Success Response" id="03dfc294-cca1-41b6-842c-ce9a9e07c19a" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
//We must declare the namespace alias we will use in the xpath below.
//If we don't do this, the namespace aliases in the xpath must exactly match those in the request
holder.declareNamespace('soap-env',"http://schemas.xmlsoap.org/soap/envelope/")
holder.declareNamespace('itron-pem',"urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd")

//This will probably only work if there is a single mac ID specified.
requestContext.programEventId = holder["/soap-env:Envelope/soap-env:Body/itron-pem:CancelHANLoadControlProgramEventRequest/itron-pem:ProgramEventID"]

//switch to the line below to just return a default mac (which won't match the request
//requestContext.mac = "12.12.12.12.12.12"</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:CancelHANLoadControlProgramEventResponse>
         <urn:ProgramEventID>${programEventId}</urn:ProgramEventID>
      </urn:CancelHANLoadControlProgramEventResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/cancelHANLoadControlProgramEventResponse"/></con:response><con:response name="Mock SoapFault Response" id="971a30d8-c49a-428b-8ef8-bbd17a1e255b" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Improperly formatted message.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>INVALID_MESSAGE</urn:ErrorCode>
            <urn:ErrorMessage>Itron documentation does not detail possible errors.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/cancelHANLoadControlProgramEventResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="cancelHANLoadControlProgramEventOnDevices" id="799ee8b7-a527-4075-81f0-f59ca43497c7" interface="ProgramEventManagerSoapBinding" operation="cancelHANLoadControlProgramEventOnDevices"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response";
//return "Mock SoapFault Response";</con:dispatchPath><con:response name="Mock Success Response" id="67ddaba2-03e3-41f0-b0ef-062c255eb5b3" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>Random random = new Random()
requestContext.randJobId = random.nextInt(10000)</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:CancelHANLoadControlProgramEventOnDevicesResponse>
         <urn:JobID>${randJobId}</urn:JobID>
      </urn:CancelHANLoadControlProgramEventOnDevicesResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/cancelHANLoadControlProgramEventOnDevicesResponse"/></con:response><con:response name="Mock SoapFault Response" id="9d7a83e3-d705-4e57-b5f9-4c36a4ab86dd" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>SOAP-ENV:Server</faultcode>
      <faultstring>The Event has already been completed</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>Done.programEventID</urn:ErrorCode>
            <urn:ErrorMessage>The Event with ID 000 has already been completed.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/cancelHANLoadControlProgramEventOnDevicesResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="cancelAllHANLoadControlProgramEventOnDevices" id="11b8126e-259e-4532-a0d1-17898ffec322" interface="ProgramEventManagerSoapBinding" operation="cancelAllHANLoadControlProgramEventOnDevices"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response";
//return "Mock SoapFault Response";</con:dispatchPath><con:response name="Mock Success Response" id="b4aa268e-01bc-4e4e-9ad8-01682f02c558" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>Random random = new Random()
requestContext.randJobId = random.nextInt(10000)</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:CancelAllHANLoadControlProgramEventOnDevicesResponse>
         <urn:JobID>${randJobId}</urn:JobID>
      </urn:CancelAllHANLoadControlProgramEventOnDevicesResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/cancelAllHANLoadControlProgramEventOnDevicesResponse"/></con:response><con:response name="Mock SoapFault Response" id="3f516296-a57d-44b3-befc-fad004fa0843" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>SOAP-ENV:Server</faultcode>
      <faultstring>The Event has already been completed</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>Done.programEventID</urn:ErrorCode>
            <urn:ErrorMessage>The Event with ID 000 has already been completed.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.6:ProgramEventManager/ProgramEventManagerPortType/cancelAllHANLoadControlProgramEventOnDevicesResponse"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:mockService id="67e0bfa6-89bd-40b1-b191-b67fe033b782" port="8083" path="/ProgramManagerPort" host="USPLYWHP6035863" name="ProgramManagerSoapBinding MockService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:onRequestScript>import com.eviware.soapui.support.types.StringToStringsMap;

// Package the Username and Password into variables

// Uncomment the following to use the 'Global Properties' username/password values
//def globalProperties = com.eviware.soapui.model.propertyexpansion.PropertyExpansionUtils.globalProperties;   
//String httpUsername = globalProperties['httpUsername'].value;  
//String httpPassword = globalProperties['httpPassword'].value;  

// Uncomment the following to use these hard-coded values
String httpUsername = "test";
String httpPassword = "test";

// Retrieve the request headers for parsing
StringToStringsMap headers = mockRequest.getRequestHeaders();
headers.each
{
	if( it.key.equals( "Authorization" ) )
	{
		// Retrieve authorization string from request and clean it
		String content = it.value;
		String [] contentArray = content.split();
		if( contentArray.length == 2 )
		{
			// Decode the authorization string
			String base64Enc = contentArray[1].minus( "]" );
			byte[] decoded = base64Enc.decodeBase64();
			String s = new String( decoded );
			if( httpUsername != null &amp;&amp; httpPassword != null )
			{
				def credentials = s.split( ":" );
				assert credentials[0].equals( httpUsername ) : "Invalid Username or Password";
				assert credentials[1].equals( httpPassword ) : "Invalid Username or Password";
				log.info( "Mock Service authenticated request for credentials: " + s );
			}
		}
	}
}
</con:onRequestScript><con:mockOperation name="addProgram" id="d227a581-322e-4558-b2d9-d9687d198f13" interface="ProgramManagerSoapBinding" operation="addProgram"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response";
//return "Mock SoapFault Response";</con:dispatchPath><con:response name="Mock Success Response" id="eed69f47-0066-43c8-9131-1cb6f0c8e3e4" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>Random random = new Random()
requestContext.randProgramId = random.nextInt(10000)

def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
//We must declare the namespace alias we will use in the xpath below.
//If we don't do this, the namespace aliases in the xpath must exactly match those in the request
holder.declareNamespace('soap-env',"http://schemas.xmlsoap.org/soap/envelope/")
holder.declareNamespace('itron-dm',"urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager.xsd")

//This will probably only work if there is a single mac ID specified.
requestContext.programName = holder["/soap-env:Envelope/soap-env:Body/itron-dm:AddProgramRequest/itron-dm:ProgramName"]

//switch to the line below to just return a default program name (which won't match the request)
//requestContext.programName = "Default Program Name"</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:AddProgramResponse>
         <urn:ProgramName>${programName}</urn:ProgramName>
         <urn:ProgramID>${randProgramId}</urn:ProgramID>
      </urn:AddProgramResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager/ProgramManagerPortType/addProgramResponse"/></con:response><con:response name="Mock SoapFault Response" id="bf37fb2a-eba8-411a-ac91-add8b1bf4e60" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Improperly formatted message.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>INVALID_MESSAGE</urn:ErrorCode>
            <urn:ErrorMessage>Itron documentation does not detail possible errors.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager/ProgramManagerPortType/addProgramResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="setServicePointEnrollment" id="e89d7a40-801e-4309-b47a-d06f8c64f131" interface="ProgramManagerSoapBinding" operation="setServicePointEnrollment"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response";
//return "Mock SoapFault Response";</con:dispatchPath><con:response name="Mock Success Response" id="6f6ff1f5-7c7d-4f81-9957-d661a15c0a10" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:SetServicePointEnrollmentResponse/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager/ProgramManagerPortType/setServicePointEnrollmentResponse"/></con:response><con:response name="Mock SoapFault Response" id="14d138f4-a7d3-4ef5-95de-bfe04f0020ab" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Improperly formatted message.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>INVALID_MESSAGE</urn:ErrorCode>
            <urn:ErrorMessage>Itron documentation does not detail possible errors.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.1:ProgramManager/ProgramManagerPortType/setServicePointEnrollmentResponse"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:mockService id="853ba073-85b6-47b8-85c9-c7497f7c266b" port="8083" path="/ReportManagerPort" host="USPLYWHP6035863" name="ReportManagerSoapBinding MockService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action">false</con:setting></con:settings><con:properties/><con:onRequestScript>import com.eviware.soapui.support.types.StringToStringsMap;

// Package the Username and Password into variables

// Uncomment the following to use the 'Global Properties' username/password values
//def globalProperties = com.eviware.soapui.model.propertyexpansion.PropertyExpansionUtils.globalProperties;   
//String httpUsername = globalProperties['httpUsername'].value;  
//String httpPassword = globalProperties['httpPassword'].value;  

// Uncomment the following to use these hard-coded values
String httpUsername = "test";
String httpPassword = "test";

// Retrieve the request headers for parsing
StringToStringsMap headers = mockRequest.getRequestHeaders();
headers.each
{
	if( it.key.equals( "Authorization" ) )
	{
		// Retrieve authorization string from request and clean it
		String content = it.value;
		String [] contentArray = content.split();
		if( contentArray.length == 2 )
		{
			// Decode the authorization string
			String base64Enc = contentArray[1].minus( "]" );
			byte[] decoded = base64Enc.decodeBase64();
			String s = new String( decoded );
			if( httpUsername != null &amp;&amp; httpPassword != null )
			{
				def credentials = s.split( ":" );
				assert credentials[0].equals( httpUsername ) : "Invalid Username or Password";
				assert credentials[1].equals( httpPassword ) : "Invalid Username or Password";
				log.info( "Mock Service authenticated request for credentials: " + s );
			}
		}
	}
}
</con:onRequestScript><con:mockOperation name="getReportGenerationStatus" id="b68de82f-5e71-40a2-8b14-82a3b71b93ea" interface="ReportManagerSoapBinding" operation="getReportGenerationStatus"><con:settings/><con:defaultResponse>Mock Success Response</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>return "Mock Success Response";
//return "Mock Failure Response";
//return "Mock SoapFault Response";</con:dispatchPath><con:response name="Mock Success Response" id="ce9a2524-fdc8-407d-bf65-7f2adbc5df52" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>requestContext.filePath1 = "https://sample-videos.com/csv/Sample-Spreadsheet-10-rows.csv"
requestContext.filePath2 = "https://sample-videos.com/csv/Sample-Spreadsheet-100-rows.csv"</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:GetReportGenerationStatusResponse>
         <urn:Completed>true</urn:Completed>
         <urn:Failed>false</urn:Failed>
         <urn:ReportFileName>${filePath1}</urn:ReportFileName>
         <urn:ReportFileName>${filePath2}</urn:ReportFileName>
      </urn:GetReportGenerationStatusResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd/ReportManagerPortType/getReportGenerationStatusResponse"/></con:response><con:response name="Mock Failure Response" id="1186ea52-c957-42bc-b7ba-b90178bc592f" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>requestContext.failedText = "Report failed to generate."</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:GetReportGenerationStatusResponse>
         <urn:Completed>true</urn:Completed>
         <urn:Failed>true</urn:Failed>
         <urn:FailureMessage>${failedText}</urn:FailureMessage>
      </urn:GetReportGenerationStatusResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd/ReportManagerPortType/getReportGenerationStatusResponse"/></con:response><con:response name="Mock SoapFault Response" id="b3b7f71b-cd2f-4d1e-b1cb-bd95737795ec" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Improperly formatted message.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>INVALID_MESSAGE</urn:ErrorCode>
            <urn:ErrorMessage>Itron documentation does not detail possible errors.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd/ReportManagerPortType/getReportGenerationStatusResponse"/></con:response><con:response name="Mock InProgress Response" id="e50db277-676d-49b8-a517-e0acc10df177" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:GetReportGenerationStatusResponse>
         <urn:Completed>false</urn:Completed>
      </urn:GetReportGenerationStatusResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd/ReportManagerPortType/getReportGenerationStatusResponse"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name="exportDeviceLog" id="dbdbfdca-93f1-4455-96b3-d07c3b9ea00c" interface="ReportManagerSoapBinding" operation="exportDeviceLog"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:response name="Mock Success Response" id="8cc9d55a-76d5-4ddf-a1e0-3f22539509ca" httpResponseStatus="200" encoding="UTF-8"><con:settings/><con:script>Random random = new Random()
requestContext.randCommandId = random.nextInt(10000)</con:script><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:CommandIDResponse>
         <urn:CommandID>${randCommandId}</urn:CommandID>
      </urn:CommandIDResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd/ReportManagerPortType/exportDeviceLogResponse"/></con:response><con:response name="Mock SoapFault Response" id="a62c779d-eeeb-44e3-8fd0-fcb2b195598f" httpResponseStatus="500" encoding="UTF-8"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:com:ssn:dr:xmlschema:service:v1.1:BasicTypes.xsd">
  <soapenv:Body>
    <soapenv:Fault>
      <faultcode>soapenv:Client</faultcode>
      <faultstring>Improperly formatted message.</faultstring>
      <!--Optional:-->
      <faultactor>http://localhost:8083/DeviceManagerPort</faultactor>
      <!--Optional:-->
      <detail>
        <urn:ErrorFault>
          <!--1 or more repetitions:-->
          <urn:Error>
            <urn:ErrorCode>INVALID_MESSAGE</urn:ErrorCode>
            <urn:ErrorMessage>Itron documentation does not detail possible errors.</urn:ErrorMessage>
          </urn:Error>
        </urn:ErrorFault>
        <!--You may enter ANY elements at this point-->
      </detail>
    </soapenv:Fault>
  </soapenv:Body>
</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:com:ssn:dr:xmlschema:service:v1.2:ReportManager.xsd/ReportManagerPortType/exportDeviceLogResponse"/></con:response><con:dispatchConfig/></con:mockOperation></con:mockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>