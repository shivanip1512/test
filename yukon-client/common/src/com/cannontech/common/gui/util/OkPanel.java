package com.cannontech.common.gui.util;

/**
 * Insert the type's description here.
 * Creation date: (1/5/2001 5:00:02 PM)
 * @author: 
 */
public class OkPanel extends javax.swing.JPanel implements java.awt.event.ActionListener {
	protected transient com.cannontech.common.gui.util.OkPanelListener fieldOkPanelListenerEventMulticaster = null;
	private javax.swing.JButton ivjJButtonOk = null;
/**
 * OkPanel constructor comment.
 */
public OkPanel() {
	super();
	initialize();
}
/**
 * OkPanel constructor comment.
 * @param layout java.awt.LayoutManager
 */
public OkPanel(java.awt.LayoutManager layout) {
	super(layout);
}
/**
 * OkPanel constructor comment.
 * @param layout java.awt.LayoutManager
 * @param isDoubleBuffered boolean
 */
public OkPanel(java.awt.LayoutManager layout, boolean isDoubleBuffered) {
	super(layout, isDoubleBuffered);
}
/**
 * OkPanel constructor comment.
 * @param isDoubleBuffered boolean
 */
public OkPanel(boolean isDoubleBuffered) {
	super(isDoubleBuffered);
}
/**
 * Method to handle events for the ActionListener interface.
 * @param e java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void actionPerformed(java.awt.event.ActionEvent e) {
	// user code begin {1}
	// user code end
	if (e.getSource() == getJButtonOk()) 
		connEtoC1(e);
	// user code begin {2}
	// user code end
}
/**
 * 
 * @param newListener com.cannontech.common.gui.util.OkPanelListener
 */
public void addOkPanelListener(com.cannontech.common.gui.util.OkPanelListener newListener) {
	fieldOkPanelListenerEventMulticaster = com.cannontech.common.gui.util.OkPanelListenerEventMulticaster.add(fieldOkPanelListenerEventMulticaster, newListener);
	return;
}
/**
 * connEtoC1:  (JButtonOk.action.actionPerformed(java.awt.event.ActionEvent) --> OkPanel.fireJButtonOkAction_actionPerformed(Ljava.util.EventObject;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.fireJButtonOkAction_actionPerformed(new java.util.EventObject(this));
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Method to support listener events.
 * @param newEvent java.util.EventObject
 */
protected void fireJButtonOkAction_actionPerformed(java.util.EventObject newEvent) {
	if (fieldOkPanelListenerEventMulticaster == null) {
		return;
	};
	fieldOkPanelListenerEventMulticaster.JButtonOkAction_actionPerformed(newEvent);
}
/**
 * Return the JButtonOk property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getJButtonOk() {
	if (ivjJButtonOk == null) {
		try {
			ivjJButtonOk = new javax.swing.JButton();
			ivjJButtonOk.setName("JButtonOk");
			ivjJButtonOk.setMnemonic('o');
			ivjJButtonOk.setText("Ok");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJButtonOk;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// com.cannontech.clientutils.CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	// com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getJButtonOk().addActionListener(this);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("OkPanel");
		setLayout(new java.awt.GridBagLayout());
		setSize(411, 41);

		java.awt.GridBagConstraints constraintsJButtonOk = new java.awt.GridBagConstraints();
		constraintsJButtonOk.gridx = 1; constraintsJButtonOk.gridy = 1;
		constraintsJButtonOk.anchor = java.awt.GridBagConstraints.SOUTHEAST;
		constraintsJButtonOk.ipadx = 34;
		constraintsJButtonOk.insets = new java.awt.Insets(6, 320, 10, 6);
		add(getJButtonOk(), constraintsJButtonOk);
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		javax.swing.JFrame frame = new javax.swing.JFrame();
		OkPanel aOkPanel;
		aOkPanel = new OkPanel();
		frame.setContentPane(aOkPanel);
		frame.setSize(aOkPanel.getSize());
		frame.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		frame.show();
		java.awt.Insets insets = frame.getInsets();
		frame.setSize(frame.getWidth() + insets.left + insets.right, frame.getHeight() + insets.top + insets.bottom);
		frame.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JPanel");
		com.cannontech.clientutils.CTILogger.error( exception.getMessage(), exception );;
	}
}
/**
 * 
 * @param newListener com.cannontech.common.gui.util.OkPanelListener
 */
public void removeOkPanelListener(com.cannontech.common.gui.util.OkPanelListener newListener) {
	fieldOkPanelListenerEventMulticaster = com.cannontech.common.gui.util.OkPanelListenerEventMulticaster.remove(fieldOkPanelListenerEventMulticaster, newListener);
	return;
}
/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GA2F954ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135DAFBD0DC559947C7223669B4E65219CCCCBBC4B1C3DA5A54965B28CC9B37E96BD42622932B6D24A31D26B5FF44C7AB634406CE4FBE582066C1CCEC5122C11388D4448408019542B3E617A06C8AA5589248053D40053BFBB7F76F7288A4747B4E39676E056C02B816195F1CFB3E737A4E775E1310C30793F32C36C304D8F3087EF74ACA4844DB04945C227C115392C40B13187EE0189CA05FACF2C03B9C
	468A17DA1CF9E45701DC68A7C1BFED0945798F78BEC848ABFB8A61A34EB95B8E9332734974F766BF2768F5FE4EEE5A3FF5E68F347BG49C043B6CB4473574F646B74F41D4EE1359132E99067EC1EA950E9D550778226814B87597CE4E8DF24A7AFF1D56973FAEECDA4D93FA8326D45FDCCFBF2648E313525FADBC8B6D8378C61D9CFD1BEF10D9F7AEBGF8F9BB595177A634B55E51215383CA20ECC0134A06A2D2D9C413E4172BFD54AB84C519906FB06EF1126452B50464C3FFAB25ED6F41FDD742F78AE033C15F
	F08169051245D98570CA7CAE35C5B5BA2F5DD39BC86AE3C17B7EB8F79916589D16CB513B2C0C7CE577EBD46E371423FC53E16CD900E34462AC8638814300FFD2FD87DF7F97348D7DDA139288A84106D028D1762B9FABFED106EF178BC6F45AA76200227A89E1BAFDEE26B486BF73012D3312452EE3B2C92E607ACD79E49D597A7DF3365DB1E432B57938ADE10449E255C8D4A66CECD75C33B70E4C363F59E71FA766331316AA761C98E727BEDAE2CB577749B41D1DB70A3A6E213AA670ED556D035187A93D53C4E7
	3678B435996C7BE16C01D1EE9B5D7BB8AF2D0E55A46FC4EBCCB92C32B458CAE546C333BC1717A33D38F7C81E4B4BFB141EA04F65656E8B1C1765B01685E076352292FD33BBE0F1EA00E500A440E6C0A6A0AB40ED6C57A75E7F0CB66695D42DB1A249FED1A5EC6D0A723FC3ABCEE82A608906B5A1B8A0F6892AA4744BE21868F3EEABC799744FDA17C8EDFFG4EB8AB86C5D550A4A5883B8B81D19355B01B333E7CG4ED1C5BA5AA985C4B8A090A2FC5F3B4AA19E92D988EB7F8E7985CD0C4EE063771423CE4604AE
	5891B600EFA6179F1FC4F99D8ADA1C25001AA017C3E5856EF7CED4A1DE38DC2D0AB29A89F562CD4832A04A59C7E307973E0703DC4677FD00348C68EFB776992DF84534CF33B4006C8B6AA477317E8B98FF33035CE61E6E66B6533C77CED27AE8CBCC1BC164A94CD60A15393EA353BD11AF564F6A691E33964FDB0CDFAF9CAB76DE18FB067D8B5AFF1F212B12AA5415976EAB8316A9DC466BAA8A194DB68AE111DBE93B8A86A67A2392E7FC1674BAF4F932FE856DA7A9DCD67751FB44127797A72BAD740CAFD2BEE6
	B0192C2944BCA40E09C12DD98C09C1BFFC047531BBAA5156F4BF9DD40CB56BA9BD84FE5D840E94B6689BAA517784CDD3257E08A6F6081AA685072263BF24E705A37D21E8C860E77D2892632FB28EFEED4C7FC9A57A4400928C0AD4B94692FD7C2754A7C5D98CG53CDCAA428B17A03A7D1D72362249E939EBA09854D18A0C7B03E307C7FDD61E53C03AA85C0659822C8C1887DF518641BE4148E7A46BA66D9E89DA16EFB63C7386F9D3D3C16EC6ABBE60B15BBD65D59EC7307187FCC04223E47F85A74C1EC5EFFC6
	E303CE8FB3DEDFBD0B76400B92E6637D5538FE956C1B82589C62B65EF88A47F99C510D3BC911E5A6C2C3366FD76521AE44CB919142AF862CF3063CBE28FAE54ED817AEBBB6FE3A8AE5A71BE2DD6AA5141D3F1757F5DB011FAC4021CBCCFE1D50A6DE623557F3A5A8E3DAFB0D88E342C4D9F89C6C4465EA2197E4B557A3B4EE52C2D56535558EBB5E398A7ADE40304A757170DEDEDB2D9CCDA419F73C9E37CECCD0199E125428BE8AEF6035D50A8B4F5C86E3D9AA1767BDD566785E908EAB8392CDAD3AAC062B4D7A
	E234C075CB508ECAEAD87300C3CDF039052B11DF4CBDBAD94F45DF696539B8B7ECF15683D243C8DF6BB8E462FDA24CF2C8A234F63A5F5FFA4B515F28E24BD8639555C1C58D087EE214EC19B02E15D15FAEEB2043E7703B047B404839DA462758529851B4A558BE4A26754D5D2C156E0645F1995D223DFF846C694312AE42EB6453FD3CC64E8EF33D5CFE301E7B51F7D6131A190336D8B56F4D7B5F30D5EACC9FBDDAD4AF535FF35AF7746E5A4DE261E35754F949DAB4B725E95766A9D67FDCF420ECB33439F55188
	25E7EAF36B22BF5B39AE1E05314E884F599F56204DEE047E96408E00E34C62BC8AE89E6336322B3A02ACD093F902D02A848539E3D6906435094B4E62165E3F5B1543639661B9619B3D8B555A9747E64B022DCBD9F05D0DF356B19B595F71DAECDFE596E3687FF1C72EFE561AB12E7FAB9F197DB2EDFF396D65B8FE39C5BFBBEBAC2A7FD2784D43F8EF6AC35EAB47BFFBAD42F47607DA0CC7EED86787CC83D68152G0F833247395E6ABE2CDDC8EF546ABB15A62039A16EB54D4DC9301E55FBCF5338D5B0E1F19E87
	B05ABDB624F5C2DF1E60754320037E1EB67AA15A4718497ABB6DF36B2479007BAC3E3EB860D84C990B2DC318EC1BEB62579767EAE257973E1A587545791A830C8EFB18FFD570713E1A796B0F211AD875479B74EECFEA2F129835C69B7C38506FFE10BC5A7B22BE670C26B41DB06478DB47B531897411266BA4A306EE18FD4AF5985F3741B81934B8738147815EC9EE17FF2DD9B01E1C190899CF185D7D074664906C17E06C79CCEDFCFDBCDF9BDB9F593518CF43CAC49D90674A5CFEBA5F980BFA05C79383A8BAB6
	E74FE9DC2F896A10F80D4E8E5275ECAC5E7A025371744A7412E3457ACE96A615088679E7926FDEE065F55CF268A783B2G5BA619AED8EC3BEB9C6351A07C00046DBAC262GF97CB22E4D3071354D506F86CCGD681B6DE6639774D3DA8ABA3EF9A7E1FC563E0611445D9B9457D7F399C2439215FED503A1DBCA6782738EE343A783A192A0B2D1B6B6AE27B4ACDF5737B4AD76B66176925BE0CC720169319D3486FCD341F8A5FACCFB6DB793B5A51E90B33E71A57F6A7AEE24CB57285D6A0AE57D9D572B78AC32DD4
	C3ACDFAC33666A6BD7CE737A6EDE3AE7BA7437813227F99E19F807671114F52BC9EB42391875DDE6E7396D5095265F2AAB51BC128CF9041D793C0D1F2941F84A95249D351BEBAC3CFB87208C4F2263DD3346D1E6A53346EF1EB50E7C1E321B476F1DB51EE3DA4F6E7660B1FE376C871309FCF7F55C5AB5CB3FD37ED556FA3B0E1023DF5A351B696BE5EAE301208801C29A38F8954FFE1B521E4039D7395D3E64C4BDEAE0C8C9D7711D77190F100B5C991C2FB81BE31CEB160D995BE1BD628D1D5FEC78BE23FF3333
	3E5EF7985A20B8DE9833FCAC560625F009AE07DA517C56FBFC4AEA33471103F7065D7F225E265DF4C40F43AD564F77FE597DB9575D3A68F52C76DCE6C3BBDFBE43EACF2BC17F9A252FB151192FEDB2FCAD994676A4701A74D5B746299074178112GE9002D001D89BC269C2BBFCE9648A11DCA2895020EEC8A936CFE3BEC1F6FDD777E5D5C26D36F3D1DECDC7A02B5DE5D3767BA7D5DDEEF37F79EB16547E48F5E2F8746A6GEBG290087G1957717B856ACB597D4E78A52DC1530401E17ACB0CDF2ECB924723E4
	8C724CB61F494136C8A952F9CE9CB75BDF55CB27E27E2627FE28731AFBFD547E589E8F7D573CC75E6A37EC56B8FB546BEBDB2F0F46294314AFC26BC77E47FC743DD6E24876F7FB38EC8B3EF59BE9FE6C856B11B8E7A468FBE7184E58BE122D7F56FD6BE30C8339B7F0B9161FFD9B5AAEE1C43790942722D2A982916B5E8EC89541A1EE7BABEC4470035BCC5FBF33AE2626DCAC5899CF7CDF4FE072F8539DBF979FF3474E456F3AE36762936E796B52EAF77CF731FA3779DD0C692E328DF3CA81682E8A50838881EE
	B4F479CBB76A92DF602F7507B37EA12C537055DDB35E44BD716F3A513370DB7D7D9EFC6F68D720948A607E1C7EF38F6ACBD3C21448E8699E1411AA8D8DEBEC2ACEFF4403F6AF0B03144C6E69EBC7DAA25CAB4D385BC04B3B735829D7D5C2222ACDB2AAFD3552E5566AA546D96BDB0E455B83A45482390AA528CEE1481079388FF363D660E3A72060C6286FGEE40C5008638993086108AC887E48232G39CB20368714826A1770FB282DA5735CC3AF182822D4C1C2D5F15B7B98EB5D306E0B0CD65396DFFFCDED8B
	6B2F350D3EE1015CBBA7C3FA4D6DEB43F314414130E858C9D7DB1EC173043DCAD842DADD9FEB5FE736F1A6FAFD5D05F634D7A9885385D93ACC1F4FD8B4E163DF764567FF056FB37CDB11AF367D2D75DDEBFF6BFC316DAF45E736BF5DAFFC68FBC3200BEEE35E8F8C5A27866DBE3AA7524ECBFEED58205FCF79C23ADB44838D3F20FC0DD3DAB7778B936DD31D76308FF5GD79ED6D43E76D7BE0C5B0312AC337EEF689CA988AAB164718465D18A89A63E3799B4641B7D3F000EF74EC31B72944951082DFDB42C127D
	462B21076E18B9D661327F7E8E3B0DB8BC4449A46CA18E94130764D0A9FA089DA4BC017F4286373556C36B24E0792AE4461C93F7AE490F1BD77DCB7537722551FC45FCEFEDB16AA6956899CB397F7C29683DF9FC38A3A04832A648238DC1BF7AF36324A6C6636D3AE25CBF4C676803EC6C5B45487708E94D7FGD0CB87882BBA2FAC508CGG20A1GGD0CB818294G94G88G88GA2F954AC2BBA2FAC508CGG20A1GG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586
	GGGG81G81GBAGGG8A8DGGGG
**end of data**/
}
}
