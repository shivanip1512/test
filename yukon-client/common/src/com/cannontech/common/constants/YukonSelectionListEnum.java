package com.cannontech.common.constants;

import static com.cannontech.common.constants.SelectionListCategory.*;
import static com.cannontech.common.constants.YukonSelectionListDefs.*;

import com.cannontech.common.i18n.DisplayableEnum;
import com.cannontech.common.util.DatabaseRepresentationSource;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableMap.Builder;

public enum YukonSelectionListEnum implements DisplayableEnum, DatabaseRepresentationSource {
	LM_CUSTOMER_EVENT(YUK_LIST_NAME_LM_CUSTOMER_EVENT, SYSTEM),
	LM_CUSTOMER_ACTION(YUK_LIST_NAME_LM_CUSTOMER_ACTION, SYSTEM),
	INVENTORY_CATEGORY(YUK_LIST_NAME_INVENTORY_CATEGORY, SYSTEM),
	DEVICE_VOLTAGE(YUK_LIST_NAME_DEVICE_VOLTAGE, HARDWARE),
	DEVICE_TYPE(YUK_LIST_NAME_DEVICE_TYPE, HARDWARE),
	DEVICE_STATUS(YUK_LIST_NAME_DEVICE_STATUS, HARDWARE),
	APPLIANCE_CATEGORY(YUK_LIST_NAME_APPLIANCE_CATEGORY, APPLIANCE),
	CALL_TYPE(YUK_LIST_NAME_CALL_TYPE, CALL_TRACKING),
	SERVICE_TYPE(YUK_LIST_NAME_SERVICE_TYPE, SERVICE_ORDER),
	SERVICE_STATUS(YUK_LIST_NAME_SERVICE_STATUS, SERVICE_ORDER),
	SEARCH_TYPE(YUK_LIST_NAME_SEARCH_TYPE, SYSTEM),
	MANUFACTURER(YUK_LIST_NAME_MANUFACTURER, APPLIANCE),
	APP_LOCATION(YUK_LIST_NAME_APP_LOCATION, APPLIANCE),
	DEVICE_LOCATION(YUK_LIST_NAME_DEVICE_LOCATION, null),
	CHANCE_OF_CONTROL(YUK_LIST_NAME_CHANCE_OF_CONTROL, CONTROL),
	TIME_OF_WEEK(YUK_LIST_NAME_TIME_OF_WEEK, THERMOSTAT),
	THERMOSTAT_MODE(YUK_LIST_NAME_THERMOSTAT_MODE, THERMOSTAT),
	THERMOSTAT_FAN_STATE(YUK_LIST_NAME_THERMOSTAT_FAN_STATE, THERMOSTAT),
	RESIDENCE_TYPE(YUK_LIST_NAME_RESIDENCE_TYPE, RESIDENCE),
	CONSTRUCTION_MATERIAL(YUK_LIST_NAME_CONSTRUCTION_MATERIAL, RESIDENCE),
	DECADE_BUILT(YUK_LIST_NAME_DECADE_BUILT, RESIDENCE),
	SQUARE_FEET(YUK_LIST_NAME_SQUARE_FEET, RESIDENCE),
	INSULATION_DEPTH(YUK_LIST_NAME_INSULATION_DEPTH, RESIDENCE),
	GENERAL_CONDITION(YUK_LIST_NAME_GENERAL_CONDITION, RESIDENCE),
	COOLING_SYSTEM(YUK_LIST_NAME_COOLING_SYSTEM, RESIDENCE),
	HEATING_SYSTEM(YUK_LIST_NAME_HEATING_SYSTEM, RESIDENCE),
	NUM_OF_OCCUPANTS(YUK_LIST_NAME_NUM_OF_OCCUPANTS, RESIDENCE),
	OWNERSHIP_TYPE(YUK_LIST_NAME_OWNERSHIP_TYPE, RESIDENCE),
	FUEL_TYPE(YUK_LIST_NAME_FUEL_TYPE, RESIDENCE),
	AC_TONNAGE(YUK_LIST_NAME_AC_TONNAGE, APPLIANCE_AIR_CONDITIONING),
	AC_TYPE(YUK_LIST_NAME_AC_TYPE, APPLIANCE_AIR_CONDITIONING),
	WH_NUM_OF_GALLONS(YUK_LIST_NAME_WH_NUM_OF_GALLONS, APPLIANCE_WATER_HEATER),
	WH_ENERGY_SOURCE(YUK_LIST_NAME_WH_ENERGY_SOURCE, APPLIANCE_WATER_HEATER),
	WH_LOCATION(YUK_LIST_NAME_WH_LOCATION, APPLIANCE_WATER_HEATER),
	DF_SWITCH_OVER_TYPE(YUK_LIST_NAME_DF_SWITCH_OVER_TYPE, APPLIANCE_DUEL_FUEL),
	DF_SECONDARY_SOURCE(YUK_LIST_NAME_DF_SECONDARY_SOURCE, APPLIANCE_DUEL_FUEL),
	GEN_TRANSFER_SWITCH_TYPE(YUK_LIST_NAME_GEN_TRANSFER_SWITCH_TYPE, APPLIANCE_GENERATOR),
	GEN_TRANSFER_SWITCH_MFG(YUK_LIST_NAME_GEN_TRANSFER_SWITCH_MFG, APPLIANCE_GENERATOR),
	GRAIN_DRYER_TYPE(YUK_LIST_NAME_GRAIN_DRYER_TYPE, APPLIANCE_GRAIN_DRYER),
	GD_BIN_SIZE(YUK_LIST_NAME_GD_BIN_SIZE, APPLIANCE_GRAIN_DRYER),
	GD_ENERGY_SOURCE(YUK_LIST_NAME_GD_ENERGY_SOURCE, APPLIANCE_GRAIN_DRYER),
	GD_HORSE_POWER(YUK_LIST_NAME_GD_HORSE_POWER, APPLIANCE_GRAIN_DRYER),
	GD_HEAT_SOURCE(YUK_LIST_NAME_GD_HEAT_SOURCE, APPLIANCE_GRAIN_DRYER),
	STORAGE_HEAT_TYPE(YUK_LIST_NAME_STORAGE_HEAT_TYPE, APPLIANCE_STORAGE_HEAT),
	HEAT_PUMP_TYPE(YUK_LIST_NAME_HEAT_PUMP_TYPE, APPLIANCE_HEAT_PUMP),
	HEAT_PUMP_SIZE(YUK_LIST_NAME_HEAT_PUMP_SIZE, APPLIANCE_HEAT_PUMP),
	HP_STANDBY_SOURCE(YUK_LIST_NAME_HP_STANDBY_SOURCE, APPLIANCE_HEAT_PUMP),
	IRRIGATION_TYPE(YUK_LIST_NAME_IRRIGATION_TYPE, APPLIANCE_IRRIGATION),
	IRR_HORSE_POWER(YUK_LIST_NAME_IRR_HORSE_POWER, APPLIANCE_IRRIGATION),
	IRR_ENERGY_SOURCE(YUK_LIST_NAME_IRR_ENERGY_SOURCE, APPLIANCE_IRRIGATION),
	IRR_SOIL_TYPE(YUK_LIST_NAME_IRR_SOIL_TYPE, APPLIANCE_IRRIGATION),
	IRR_METER_LOCATION(YUK_LIST_NAME_IRR_METER_LOCATION, APPLIANCE_IRRIGATION),
	IRR_METER_VOLTAGE(YUK_LIST_NAME_IRR_METER_VOLTAGE, APPLIANCE_IRRIGATION),
	INV_SEARCH_BY(YUK_LIST_NAME_INV_SEARCH_BY, HARDWARE),
	INV_SORT_BY(YUK_LIST_NAME_INV_SORT_BY, HARDWARE),
	INV_FILTER_BY(YUK_LIST_NAME_INV_FILTER_BY, HARDWARE),
	SO_SEARCH_BY(YUK_LIST_NAME_SO_SEARCH_BY, SERVICE_ORDER),
	SO_SORT_BY(YUK_LIST_NAME_SO_SORT_BY, SERVICE_ORDER),
	SO_FILTER_BY(YUK_LIST_NAME_SO_FILTER_BY, SERVICE_ORDER),
	RATE_SCHEDULE(YUK_LIST_NAME_RATE_SCHEDULE, ACCOUNT),
    CONSUMPTION_TYPE(YUK_LIST_NAME_CONSUMPTION_TYPE, null),
    EVENT_SYSTEM_CATEGORY(YUK_LIST_NAME_EVENT_SYSTEM_CATEGORY, SYSTEM),
    ACCOUNT_ACTION(YUK_LIST_NAME_ACCOUNT_ACTION, SYSTEM),
    INVENTORY_ACTION(YUK_LIST_NAME_INVENTORY_ACTION, null),
    WORKORDER_ACTION(YUK_LIST_NAME_WORKORDER_ACTION, null),
	SETTLEMENT_TYPE(YUK_LIST_NAME_SETTLEMENT_TYPE, SYSTEM),
	CI_CUST_TYPE(YUK_LIST_NAME_CI_CUST_TYPE, ACCOUNT);

    private final static String keyPrefix = "yukon.dr.selectionList.";
    private final static ImmutableMap<String, YukonSelectionListEnum> lookupByName;

    private final String listName;
    private final SelectionListCategory category;

    static {
        Builder<String, YukonSelectionListEnum> nameBuilder = ImmutableMap.builder();

        for (YukonSelectionListEnum list : values()) {
            nameBuilder.put(list.listName, list);
        }

        lookupByName = nameBuilder.build();
    }

    public static YukonSelectionListEnum getForName(String listName) {
        return lookupByName.get(listName);
    }

    private YukonSelectionListEnum(String listName, SelectionListCategory category) {
        this.listName = listName;
        this.category = category;
	}

	public String getListName() {
		return listName;
	}

    public SelectionListCategory getCategory() {
        return category;
    }

    @Override
    public String getFormatKey() {
        return keyPrefix + name();
    }

    @Override
    public Object getDatabaseRepresentation() {
        return listName;
    }
}
