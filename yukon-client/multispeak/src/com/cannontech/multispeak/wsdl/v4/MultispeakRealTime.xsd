<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.multispeak.org/Version_4.1_Release" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.multispeak.org/Version_4.1_Release" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<!-- -->
	<!--MultiSpeak Version 4.1.5 Release (Version = "V4.1.5 Release") Deprecated Messaging Schema.  Release dated: March 1, 2012 Cooperative Energy  -->
	<!--Services (CES) reserves exclusive discretion to determine the content and definition of MultiSpeak®,a federally registered trademark of NRECA. -->
	<!--Copyright © 2000-2012 CES. -->
	<!-- -->
	<!--Disclaimer: Modifications of this document have been made, and will be made, on the -->
	<!--basis of consensus among the participants of the MultiSpeak Initiative. Cornice -->
	<!--Engineering, Inc. (Cornice) hereby prepared this document to reflect the input provided by the -->
	<!--participants as of the date listed above.  This work is being completed under contract to -->
	<!--the Cooperative Research Network (CRN) of the National Rural Electric Cooperative Association-->
	<!--(NRECA).  Neither Cornice nor NRECA (i) makes any representation or warranty, express -->
	<!--or implied, as to the suitability of this information for any purpose whatsoever, or (ii) assumes-->
	<!--any responsibility for damages or other liability whatsoever. -->
	<!-- -->
	<!-- -->
	<xsd:include schemaLocation="MultiSpeak_V416_Release.xsd"/>
	<xsd:element name="MultiSpeakMessageHeader" type="MultiSpeakMessageHeader"/>
	<xsd:element name="Nouns" type="Nouns">
		<xsd:annotation>
			<xsd:documentation>Any MultiSpeak noun can be inserted into this list.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="Nouns">
		<xsd:sequence>
			<xsd:element name="Noun" type="Noun" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Criteria">
		<xsd:attribute name="fieldName" type="xsd:string" use="required"/>
		<xsd:attribute name="operator" type="operator" use="required"/>
		<xsd:attribute name="fieldValue" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:simpleType name="operator">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="equalTo"/>
			<xsd:enumeration value="notEqualTo"/>
			<xsd:enumeration value="greaterThan"/>
			<xsd:enumeration value="lessThan"/>
			<xsd:enumeration value="greaterThanOrEqual"/>
			<xsd:enumeration value="lessThanOrEqual"/>
			<xsd:enumeration value="like"/>
			<xsd:enumeration value="startsLike"/>
			<xsd:enumeration value="endsLike"/>
			<xsd:enumeration value="isNull"/>
			<xsd:enumeration value="isNotNull"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- Defined in the multispeak schema 
	<xsd:element name="MultiSpeak" type="MultiSpeak">
		<xsd:annotation>
			<xsd:documentation>All of the current multispeak entities will be under here</xsd:documentation>
		</xsd:annotation>
	</xsd:element > -->
	<!-- don't need a global element unless we are going to use substitution groups 
	<xsd:element name="SupportedVersion" type="xsd:string"/> -->
	<xsd:complexType name="Request">
		<xsd:sequence>
			<xsd:element name="SubscriberUrl" type="xsd:anyURI"/>
			<xsd:element name="PublisherUrl" type="xsd:anyURI"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="Request" type="Request" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Request message type.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="SubscriptionIDRequest" type="SubscriptionIDRequest" substitutionGroup="Request">
		<xsd:annotation>
			<xsd:documentation>This message is sent from the subscriber to the publisher requesting a new subscription ID.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="SubscriptionIDRequest">
		<xsd:complexContent>
			<xsd:extension base="Request"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="SubscriptionIDResponse" type="SubscriptionIDResponse" substitutionGroup="Response">
		<xsd:annotation>
			<xsd:documentation>This message is sent from the publisher to the subscriber in response to a SubscriptionIDRequest message to issue a new subscription ID.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="SubscriptionIDResponse">
		<xsd:complexContent>
			<xsd:extension base="Response"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="PublisherServicesRequest">
		<xsd:complexContent>
			<xsd:extension base="Request"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="PublisherServicesRequest" type="PublisherServicesRequest" substitutionGroup="Request">
		<xsd:annotation>
			<xsd:documentation>This message is sent by a potential subscriber to the publisher to discover the MultiSpeak versions, functions and nouns supported by the publisher.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="SubscribeRequest">
		<xsd:complexContent>
			<xsd:extension base="Request"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="SubscribeRequest" type="SubscribeRequest" substitutionGroup="Request">
		<xsd:annotation>
			<xsd:documentation>This message is sent from the subscriber to the publisher to request the establishment of a subscription</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="GetRequest">
		<xsd:complexContent>
			<xsd:extension base="Request"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="Get" type="GetRequest" substitutionGroup="Request">
		<xsd:annotation>
			<xsd:documentation>Message sent by the client  to request data from its owner (the server).</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="UnSubscriptionRequest">
		<xsd:complexContent>
			<xsd:extension base="Request"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="UnSubscribeRequest" type="UnSubscriptionRequest" substitutionGroup="Request">
		<xsd:annotation>
			<xsd:documentation>This message is sent from the subscriber to the publisher to request the revokation of a subscription.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ModifyRequest">
		<xsd:complexContent>
			<xsd:extension base="Request"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="ModifyRequest" type="ModifyRequest" substitutionGroup="Request">
		<xsd:annotation>
			<xsd:documentation>Message sent from the subscriber to the publisher to request a change in data objects at the server</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="Response">
		<xsd:sequence>
			<xsd:element name="SubscriberUrl" type="xsd:anyURI"/>
			<xsd:element name="PublisherUrl" type="xsd:anyURI"/>
		</xsd:sequence>
		<xsd:attribute name="Status" type="Status" use="required"/>
		<xsd:attribute name="StatusString" type="xsd:string" use="optional"/>
		<xsd:attribute name="ReceivedDocumentID" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:simpleType name="Status">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="statusOk"/>
			<xsd:enumeration value="statusError"/>
			<xsd:enumeration value="statusDenied"/>
			<xsd:enumeration value="statusOkWithErrors"/>
			<xsd:enumeration value="statusReceived"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="Response" type="Response" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Response message type.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="SupportedNouns">
		<xsd:sequence>
			<xsd:element name="SupportedNoun" type="xsd:string" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SupportedFunctions">
		<xsd:sequence>
			<xsd:element name="SupportedFunction" type="xsd:string" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PublisherServicesResponse">
		<xsd:complexContent>
			<xsd:extension base="Response"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SupportedVersionList">
		<xsd:sequence>
			<xsd:element name="SupportedVersion" type="SupportedVersion" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>MultiSpeak version supported by the publishing application</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="SupportedVersion">
		<xsd:sequence>
			<xsd:element name="SupportedNouns" type="SupportedNouns">
				<xsd:annotation>
					<xsd:documentation>List of nouns supported by this version of the publishing applications.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="SupportedFunctions" type="SupportedFunctions">
				<xsd:annotation>
					<xsd:documentation>List of functions supported by this version of the publishing application.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="Version" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:element name="PublisherServicesResponse" type="PublisherServicesResponse" substitutionGroup="Response">
		<xsd:annotation>
			<xsd:documentation>This message is sent from the publisher to a potential subscriber in reponse to a discovery request.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="PublishedData">
		<xsd:complexContent>
			<xsd:extension base="Request"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="PublishedData" type="PublishedData" substitutionGroup="Request">
		<xsd:annotation>
			<xsd:documentation>This message sends data from the publisher to the subscriber to fulfill a subscription.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="GetResponse">
		<xsd:complexContent>
			<xsd:extension base="Response">
				<xsd:sequence>
					<xsd:element name="MultiSpeak" type="MultiSpeak"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="Show" type="Show" substitutionGroup="Response">
		<xsd:annotation>
			<xsd:documentation>This message is used to send data to the client after the server recieves a Get command.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="Show">
		<xsd:complexContent>
			<xsd:extension base="GetResponse"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="UnSubscribeAckType">
		<xsd:complexContent>
			<xsd:extension base="Ack">
				<xsd:attribute name="SubscriptionID" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="UnSubscribeAck" type="UnSubscribeAckType" substitutionGroup="Ack">
		<xsd:annotation>
			<xsd:documentation>Message sent by the publisher to the subscriber to acknowledge an unsubscribe request message.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="UnsubscribeNotice">
		<xsd:sequence>
			<xsd:element name="SubscriberUrl" type="xsd:anyURI"/>
			<xsd:element name="PublisherUrl" type="xsd:anyURI"/>
		</xsd:sequence>
		<xsd:attribute name="SubscriptionID" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="ModifyResponse">
		<xsd:complexContent>
			<xsd:extension base="Response">
				<xsd:sequence>
					<xsd:element name="MultiSpeak" type="MultiSpeak" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="ModifyResponse" type="ModifyResponse" substitutionGroup="Response">
		<xsd:annotation>
			<xsd:documentation>This response is sent from the publisher to the subscribing application in response to a modify request.  </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="SubscribeAck">
		<xsd:complexContent>
			<xsd:extension base="Ack">
				<xsd:attribute name="SubscriptionID" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="SubscribeAck" type="SubscribeAck" substitutionGroup="Ack">
		<xsd:annotation>
			<xsd:documentation>This message is sent by the publisher to the subscriber to acknowledge the receipt and acceptance of a subscription message.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="MultiSpeakMessageHeader">
		<xsd:sequence>
			<xsd:element name="TimeStamp" type="xsd:dateTime" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Time that the message is sent.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="DocumentID" type="xsd:string" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Unique identifer for this message.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="VendorApp" type="VendorApp" nillable="false">
				<xsd:annotation>
					<xsd:documentation>Application sending message.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="Response" type="Response"/>
				<xsd:element name="Request" type="Request"/>
				<xsd:element name="UnsubscribeNotice" type="UnsubscribeNotice">
					<xsd:annotation>
						<xsd:documentation>This message is an unsolicited message sent by the publisher to the subscriber indicating that its subscription is about to be unilaterally dropped.  The purpose of this message is to drop ill-behaved applications or to permit orderly shutdown</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="SubscriptionPing" type="SubscriptionPing">
					<xsd:annotation>
						<xsd:documentation>This message is used by the subscriber to "ping" the publisher or by the subscriber to ping the publisher to determine the status of a subscription.  Also called a "heartbeat" message.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Ack" type="Ack"/>
				<xsd:element name="Batch" type="Batch"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="Version" type="xsd:string" use="required"/>
		<xsd:attribute name="Username" type="xsd:string"/>
		<xsd:attribute name="Password" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="Batch">
		<xsd:sequence>
			<xsd:element name="MultiSpeak" type="MultiSpeak" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="VendorApp">
		<xsd:sequence>
			<xsd:element name="AppName" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Name of application sending message.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="AppVersion" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Version of software application sending message.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Company" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Company that devekoped the sending software application.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Function" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>The MultiSpeak function sending the message.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="SubscriptionStatus">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Active"/>
			<xsd:enumeration value="Unsubscribed"/>
			<xsd:enumeration value=""/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="SubscriptionPing">
		<xsd:sequence>
			<xsd:element name="SubscriberUrl" type="xsd:anyURI"/>
			<xsd:element name="PublisherUrl" type="xsd:anyURI"/>
		</xsd:sequence>
		<xsd:attribute name="SubscriptionID" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="PingAck">
		<xsd:complexContent>
			<xsd:extension base="Ack">
				<xsd:attribute name="SubscriptionID" type="xsd:string" use="required"/>
				<xsd:attribute name="SubscriptionStatus" type="SubscriptionStatus" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="SubscriptionPingAck" type="PingAck" substitutionGroup="Ack">
		<xsd:annotation>
			<xsd:documentation>This message is sent by the publisher to the subscriber or by the subscriber to the publisher to acknowledge the receipt of the ping (heartbeat) message and to indicate the status of the associateed subscription</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PublishAck" type="PublishAck" substitutionGroup="Ack">
		<xsd:annotation>
			<xsd:documentation>This message is sent by the subscriber to the publisher to acknowldege recept of data delivered under an active subscription.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="PublishAck">
		<xsd:complexContent>
			<xsd:extension base="Ack">
				<xsd:attribute name="SubscriptionID" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Ack">
		<xsd:complexContent>
			<xsd:extension base="Response"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="Ack" type="Ack" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Acknowledgement message type.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="Noun">
		<xsd:sequence>
			<xsd:element name="Criteria" type="Criteria" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="Name" type="xsd:string" use="required"/>
		<xsd:attribute name="ReturnChildren" type="xsd:boolean" use="optional" default="true"/>
	</xsd:complexType>
	<xsd:element name="MessageConfirmation" type="MessageConfirmation" substitutionGroup="Request">
		<xsd:annotation>
			<xsd:documentation>This message is sent when required by a publisher (using the ConfirmationRequired flag in a PublishedData message).  If all data items were committed without error, the messageConfirmation status attribute shall be set to "StatusOK", if there are any errors, one dataInstance shall be sent for each data item that was not committed properly.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="MessageConfirmation">
		<xsd:annotation>
			<xsd:documentation>This message is sent when required by a publisher (using the ConfirmationRequired flag in a PublishedData message).  If all data items were committed without error, the messageConfirmation status attribute shall be set to "StatusOK", if there are any error, one dataInstance shall be sent for each data item that was not committed properly.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Request">
				<xsd:sequence>
					<xsd:element name="DataInstanceList" type="DataInstanceList" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="Status" type="Status" use="required"/>
				<xsd:attribute name="StatusString" type="xsd:string" use="optional"/>
				<xsd:attribute name="ReceivedDocumentID" type="xsd:string" use="required"/>
				<xsd:attribute name="SubscriptionID" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="DataInstanceList">
		<xsd:sequence>
			<xsd:element name="DataInstance" type="DataInstance" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="DataInstance" type="DataInstance">
		<xsd:annotation>
			<xsd:documentation>This is a piece of data carried in the MultiSpeak element of a PublishedData message.  It is assumed that a DataInstance is passed in a MessageConfirmation message, only when it is necessary to report that the data was not committed in the subscribers database.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="DataInstance">
		<xsd:annotation>
			<xsd:documentation>This is a piece of data carried in the MultiSpeak element of a PublishedData message.  It is assumed that a DataInstance is passed in a MessageConfirmation message, only when it is necessary to report that the data was not committed in the subscribers database.</xsd:documentation>
		</xsd:annotation>
		<xsd:all>
			<xsd:element name="NounType" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>This is a string containing the name of the noun type.  For instance, for pole nouns, the NounType would be 'Pole". </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ObjectID" type="objectID">
				<xsd:annotation>
					<xsd:documentation>This is the objectID of the Noun. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Status" type="xsd:anySimpleType">
				<xsd:annotation>
					<xsd:documentation>Status of the instance of the noun data identified by the NounType and ObjectID. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="StatusString" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>String describing the status of the data (why the data was not comitted by the subscriber).</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:element name="MessageConfirmationAck" type="MessageConfirmationAck" substitutionGroup="Ack">
		<xsd:annotation>
			<xsd:documentation>This message is sent to acknowledge receipt of a MessageConfirmation.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="MessageConfirmationAck">
		<xsd:complexContent>
			<xsd:extension base="Ack">
				<xsd:attribute name="SubscriptionID" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
