<?xml version="1.0" encoding="ISO-8859-1"?>
<xs:schema targetNamespace="http://www.multispeak.org/Version_4.1_Release" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.multispeak.org/Version_4.1_Release" xmlns:msp="http://www.multispeak.org/Version_4.1_Release" xmlns:gml="gml_V4.1_Release" xmlns:cpsm="cpsm_V4.1_Release" elementFormDefault="qualified">
	<xs:import namespace="cpsm_V4.1_Release" schemaLocation="mspCPSM_V41_Release.xsd"/>
	<xs:import namespace="gml_V4.1_Release" schemaLocation="mspGeometry_V41_Release.xsd"/>

<!-- -->
<!-- -->
<!--MultiSpeak Version 4.1.6 Release (Version = "V4.1.6 Release")  Release dated: August 31, 2012 Cooperative Energy Services (CES) reserves exclusive discretion to determine    -->
<!--the content and definition of MultiSpeak®, a federally registered trademark of NRECA. Copyright © 2000-2012 CES. -->
<!-- -->
<!--Disclaimer: Modifications of this document have been made, and will be made, on the -->
<!--basis of consensus among the participants of the MultiSpeak Initiative. Cornice -->
<!--Engineering, Inc. (Cornice) hereby prepared this document to reflect the input provided by the -->
<!--participants as of the date listed above.  This work is being completed under contract to -->
<!--the National Rural Electric Cooperative Association (NRECA).-->
<!--Neither Cornice nor NRECA (i) makes any representation or warranty, express -->
<!--or implied, as to the suitability of this information for any purpose whatsoever, or (ii) assumes-->
<!--any responsibility for damages or other liability whatsoever. -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--MultiSpeak Version 4.1.6 Release (Version = "V4.1.6 Release")  Release dated: August 31, 2012 Cooperative Energy Services (CES) reserves exclusive discretion to determine    -->
<!--the content and definition of MultiSpeakï¿½, a federally registered trademark of NRECA. Copyright ï¿½ 2000-2012 CES. -->
<!-- -->
<!--Disclaimer: Modifications of this document have been made, and will be made, on the -->
<!--basis of consensus among the participants of the MultiSpeak Initiative. Cornice -->
<!--Engineering, Inc. (Cornice) hereby prepared this document to reflect the input provided by the -->
<!--participants as of the date listed above.  This work is being completed under contract to -->
<!--the National Rural Electric Cooperative Association (NRECA).-->
<!--Neither Cornice nor NRECA (i) makes any representation or warranty, express -->
<!--or implied, as to the suitability of this information for any purpose whatsoever, or (ii) assumes-->
<!--any responsibility for damages or other liability whatsoever. -->
<!-- -->
<!-- -->	<xs:element name="cut" type="cut"/>
	<xs:complexType name="cut">
		<xs:annotation>
			<xs:documentation>This is an intentional separation in a primary distribution line that is typically used to sectionalize the line to partially restore an outage or as part of a switching procedure.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspSwitchingDevice">
				<xs:sequence>
					<xs:element name="lineSectionAffected" type="eaLoc" minOccurs="0" maxOccurs="1"/>
					<xs:element name="actionTaken" type="cutAction" minOccurs="0" maxOccurs="1"/>
					<xs:element name="timeOfAction" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="eaLoc" type="eaLoc"/>
	<xs:complexType name="eaLoc">
		<xs:annotation>
			<xs:documentation>Reference to an instance of an object.  When used to describe an engineering line section, this object must contain a section name and may also contain a noun/objectID pair that will uniquely identify the MultiSpeak noun (element) and instance of that noun that is contained in the named section.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="objectRef">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="cutAction">
		<xs:restriction base="xs:string">
			<xs:enumeration value="InitiateCut"/>
			<xs:enumeration value="RestoreCut"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="mspOverCurrentDevice" type="mspOverCurrentDevice"/>
	<xs:complexType name="mspOverCurrentDevice" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspSwitchingDevice">
				<xs:sequence>
					<xs:element name="bypassExists" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Bypass switch exists at this location?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lastService" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last service.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="breaker" type="breaker"/>
	<xs:complexType name="breaker">
		<xs:complexContent>
			<xs:extension base="mspOverCurrentDevice">
				<xs:sequence>
					<xs:element name="phaseTripRating" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This value is not used in MultiSpeak, but is included for CIM compatibility. In MultiSpeak this value is specified by reference to a breakerEntry.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="breakerImpedances" type="breakerImpedances" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="recloser" type="recloser"/>
	<xs:complexType name="recloser">
		<xs:complexContent>
			<xs:extension base="mspOverCurrentDevice">
				<xs:sequence>
					<xs:element name="phaseTripRating" type="current" minOccurs="0" maxOccurs="1"/>
					<xs:element name="groundTripRating" type="current" minOccurs="0" maxOccurs="1"/>
					<xs:element name="groundTripNormalEnabled" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Normal status of ground trip (true = enabled).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="recloserImpedances" type="recloserImpedances" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="switchingDevice" type="switchingDevice"/>
	<xs:complexType name="switchingDevice">
		<xs:choice>
			<xs:element name="breaker" type="breaker" minOccurs="1" maxOccurs="1"/>
			<xs:element name="recloser" type="recloser" minOccurs="1" maxOccurs="1"/>
			<xs:element name="fuse" type="fuse" minOccurs="1" maxOccurs="1"/>
			<xs:element name="sectionalizer" type="sectionalizer" minOccurs="1" maxOccurs="1"/>
			<xs:element name="switch" type="switch" minOccurs="1" maxOccurs="1"/>
			<xs:element name="elbow" type="elbow" minOccurs="1" maxOccurs="1"/>
			<xs:element name="jumper" type="jumper" minOccurs="1" maxOccurs="1"/>
			<xs:element name="cut" type="cut" minOccurs="1" maxOccurs="1"/>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
		</xs:choice>
	</xs:complexType>
	<xs:element name="overcurrentDevice" type="overcurrentDevice"/>
	<xs:complexType name="overcurrentDevice">
		<xs:choice>
			<xs:element name="breaker" type="breaker" minOccurs="1" maxOccurs="1"/>
			<xs:element name="recloser" type="recloser" minOccurs="1" maxOccurs="1"/>
			<xs:element name="fuse" type="fuse" minOccurs="1" maxOccurs="1"/>
			<xs:element name="sectionalizer" type="sectionalizer" minOccurs="1" maxOccurs="1"/>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
		</xs:choice>
	</xs:complexType>
	<xs:element name="jumper" type="jumper"/>
	<xs:complexType name="jumper">
		<xs:annotation>
			<xs:documentation>This is a specialization of a switch to model a jumper used on an overhead primary distribution line.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspSwitchingDevice">
				<xs:sequence>
					<xs:element name="dateInstalled" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The time that the jumper was installed.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="fuse" type="fuse"/>
	<xs:complexType name="fuse">
		<xs:annotation>
			<xs:documentation>A fuse.  The object ID is a unique identifier for the fuse.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspOverCurrentDevice">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="sectionalizer" type="sectionalizer"/>
	<xs:complexType name="sectionalizer">
		<xs:complexContent>
			<xs:extension base="mspOverCurrentDevice">
				<xs:sequence>
					<xs:element name="counts" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of times the sectionalizer counts current interruption prior to opening.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sectionalizerImpedances" type="sectionalizerImpedances" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>These values are not used in MultiSpeak, but are included for CIM compatibility.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="overcurrentDeviceBank" type="overcurrentDeviceBank"/>
	<xs:complexType name="overcurrentDeviceBank">
		<xs:complexContent>
			<xs:extension base="mspSwitchingBank">
				<xs:sequence>
					<xs:element name="overcurrentDeviceList" type="overcurrentDeviceList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="switchingDeviceBank" type="switchingDeviceBank"/>
	<xs:complexType name="switchingDeviceBank">
		<xs:complexContent>
			<xs:extension base="mspSwitchingBank">
				<xs:sequence>
					<xs:element name="switchingDeviceList" type="switchingDeviceList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="mspResultsBase" type="mspResultsBase"/>
	<xs:complexType name="mspResultsBase" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="resultsType" type="resultsType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of analysis for which results are given (load flow,  short circuit, other )</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="source" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier for source of power feed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feeder" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier for feeder for which these results are given.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eaLoc" type="eaLoc" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Section identification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="parentID" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Parent section identification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phasing code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="loadCon" type="loadConnection" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Load connection 
(W for wye; D for delta).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="equipRef" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of equipment on this section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="distanceFromSource" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Distance from source.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sectionLength" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Length of section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="baseVoltageA" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Base voltage,  on user-designated base (120V, per unit, percent, kV) phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="baseVoltageB" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Base voltage,  on user-designated base (120V, per unit, percent, kV) phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="baseVoltageC" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Base voltage,  on user-designated base (120V, per unit, percent, kV) phase C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="baseVoltageBalanced" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Base voltage,  on user-designated base (120V, per unit, percent, kV) Balanced.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="basePower" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Base power,  on user-designated base (kVA, MVA, Per Unit, etc.).</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="resultsType">
		<xs:annotation>
			<xs:documentation>Type of analysis for which results are given (load flow,  short circuit, other )</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="loadFlow"/>
			<xs:enumeration value="shortCircuit"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="loadConnection">
		<xs:annotation>
			<xs:documentation>Load connection 
(W for wye; D for delta).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="W"/>
			<xs:enumeration value="D"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="loadFlowResult" type="loadFlowResult"/>
	<xs:complexType name="loadFlowResult">
		<xs:complexContent>
			<xs:extension base="mspResultsBase">
				<xs:sequence>
					<xs:element name="priKvA" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Primary voltage, Phase A, on user-defined base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priKvB" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Primary voltage, Phase B, on user-defined base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priKvC" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Primary voltage, Phase C, on user-defined base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priKvBal" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Primary voltage, balanced, on user-defined base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sectionDropA" type="sectionDrop" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Section voltage drop. on user-defined base| phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sectionDropB" type="sectionDrop" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Section voltage drop. on user-defined base| phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sectionDropC" type="sectionDrop" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Section voltage drop. on user-defined base| phase C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sectionDropBal" type="sectionDrop" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Section voltage drop. on user-defined base, balanced</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cumulativeDropA" type="cumulativeDrop" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Cumulative voltage drop, on user-defined base, Phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cumulativeDropB" type="cumulativeDrop" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Cumulative voltage drop, on user-defined base, Phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cumulativeDropC" type="cumulativeDrop" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Cumulative voltage drop, on user-defined base, Phase C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cumulativeDropBal" type="cumulativeDrop" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Cumulative voltage drop, on user-defined base, balanced.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruCurrentA" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Current through this section, Phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruCurrentB" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Current through this section, Phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruCurrentC" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Current through this section, Phase C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruCurrentBal" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Current through this section, balanced.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pctCapA" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent capacity.  phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pctCapB" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent capacity, phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pctCapC" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent capacity, phase C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pctCapBal" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent capacity, balanced.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruPowerA" type="realPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Through power, phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruPowerB" type="realPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Through power, phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruPowerC" type="realPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Through power, phase C</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruPowerBal" type="realPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Through power, balanced.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruReactiveA" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Through reactive load, phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruReactiveB" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Through reactive load, phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruReactiveC" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Through reactive load, phase C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thruReactiveBal" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Through reactive load, balanced.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pctPfA" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent power factor, phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pctPfB" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent power factor.  phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pctPfC" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent power factor.  phase C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pctPfBal" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent power factor, balanced.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pctLoss" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent loss.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sectPowerA" type="realPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Real power load on section, phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sectPowerB" type="realPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Real power load on section, phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sectPowerC" type="realPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Real power load on section, phase C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sectPowerBal" type="realPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Real power load on section,balanced.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="secReactiveA" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reactive power load on section, phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="secReactiveB" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reactive power load on section.  phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="secReactiveC" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reactive power load on section.  phase C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="secReactiveBal" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reactive power load on section. balanced.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="consOnA" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of consumers on phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="consOnB" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of consumers on phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="consOnC" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of consumers on phase C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="consOnBal" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of consumers on all phases.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="consThruA" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of consumers through phase A.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="consThruB" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of consumers through phase B.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="consThruC" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of consumers through phase C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="consThruBal" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of consumers through on all phases.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="baseVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Calculated base voltage.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="shortCircuitAnalysisResult" type="shortCircuitAnalysisResult"/>
	<xs:complexType name="shortCircuitAnalysisResult">
		<xs:complexContent>
			<xs:extension base="mspResultsBase">
				<xs:sequence>
					<xs:element name="faultImpedance" type="complexImpedance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Fault impedance.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="minimumLGFault" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Minimum line-ground fault.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maximumLGFault" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Maximum l-g fault.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maximumLLFault" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Maximum l-l fault.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maximumLLGFault" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Maximum l-l-g fault.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maximumLLLGFault" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Maximum three phase to ground fault.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="positiveSequenceZ" type="impedance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Positive sequence impedance.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="negativeSequenceZ" type="impedance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Negative sequence impedance.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="zeroSequenceZ" type="impedance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Zero sequence impedance.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="mspDevice" type="mspDevice"/>
	<xs:complexType name="mspDevice" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="deviceClass" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A high-level description of this type of object (e.g., "meter", "communication", "connect/disconnect", "demand response"etc.).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="inServiceDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The date and time that a device was placed into active service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outServiceDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The date and time that a device was removed from active service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="facilityID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A utility-defined string designation for this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="manufacturer" type="manufacturer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The manuafacturer of this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serialNumber" type="serialNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Serial number for this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="CDDevice" type="CDDevice"/>
	<xs:complexType name="CDDevice">
		<xs:annotation>
			<xs:documentation>This is a connect/disconnect device.  When installed, it is usually associated with a meter base at a customer service location.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspDevice">
				<xs:sequence>
					<xs:element name="meterBaseID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID of the meterBase at which this CDDevice is installed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated voltage of the load disconnect device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedCurrent" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated current of the connect/disconnect device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="moduleList" type="moduleList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="AMRVendor" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="AMRDeviceType" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="module" type="module"/>
	<xs:complexType name="module">
		<xs:annotation>
			<xs:documentation>This is an add-on module or board for a meter or other device.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspDevice">
				<xs:sequence>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A desciption of this module.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="moduleType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a string identifier for a type of module.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="firmwareVersion" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The version of the firmware for this module.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="moduleList" type="moduleList"/>
	<xs:complexType name="moduleList">
		<xs:sequence>
			<xs:element name="module" type="module" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="mspDeviceExchange" type="mspDeviceExchange"/>
	<xs:complexType name="mspDeviceExchange" abstract="true">
		<xs:annotation>
			<xs:documentation>This is an abstract class that addresses the exchange of one pice of equipment of a type for another piece of equipment of the same type.The objectID of this object is the objectID of the device being added; the replaceID attribute carries the objectID of the device being replaced.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Thisis the objectID for the customer service location at which the device exchange is taking place</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceID" type="serviceID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a reference for a customer service.  A service is located at a customer service location and applies to a specific service type (electric, gas, water, etc.).  Services may be of different classes, for instance electricService, waterService, gasService, etc.).  Hence to completely identify a service, it is necessary to know the type of service and the objectID of that type of service.  The serviceID should include the concatenated string consisting of serviceType.objectID.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterBaseID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The objectID of a meter base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="serviceID" type="serviceID"/>
	<xs:complexType name="serviceID">
		<xs:annotation>
			<xs:documentation>This is a reference for a customer service.  A service is located at a customer service location and applies to a specific service type (electric, gas, water, etc.).  Services may be of different classes, for instance electricService, waterService, gasService, etc.).  Hence to completely identify a service, it is necessary to know the type of service and the objectID of that type of service. The serviceID should include the concatenated string consisting of serviceType.objectID.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="serviceType" use="optional" type="serviceType">
					<xs:annotation>
						<xs:documentation>Service type is an enumeration that describes the class of utility service (electric, gas, water, etc.).</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="objectID" use="required" type="objectID">
					<xs:annotation>
						<xs:documentation>This is the objectID of the sevice for this type of utility service (electricService, gasService, waterService, etc.)</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="CDDeviceExchange" type="CDDeviceExchange"/>
	<xs:complexType name="CDDeviceExchange">
		<xs:annotation>
			<xs:documentation>This object facilitates the exchange of connect/disconnect devices at a customer service.  The objectID of this object is the objectID of the device being added; the replaceID attribute carries the objectID of the device being replaced.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspDeviceExchange">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="inHomeDisplayExchange" type="inHomeDisplayExchange"/>
	<xs:complexType name="inHomeDisplayExchange">
		<xs:annotation>
			<xs:documentation>This object facilitates the exchange of in-home dispalys at a customer service. The objectID of this object is the objectID of the device being added; the replaceID attribute carries the objectID of the device being replaced.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspDeviceExchange">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="LMDeviceExchange" type="LMDeviceExchange"/>
	<xs:complexType name="LMDeviceExchange">
		<xs:annotation>
			<xs:documentation>This object facilitates the exchange of loadManagementDevices at a customer service. The objectID of this object is the objectID of the device being added; the replaceID attribute carries the objectID of the device being replaced.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspDeviceExchange">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="mspPolygonObject" type="mspPolygonObject"/>
	<xs:complexType name="mspPolygonObject" abstract="true">
		<xs:annotation>
			<xs:documentation>This is an abstract class from which all objects inherit that have polygon geometry.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="GMLPolygon" type="GMLPolygon" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GMLPolygon" type="GMLPolygon"/>
	<xs:complexType name="GMLPolygon">
		<xs:annotation>
			<xs:documentation>This is a polygon geometry that is built using GML classes. Note that the lines that make up a polygon should be closed.  If the line is intended to be a closed line, then the first and last coordiantes must be identical.  If the first and last coordinates are not identical, then the line is assumed not to be closed.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="gml:PolygonType">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="mspMultiGeometryObject" type="mspMultiGeometryObject"/>
	<xs:complexType name="mspMultiGeometryObject" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="geometry" type="geometry" minOccurs="0" maxOccurs="1"/>
					<xs:element name="gridLocation" type="gridLocation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a utility-assigned location identifier that may or may not be tied to any GIS coordinate system.  Sometimes referred to by the utility as "map number" or "grid number".</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rotation" type="rotation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rotation angle for  the physical feature, expressed in degrees measured clockwisel.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="facilityID" type="facilityID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Utility string designation for this object.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:group ref="connectivityModelGroup" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="geometry" type="geometry"/>
	<xs:complexType name="geometry">
		<xs:sequence>
			<xs:element name="GMLLocation" type="GMLLocation" minOccurs="0" maxOccurs="1"/>
			<xs:element name="GMLLines" type="GMLLines" minOccurs="0" maxOccurs="1"/>
			<xs:element name="GMLPolygons" type="GMLPolygons" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="GMLLocation" type="GMLLocation"/>
	<xs:complexType name="GMLLocation">
		<xs:annotation>
			<xs:documentation>This is a geographical x,y, (z) location, referenced to a specific geographical coordinate system and datum.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="gml:PointType">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="electricNameplate" type="electricNameplate"/>
	<xs:complexType name="electricNameplate">
		<xs:sequence>
			<xs:element name="kh" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Meter kh (watthour) constant. This constant is the number of watthours that must be applied to the meter to cause one disk revolution for an electromechanical meter or the number of watthours represented by one increment pulse for an elctronice meter. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="kr" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Watthour meter register constant.  The multiplier used to convert the register reading to kilowatthours (or other suitable units).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="frequency" type="frequency" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The power frequency rating of the electricity meter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="numberOfElements" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The number of commodity measuring elements per measuring input to the end device.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="baseType" type="baseType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of meter base.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accuracyClass" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The ANSI C12.20 meter standard accuracy class definitions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="elementsVoltage" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Meter element voltage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="supplyVoltage" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Meter supply voltage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="maxAmperage" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The maximum of the meter load range in amperes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="testAmperage" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>THE RMS amperage testamps specified by the manufactures for the main test and/or adjustment of the meter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="regRatio" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Register ratio.  The number of revolutions of the gear meshing with the worm or pinion on the rotation element for one revolution of the dial pointer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="phases" type="xs:long" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The number of phases metered by this device.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="wires" type="xs:long" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The number of wires metered by this device.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="dials" type="xs:long" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The number of dials on the meter register for an electromechanical meter; for an electronic meter, the number of digits on the meter display.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="form" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Meter form designation per ANSI C12.10.  An alphanumeric designation denoting the circuit arrangement for which the meter is applicable and its specific terminal arrangement. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="multiplier" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Meter multiplier. Customer billing value = meter multiplier * transformer ratios * reading value.  The multiplier identifies the scaling value to apply to the reported value after delivery of the tagged item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="demandMult" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Meter demand multiplier.  An additional multiplier that may be used for normalization of the demand value to an hourly value.  For example, if the demand interval were set to 15 minutes, the demand multiplier would be 4.  If the meter design is such that the demand value reported and displayed is compensated for by the meter itself and no additional scaling is required outside of the meter, the value of the the demand multiplier should be "1".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="supportedReadingTypes" type="supportedReadingTypes" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This list contains a list of the types of readings that this meter can read.  Types of readings are expressed as fieldNames as listed in the latest version of the FormattedBlock Implementations Guidelines Document, published by the MultiSpeak Initiative.  Note, this list contains the types of readings that this meter can read; it might not necessarily be programmed currently to read all of these reading types. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="baseType">
		<xs:annotation>
			<xs:documentation>Type of mounting for the meter.  See enumeration list.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Base Type 1"/>
			<xs:enumeration value="S-base"/>
			<xs:enumeration value="A-Base"/>
			<xs:enumeration value="B-Base"/>
			<xs:enumeration value="K-Base"/>
			<xs:enumeration value="P-Base"/>
			<xs:enumeration value="IECBottomConnected"/>
			<xs:enumeration value="switchboard"/>
			<xs:enumeration value="rackmount"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="electricLocationFields" type="electricLocationFields"/>
	<xs:complexType name="electricLocationFields">
		<xs:sequence>
			<xs:element name="substationCode" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Substation code. This field is typically passed in the serviceLocation.  It is added here for those applications that wish to receive the substation code without also storing the serviceLocation.  This use is entirely optional and is considered as an extension.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="substationName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Name of the substation that feeds this meter.  This field is typically passed in the serviceLocation.  It is added here for those applications that wish to receive the substation name without also storing the serviceLocation.  This use is entirely optional and is considered as an extension.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="feederCode" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Feeder number that feeds this meter.  This field is typically passed in the serviceLocation.  It is added here for those applications that wish to receive the feeder number without also storing the serviceLocation.  This use is entirely optional and is considered as an extension.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bus" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>In split bus substations, this string identifies which bus this meter is fed from.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Phasing Code for this electric service.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="eaLoc" type="eaLoc" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Engineering analysis location (line section number or node number).This field is typically passed in the serviceLocation.  It is added here for those applications that wish to receive the engineering analysis location  without also storing the serviceLocation.  This use is entirely optional and is considered as an extension.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="transformerBankID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is an optional link to the objectID of the transformer bank that serves this meter.  This information may also be found by finding the transformer bank that serves the serviceLocation denoted in serviceLocationID. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="linemenServiceArea" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="poleNo" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Pole location number.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="otherMeter" type="otherMeter"/>
	<xs:complexType name="otherMeter">
		<xs:complexContent>
			<xs:extension base="mspMeter">
				<xs:sequence>
					<xs:element name="otherNameplate" type="otherNameplate" minOccurs="0" maxOccurs="1"/>
					<xs:element name="otherLocationFields" type="otherLocationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterConnectionStatus" type="meterConnectionStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="configuredReadingTypes" type="configuredReadingTypes" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterCommAddress" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the addressing information that is used to communicate with the meter. This element is used when multiple meters are addressed using a single communication device (module). This identifier allows the CIS (or other inventory management) system to identify to the AMI system what port a meter is connected to on AMI devices that support multiple meters connected to a single AMI device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="billingStatusInformation" type="billingStatusInformation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="remoteReconnectSetting" type="remoteReconnectSetting" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the setting in the CIS for the desired remote reconnection setting for this meter. The allowable values are: Connect, which means that the meter shall be reconnected remotely without requiring additional action when a connect/reconnect signal is received; Arm, which means that the the meter shall be armed for reconnection and the utility's process followed for reconnection with arming prior to connecting/reconnecting the meter; PowerLimitation, which means that the meter shall be reconnected but immediately placed into power limitation mode; CISAuthRequired, which means that when payment is received, Connect or Arm does not occur automatically. Authorization from the CIS application is required before the meter may be connected or armed; None, which means that no remote connection/reconnection should be completed on this meter even if the meter is so configured and enabled; Other, which means that there is some other setting that is not included in this list; or Unknown, which means that the remoteReconnectSetting is not known or not set by the CIS, in which case the AMI head-end system should follow its own business rules in determining whether or not to connect/reconnect a meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="otherNameplate" type="otherNameplate"/>
	<xs:complexType name="otherNameplate">
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="otherLocationFields" type="otherLocationFields"/>
	<xs:complexType name="otherLocationFields">
		<xs:sequence>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="waterMeter" type="waterMeter"/>
	<xs:complexType name="waterMeter">
		<xs:complexContent>
			<xs:extension base="mspMeter">
				<xs:sequence>
					<xs:element name="waterNameplate" type="waterNameplate" minOccurs="0" maxOccurs="1"/>
					<xs:element name="waterLocationFields" type="waterLocationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterConnectionStatus" type="meterConnectionStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="configuredReadingTypes" type="configuredReadingTypes" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterCommAddress" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the addressing information that is used to communicate with the meter. This element is used when multiple meters are addressed using a single communication device (module). This identifier allows the CIS (or other inventory management) system to identify to the AMI system what port a meter is connected to on AMI devices that support multiple meters connected to a single AMI device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="billingStatusInformation" type="billingStatusInformation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="remoteReconnectSetting" type="remoteReconnectSetting" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the setting in the CIS for the desired remote reconnection setting for this meter. The allowable values are: Connect, which means that the meter shall be reconnected remotely without requiring additional action when a connect/reconnect signal is received; Arm, which means that the the meter shall be armed for reconnection and the utility's process followed for reconnection with arming prior to connecting/reconnecting the meter; PowerLimitation, which means that the meter shall be reconnected but immediately placed into power limitation mode; CISAuthRequired, which means that when payment is received, Connect or Arm does not occur automatically. Authorization from the CIS application is required before the meter may be connected or armed; None, which means that no remote connection/reconnection should be completed on this meter even if the meter is so configured and enabled; Other, which means that there is some other setting that is not included in this list; or Unknown, which means that the remoteReconnectSetting is not known or not set by the CIS, in which case the AMI head-end system should follow its own business rules in determining whether or not to connect/reconnect a meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="waterNameplate" type="waterNameplate"/>
	<xs:complexType name="waterNameplate">
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="installType" type="installType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Location that meter is installed (from ANSI C12.19).

0- Outdoor - non-pit.
1- Outdoor - pit.
2- Indoor - non-pit
3- Other</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="fluidType" type="fluidType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of fluid measured by this meter (from ANSI C12.19).

0 - Potable water.
1 - Hot water.
2 - Non-potable water.
3 - Sewage primary water.
4 - Sewage secondary water.
5 - Sewage tertiary water
6 - Other</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="driveType" type="driveType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of drive on this meter (from ANSI C12.19).
0 - Piston
1 - Disc
2 - Multi-jet
3 - Turbine
4 - Compound
5 - Propeller
6 - Ultra-sonic
7 - Magnetically-coupled
8 - Differential pressure
9 - Mass
10 - Variable area
11 - Open channel
12 - Oscillatory
13 - Other</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="pipeSize" type="pipeSize" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Pipe size (from ANSI C12.19).
      English           Metric
0- 1/2"                 13 mm
1 - 5/8"                15 mm
2 - 3/4"                20 mm
3 - 1"                   25 mm
4 - 1 1/2"             40 mm
5 - 2"                   50 mm
6 - 3"                   80 mm
7 - 4"                 100 mm
8 - 6"                 160 mm
9 - 8"                 200 mm
10 - 10"             250 mm
11 - 12"             300 mm
12 - 14"             350 mm
13 - 16"             400 mm
14 - 18"             450 mm
15 - 20"             500 mm
16 22"                Not standard 
17 - 24"             600 mm
18 - 26"             Not standard
19 - 28"             Not standard
20 - 30"             Not standard
21 - 32"             800 mm
22 - 34"             Not Standard
23 - 36"             900 mm
24 - 40"            1000 mm
25 - 48"            1200 mm</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="installType">
		<xs:annotation>
			<xs:documentation>Location that meter is installed (from ANSI C12.19).

0- Outdoor - non-pit.
1- Outdoor - pit.
2- Indoor - non-pit
3- Other</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="fluidType">
		<xs:annotation>
			<xs:documentation>Type of fluid measured by this meter (from ANSI C12.19).

0 - Potable water.
1 - Hot water.
2 - Non-potable water.
3 - Sewage primary water.
4 - Sewage secondary water.
5 - Sewage tertiary water
6 - Other</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
			<xs:enumeration value="5"/>
			<xs:enumeration value="6"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="driveType">
		<xs:annotation>
			<xs:documentation>Type of drive on this meter (from ANSI C12.19).
0 - Piston
1 - Disc
2 - Multi-jet
3 - Turbine
4 - Compound
5 - Propeller
6 - Ultra-sonic
7 - Magnetically-coupled
8 - Differential pressure
9 - Mass
10 - Variable area
11 - Open channel
12 - Oscillatory
13 - Other</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
			<xs:enumeration value="5"/>
			<xs:enumeration value="6"/>
			<xs:enumeration value="7"/>
			<xs:enumeration value="8"/>
			<xs:enumeration value="9"/>
			<xs:enumeration value="10"/>
			<xs:enumeration value="11"/>
			<xs:enumeration value="12"/>
			<xs:enumeration value="13"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="pipeSize">
		<xs:annotation>
			<xs:documentation>Pipe size (from ANSI C12.19).
      English           Metric
0- 1/2"                 13 mm
1 - 5/8"                15 mm
2 - 3/4"                20 mm
3 - 1"                   25 mm
4 - 1 1/2"             40 mm
5 - 2"                   50 mm
6 - 3"                   80 mm
7 - 4"                 100 mm
8 - 6"                 160 mm
9 - 8"                 200 mm
10 - 10"             250 mm
11 - 12"             300 mm
12 - 14"             350 mm
13 - 16"             400 mm
14 - 18"             450 mm
15 - 20"             500 mm
16 22"                Not standard 
17 - 24"             600 mm
18 - 26"             Not standard
19 - 28"             Not standard
20 - 30"             Not standard
21 - 32"             800 mm
22 - 34"             Not Standard
23 - 36"             900 mm
24 - 40"            1000 mm
25 - 48"            1200 mm</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
			<xs:enumeration value="5"/>
			<xs:enumeration value="6"/>
			<xs:enumeration value="7"/>
			<xs:enumeration value="8"/>
			<xs:enumeration value="9"/>
			<xs:enumeration value="10"/>
			<xs:enumeration value="11"/>
			<xs:enumeration value="12"/>
			<xs:enumeration value="13"/>
			<xs:enumeration value="14"/>
			<xs:enumeration value="15"/>
			<xs:enumeration value="16"/>
			<xs:enumeration value="17"/>
			<xs:enumeration value="18"/>
			<xs:enumeration value="19"/>
			<xs:enumeration value="20"/>
			<xs:enumeration value="21"/>
			<xs:enumeration value="22"/>
			<xs:enumeration value="23"/>
			<xs:enumeration value="24"/>
			<xs:enumeration value="25"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="waterLocationFields" type="waterLocationFields"/>
	<xs:complexType name="waterLocationFields">
		<xs:sequence>
			<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the ID of the serviceLocation with which this waterMeter is associated</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="waterServiceID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the ID of the serviceLocation with which this waterMeter is associated</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ohPrimaryLine" type="ohPrimaryLine"/>
	<xs:complexType name="ohPrimaryLine">
		<xs:annotation>
			<xs:documentation>A section of overhead primary distibution line.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricLine">
				<xs:sequence>
					<xs:element name="lengthSrc" type="lengthSrc" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Metadata about source of length information.  used to determine accuracy.|</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="operatingVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Operating voltage.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="lengthSrc">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="spanGuy" type="spanGuy"/>
	<xs:complexType name="spanGuy">
		<xs:complexContent>
			<xs:extension base="mspLineObject">
				<xs:sequence>
					<xs:element name="attachmentHeight" type="height" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="height" type="height"/>
	<xs:complexType name="height">
		<xs:annotation>
			<xs:documentation>Value of height expressed in units carried in lengthUnits.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="lengthUnits">
					<xs:annotation>
						<xs:documentation>Units of height.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="genericLineFeature" type="genericLineFeature"/>
	<xs:complexType name="genericLineFeature">
		<xs:annotation>
			<xs:documentation>MultiSpeak generic line object for the exchange of graphics line features that are not otherwise defined by MultiSpeak.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspLineObject">
				<xs:sequence>
					<xs:element name="featureType" type="featureType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the type of feature modeled in a GIS.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="featureSubtype" type="featureSubtype" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the subType of a GIS feature being modeled.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="genericLineFeatureList" type="genericLineFeatureList"/>
	<xs:complexType name="genericLineFeatureList">
		<xs:sequence>
			<xs:element name="genericLineFeature" type="genericLineFeature" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="genericPointFeature" type="genericPointFeature"/>
	<xs:complexType name="genericPointFeature">
		<xs:annotation>
			<xs:documentation>MultiSpeak generic point object for the exchange of graphic point features that are not otherwise defined by MultiSpeak.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="featureType" type="featureType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The type of feature in a GIS model.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="featureSubtype" type="featureSubtype" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The subtype of a GIS feature.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="graphicSymbol" type="graphicSymbol" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="genericPointFeatureList" type="genericPointFeatureList"/>
	<xs:complexType name="genericPointFeatureList">
		<xs:sequence>
			<xs:element name="genericPointFeature" type="genericPointFeature" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="genericPolygonFeature" type="genericPolygonFeature"/>
	<xs:complexType name="genericPolygonFeature">
		<xs:annotation>
			<xs:documentation>Generic MultiSpeak feature for inclusion of polygonal graphical features that are not otherwise provided for in MultiSpeak.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPolygonObject">
				<xs:sequence>
					<xs:element name="featureSubtype" type="featureSubtype" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The subtype of a GIS feature.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="featureType" type="featureType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The type of a GIS feature.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="accountNumber">
		<xs:annotation>
			<xs:documentation>Account number for this service location.  Depending on the system of record, this may be either the account.objectID or the account.objectName.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="ugSecondaryLine" type="ugSecondaryLine"/>
	<xs:complexType name="ugSecondaryLine">
		<xs:annotation>
			<xs:documentation>This is a section of secondary voltage line that is installed underground.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricLine">
				<xs:sequence>
					<xs:element name="operatingVOltage" type="voltage" minOccurs="0" maxOccurs="1"/>
					<xs:element name="uGSecType" type="uGSecType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of secondary in this line section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isInConduit" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Is this section istalled in conduit (Y/N)?.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="manufacturer" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Manufacturer of the underground cable in this line section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lengthSrc" type="lengthSrc" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Metadata about source of length information.  used to determine accuracy.|</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="uGSecType">
		<xs:annotation>
			<xs:documentation>Type of underground secondary in this section.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Secondary"/>
			<xs:enumeration value="Service"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="ugTransmissionLine" type="ugTransmissionLine"/>
	<xs:complexType name="ugTransmissionLine">
		<xs:annotation>
			<xs:documentation>A section of underground transmission voltage line.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricLine">
				<xs:sequence>
					<xs:element name="operatingVoltage" type="voltage" minOccurs="0" maxOccurs="1"/>
					<xs:element name="rating" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Line rating.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lengthSrc" type="lengthSrc" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Metadata about source of length information.  used to determine accuracy.|</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="baseVoltageID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the reference to a baseVoltage catalog entry.  This element is required in the CPSM profile.  The baseVoltage catalog is not used in MultiSpeak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lineImpedances" type="lineImpedances" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This set of values is required in CIM, but is not used in MultiSpeak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lineID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to Line container that contains this ugTransmissionLine (ACLineSegment in CPSM).  The use of Line is NOT required in the CPSM profile, but if it is used, it will ONLY be used as a container for ACLineSegments.  The line container object is not used in MultiSpeak. </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="capacitorBank" type="capacitorBank"/>
	<xs:complexType name="capacitorBank">
		<xs:annotation>
			<xs:documentation>This is a capacitor bank.  It can be used to model the CPSM SeriesCompensator uinsg the connectionCode = "Series" or a CPSM ShuntCompensator using any other connection code value.  If the reactiveRating and the reactivePerSection values are positive, then the capacitorBank is modelig a ShuntCompensator in capacitive mode; if the reactiveRating and reactivePerSection are negative then the capacitorBank is modeling a ShuntCompensator that is operating in inductive mode. The object ID for this object is that from the mspObject which contains this capacitor bank.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspBankObject">
				<xs:sequence>
					<xs:element name="capacitorConnectionCode" type="capacitorConnectionCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This code lists the posible connections for the capacitor bank.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="switchType" type="swType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="switchStatus" type="swStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="switchOn" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The capacitor bank switches on at this value.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="switchOff" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The capacitor bank switches off at this value.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="switchTimeDelay" type="seconds" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Switching time delay in seconds</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="controlCircuitID" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Link to circuit element that will control capacitor switching.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="bankRating" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Total bank reactive power rating. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="nominalVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>L-G voltage for wye-connected section; L-L voltage for delta-connected section.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="capacitorList" type="capacitorList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="regulatingControlID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to an entry in the table of RegulatingControls.  This is required for the CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="impedances" type="impedances" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Impedance values are only used in the CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="capacitorConnectionCode">
		<xs:annotation>
			<xs:documentation>This enumeration outlines the possible connections for a capacitor bank.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="ShuntWye"/>
			<xs:enumeration value="ShuntUngroundedWye"/>
			<xs:enumeration value="ShuntDelta"/>
			<xs:enumeration value="ShuntSameAsParent"/>
			<xs:enumeration value="Series"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="swType">
		<xs:annotation>
			<xs:documentation>Type of capacitor switch control used in this section.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Manual"/>
			<xs:enumeration value="Voltage"/>
			<xs:enumeration value="Current"/>
			<xs:enumeration value="ReactiveAmps"/>
			<xs:enumeration value="Time"/>
			<xs:enumeration value="Temperature"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="swStatus">
		<xs:annotation>
			<xs:documentation>Status of the capacitor switch.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Disconnected"/>
			<xs:enumeration value="On"/>
			<xs:enumeration value="Off"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="CIMObjectList" type="CIMObjectList"/>
	<xs:complexType name="CIMObjectList">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="Bay" type="cpsm:Bay" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="BusbarSection" type="cpsm:BusbarSection" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Connector" type="cpsm:Connector" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="GeneratingUnit" type="cpsm:GeneratingUnit" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="HydroGeneratingUnit" type="cpsm:HydroGeneratingUnit" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ThermalGeneratingUnit" type="cpsm:ThermalGeneratingUnit" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="StaticVarCompensator" type="cpsm:StaticVarCompensator" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="TapChanger" type="cpsm:TapChanger" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="TransformerWinding" type="cpsm:TransformerWinding" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="spatialFeatureGroup" type="spatialFeatureGroup"/>
	<xs:complexType name="spatialFeatureGroup">
		<xs:annotation>
			<xs:documentation>The spatialFeaturesGroup is added as an alternative means to pass spatial features that are logically grouped together.  For instance. all of the units installed on a specific pole would be linked together and sent as a spatialFeaturesGroup as an alternative to sending a pole in the poles group, a transfromer in the transformer group, etc.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="anchor" type="anchor" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="capacitorBank" type="capacitorBank" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="CDDevice" type="CDDevice" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="electricMeter" type="electricMeter" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="gasMeter" type="gasMeter" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="guy" type="guy" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="inductionMachine" type="inductionMachine" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="inHomeDisplay" type="inHomeDisplay" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="loadManagementDevice" type="loadManagementDevice" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="measurementDevice" type="measurementDevice" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="meterBase" type="meterBase" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="module" type="module" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="ohPrimaryLine" type="ohPrimaryLine" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="ohSecondaryLine" type="ohSecondaryLine" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="ohTransmissionLine" type="ohTransmissionLine" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="outageDetectionDevice" type="outageDetectionDevice" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="overCurrentDeviceBank" type="overcurrentDeviceBank" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="parcel" type="parcel" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="pole" type="pole" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="powerMonitor" type="powerMonitor" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="powerSystemDevice" type="powerSystemDevice" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="premise" type="premise" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="primaryCabinet" type="primaryCabinet" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="propaneMeter" type="propaneMeter" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="regulatorBank" type="regulatorBank" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="riser" type="riser" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="secondaryJunctionBox" type="secondaryJunctionBox" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="securityLight" type="securityLight" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="serviceLocation" type="serviceLocation" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="spanGuy" type="spanGuy" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="streetLight" type="streetLight" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="substation" type="substation" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="surgeArrestor" type="surgeArrestor" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="switchingDeviceBank" type="switchingDeviceBank" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="synchronousMachine" type="synchronousMachine" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="trafficLight" type="trafficLight" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="transformerBank" type="transformerBank" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="ugPrimaryLine" type="ugPrimaryLine" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="ugSecondaryLine" type="ugSecondaryLine" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="ugTransmissionLine" type="ugTransmissionLine" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="waterMeter" type="waterMeter" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="CIMObjectList" type="CIMObjectList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GMLLines" type="GMLLines"/>
	<xs:complexType name="GMLLines">
		<xs:sequence>
			<xs:element name="GMLLine" type="GMLLine" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="GMLLine" type="GMLLine"/>
	<xs:complexType name="GMLLine">
		<xs:complexContent>
			<xs:extension base="gml:LineStringType">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GMLPolygons" type="GMLPolygons"/>
	<xs:complexType name="GMLPolygons">
		<xs:sequence>
			<xs:element name="GMLPolygon" type="GMLPolygon" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="mspMeter" type="mspMeter"/>
	<xs:complexType name="mspMeter" abstract="true">
		<xs:annotation>
			<xs:documentation>This is an abstract class from which all meter device classes inherit.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="meterNo" type="meterNo" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter number (utility-defined identifier usually called a Company Number).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="installedDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="removedDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="manufacturer" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter manufacturer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="catalogNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="serialNumber" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter serial number.  This is the original number assigned to the meter by the manufacturer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="metrologyFirmwareVersion" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="metrologyFirmwareRevision" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterType" type="meterType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="AMRDeviceType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Vendor-specific device designation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AMRVendor" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of AMR vendor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="billingCycle" type="billingCycle" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterStatusList" type="meterStatusList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="moduleList" type="moduleList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="utilityInfo" type="utilityInfo" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="meterNo">
		<xs:annotation>
			<xs:documentation>Meter number (utility-defined identifier usually called a Company Number).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="meterType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="utilityInfo" type="utilityInfo"/>
	<xs:complexType name="utilityInfo">
		<xs:sequence>
			<xs:element name="owner" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the owner of the physical device.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="district" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the district of the utility in which the device is installed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the objectID of the service location at which this device is installed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceID" type="serviceID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the utility account anumber associated with this device. Depending on the system of record, this may be either the account.objectID or the account.objectName, but is assumed to be unique.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the objectID of the customer with which this device is associated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GMLLocation" type="GMLLocation" minOccurs="0" maxOccurs="1"/>
			<xs:element name="gpsPoint" type="gpsPoint" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="electricMeter" type="electricMeter"/>
	<xs:complexType name="electricMeter">
		<xs:complexContent>
			<xs:extension base="mspMeter">
				<xs:sequence>
					<xs:element name="meterBaseID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID of the meterBase with which this electric meter is associated, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="electricNameplate" type="electricNameplate" minOccurs="0" maxOccurs="1"/>
					<xs:element name="electricLocationFields" type="electricLocationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="sealNumberList" type="sealNumberList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of seals on this revenue meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="parentMeterList" type="parentMeterList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the list of parent meters to this meter. That is to say, the list of meters to which this meter is a sub-meter. Parent meters are referred to by their meterID.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="subMeterList" type="subMeterList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the list of meters that act as sub-meters on this meter, referred to by their meterID.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterConnectionStatus" type="meterConnectionStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="configuredReadingTypes" type="configuredReadingTypes" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterCommAddress" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the addressing information that is used to communicate with the meter. This element is used when multiple meters are addressed using a single communication device (module). This identifier allows the CIS (or other inventory management) system to identify to the AMI system what port a meter is connected to on AMI devices that support multiple meters connected to a single AMI device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="billingStatusInformation" type="billingStatusInformation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="remoteReconnectSetting" type="remoteReconnectSetting" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the setting in the CIS for the desired remote reconnection setting for this meter. The allowable values are: Connect, which means that the meter shall be reconnected remotely without requiring additional action when a connect/reconnect signal is received; Arm, which means that the the meter shall be armed for reconnection and the utility's process followed for reconnection with arming prior to connecting/reconnecting the meter; PowerLimitation, which means that the meter shall be reconnected but immediately placed into power limitation mode; CISAuthRequired, which means that when payment is received, Connect or Arm does not occur automatically. Authorization from the CIS application is required before the meter may be connected or armed; None, which means that no remote connection/reconnection should be completed on this meter even if the meter is so configured and enabled; Other, which means that there is some other setting that is not included in this list; or Unknown, which means that the remoteReconnectSetting is not known or not set by the CIS, in which case the AMI head-end system should follow its own business rules in determining whether or not to connect/reconnect a meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="mspObject" type="mspObject"/>
	<xs:complexType name="mspObject" abstract="true">
		<xs:annotation>
			<xs:documentation>This is the class from which all classes that can be acted upon inherit (either directly or indirectly).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The extensions container is one way that MultiSpeak objects can be extended using XSD elements.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="comments" type="comments" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element may be used to annotate this data instance.  It also serves to separate extensions made with the extensions class from those made using the extensionsList class.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is an optional, self-describing means to extend any MultiSpeak object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="objectName" type="objectName" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is an optional human-readable name for this instance of this object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="identifiedObject" type="cpsm:IdentifiedObject" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This object is used to carry object identification information for CIM-style objects. If CIM compatibility is not necessary, these fields are not required.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="objectID" use="required" type="objectID">
			<xs:annotation>
				<xs:documentation>This is the key field for this object type.  The use of objectID is always required.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="verb" use="optional" default="Change" type="action">
			<xs:annotation>
				<xs:documentation>This attribute, if used, specifies what action is to be taken on this object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="errorString" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>This attribute, if used, documents the error that occurred in processing this object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="replaceID" use="optional" type="objectID">
			<xs:annotation>
				<xs:documentation>This attribute, if used, specifies another object of this type that this data instance is replacing.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="utility" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>String that is used to identify the owner of this item.  It may be a text string or a pointer to an organization.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:anyAttribute namespace="##any" processContents="lax"/>
	</xs:complexType>
	<xs:simpleType name="extName">
		<xs:annotation>
			<xs:documentation>This is the name of the extensionsItem to which it refers.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="extValue" type="extValue"/>
	<xs:complexType name="extValue">
		<xs:annotation>
			<xs:documentation>This is the value of the extensionsItem.  The units of this extensionsItem are included in the Units attrbute on extValue.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="units" use="optional" type="uom">
					<xs:annotation>
						<xs:documentation>If used, this attribute carries the units in which the extValue is expressed. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="uom">
		<xs:annotation>
			<xs:documentation>This is the list of units of measure from ANSI C12.19</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Acre ft"/>
			<xs:enumeration value="Amps"/>
			<xs:enumeration value="Amps RMS"/>
			<xs:enumeration value="Amps squared RMS"/>
			<xs:enumeration value="atmospheres"/>
			<xs:enumeration value="Bar"/>
			<xs:enumeration value="ccf"/>
			<xs:enumeration value="ccf per Hr"/>
			<xs:enumeration value="cm"/>
			<xs:enumeration value="Corrosion"/>
			<xs:enumeration value="Counter"/>
			<xs:enumeration value="cubic feet"/>
			<xs:enumeration value="cubic feet corrected"/>
			<xs:enumeration value="cubic feet per Hr"/>
			<xs:enumeration value="cubic feet per Hr corrected"/>
			<xs:enumeration value="cubic feet per Hr uncorrected"/>
			<xs:enumeration value="cubic feet uncorrected"/>
			<xs:enumeration value="cubic meter"/>
			<xs:enumeration value="cubic meter per Hr"/>
			<xs:enumeration value="cubic meters corrected"/>
			<xs:enumeration value="cubic meters per Hr corrected"/>
			<xs:enumeration value="cubic meters per Hr uncorrected"/>
			<xs:enumeration value="cubic meters uncorrected"/>
			<xs:enumeration value="Current phase angle"/>
			<xs:enumeration value="Date"/>
			<xs:enumeration value="Date time"/>
			<xs:enumeration value="deg C"/>
			<xs:enumeration value="deg F"/>
			<xs:enumeration value="deg K"/>
			<xs:enumeration value="Differential pascal"/>
			<xs:enumeration value="Differential pound per square inch"/>
			<xs:enumeration value="dm"/>
			<xs:enumeration value="Dollar"/>
			<xs:enumeration value="feet per second"/>
			<xs:enumeration value="Frequency"/>
			<xs:enumeration value="ft"/>
			<xs:enumeration value="ft of water"/>
			<xs:enumeration value="GQ"/>
			<xs:enumeration value="GQh"/>
			<xs:enumeration value="Gram square cm"/>
			<xs:enumeration value="GVA"/>
			<xs:enumeration value="GVAh"/>
			<xs:enumeration value="GVAR"/>
			<xs:enumeration value="GVARh"/>
			<xs:enumeration value="GW"/>
			<xs:enumeration value="GWh"/>
			<xs:enumeration value="IMP gl"/>
			<xs:enumeration value="IMP gl per Hr"/>
			<xs:enumeration value="inches"/>
			<xs:enumeration value="Inches H2O column"/>
			<xs:enumeration value="Inches HG column"/>
			<xs:enumeration value="inches of water"/>
			<xs:enumeration value="Interval timer"/>
			<xs:enumeration value="Ionization"/>
			<xs:enumeration value="Joules"/>
			<xs:enumeration value="Joules per Hr"/>
			<xs:enumeration value="kAmps"/>
			<xs:enumeration value="kAmps RMS"/>
			<xs:enumeration value="kAmps squared RMS"/>
			<xs:enumeration value="kJoules"/>
			<xs:enumeration value="kJoules per Hr"/>
			<xs:enumeration value="km"/>
			<xs:enumeration value="km per hour"/>
			<xs:enumeration value="km per second"/>
			<xs:enumeration value="kQ"/>
			<xs:enumeration value="kQh"/>
			<xs:enumeration value="kV"/>
			<xs:enumeration value="kV RMS"/>
			<xs:enumeration value="kVA"/>
			<xs:enumeration value="kVAh"/>
			<xs:enumeration value="kVAR"/>
			<xs:enumeration value="kVARh"/>
			<xs:enumeration value="kVsquared RMS"/>
			<xs:enumeration value="kW"/>
			<xs:enumeration value="kWh"/>
			<xs:enumeration value="liters"/>
			<xs:enumeration value="m"/>
			<xs:enumeration value="m per second"/>
			<xs:enumeration value="mAmps"/>
			<xs:enumeration value="Mamps"/>
			<xs:enumeration value="mAmps RMS"/>
			<xs:enumeration value="Mamps RMS"/>
			<xs:enumeration value="Mamps squared RMS"/>
			<xs:enumeration value="mAmps squared RMS"/>
			<xs:enumeration value="Meter HG column"/>
			<xs:enumeration value="micro m"/>
			<xs:enumeration value="microAmps"/>
			<xs:enumeration value="microAmps RMS"/>
			<xs:enumeration value="microAmps squared RMS"/>
			<xs:enumeration value="microJoules"/>
			<xs:enumeration value="microJoules per Hr"/>
			<xs:enumeration value="microQ"/>
			<xs:enumeration value="microQh"/>
			<xs:enumeration value="microV"/>
			<xs:enumeration value="microV RMS"/>
			<xs:enumeration value="microVA"/>
			<xs:enumeration value="microVAh"/>
			<xs:enumeration value="microVAR"/>
			<xs:enumeration value="microVARh"/>
			<xs:enumeration value="microVsquared RMS"/>
			<xs:enumeration value="microW"/>
			<xs:enumeration value="microWh"/>
			<xs:enumeration value="Minutes on battery"/>
			<xs:enumeration value="mJoules"/>
			<xs:enumeration value="MJoules"/>
			<xs:enumeration value="MJoules per Hr"/>
			<xs:enumeration value="mJoules per Hr"/>
			<xs:enumeration value="mm"/>
			<xs:enumeration value="mph"/>
			<xs:enumeration value="MQ"/>
			<xs:enumeration value="mQ"/>
			<xs:enumeration value="MQh"/>
			<xs:enumeration value="mQh"/>
			<xs:enumeration value="MV"/>
			<xs:enumeration value="mV"/>
			<xs:enumeration value="MV RMS"/>
			<xs:enumeration value="mV RMS"/>
			<xs:enumeration value="mVA"/>
			<xs:enumeration value="MVA"/>
			<xs:enumeration value="MVAh"/>
			<xs:enumeration value="mVAh"/>
			<xs:enumeration value="MVAR"/>
			<xs:enumeration value="mVAR"/>
			<xs:enumeration value="mVARh"/>
			<xs:enumeration value="MVARh"/>
			<xs:enumeration value="mVsquared RMS"/>
			<xs:enumeration value="MVsquared RMS"/>
			<xs:enumeration value="MW"/>
			<xs:enumeration value="mW"/>
			<xs:enumeration value="mWh"/>
			<xs:enumeration value="MWh"/>
			<xs:enumeration value="Nbr of amps T.H.D. excess"/>
			<xs:enumeration value="Nbr of demand resets"/>
			<xs:enumeration value="Nbr of encoder tamper"/>
			<xs:enumeration value="Nbr of excursion high"/>
			<xs:enumeration value="Nbr of excursion low"/>
			<xs:enumeration value="Nbr of inversion"/>
			<xs:enumeration value="Nbr of physical tamper"/>
			<xs:enumeration value="Nbr of power loss"/>
			<xs:enumeration value="Nbr of power outage"/>
			<xs:enumeration value="Nbr of pulse"/>
			<xs:enumeration value="Nbr of removal"/>
			<xs:enumeration value="Nbr of reprogramming"/>
			<xs:enumeration value="Nbr of reverse rotation"/>
			<xs:enumeration value="Nbr of sag"/>
			<xs:enumeration value="Nbr of swells"/>
			<xs:enumeration value="Nbr of times programmed"/>
			<xs:enumeration value="Nbr of V T.H.D. excess"/>
			<xs:enumeration value="Nbr of voltage unbalance"/>
			<xs:enumeration value="Nbr of watchdog"/>
			<xs:enumeration value="Normal voltage period"/>
			<xs:enumeration value="percent"/>
			<xs:enumeration value="percent relative humidity"/>
			<xs:enumeration value="PH factor"/>
			<xs:enumeration value="pounds per square foot"/>
			<xs:enumeration value="Power factor"/>
			<xs:enumeration value="PPM chlorine"/>
			<xs:enumeration value="PPM lead"/>
			<xs:enumeration value="PPM odorant"/>
			<xs:enumeration value="PPM SO2"/>
			<xs:enumeration value="Q"/>
			<xs:enumeration value="Qh"/>
			<xs:enumeration value="Sense input"/>
			<xs:enumeration value="Static pascal"/>
			<xs:enumeration value="Static pound per square inch"/>
			<xs:enumeration value="T.H.D. Current"/>
			<xs:enumeration value="T.H.D. Voltage"/>
			<xs:enumeration value="Therm"/>
			<xs:enumeration value="Therm per Hr"/>
			<xs:enumeration value="Time"/>
			<xs:enumeration value="turbidity"/>
			<xs:enumeration value="US gl"/>
			<xs:enumeration value="US gl per Hr"/>
			<xs:enumeration value="V"/>
			<xs:enumeration value="V RMS"/>
			<xs:enumeration value="VA"/>
			<xs:enumeration value="VAh"/>
			<xs:enumeration value="VAR"/>
			<xs:enumeration value="VARh"/>
			<xs:enumeration value="Voltage phase angle"/>
			<xs:enumeration value="Vsquared RMS"/>
			<xs:enumeration value="W"/>
			<xs:enumeration value="Wh"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="extType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="anySimpleType"/>
			<xs:enumeration value="anyType"/>
			<xs:enumeration value="anyURI"/>
			<xs:enumeration value="base64Binary"/>
			<xs:enumeration value="boolean"/>
			<xs:enumeration value="byte"/>
			<xs:enumeration value="date"/>
			<xs:enumeration value="dateTime"/>
			<xs:enumeration value="decimal"/>
			<xs:enumeration value="double"/>
			<xs:enumeration value="duration"/>
			<xs:enumeration value="ENTITIES"/>
			<xs:enumeration value="ENTITY"/>
			<xs:enumeration value="float"/>
			<xs:enumeration value="gDay"/>
			<xs:enumeration value="gMonth"/>
			<xs:enumeration value="gMonthDay"/>
			<xs:enumeration value="gYear"/>
			<xs:enumeration value="gYearMonth"/>
			<xs:enumeration value="hexBinary"/>
			<xs:enumeration value="ID"/>
			<xs:enumeration value="IDREF"/>
			<xs:enumeration value="IDREFS"/>
			<xs:enumeration value="int"/>
			<xs:enumeration value="integer"/>
			<xs:enumeration value="language"/>
			<xs:enumeration value="long"/>
			<xs:enumeration value="Name"/>
			<xs:enumeration value="NCName"/>
			<xs:enumeration value="negativeInteger"/>
			<xs:enumeration value="NMTOKEN"/>
			<xs:enumeration value="NMTOKENS"/>
			<xs:enumeration value="nonNegativeInteger"/>
			<xs:enumeration value="nonPositiveInteger"/>
			<xs:enumeration value="normalizedString"/>
			<xs:enumeration value="NOTATION"/>
			<xs:enumeration value="positiveInteger"/>
			<xs:enumeration value="QName"/>
			<xs:enumeration value="short"/>
			<xs:enumeration value="string"/>
			<xs:enumeration value="time"/>
			<xs:enumeration value="token"/>
			<xs:enumeration value="unsignedByte"/>
			<xs:enumeration value="unsignedInt"/>
			<xs:enumeration value="unsignedLong"/>
			<xs:enumeration value="unsignedShort"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="extensionsItem" type="extensionsItem"/>
	<xs:complexType name="extensionsItem">
		<xs:annotation>
			<xs:documentation>This is an optional means to add self-describing extensions to any class that inherits from the mspObject.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="extName" type="extName" minOccurs="1" maxOccurs="1"/>
			<xs:element name="extValue" type="extValue" minOccurs="1" maxOccurs="1"/>
			<xs:element name="extType" type="extType" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="otherContactInformation" type="otherContactInformation"/>
	<xs:complexType name="otherContactInformation">
		<xs:sequence>
			<xs:element name="otherContactItem" type="otherContactItem" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is an element to carry other miscellaneous contact information, such as web site address, truck radio number, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="telephoneNumber" type="telephoneNumber"/>
	<xs:complexType name="telephoneNumber">
		<xs:sequence>
			<xs:element name="areaCode" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Area or region code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cityCode" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>City code for telephone number, if applicable.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="countryCode" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Country code for telephone number, if applicable.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="localNumber" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The primary portion of a telephone number as dialed in a local calling area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="extension" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Extension for telephone number if required.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="priorityOrder">
		<xs:annotation>
			<xs:documentation>Order in which this contact information type should be used to contact this person.  Fist = 1, second =2, etc.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	<xs:element name="eMailAddress" type="eMailAddress"/>
	<xs:complexType name="eMailAddress">
		<xs:sequence>
			<xs:element name="eMail" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="eMailType" type="eMailType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The type of e-mail address.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="priorityOrder" type="priorityOrder" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Order in which these e-mail addresses should be used to contact this person.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="eMailType">
		<xs:annotation>
			<xs:documentation>Type of e-mail address.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Personal"/>
			<xs:enumeration value="Business"/>
			<xs:enumeration value="Alternate"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="phoneType">
		<xs:annotation>
			<xs:documentation>Type of phone number.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Home"/>
			<xs:enumeration value="Business"/>
			<xs:enumeration value="Mobile"/>
			<xs:enumeration value="Business mobile"/>
			<xs:enumeration value="Pager"/>
			<xs:enumeration value="Fax"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="mspPerson" type="mspPerson"/>
	<xs:complexType name="mspPerson" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="lastName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Last name of person.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="firstName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>First name of person.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="mName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Middle name of person.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="prefix" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="suffix" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="governmentID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Unique identifier for person relative to it's governing authority, for example a federal tax identifier (such as a Social Security number in the United States).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contactInfo" type="contactInfo" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="contactInfo" type="contactInfo"/>
	<xs:complexType name="contactInfo">
		<xs:annotation>
			<xs:documentation>This class contains ways to contact an entity.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="phoneList" type="phoneList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="eMailList" type="eMailList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="addressList" type="addressList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="otherContactInformation" type="otherContactInformation" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="phoneList" type="phoneList"/>
	<xs:complexType name="phoneList">
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="phoneNumber" type="phoneNumber" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="detailedAddressFields" type="detailedAddressFields"/>
	<xs:complexType name="detailedAddressFields">
		<xs:sequence>
			<xs:element name="streetPrefix" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="streetNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="streetSuffix" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="streetType" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="buildingNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="suiteNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="addressGeneral" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="postOfficeBox" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="region" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="address" type="address"/>
	<xs:complexType name="address">
		<xs:sequence>
			<xs:element name="address1" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Address line 1.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="address2" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Address line 2.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="detailedAddressFields" type="detailedAddressFields" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Detailed information about the components of the composite address lines.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="townCode" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Additional information about the city or town, if required.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="city" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Name of the city or municipality.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="state" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The state or province.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="postalCode" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The postal code.  For instance, in the United States this is the zip code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="country" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="addressItem" type="addressItem"/>
	<xs:complexType name="addressItem">
		<xs:sequence>
			<xs:element name="address" type="address" minOccurs="1" maxOccurs="1"/>
			<xs:element name="addressType" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of address. For instance, billing, mailing, service location, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="priorityOrder" type="priorityOrder" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Order that should be used to contact this person.  First = 1, second = 2, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="otherContactItem" type="otherContactItem"/>
	<xs:complexType name="otherContactItem">
		<xs:annotation>
			<xs:documentation>This is an element to carry other miscellaneous contact information, such as web site address, truck radio number, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="details" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element carries the miscellaneous contact information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="infoType" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element is used to describe the type of information stored in the "details" element.  Examples might be: IP address, truck number, radio number.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="customer" type="customer"/>
	<xs:complexType name="customer">
		<xs:complexContent>
			<xs:extension base="mspPerson">
				<xs:sequence>
					<xs:element name="dBAName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>"Doing Business As" (DBA) name for business customers. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="specialNeeds" type="specialNeeds" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A descriptor for any special needs that this customer has, such as life support equipment. THIS SIMPLE TYPE HAS BEEN DEPRECATED IN V4.1 AND WILL BE REPLACED WITH AN ARRAY OF NAME-VALUE PAIRS DESCRIBING TYPES OF SPECIAL NEEDS IN V5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accounts" type="accounts" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of accounts associated with this customer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceOrderList" type="serviceOrderList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="workList" type="workList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work to be performed for this customer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workOrderList" type="workOrderList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outstanding work orders for this customer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maintenanceOrderList" type="maintenanceOrderList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outstanding maintenanceOrders for this customer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="alternateContactList" type="alternateContactList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="phoneNumber" type="phoneNumber"/>
	<xs:complexType name="phoneNumber">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="phone" type="telephoneNumber" minOccurs="1" maxOccurs="1"/>
			<xs:element name="phoneType" type="phoneType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The type of phone number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="priorityOrder" type="priorityOrder" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Order in which these phone numbers should be used to contact this person.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eMailList" type="eMailList"/>
	<xs:complexType name="eMailList">
		<xs:sequence>
			<xs:element name="eMailAddress" type="eMailAddress" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="connectivityModel">
		<xs:annotation>
			<xs:documentation>This attribute, if used, specifies whether the connectivity model included uses nodal or sectional references.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Nodal"/>
			<xs:enumeration value="Sectional"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="MultiSpeak" type="MultiSpeak"/>
	<xs:complexType name="MultiSpeak">
		<xs:annotation>
			<xs:documentation>The MultiSpeak class is a container that can be used to carry a combination of any multiplicity of any class that inherits directly or indirectly from the mspObject.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:any namespace="##targetNamespace cpsm_V4.1_Release gml_V4.1_Release cim" processContents="strict" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is a means to include any object defined in the MultiSpeak namespace in a MultiSpeak container.</xs:documentation>
				</xs:annotation>
			</xs:any>
		</xs:sequence>
		<xs:attribute name="documentType" use="optional" type="documentType">
			<xs:annotation>
				<xs:documentation>The documentType attribute describes the scope of the data included in this MultiSpeak container class.  The possible options are: dump, which means that this message contains all data on all instances of this class or incremental, which menas that this message contains only updated information.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="connectivityModel" use="optional" type="connectivityModel">
			<xs:annotation>
				<xs:documentation>The connectivity model attribute is used to describe the way that power system model data included in this message are connected.  This attribute shall not be included unless power system model information is being transferred.  The options for connectivityModel are: Nodal, which means that the power system elements are connected to nodes or Sectional, which means that the power system elements are treated as line sections.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="objectID">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="verb">
		<xs:restriction base="xs:string">
			<xs:enumeration value="New"/>
			<xs:enumeration value="Change"/>
			<xs:enumeration value="Delete"/>
			<xs:enumeration value="Replace"/>
			<xs:enumeration value="Link"/>
			<xs:enumeration value="Unlink"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="extensions" type="extensions"/>
	<xs:complexType name="extensions">
		<xs:annotation>
			<xs:documentation>The extensions container is one way that MultiSpeak objects can be extended using XSD elements.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This container is one way in which objects can be extended using XSD elements.</xs:documentation>
				</xs:annotation>
			</xs:any>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="extensionsList" type="extensionsList"/>
	<xs:complexType name="extensionsList">
		<xs:annotation>
			<xs:documentation>This is an optional, self-describing means to extend any MultiSpeak object.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="extensionsItem" type="extensionsItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="objectName">
		<xs:annotation>
			<xs:documentation>This is an optional human-readable name for this instance of this object.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="addressList" type="addressList"/>
	<xs:complexType name="addressList">
		<xs:sequence>
			<xs:element name="addressItem" type="addressItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="worker" type="worker"/>
	<xs:complexType name="worker">
		<xs:complexContent>
			<xs:extension base="mspPerson">
				<xs:sequence>
					<xs:element name="isEmplyee" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Is this worker an employee of the host utility? </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="skillsList" type="skillsList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Set of pointers to the skills that this worker has.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="skills" type="skills" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Set of skills that this worker has.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="mspPointObject" type="mspPointObject"/>
	<xs:complexType name="mspPointObject" abstract="true">
		<xs:annotation>
			<xs:documentation>This is an abstract class for objects that exhibit point geometry.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="GMLLocation" type="gml:PointType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="gpsPoint" type="gpsPoint" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The gpsPoint element has been deprecated as of the V4.1.2 Release. It will be replaced with the GPSLocation in V5.0. It is suggested that you use only the GPSLocation element for carrying locations expressed in latitude and longitude and the WGS84 datum.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="GPSLocation" type="GPSLocation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A geographical location as expressed in a geographic coordinate system. The GPSLocation SHALL be expressed using the WGS84 datum. This object SHOULD be used for expressing all types of GPS data and replaces the GPS, gpsPoint, and gpsLocation all of which have been deprecated in V4.1.3. The GPSLocation object will replace these other objects in V5.0. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="gridLocation" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a utility-assigned location identifier that may or may not be tied to any GIS coordinate system.  Sometimes referred to by the utility as "map number" or "grid number".</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rotation" type="rotation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rotation angle for diplay of the feature, expressed in degrees measured clockwise from the vertical.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="facilityID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Utility string designation for this object.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timeZone" type="timeZone" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the time zone for this location.  The time zone designator goes in the element, the attributes optioanlly give additional information about this time zone.  For instance the time zine for Denver, Colorado, USA is MT (Mountain Time).  Daylight savings time is enabled in Denver, so DSTEnabled = 1 or true.  The MT time zone is UTC - 7.00 hours when DST is not in effect, so the UTCOffest would be "-7.00".  On the other hand, Phoenix is also in the Moutain Time zone, but DST is not employed in Arizona.  For the case of Phoenix, all of the settings would be the same as for Denver, except that DSTEnabled would be false.  The standard civilian time zones (e.g., AT,ET,CT, MT, PT, and AKT for North America) are included for all global locations as are the military time zone designations (e.g. Z, A, B...). </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="comments">
		<xs:annotation>
			<xs:documentation>This element may be used to annotate this data instance.  It also serves to separate extensions made with the extensions class from those made using the extensionsList class.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="mspPhase">
		<xs:restriction base="xs:string">
			<xs:enumeration value="A"/>
			<xs:enumeration value="B"/>
			<xs:enumeration value="C"/>
			<xs:enumeration value="N"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="mspConnectivityPoint" type="mspConnectivityPoint"/>
	<xs:complexType name="mspConnectivityPoint" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="graphicSymbolList" type="graphicSymbolList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="annotationList" type="genericAnnotationFeatureList" minOccurs="0" maxOccurs="1"/>
					<xs:group ref="connectivityModelGroup" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="account" type="account"/>
	<xs:complexType name="account">
		<xs:annotation>
			<xs:documentation>This is a customer account.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Link to the objectID (foreign key) of the customer that has this account.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountsReceivable" type="accountsReceivable" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Accounts receivable information for this account.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="billingCycle" type="billingCycle" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Billing cycle identifier for this account.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="budgetBill" type="budgBill" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Budget billing code for this account</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="paymentDueDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time that the next payment is due.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lastPaymentDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last payment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lastPaymentAmount" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Amount of the last payment made.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="billDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last bill.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shutOffDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Shut off date for non-payment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isPrePay" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If the field is missing or false then the account is cycle or budget billed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="billingTerms" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Describes the way that the account is billed.  Suggested enumeration is Prepay, Budget, Cycle, or Other.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="calculatedCurrentBillAmount" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Amount that the customer would owe if final billed today.  This amount is based on the fixed charges, energyuseage, fuel costs and taxes since the last bill.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="calculatedCurrentBillDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time that the calculated current bill amount was calculated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="calculatedCurrentBillReadings" type="calculatedCurrentBillReadings" minOccurs="0" maxOccurs="1"/>
					<xs:element name="lastBillAmount" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The amount of the last bill to the customer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="calculatedUsedYesterday" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The value (expressed in currency) in energy, fuel costs, taxes, and prorated fixed charges the customer used yesterday.  It may simply be the calculatedCurrentBillAmount from today minus the calculated current bill amount from yesterday.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocations" type="serviceLocations" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of serviceLocations associated with this account.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceOrderList" type="serviceOrderList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="workList" type="workList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work to be performed for this account</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workOrderList" type="workOrderList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outstanding work orders for this account.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maintenanceOrderList" type="maintenanceOrderList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outstanding maintenance orders for this account.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="voltage" type="voltage"/>
	<xs:complexType name="voltage">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="voltageUnits">
					<xs:annotation>
						<xs:documentation>Units of voltage</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="floatType">
		<xs:restriction base="xs:float"/>
	</xs:simpleType>
	<xs:element name="current" type="current"/>
	<xs:complexType name="current">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="currentUnits">
					<xs:annotation>
						<xs:documentation>Units in which this current is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="currentUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="A"/>
			<xs:enumeration value="mA"/>
			<xs:enumeration value="kA"/>
			<xs:enumeration value="MA"/>
			<xs:enumeration value="microA"/>
			<xs:enumeration value="Per Unit"/>
			<xs:enumeration value="Percent"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="realPowerUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="W"/>
			<xs:enumeration value="kW"/>
			<xs:enumeration value="MW"/>
			<xs:enumeration value="GW"/>
			<xs:enumeration value="mW"/>
			<xs:enumeration value="microW"/>
			<xs:enumeration value="Per Unit"/>
			<xs:enumeration value="Percent"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="sampleRate" type="sampleRate"/>
	<xs:complexType name="sampleRate">
		<xs:annotation>
			<xs:documentation>This is the rate at which an automation system samples data.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="time">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="documentType">
		<xs:annotation>
			<xs:documentation>This attribute establishes whether the data exchange consistutes all of the elements for all of the data instances (i.e., "dump") or inremental data (i.e., "incremental").</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="incremental"/>
			<xs:enumeration value="dump"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="reactiveEnergy" type="reactiveEnergy"/>
	<xs:complexType name="reactiveEnergy">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="reactiveEnergyUnits">
					<xs:annotation>
						<xs:documentation>Units in which this reactive energy is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="resistance" type="resistance"/>
	<xs:complexType name="resistance">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="zUnits">
					<xs:annotation>
						<xs:documentation>Units in which this resistance is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="resistancePerUnitLength" type="resistancePerUnitLength"/>
	<xs:complexType name="resistancePerUnitLength">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="resistanceUnits" use="optional" type="zUnits">
					<xs:annotation>
						<xs:documentation>Units in which this resistance is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="lengthUnits" use="optional" type="lengthUnits">
					<xs:annotation>
						<xs:documentation>Units for the reference length.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="complexVoltage" type="complexVoltage"/>
	<xs:complexType name="complexVoltage">
		<xs:sequence>
			<xs:element name="r" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Real component of the voltage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="x" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Imaginary component of the voltage.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="units" use="optional" type="voltageUnits">
			<xs:annotation>
				<xs:documentation>Units in which this voltage is expressed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="reactance" type="reactance"/>
	<xs:complexType name="reactance">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="zUnits">
					<xs:annotation>
						<xs:documentation>The units in which this reactance is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="reactancePerUnitLength" type="reactancePerUnitLength"/>
	<xs:complexType name="reactancePerUnitLength">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="reactanceUnits" use="optional" type="zUnits">
					<xs:annotation>
						<xs:documentation>The units in wich the reactance is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="lengthUnits" use="optional" type="lengthUnits">
					<xs:annotation>
						<xs:documentation>The units in which the reference length is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="impedance" type="impedance"/>
	<xs:complexType name="impedance">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="zUnits">
					<xs:annotation>
						<xs:documentation>The units in which the impedance is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="complexImpedance" type="complexImpedance"/>
	<xs:complexType name="complexImpedance">
		<xs:sequence>
			<xs:element name="r" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The resistive portion of impedance.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="x" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Thereactive portion of the impedance</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="units" use="optional" type="zUnits">
			<xs:annotation>
				<xs:documentation>The units in which this impedance is expressed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="complexImpedanceWithLeakage" type="complexImpedanceWithLeakage"/>
	<xs:complexType name="complexImpedanceWithLeakage">
		<xs:sequence>
			<xs:element name="r" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The resistive portion of the impedance.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="x" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The reactive portion of the impedance.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="b" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The leakage reactance.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="units" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The units in which this impedance is expressed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="reactivePowerUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="mVAr"/>
			<xs:enumeration value="VAr"/>
			<xs:enumeration value="kVAr"/>
			<xs:enumeration value="MVAr"/>
			<xs:enumeration value="GVAr"/>
			<xs:enumeration value="microVAr"/>
			<xs:enumeration value="Per Unit"/>
			<xs:enumeration value="Percent"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="apparentPowerUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="VA"/>
			<xs:enumeration value="kVA"/>
			<xs:enumeration value="MVA"/>
			<xs:enumeration value="GVA"/>
			<xs:enumeration value="mVA"/>
			<xs:enumeration value="microVA"/>
			<xs:enumeration value="Per Unit"/>
			<xs:enumeration value="Percent"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="realEnergyUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Wh"/>
			<xs:enumeration value="kWh"/>
			<xs:enumeration value="MWh"/>
			<xs:enumeration value="GWh"/>
			<xs:enumeration value="mWh"/>
			<xs:enumeration value="microWh"/>
			<xs:enumeration value="TWh"/>
			<xs:enumeration value="PWh"/>
			<xs:enumeration value="BTU"/>
			<xs:enumeration value="Therm"/>
			<xs:enumeration value="Erg"/>
			<xs:enumeration value="Calorie"/>
			<xs:enumeration value="eV"/>
			<xs:enumeration value="Joule"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="reactiveEnergyUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="VArh"/>
			<xs:enumeration value="KVArh"/>
			<xs:enumeration value="MVArh"/>
			<xs:enumeration value="GVArh"/>
			<xs:enumeration value="mVArh"/>
			<xs:enumeration value="microVArh"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="zUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Ohms"/>
			<xs:enumeration value="Percent"/>
			<xs:enumeration value="Per Unit"/>
			<xs:enumeration value="Total"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="lengthUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Mils"/>
			<xs:enumeration value="Inches"/>
			<xs:enumeration value="Feet"/>
			<xs:enumeration value="Yards"/>
			<xs:enumeration value="Thousand feet"/>
			<xs:enumeration value="Miles"/>
			<xs:enumeration value="Micrometers"/>
			<xs:enumeration value="Millimeters"/>
			<xs:enumeration value="Decimeters"/>
			<xs:enumeration value="Centimeters"/>
			<xs:enumeration value="Meters"/>
			<xs:enumeration value="100 Meters"/>
			<xs:enumeration value="Kilometers"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="sUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="microS"/>
			<xs:enumeration value="mS"/>
			<xs:enumeration value="S"/>
			<xs:enumeration value="kS"/>
			<xs:enumeration value="MS"/>
			<xs:enumeration value="Siemens"/>
			<xs:enumeration value="mho"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="capacitanceUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="F"/>
			<xs:enumeration value="mF"/>
			<xs:enumeration value="microF"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="admittance" type="admittance"/>
	<xs:complexType name="admittance">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="sUnits">
					<xs:annotation>
						<xs:documentation>The units in which this admittance is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="susceptance" type="susceptance"/>
	<xs:complexType name="susceptance">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="sUnits">
					<xs:annotation>
						<xs:documentation>The units in which this suseptance is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="conductance" type="conductance"/>
	<xs:complexType name="conductance">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="sUnits">
					<xs:annotation>
						<xs:documentation>The units in which this conductance is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="capacitance" type="capacitance"/>
	<xs:complexType name="capacitance">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="capacitanceUnits">
					<xs:annotation>
						<xs:documentation>The units in which the capacitance is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="capacitancePerUnitLength" type="capacitancePerUnitLength"/>
	<xs:complexType name="capacitancePerUnitLength">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="capacitanceUnits" use="optional" type="capacitanceUnits">
					<xs:annotation>
						<xs:documentation>The units in which the capacitance is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="lengthUnits" use="optional" type="lengthUnits">
					<xs:annotation>
						<xs:documentation>The units used for the reference length.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="resistivity" type="resistivity"/>
	<xs:complexType name="resistivity">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="resistivityUnits">
					<xs:annotation>
						<xs:documentation>The units in which the resistivity is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="frequency" type="frequency"/>
	<xs:complexType name="frequency">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="frequencyUnits">
					<xs:annotation>
						<xs:documentation>The units in which the frequency is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="temperature" type="temperature"/>
	<xs:complexType name="temperature">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="temperatureUnits">
					<xs:annotation>
						<xs:documentation>The units in which the temperature is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="resistivityUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Ohm-meter"/>
			<xs:enumeration value="Ohm-inch"/>
			<xs:enumeration value="Ohm-centimeter"/>
			<xs:enumeration value="Microohm-centimeter"/>
			<xs:enumeration value="Microohm-inch"/>
			<xs:enumeration value="Statohm-centimeter"/>
			<xs:enumeration value="Abohm-centimetercircular"/>
			<xs:enumeration value="Circular mil ohm/foot"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frequencyUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Hz"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Cycles per second"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="temperatureUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="degrees C"/>
			<xs:enumeration value="degrees K"/>
			<xs:enumeration value="degrees F"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="thermalCoefficientOfResistanceUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Reciprocal degrees C"/>
			<xs:enumeration value="Reciprocal degrees K"/>
			<xs:enumeration value="Reciprocal degrees F"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="pressureUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Pascal"/>
			<xs:enumeration value="Newton per square meter"/>
			<xs:enumeration value="PSI"/>
			<xs:enumeration value="Bar"/>
			<xs:enumeration value="Barye"/>
			<xs:enumeration value="Atmosphere"/>
			<xs:enumeration value="Millibar"/>
			<xs:enumeration value="Inch of Hg"/>
			<xs:enumeration value="Millimeter of Hg"/>
			<xs:enumeration value="Inch of water"/>
			<xs:enumeration value="Millimeter of water"/>
			<xs:enumeration value="Kip"/>
			<xs:enumeration value="Pound-force"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="angleUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Degrees"/>
			<xs:enumeration value="Minutes"/>
			<xs:enumeration value="Seconds"/>
			<xs:enumeration value="Radians"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="speedUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="mph"/>
			<xs:enumeration value="feet per second"/>
			<xs:enumeration value="km per hour"/>
			<xs:enumeration value="km per second"/>
			<xs:enumeration value="m per second"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="thicknessUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Mils"/>
			<xs:enumeration value="Inches"/>
			<xs:enumeration value="Micrometers"/>
			<xs:enumeration value="Millimeters"/>
			<xs:enumeration value="Centimeters"/>
			<xs:enumeration value="Microns"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="currencyCode">
		<xs:annotation>
			<xs:documentation>Three letter currency code as standardized in ISO4217-2001. Typically is the two letter Internet domain code for the country followed by a one letter designator for the currency; for instance the USA dollar is USD.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="USD"/>
			<xs:enumeration value="EUR"/>
			<xs:enumeration value="ADF"/>
			<xs:enumeration value="ADP"/>
			<xs:enumeration value="AED"/>
			<xs:enumeration value="AFN"/>
			<xs:enumeration value="ALL"/>
			<xs:enumeration value="AMD"/>
			<xs:enumeration value="ANG"/>
			<xs:enumeration value="AOA"/>
			<xs:enumeration value="ARS"/>
			<xs:enumeration value="ATS"/>
			<xs:enumeration value="AUD"/>
			<xs:enumeration value="AWG"/>
			<xs:enumeration value="AZN"/>
			<xs:enumeration value="BAM"/>
			<xs:enumeration value="BBD"/>
			<xs:enumeration value="BDT"/>
			<xs:enumeration value="BEF"/>
			<xs:enumeration value="BGN"/>
			<xs:enumeration value="BHD"/>
			<xs:enumeration value="BIF"/>
			<xs:enumeration value="BMD"/>
			<xs:enumeration value="BND"/>
			<xs:enumeration value="BOB"/>
			<xs:enumeration value="BOV"/>
			<xs:enumeration value="BRL"/>
			<xs:enumeration value="BSD"/>
			<xs:enumeration value="BTN"/>
			<xs:enumeration value="BWP"/>
			<xs:enumeration value="BYR"/>
			<xs:enumeration value="BZD"/>
			<xs:enumeration value="CAD"/>
			<xs:enumeration value="CDF"/>
			<xs:enumeration value="CHE"/>
			<xs:enumeration value="CHF"/>
			<xs:enumeration value="CHW"/>
			<xs:enumeration value="CLF"/>
			<xs:enumeration value="CLP"/>
			<xs:enumeration value="CNY"/>
			<xs:enumeration value="COP"/>
			<xs:enumeration value="COU"/>
			<xs:enumeration value="CRC"/>
			<xs:enumeration value="CUP"/>
			<xs:enumeration value="CVE"/>
			<xs:enumeration value="CYP"/>
			<xs:enumeration value="CZK"/>
			<xs:enumeration value="DEM"/>
			<xs:enumeration value="DJF"/>
			<xs:enumeration value="DKK"/>
			<xs:enumeration value="DOP"/>
			<xs:enumeration value="DZD"/>
			<xs:enumeration value="EEK"/>
			<xs:enumeration value="EGP"/>
			<xs:enumeration value="ERN"/>
			<xs:enumeration value="ESP"/>
			<xs:enumeration value="ETB"/>
			<xs:enumeration value="FIM"/>
			<xs:enumeration value="FJD"/>
			<xs:enumeration value="FKP"/>
			<xs:enumeration value="FRF"/>
			<xs:enumeration value="GBP"/>
			<xs:enumeration value="GEL"/>
			<xs:enumeration value="GHS"/>
			<xs:enumeration value="GIP"/>
			<xs:enumeration value="GMD"/>
			<xs:enumeration value="GNF"/>
			<xs:enumeration value="GRD"/>
			<xs:enumeration value="GTQ"/>
			<xs:enumeration value="GYD"/>
			<xs:enumeration value="HKD"/>
			<xs:enumeration value="HNL"/>
			<xs:enumeration value="HRK"/>
			<xs:enumeration value="HTG"/>
			<xs:enumeration value="HUF"/>
			<xs:enumeration value="IDR"/>
			<xs:enumeration value="IEP"/>
			<xs:enumeration value="ILS"/>
			<xs:enumeration value="INR"/>
			<xs:enumeration value="IQD"/>
			<xs:enumeration value="IRR"/>
			<xs:enumeration value="ISK"/>
			<xs:enumeration value="ITL"/>
			<xs:enumeration value="JMD"/>
			<xs:enumeration value="JOD"/>
			<xs:enumeration value="JPY"/>
			<xs:enumeration value="KES"/>
			<xs:enumeration value="KGS"/>
			<xs:enumeration value="KHR"/>
			<xs:enumeration value="KMF"/>
			<xs:enumeration value="KPW"/>
			<xs:enumeration value="KRW"/>
			<xs:enumeration value="KWD"/>
			<xs:enumeration value="KYD"/>
			<xs:enumeration value="KZT"/>
			<xs:enumeration value="LAK"/>
			<xs:enumeration value="LBP"/>
			<xs:enumeration value="LKR"/>
			<xs:enumeration value="LRD"/>
			<xs:enumeration value="LSL"/>
			<xs:enumeration value="LTL"/>
			<xs:enumeration value="LUF"/>
			<xs:enumeration value="LVL"/>
			<xs:enumeration value="LYD"/>
			<xs:enumeration value="MAD"/>
			<xs:enumeration value="MCF"/>
			<xs:enumeration value="MDL"/>
			<xs:enumeration value="MGA"/>
			<xs:enumeration value="MKD"/>
			<xs:enumeration value="MMK"/>
			<xs:enumeration value="MNT"/>
			<xs:enumeration value="MOP"/>
			<xs:enumeration value="MRO"/>
			<xs:enumeration value="MTL"/>
			<xs:enumeration value="MUR"/>
			<xs:enumeration value="MVR"/>
			<xs:enumeration value="MWK"/>
			<xs:enumeration value="MXN"/>
			<xs:enumeration value="MXV"/>
			<xs:enumeration value="MYR"/>
			<xs:enumeration value="MZN"/>
			<xs:enumeration value="NAD"/>
			<xs:enumeration value="NGN"/>
			<xs:enumeration value="NIO"/>
			<xs:enumeration value="NLG"/>
			<xs:enumeration value="NOK"/>
			<xs:enumeration value="NPR"/>
			<xs:enumeration value="NZD"/>
			<xs:enumeration value="OMR"/>
			<xs:enumeration value="PAB"/>
			<xs:enumeration value="PEN"/>
			<xs:enumeration value="PGK"/>
			<xs:enumeration value="PHP"/>
			<xs:enumeration value="PKR"/>
			<xs:enumeration value="PLN"/>
			<xs:enumeration value="PTE"/>
			<xs:enumeration value="PYG"/>
			<xs:enumeration value="QAR"/>
			<xs:enumeration value="RON"/>
			<xs:enumeration value="RSD"/>
			<xs:enumeration value="RUB"/>
			<xs:enumeration value="RWF"/>
			<xs:enumeration value="SAR"/>
			<xs:enumeration value="SBD"/>
			<xs:enumeration value="SCR"/>
			<xs:enumeration value="SDG"/>
			<xs:enumeration value="SEK"/>
			<xs:enumeration value="SGD"/>
			<xs:enumeration value="SHP"/>
			<xs:enumeration value="SIT"/>
			<xs:enumeration value="SKK"/>
			<xs:enumeration value="SLL"/>
			<xs:enumeration value="SML"/>
			<xs:enumeration value="SOS"/>
			<xs:enumeration value="SRD"/>
			<xs:enumeration value="STD"/>
			<xs:enumeration value="SYP"/>
			<xs:enumeration value="SZL"/>
			<xs:enumeration value="THB"/>
			<xs:enumeration value="TJS"/>
			<xs:enumeration value="TMM"/>
			<xs:enumeration value="TND"/>
			<xs:enumeration value="TOP"/>
			<xs:enumeration value="TRY"/>
			<xs:enumeration value="TTD"/>
			<xs:enumeration value="TWD"/>
			<xs:enumeration value="TZS"/>
			<xs:enumeration value="UAH"/>
			<xs:enumeration value="UGX"/>
			<xs:enumeration value="USN"/>
			<xs:enumeration value="USS"/>
			<xs:enumeration value="UYU"/>
			<xs:enumeration value="UZS"/>
			<xs:enumeration value="VAL"/>
			<xs:enumeration value="VEF"/>
			<xs:enumeration value="VND"/>
			<xs:enumeration value="VUV"/>
			<xs:enumeration value="WST"/>
			<xs:enumeration value="XAF"/>
			<xs:enumeration value="XAG"/>
			<xs:enumeration value="XAU"/>
			<xs:enumeration value="XBA"/>
			<xs:enumeration value="XBB"/>
			<xs:enumeration value="XBC"/>
			<xs:enumeration value="XBD"/>
			<xs:enumeration value="XCD"/>
			<xs:enumeration value="XDR"/>
			<xs:enumeration value="XEU"/>
			<xs:enumeration value="XFU"/>
			<xs:enumeration value="XOF"/>
			<xs:enumeration value="XPD"/>
			<xs:enumeration value="XPF"/>
			<xs:enumeration value="XPT"/>
			<xs:enumeration value="XTS"/>
			<xs:enumeration value="XXX"/>
			<xs:enumeration value="YER"/>
			<xs:enumeration value="ZAR"/>
			<xs:enumeration value="ZMK"/>
			<xs:enumeration value="ZWD"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="realPower" type="realPower"/>
	<xs:complexType name="realPower">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="realPowerUnits">
					<xs:annotation>
						<xs:documentation>Units in which this real power is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="reactivePower" type="reactivePower"/>
	<xs:complexType name="reactivePower">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="reactivePowerUnits">
					<xs:annotation>
						<xs:documentation>Units in which this reactive power is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="weightUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Pound"/>
			<xs:enumeration value="Kilogram"/>
			<xs:enumeration value="Gram"/>
			<xs:enumeration value="Centigram"/>
			<xs:enumeration value="Milligram"/>
			<xs:enumeration value="Microgram"/>
			<xs:enumeration value="Tonne"/>
			<xs:enumeration value="Grain"/>
			<xs:enumeration value="Ounce"/>
			<xs:enumeration value="Stone"/>
			<xs:enumeration value="Long ton"/>
			<xs:enumeration value="Short ton"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="voltageUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="V"/>
			<xs:enumeration value="kV"/>
			<xs:enumeration value="MV"/>
			<xs:enumeration value="mV"/>
			<xs:enumeration value="microV"/>
			<xs:enumeration value="Per Unit"/>
			<xs:enumeration value="Percent"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="apparentPower" type="apparentPower"/>
	<xs:complexType name="apparentPower">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="apparentPowerUnits">
					<xs:annotation>
						<xs:documentation>Units in which this apparent power is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="activePower" type="activePower"/>
	<xs:complexType name="activePower">
		<xs:annotation>
			<xs:documentation>Product of RMS value of the voltage and the RMS value of the in-phase component of the current (Megawatt).</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="realPowerUnits">
					<xs:annotation>
						<xs:documentation>Units in which this active power is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="realEnergy" type="realEnergy"/>
	<xs:complexType name="realEnergy">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="realEnergyUnits">
					<xs:annotation>
						<xs:documentation>Units in which this real energy is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="gpsPoint" type="gpsPoint"/>
	<xs:complexType name="gpsPoint">
		<xs:annotation>
			<xs:documentation>THE gpsPoint OBJECT HAS BEEN DEPRECATED. It will be replaced by the GPSLocation in V5.0.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="latitude" type="xs:double" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The latitude portion of a geographical location. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="longitude" type="xs:double" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The longitude portion of a geographical location</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="altitude" type="xs:double" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The altitude above mean sea level for this geographical location, assuming the use of the WGS84 geodetic datum.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="thermalCoefficientOfResistance" type="thermalCoefficientOfResistance"/>
	<xs:complexType name="thermalCoefficientOfResistance">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="thermalCoefficientOfResistanceUnits">
					<xs:annotation>
						<xs:documentation>Units of temperature coefficient.  It is suggested that temperatures are expressed in degrees C and that the coefficient is expressed in reciprocal degrees C.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="pressure" type="pressure"/>
	<xs:complexType name="pressure">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="pressureUnits">
					<xs:annotation>
						<xs:documentation>The units in which the pressure is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="angle" type="angle"/>
	<xs:complexType name="angle">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="angleUnits">
					<xs:annotation>
						<xs:documentation>The units in which this angle is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="exponent" type="exponent"/>
	<xs:complexType name="exponent">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" fixed="Exponent" type="xs:string"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="systemFrequency" type="systemFrequency"/>
	<xs:complexType name="systemFrequency">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" fixed="Hertz" type="xs:string">
					<xs:annotation>
						<xs:documentation>The units of system frequency.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="speed" type="speed"/>
	<xs:complexType name="speed">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="speedUnits">
					<xs:annotation>
						<xs:documentation>The units in which the speed is measured.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="weight" type="weight"/>
	<xs:complexType name="weight">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="weightUnits">
					<xs:annotation>
						<xs:documentation>The units in which the weight is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="weightPerLength" type="weightPerLength"/>
	<xs:complexType name="weightPerLength">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="weightUnits" use="optional" type="weightUnits">
					<xs:annotation>
						<xs:documentation>The units in which the weight is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="lengthUnits" use="optional" type="lengthUnits">
					<xs:annotation>
						<xs:documentation>The units used to express the reference length.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="thickness" type="thickness"/>
	<xs:complexType name="thickness">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="thicknessUnits">
					<xs:annotation>
						<xs:documentation>The units in which the thickness is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="money" type="money"/>
	<xs:complexType name="money">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="currencyCode" use="optional" type="currencyCode">
					<xs:annotation>
						<xs:documentation>Three letter currency code as standardized in ISO4217-2001. Typically is the two letter Internet domain code for the country followed by a one letter designator for the currency; for instance the USA dollar is USD.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="length" type="length"/>
	<xs:complexType name="length">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="lengthUnits">
					<xs:annotation>
						<xs:documentation>The units in which the length is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="rotation">
		<xs:annotation>
			<xs:documentation>Rotation angle for diplay of the feature, expressed in degrees measured clockwise from the vertical.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:float"/>
	</xs:simpleType>
	<xs:element name="timeZone" type="timeZone"/>
	<xs:complexType name="timeZone">
		<xs:annotation>
			<xs:documentation>This is the time zone for this location.  The time zone designator goes in the element, the attributes optioanlly give additional information about this time zone.  For instance the time zine for Denver, Colorado, USA is MT (Mountain Time).  Daylight savings time is enabled in Denver, so DSTEnabled = 1 or true.  The MT time zone is UTC - 7.00 hours when DST is not in effect, so the UTCOffest would be "-7.00".  On the other hand, Phoenix is also in the Moutain Time zone, but DST is not employed in Arizona.  For the case of Phoenix, all of the settings would be the same as for Denver, except that DSTEnabled would be false.  The standard civilian time zones (e.g., AT,ET,CT, MT, PT, and AKT for North America) are included for all global locations as are the military time zone designations (e.g. Z, A, B...). </xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="DSTEnabled" use="optional" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>This attribute determines if daylight savings time is enabled at this location.  If DSTEnabled is false then DST offsets are not used at this location.  Standard date ranges for DST effectiveness and DST offsets are assumed for this location.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="UTCOffset" use="required" type="xs:decimal">
					<xs:annotation>
						<xs:documentation>This is the offset in decimal hours from Universal Coordinated Time (UTC) for this timezone when daylight savings time is not in effect.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="name" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>Display name for this time zone.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="comment" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>Additional information about this time zone.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="mspLineObject" type="mspLineObject"/>
	<xs:complexType name="mspLineObject" abstract="true">
		<xs:annotation>
			<xs:documentation>This is the abstract class from which all objects inherit that include line geometry.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="GMLLine" type="gml:LineStringType" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="mspConnectivityLine" type="mspConnectivityLine"/>
	<xs:complexType name="mspConnectivityLine" abstract="true">
		<xs:annotation>
			<xs:documentation>This is an abstract class from which all objects inherit that have line geometry and that are part of a connectivity model.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspLineObject">
				<xs:sequence>
					<xs:element name="gridLocation" type="gridLocation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a string identifier for a traditional map location that is not based on either an x,y or lat/long coordinate system.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="annotationList" type="genericAnnotationFeatureList" minOccurs="0" maxOccurs="1"/>
					<xs:group ref="connectivityModelGroup" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="gridLocation">
		<xs:annotation>
			<xs:documentation>This is a string identifier for a traditional map location that is not based on either an x,y or lat/long coordinate system.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="genericAnnotationFeature" type="genericAnnotationFeature"/>
	<xs:complexType name="genericAnnotationFeature">
		<xs:annotation>
			<xs:documentation>Generic object for the exchange of annotation to be graphically displayed.  The text in the field "annotation" should be displayed at the scale and rotation specified and at the coordinate given in the "GMLLocation" field.  The text box should be aligned so that the the bottom left of the annotation text box with gutter space, if any, is aligned with the insertion point (GMLLocation).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="annotation" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the text to be displayed using this generic annotation feature.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="featureType" type="featureType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the type of feature modeled in a GIS.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="scale" type="scale" minOccurs="0" maxOccurs="1"/>
					<xs:element name="styleName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of the type of this text style.  Gives information about how this text is to be displayed. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="featureSubtype" type="featureSubtype" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="parentMeterList" type="parentMeterList"/>
	<xs:complexType name="parentMeterList">
		<xs:sequence>
			<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="featureType">
		<xs:annotation>
			<xs:documentation>This is the type of feature modeled in a GIS.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="featureSubtype">
		<xs:annotation>
			<xs:documentation>This attribute gives additional information on a feature type in a GIS.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="scale">
		<xs:restriction base="xs:float"/>
	</xs:simpleType>
	<xs:element name="genericAnnotationFeatureList" type="genericAnnotationFeatureList"/>
	<xs:complexType name="genericAnnotationFeatureList">
		<xs:annotation>
			<xs:documentation>This is an array of genericAnnotationFeatures.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="genericAnnotationFeature" type="genericAnnotationFeature" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="connectivitySections">
		<xs:sequence>
			<xs:element name="sectionID" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>In the case where connectivity models are expressed in terms of line sections, this is the section identifier for the section referenced by this object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="parentSectionID" type="objectRef" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation>This specifies the upline section in a section-based engineering connectivity model.  Use multiple parentSectionsIDs to model the case where two or more single phase elements come together to feed a multi-phase element.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:element name="objectRef" type="objectRef"/>
	<xs:complexType name="objectRef">
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="name" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>Name of instance of the object.  When used to describe an engineering line section, the name is the name of the section and is required.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="noun" use="required" type="xs:QName">
					<xs:annotation>
						<xs:documentation>The noun is the name of the object type that includes this instance.  For example, if instance is described by the MultiSpeak "substation" object then this field will contain "substation".</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="objectID" use="required" type="objectID">
					<xs:annotation>
						<xs:documentation>This is the identifier for the instance of the object.  objectID must be unique over the domain of the specific type of object.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="utility" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>A string identifier for the utility that owns the item being identified by this objectRef.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:group name="connectivityNodes">
		<xs:sequence>
			<xs:element name="fromNodeID" type="nodeIdentifier" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the node identifier for this feature ina node-oriented engineering connectivity model.  The connectivityNodeID must be unique. For series-connected devices this is one of the terminal nodes, the upstream node in radial systems.  For shunt-connected devices this is the point of attachment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="toNodeID" type="nodeIdentifier" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The connectivityNodeID must be unique if it exists. For series-connected devices this is one of the terminal nodes, the downstream node in a radial system.  For shunt-connected devices this connectivityNodeID refers to neutral, and thus often is not used.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:element name="mspSwitchingDevice" type="mspSwitchingDevice"/>
	<xs:complexType name="mspSwitchingDevice" abstract="true">
		<xs:annotation>
			<xs:documentation>This is the abstract class from which all switching devices inherit.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="eaEquipment" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description for the type of equipment in this section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="facilityID" type="facilityID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Utility facility identifier (company number).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phasing of this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="normalPosition" type="position" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The normal position of this device (NO, NC, or Unknown).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="operatingVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The operating voltage for this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="mounting" type="mounting" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of mounting (i.e. pad-,pole-, substation-, bus-mounted).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="nodeIdentifier" type="nodeIdentifier"/>
	<xs:complexType name="nodeIdentifier">
		<xs:annotation>
			<xs:documentation>This class identifies a node in a connectivity model.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="name" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>Name for engineering node.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="objectID" use="optional" type="objectID">
					<xs:annotation>
						<xs:documentation>This is a unique identifier for thehis node.  If a table of connectivityNode objects is included, then this objectID is the objectID of the entries in that table.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:group name="connectivityModelGroup">
		<xs:choice>
			<xs:group ref="connectivitySections" minOccurs="1" maxOccurs="1"/>
			<xs:group ref="connectivityNodes" minOccurs="1" maxOccurs="1"/>
		</xs:choice>
	</xs:group>
	<xs:element name="graphicSymbol" type="graphicSymbol"/>
	<xs:complexType name="graphicSymbol">
		<xs:sequence>
			<xs:element name="rotation" type="rotation" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Rotation angle (in degrees measured clockwise  from vertical) for this feature.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="scale" type="scale" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Scale factor (in per unit) for this feature.  For example, a scale factor of 1.1 means a 110% scale feom the default.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GMLLocation" type="gml:PointType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the x,y location at which this symbol should be displayed on a map display.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="featureType" type="featureType" minOccurs="0" maxOccurs="1"/>
			<xs:element name="featureSubtype" type="featureSubtype" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="graphicSymbolList" type="graphicSymbolList"/>
	<xs:complexType name="graphicSymbolList">
		<xs:sequence>
			<xs:element name="graphicSymbol" type="graphicSymbol" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="mspElectricPoint" type="mspElectricPoint"/>
	<xs:complexType name="mspElectricPoint" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspConnectivityPoint">
				<xs:sequence>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1"/>
					<xs:element name="load" type="mspLoadGroup" minOccurs="0" maxOccurs="1"/>
					<xs:element name="equipmentContainerID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to an equipment container that includes this device. Examples of possible equipment containers are: EquipmentContainer, Bay, and Line.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="phaseCode">
		<xs:restriction base="xs:string">
			<xs:enumeration value="A"/>
			<xs:enumeration value="B"/>
			<xs:enumeration value="C"/>
			<xs:enumeration value="N"/>
			<xs:enumeration value="AB"/>
			<xs:enumeration value="AC"/>
			<xs:enumeration value="BC"/>
			<xs:enumeration value="ABC"/>
			<xs:enumeration value="AN"/>
			<xs:enumeration value="BN"/>
			<xs:enumeration value="CN"/>
			<xs:enumeration value="ABN"/>
			<xs:enumeration value="ACN"/>
			<xs:enumeration value="BCN"/>
			<xs:enumeration value="ABCN"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="loadSection" type="loadSection"/>
	<xs:complexType name="loadSection">
		<xs:sequence>
			<xs:element name="loadMix" type="eaEquipID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Pointer to a loadMixEntry in the load mix catalog.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="loadGroup" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Load group name.  This is only meaningful if there is more than one load section.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="loadClass" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Revenue class for load in this load section (e.g., residential, commercial, industrial, etc.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="loadZone" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Description of load zone for section or section upstream of node.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="loadDistr" type="loadDistr" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Code for distribution of load on section.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="loadGrowth" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Percent load growth on section. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="interruptibleType" type="loadInterruptibleType" minOccurs="0" maxOccurs="1"/>
			<xs:element name="allocated" type="allocated" minOccurs="0" maxOccurs="1"/>
			<xs:element name="loadCurve" type="cpsm:LoadCurve" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a pointer to a SubLoadArea in the CPSM profile.  SubLoadAreas are further contained in LoadAreas in the CPSM profile.   The use of this element is not required for MultiSpeak transfers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="loadGroupID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Pointer to a grouping that includes this load (a ConformLoadGroup or NonconformLoadGroup in the CPSM profile).  The use of this element is not required for MultiSpeak transfers.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eaEquipID" type="eaEquipID"/>
	<xs:complexType name="eaEquipID">
		<xs:annotation>
			<xs:documentation>This is the foreign key to an engineering equipment cataloge entry.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="objectID" use="optional" type="objectID">
					<xs:annotation>
						<xs:documentation>This is the identifier for the type of engineering catalog entry.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="equipmentType" use="optional" type="equipmentType">
					<xs:annotation>
						<xs:documentation>This is the type of the engineering catalog entry.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="entryName" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the human-readable name for the specific type of equipment defined by this catalog entry.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="equipmentType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Conductor"/>
			<xs:enumeration value="Concentric neutral cable"/>
			<xs:enumeration value="Tape shield cable"/>
			<xs:enumeration value="Line construction"/>
			<xs:enumeration value="Secondary conductor"/>
			<xs:enumeration value="Service drop"/>
			<xs:enumeration value="Material attributes"/>
			<xs:enumeration value="Line environmental attributes"/>
			<xs:enumeration value="ROWAttributes"/>
			<xs:enumeration value="Material"/>
			<xs:enumeration value="Transformer"/>
			<xs:enumeration value="Regulator"/>
			<xs:enumeration value="Breaker"/>
			<xs:enumeration value="Fuse"/>
			<xs:enumeration value="Recloser"/>
			<xs:enumeration value="Sectionalizer"/>
			<xs:enumeration value="Switch"/>
			<xs:enumeration value="Load mix"/>
			<xs:enumeration value="Zsm impedance"/>
			<xs:enumeration value="InductionMachine"/>
			<xs:enumeration value="SynchronousMachine"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="allocatedLoad" type="allocatedLoad"/>
	<xs:complexType name="allocatedLoad">
		<xs:sequence>
			<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1"/>
			<xs:element name="realPower" type="realPower" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Real power load on this section.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="reactivePower" type="reactivePower" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>kVAr load on this section.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="noOfCustomers" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of customers allocated to this section.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="allocated" type="allocated"/>
	<xs:complexType name="allocated">
		<xs:annotation>
			<xs:documentation>An array of allocated loads.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="allocatedLoad" type="allocatedLoad" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="loadDistr">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Uniform"/>
			<xs:enumeration value="LoadEnd"/>
			<xs:enumeration value="SourceEnd"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="loadInterruptibleType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="General"/>
			<xs:enumeration value="Interruptible"/>
			<xs:enumeration value="Noninterruptible"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="loadSections" type="loadSections"/>
	<xs:complexType name="loadSections">
		<xs:sequence>
			<xs:element name="loadSection" type="loadSection" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="mspLoadGroup" type="mspLoadGroup"/>
	<xs:complexType name="mspLoadGroup" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="billRef" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Billing reference for load on this section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="loadSections" type="loadSections" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="mspElectricLine" type="mspElectricLine"/>
	<xs:complexType name="mspElectricLine" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspConnectivityLine">
				<xs:sequence>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1"/>
					<xs:element name="phaseList" type="phaseList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="condLength" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Length of conductor in section. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="construction" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of construction type used in section. This is a link to the catalog of line construction types optionally exchanged using the lineConstructionEntry object for overhead lines, concentricNeutralCableEntry,  or tapeShieldCableEntry for underground cables; secondaryConductorEntry for overhead secondary lines.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="load" type="mspLoadGroup" minOccurs="0" maxOccurs="1"/>
					<xs:element name="equipmentContainerID" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to an equipment container that includes this device.  Examples of possible equipment containers are: EquipmentContainer, Bay, and Line.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="phaseItem" type="phaseItem"/>
	<xs:complexType name="phaseItem">
		<xs:sequence>
			<xs:element name="phase" type="mspPhase" minOccurs="0" maxOccurs="1"/>
			<xs:element name="conductorType" type="eaEquipID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of conductor or cable for use in engineering database (I.E., 4/0 ACSR).  This is a link to the conductor type or cable type catalog.  This information optionally can be exchanged using the conductorEntry object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="positionNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="phaseList" type="phaseList"/>
	<xs:complexType name="phaseList">
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="phaseItem" type="phaseItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="mspMotorGenerator" type="mspMotorGenerator"/>
	<xs:complexType name="mspMotorGenerator" abstract="true">
		<xs:annotation>
			<xs:documentation>This is an abstract classfrom which all motors and generator classes inherit.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricPoint">
				<xs:sequence>
					<xs:element name="eaEquipment" type="eaEquipID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="mspBankObject" type="mspBankObject"/>
	<xs:complexType name="mspBankObject" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspElectricPoint">
				<xs:sequence>
					<xs:element name="isGrounded" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
					<xs:element name="groundingImpedance" type="complexImpedance" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="mspSwitchingBank" type="mspSwitchingBank"/>
	<xs:complexType name="mspSwitchingBank" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspBankObject">
				<xs:sequence>
					<xs:element name="isGanged" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if all phases contain similar devices that work together as a unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isRemotelyOperable" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if this device can be operated remotely</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="partner" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If switches are implemented as two sections, this field contains the identifier of this switch's partner switch.  If switches are implemented as one section, this field should not be used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ldPoint" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Is section a load allocation control point?</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="mspElectricalDefinition" type="mspElectricalDefinition"/>
	<xs:complexType name="mspElectricalDefinition" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="entryName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This name (e.g., 4/0 ACSR) is used as the eaEquimentID</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="equipmentType" type="equipmentType" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="facilityID">
		<xs:annotation>
			<xs:documentation>Utility facility identifier (company number).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="sizeUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AWG"/>
			<xs:enumeration value="kcmil"/>
			<xs:enumeration value="MCM"/>
			<xs:enumeration value="square mm"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="conductorEntry" type="conductorEntry"/>
	<xs:complexType name="conductorEntry">
		<xs:annotation>
			<xs:documentation>This item is used to define an entry in a conductor catalog.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="conductorSize" type="conductorSize" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Conductor size expressed in AWG, kcmil, or square mm cross-section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ampacity" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Current capacity at 25 degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stranding" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The stranding of the conductor, by layer.  For instance, a 266.8 MCM Partridge conductor has 26 conductors in the outer layer and 7 conductors in the inner layer, so its stranding would be "26/7".</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="material" type="material" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Material used in this conductor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="conductorName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the common supplemental or vendor designation for this conductor, for instance, 266.8 MCM 26/7 stranded ACSR is called Partridge. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="coreDiameter" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Diameter over the steel core in a stranded conductor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outsideDiameter" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outside diameter (over the conductor).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="GMR" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Geometric Mean Radius of conductor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rDC1" type="resistancePerUnitLength" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The DC resistance per length at 20 degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rAC1" type="resistancePerUnitLength" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The AC resistance per length at 25 degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rAC2" type="resistancePerUnitLength" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The AC resistance per length at 50 degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rAC3" type="resistancePerUnitLength" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The AC resistance per length at 75 degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="weightPerLength" type="weightPerLength" minOccurs="0" maxOccurs="1"/>
					<xs:element name="breakingStrength" type="weight" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Ultimate breaking strength of the conductor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="defaultStringingTension" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Expressed in percent of breaking strength.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="conductorSize" type="conductorSize"/>
	<xs:complexType name="conductorSize">
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="sizeUnits" use="optional" type="sizeUnits"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="accountsReceivable" type="accountsReceivable"/>
	<xs:complexType name="accountsReceivable">
		<xs:annotation>
			<xs:documentation>Money due on a customer account.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="acctsReceivable" type="acctsReceivable" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="stringType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="material">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AAAC"/>
			<xs:enumeration value="AAC"/>
			<xs:enumeration value="ACAR"/>
			<xs:enumeration value="ACSR"/>
			<xs:enumeration value="ACSR/T2"/>
			<xs:enumeration value="AlumoWeld"/>
			<xs:enumeration value="Anaconda"/>
			<xs:enumeration value="CopperWeld"/>
			<xs:enumeration value="CopperWeld copper"/>
			<xs:enumeration value="Expanded ACSR"/>
			<xs:enumeration value="Galvanized steel"/>
			<xs:enumeration value="Hard drawn aluminum"/>
			<xs:enumeration value="Hard drawn copper"/>
			<xs:enumeration value="HH hollow copper"/>
			<xs:enumeration value="High strength steel"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Stainless steel strand"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="percent">
		<xs:restriction base="xs:float"/>
	</xs:simpleType>
	<xs:element name="concentricNeutralCableEntry" type="concentricNeutralCableEntry"/>
	<xs:complexType name="concentricNeutralCableEntry">
		<xs:annotation>
			<xs:documentation>This object is used to define an entry in the concentric neutral (CN) cable catalog.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="conductorSize" type="conductorSize" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Conductor size of the core expressed in AWG, kcmil, or square mm cross-section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ampacity" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Current capacity at 25 degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="coreStranding" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of conductor strands.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="coreMaterial" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to a materialAttributes catalog entry.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseGMR" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Geometric Mean Radius of phase conductor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="insulationMaterial" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to the materialAttributeEntry for the insulation material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="insulationThickness" type="thickness" minOccurs="0" maxOccurs="1"/>
					<xs:element name="ODInsulation" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Diameter over the insulating layer</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ODScreen" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Diameter over the outer screen.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ODCore" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Diameter over the core screen.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ODNeutral" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Diameter over the concentric neutral strands.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CNMaterial" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Material used in the concentric neutral strands.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CNStrandSize" type="conductorSize" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Conductor size of the concentric neutral strands expressed in AWG, kcmil, or square mm cross-section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CNStrandCount" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Numer of concentric neutral strands</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isJacketed" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
					<xs:element name="ODJacket" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Diameter over the jacket.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rAC" type="resistancePerUnitLength" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>AC resistance per length at 25 degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="capacitance" type="capacitancePerUnitLength" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Capacitance, expressed in microFarads per unit length at 25 degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="coefficientOfFriction" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Coefficient of friction of the cable jacket material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="weightPerLength" type="weightPerLength" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Weight of the cable for a reference length.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maximumPullingTension" type="weight" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Maximum allowable pulling tension for this cable.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="minimumBendingRadius" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Minimum bending radius for this cable.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="accounts" type="accounts"/>
	<xs:complexType name="accounts">
		<xs:sequence>
			<xs:element name="account" type="account" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="billingCycle">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="budgBill">
		<xs:annotation>
			<xs:documentation>Budget billing code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="mspDateTime">
		<xs:annotation>
			<xs:documentation>ISO 8601 date time.  All dateTime fields will be formatted with UTC offsets.  The use of "Z" is acceptable to denote UTC or "Zulu" time.all dates will be formatted as:

2005-06-15T11:30:22.56-07:00  

where the date is in YYYY-MM-DD format and the time is in military time, beginning after the date-time separator &#8220;T&#8221;, in hh:mm:ss.ss format, followed by the time zone offset.  The use of fractional seconds is optional and any level of decimal precision in seconds is supported.  The time zone offset is shown as hh:mm offset from GMT, with either a positive offset (east of the prime meridian) or negative offset (west of the prime meridian).  </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:dateTime"/>
	</xs:simpleType>
	<xs:simpleType name="servType">
		<xs:annotation>
			<xs:documentation>Type of customer service.  Example enumerations are: "Residential", "Commerical", "Industrial", etc.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="meterReading" type="meterReading"/>
	<xs:complexType name="meterReading">
		<xs:annotation>
			<xs:documentation>This is one or more readings made on a single meter.  The meter could be a revenue meter or some other type of meter.  The readings can be any type of value that can be measured by the meter.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the identifier for a meter.  Note that the meter might be of different service types (for example: electric, gas, propane, water, etc.).  Since objectIDs are guarenteed to be unique only over the domain of one type of noun (class or object), it is necessary to specify both a serviceType and an objectID in order to ensure a unique instance of a meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deviceID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A unique identifer asigned by the AMR vendor.  For instance this may be an "endPointID" or a "transponderID".</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="readingValues" type="readingValues" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="meterID" type="meterID"/>
	<xs:complexType name="meterID">
		<xs:annotation>
			<xs:documentation>This is the identifier for a meter.  Note that the meter might be of different service types (for example: electric, gas, propane, water, etc.). Since objectIDs are guaranteed to be unique only over the domain of one type of noun (class or object), it is necessary to specify both a serviceType and an objectID in order to ensure a unique instance of a meter.  The value of the meterID should contain a string concatenated as utility.serviceType.objectID</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="meterNo" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>Meter number.  This is a utility-assigned, human readable number.  The objectID of the meter is called meterID.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="serviceType" use="optional" type="serviceType">
					<xs:annotation>
						<xs:documentation>This identifies the type of service this meter records.  For instance for an electricMeter, the serviceType would be "Electric".  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="objectID" use="required" type="objectID">
					<xs:annotation>
						<xs:documentation>The index or key that uniquely identifies an instance of this type of object. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="utility" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is a string identifier for the utility that owns this meter.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="serviceType">
		<xs:annotation>
			<xs:documentation>The type of utility service.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Electric"/>
			<xs:enumeration value="Gas"/>
			<xs:enumeration value="Water"/>
			<xs:enumeration value="Propane"/>
			<xs:enumeration value="Refuse"/>
			<xs:enumeration value="Sewer"/>
			<xs:enumeration value="Telecom"/>
			<xs:enumeration value="TV"/>
			<xs:enumeration value="Cable"/>
			<xs:enumeration value="Heating"/>
			<xs:enumeration value="Steam"/>
			<xs:enumeration value="Transportation"/>
			<xs:enumeration value="All"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="readingValue" type="readingValue"/>
	<xs:complexType name="readingValue">
		<xs:annotation>
			<xs:documentation>A reading taken by a meter.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="units" type="uom" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Units of measure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Value of reading.  Units for this reading are contained in the "units" element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ratePeriod" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Metering slot, TOU bin or bucket.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="readingType" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This string carries the classification of the reading.  Suggested enumeration values include: 
Outage
Billing
Voltage
Phase
Water usage
Gas usage
Propane usage</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="fieldName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the reading value type described as a fieldName as listed in the latest version of the FormattedBlock Implementations Guidelines Document, published by the MultiSpeak Initiative.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This field is an optional description of the type of reading contained in this object.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="measurementPeriod" type="measurementPeriod" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The period during which this reading was taken.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="timeStamp" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="readingStatusCode" type="readingStatusCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a three-part code that describes the status or quality of a meter reading.  For additional information about these reading statusCode definitions, see the definitions for QualityCodes in IEC 61968-9, Annex D. meanings. The readingStatusCode that is included in the data field shall consist of a dotted notation where the readingStatusCode value = originatingSystemID.codeCategory.codeIndex.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="readingTypeCode" type="readingTypeCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the readingType identifier as recommended in Annex C of IEC 61968-9.  An example of the readingTypeCode would be "2.6.7.1.0.12.0.0.0.3.72".  The readingTypeCode is built up by concatenating the numerical values of each of the attributes (except "name") in this element.  Note that several of the attributes as defined in IEC61968-9 are compound, so that the total number of attributes does not match the total number of concatenated values.  The readingTypeCode given above corresponds to "15-minute IntervalData Forward Energy, (kWh)".</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="readingValueType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Energy"/>
			<xs:enumeration value="Negative Energy"/>
			<xs:enumeration value="Current demand"/>
			<xs:enumeration value="Max demand"/>
			<xs:enumeration value="Min demand"/>
			<xs:enumeration value="Current Voltage"/>
			<xs:enumeration value="Max Voltage"/>
			<xs:enumeration value="Min Voltage"/>
			<xs:enumeration value="Current Voltage Phase A"/>
			<xs:enumeration value="Current Voltage Phase B"/>
			<xs:enumeration value="Current Voltage Phase C"/>
			<xs:enumeration value="Max Voltage Phase A"/>
			<xs:enumeration value="Max Voltage Phase B"/>
			<xs:enumeration value="Max Voltage Phase C"/>
			<xs:enumeration value="Min Voltage Phase A"/>
			<xs:enumeration value="Min Voltage Phase B"/>
			<xs:enumeration value="Min Voltage Phase C"/>
			<xs:enumeration value="Current kVAr"/>
			<xs:enumeration value="Max kVar"/>
			<xs:enumeration value="Min kVar"/>
			<xs:enumeration value="kVar at demand peak"/>
			<xs:enumeration value="Current power factor"/>
			<xs:enumeration value="Max power factor"/>
			<xs:enumeration value="Min power factor"/>
			<xs:enumeration value="Current frequency"/>
			<xs:enumeration value="Max frequency"/>
			<xs:enumeration value="Min frequency"/>
			<xs:enumeration value="Momentary interruptions count"/>
			<xs:enumeration value="Sustained interruptions count"/>
			<xs:enumeration value="Sustained interruptions duration"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="measurementPeriod">
		<xs:annotation>
			<xs:documentation>Period during which this reading was taken.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Current"/>
			<xs:enumeration value="Previous"/>
			<xs:enumeration value="Previous Season"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="readingValues" type="readingValues"/>
	<xs:complexType name="readingValues">
		<xs:sequence>
			<xs:element name="readingValue" type="readingValue" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="TOUReading" type="TOUReading"/>
	<xs:complexType name="TOUReading">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="ratePeriod" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>TOU rate period or "bin".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="kWh" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Energy recorded.  Expressed in kWh.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="kW" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Demand recorded.  Expressed in kW.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="kWDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Date and time that the peak demand occurred.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="TOUReadings" type="TOUReadings"/>
	<xs:complexType name="TOUReadings">
		<xs:annotation>
			<xs:documentation>It is recommended that data from all TOU registers are passed in this data structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TOUReading" type="TOUReading" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="meterReadingC1219" type="meterReadingC1219"/>
	<xs:complexType name="meterReadingC1219">
		<xs:annotation>
			<xs:documentation>This is the meter reading object that originally was developed from ANSI C12.19.  It was called meterReading in MultiSpeak Version 3.0.  ITS USE HAS BEEN DEPRECATED IN VERSION 4.0.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the identifier for a meter.  Note that the meter might be of different service types (for example: electric, gas, propane, water, etc.).  Since objectIDs are guarenteed to be unique only over the domain of one type of noun (class or object), it is necessary to specify both a serviceType and an objectID in order to ensure a unique instance of a meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterNo" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter number.  This is a utility-assigned, human readable number.  The objectID of the meter is called meterID.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="dateTime" type="xs:dateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time when this reading was recorded at the meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="acquisitionTime" type="xs:dateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time when this reading was received by the AMR station.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="season" type="xs:unsignedByte" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Current season value when the snapshot of the current register data occurred. Values between 1-256 are acceptable as input.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numberOfResets" type="xs:unsignedInt" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of resets recorded by the meter. This number is incremented by one every time a demand reset is done.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="status" type="readingStatus" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>This is the meter reading status as defined by ANSI C12.19.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="registers" type="registers" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="readingStatus">
		<xs:annotation>
			<xs:documentation>This is the meter reading status as defined by ANSI C12.19.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="suspiciousRead"/>
			<xs:enumeration value="DSTinEffect"/>
			<xs:enumeration value="manuallyUpdated"/>
			<xs:enumeration value="manuallyEntered"/>
			<xs:enumeration value="reset"/>
			<xs:enumeration value="seasonChange"/>
			<xs:enumeration value="firstRead"/>
			<xs:enumeration value="billingRead"/>
			<xs:enumeration value="afterCorrection"/>
			<xs:enumeration value="beforeCorrection"/>
			<xs:enumeration value="finalRead"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="formattedBlockTemplate" type="formattedBlockTemplate"/>
	<xs:complexType name="formattedBlockTemplate">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="templateName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the readable name of this formattedBlockTemplate.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="formattedBlock" type="formattedBlock" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="outageAttachments" type="outageAttachments"/>
	<xs:complexType name="outageAttachments">
		<xs:sequence>
			<xs:element name="outageAttachment" type="outageAttachment" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is a message that describes the outageEventStatus in either a Text-to-Speech transcription or recorded voice file.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageAttachment" type="outageAttachment"/>
	<xs:complexType name="outageAttachment">
		<xs:annotation>
			<xs:documentation>This is a message that describes the outageEventStatus in either a Text-to-Speech transcription or recorded voice file.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="attachmentID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the objectID pointer for an attachment containing a voice recording describing this outageEvent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="transcription" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This would be the text used for a Text-To-Speech engine to generate a phonetically correct audio message.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:element name="registers" type="registers"/>
	<xs:complexType name="registers">
		<xs:annotation>
			<xs:documentation>One 'registers' element is created for each billing tier of a reading and contains all registers for that tier. Total registers are identified by the absence of the 'tier' attribute. The first tier is identified by the 'tier' attribute set to 1, the second tier is identify by the 'tier' attribute set to 2,</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:choice minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Maximum or minimum flow. This quantity is described by a 'source' element included in the same file and located the 'sourceId' attribute. The 'type' attribute defines if the value reported is a maximum or a minimum flow. The 'occurrence' attribute defines which maximum or minimum is reported for the reading period, one means first highest, two means second highest, ... . The 'dateTime' attribute defines when this value has been recorded by the meter.</xs:documentation>
				</xs:annotation>
				<xs:element name="summation" type="summation" minOccurs="1" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>Summation of a quantity.  For instance, the total kWh delivered through a meter. This quantity is described by a 'source' element included in the same file and located the 'sourceId' attribute.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="demand" type="flowDemand" minOccurs="1" maxOccurs="1"/>
				<xs:element name="cumDemand" type="cumDemand" minOccurs="1" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>Maximum or minimum cumulative demand. This quantity is described by a 'source' element included in the same file and located the 'sourceId' attribute. The 'type' attribute defines if this value is a minimum or maximum, cumulative or continuous cumulative. A cumulative demand represents the summation of a maximum or minimum demand during each reset. A continuous cumulative demand represents the summation of a maximum or minimum demand updated each time a minimum or maximum is reached.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="coincidentalValue" type="coincidentalValue" minOccurs="1" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>A coincidental value represents a quantity recorded at the same time as a maximum or minimum demand. For example, the voltage when the maximum demand is reached represents a coincidental value. A coincidental value is described by a 'source' element included in the same file and located by the 'sourceId' attribute. The associated maximum or minimum demand used as a trigger for this measurement is defined by the 'triggerSourceId' attribute.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="tier" use="optional" type="xs:unsignedInt"/>
	</xs:complexType>
	<xs:element name="summation" type="summation"/>
	<xs:complexType name="summation">
		<xs:annotation>
			<xs:documentation>Summation of a quantity.  For instance, the total kWh delivered through a meter. This quantity is described by a 'source' element included in the same file and located the 'sourceId' attribute.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="doubleType">
				<xs:attribute name="sourceID" use="optional" type="xs:unsignedInt"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="doubleType">
		<xs:restriction base="xs:double"/>
	</xs:simpleType>
	<xs:element name="flowDemand" type="flowDemand"/>
	<xs:complexType name="flowDemand">
		<xs:annotation>
			<xs:documentation>This object is used only in the meterReadingC12.19 class, which has been deprecated in Version 4.0.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="doubleType">
				<xs:attribute name="sourceID" use="optional" type="xs:unsignedInt"/>
				<xs:attribute name="flowDemandType" use="optional" type="flowDemandType">
					<xs:annotation>
						<xs:documentation>This enumeration is used only in the C12.19Reading class, which has been deprecated in Version 4.0.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="occurrence" use="optional" type="xs:unsignedByte"/>
				<xs:attribute name="dateTime" use="optional" type="xs:dateTime"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="flowDemandType">
		<xs:annotation>
			<xs:documentation>This enumeration is used only in the C12.19Reading class, which has been deprecated in Version 4.0.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="min"/>
			<xs:enumeration value="max"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="cumDemand" type="cumDemand"/>
	<xs:complexType name="cumDemand">
		<xs:simpleContent>
			<xs:extension base="doubleType">
				<xs:attribute name="sourceID" use="optional" type="xs:unsignedInt"/>
				<xs:attribute name="cumDemandType" use="optional" type="cumDemandType"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="cumDemandType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="max"/>
			<xs:enumeration value="min"/>
			<xs:enumeration value="continousMax"/>
			<xs:enumeration value="continousMin"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="coincidentalValue" type="coincidentalValue"/>
	<xs:complexType name="coincidentalValue">
		<xs:annotation>
			<xs:documentation>A coincidental value represents a quantity recorded at the same time as a maximum or minimum demand. For example, the voltage when the maximum demand is reached represents a coincidental value. A coincidental value is described by a 'source' element included in the same file and located by the 'sourceId' attribute. The associated maximum or minimum demand used as a trigger for this measurement is defined by the 'triggerSourceId' attribute.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="doubleType">
				<xs:attribute name="sourceID" use="optional" type="xs:unsignedInt"/>
				<xs:attribute name="triggerSourceID" use="optional" type="xs:unsignedInt"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="skill" type="skill"/>
	<xs:complexType name="skill">
		<xs:annotation>
			<xs:documentation>This is a skill that a person can have.  Skills are used to determince which persons are qualified to perform what types of work.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="category" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The class of skill.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Description of this skill.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="certifiedDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The data and time that the person was certified on this skill.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="effectiveDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The date and time that the person's qualification took effect.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The date and time that the person's qualification expires.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="level" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Level of certification on this skill.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="position">
		<xs:restriction base="xs:string">
			<xs:enumeration value="NO"/>
			<xs:enumeration value="NC"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="mounting">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Bus-mounted"/>
			<xs:enumeration value="Pole-mounted"/>
			<xs:enumeration value="Pad-mounted"/>
			<xs:enumeration value="Vault-mounted"/>
			<xs:enumeration value="Substation"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="switchImpedances" type="switchImpedances"/>
	<xs:complexType name="switchImpedances">
		<xs:annotation>
			<xs:documentation>These values are not used in MultiSpeak, but are included for CIM compatibility.In MultiSpeak the switch is defined in a switchEntry.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="r" type="resistance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="x" type="reactance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="r0" type="resistance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="x0" type="reactance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="b" type="susceptance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="b0" type="susceptance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="g" type="conductance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="g0" type="conductance" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="switch" type="switch"/>
	<xs:complexType name="switch">
		<xs:complexContent>
			<xs:extension base="mspSwitchingDevice">
				<xs:sequence>
					<xs:element name="switchImpedances" type="switchImpedances" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>These values are not used in MultiSpeak, but are included for CIM compatibility.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="elbow" type="elbow"/>
	<xs:complexType name="elbow">
		<xs:annotation>
			<xs:documentation>This is a specialization of a switch to model an elbow in a pad-mounted primary cabinet.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspSwitchingDevice">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="receivableType">
		<xs:annotation>
			<xs:documentation>The type of accounts receivable.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Current"/>
			<xs:enumeration value="Balance"/>
			<xs:enumeration value="30"/>
			<xs:enumeration value="60"/>
			<xs:enumeration value="90"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="configuredReadingType" type="configuredReadingType"/>
	<xs:complexType name="configuredReadingType">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="units" type="uom" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Units of measure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="readingType" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This string carries the classification of the reading.  Suggested enumeration values include: 
Outage
Billing
Voltage
Phase
Water usage
Gas usage
Propane usage</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="fieldName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the reading value type described as a fieldName as listed in the latest version of the FormattedBlock Implementations Guidelines Document, published by the MultiSpeak Initiative.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This field is an optional description of the type of reading contained in this object.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="readingTypeCode" type="readingTypeCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the readingType identifier as recommended in Annex C of IEC 61968-9.  An example of the readingTypeCode would be "2.6.7.1.0.12.0.0.0.3.72".  The readingTypeCode is built up by concatenating the numerical values of each of the attributes (except "name") in this element.  Note that several of the attributes as defined in IEC61968-9 are compound, so that the total number of attributes does not match the total number of concatenated values.  The readingTypeCode given above corresponds to "15-minute IntervalData Forward Energy, (kWh)".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TOUSchedules" type="TOUSchedules" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="timeUnits">
		<xs:annotation>
			<xs:documentation>Units of time</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Milliseconds"/>
			<xs:enumeration value="Seconds"/>
			<xs:enumeration value="Minutes"/>
			<xs:enumeration value="Hours"/>
			<xs:enumeration value="Days"/>
			<xs:enumeration value="Weeks"/>
			<xs:enumeration value="Months"/>
			<xs:enumeration value="Years"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="time" type="time"/>
	<xs:complexType name="time">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="timeUnits">
					<xs:annotation>
						<xs:documentation>Units of time</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="seconds" type="seconds"/>
	<xs:complexType name="seconds">
		<xs:annotation>
			<xs:documentation>Time expressed in seconds</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" fixed="Seconds" type="xs:string">
					<xs:annotation>
						<xs:documentation>"Seconds"</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="impedances" type="impedances"/>
	<xs:complexType name="impedances">
		<xs:annotation>
			<xs:documentation>Impedance values are only used in the CPSM profile.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="r" type="resistance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Positive sequence resistance</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="x" type="reactance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Positive sequence reactance.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="capacitor" type="capacitor"/>
	<xs:complexType name="capacitor">
		<xs:annotation>
			<xs:documentation>Capacitor unit that might be installed in a capacitor bank.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phasing for this capacitor unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="reactiveRating" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the total reactive power rating for this phase.  If the capacitor has one section per phase,typical for distribution applications, then this is the total reactive power for this phase.  If the capacitor can be operated in sections (typically only for transmission substations), then this rating is the product of the reactiveRatingPerSection and the maximumSections.  In the CPSM profile, if this value is positive, the ShuntCompensator is operating as a capacitor; if the rating is negative then the ShuntCompensator is operating as an inductor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="reactivePerSection" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reactive power rating for one section in this phase.  This value is only used if the capacitor has multiple sections per phase (typically transmission substations).  This is required for the CPSM profile.In the CPSM profile, if this value is positive, the ShuntCompensator is operating as a capacitor; if the rating is negative then the ShuntCompensator is operating as an inductor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maximumSections" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the maximum number of sections of capacitor that can be operated in this phase. This value should only be included for a capacitor that has multiple sections per phase, typically a transmission substation. This is required for the CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="normalSections" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the number of sections of capacitors that normally are operated in this phase.  This value should only be included for a capacitor that has multiple sections per phase, typically a transmission substation.  This value is required for the CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="capacitorList" type="capacitorList"/>
	<xs:complexType name="capacitorList">
		<xs:sequence>
			<xs:element name="capacitor" type="capacitor" minOccurs="0" maxOccurs="3"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="transformerBank" type="transformerBank"/>
	<xs:complexType name="transformerBank">
		<xs:complexContent>
			<xs:extension base="mspBankObject">
				<xs:sequence>
					<xs:element name="bankRatings" type="bankRatings" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>These ratings apply to a transformer bank, or if the bank consists of a single unit, for the unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="windingCode" type="wdgCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the phase on which the center tap occurs, on a center-tapped transformer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="centerTapPhase" type="mspPhase" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the phase on which the center tap occurs, on a center-tepped transformer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of transformer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="mounting" type="mounting" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of mounting for this bank.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="tertiarySectionID" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Tertiary section identifier.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="secondaryProtection" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of secondary protection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="primaryProtection" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of primary protection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transformerList" type="transformerList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If the transformer bank consists of multiple units, each unit should be included individually here.  A single three-phase unit can be included here for a MultiSpeak data exchange.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="electricLocationFields" type="electricLocationFields" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="gasMeter" type="gasMeter"/>
	<xs:complexType name="gasMeter">
		<xs:complexContent>
			<xs:extension base="mspMeter">
				<xs:sequence>
					<xs:element name="gasNameplate" type="gasNameplate" minOccurs="0" maxOccurs="1"/>
					<xs:element name="gasLocationFields" type="gasLocationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterConnectionStatus" type="meterConnectionStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="configuredReadingTypes" type="configuredReadingTypes" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterCommAddress" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the addressing information that is used to communicate with the meter. This element is used when multiple meters are addressed using a single communication device (module). This identifier allows the CIS (or other inventory management) system to identify to the AMI system what port a meter is connected to on AMI devices that support multiple meters connected to a single AMI device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="billingStatusInformation" type="billingStatusInformation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="remoteReconnectSetting" type="remoteReconnectSetting" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the setting in the CIS for the desired remote reconnection setting for this meter. The allowable values are: Connect, which means that the meter shall be reconnected remotely without requiring additional action when a connect/reconnect signal is received; Arm, which means that the the meter shall be armed for reconnection and the utility's process followed for reconnection with arming prior to connecting/reconnecting the meter; PowerLimitation, which means that the meter shall be reconnected but immediately placed into power limitation mode; CISAuthRequired, which means that when payment is received, Connect or Arm does not occur automatically. Authorization from the CIS application is required before the meter may be connected or armed; None, which means that no remote connection/reconnection should be completed on this meter even if the meter is so configured and enabled; Other, which means that there is some other setting that is not included in this list; or Unknown, which means that the remoteReconnectSetting is not known or not set by the CIS, in which case the AMI head-end system should follow its own business rules in determining whether or not to connect/reconnect a meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="gasNameplate" type="gasNameplate"/>
	<xs:complexType name="gasNameplate">
		<xs:sequence>
			<xs:element name="mechanicalForm" type="mechanicalForm" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Mechanical form of gas meter (from C12.19).

0 - Unclassified
1 - Bellows meter
2 - Rotary
3 - Turbine meter
4 - Fluidic oscillator
5 - Anemometer</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="measurementSystem" type="measurementSystem" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Measuement system for meter (from C12.19).

0 - English
1 - Metric</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="gasPressure" type="gasPressure" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Maximum design pressure of meter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="gasFlow" type="gasFlow" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Maximum design flow rate.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="gearDriveSize" type="gearDriveSize" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gear drive size code from ANSI C12.19:
          English        Metric
0 -   None             None
1 -  1/2 cu ft        .01 or .015 cu m
2 - 1.0 cu ft        .02 cu m
3 - 2 cu ft           .05 cu m
4 - 5 cu ft           0.1 cu m
5 - 10 cu ft         0.2 cu m
6 - 100 cu ft       1.0 cu m
7 - 1000 cu ft     10 cu m</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="internalPipeDiameter" type="internalPipeDiameter" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Pipe size (from ANSI C12.19).
      English           Metric
0 - None             None
1 - 1/2"                 13 mm
2 - 5/8"                15 mm
3 - 3/4"                20 mm
4 - 1"                   25 mm
5 - 1 1/2"             40 mm
6 - 2"                   50 mm
7 - 4"                 100 mm
8 - 6"                 160 mm
9 - 8"                 200 mm
10 - 10"             250 mm
11 - 12"             300 mm
12 - 14"             350 mm
13 - 16"             400 mm
14 - 18"             450 mm
15 - 20"             500 mm
16 - 22"             Not standard 
17 - 24"             600 mm
18 - 26"             Not standard
19 - 28"             Not standard
20 - 30"             Not standard
21 - 32"             800 mm
22 - 34"             Not Standard
23 - 36"             900 mm</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="temperatureCompensationType" type="temperatureCompensationType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gas meter temperature compensation type code from ANSI C12.19:

0 - Uncompensated
1 - Mechanical
2 - Sensor</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="pressureCompensationType" type="pressureCompensationType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gas meter pressure compensation type code from ANSI C12.19:

0 - Uncompensated
1 - Mechanical
2 - Sensor</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="mechanicalForm">
		<xs:annotation>
			<xs:documentation>Mechanical form of gas meter (from C12.19).

0 - Unclassified
1 - Bellows meter
2 - Rotary
3 - Turbine meter
4 - Fluidic oscillator
5 - Anemometer</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
			<xs:enumeration value="5"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="measurementSystem">
		<xs:annotation>
			<xs:documentation>Measuement system for meter (from C12.19).

0 - English
1 - Metric</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="gasPressure" type="gasPressure"/>
	<xs:complexType name="gasPressure">
		<xs:annotation>
			<xs:documentation>Maximum design pressure of meter.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="maxPressureUOM" use="optional" type="pressureUnits">
					<xs:annotation>
						<xs:documentation>Pressure units used to express the maximum pressure.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="genericPolygonFeatureList" type="genericPolygonFeatureList"/>
	<xs:complexType name="genericPolygonFeatureList">
		<xs:sequence>
			<xs:element name="genericPolygonFeature" type="genericPolygonFeature" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ohSecondaryLine" type="ohSecondaryLine"/>
	<xs:complexType name="ohSecondaryLine">
		<xs:annotation>
			<xs:documentation>A section of secondary line that is constructed using overhead construction.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricLine">
				<xs:sequence>
					<xs:element name="secondaryType" type="secondaryType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="operatingVoltage" type="voltage" minOccurs="0" maxOccurs="1"/>
					<xs:element name="lengthSrc" type="lengthSrc" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The source of the length measurement on this line section.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="gasFlow" type="gasFlow"/>
	<xs:complexType name="gasFlow">
		<xs:annotation>
			<xs:documentation>Maximum design flow rate.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="maxFlowRateUOM" use="optional" type="uom">
					<xs:annotation>
						<xs:documentation>Units of flow rate.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="gearDriveSize">
		<xs:annotation>
			<xs:documentation>Gear drive size code from ANSI C12.19:
          English        Metric
0 -   None             None
1 -  1/2 cu ft        .01 or .015 cu m
2 - 1.0 cu ft        .02 cu m
3 - 2 cu ft           .05 cu m
4 - 5 cu ft           0.1 cu m
5 - 10 cu ft         0.2 cu m
6 - 100 cu ft       1.0 cu m
7 - 1000 cu ft     10 cu m</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
			<xs:enumeration value="5"/>
			<xs:enumeration value="6"/>
			<xs:enumeration value="7"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="internalPipeDiameter">
		<xs:annotation>
			<xs:documentation>Pipe size (from ANSI C12.19).
      English           Metric
0 - None             None
1 - 1/2"                 13 mm
2 - 5/8"                15 mm
3 - 3/4"                20 mm
4 - 1"                   25 mm
5 - 1 1/2"             40 mm
6 - 2"                   50 mm
7 - 4"                 100 mm
8 - 6"                 160 mm
9 - 8"                 200 mm
10 - 10"             250 mm
11 - 12"             300 mm
12 - 14"             350 mm
13 - 16"             400 mm
14 - 18"             450 mm
15 - 20"             500 mm
16 - 22"             Not standard 
17 - 24"             600 mm
18 - 26"             Not standard
19 - 28"             Not standard
20 - 30"             Not standard
21 - 32"             800 mm
22 - 34"             Not Standard
23 - 36"             900 mm</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
			<xs:enumeration value="5"/>
			<xs:enumeration value="6"/>
			<xs:enumeration value="7"/>
			<xs:enumeration value="8"/>
			<xs:enumeration value="9"/>
			<xs:enumeration value="10"/>
			<xs:enumeration value="11"/>
			<xs:enumeration value="12"/>
			<xs:enumeration value="13"/>
			<xs:enumeration value="14"/>
			<xs:enumeration value="15"/>
			<xs:enumeration value="16"/>
			<xs:enumeration value="17"/>
			<xs:enumeration value="18"/>
			<xs:enumeration value="19"/>
			<xs:enumeration value="20"/>
			<xs:enumeration value="21"/>
			<xs:enumeration value="22"/>
			<xs:enumeration value="23"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="temperatureCompensationType">
		<xs:annotation>
			<xs:documentation>Gas meter temperature compensation type code from ANSI C12.19:

0 - Uncompensated
1 - Mechanical
2 - Sensor</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="pressureCompensationType">
		<xs:annotation>
			<xs:documentation>Gas meter pressure compensation type code from ANSI C12.19:

0 - Uncompensated
1 - Mechanical
2 - Sensor</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="gasLocationFields" type="gasLocationFields"/>
	<xs:complexType name="gasLocationFields">
		<xs:sequence>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="propaneMeter" type="propaneMeter"/>
	<xs:complexType name="propaneMeter">
		<xs:complexContent>
			<xs:extension base="mspMeter">
				<xs:sequence>
					<xs:element name="propaneNameplate" type="propaneNameplate" minOccurs="0" maxOccurs="1"/>
					<xs:element name="propaneLocationFields" type="propaneLocationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterConnectionStatus" type="meterConnectionStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="configuredReadingTypes" type="configuredReadingTypes" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterCommAddress" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the addressing information that is used to communicate with the meter. This element is used when multiple meters are addressed using a single communication device (module). This identifier allows the CIS (or other inventory management) system to identify to the AMI system what port a meter is connected to on AMI devices that support multiple meters connected to a single AMI device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="billingStatusInformation" type="billingStatusInformation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="remoteReconnectSetting" type="remoteReconnectSetting" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the setting in the CIS for the desired remote reconnection setting for this meter. The allowable values are: Connect, which means that the meter shall be reconnected remotely without requiring additional action when a connect/reconnect signal is received; Arm, which means that the the meter shall be armed for reconnection and the utility's process followed for reconnection with arming prior to connecting/reconnecting the meter; PowerLimitation, which means that the meter shall be reconnected but immediately placed into power limitation mode; CISAuthRequired, which means that when payment is received, Connect or Arm does not occur automatically. Authorization from the CIS application is required before the meter may be connected or armed; None, which means that no remote connection/reconnection should be completed on this meter even if the meter is so configured and enabled; Other, which means that there is some other setting that is not included in this list; or Unknown, which means that the remoteReconnectSetting is not known or not set by the CIS, in which case the AMI head-end system should follow its own business rules in determining whether or not to connect/reconnect a meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="propaneNameplate" type="propaneNameplate"/>
	<xs:complexType name="propaneNameplate">
		<xs:complexContent>
			<xs:extension base="gasNameplate">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="propaneLocationFields" type="propaneLocationFields"/>
	<xs:complexType name="propaneLocationFields">
		<xs:sequence>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="receivedElectricMeter" type="receivedElectricMeter"/>
	<xs:complexType name="receivedElectricMeter">
		<xs:complexContent>
			<xs:extension base="mspMeter">
				<xs:sequence>
					<xs:element name="electricNameplate" type="electricNameplate" minOccurs="0" maxOccurs="1"/>
					<xs:element name="manufacturedDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="purchasePrice" type="money" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="testedElectricMeter" type="testedElectricMeter"/>
	<xs:complexType name="testedElectricMeter">
		<xs:complexContent>
			<xs:extension base="receivedElectricMeter">
				<xs:sequence>
					<xs:element name="meterTestList" type="meterTestList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="meterTestList" type="meterTestList"/>
	<xs:complexType name="meterTestList">
		<xs:sequence>
			<xs:element name="meterTest" type="meterTest" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="meterTest" type="meterTest"/>
	<xs:complexType name="meterTest">
		<xs:sequence>
			<xs:element name="testDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Date test performed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="asFound" type="asFound" minOccurs="0" maxOccurs="1"/>
			<xs:element name="asLeft" type="asLeft" minOccurs="0" maxOccurs="1"/>
			<xs:element name="reason" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Resaon for test.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="testersInitials" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The initials of the person performing the test.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="testCompany" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Company performing test.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="comments" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="revolutions" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Revolutions per minute.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="asFound" type="asFound"/>
	<xs:complexType name="asFound">
		<xs:complexContent>
			<xs:extension base="meterConditions">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="asLeft" type="asLeft"/>
	<xs:complexType name="asLeft">
		<xs:annotation>
			<xs:documentation>Conditions as meter left after test.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="meterConditions">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="meterConditions" type="meterConditions"/>
	<xs:complexType name="meterConditions">
		<xs:sequence>
			<xs:element name="kWhReading" type="xs:integer" minOccurs="0" maxOccurs="1"/>
			<xs:element name="kWReading" type="xs:float" minOccurs="0" maxOccurs="1"/>
			<xs:element name="kVArReading" type="xs:float" minOccurs="0" maxOccurs="1"/>
			<xs:element name="powerFactorReading" type="xs:float" minOccurs="0" maxOccurs="1"/>
			<xs:element name="resultHigh" type="xs:float" minOccurs="0" maxOccurs="1"/>
			<xs:element name="resultLow" type="xs:float" minOccurs="0" maxOccurs="1"/>
			<xs:element name="resultLL" type="xs:float" minOccurs="0" maxOccurs="1"/>
			<xs:element name="kWResult" type="xs:float" minOccurs="0" maxOccurs="1"/>
			<xs:element name="kVArResult" type="xs:float" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="receivedGasMeter" type="receivedGasMeter"/>
	<xs:complexType name="receivedGasMeter">
		<xs:complexContent>
			<xs:extension base="mspMeter">
				<xs:sequence>
					<xs:element name="gasNameplate" type="gasNameplate" minOccurs="0" maxOccurs="1"/>
					<xs:element name="manufacturedDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="purchasePrice" type="money" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="receivedPropaneMeter" type="receivedPropaneMeter"/>
	<xs:complexType name="receivedPropaneMeter">
		<xs:complexContent>
			<xs:extension base="mspMeter">
				<xs:sequence>
					<xs:element name="propaneNameplate" type="propaneNameplate" minOccurs="0" maxOccurs="1"/>
					<xs:element name="manufacturedDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="purchasePrice" type="money" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="receivedWaterMeter" type="receivedWaterMeter"/>
	<xs:complexType name="receivedWaterMeter">
		<xs:complexContent>
			<xs:extension base="mspMeter">
				<xs:sequence>
					<xs:element name="waterNameplate" type="waterNameplate" minOccurs="0" maxOccurs="1"/>
					<xs:element name="manufacturedDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="purchasePrice" type="money" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="secondaryType">
		<xs:annotation>
			<xs:documentation>Type of secondary(service.  secondary, underbuild)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Underbuild"/>
			<xs:enumeration value="Secondary"/>
			<xs:enumeration value="Service"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="ohTransmissionLine" type="ohTransmissionLine"/>
	<xs:complexType name="ohTransmissionLine">
		<xs:annotation>
			<xs:documentation>A section of overhead transmission voltage line.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricLine">
				<xs:sequence>
					<xs:element name="operatingVoltage" type="voltage" minOccurs="0" maxOccurs="1"/>
					<xs:element name="rating" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Line rating.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lengthSrc" type="lengthSrc" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Metadata about source of length information.  used to determine accuracy.|</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="baseVoltageID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the reference to a baseVoltage catalog entry.  This element is required in the CPSM profile and is not used in MultiSpeak..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lineImpedances" type="lineImpedances" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This set of values is required in CIM, but is not used in MultiSpeak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lineID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to the Line container that contains this ohTransmissionLine (ACLineSegment in CPSM).  The use of Line is NOT required in the CPSM profile, but if it is used, it will ONLY be used as a container for ACLineSegments.  The Line element is not used in MultiSPeak.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="lineImpedances" type="lineImpedances"/>
	<xs:complexType name="lineImpedances">
		<xs:annotation>
			<xs:documentation>This set of values is required in CIM, but is not used in MultiSpeak.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="bch" type="susceptance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Positive sequence shunt (charging) susceptance, uniformly distributed, of the entire line section.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="r" type="resistance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Positive sequence series resistance of the entire line section.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="x" type="reactance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Positive sequence series reactance of the entire line section.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ugPrimaryLine" type="ugPrimaryLine"/>
	<xs:complexType name="ugPrimaryLine">
		<xs:annotation>
			<xs:documentation>A section of underground primary voltage distribution line.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricLine">
				<xs:sequence>
					<xs:element name="operatingVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Operating voltage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isInConduit" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Is this section istalled in conduit (Y/N)?.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="manufacturer" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Manufacturer of the cable in this section of underground primary line.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lengthSrc" type="lengthSrc" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Metadata about source of length information.  used to determine accuracy.|</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="regulatorBank" type="regulatorBank"/>
	<xs:complexType name="regulatorBank">
		<xs:complexContent>
			<xs:extension base="mspBankObject">
				<xs:sequence>
					<xs:element name="regulatorBankConnectionCode" type="regulatorBankConnectionCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Connection for this bank of regulators.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crlPhase" type="mspPhase" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The phase used to control the regulator in this section</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="regulatorList" type="regulatorList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="regulatorBankConnectionCode">
		<xs:annotation>
			<xs:documentation>Connection for this bank of regulators.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Wye 3ph"/>
			<xs:enumeration value="Delta 3ph"/>
			<xs:enumeration value="Line-neutral"/>
			<xs:enumeration value="Open delta"/>
			<xs:enumeration value="Closed delta"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Uknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="regulator" type="regulator"/>
	<xs:complexType name="regulator">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="eaEquipment" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description for the type of regulator in this section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phasing for this regulator.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="vOut" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Regulator target output voltage, expressed as volts on the PT secondary base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="voltageBandwidth" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Regulator voltage bandwidth, expressed in volts, on the PT secondary base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="initialDelay" type="seconds" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>For an LTC, the delay for initial tap changer operation (first step change)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="subsequentDelay" type="seconds" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>For an LTC, the delay for subsequent tap changer operation (second and later step changes)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ldcR" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Regulator resistive line drop compensation,expressed in volts on the PT secondary base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ldcX" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Regulator reactive line drop compensation,expressed in volts on the PT secondary base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="fhHi" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Regulator first house high protection setting.  expressed in volts on the PT secondary base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="fhLo" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Regulator first house low protection setting.  expressed in volts on the PT secondary base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="reverseFlowR" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Resistive line drop compensation resistance for current in reverse flow direction, expressed in volts on the PT secondary base..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="reverseFlowX" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reactive line drop compensation reactance for current in reverse flow direction,expressed in volts on the PT secondary base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="transformer" type="transformer"/>
	<xs:complexType name="transformer">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="facilityID" type="facilityID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Transformer Number (Company number).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eaEquipment" type="eaEquipID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="unitRatedPower" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Transformer size (rated power).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transformerType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Transformer type code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="status" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Transformer status code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phases" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of transformer phases.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1"/>
					<xs:element name="pcb" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Transformer PCB code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pcbTestList" type="pcbTestList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="windings" type="windings" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="regulatorList" type="regulatorList"/>
	<xs:complexType name="regulatorList">
		<xs:sequence>
			<xs:element name="regulator" type="regulator" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="bankRatings" type="bankRatings"/>
	<xs:complexType name="bankRatings">
		<xs:annotation>
			<xs:documentation>These ratings apply to a transformer bank, or if the bank consists of a single unit, for the unit.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="bankPowerRating" type="apparentPower" minOccurs="0" maxOccurs="1"/>
			<xs:element name="nLLoss" type="apparentPower" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>No load loss for the power transformer unit.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="fLLoss" type="apparentPower" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Full load loss for the transformer unit.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="primaryVoltageHigh" type="voltage" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Rated voltage for the primary winding; the higher of the two ratings if dual rated.  Input voltage values are stored L-G (Wye connected) unless the winding code is D-Y or D-D and then values are stored L-L (Delta connected)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="primaryVoltageLow" type="voltage" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Rated voltage for the primary winding; the higher of the two ratings if the transformer is dual rated.  Input voltage values are stored L-G (Wye connected) unless the winding code is D-Y or D-D and then values are stored L-L (Delta connected)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="secondaryVoltageHigh" type="voltage" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Rated voltage for the secondary winding; the higher of the two ratings if dual rated.  Output voltage is L-G unless winding code is Grounded Y-D, Ungrounded Y-D, Open Y-D or D-D</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="secondaryVoltageLow" type="voltage" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Rated voltage for the primary winding; the higher of the two ratings if the transformer is dual rated.  Output voltage is L-G unless winding code is Grounded Y-D, Ungrounded Y-D, Open Y-D or D-D</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="tertiaryVoltage" type="voltage" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The rated voltage of the tertiary winding.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="wdgCode">
		<xs:annotation>
			<xs:documentation>Transformer winding connection code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="D-Y one"/>
			<xs:enumeration value="Y-Y"/>
			<xs:enumeration value="D-Y"/>
			<xs:enumeration value="Grounded Y-D"/>
			<xs:enumeration value="Ungrounded Y-D"/>
			<xs:enumeration value="Open Y-D"/>
			<xs:enumeration value="D-D"/>
			<xs:enumeration value="Y-Y Grounded Imp"/>
			<xs:enumeration value="Y-Y 3ph core type"/>
			<xs:enumeration value="D-D one"/>
			<xs:enumeration value="D-D open"/>
			<xs:enumeration value="Y-Y-D Ground"/>
			<xs:enumeration value="Y-D one"/>
			<xs:enumeration value="D-Y open"/>
			<xs:enumeration value="CenterTapSecondary"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="transformerList" type="transformerList"/>
	<xs:complexType name="transformerList">
		<xs:sequence>
			<xs:element name="transformer" type="transformer" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="assetFields" type="assetFields"/>
	<xs:complexType name="assetFields">
		<xs:annotation>
			<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="manufacturer" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="serialNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="manufacturedDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="price" type="money" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="testInstance" type="testInstance"/>
	<xs:complexType name="testInstance">
		<xs:sequence>
			<xs:element name="testDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Date of this PCB test.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="pcbClass" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="sampleNumber" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Identifier for the sample tested.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="comment" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="pcbTestList" type="pcbTestList"/>
	<xs:complexType name="pcbTestList">
		<xs:sequence>
			<xs:element name="testInstance" type="testInstance" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="windings" type="windings"/>
	<xs:complexType name="windings">
		<xs:sequence>
			<xs:element name="TransformerWinding" type="cpsm:TransformerWinding" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="guy" type="guy"/>
	<xs:complexType name="guy">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="status" type="featureStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Status of the guy assembly.  Enumerations are N=New, R=Retire, or E=Existing.
 </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="anchorList" type="anchorList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="guyType" type="guyType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="guyAgainst" type="guyAgainst" minOccurs="0" maxOccurs="1"/>
					<xs:element name="attachmentHeight" type="height" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The height at which the guy is attached to the structure which it guys.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="featureStatus">
		<xs:annotation>
			<xs:documentation>Status of a pole guy.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="N"/>
			<xs:enumeration value="E"/>
			<xs:enumeration value="R"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="anchor" type="anchor"/>
	<xs:complexType name="anchor">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="lead" type="lead" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Anchor lead, distance of anchor from pole.
</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="status" type="featureStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Status of anchor assembly: N=New, E=Existing, or R=Retire.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="lead" type="lead"/>
	<xs:complexType name="lead">
		<xs:annotation>
			<xs:documentation>Anchor lead, distance of anchor from pole.

 </xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="lengthUnits">
					<xs:annotation>
						<xs:documentation>Unites of length for this lead.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="anchorList" type="anchorList"/>
	<xs:complexType name="anchorList">
		<xs:sequence>
			<xs:element name="anchor" type="anchor" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="guyType">
		<xs:annotation>
			<xs:documentation>Type of structure guy.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Down"/>
			<xs:enumeration value="Double down"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="guyAgainst">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Dead-end"/>
			<xs:enumeration value="Angle"/>
			<xs:enumeration value="Storm-right"/>
			<xs:enumeration value="Storm-left"/>
			<xs:enumeration value="Unkonown"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="attachmentHeight" type="attachmentHeight"/>
	<xs:complexType name="attachmentHeight">
		<xs:annotation>
			<xs:documentation>The height at which the guy is attached to the structure which it guys.</xs:documentation>
		</xs:annotation>
		
	</xs:complexType>
	<xs:element name="pole" type="pole"/>
	<xs:complexType name="pole">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="inspDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last inspection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="manufacturer" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Pole manufacturer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="mfgDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Pole manufacture date.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="owner" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Pole owner.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="poleHeight" type="height" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Height of this pole.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="poleNumber" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Company number for this pole.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="poleClass" type="poleClass" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Class of this pole.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="poleType" type="poleType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of this pole.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="poleTreatment" type="treatment" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Pole treatment type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="poleUse" type="poleUse" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Use of pole.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="jointUseList" type="jointUseList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of joint use attachments to this pole.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="guyList" type="guyList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of guys associated with this pole.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="riser" type="riser"/>
	<xs:complexType name="riser">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="constType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of the type of construction  (i.e. Single phase pothead).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="riserHeight" type="height" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Mounting height of riser on pole.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="material" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of the type of material used for the riser.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="poleClass">
		<xs:annotation>
			<xs:documentation>Class of this pole.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Class 1"/>
			<xs:enumeration value="Class 2"/>
			<xs:enumeration value="Class 3"/>
			<xs:enumeration value="Class 4"/>
			<xs:enumeration value="Class 5"/>
			<xs:enumeration value="Class 6"/>
			<xs:enumeration value="Class 7"/>
			<xs:enumeration value="Class 8"/>
			<xs:enumeration value="Class 9"/>
			<xs:enumeration value="Class 10"/>
			<xs:enumeration value="H1"/>
			<xs:enumeration value="H2"/>
			<xs:enumeration value="H3"/>
			<xs:enumeration value="H4"/>
			<xs:enumeration value="H5"/>
			<xs:enumeration value="H6"/>
			<xs:enumeration value="H7"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="poleType">
		<xs:annotation>
			<xs:documentation>Type of pole.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Aluminum"/>
			<xs:enumeration value="Concrete"/>
			<xs:enumeration value="Fiberglass"/>
			<xs:enumeration value="Galvanized"/>
			<xs:enumeration value="Steel"/>
			<xs:enumeration value="Wood"/>
			<xs:enumeration value="WoodTreated"/>
			<xs:enumeration value="WoodUntreated"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="treatment">
		<xs:annotation>
			<xs:documentation>Pole treatment type.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Butt"/>
			<xs:enumeration value="Natural"/>
			<xs:enumeration value="Penta"/>
			<xs:enumeration value="Creosote"/>
			<xs:enumeration value="CCA"/>
			<xs:enumeration value="Chemonite"/>
			<xs:enumeration value="Napthena"/>
			<xs:enumeration value="Cellon"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="poleUse">
		<xs:annotation>
			<xs:documentation>Use of pole.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Distribution"/>
			<xs:enumeration value="Transmission"/>
			<xs:enumeration value="Service"/>
			<xs:enumeration value="Guy Stub"/>
			<xs:enumeration value="Stub"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="jointUseList" type="jointUseList"/>
	<xs:complexType name="jointUseList">
		<xs:sequence>
			<xs:element name="jointUse" type="jointUse" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="jointUse" type="jointUse"/>
	<xs:complexType name="jointUse">
		<xs:sequence>
			<xs:element name="companyID" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Company having attachment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="jUseType" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of attachment (CATV.  phone, etc.).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="jUseHeight" type="height" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Attachment height.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="isGuyed" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Is this attachment guyed?</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="tapeShieldCableEntry" type="tapeShieldCableEntry"/>
	<xs:complexType name="tapeShieldCableEntry">
		<xs:annotation>
			<xs:documentation>This object is used to define an entry in the tape shield (TS) cable catalog.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="conductorSize" type="conductorSize" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Conductor size of the core expressed in AWG, kcmil, or square mm cross-section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ampacity" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Current capacity at 25 degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="coreStranding" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of conductor strands.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="coreMaterial" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to an entry in the materialAttributes catalog.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseGMR" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Geometric Mean Radius of phase conductor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="insulationMaterial" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to an entry in the materialAttributes catalog.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="insulationThickness" type="thickness" minOccurs="0" maxOccurs="1"/>
					<xs:element name="shieldMaterial" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to an entry in the materialAttributes catalog.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ODInsulation" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Diameter over the insulating layer</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ODScreen" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Diameter over the outer screen.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ODCore" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Diameter over the core screen.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="tapeThickness" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Thickness of the tape shield.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lap" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Tape shield lap, expressed in percent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isJacketed" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
					<xs:element name="ODJacket" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Diameter over the jacket.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rAC" type="resistancePerUnitLength" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>AC resistance per length at 25 degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="capacitance" type="capacitancePerUnitLength" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Capacitance, expressed in microFarads per unit length at 25 degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="coefficientOfFriction" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Coefficient of friction of jacket.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="weightPerLength" type="weightPerLength" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Weight of the cable per unit length.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="minimumBendingRadius" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Minimum recommended bending radius of the cable.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maximumPullingTension" type="weight" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Maximum design pulling tension for this cable.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="conductorEntries" type="conductorEntries"/>
	<xs:complexType name="conductorEntries">
		<xs:sequence>
			<xs:element name="conductorEntry" type="conductorEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="concentricNeutralCableEntries" type="concentricNeutralCableEntries"/>
	<xs:complexType name="concentricNeutralCableEntries">
		<xs:sequence>
			<xs:element name="concentricNeutralCableEntry" type="concentricNeutralCableEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="tapeShieldCableEntries" type="tapeShieldCableEntries"/>
	<xs:complexType name="tapeShieldCableEntries">
		<xs:sequence>
			<xs:element name="tapeShieldCableEntry" type="tapeShieldCableEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="lineConstructionEntry" type="lineConstructionEntry"/>
	<xs:complexType name="lineConstructionEntry">
		<xs:annotation>
			<xs:documentation>This object is used to define an entry in the  line construction catalog.  These entries are referred to by the "construction" attribute of all objects that inherit from the mspElectricLine abstract class.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="type" type="lineConstructionEntryType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="maximumVoltage" type="voltage" minOccurs="0" maxOccurs="1"/>
					<xs:element name="conductorList" type="conductorList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This structure defines the phase conductors and thier arrangement on the pole/tower, including bundling if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="neutralConductorList" type="conductorList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This structure defines the neutral conductors and thier arrangement on the pole/tower, including bundling if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="downleadConductorID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the identifier (objectID) for the conductorEntry for the downlead conductor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="downleadLength" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Length of pole/tower downlead.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="groundResistance" type="resistance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Pole ground resistance expressed in ohms.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="lineConstructionEntryType">
		<xs:annotation>
			<xs:documentation>The type of ine construction entry.  OH=Overhead primary line contruction entry, CN=Concentric neutral cable entry, TS=Tape shield cable entry,  Secondary=Secondary conductor entry, ServiceDrop= Service drop entry, Other, Unknown.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="OH"/>
			<xs:enumeration value="CN"/>
			<xs:enumeration value="TS"/>
			<xs:enumeration value="Secondary"/>
			<xs:enumeration value="ServiceDrop"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="lineConstructionEntries" type="lineConstructionEntries"/>
	<xs:complexType name="lineConstructionEntries">
		<xs:sequence>
			<xs:element name="lineConstructionEntry" type="lineConstructionEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="secondaryConductorEntry" type="secondaryConductorEntry"/>
	<xs:complexType name="secondaryConductorEntry">
		<xs:annotation>
			<xs:documentation>This object is used to define an entry in the secondary conductor catalog.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="numberPhaseConductors" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of phase conductors in this service drop cable.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="conductorMaterial" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the material of the phase wires.  This is a pointer to the materialAttributes catalog entry.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseSize" type="conductorSize" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Conductor size expressed in AWG, kcmil, or square mm cross-section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseStranding" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of conductor strands.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="insulationThickness" type="thickness" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The thickness of the insulation on the hot conductors.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="insulatorMaterial" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the material of the insulation on the phase conductors.This is a pointer to the materialAttributes catalog entry.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="neutralMaterial" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the material of the neutral wires.  This is a pointer to the materialAttributes catalog entry.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="neutralSize" type="conductorSize" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Conductor size expressed in AWG, kcmil, or square mm cross-section.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="neutralStranding" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of conductor strands.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="secondaryConductorEntries" type="secondaryConductorEntries"/>
	<xs:complexType name="secondaryConductorEntries">
		<xs:sequence>
			<xs:element name="secondaryConductorEntry" type="secondaryConductorEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="serviceDropEntry" type="serviceDropEntry"/>
	<xs:complexType name="serviceDropEntry">
		<xs:annotation>
			<xs:documentation>This object is used to define an entry in the service drop catalog.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="serviceDropCableEntries" type="serviceDropCableEntries"/>
	<xs:complexType name="serviceDropCableEntries">
		<xs:sequence>
			<xs:element name="serviceDropEntry" type="serviceDropEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="guyList" type="guyList"/>
	<xs:complexType name="guyList">
		<xs:sequence>
			<xs:element name="guy" type="guy" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="materialAttributes" type="materialAttributes"/>
	<xs:complexType name="materialAttributes">
		<xs:annotation>
			<xs:documentation>This is a catlog entry for material properties.  If the property is a conductor, the resistivity and m entries should be completed. If the material is an insulator then the dielectricConstant and relativityPermeability shoid be completed.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="resistivity" type="resistivity" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Material resistivity.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="m" type="thermalCoefficientOfResistance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The thermal coefficient of resistance of the material.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="dielectricConstant" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The relative permittivity of the material.  Relative permittivity is unitless.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="relativePermeability" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The relative permeability of the meterial.  Relative permeability is unitless.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="materialAttributesEntries" type="materialAttributesEntries"/>
	<xs:complexType name="materialAttributesEntries">
		<xs:sequence>
			<xs:element name="materialAttributes" type="materialAttributes" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="lineEnvironmentalAttributes" type="lineEnvironmentalAttributes"/>
	<xs:complexType name="lineEnvironmentalAttributes">
		<xs:annotation>
			<xs:documentation>This is the electrical catalog entry for line environmental characteristics.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="soilResistivity" type="resistivity" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Soil resistivity.  It is suggested that soil resistivity be expressed in ohm-m.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="defaultPoleGroundResistance" type="resistance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The default value of pole ground resistance.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="temperature" type="temperature" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The ambient temperature.  It is suggested that temperatures used for this purpose are expressed in degrees C.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="groundSpacing" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of spans between grounding points.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="spanLength" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The spacing between poles or towers.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="lineEnvironmentalAttributesEntries" type="lineEnvironmentalAttributesEntries"/>
	<xs:complexType name="lineEnvironmentalAttributesEntries">
		<xs:sequence>
			<xs:element name="lineEnvironmentalAttributes" type="lineEnvironmentalAttributes" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="breakerEntry" type="breakerEntry"/>
	<xs:complexType name="breakerEntry">
		<xs:annotation>
			<xs:documentation>The electrical equipment catalog entry definition for a breaker.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated voltage</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedPower" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated power for this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedCurrent" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated current for this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="bil" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Basic Insulation Level (BIL) for switchgear, insulators, etc. A reference insulation level expressed as the impulse crest voltage of a nominal wave, typically 1.2 X 50 microsecond.  This is a measure of the ability of the insulation to withstand very high voltage surges.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="frequency" type="frequency" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Frequency at which stated device ratings apply, typically 50 Hz or 60 Hz.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numberPhases" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of phases this type of asset supports, typically 0, 1 or 3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isGanged" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if multi-phase switch controls all phases concurrently.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="interruptingRating" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Breaking capacity, or short circuit rating, is the maximum rated current which the device can safely interrupt at the rated voltage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="inTransitTime" type="seconds" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="breakerEntries" type="breakerEntries"/>
	<xs:complexType name="breakerEntries">
		<xs:sequence>
			<xs:element name="breakerEntry" type="breakerEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="fuseEntry" type="fuseEntry"/>
	<xs:complexType name="fuseEntry">
		<xs:annotation>
			<xs:documentation>This is an electrical equipment catalog for a type of fuse.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated voltage for this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedCurrent" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated current for this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="bil" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Basic Insulation Level (BIL) for switchgear, insulators, etc. A reference insulation level expressed as the impulse crest voltage of a nominal wave, typically 1.2 X 50 microsecond.  This is a measure of the ability of the insulation to withstand very high voltage surges.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="linkRtg" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Current rating of fuse link.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="fuseSpeed" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Fuse speed, H, K, T, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="frequency" type="frequency" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Frequency at which stated device ratings apply, typically 50 Hz or 60 Hz.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numberPhases" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of phases this type of asset supports, typically 0, 1 or 3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isGanged" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if multi-phase switch controls all phases concurrently.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="interruptingRating" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Breaking capacity, or short circuit rating, is the maximum rated current which the device can safely interrupt at the rated voltage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isLoadBreak" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if switch has load breaking capabiity.  Unless specified false, this is always assumed to be true for breakers and reclosers.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="fuseEntries" type="fuseEntries"/>
	<xs:complexType name="fuseEntries">
		<xs:sequence>
			<xs:element name="fuseEntry" type="fuseEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="recloserEntry" type="recloserEntry"/>
	<xs:complexType name="recloserEntry">
		<xs:annotation>
			<xs:documentation>This is an entry in the electrical equipment catalog for a recloser.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated voltage for this device</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedPower" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Power rating for this device, expressed in apparent power units.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedCurrent" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated current for this device</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="bil" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Basic Insulation Level (BIL) for switchgear, insulators, etc. A reference insulation level expressed as the impulse crest voltage of a nominal wave, typically 1.2 X 50 microsecond.  This is a measure of the ability of the insulation to withstand very high voltage surges.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="frequency" type="frequency" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Frequency at which stated device ratings apply, typically 50 Hz or 60 Hz.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numberPhases" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of phases this type of asset supports, typically 0, 1 or 3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isGanged" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if multi-phase switch controls all phases concurrently.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isRemotelyOperable" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if device is capable of being operated by remote control.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isLoadBreak" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if switch has load breaking capabiity.  Unless specified false, this is always assumed to be true for breakers and reclosers.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="interruptingRating" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Breaking capacity, or short circuit rating, is the maximum rated current which the device can safely interrupt at the rated voltage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseTrip" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phase trip rating.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numRecloseLockout" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Total number of phase reclose operations possible on this unit prior to lockout.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isGroundTripCapable" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Flag indicating device has ground trip capability (true = has ground trip capability).</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="recloserEntries" type="recloserEntries"/>
	<xs:complexType name="recloserEntries">
		<xs:sequence>
			<xs:element name="recloserEntry" type="recloserEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="regulatorEntry" type="regulatorEntry"/>
	<xs:complexType name="regulatorEntry">
		<xs:annotation>
			<xs:documentation>This is an electrical equipment catalog entry for a regulator.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The rated voltage of the regulator.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedPower" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The rated power for this regulator.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ampacity" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The rated ampacity for this regulator.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="bil" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Basic Insulation Level (BIL) for switchgear, insulators, etc. A reference insulation level expressed as the impulse crest voltage of a nominal wave, typically 1.2 X 50 microsecond.  This is a measure of the ability of the insulation to withstand very high voltage surges.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numberOfSteps" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of steps of regulation that this regulator supports.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stepVoltageIncrement" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Tap step increment, in per cent of nominal voltage, per step position.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ptRatio" type="xs:double" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Ratio of the potential transformer in this unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ctRating" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rating of the current transformer, expressed in amperes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="windingType" type="regulatorWindingType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The regulator winding type (A,B).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="frequency" type="frequency" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Frequency at which stated device ratings apply, typically 50 Hz or 60 Hz.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="regulatorEntries" type="regulatorEntries"/>
	<xs:complexType name="regulatorEntries">
		<xs:sequence>
			<xs:element name="regulatorEntry" type="regulatorEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="regulatorWindingType">
		<xs:annotation>
			<xs:documentation>The regulator winding type (A,B).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="A"/>
			<xs:enumeration value="B"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="sectionalizerEntry" type="sectionalizerEntry"/>
	<xs:complexType name="sectionalizerEntry">
		<xs:annotation>
			<xs:documentation>This is an electrical equipment catalog entry for a sectionalizer.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated voltage for this sectionalizer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedPower" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated power for this sectionalizer</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedCurrent" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated ampacity of this sectionalizer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="bil" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Basic Insulation Level (BIL) for switchgear, insulators, etc. A reference insulation level expressed as the impulse crest voltage of a nominal wave, typically 1.2 X 50 microsecond.  This is a measure of the ability of the insulation to withstand very high voltage surges.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="frequency" type="frequency" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Frequency at which stated device ratings apply, typically 50 Hz or 60 Hz.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numberPhases" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of phases this type of asset supports, typically 0, 1 or 3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isGanged" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if multi-phase switch controls all phases concurrently.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maximumCounts" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The maximum number of counts for which this sectionalizer could be set prior to openning.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isLoadBreak" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if switch has load breaking capabiity.  Unless specified true, this is always assumed to be false for a sectionalizer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resetTime" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The time beyond which this sectionalizer will reset its fault count to zero.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="sectionalizerEntries" type="sectionalizerEntries"/>
	<xs:complexType name="sectionalizerEntries">
		<xs:sequence>
			<xs:element name="sectionalizerEntry" type="sectionalizerEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="duration" type="duration"/>
	<xs:complexType name="duration">
		<xs:annotation>
			<xs:documentation>Time duration.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="timeUnits">
					<xs:annotation>
						<xs:documentation>Units of time duration.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="switchEntry" type="switchEntry"/>
	<xs:complexType name="switchEntry">
		<xs:annotation>
			<xs:documentation>This is an electrical equipment catalog entry for a switch</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The rated voltage of this switch.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedPower" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The rated power for this switch.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedCurrent" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The rated ampacity of this switch.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="bil" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Basic Insulation Level (BIL) for switchgear, insulators, etc. A reference insulation level expressed as the impulse crest voltage of a nominal wave, typically 1.2 X 50 microsecond.  This is a measure of the ability of the insulation to withstand very high voltage surges.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="frequency" type="frequency" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Frequency at which stated device ratings apply, typically 50 Hz or 60 Hz.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numberPhases" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of phases this type of asset supports, typically 0, 1 or 3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isGanged" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if multi-phase switch controls all phases concurrently.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isRemotelyOperable" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if this switch can be remotely operated by supervisory control.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="interruptingRating" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Breaking capacity, or short circuit rating, is the maximum rated current which the device can safely interrupt at the rated voltage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isLoadBreak" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if switch has load breaking capabiity.  </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="switchEntries" type="switchEntries"/>
	<xs:complexType name="switchEntries">
		<xs:sequence>
			<xs:element name="switchEntry" type="switchEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="transformerEntry" type="transformerEntry"/>
	<xs:complexType name="transformerEntry">
		<xs:annotation>
			<xs:documentation>This is an electrical equipment catalog entry for transformers.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="noLoadLoss" type="realPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>No load loss rating for this transformer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="windingAttributes" type="windingAttributes" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the set of attributes for a transformer winding as part of a transformer engineering equipment catalog entry.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="windingPairAttributes" type="windingPairAttributes" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>These are attributes of a transformer winding pair that are used in a transformer engineering equipment catalog entry.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="transformerEntries" type="transformerEntries"/>
	<xs:complexType name="transformerEntries">
		<xs:sequence>
			<xs:element name="transformerEntry" type="transformerEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="winding" type="winding"/>
	<xs:complexType name="winding">
		<xs:annotation>
			<xs:documentation>Transformer winding attributes to be used in a transformer engineering equipment catalog entry.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="windingNumber" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>An identifier for this winding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The rated voltage (phase-to-phase) of the winding, usually the same as the neutral voltage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ratedPower" type="apparentPower" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The normal rating for the winding, expressed in apparent power units.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="emergencyRating" type="apparentPower" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The power that the winding can carry  under emergency conditions, expressed in apparent power units.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="insulationBIL" type="voltage" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Basic insulation level voltage rating</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="windingConnection" type="windingConnection" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Connection for the transformer winding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="phaseShift" type="clockPosition" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the phase shift for this winding from the primary winding expressed in clock position nomenclature, where lagging phase shifts are expressed as positive clockwise positions.  Each 30 degrees of phase shift corresponds to one hour of clock position.  For instance a delta-wye transformer with delta-connected high side and wye-connected low side that has a 30 degree phase shift between the high side and the low side (low side lagging by 30 degrees) would have a clock position of 1.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="windingConnection">
		<xs:annotation>
			<xs:documentation>Connection for the transformer winding.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Delta"/>
			<xs:enumeration value="Wye"/>
			<xs:enumeration value="Zigzag"/>
			<xs:enumeration value="Center tap"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="clockPosition">
		<xs:annotation>
			<xs:documentation>This is the phase shift for this winding from the primary winding expressed in clock position nomenclature, where lagging phase shifts are expressed as positive clockwise positions.  Each 30 degrees of phase shift corresponds to one hour of clock position.  For instance a delta-wye transformer with delta-connected high side and wye-connected low side that has a 30 degree phase shift between the high side and the low side (low side lagging by 30 degrees) would have a clock position of 1.
</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
			<xs:enumeration value="5"/>
			<xs:enumeration value="6"/>
			<xs:enumeration value="7"/>
			<xs:enumeration value="8"/>
			<xs:enumeration value="9"/>
			<xs:enumeration value="10"/>
			<xs:enumeration value="11"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="windingAttributes" type="windingAttributes"/>
	<xs:complexType name="windingAttributes">
		<xs:annotation>
			<xs:documentation>This is the set of attributes for a transformer winding as part of a transformer engineering equipment catalog entry.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="winding" type="winding" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="windingPair" type="windingPair"/>
	<xs:complexType name="windingPair">
		<xs:annotation>
			<xs:documentation>These are attributes of a transformer winding pair that are used in a transformer engineering equipment catalog entry.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="firstWindingNumber" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The identifier for the first winding in this pair.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="secondWindingNumber" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The second winding in this winding pair.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="loadLoss" type="realPower" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Load loss for this winding pair.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="positiveSeqImpedance" type="complexImpedance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Positive sequence impedance of transformer expressed in percent on transformer rating.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="zeroSeqImpedance" type="complexImpedance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Zero sequence impedance of transformer expressed in percent on transformer rating.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="windingPairAttributes" type="windingPairAttributes"/>
	<xs:complexType name="windingPairAttributes">
		<xs:annotation>
			<xs:documentation>These are attributes of a transformer winding pair that are used in a transformer engineering equipment catalog entry.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="windingPair" type="windingPair" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="loadMixEntry" type="loadMixEntry"/>
	<xs:complexType name="loadMixEntry">
		<xs:annotation>
			<xs:documentation>This is an electrical equipmentcatalog entry for a load mix.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="constantPower" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent of the load in this load mix that is constant kVA load.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="constantImpedance" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent of the load in this load mix that is constant impedance load.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="constantCurrent" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Percent of the load in this load mix that is constant current load.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="connection" type="ldConnection" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Manner in which the load is connected.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="conformingLoadFlag" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Flag is set to YES if the load is conforming, i.e., tracks the area load to which the energy consumer belongs</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="powerFactor" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Power factor for nominal portion of load. Defined as MW/MVA</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pFrequencyExponent" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Exponent of per unit frequency effecting active power</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pVoltageExponent" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Exponent of per unit voltage effecting real power.   This model used only when "useExponentModel" is true.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="qFrequencyExponent" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Exponent of per unit frequency effecting reactive power</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="qVoltageExponent" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Exponent of per unit voltage effecting reactive power.   This model used only when "useExponentModel" is true.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CIMLoadCharacteristics" type="CIMLoadCharacteristics" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="loadMixEntries" type="loadMixEntries"/>
	<xs:complexType name="loadMixEntries">
		<xs:sequence>
			<xs:element name="loadMixEntry" type="loadMixEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="ldConnection">
		<xs:annotation>
			<xs:documentation>Percent of the load in this load mix that is constant current load.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Wye"/>
			<xs:enumeration value="Delta"/>
			<xs:enumeration value="Center tap"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="CIMLoadCharacteristics" type="CIMLoadCharacteristics"/>
	<xs:complexType name="CIMLoadCharacteristics">
		<xs:annotation>
			<xs:documentation>These load characteristics are not required for MultiSpeak data exchanges, but are included for CIM compatibility.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="conformLoadSchedule" type="cpsm:ConformLoadSchedule" minOccurs="0" maxOccurs="1"/>
			<xs:element name="nonConformLoadSchedule" type="cpsm:NonConformLoadSchedule" minOccurs="0" maxOccurs="1"/>
			<xs:element name="feederLoadMgtFactor" type="cpsm:PerCent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The feeder's contribution to load management, in percent</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mVArColdPickUpFactor" type="cpsm:PerCent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The amount of nominal feeder MVAr that is picked up cold, in percent</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mWColdPickUpFactor" type="cpsm:PerCent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The amount of nominal feeder MW that is picked up cold, in percent</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="loadAllocationFactor" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Permit assignment of loads on a participation factor basis. Given three equivalent loads with factors of 10, 25 and 15, a feeder load of 100 amps could be allocated on the feeder as 20, 50 and 30 amps.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subLoadAreaID" type="objectID" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ZsmImpedanceEntry" type="ZsmImpedanceEntry"/>
	<xs:complexType name="ZsmImpedanceEntry">
		<xs:annotation>
			<xs:documentation>This is an impedance entry in an electrical equipment catalog.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="basePower" type="apparentPower" minOccurs="0" maxOccurs="1"/>
					<xs:element name="baseVoltage" type="voltage" minOccurs="0" maxOccurs="1"/>
					<xs:element name="selfImpedance" type="complexImpedanceWithLeakage" minOccurs="0" maxOccurs="1"/>
					<xs:element name="mutualForwardImpedance" type="complexImpedanceWithLeakage" minOccurs="0" maxOccurs="1"/>
					<xs:element name="mutualReverseImpedance" type="complexImpedanceWithLeakage" minOccurs="0" maxOccurs="1"/>
					<xs:element name="positiveSequenceZ" type="complexImpedance" minOccurs="0" maxOccurs="1"/>
					<xs:element name="negativeSequenceZ" type="complexImpedance" minOccurs="0" maxOccurs="1"/>
					<xs:element name="zeroSequenceZ" type="complexImpedance" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ZsmImpedanceEntries" type="ZsmImpedanceEntries"/>
	<xs:complexType name="ZsmImpedanceEntries">
		<xs:sequence>
			<xs:element name="ZsmImpedanceEntry" type="ZsmImpedanceEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="inductionMachineEntry" type="inductionMachineEntry"/>
	<xs:complexType name="inductionMachineEntry">
		<xs:annotation>
			<xs:documentation>This is an entry in the electrical equipment catalog for an imduction machine.  The induction machine may be operating as either a generator or a motor.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="hp" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated horsepower.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pf" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Running power factor at full load.  Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="efficiency" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Efficiency at full load.  Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated voltage, expressed in the units listed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lgVolts" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Line-to-ground voltage.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="dropout" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Motor drops out if voltage is below this fraction. Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="nemaType" type="nemaType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>NEMA  motor type code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="limitVoltage" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Motor will not start if below this fraction.  Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lockedRotorPF" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Locked rotor power factor. Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lockedRotorMultiplier" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Locked rotor kVA per horsepower.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="impedances" type="inductionMachineImpedances" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>These values are not used in MultiSpeak data transfers.  These values are included here for CIM compatibility only.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="inductionMachineEntries" type="inductionMachineEntries"/>
	<xs:complexType name="inductionMachineEntries">
		<xs:sequence>
			<xs:element name="inductionMachineEntry" type="inductionMachineEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="nemaType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="A"/>
			<xs:enumeration value="B"/>
			<xs:enumeration value="C"/>
			<xs:enumeration value="D"/>
			<xs:enumeration value="E"/>
			<xs:enumeration value="F"/>
			<xs:enumeration value="G"/>
			<xs:enumeration value="H"/>
			<xs:enumeration value="J"/>
			<xs:enumeration value="K"/>
			<xs:enumeration value="L"/>
			<xs:enumeration value="M"/>
			<xs:enumeration value="N"/>
			<xs:enumeration value="P"/>
			<xs:enumeration value="R"/>
			<xs:enumeration value="S"/>
			<xs:enumeration value="T"/>
			<xs:enumeration value="U"/>
			<xs:enumeration value="V"/>
			<xs:enumeration value="None"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="inductionMachineImpedances" type="inductionMachineImpedances"/>
	<xs:complexType name="inductionMachineImpedances">
		<xs:annotation>
			<xs:documentation>These values are not used in MultiSpeak data transfers.  These values are included here for CIM compatibility only.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="basePower" type="apparentPower" minOccurs="0" maxOccurs="1"/>
			<xs:element name="baseVoltage" type="voltage" minOccurs="0" maxOccurs="1"/>
			<xs:element name="statorImpedance" type="complexImpedance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="rotorImpedance" type="complexImpedance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="magnetizingImpedance" type="complexImpedance" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="synchronousMachineEntry" type="synchronousMachineEntry"/>
	<xs:complexType name="synchronousMachineEntry">
		<xs:annotation>
			<xs:documentation>This is an electrical equipment catalog entry for a synchronous machine.  The synchronous machine may be operating as either a motor or a generator.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated voltage, expressed in the units listed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ssImpedanceID" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of steady-state device type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="tranImpedanceID" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of transient device type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stImpedanceID" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of subtransient device type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maxLeadQ" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>For Swing kVAR model, Maximum leading reactive power output.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maxLagQ" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>For Swing kVAR model, Maximum lagging reactive power output.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maximumVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Maximum kV limit for the unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="minimumVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Minimum kV  limit for the unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maxQ" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Maximum MVAr limit. This is the maximum (nameplate) limit for the unit. This element is required for the CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="minQ" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Minimum MVAr limit for the unit.  This element is required for the CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedMVA" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Nameplate MVA rating for the unit</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="impedances" type="synchronousMachineImpedances" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="synchronousMachineEntries" type="synchronousMachineEntries"/>
	<xs:complexType name="synchronousMachineEntries">
		<xs:sequence>
			<xs:element name="synchronousMachineEntry" type="synchronousMachineEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="synchronousMachineImpedances" type="synchronousMachineImpedances"/>
	<xs:complexType name="synchronousMachineImpedances">
		<xs:annotation>
			<xs:documentation>These values are used only in CIM models, they are not required for MultiSpeak models.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="basePower" type="apparentPower" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Nameplate apparent power rating for the unit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="baseVoltage" type="voltage" minOccurs="0" maxOccurs="1"/>
			<xs:element name="r" type="resistance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Positive sequence resistance of the synchronous machine.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="r0" type="resistance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Zero sequence resistance of the synchronous machine.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="x" type="reactance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Positive sequence reactance of the synchronous machine.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="x0" type="reactance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Zero sequence reactance of the synchronous machine.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="xDirectSync" type="reactance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Direct-axis synchronous reactance. The quotient of a sustained value of that AC component of armature voltage that is produced by the total direct-axis flux due to direct-axis armature current and the value of the AC component of this current, the machine running at rated speed. (Xd)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="xDirectTrans" type="reactance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Direct-axis transient reactance, also known as X'd.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="xDirectSubtrans" type="reactance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Direct-axis subtransient reactance, also known as X"d.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="xQuadSync" type="reactance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Quadrature-axis synchronous reactance (Xq) , the ratio of the component of reactive armature voltage, due to the quadrature-axis component of armature current, to this component of current, under steady state conditions and at rated frequency.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="xQuadTrans" type="reactance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Quadrature-axis transient reactance, also known as X'q.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="xQuadSubtrans" type="reactance" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Quadrature-axis subtransient reactance, also known as X"q.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AVLAddress" type="AVLAddress"/>
	<xs:complexType name="AVLAddress">
		<xs:annotation>
			<xs:documentation>Address associated with a GPS event.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="street" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="crossStreet" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="city" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="state" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>State or province.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="postalCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="country" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="POIName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Name of Point Of Interest- If vehicle lat and long are within a POI radius.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="POIType" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of POI, like coffee shop, terminal etc</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AVLState" type="AVLState"/>
	<xs:complexType name="AVLState">
		<xs:annotation>
			<xs:documentation>AVLState contains information about an AVL-generated event.  This is a general purpose AVL information object that can carry detailed telemetry data.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="GMTTime" type="xs:dateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time expressed in GMT.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="triggerEvent" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Information about this AVLState, such as: PowerOn, Moving, Moving update.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="GPS" type="GPS" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The GPS element has been deprecated as of the V4.1.3 Release. It will be replaced by the GPSLocation element in V5.0. The use of either the GPS element or the GPSLocation element is mandatory in V4.1.3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AVLAddress" type="AVLAddress" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Address associated with a GPS event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="telemetry" type="telemetry" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Vehicle-specific telemetry.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="GPSLocation" type="GPSLocation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A geographical location as expressed in a geographic coordinate system. The GPSLocation SHALL be expressed using the WGS84 datum. This object SHOULD be used for expressing all types of GPS data and replaces the GPS, gpsPoint, and gpsLocation all of which have been deprecated in V4.1.3. The GPSLocation object will replace these other objects in V5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GPS" type="GPS"/>
	<xs:complexType name="GPS">
		<xs:annotation>
			<xs:documentation>THE GPS OBJECT HAS BEEN DEPRECATED. It will be replaced by the GPSLocation element in V5.0. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="GPSValidity" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Validity of GPS location; false= invalid, true=valid.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="latitude" type="xs:double" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>GPS latitude.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="longitude" type="xs:double" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>GPS longitude.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="telemetry" type="telemetry"/>
	<xs:complexType name="telemetry">
		<xs:annotation>
			<xs:documentation>Vehicle-specific telemetry.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="speed" type="speed" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Vehicle speed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="heading" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Heading, in degrees</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cardinalHeading" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Cardinal Heading (N, S, E, W)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="odometer" type="odometer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Odometer reading.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="maxVehSpeedLastReading" type="speed" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Maximum vehicle speed at the time of the last reading, in mph.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="maxEngineSpeedLastReading" type="xs:positiveInteger" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Maximum engine speed at the time of the last reading, expressed in rpm.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ignitionState" type="ignitionState" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>State of the vehicle ignition swicth.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="gearShiftPosition" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Position of the gear shift lever.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PTOState" type="PTOState" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>State of the vehicle power take-off unit, if any.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="odometer" type="odometer"/>
	<xs:complexType name="odometer">
		<xs:annotation>
			<xs:documentation>Odometer reading.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="lengthUnits">
					<xs:annotation>
						<xs:documentation>Units that the odometer reading is expressed in.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="ignitionState">
		<xs:annotation>
			<xs:documentation>State of the ignition switch in the vehicle.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="On"/>
			<xs:enumeration value="Off"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PTOState">
		<xs:annotation>
			<xs:documentation>State of the vehicle power take-off unit, if any.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="On"/>
			<xs:enumeration value="Off"/>
			<xs:enumeration value="None"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="AVLLog" type="AVLLog"/>
	<xs:complexType name="AVLLog">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="vehicleID" type="objectID" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a link to the vehicle that is associated with this AVLLog.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AVLID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>ID for the AVL antenna; typically the TCP/IP network address of the antenna dome.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AVLStateList" type="AVLStateList" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="AVLStateList" type="AVLStateList"/>
	<xs:complexType name="AVLStateList">
		<xs:sequence>
			<xs:element name="AVLState" type="AVLState" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AVLMessage" type="AVLMessage"/>
	<xs:complexType name="AVLMessage">
		<xs:sequence>
			<xs:element name="AVLLog" type="AVLLog" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AVLPosition" type="AVLPosition"/>
	<xs:complexType name="AVLPosition">
		<xs:annotation>
			<xs:documentation>This is an object that can carry a "lightweight" AVL information object.  This version cannot carry telemetry data.  For the heavyweight object see an AVLState.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="vehicleID" type="objectID" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a link to the vehicle that is associated with this AVLPosition.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AVLID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>ID for the AVL antenna; typically the TCP/IP network address of the antenna dome.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="GMTTime" type="xs:dateTime" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time expressed in GMT.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="speed" type="speed" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Vehicle speed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="heading" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Heading in degrees.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cardinalHeading" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Cardinal Heading (N, S, E, W)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="gps" type="GPS" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The GPS element has been deprecated as of the V4.1.3 Release. It will be replaced by the GPSLocation element in V5.0. The use of either the GPS element or the GPSLocation element is mandatory in V4.1.3.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="GPSLocation" type="GPSLocation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A geographical location as expressed in a geographic coordinate system. The GPSLocation SHALL be expressed using the WGS84 datum. This object SHOULD be used for expressing all types of GPS data and replaces the GPS, gpsPoint, and gpsLocation all of which have been deprecated in V4.1.3. The GPSLocation object will replace these other objects in V5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="serviceLocation" type="serviceLocation"/>
	<xs:complexType name="serviceLocation">
		<xs:annotation>
			<xs:documentation>This is a location at which a customer can receive service.  A serviceLocation can have utilitiy services of several different serviceTypes.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Customer's identitication number.  This should be the objectID of the customer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Additional information about this serviceLocation</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="facilityName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of facility for multi-site business customer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceAddress" type="address" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Physical address of this service location. THIS ELEMENT HAS BEEN DEPRECATED IN V4.1 AND WILL BE REPLACED WITH contactInfo IN V5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SIC" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The standard industry code for the business activity at this service location, if this service location is commercial, </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="siteID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier for site for a multi-site business customer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="graphicSymbolList" type="graphicSymbolList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="annotationList" type="genericAnnotationFeatureList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="network" type="network" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This child object of service location incorporates information typically stored in a GIS as system of record, in contrast to the information in the parent class"serviceLocation" that is typically stored in a customer information system as system of record.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="electricServiceList" type="electricServiceList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of electric services associated with this serviceLocation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="waterServiceList" type="waterServiceList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of water services associated with this serviceLocation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="gasServiceList" type="gasServiceList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of gas services associated with this serviceLocation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="propaneServiceList" type="propaneServiceList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of propane services associated with this serviceLocation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="otherServiceList" type="otherServiceList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of other utility services associated with this serviceLocation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phoneList" type="phoneList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>THIS ELEMENT HAS BEEN DEPRECATED IN V4.1 AND WILL BE REPLACED WITH contactInfo IN V5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="specialNeeds" type="specialNeeds" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A descriptor for any special needs that this customer has, such as life support equipment. THIS SIMPLE TYPE HAS BEEN DEPRECATED IN V4.1 AND WILL BE REPLACED WITH AN ARRAY OF NAME-VALUE PAIRS DESCRIBING TYPES OF SPECIAL NEEDS IN V5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceOrderList" type="serviceOrderList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outstanding service orders at this service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workList" type="workList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work to be performed at this service location</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workOrderList" type="workOrderList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outstanding work orders at this service location</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maintenanceOrderList" type="maintenanceOrderList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outstanding maintenance orders at this service location</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contactInfo" type="contactInfo" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="network" type="network"/>
	<xs:complexType name="network">
		<xs:annotation>
			<xs:documentation>This child object of service location incorporates information typically stored in a GIS as system of record, in contrast to the information in the parent class"serviceLocation" that is typically stored in a customer information system as system of record.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="boardDist" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Board director district code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="taxDist" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Taxation district code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="franchiseDist" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Franchise tax district code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="schoolDist" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>School district code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="district" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>District office code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="county" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="cityCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="city" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>City code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="state" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>State or province.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="postalCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="country" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="section" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Public land survey section number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="township" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Public land survey township designation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="range" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Public land survey range designation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subdivision" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Subdivision name.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="block" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Subdivison block.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="lot" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Subdivision lot number.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="specialNeeds">
		<xs:annotation>
			<xs:documentation>A descriptor for any special needs that this customer has, such as life support equipment. THIS SIMPLE TYPE HAS BEEN DEPRECATED IN V4.1 AND WILL BE REPLACED WITH AN ARRAY OF NAME-VALUE PAIRS DESCRIBING TYPES OF SPECIAL NEEDS IN V5.0.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="electricServiceList" type="electricServiceList"/>
	<xs:complexType name="electricServiceList">
		<xs:sequence>
			<xs:element name="electricService" type="electricService" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="waterServiceList" type="waterServiceList"/>
	<xs:complexType name="waterServiceList">
		<xs:sequence>
			<xs:element name="waterService" type="waterService" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="gasServiceList" type="gasServiceList"/>
	<xs:complexType name="gasServiceList">
		<xs:sequence>
			<xs:element name="gasService" type="gasService" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="propaneServiceList" type="propaneServiceList"/>
	<xs:complexType name="propaneServiceList">
		<xs:sequence>
			<xs:element name="propaneService" type="propaneService" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="otherServiceList" type="otherServiceList"/>
	<xs:complexType name="otherServiceList">
		<xs:sequence>
			<xs:element name="otherService" type="otherService" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="serviceLocations" type="serviceLocations"/>
	<xs:complexType name="serviceLocations">
		<xs:sequence>
			<xs:element name="serviceLocation" type="serviceLocation" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="calculatedCurrentBillReadings" type="calculatedCurrentBillReadings"/>
	<xs:complexType name="calculatedCurrentBillReadings">
		<xs:sequence>
			<xs:element name="meterReading" type="meterReading" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="electricService" type="electricService"/>
	<xs:complexType name="electricService">
		<xs:annotation>
			<xs:documentation>A point of service for receiving electrical utility service.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:group ref="connectivityModelGroup" minOccurs="0" maxOccurs="1"/>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A foreign key for the customer associated with this electric service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this service location.  Depending on the system of record, this may be either the account.objectID or the account.objectName.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to the serviceLocation that includes this electricService.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterBaseID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID of the meterBase object.  MeterBase is the permanent location of the meter installation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="electricMeterID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the ID of the electricMeter that is installed at this electricService</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="electricLocationFields" type="electricLocationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outageStatus" type="powerStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outage status for this electric service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="specialNeeds" type="specialNeeds" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A descriptor for any special needs that this customer has, such as life support equipment. THIS SIMPLE TYPE HAS BEEN DEPRECATED IN V4.1 AND WILL BE REPLACED WITH AN ARRAY OF NAME-VALUE PAIRS DESCRIBING TYPES OF SPECIAL NEEDS IN V5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="connection" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of service (voltage.  phasing| configuration)|</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="loadMgmt" type="loadMgmt" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Load management code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isCogenerationSite" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If customer-owned cogeneration exists at this site (behind the revenue meter) this should be true, otherwise false (or the element should be omitted).  A true value here indicates to the AMR system that reverse meter roataion is not necessarily an indication of meter tampering. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="load" type="mspLoadGroup" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Load at this electric service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="woNumber" type="woNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work order number used to make changes at this service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="soNumber" type="soNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service order number used to make changes at this service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="revenueClass" type="revenueClass" minOccurs="0" maxOccurs="1"/>
					<xs:element name="serviceStatus" type="servStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="billingCycle" type="billingCycle" minOccurs="0" maxOccurs="1"/>
					<xs:element name="route" type="route" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Billing route code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="budgetBill" type="budgBill" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Budget bill code. .</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shutOffDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of shutoff for non-payment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="connectDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last service connection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="disconnectDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last service disconnection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterBase" type="meterBase" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the meter base that is associated with this electric service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rateCode" type="rateCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the string identifier for the rate in effect at this service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceSubType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element provides additional information about the type of service at this location. For instance, the electricService has serviceType "Electric", but the serviceSubType might carry values like "StreetLight", "WaterWell", Solar", etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="powerStatus">
		<xs:annotation>
			<xs:documentation>Outage status for this electric service.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="PowerOff"/>
			<xs:enumeration value="PowerOn"/>
			<xs:enumeration value="StatusUnknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="woNumber">
		<xs:annotation>
			<xs:documentation>Work order number</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="soNumber">
		<xs:annotation>
			<xs:documentation>Service order number.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="loadMgmt">
		<xs:annotation>
			<xs:documentation>Load management code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="revenueClass">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="servStatus">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="route">
		<xs:annotation>
			<xs:documentation>Billing route code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="meterBase" type="meterBase"/>
	<xs:complexType name="meterBase">
		<xs:annotation>
			<xs:documentation>This is an electric meter base.  Meter base encapsulates all devices and characteristics of an electric service that remain unchanged when an electric meter is replaced, such as intrument transfromers, connect/disconnect devices, etc.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the meter identifier of the meter installed in this meterBase.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the ID of the serviceLocation with which this meterbase is associated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="electricServiceID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the ID of the electricService with which this meterbase is associated</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="premiseID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the ID of the premise (building) at which this meterBase is installed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="form" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Form designator for the type of meter that can be inserted into this meter base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="class" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The maximum of the meter load rating in amperes for meters that could be used in this meter base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="baseType" type="baseType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of meter base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="instrumentTransformers" type="instrumentTransformers" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A set of CT and PT ratios that may be associated with an electric meter base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deviceList" type="deviceList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="electricMeter" type="electricMeter" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the electric meter that is associated with this meter base.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="inHomeDisplays" type="inHomeDisplays" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a list of in-home display objects that are associated with this meterBase.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="instrumentTransformers" type="instrumentTransformers"/>
	<xs:complexType name="instrumentTransformers">
		<xs:annotation>
			<xs:documentation>A set of CT and PT ratios that may be associated with an electric meter base.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ct" type="xs:double" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Ratio of the current transformers installed at this meter base.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="pt" type="xs:double" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Ratio of the potential transformers installed at this meter base.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="deviceList" type="deviceList"/>
	<xs:complexType name="deviceList">
		<xs:annotation>
			<xs:documentation>List of electrical devices that are associated with this meter base.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="cdDeviceID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the objectID of a connect/disconnect device, if any, installed on this meterBase.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="loadManagementDeviceList" type="loadManagementDeviceList" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a list of objectIDs for load management devices that are installed at the customer service that receives power from this meter base.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="inHomeDisplayList" type="inHomeDisplayList" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a list of objectIDs for in home displays that are installed at the customer service that receives power from this meter base.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="loadManagementDeviceList" type="loadManagementDeviceList"/>
	<xs:complexType name="loadManagementDeviceList">
		<xs:annotation>
			<xs:documentation>This is a list of objectIDs for load management devices that are installed at the customer service that receives power from this meter base.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="loadManagementDeviceID" type="loadManagementDeviceID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="loadManagementDeviceID">
		<xs:annotation>
			<xs:documentation>This is the objectID of a load management device.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="msp:objectID"/>
	</xs:simpleType>
	<xs:element name="inHomeDisplayList" type="inHomeDisplayList"/>
	<xs:complexType name="inHomeDisplayList">
		<xs:annotation>
			<xs:documentation>This is a list of in-home displays that are associated with this meter base/electric service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="inHomeDisplayID" type="inHomeDisplayID" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is the objectID of an in-home display that is associated with this meter base/electric service.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="inHomeDisplayID">
		<xs:annotation>
			<xs:documentation>This is the objectID of an in-home display that is associated with this meter base/electric service.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="msp:objectID"/>
	</xs:simpleType>
	<xs:element name="inHomeDisplay" type="inHomeDisplay"/>
	<xs:complexType name="inHomeDisplay">
		<xs:annotation>
			<xs:documentation>This is an in-premises display for customer information.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="manufacturer" type="manufacturer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID of an in-home display that is associated with this meter base/electric service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serialNumber" type="serialNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Manufacturer-defined serial number for this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deviceType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>In-home display device type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterBaseID" type="objectID" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The objectID of the meter base with which this in-home display is associated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="moduleList" type="moduleList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="utilityInfo" type="utilityInfo" minOccurs="0" maxOccurs="1"/>
					<xs:element name="inHomeDisplayBillingMessageList" type="inHomeDisplayBillingMessageList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of billing messages to display on this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="inHomeDisplayMessageList" type="inHomeDisplayMessageList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of messages to display on this device</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="manufacturer">
		<xs:annotation>
			<xs:documentation>Manufacturer of this asset.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="serialNumber">
		<xs:annotation>
			<xs:documentation>Manufacturer-defined serial number for this device.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="inHomeDisplays" type="inHomeDisplays"/>
	<xs:complexType name="inHomeDisplays">
		<xs:sequence>
			<xs:element name="inHomeDisplay" type="inHomeDisplay" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is an in-premises display for customer information.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="waterService" type="waterService"/>
	<xs:complexType name="waterService">
		<xs:annotation>
			<xs:documentation>A point of service for receiving water utility service.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this service location.  Depending on the system of record, this may be either the account.objectID or the account.objectName.t.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="waterMeterID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="waterLocationFields" type="waterLocationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="woNumber" type="woNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work order number used to make changes at this service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="soNumber" type="soNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service order number used to make changes at this service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="revenueClass" type="revenueClass" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Revenue class.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceStatus" type="servStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service status code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="billingCycle" type="billingCycle" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Billing cycle code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="route" type="route" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Billing route code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="budgetbill" type="budgBill" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Budget bill code. .</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shutOffDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Shut off date for non-payment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="connectDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last service connection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="disconnectDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last service disconnection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="waterMeter" type="waterMeter" minOccurs="0" maxOccurs="1"/>
					<xs:element name="rateCode" type="rateCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the string identifier for the rate in effect at this service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceSubType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element provides additional information about the type of service at this location. For instance, the electricService has serviceType "Electric", but the serviceSubType might carry values like "StreetLight", "WaterWell", Solar", etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="gasService" type="gasService"/>
	<xs:complexType name="gasService">
		<xs:annotation>
			<xs:documentation>A point of service for receiving gas utility service.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this service location.  Depending on the system of record, this may be either the account.objectID or the account.objectName..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the ID of the serviceLocation with which this gasService is associated</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="gasMeterID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the ID of the gasMeter that is installed at this gasService.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="gasLocationFields" type="gasLocationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="woNumber" type="woNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the ID of the gasMeter that is installed at this gasService.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="soNumber" type="soNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service order number used to make changes at this service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="revenueClass" type="revenueClass" minOccurs="0" maxOccurs="1"/>
					<xs:element name="serviceStatus" type="servStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="billingCycle" type="billingCycle" minOccurs="0" maxOccurs="1"/>
					<xs:element name="route" type="route" minOccurs="0" maxOccurs="1"/>
					<xs:element name="budgetBill" type="budgBill" minOccurs="0" maxOccurs="1"/>
					<xs:element name="shutOffDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Shut off date for non-payment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="connectDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last service connection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="disconnectDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last service disconnection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="gasMeter" type="gasMeter" minOccurs="0" maxOccurs="1"/>
					<xs:element name="rateCode" type="rateCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the string identifier for the rate in effect at this service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceSubType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element provides additional information about the type of service at this location. For instance, the electricService has serviceType "Electric", but the serviceSubType might carry values like "StreetLight", "WaterWell", Solar", etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="propaneService" type="propaneService"/>
	<xs:complexType name="propaneService">
		<xs:annotation>
			<xs:documentation>A point of service for receiving propane  utility service.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this service location.  Depending on the system of record, this may be either the account.objectID or the account.objectName..</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the ID of the serviceLocation with which this propaneService is associated</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="propaneMeterID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the ID of the propaneMeter that is installed at this propaneService.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="propaneLocationFields" type="propaneLocationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="woNumber" type="woNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work order number used to make changes at this service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="soNumber" type="soNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service order number used to make changes at this service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="revenueClass" type="revenueClass" minOccurs="0" maxOccurs="1"/>
					<xs:element name="serviceStatus" type="servStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="billingCycle" type="billingCycle" minOccurs="0" maxOccurs="1"/>
					<xs:element name="route" type="route" minOccurs="0" maxOccurs="1"/>
					<xs:element name="budgetBill" type="budgBill" minOccurs="0" maxOccurs="1"/>
					<xs:element name="shutOffDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Shut off date for non-payment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="connectDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last service connection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="disconnectDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last service disconnection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="propaneMeter" type="propaneMeter" minOccurs="0" maxOccurs="1"/>
					<xs:element name="rateCode" type="rateCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the string identifier for the rate in effect at this service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceSubType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element provides additional information about the type of service at this location. For instance, the electricService has serviceType "Electric", but the serviceSubType might carry values like "StreetLight", "WaterWell", Solar", etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="otherService" type="otherService"/>
	<xs:complexType name="otherService">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>String designator for the type of service (e.g., cable, sewer, refuse, etc).  The list of serviceType supported should be available using a GetDomainMembers call to the hosting system.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this service location.  Depending on the system of record, this may be either the account.objectID or the account.objectName, but is assumed to be unique.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="otherMeterID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="otherLocationFields" type="otherLocationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="woNumber" type="woNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work order number used to make changes at this service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="soNumber" type="soNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service order number used to make changes at this service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="revenueClass" type="revenueClass" minOccurs="0" maxOccurs="1"/>
					<xs:element name="serviceStatus" type="servStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="billingCycle" type="billingCycle" minOccurs="0" maxOccurs="1"/>
					<xs:element name="route" type="route" minOccurs="0" maxOccurs="1"/>
					<xs:element name="budgetBill" type="budgBill" minOccurs="0" maxOccurs="1"/>
					<xs:element name="shutOffDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Shut off date for non-payment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="connectDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last service connection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="disconnectDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of last service disconnection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="otherMeter" type="otherMeter" minOccurs="0" maxOccurs="1"/>
					<xs:element name="rateCode" type="rateCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the string identifier for the rate in effect at this service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceSubType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element provides additional information about the type of service at this location. For instance, the electricService has serviceType "Electric", but the serviceSubType might carry values like "StreetLight", "WaterWell", Solar", etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="backgroundGraphics" type="backgroundGraphics"/>
	<xs:complexType name="backgroundGraphics">
		<xs:annotation>
			<xs:documentation>MultiSpeak background graphics collection to exchange graphics features that are not otherwise defined in MultiSpeak.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="genericAnnotationFeatureList" type="genericAnnotationFeatureList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="genericPointFeatureList" type="genericPointFeatureList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="genericLineFeatureList" type="genericLineFeatureList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="graphicSymbolList" type="graphicSymbolList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="genericPolygonFeatureList" type="genericPolygonFeatureList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="meterGroup" type="meterGroup"/>
	<xs:complexType name="meterGroup">
		<xs:annotation>
			<xs:documentation>This is a group of meters.  A meter group may be used to instruct the MR to take some action on this set of meters, for instance, take a billing meter read on all of the meters in this group or configure all of the meters identically..</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="groupName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The name by which this group of meters will be referred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterList" type="meterList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The meterIDs for the meters contained in this meter group.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="meterList" type="meterList"/>
	<xs:complexType name="meterList">
		<xs:annotation>
			<xs:documentation>The meterIDs for the meters contained in this meter group.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is the identifier for a meter.  Note that the meter might be of different service types (for example: electric, gas, propane, water, etc.).  Since objectIDs are guarenteed to be unique only over the domain of one type of noun (class or object), it is necessary to specify both a serviceType and an objectID in order to ensure a unique instance of a meter.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="electricMeterGroups" type="electricMeterGroups"/>
	<xs:complexType name="electricMeterGroups">
		<xs:annotation>
			<xs:documentation>This is a set of meterGroups that contain only electricMeters.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="meterGroup" type="meterGroup" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is a set of meterGroups that contain only electricMeters.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="gasMeterGroups" type="gasMeterGroups"/>
	<xs:complexType name="gasMeterGroups">
		<xs:annotation>
			<xs:documentation>This is a set of MeterGroups that only contain gasMeters.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="meterGroup" type="meterGroup" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is a set of MeterGroups that only contain gasMeters.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="waterMeterGroups" type="waterMeterGroups"/>
	<xs:complexType name="waterMeterGroups">
		<xs:annotation>
			<xs:documentation>This is a set of meterGroups that only contain waterMeters.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="meterGroup" type="meterGroup" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is a set of meterGroups that only contain waterMeters.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="propaneMeterGroups" type="propaneMeterGroups"/>
	<xs:complexType name="propaneMeterGroups">
		<xs:annotation>
			<xs:documentation>This is a set of meterGroups that only include propane meters.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="meterGroup" type="meterGroup" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is a set of meterGroups that only include propane meters.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="mixedMeterGroups" type="mixedMeterGroups"/>
	<xs:complexType name="mixedMeterGroups">
		<xs:annotation>
			<xs:documentation>This is a set of meterGroups that may include any type of meters.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="meterGroup" type="meterGroup" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is a set of meterGroups that may include any type of meters.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="meterGroups" type="meterGroups"/>
	<xs:complexType name="meterGroups">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="electricMeterGroups" type="electricMeterGroups" minOccurs="0" maxOccurs="1"/>
					<xs:element name="gasMeterGroups" type="gasMeterGroups" minOccurs="0" maxOccurs="1"/>
					<xs:element name="waterMeterGroups" type="waterMeterGroups" minOccurs="0" maxOccurs="1"/>
					<xs:element name="propaneMeterGroups" type="propaneMeterGroups" minOccurs="0" maxOccurs="1"/>
					<xs:element name="mixedMeterGroups" type="mixedMeterGroups" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="schedule" type="schedule"/>
	<xs:complexType name="schedule">
		<xs:annotation>
			<xs:documentation>This is a general-purpose schedule object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="purpose" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A description of the purpose for this schedule.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maximumRunTime" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If the scheduled action has not completed in this period of time then terminate the action being scheduled. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="effectiveWindow" type="timePeriod" minOccurs="0" maxOccurs="1"/>
					<xs:element name="isEnabled" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
					<xs:element name="offset" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The offset from midnight (i.e., 0 hours, 0 minutes, 0 seconds) for the periodic time points to begin.  For example, for an interval meter that is set up for five minute intervals, setting recurrencePeriod=300 (5 minutes) and offset=120 (2 minutes) would result in scheduled events to read the meter executing at 2, 7, 12, 17, 22, 27, 32, 37, 42, 47, 52, and 57 minutes past each hour.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="absoluteTimeSchedule" type="absoluteSchedule" minOccurs="0" maxOccurs="1"/>
					<xs:element name="periodicSchedule" type="periodicSchedule" minOccurs="0" maxOccurs="1"/>
					<xs:element name="TimePoints" type="cimTimePoints" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>This structure is here for future CIM harmonization.  It is not expeted that this schedule structure will be used in MultiSpeak scheduling applications</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="timePeriod" type="timePeriod"/>
	<xs:complexType name="timePeriod">
		<xs:sequence>
			<xs:element name="startTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="endTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="absoluteSchedule" type="absoluteSchedule"/>
	<xs:complexType name="absoluteSchedule">
		<xs:sequence>
			<xs:element name="timePoint" type="timePoint" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="timePoint" type="timePoint"/>
	<xs:complexType name="timePoint">
		<xs:sequence>
			<xs:element name="absoluteTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="sequenceNumber" type="xs:integer" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="periodicSchedule" type="periodicSchedule"/>
	<xs:complexType name="periodicSchedule">
		<xs:sequence>
			<xs:element name="startTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="period" type="period" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="period" type="period"/>
	<xs:complexType name="period">
		<xs:simpleContent>
			<xs:extension base="integerType">
				<xs:attribute name="timeUnits" use="optional" type="timeUnits">
					<xs:annotation>
						<xs:documentation>Units of time.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="integerType">
		<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	<xs:element name="cimTimePoints" type="cimTimePoints"/>
	<xs:complexType name="cimTimePoints">
		<xs:annotation>
			<xs:documentation>This structure is here for future CIM harmonization.  It is not expeted that this schedule structure will be used in MultiSpeak scheduling applications</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="absoluteTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="relativeTimeInterval" type="duration" minOccurs="0" maxOccurs="1"/>
			<xs:element name="sequenceNumber" type="xs:integer" minOccurs="0" maxOccurs="1"/>
			<xs:element name="window" type="timePeriod" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="readingSchedule" type="readingSchedule"/>
	<xs:complexType name="readingSchedule">
		<xs:annotation>
			<xs:documentation>A meter reading schedule.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="schedule">
				<xs:sequence>
					<xs:element name="meterList" type="meterList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterGroupList" type="meterGroupList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="configurationGroupList" type="configurationGroupList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="readingTypeList" type="readingTypeList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The definition of readingType comes from Annex C of IEC 61968-9.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="meterGroupList" type="meterGroupList"/>
	<xs:complexType name="meterGroupList">
		<xs:sequence>
			<xs:element name="meterGroupID" type="objectID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="configurationGroupList" type="configurationGroupList"/>
	<xs:complexType name="configurationGroupList">
		<xs:sequence>
			<xs:element name="configurationGroupID" type="objectID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="readingTypeCode" type="readingTypeCode"/>
	<xs:complexType name="readingTypeCode">
		<xs:annotation>
			<xs:documentation>This is the readingType identifier as recommended in Annex C of IEC 61968-9.  An example of the readingTypeCode would be "2.6.7.1.0.12.0.0.0.3.72".  The readingTypeCode is built up by concatenating the numerical values of each of the attributes (except "name") in this element.  Note that several of the attributes as defined in IEC61968-9 are compound, so that the total number of attributes does not match the total number of concatenated values.  The readingTypeCode given above corresponds to "15-minute IntervalData Forward Energy, (kWh)".</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="name" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the human-readable string name for this type of reading.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="timeAttribute" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This attribute describes the time period of interest.  Examples are: 1="10-minute", 2="15-minute", etc.  It is suggested that these values are numerical and match the recommended enumerations shown in Annex C of IEC61968-9.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="dataQualifier" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This attribute describes the type of data (examples are 1=Absolute, 2=Average, ..8=Maximum, etc.).It is suggested that these values are numerical and match the recommended enumerations shown in Annex C of IEC61968-9.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="accumulationBehavior" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This attribute describes how the reading was accumulated. Examples are: 1=Bulk Quality, 2=Continuous Cumulative, etc.  It is suggested that these values are numerical and match the recommended enumerations shown in Annex C of IEC61968-9.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="flowDirection" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This attribute describes the direction of flow of the quantify measured.  Examples are: 1=Forward, 2=Lagging, 3=Leading, etc.  It is suggested that these values are numerical and match the recommended enumerations shown in Annex C of IEC61968-9.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="UOMCategory" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>It is suggested that these values are numerical and match the recommended enumerations shown in Annex C of IEC61968-9.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="measurementCategory" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>It is suggested that these values are numerical and match the recommended enumerations shown in Annex C of IEC61968-9.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="phaseIndex" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>It is suggested that these values are numerical and match the recommended enumerations shown in Annex C of IEC61968-9.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="unitsMultiplier" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>It is suggested that these values are numerical and match the recommended enumerations shown in Annex C of IEC61968-9.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="displayableUOM" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>It is suggested that these values are numerical and match the recommended enumerations shown in Annex C of IEC61968-9.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:anyAttribute namespace="##any" processContents="lax"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="readingType" type="readingType"/>
	<xs:complexType name="readingType">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="readingTypeCode" type="readingTypeCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This optional element carries the information to create a CIM-compatible readingType, based on Annex C of IEC61968-9.  If it is desired to create CIM-compatible readingType identifiers (objectIDs in MultiSpeak parlance) then they can be created by concatenating the numerical attributes carried in this element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="measurementType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is either a string description of the type of measurement (i.e., Demand, energy, indoor temperature, etc) or a pointer to an instance of a CIM MeasurementType.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="measTypeCategory" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This attribute can be used as a further descriptor for a TOU rate or some other condition which characterizes the metering. Typical categories include: Energy, Power, Demand, Voltage, Current, Voltage Angle, Current Angle, Phase Angle, Power Factor, Pressure, Volume, Date, Time.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="units" type="uom" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The units of measure that this readingType are described in.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="forwardChronology" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>By default (true), intervals are presented in "forward" chronological order. This field is provided for systems that must operate in "reverse" chronological order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="defaultValueDataType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The numeric type to be expected for the associated Block.value (e.g. dataType= unsignedInteger).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="defaultQuality" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This quality code is to be supplied to each block.value unless a block.validityStatus is supplied instead. (e.g. status =  "Good").</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="dynamicConfiguration" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Demand configuration such as block, rolling, logrithmic and sizes such as 15 minutes, 30 minutes, 5 minutes subinterval.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="channel" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Logical positioning of this measurement data.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="configurationGroup" type="configurationGroup"/>
	<xs:complexType name="configurationGroup">
		<xs:complexContent>
			<xs:extension base="meterGroup">
				<xs:sequence>
					<xs:element name="configuredReadingTypes" type="configuredReadingTypes" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="configurationList" type="configurationList"/>
	<xs:complexType name="configurationList">
		<xs:sequence>
			<xs:element name="configurationGroup" type="configurationGroup" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="scadaPoint" type="scadaPoint"/>
	<xs:complexType name="scadaPoint">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Desciprion for this point.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="scadaPointType" type="scadaPointType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="GISFeatureID" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element gives the ability to link between a SCADA point and a GIS feature.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="GISFeatureType" type="featureType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element descirbes the type of GIS feature that corresponds to this SCADA point.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="scadaPointType">
		<xs:annotation>
			<xs:documentation>Type of SCADA point.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="status"/>
			<xs:enumeration value="analog"/>
			<xs:enumeration value="accumulator"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="scadaPointList" type="scadaPointList"/>
	<xs:complexType name="scadaPointList">
		<xs:sequence>
			<xs:element name="scadaPoint" type="scadaPoint" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="scadaPoints" type="scadaPoints"/>
	<xs:complexType name="scadaPoints">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="scadaPointList" type="scadaPointList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="scadaAnalog" type="scadaAnalog"/>
	<xs:complexType name="scadaAnalog">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="value" type="value" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Value of measurement (e.g.  10 kWh would have a value of 10 and a unit of kWh).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="unitPrefix" type="unitPrefix" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The type of reading taken.  See enumeration list.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="quality" type="qualityDescription" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Quality qualifiers .(see Enumeration list for Measurement for values).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="analogCondition" type="analogCondition" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Range of analog value(see enumeration).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timeStamp" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time analog was recorded.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element defines the phase measurement associations. This element is not present if not provided or if this element doesn't apply.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="scadaAnalogValues" type="scadaAnalogValues" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This structure permits the transfer of multiple values from different measurement sources, as is required in the CIM CPSM profile.  This is not required for MultiSpeak data transfers.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="unitID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The named unit used for this measurement.  The unit is defined in the Unit.nameFields.name for the Unit associated with this measurement.  This is used in the CPSM profile and is not used in MultiSpeak transfers.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="positiveFlowIn" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If true then this measurement is a MW, MVAR or AMPS with the convention that a positive value measured at the Terminal means power is flowing into the related PowerSystemResource.  This is used in the CPSM profile, but is not used in MultiSpeak transfers.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="analogLimitSetID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to an optional set of analong limit values that are carried in a catalog of AnalogLimitSet objects.  This is used in the CPSM profile, but is not used in MultiSpeak transfers.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="measurementTypeID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to an optional set of measurementTypes that are carried in a catalog of MeasurementType objects. MeasurementType objects are not required for MultiSpeak transfers, but are includd here for CIM compatibility.MeasurementType specifies the type of Measurement, e.g. IndoorTemperature, OutDoorTemperature, BusVoltage, GeneratorVoltage, LineFlow etc. The cimMeasurementType.nameFields.name shall be unique among all specified types and describe the type. The cimMeasurementType.nameFields.aliasName is meant to be used for localization.  For the CPSM profile, the only acceptable values for cimMeasurementType.nameFields.name are: ThreePhasePower,ThreePhaseActivePower, ThreePhaseReactivePower, LineCurrent, LineToLineVoltage, Angle, TapPosition, or SwitchPosition.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="powerSystemResourceID" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to the Power System Resource whith whicht this measurement is associated.  This element is not used in MultiSpeak, but is provided for compliance with CIM models.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maxValue" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Normal value range maximum for any of the MeasurementValue.values. Used for scaling, e.g. in bar graphs or of telemetered raw values.This is used in the CPSM profile, but is not used in MultiSpeak transfers. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="minValue" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Normal value range minimum for any of the MeasurementValue.values. Used for scaling, e.g. in bar graphs or of telemetered raw values.  This is used in the CPSM profile, but is not used in MultiSpeak transfers.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="nominalValue" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Normal measurement value, e.g., used for percentage calculations. This is used in the CPSM profile, but is not used in MultiSpeak transfers.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="otherQualityCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element is to permit extensibility of the enumerated values for quality codes carried in the quality element. If the quality element carries a value of "Other", then the non-standard enumerated value should be carried in the otherQualityCode element.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="unitPrefix">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Maximum"/>
			<xs:enumeration value="Minimum"/>
			<xs:enumeration value="Average"/>
			<xs:enumeration value="Instantaneous"/>
			<xs:enumeration value="Cumulative"/>
			<xs:enumeration value="Quantity"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="qualityDescription">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Measured"/>
			<xs:enumeration value="Default"/>
			<xs:enumeration value="Estimated"/>
			<xs:enumeration value="Calculated"/>
			<xs:enumeration value="Initial"/>
			<xs:enumeration value="Last"/>
			<xs:enumeration value="Failed"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="analogCondition">
		<xs:annotation>
			<xs:documentation>Range of analog value(see enumeration).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="L4"/>
			<xs:enumeration value="L3"/>
			<xs:enumeration value="L2"/>
			<xs:enumeration value="L1"/>
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="H1"/>
			<xs:enumeration value="H2"/>
			<xs:enumeration value="H3"/>
			<xs:enumeration value="H4"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="scadaAnalogValues" type="scadaAnalogValues"/>
	<xs:complexType name="scadaAnalogValues">
		<xs:annotation>
			<xs:documentation>This structure permits the transfer of multiple values from different measurement sources, as is required in the CIM CPSM profile.  This is not required for MultiSpeak data transfers.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AnalogValue" type="cpsm:AnalogValue" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="value" type="value"/>
	<xs:complexType name="value">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="uom">
					<xs:annotation>
						<xs:documentation>The units for this scadaAnalog value.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="scadaControl" type="scadaControl"/>
	<xs:complexType name="scadaControl">
		<xs:sequence>
			<xs:element name="scadaPointID" type="objectID" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the pointID of the device  to be controlled in the system (either SCADA or distribution automation) that has operational control of the device. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="controlKey" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a session key that is exchanged with this control action.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="function" type="scadaFunction" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the action that is to be taken.  The enumerated options are select, operate, and directOperate.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="relayType" type="relayType" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element carries a parameter to describe the action to be taken.  The enumeration is: normal, trip and close.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="controlCode" type="controlCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element describes the type of switching to send.  The enumeration list is: Pulse on, Pulse off, Latch on, and Latch off.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="onTime" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The time in milliseconds that the digital output is to be turned on.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="offTime" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The time in milliseconds that the digital output is to be turned off.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="count" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The number of times that the control action is to be taken in succession. If the count = 0 then the action should not be taken.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="controlStatus" type="controlStatus" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>These are the control status indications.  The equivalent DNP 3.0 status codes are:             Control accepted = 0                                 Operate message received after arm timer timed out (Select timeout)= 1                                         Point not operated becuase point not selected before operation (Point not selected)= 2                   Control request not accepted; formatting errors in control action (Formatting errors in control request)= 3                                                                  Control operation not supported for this point (Control not supported) = 4                         Control queue is full = 5                              Control request not accepted, control hardware problems (Hardware failure)= 6                       Point already selected - undefined in DNP 3.0               </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="scadaFunction">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Select"/>
			<xs:enumeration value="Operate"/>
			<xs:enumeration value="Direct operate"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="relayType">
		<xs:annotation>
			<xs:documentation>This element carries a parameter to describe the action to be taken.  The enumeration is: normal, trip and close.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Trip"/>
			<xs:enumeration value="Close"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="controlCode">
		<xs:annotation>
			<xs:documentation>This element describes the type of switching to send.  The enumeration list is: Pulse on, Pulse off, Latch on, and Latch off.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Pulse on"/>
			<xs:enumeration value="Pulse off"/>
			<xs:enumeration value="Latch on"/>
			<xs:enumeration value="Latch off"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="controlStatus">
		<xs:annotation>
			<xs:documentation>These are the control status indications.  The equivalent DNP 3.0 status codes are:             Control accepted = 0                                 Operate message received after arm timer timed out (Select timeout)= 1                                         Point not operated becuase point not selected before operation (Point not selected)= 2                   Control request not accepted; formatting errors in control action (Formatting errors in control request)= 3                                                                  Control operation not supported for this point (Control not supported) = 4                         Control queue is full = 5                              Control request not accepted, control hardware problems (Hardware failure)= 6                       Point already selected - undefined in DNP 3.0               </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Control accepted"/>
			<xs:enumeration value="Select timeout"/>
			<xs:enumeration value="Point not selected"/>
			<xs:enumeration value="Formatting errors in control request"/>
			<xs:enumeration value="Control not supported"/>
			<xs:enumeration value="Control queue full"/>
			<xs:enumeration value="Hardware failure"/>
			<xs:enumeration value="Point already selected"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="scadaStatus" type="scadaStatus"/>
	<xs:complexType name="scadaStatus">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="quality" type="qualityDescription" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Quality qualifiers .(see Enumeration list for Measurement for values).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="status" type="statusIdentifiers" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Status identifiers (See enumerationslist).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="changeCounter" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Numer of status changes since last report. This is a counter that shows the number of status change events since the last notification.  If this number is an odd number, the final status is different than the last reported status; if even, the final status is the same as the initial status,  even though status change events might have occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timeStamp" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Numer of status changes since last report. This is a counter that shows the number of status change events since the last notification.  If this number is an odd number, the final status is different than the last reported status; if even, the final status is the same as the initial status,  even though status change events might have occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="otherQualityCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element is to permit extensibility of the enumerated values for quality codes carried in the quality element. If the quality element carries a value of "Other", then the non-standard enumerated value should be carried in the otherQualityCode element.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="statusIdentifiers">
		<xs:annotation>
			<xs:documentation>Status identifiers (See enumerationslist).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Open"/>
			<xs:enumeration value="Closed"/>
			<xs:enumeration value="Travel"/>
			<xs:enumeration value="OutofService"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="accumulatedValue" type="accumulatedValue"/>
	<xs:complexType name="accumulatedValue">
		<xs:annotation>
			<xs:documentation>This object implements an accumulator, such as that in a SCADA system.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="countedValue" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Accumulated value being reported.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timeStamp" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time accumulated value was recorded.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ceilingValue" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the value beyond which the accumulator will roll over or latch at maximum.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="latchesAtMaximum" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is true for an accumulator that does not rollover upon reaching ceiling value.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="measurementID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to an optional set of measurementTypes that are carried in a catalog of MeasurementType objects. </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="project" type="project"/>
	<xs:complexType name="project">
		<xs:annotation>
			<xs:documentation>This is a container for work.  A project can contain work and jobs (work orders, service orders, maintenance orders or outage tickets).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="jobList" type="jobList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Jobs associated with this project.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="remarks" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="workList" type="workList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work associated with this project.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceOrderList" type="serviceOrderList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service orders associated with this project.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workOrderList" type="workOrderList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work orders associated with this project.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maintenanceOrderList" type="maintenanceOrderList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Maintenace orders associated with this project.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="jobList" type="jobList"/>
	<xs:complexType name="jobList">
		<xs:sequence>
			<xs:element name="jobID" type="objectRef" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is a list of jobs that are associated with this project.  Jobs may be work orders, service orders, maintenance orders, or outage tickets. the jobID is an objectRef since it is necessary to know the job type (which should be included in the noun field) and the objectID in order to uniquely specify the job.  If desired, it is aslo possible to refer to a workOrder for instance by concatenating the workOrderNumber and jobNumber in to the name field or by putting the workOrder.objectName in the name field.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="workList" type="workList"/>
	<xs:complexType name="workList">
		<xs:sequence>
			<xs:element name="workID" type="objectID" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is a list of jobs that are associated with this project.  Jobs may be work orders, service orders, maintenance orders, or outage tickets. the jobID is an objectRef since it is necessary to know the job type (which should be included in the noun field) and the objectID in order to uniquely specify the job.  If desired, it is aslo possible to refer to a workOrder for instance by concatenating the workOrderNumber and jobNumber in to the name field or by putting the workOrder.objectName in the name field.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="work" type="work" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="serviceOrder" type="serviceOrder"/>
	<xs:complexType name="serviceOrder">
		<xs:annotation>
			<xs:documentation>This is an order to work that may be location-specific, but does not include capital construction.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="projectID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to a project, if any, that contains this service order</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="woNumber" type="woNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the work order number of the associated work order, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="soNumber" type="soNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the work order number of the associated work order, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="soStatusCode" type="soStatusCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service order status code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="soType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service order type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="soDescription" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Customer requesting service</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this work order.  if it exists.  Depending on the system of record, this may be either the account.objectID or the account.objectName, but is assumed to be unique.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier for the service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="network" type="network" minOccurs="0" maxOccurs="1"/>
					<xs:element name="startDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Start date for construction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="closeDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Close date for this construction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crewID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier for crew to perfrom this work.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workedBy" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="associatedMetersList" type="associatedMetersList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="securityLights" type="securityLights" minOccurs="0" maxOccurs="1"/>
					<xs:element name="serviceStatuses" type="serviceStatuses" minOccurs="0" maxOccurs="1"/>
					<xs:element name="equipmentStatuses" type="equipmentStatuses" minOccurs="0" maxOccurs="1"/>
					<xs:element name="otherIdentificationFields" type="otherIdentificationFields" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="soStatusCode">
		<xs:annotation>
			<xs:documentation>Service order status code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Active"/>
			<xs:enumeration value="Closed"/>
			<xs:enumeration value="OnHold"/>
			<xs:enumeration value="Cancelled"/>
			<xs:enumeration value="Enroute"/>
			<xs:enumeration value="Onsite"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="associatedMeters" type="associatedMeters"/>
	<xs:complexType name="associatedMeters">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="existingMeter" type="existingMeter" minOccurs="0" maxOccurs="1"/>
					<xs:element name="replacementMeter" type="replacementMeter" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="existingMeter" type="existingMeter"/>
	<xs:complexType name="existingMeter">
		<xs:sequence>
			<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="meterType" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The type of  utility service for this account (electric, water, gas, propane, etc.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="readingValues" type="readingValues" minOccurs="0" maxOccurs="1"/>
			<xs:element name="actionTaken" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Action taken on this meter.  Possible enumerations include: Installed, Removed, Exchanged, Read, Disconnected, Checked, Other, or Unknown.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="replacementMeter" type="replacementMeter"/>
	<xs:complexType name="replacementMeter">
		<xs:sequence>
			<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="meterType" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The type of  utility service for this account (electric, water, gas, propane, etc.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="readingValues" type="readingValues" minOccurs="0" maxOccurs="1"/>
			<xs:element name="actionTaken" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Action taken on this meter.  Possible enumerations include: Installed, Removed, Exchanged, Read, Disconnected, Checked, Other, or Unknown.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="associatedMetersList" type="associatedMetersList"/>
	<xs:complexType name="associatedMetersList">
		<xs:sequence>
			<xs:element name="associatedMeters" type="associatedMeters" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="streetLight" type="streetLight"/>
	<xs:complexType name="streetLight">
		<xs:complexContent>
			<xs:extension base="mspElectricPoint">
				<xs:sequence>
					<xs:element name="lightType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of fixture (high pressure sodium.  mercury, etc.)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="wattage" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Lamp wattage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="brightness" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Lamp brightness, expressed in lumens.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transformerBankID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is an optional link to the objectID of the transformer bank that serves this street light.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="securityLight" type="securityLight"/>
	<xs:complexType name="securityLight">
		<xs:complexContent>
			<xs:extension base="mspElectricPoint">
				<xs:sequence>
					<xs:element name="lightType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of fixture (high pressure sodium.  mercury, etc.)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="wattage" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Lamp wattage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="brightness" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Lamp brightness, expressed in lumens.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sequence" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="status" type="securityLightStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="actionTaken" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Action taken on this light.  Possible enumerations include: Installed, Removed, Exchanged, Disconnected, Checked, Other, or Unknown.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transformerBankID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is an optional link to the objectID of the transformer bank that serves this street light.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="trafficLight" type="trafficLight"/>
	<xs:complexType name="trafficLight">
		<xs:complexContent>
			<xs:extension base="mspElectricPoint">
				<xs:sequence>
					<xs:element name="transformerBankID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is an optional link to the objectID of the transformer bank that serves this street light.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="streetLocation" type="streetLocation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="owner" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="securityLightStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="NewConnect"/>
			<xs:enumeration value="Active"/>
			<xs:enumeration value="Disconnected"/>
			<xs:enumeration value="Inactive"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="streetLocation" type="streetLocation"/>
	<xs:complexType name="streetLocation">
		<xs:sequence>
			<xs:element name="street" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="crossStreet" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="city" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="county" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="state" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="streetLights" type="streetLights"/>
	<xs:complexType name="streetLights">
		<xs:sequence>
			<xs:element name="streetLight" type="streetLight" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="securityLights" type="securityLights"/>
	<xs:complexType name="securityLights">
		<xs:sequence>
			<xs:element name="securityLight" type="securityLight" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="trafficLights" type="trafficLights"/>
	<xs:complexType name="trafficLights">
		<xs:sequence>
			<xs:element name="trafficLight" type="trafficLight" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="statusOfService" type="statusOfService"/>
	<xs:complexType name="statusOfService">
		<xs:sequence>
			<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The type of  utility service for this account (electric, water, gas, propane, etc.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="actionTaken" type="actionTaken" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="actionTaken">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Installed"/>
			<xs:enumeration value="PlacedIntoService"/>
			<xs:enumeration value="Connected"/>
			<xs:enumeration value="Disconnected"/>
			<xs:enumeration value="Removed"/>
			<xs:enumeration value="Inspected"/>
			<xs:enumeration value="Tested"/>
			<xs:enumeration value="Repaired"/>
			<xs:enumeration value="Calibrated"/>
			<xs:enumeration value="Checked"/>
			<xs:enumeration value="ReturnedToInventory"/>
			<xs:enumeration value="Retired"/>
			<xs:enumeration value="Destroyed"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="serviceStatuses" type="serviceStatuses"/>
	<xs:complexType name="serviceStatuses">
		<xs:sequence>
			<xs:element name="statusOfService" type="statusOfService" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="equipmentStatus" type="equipmentStatus"/>
	<xs:complexType name="equipmentStatus">
		<xs:sequence>
			<xs:element name="equipmentType" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of equipment acted upon.  Possible enumerations would include: CDDevices, loadManagementDevices, water tanks, communications modules, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="actionTaken" type="actionTaken" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="equipmentStatuses" type="equipmentStatuses"/>
	<xs:complexType name="equipmentStatuses">
		<xs:sequence>
			<xs:element name="equipmentStatus" type="equipmentStatus" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="otherIdentificationFields" type="otherIdentificationFields"/>
	<xs:complexType name="otherIdentificationFields">
		<xs:sequence>
			<xs:element name="deptCode" type="deptCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>DepartmentCode</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="actCode" type="actCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Activity code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="acNo" type="acNo" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Accounting code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="budgetCode" type="budgetCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Budget code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="warehouseID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Warehouse code for this maintenance order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="grpCode" type="grpCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Code for combining like maintenance orders.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="deptCode">
		<xs:annotation>
			<xs:documentation>Department code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:long"/>
	</xs:simpleType>
	<xs:simpleType name="actCode">
		<xs:annotation>
			<xs:documentation>Activity code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="acNo">
		<xs:annotation>
			<xs:documentation>Accounting Code</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:long"/>
	</xs:simpleType>
	<xs:simpleType name="budgetCode">
		<xs:annotation>
			<xs:documentation>Budget code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:long"/>
	</xs:simpleType>
	<xs:simpleType name="grpCode">
		<xs:annotation>
			<xs:documentation>Code for combining like maintenance orders.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:long"/>
	</xs:simpleType>
	<xs:element name="serviceOrderList" type="serviceOrderList"/>
	<xs:complexType name="serviceOrderList">
		<xs:sequence>
			<xs:element name="serviceOrder" type="serviceOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="workOrder" type="workOrder"/>
	<xs:complexType name="workOrder">
		<xs:annotation>
			<xs:documentation>This is an order for work that includes capital construction.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="projectID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to the project that includes this work order, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="woNumber" type="woNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work order number.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="jobNumber" type="jobNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Job number. Along with woNumber, the job number defines a unique identifer for a work order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="jobDescr" type="jobDescr" minOccurs="0" maxOccurs="1"/>
					<xs:element name="workflowStatus" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Status code.The stage in the work lifecycle at which this work order exists at this point.  Systems should query the business partner system using the GeDomainMember method.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="designs" type="designs" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Container for alternative designs</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customer" type="customer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Customer requesting service</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this work order.  if it exists. Depending on the system of record, this may be either the account.objectID or the account.objectName.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="locationFields" type="locationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="systemVolts" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>System voltage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contractor" type="contractor" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of contractor, if new home/business.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contractorPhone" type="telephoneNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Contractor's telephone number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="electrician" type="electrician" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of electrician, if new home/business.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="electricianPhone" type="telephoneNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Telephone number for electrician.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="woType" type="woType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type code for work order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cd740c" type="cd740c" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Form 740C code for type of contstruction (ie.  0101).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ext740c" type="ext740c" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Form 740C code extension (ie.  0101-111)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="loanNo" type="loanNo" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Loan designator.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cwpYr" type="cwpYr" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Construction work plan year.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cwpCd" type="cwpCd" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Construction work plan reference code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="budgetPur" type="budgetPur" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Budget purpose code (1-distribution. 2-transmission).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="engrAsnd" type="engrAsnd" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Engineer assigned.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cfmsCode" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>CFMS code.  used in some accounting systems.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="acNo" type="acNo" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Accounting code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="budgetCode" type="budgetCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Budget code</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="actCode" type="actCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Activity code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deptCode" type="deptCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Department code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="warehouseID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Warehouse code for this work order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="grpCode" type="grpCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Code for combining like work orders. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crewID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Code for crew to construct job.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="startDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Start date for construction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="clsDate" type="xs:date" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Closing date for construction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="estDate" type="xs:date" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date staked.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="actionCode" type="actionCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Action code .See enumeration list.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="laborCategoryID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Labor category work will be performed under.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="atc" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Aid to construction amount.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="loadDistrict" type="loadDistrict" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Default loading district for this work order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="constGrade" type="constGrade" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Default construction grade for this work order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="duration" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Anticipated time necessary to complete this work order in hours.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="attachments" type="attachments" minOccurs="0" maxOccurs="1"/>
					<xs:element name="locationAssociations" type="locationAssociations" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is an extensible set of name/value pairs for additional assocations for this workOrder. For instance fireDistrict, linmanServiceDistrict, ambulanceDistrict, roadDistrict, etc., which are not explicitly called out on the workOrder</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workHistoryEvents" type="workHistoryEvents" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a set of events associated with this workOrder that include the name, responsible party and event time. Work history events might be things such as "DesignCompleted", "ReleasedToConstruction", "ConstructionCompleted", etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceOrderNumbers" type="serviceOrderNumbers" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a list of service orders that are associated with this workOrder.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="gridLocation" type="gridLocation" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="jobNumber">
		<xs:annotation>
			<xs:documentation>Job number. Along with woNumber, this provides a unique identifer for a workOrder.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="jobDescr">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="design" type="design"/>
	<xs:complexType name="design">
		<xs:annotation>
			<xs:documentation>A potential design for the anticipated work.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="designIdentifier" type="designIdentifier" minOccurs="0" maxOccurs="1"/>
					<xs:element name="designRole" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Is this role part, alternative or version.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workflowStatus" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Status of this design.  Sample statuses might be: Assigned, In process, Design complete, Pending construction, In construction, As, built, etc. Since these values can vary, it is recommended that these values be discoverable from the system of record using a GetDomainMembers call on "design.workflowStatus".</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stationList" type="stationList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="backgroundGraphics" type="backgroundGraphics" minOccurs="0" maxOccurs="1"/>
					<xs:element name="attachments" type="attachments" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="designIdentifier" type="designIdentifier"/>
	<xs:complexType name="designIdentifier">
		<xs:sequence>
			<xs:element name="designNumber" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Identifier for this design.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="extension" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="station" type="station"/>
	<xs:complexType name="station">
		<xs:annotation>
			<xs:documentation>This is a location where work will be done or equipment installed.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspMultiGeometryObject">
				<xs:sequence>
					<xs:element name="graphicSymbol" type="graphicSymbol" minOccurs="0" maxOccurs="1"/>
					<xs:element name="annotationList" type="genericAnnotationFeatureList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="substationCode" type="substationType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Substation feeding this location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feeder" type="feeder" minOccurs="0" maxOccurs="1"/>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phasing at this location. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="poleUse" type="poleUse" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Pole use code (see enumeration).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="backSpanList" type="backSpanList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of back spans from this stations.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="constTyp" type="constTypeCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Construction type code at this station. This field is used to specify whether the units applied to this station use the hot labor estimates or the cold labor estimates.  Suggested enumerations are (Hot and Cold).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="staStatus" type="staStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Station status code (C. R,E).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="constGrade" type="constGrade" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Construction grade at this station.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="angle" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Angle at this station.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isTap" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Tap at this span (true if is tap off of main line| false if not a tap).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="terrain" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Terrain type at this station.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="GPSLocation" type="GPSLocation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A geographical location as expressed in a geographic coordinate system. The GPSLocation SHALL be expressed using the WGS84 datum. This object SHOULD be used for expressing all types of GPS data and replaces the GPS, gpsPoint, and gpsLocation all of which have been deprecated in V4.1.3. The GPSLocation object will replace these other objects in V5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assemblyList" type="assemblyList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="CPRList" type="CPRList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="objectList" type="physicalObjectList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="pickList" type="pickList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="attachments" type="attachments" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="substationType">
		<xs:annotation>
			<xs:documentation>The code for this substation.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="feeder">
		<xs:annotation>
			<xs:documentation>The substation feeder.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="substationName">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="backSpanList" type="backSpanList"/>
	<xs:complexType name="backSpanList">
		<xs:annotation>
			<xs:documentation>List of back spans from this stations.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="backSpan" type="backSpan" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="backSpan" type="backSpan"/>
	<xs:complexType name="backSpan">
		<xs:sequence>
			<xs:element name="length" type="length" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Length of this backspan.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="stationID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>ObjectID of the station to which this back span connects.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unitAction" type="unitActn" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Action, if any, to be taken on this backspan (C=Create, R=Retire, E=Existing, T=Transfer, S=Salvage).  If the system of record does not support Transfer of units, then it should interpret this action as being the same as "Create".  If the system of record does not support Salvage then it should interpret salavge as being the same as "Retire".</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="unitActn">
		<xs:annotation>
			<xs:documentation>Action, if any, to be taken at this location (C=Create, R=Retire, E=Existing, T=Transfer, S=Salvage).  If the system of record does not support Transfer of units, then it should interpret this action as being the same as "Create".  If the system of record does not support Salvage then it should interpret salavge as being the same as "Retire".</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="C"/>
			<xs:enumeration value="R"/>
			<xs:enumeration value="E"/>
			<xs:enumeration value="T"/>
			<xs:enumeration value="S"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="constTypeCode">
		<xs:annotation>
			<xs:documentation>Construction type code for construction at this location. This field is used to specify whether the units applied to this station use the hot labor estimates or the cold labor estimates.  Suggested enumerations are (Hot and Cold).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Hot"/>
			<xs:enumeration value="Cold"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="staStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="C"/>
			<xs:enumeration value="R"/>
			<xs:enumeration value="E"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="constGrade">
		<xs:restriction base="xs:string">
			<xs:enumeration value="GradeB"/>
			<xs:enumeration value="GradeC"/>
			<xs:enumeration value="GradeN"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="assembly" type="assembly"/>
	<xs:complexType name="assembly">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="featureType" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The GIS feature type (MultiSpeak noun name) with which this assembly should be associated. The intention of this element and the following element (featureID) is to permit an optional means to tightly link assemblies and GIS features so as to facilitate a better translation between assemblies and features.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="featureID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The objectID of the GIS feature (MultiSpeak noun) with which this assembly is associated.  It is assumed that there is a one-to-one relationship between assemblies and features.  If any existing assembly relates to multiple features, then the assembly should be redefined so that the one-to-one realtionship would then exist.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unitCode" type="unitCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Unit (assembly) code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unitAction" type="unitActn" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Action, if any, to be taken on this backspan (C=Create, R=Retire, E=Existing, T=Transfer, S=Salvage).  If the system of record does not support Transfer of units, then it should interpret this action as being the same as "Create".  If the system of record does not support Salvage then it should interpret salavge as being the same as "Retire".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="spanType" type="spanTyp" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of span (Primary.  Secondary, Service, Underbuild, None).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unitLength" type="length" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Length of unit.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="poleVar" type="poleVar" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Pole variant. Reference code 1.  Used in some systems.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="wireVar" type="wireVar" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Wire variant.Reference code 2, used in some systems.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="neutVar" type="neutVar" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Neutral wire variant. Reference code 3, used in some systems.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="miscVar" type="miscVar" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Miscellaneous variant. Reference code 4. as used in some systems.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="quantity" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Quantity of unit required.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="poleHeight" type="height" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Height of pole.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="poleClass" type="poleClass" minOccurs="0" maxOccurs="1"/>
			<xs:element name="poleType" type="poleType" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="assemblyList" type="assemblyList"/>
	<xs:complexType name="assemblyList">
		<xs:sequence>
			<xs:element name="assembly" type="assembly" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="unitCode">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="spanTyp">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Primary"/>
			<xs:enumeration value="Secondary"/>
			<xs:enumeration value="Service"/>
			<xs:enumeration value="Underbuild"/>
			<xs:enumeration value="None"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="poleVar">
		<xs:annotation>
			<xs:documentation>Pole variant.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="wireVar">
		<xs:annotation>
			<xs:documentation>Wire variant.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="neutVar">
		<xs:annotation>
			<xs:documentation>Neutral variant.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="miscVar">
		<xs:annotation>
			<xs:documentation>Miscellaneous variant.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="quantity">
		<xs:restriction base="xs:float"/>
	</xs:simpleType>
	<xs:element name="CPRList" type="CPRList"/>
	<xs:complexType name="CPRList">
		<xs:sequence>
			<xs:element name="CPR" type="CPR" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="CPR" type="CPR"/>
	<xs:complexType name="CPR">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="acctCode" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Accounting code for this continuing property record.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantity" type="quantity" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Numer of items of this CPR.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="length" type="length" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Length of item in ths CPR.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unitAction" type="unitActn" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Action, if any, to be taken on this backspan (C=Create, R=Retire, E=Existing, T=Transfer, S=Salvage).  If the system of record does not support Transfer of units, then it should interpret this action as being the same as "Create".  If the system of record does not support Salvage then it should interpret salavge as being the same as "Retire".</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="loadManagementDevice" type="loadManagementDevice"/>
	<xs:complexType name="loadManagementDevice">
		<xs:annotation>
			<xs:documentation>This is a device that permits utility control of customer load.  The device ID is contained in the object ID for each device.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="serialNumber" type="serialNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a device that permits utility control of customer load.  The device ID is contained in the object ID for each device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deviceType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Load management device type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="manufacturer" type="manufacturer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Device manufacturer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phases" type="phases" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of phases.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="status" type="deviceStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Device status code (On,  Off, OutofService, PowerLimitation, Other, Unknown)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="powerLimit" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Demand limit in kW if the device is in power limitation mode.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter Id (Unique identifier for each meter).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="moduleList" type="moduleList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a list of modules associated with this device.  If one of the modules is a communications module, the objectID of that module is what was previously known as a transponderID.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="numberOfRelays" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The number of load control realys associated with this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The rated voltage of the load control relays asociated with this device, typically expressed in volts.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedCurrent" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The rated current of the load control relays associated with this device, typically expressed in amperes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="loadManagementDeviceRelays" type="loadManagementDeviceRelays" minOccurs="0" maxOccurs="1"/>
					<xs:element name="AMRDeviceType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Vendor-specific device designation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AMRVendor" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of AMR vendor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="utilityInfo" type="utilityInfo" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="phases">
		<xs:annotation>
			<xs:documentation>Number of phases.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:long"/>
	</xs:simpleType>
	<xs:simpleType name="deviceStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="On"/>
			<xs:enumeration value="Off"/>
			<xs:enumeration value="OutofService"/>
			<xs:enumeration value="PowerLimitation"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="measurementDevice" type="measurementDevice"/>
	<xs:complexType name="measurementDevice">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="measurementDeviceType" type="measurementDeviceType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of this measurement device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eaLoc" type="eaLoc" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Engineering analysis location (line section or node number).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="substation" type="substationType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Substation code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feeder" type="feeder" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Feeder code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phasing code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="measuremrentDeviceStatus" type="measurementDeviceStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="pointID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Unique identifier for measurement device location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="measurementDeviceType">
		<xs:annotation>
			<xs:documentation>Type of measuremrnt device.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Emeter"/>
			<xs:enumeration value="Gmeter"/>
			<xs:enumeration value="Wmeter"/>
			<xs:enumeration value="Demand"/>
			<xs:enumeration value="Harmonic"/>
			<xs:enumeration value="Phaseangle"/>
			<xs:enumeration value="BusV"/>
			<xs:enumeration value="BusI"/>
			<xs:enumeration value="BkrV"/>
			<xs:enumeration value="BkrI"/>
			<xs:enumeration value="LineV"/>
			<xs:enumeration value="LineI"/>
			<xs:enumeration value="GPSClock"/>
			<xs:enumeration value="Temp"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="measurementDeviceStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="InService"/>
			<xs:enumeration value="OutofService"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="outageDetectionDevice" type="outageDetectionDevice"/>
	<xs:complexType name="outageDetectionDevice">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="serialNumber" type="serialNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Device serial number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageDetectDeviceType" type="outageDetectDeviceType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of outage detection.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="manufacturer" type="manufacturer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Device manufacturer.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phases" type="phases" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of phases.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phasing code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter identifier. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageDetectDeviceStatus" type="outageDetectDeviceStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Status of this outage detection device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="outageDetectDeviceType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Call"/>
			<xs:enumeration value="CustomerServiceRep"/>
			<xs:enumeration value="InboundTelephoneDevice"/>
			<xs:enumeration value="Meter"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="outageDetectDeviceStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="InService"/>
			<xs:enumeration value="OutofService"/>
			<xs:enumeration value="Defective"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="powerSystemDevice" type="powerSystemDevice"/>
	<xs:complexType name="powerSystemDevice">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="deviceDescription" type="description" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of this power system device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="description">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="primaryCabinet" type="primaryCabinet"/>
	<xs:complexType name="primaryCabinet">
		<xs:annotation>
			<xs:documentation>This object is a primary voltage pad-mounted or vault mounted enclosure.  It may be just a junction box or it may be a manufactured structure, such as a piece of PMH-9 switchgear.  The primaryCabinet object lists information about the enclosure or object along with links to pieces of equipment that are contained in this object.  For instance for a piece of switchgear, there would be links in the cabinetContentsList to the switchingDeviceBanks that make up each switch.  For a transclosure, the cabinetContentsList owuld include a link to one or more transformerBanks contained in the transclosure.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="structType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description for type of primaryCabinet (i.e.  PMH-9)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cabinetContentsList" type="cabinetContentsList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of items that are located in this primary cabinet.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="cabinetContentsList" type="cabinetContentsList"/>
	<xs:complexType name="cabinetContentsList">
		<xs:sequence>
			<xs:element name="cabinetContentsItem" type="objectRef" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This element is a reference to an object  that is contained in the primary cabinet.  The noun describes what type of object this is (e.g., switchDeviceBank, etc).  The objectID is the key field for that type of noun, and the name is a descrptive field for this instance of the object.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="secondaryJunctionBox" type="secondaryJunctionBox"/>
	<xs:complexType name="secondaryJunctionBox">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="junctionBoxType" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this class models a tracked asset, this optional element may be used to carry asset information.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="powerMonitor" type="powerMonitor"/>
	<xs:complexType name="powerMonitor">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="callTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="telephoneNumber" type="telephoneNumber" minOccurs="0" maxOccurs="1"/>
					<xs:element name="recordNum" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>User friendly record number</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventCode" type="pmEventCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Power monitor event code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="voltage" type="voltage" minOccurs="0" maxOccurs="1"/>
					<xs:element name="ack" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>True if this record was acknowledged</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ackBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of person acknowledging PM record</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ackTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time PM record was acknowledged</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="pmEventCode">
		<xs:annotation>
			<xs:documentation>Power monitor event code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="LowBattery"/>
			<xs:enumeration value="Event1"/>
			<xs:enumeration value="Event2"/>
			<xs:enumeration value="Event3"/>
			<xs:enumeration value="LockOut"/>
			<xs:enumeration value="PowerRestored"/>
			<xs:enumeration value="UndeterminedOn"/>
			<xs:enumeration value="UndeterminedOff"/>
			<xs:enumeration value="BrownOut"/>
			<xs:enumeration value="HighVoltage"/>
			<xs:enumeration value="NormalVoltage"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="substation" type="substation"/>
	<xs:complexType name="substation">
		<xs:annotation>
			<xs:documentation>The substation is a container class that can hold bays, breakers, transformers, feeders, reclosers, etc.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="GMLPolygon" type="gml:PolygonType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="GMLLocation" type="gml:PointType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a geographical x,y, (z) location, referenced to a specific geographical coordinate system and datum.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="annotationList" type="genericAnnotationFeatureList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="facilityID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Utility string designation for this object.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="name" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of substation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="busVolts" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Bus voltage mutliplier.  
Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="nominalVolts" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Nominal voltage for section (L-G for wye.  L-L for delta).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feederList" type="feederList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a list of distribution feeders, if any, that originate in this substation.  The use of feeders as containers is optional in MultiSpeak and not recognized in CIM.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contentsList" type="contentsList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is an optional way to associate equipment with this substation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="bayList" type="bayList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Bays are containers that can be used to designate collections of equipment associated with a substation bay.  Bays are required in CIM but not necessary in MultiSpeak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="voltageLevels" type="voltageLevels" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Voltage levels are used as equipment containers in CIM, but are not required in MultiSpeak.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="regionID" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The SubGeographicalRegion that this substation is contained in.  This is required for the CIM CPSM profile, but is not used in MultiSpeak.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="feederObject" type="feederObject"/>
	<xs:complexType name="feederObject">
		<xs:annotation>
			<xs:documentation>FeederObjects are containers for equipment associated with a distribution feeder. The use of feeders as containers is optional in MultiSpeak and not recognized in CIM.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="substationName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of substation that includes this feeder.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feederName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of substation feeder.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feederNo" type="feeder" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of substation feeder</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="facilityID" type="facilityID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Utility string desingato for this object.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feederColor" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Color to be used to render this feeder in geographical displays.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="bus" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>In a split bus substation, this string identifies which bus this feeder is associated with.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contentsList" type="contentsList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a list of pointers to objects that are contained in this feeder bay (reclosers, breakers, bypass switches, etc.).</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="contentsList" type="contentsList"/>
	<xs:complexType name="contentsList">
		<xs:sequence>
			<xs:element name="contentsItem" type="objectRef" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This item is a pointer to the equipment contained in this container. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="feederList" type="feederList"/>
	<xs:complexType name="feederList">
		<xs:sequence>
			<xs:element name="feederObject" type="feederObject" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="bayList" type="bayList"/>
	<xs:complexType name="bayList">
		<xs:annotation>
			<xs:documentation>Bays are containers that can be used to designate collections of equipment associated with a substation bay.  Bays are required in CIM but not necessary in MultiSpeak.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Bay" type="cpsm:Bay" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="voltageLevels" type="voltageLevels"/>
	<xs:complexType name="voltageLevels">
		<xs:sequence>
			<xs:element name="VoltageLevel" type="cpsm:VoltageLevel" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="parcel" type="parcel"/>
	<xs:complexType name="parcel">
		<xs:annotation>
			<xs:documentation>This is a property parcel as stored in a GIS.  Buildings on this parcel are stored as premises.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPolygonObject">
				<xs:sequence>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="owner" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="section" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="township" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="range" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="legalDescription" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="premiseList" type="premiseList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is an optional list of the premises (buildings) that are contained in this property parcel.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="premiseObjectList" type="premiseObjectList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="premiseList" type="premiseList"/>
	<xs:complexType name="premiseList">
		<xs:annotation>
			<xs:documentation>This is an optional list of the premises (buildings) that are contained in this property parcel.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="premiseID" type="objectID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="premise" type="premise"/>
	<xs:complexType name="premise">
		<xs:annotation>
			<xs:documentation>This is a building or portion of a building as stored in the GIS.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="owner" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="parcelID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the ID of the piece of property (parcel) that contains this premise.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="premiseServiceList" type="premiseServiceList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is an optional list of the service locations that are contained in this premise.  For instance, many serviceLocations may be contained in an apartment complex, which would be one premise.  It is also possible that the service locations listed here are for multiple service types (i.e., electric, gas, water, etc).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocations" type="serviceLocations" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service locations associated with this premise.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="premiseService" type="premiseService"/>
	<xs:complexType name="premiseService">
		<xs:sequence>
			<xs:element name="serviceID" type="serviceID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the unique identifier (objectID) of the utility service location. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountNumber" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the unique account number for the service of the type serviceType at this physical location.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the unique customer identifier for the customer served at this physical location.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="premiseServiceList" type="premiseServiceList"/>
	<xs:complexType name="premiseServiceList">
		<xs:annotation>
			<xs:documentation>This is an optional list of the service locations that are contained in this premise.  For instance, many serviceLocations may be contained in an apartment complex, which would be one premise.  It is also possible that the service locations listed here are for multiple service types (i.e., electric, gas, water, etc).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="premiseService" type="premiseService" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="premiseObjectList" type="premiseObjectList"/>
	<xs:complexType name="premiseObjectList">
		<xs:annotation>
			<xs:documentation>This is an optional item that includes all of the premises contained in this GIS parcel.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="premise" type="premise" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is an optional item that includes all of the premises contained in this GIS parcel.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="physicalObjectList" type="physicalObjectList"/>
	<xs:complexType name="physicalObjectList">
		<xs:annotation>
			<xs:documentation>These are objects for features that are found within the buffer distance from the point identifed in the buffered point.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="anchor" type="anchor" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="breaker" type="breaker" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="capacitor" type="capacitor" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="capacitorBank" type="capacitorBank" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="CDDevice" type="CDDevice" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="cut" type="cut" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="elbow" type="elbow" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="electricMeter" type="electricMeter" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="fuse" type="fuse" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="gasMeter" type="gasMeter" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="guy" type="guy" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="inductionMachine" type="inductionMachine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="inHomeDisplay" type="inHomeDisplay" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="jumper" type="jumper" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="loadManagementDevice" type="loadManagementDevice" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="measurementDevice" type="measurementDevice" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="meterBase" type="meterBase" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="module" type="module" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ohPrimaryLine" type="ohPrimaryLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ohSecondaryLine" type="ohSecondaryLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ohTransmissionLine" type="ohTransmissionLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="outageDetectionDevice" type="outageDetectionDevice" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="overcurrentDeviceBank" type="overcurrentDeviceBank" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="parcel" type="parcel" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="pole" type="pole" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="powerMonitor" type="powerMonitor" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="powerSystemDevice" type="powerSystemDevice" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="premise" type="premise" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="primaryCabinet" type="primaryCabinet" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="propaneMeter" type="propaneMeter" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="recloser" type="recloser" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="regulator" type="regulator" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="regulatorBank" type="regulatorBank" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="riser" type="riser" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="secondaryJunctionBox" type="secondaryJunctionBox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="sectionalizer" type="sectionalizer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="securityLight" type="securityLight" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="serviceLocation" type="serviceLocation" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="spanGuy" type="spanGuy" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="streetLight" type="streetLight" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="substation" type="substation" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="surgeArrestor" type="surgeArrestor" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="switch" type="switch" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="switchingDeviceBank" type="switchingDeviceBank" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="synchronousMachine" type="synchronousMachine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="trafficLight" type="trafficLight" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="transformer" type="transformer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="transformerBank" type="transformerBank" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ugPrimaryLine" type="ugPrimaryLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ugSecondaryLine" type="ugSecondaryLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ugTransmissionLine" type="ugTransmissionLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="waterMeter" type="waterMeter" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="CIMObjectList" type="CIMObjectList" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="inductionMachine" type="inductionMachine"/>
	<xs:complexType name="inductionMachine">
		<xs:annotation>
			<xs:documentation>This is an induction machine.  This object replaces the Version 3.0 motor object.  When the type element is set to motor, slip and power intput are positive; when operating as an induction generator the slip and power input are negative. The section number (eaLoc) for each section is contained in the object ID for each section.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspMotorGenerator">
				<xs:sequence>
					<xs:element name="status" type="motorStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Motor status code.

0 = Disconnected
1 = Off
2 = Locked rotor.
3 = Soft start
4 = Running</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="type" type="machineType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="operatingSlip" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the machine slip during operation.  If slip is positive, the machine is operating as a motor, if slip is negative, the machine is operating as a generator. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hp" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated horsepower.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="pf" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Running power factor at full load.  Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="efficiency" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Efficiency at full load.  Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lgVolts" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Line-to-ground voltage.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="dropout" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Motor drops out if voltage is below this fraction. Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="nemaType" type="nemaType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>NEMA  motor type code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="limitVoltage" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Motor will not start if below this fraction.  Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="softStartType" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Integer soft start type code:

0 = Starting across the line.
1 = Impedance soft start.
2 = Auto transformer start.
3 = Capacitor assisted start.
4 = Partial winding start
5 = Delta-Wye soft start.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="softStartR" type="resistance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>For soft start, starting line resistance (real part of impedance).  Expressed in Ohms.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="softStartX" type="reactance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>For soft start, starting line resistance (imaginary part of impedance).  Expressed in Ohms.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="softStartTap" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>For autotransformer starting.  At start, the motoer terminal voltage will be this fractionof the normal across-the-line starting voltage.  Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lockedRotorPF" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Locked rotor power factor. Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lockedRotorMultiplier" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Locked rotor kVA per horsepower.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="impedances" type="inductionMachineImpedances" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>These values are not used in MultiSpeak data transfers.  These values are included here for CIM compatibility only.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="synchronousMachine" type="synchronousMachine"/>
	<xs:complexType name="synchronousMachine">
		<xs:annotation>
			<xs:documentation>A synchronous machine that can operate as a synchronous motor, generator or condensor.  This object replaces the Version 3.0 generator object.  The section number (or eaLoc for this section is contained in the object ID.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspMotorGenerator">
				<xs:sequence>
					<xs:element name="ssImpedanceID" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of steady-state device type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="tranImpedanceID" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of transient device type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stImpedanceID" type="eaEquipID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of subtransient device type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="model" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Generator model code:

0 = Negative load.
1 = Swing generator (unlimited)
2 = Swing kVA
3 = Swing kVAR</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="type" type="cpsm:SynchronousMachineType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Modes that this synchronous machine can operate in, i.e., as a generator, condenser, or both.  This element is required for the CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="operatingMode" type="cpsm:SynchronousMachineOperatingMode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Current mode of operation, i.e., generator or condenser.  This element is required for the CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="holdVoltsZ" type="complexVoltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>For Swing kVAR model, voltage to hold.  Expressed in per unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Pout" type="realPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>For Swing kVAR model, real power output.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maxLeadQ" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>For Swing kVAR model, Maximum leading reactive power output.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maxLagQ" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>For Swing kVAR model, Maximum lagging reactive power output.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="connection" type="loadConnection" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Load connection. 
(W for wye;  D for delta).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maximumVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Maximum kV limit for the unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="minimumVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Minimum kV  limit for the unit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="baseQ" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Default base MVAr value. This value represents the initial MVAr that can be used by any application function.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="maxQ" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Maximum MVAr limit. This is the maximum (nameplate) limit for the unit. This element is required for the CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="minQ" type="reactivePower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Minimum MVAr limit for the unit.  This element is required for the CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ratedMVA" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Nameplate MVA rating for the unit</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="generatingUnitID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to the GeneratingUnit, HydroGeneratingUnit or ThermalGeneratingUnit that contains this generator. Used in CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="regulatingControlID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to a RegulatingControl. Used in CPSM profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="initialReactiveCapabilityCurve" type="cpsm:ReactiveCapabilityCurve" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A ReactiveCapabilityCurve is not necessary for compliance with the CPSM profile, and is not typically used in MultiSpeak models.  If the capability curve is not used, then the minQ and maxQ values will be used.  If the ReactiveCapabilityCurve is provided, then the minQ and maxQ values are not required.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="impedances" type="synchronousMachineImpedances" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>These values are used only in CIM models, they are not required for MultiSpeak models.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="motorStatus">
		<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	<xs:simpleType name="machineType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Motor"/>
			<xs:enumeration value="Generator"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="pickList" type="pickList"/>
	<xs:complexType name="pickList">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="pickListItems" type="pickListItems" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="pickListItems" type="pickListItems"/>
	<xs:complexType name="pickListItems">
		<xs:sequence>
			<xs:element name="pickListItem" type="pickListItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="pickListItem" type="pickListItem"/>
	<xs:complexType name="pickListItem">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="materialItemID" type="objectID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="stockNumber" type="stockNumber" minOccurs="0" maxOccurs="1"/>
			<xs:element name="quantity" type="quantity" minOccurs="0" maxOccurs="1"/>
			<xs:element name="unitAction" type="unitActn" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Action, if any, to be taken on this backspan (C=Create, R=Retire, E=Existing, T=Transfer, S=Salvage).  If the system of record does not support Transfer of units, then it should interpret this action as being the same as "Create".  If the system of record does not support Salvage then it should interpret salavge as being the same as "Retire".</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="stockNumber">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="content" type="content"/>
	<xs:complexType name="content">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="contentBinary" type="xs:base64Binary" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the binary content that is to be interpted using the follong metadata.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contentEncoding" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="contentType" type="contentType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>These are the MIME content types as defined in RFC2045 and RFC 2046.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="fileName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the file name with extensions.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sourceFilePath" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the path to the file in its original location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="attachDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the date and time that the content was associated with the containing object (workOrder, job, etc.). </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="caption" type="xs:string" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="contentType" type="contentType"/>
	<xs:complexType name="contentType">
		<xs:annotation>
			<xs:documentation>These are the MIME content types as defined in RFC2045 and RFC 2046.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="type" use="optional" type="binaryType">
					<xs:annotation>
						<xs:documentation>Type of binary content in this file.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="subType" use="optional" type="xs:string"/>
				<xs:attribute name="charset" use="optional" type="xs:string"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="binaryType">
		<xs:annotation>
			<xs:documentation>Type of binary content in this file.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="text"/>
			<xs:enumeration value="image"/>
			<xs:enumeration value="audio"/>
			<xs:enumeration value="video"/>
			<xs:enumeration value="application"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="contentReference" type="contentReference"/>
	<xs:complexType name="contentReference">
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="URI" use="required" type="xs:anyURI">
					<xs:annotation>
						<xs:documentation>Location of content.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="name" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>Name of the content or file.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="category" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>The type of content (e.g. staking sheet, pdf, photo).</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="attachment" type="attachment"/>
	<xs:complexType name="attachment">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:choice>
					<xs:element name="content" type="content" minOccurs="0" maxOccurs="1"/>
					<xs:element name="contentReference" type="contentReference" minOccurs="0" maxOccurs="1"/>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="attachments" type="attachments"/>
	<xs:complexType name="attachments">
		<xs:sequence>
			<xs:element name="attachment" type="attachment" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="stationList" type="stationList"/>
	<xs:complexType name="stationList">
		<xs:sequence>
			<xs:element name="station" type="station" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="designs" type="designs"/>
	<xs:complexType name="designs">
		<xs:sequence>
			<xs:element name="design" type="design" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="locationFields" type="locationFields"/>
	<xs:complexType name="locationFields">
		<xs:sequence>
			<xs:element name="county" type="county" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Code for county.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="section" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Public land survey section number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="township" type="township" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Public land survey township designator.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="range" type="range" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Public land survey range designator.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="townshipName" type="townshipName" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Name of township block.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subdivision" type="subdivision" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Subdivision name.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="block" type="block" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Subdivison block.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="lot" type="lot" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Subdivison lot.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="boardDist" type="boardDist" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Board director district code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="taxDist" type="taxDist" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Taxation district code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="franchiseDist" type="franchiseDist" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Franchise tax district code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="schoolDist" type="schoolDist" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>School district code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="district" type="district" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>District office code.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="county">
		<xs:annotation>
			<xs:documentation>Code for county.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="township">
		<xs:annotation>
			<xs:documentation>Public land survey township designation.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="range">
		<xs:annotation>
			<xs:documentation>Public land survey range designator.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="townshipName">
		<xs:annotation>
			<xs:documentation>Name of township.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="subdivision">
		<xs:annotation>
			<xs:documentation>Subdivision name.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="block">
		<xs:annotation>
			<xs:documentation>Subdivison block.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="lot">
		<xs:annotation>
			<xs:documentation>Subdivison lot.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="boardDist">
		<xs:annotation>
			<xs:documentation>Board director district code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="franchiseDist">
		<xs:annotation>
			<xs:documentation>Tax franchise district code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="schoolDist">
		<xs:annotation>
			<xs:documentation>School district code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="district">
		<xs:annotation>
			<xs:documentation>District office code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="taxDist">
		<xs:annotation>
			<xs:documentation>Taxation district code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="contractor">
		<xs:annotation>
			<xs:documentation>Contractor name.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="electrician">
		<xs:annotation>
			<xs:documentation>Electrician name.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="woType">
		<xs:annotation>
			<xs:documentation>Type of work order.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="cd740c">
		<xs:annotation>
			<xs:documentation>RUS 740c accounting code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="ext740c">
		<xs:annotation>
			<xs:documentation>RUS 740c extension code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="loanNo">
		<xs:annotation>
			<xs:documentation>Loan number designation</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="cwpYr">
		<xs:annotation>
			<xs:documentation>Construction workplan year that this work is being completed under.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="cwpCd">
		<xs:annotation>
			<xs:documentation>Construction workplan code for this work.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="budgetPur">
		<xs:annotation>
			<xs:documentation>Workplan budget purpose code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="engrAsnd">
		<xs:annotation>
			<xs:documentation>Engineer assigned to design this work order.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="actionCode">
		<xs:annotation>
			<xs:documentation>Action to be taken on this work order.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="estimate"/>
			<xs:enumeration value="CPR only"/>
			<xs:enumeration value="material only"/>
			<xs:enumeration value="CPR and material"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="workOrderList" type="workOrderList"/>
	<xs:complexType name="workOrderList">
		<xs:sequence>
			<xs:element name="workOrder" type="workOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="work" type="work"/>
	<xs:complexType name="work">
		<xs:annotation>
			<xs:documentation>A set of work tasks to be performed.  Work may be associated with a work container called a project.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="projectID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to the project that includes this work, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of this work. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="statusCode" type="statusCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Status code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Customer for whom this work is being perfromed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for which this work is to be performed, if any. AccountNumber is a pointer to an account object. Depending on the system of record, this may be either the account.objectID or the account.objectName, but is assumed to be unique.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="taskList" type="taskList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a list of work tasks that must be performed in order to complet this work</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="locationFields" type="locationFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="tasks" type="tasks" minOccurs="0" maxOccurs="1"/>
					<xs:element name="switchingScheduleList" type="switchingScheduleList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="switchingStepList" type="switchingStepList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="loadDistrict">
		<xs:annotation>
			<xs:documentation>Design loading district.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Light"/>
			<xs:enumeration value="Medium"/>
			<xs:enumeration value="Heavy"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="statusCode">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="taskList" type="taskList"/>
	<xs:complexType name="taskList">
		<xs:annotation>
			<xs:documentation>This is a list of work tasks that must be performed in order to complet this work</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="taskListItem" type="taskListItem" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Item of work and its sequence number for this task list.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="taskListItem" type="taskListItem"/>
	<xs:complexType name="taskListItem">
		<xs:sequence>
			<xs:element name="sequenceNumber" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The sequence number determines which tasks are to be performed in what order, if sequence is important.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="workTaskID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Identifier for this work task.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="maintenanceOrderList" type="maintenanceOrderList"/>
	<xs:complexType name="maintenanceOrderList">
		<xs:sequence>
			<xs:element name="maintenanceOrder" type="maintenanceOrder" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="maintenanceOrder" type="maintenanceOrder"/>
	<xs:complexType name="maintenanceOrder">
		<xs:annotation>
			<xs:documentation>This is an order for work that is not location-specific and does not include capital contrsuction.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="projectID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to a project, if any, that contains this maintenance order</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="moStatusCode" type="soStatusCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The status of this maintenance order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="moType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of maintenance order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="moDescription" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this work order.  if it exists. Depending on the system of record, this may be either the account.objectID or the account.objectName, but is assumed to be unique.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier for the service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="startDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The starting datefor this maintenance work.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="closeDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The closing date for this maintenance work.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crewID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier for crew to perfrom this work.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workedBy" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="equipmentStatuses" type="equipmentStatuses" minOccurs="0" maxOccurs="1"/>
					<xs:element name="otherIdentificationFields" type="otherIdentificationFields" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="resource" type="resource"/>
	<xs:complexType name="resource">
		<xs:annotation>
			<xs:documentation>Resource is a container object that can have people, vehicles, equipment, and crews to perform work tasks.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="workers" type="workers" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of workers associated with this resource.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crewList" type="crewList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Crews associated with this resource.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="vehicleList" type="vehicleList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of pointers to vehicles associated with this crew.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="equipmentList" type="equipmentList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of pointers to equipment associated with this resource.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="vehicles" type="vehicles" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of vehicles associated with this resource.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crewEquipmentList" type="crewEquipmentList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of equipment associated with this resource.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="switchingScheduleList" type="switchingScheduleList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="switchingStepList" type="switchingStepList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="outageElementStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="VerifiedOpen"/>
			<xs:enumeration value="VerifiedBreak"/>
			<xs:enumeration value="VerifiedClosedNoPower"/>
			<xs:enumeration value="VerifiedClosedWithPower"/>
			<xs:enumeration value="TempOpen"/>
			<xs:enumeration value="TempBreak"/>
			<xs:enumeration value="TempClosed"/>
			<xs:enumeration value="NormalOrRestored"/>
			<xs:enumeration value="NoChange"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="skills" type="skills"/>
	<xs:complexType name="skills">
		<xs:sequence>
			<xs:element name="skill" type="skill" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="skillsList" type="skillsList"/>
	<xs:complexType name="skillsList">
		<xs:sequence>
			<xs:element name="skillID" type="objectID" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Worker skill type.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="crew" type="crew"/>
	<xs:complexType name="crew">
		<xs:annotation>
			<xs:documentation>This is the definition of a crew.  The crew number is contained in the Object ID.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="crewName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Utility defined crew name.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="foreman" type="foreman" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>EmployeeID of the crew foreman.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contactInfo" type="contactInfo" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Contact information (e.g. cell phone)  for crew.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isForeign" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Is this crew a foreign crew or a crew of the host utility(Y=foreign N=utility).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="baseLocation" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Disrict or base work location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crewType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of crew (e.g.  service| trouble| hot |cold).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="vehicleList" type="vehicleList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Pointers to vehicles associated with this crew.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workerList" type="crewMemberList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Pointers to workers associated with this crew.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="equipmentList" type="equipmentList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Pointers to equipment associated with this crew.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isActive" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If IsActive is true then this crew is available for dispatching.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="capabilityList" type="capabilityList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Pointers to capabilities of this crew.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="vehicles" type="vehicles" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Vehicles associated with this crew.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workers" type="workers" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Workers on this crew.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="capabilities" type="capabilities" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Capabilities of this crew.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="equipment" type="equipment"/>
	<xs:complexType name="equipment">
		<xs:annotation>
			<xs:documentation>This is the definition of a piece of equipment that can be associated with a crew or reseource.  The equipment ID is contained in the object ID for each piece of equipment.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="equipmentType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of equipment.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="vehicle" type="vehicle"/>
	<xs:complexType name="vehicle">
		<xs:annotation>
			<xs:documentation>This is the definition of a vehicle.  The objectID of the vehicle is the unique identifier.  The objectName should be used for the human-readable, utility-defined "truck number". The AVLID is the identifier for the AVL antenna communications identifier.   </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="vehicleType" type="vehicleType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of vehicle.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isCompanyOwned" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Is this vehicle owned by the host utility (Y=Yes N=No).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AVLID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>AVL identifier for this vehicle.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="vehicleType">
		<xs:annotation>
			<xs:documentation>Type of vehicle.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="crewEquipmentList" type="crewEquipmentList"/>
	<xs:complexType name="crewEquipmentList">
		<xs:sequence>
			<xs:element name="equipment" type="equipment" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="vehicles" type="vehicles"/>
	<xs:complexType name="vehicles">
		<xs:sequence>
			<xs:element name="vehicle" type="vehicle" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="crewList" type="crewList"/>
	<xs:complexType name="crewList">
		<xs:sequence>
			<xs:element name="crew" type="crew" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="workers" type="workers"/>
	<xs:complexType name="workers">
		<xs:sequence>
			<xs:element name="worker" type="worker" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="foreman">
		<xs:annotation>
			<xs:documentation>EmployeeID of the crew foreman.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="capability" type="capability"/>
	<xs:complexType name="capability">
		<xs:annotation>
			<xs:documentation>This is a type of work that a crew can perform.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="category" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The class of capability.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="effectiveDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The date and time that the crew's qualification took effect.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="expirationDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The date and time that the crew's qualification expires.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="performanceFactor" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Level at which this crew exhibits this capability.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="capabilities" type="capabilities"/>
	<xs:complexType name="capabilities">
		<xs:annotation>
			<xs:documentation>List of capabilities that this crew has.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="capability" type="capability" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Types of work that a crew can perform. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="vehicleList" type="vehicleList"/>
	<xs:complexType name="vehicleList">
		<xs:sequence>
			<xs:element name="vehicleID" type="objectID" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Pointer to a vehicle.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="equipmentList" type="equipmentList"/>
	<xs:complexType name="equipmentList">
		<xs:annotation>
			<xs:documentation>List of equipment in this crew.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="equipmentID" type="objectID" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Pointer to a piece of equipment.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="assignment" type="assignment"/>
	<xs:complexType name="assignment">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="resources" type="resources" minOccurs="1" maxOccurs="1"/>
					<xs:element name="taskIdentifier" type="multiPartIdentifier" minOccurs="1" maxOccurs="1"/>
					<xs:element name="workSchedule" type="workSchedule" minOccurs="0" maxOccurs="1"/>
					<xs:element name="constraints" type="constraints" minOccurs="0" maxOccurs="1"/>
					<xs:element name="actionBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Human or system responsible for making this assignment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timeToLive" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this assignment is not accepted prior to the expiration of this time to live then the assignment should be returned to the scheduler.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="capabilityList" type="capabilityList"/>
	<xs:complexType name="capabilityList">
		<xs:sequence>
			<xs:element name="capabilityID" type="objectID" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Pointer to a crew capability.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="multiPartIdentifier" type="multiPartIdentifier"/>
	<xs:complexType name="multiPartIdentifier">
		<xs:sequence>
			<xs:element name="taskID" type="objectRef" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>A pointer to a work task.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="primaryIdentifier" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="secondaryIdentifier" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
		<xs:attribute name="identifierType" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>Type of identifier to follow.  Potential examples of this identifer are:"Work order", "Service order", "Maintenance order", "Work task", "Outage ticket", "Other" and "Unknown".</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="workSchedule" type="workSchedule"/>
	<xs:complexType name="workSchedule">
		<xs:sequence>
			<xs:element name="estimatedStartTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="estimatedEndTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="estimatedDriveTime" type="duration" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="constraints" type="constraints"/>
	<xs:complexType name="constraints">
		<xs:sequence>
			<xs:element name="cantStartUntil" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="mustBeDoneBy" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="resources" type="resources"/>
	<xs:complexType name="resources">
		<xs:sequence>
			<xs:element name="resource" type="resource" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="groupAssignment" type="groupAssignment"/>
	<xs:complexType name="groupAssignment">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="workGroupID" type="objectRef" minOccurs="1" maxOccurs="1"/>
					<xs:element name="taskIdentifier" type="multiPartIdentifier" minOccurs="1" maxOccurs="1"/>
					<xs:element name="workSchedule" type="workSchedule" minOccurs="0" maxOccurs="1"/>
					<xs:element name="constraints" type="constraints" minOccurs="0" maxOccurs="1"/>
					<xs:element name="actionBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Human or system responsible for making this assignment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timeToLive" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If this assignment is not accepted prior tothe exiration of this time to live then the assignment should be returned to the scheduler.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="unassignment" type="unassignment"/>
	<xs:complexType name="unassignment">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="resources" type="resources" minOccurs="1" maxOccurs="1"/>
					<xs:element name="assignmentID" type="objectRef" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier for the assignment that is being unassigned.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="taskIdentifier" type="multiPartIdentifier" minOccurs="1" maxOccurs="1"/>
					<xs:element name="reason" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="actionBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Human or system responsible for making this unassignment.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="workRequest" type="workRequest"/>
	<xs:complexType name="workRequest">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="createdDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time of the work request.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="createdBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Person requesting data.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a list of types of work that can be originated by the work task originator.  The list of workTypes is a domain item that can be requested from the host system.  Examples include pole changeout, connect, disconnect, read in, read out.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Detailed description of the work being requested.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="title" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Short work description for display.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priority" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Priority of the work being requested.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="workLocation" type="workLocation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="scheduleRequests" type="scheduleRequests" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="workLocation" type="workLocation"/>
	<xs:complexType name="workLocation">
		<xs:sequence>
			<xs:element name="address" type="address" minOccurs="0" maxOccurs="1"/>
			<xs:element name="geometry" type="geometry" minOccurs="0" maxOccurs="1"/>
			<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="serviceID" type="serviceID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="gridLocation" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="locationComment" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="locationReferences" type="locationReferences" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a way to associate this work request with another MultiSpeak object (e.g., pole, transformer, customer, etc.)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="locationReferences" type="locationReferences"/>
	<xs:complexType name="locationReferences">
		<xs:sequence>
			<xs:element name="locationReference" type="objectRef" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is a way to associate this work request with another MultiSpeak object (e.g., pole, transformer, customer, etc.)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="scheduleRequest" type="scheduleRequest"/>
	<xs:complexType name="scheduleRequest">
		<xs:sequence>
			<xs:element name="requestByType" type="requestByType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element indicates the type schedule request.  On means schedule this work to be done at the time indicateded in the requestedByValue element. Before and after are interptreted similarly; Immediate indicates that the work should be done as soon as possible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="requestByValue" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="requestByType">
		<xs:annotation>
			<xs:documentation>This element indicates the type schedule request.  On means schedule this work to be done at the time indicateded in the requestedByValue element. Before and after are interptreted similarly; Immediate indicates that the work should be done as soon as possible.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Before"/>
			<xs:enumeration value="On"/>
			<xs:enumeration value="After"/>
			<xs:enumeration value="Immediate"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="scheduleRequests" type="scheduleRequests"/>
	<xs:complexType name="scheduleRequests">
		<xs:sequence>
			<xs:element name="scheduleRequest" type="scheduleRequest" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="workStatus" type="workStatus"/>
	<xs:complexType name="workStatus">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="timeStamp" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="taskIdentifier" type="multiPartIdentifier" minOccurs="0" maxOccurs="1"/>
					<xs:element name="assignmentID" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier of assignment or group assignment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assignmentStatus" type="assignmentStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Changed status of this assignment.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="acceptedBy" type="objectRef" minOccurs="0" maxOccurs="1"/>
					<xs:element name="workProgress" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work progress steps.  Possible enumerations should be discoverable from the work scheduler using the GetDomainMembers method.  Enumerations might include such information as: received assignment, accepted assignment, en route, on site, work begun, partial completion, assignment completed, returned assignment, awaiting material, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="remarks" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="scheduleModification" type="scheduleModification" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="assignmentStatus">
		<xs:annotation>
			<xs:documentation>Changed status of this assignment.  </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Received Assignment"/>
			<xs:enumeration value="Delivered"/>
			<xs:enumeration value="Accepted"/>
			<xs:enumeration value="Rejected"/>
			<xs:enumeration value="Queued"/>
			<xs:enumeration value="Timed Out"/>
			<xs:enumeration value="Partially Complete"/>
			<xs:enumeration value="Completed"/>
			<xs:enumeration value="On Hold"/>
			<xs:enumeration value="Returned"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="scheduleModification" type="scheduleModification"/>
	<xs:complexType name="scheduleModification">
		<xs:sequence>
			<xs:element name="cantStartUntil" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="workTask" type="workTask"/>
	<xs:complexType name="workTask">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="taskIdentifier" type="multiPartIdentifier" minOccurs="0" maxOccurs="1"/>
					<xs:element name="createdDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="action" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the action that is to be taken as a result of this work request. Example enumerations are design, construct, maintain, close-out, etc.  The list of actions is a domain that should be discoverable from the SCHED_Server using the GetDomainMembers method.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priority" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="scheduleRequests" type="scheduleRequests" minOccurs="0" maxOccurs="1"/>
					<xs:element name="workLocation" type="workLocation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="taskAggregation" type="taskAggregation" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="tasks" type="tasks"/>
	<xs:complexType name="tasks">
		<xs:sequence>
			<xs:element name="workTask" type="workTask" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="fakeNodeSection" type="fakeNodeSection"/>
	<xs:complexType name="fakeNodeSection">
		<xs:complexContent>
			<xs:extension base="mspElectricPoint">
				<xs:sequence>
					<xs:element name="isAllocated" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Is this node a load allocation control point?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isRequired" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Is this node mandantory? </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cktLvl" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Integer code for node type:

0 = None
1 = Feeder
2 = Substation low side
3 = Substation high side
4 = Spot load
5 = End of element</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isMultiParent" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element is not used and will be removed in future versions.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="equivalentSource" type="equivalentSource"/>
	<xs:complexType name="equivalentSource">
		<xs:complexContent>
			<xs:extension base="mspElectricPoint">
				<xs:sequence>
					<xs:element name="name" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="basePower" type="apparentPower" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>System base apparent power.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="baseVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>System base voltage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="zMin" type="complexImpedance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of minimum source impedance.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="zMax" type="complexImpedance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of maximum source impedance.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="posSeqZ" type="complexImpedance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Positive sequence resistance.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="zeroSeqZ" type="complexImpedance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Zero sequence resistance.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="negSeqZ" type="complexImpedance" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Negative sequence resistance.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="voltageMagnitude" type="voltage" minOccurs="0" maxOccurs="1"/>
					<xs:element name="voltageAngle" type="angle" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="taskAggregation" type="taskAggregation"/>
	<xs:complexType name="taskAggregation">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="workTaskID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="skillsList" type="skillsList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="equipmentList" type="equipmentList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="vehicleList" type="vehicleList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="pickList" type="pickList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="billedUsage" type="billedUsage"/>
	<xs:complexType name="billedUsage">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1"/>
					<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID for the serviceLocation which serves this meterBase location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the meter identifier of the meter that registered this usage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ppmLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID of the meterBase in which the PPM meter is installed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterStatus" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Status of this meter. Suggested values for this element include: New, InInventory, Installed, Active, Inactive, Connected, Disconnected, ConnectedOverride, DisconnectedOverride, OnHold, InForRepair, InTesting, Retired, Other and Unknown.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="usageItemList" type="usageItemList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="usageItemList" type="usageItemList"/>
	<xs:complexType name="usageItemList">
		<xs:sequence>
			<xs:element name="usageItem" type="usageItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="usageItem" type="usageItem"/>
	<xs:complexType name="usageItem">
		<xs:sequence>
			<xs:element name="usageType" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This string field should carry a description of the type of usage.  For instance:
kWh
kW
kVar</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="multiplier" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the meter multiplier for this type of usage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="previousReading" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the previous meter reading for this type of usage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="previousReadDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="presentReading" type="xs:float" minOccurs="0" maxOccurs="1"/>
			<xs:element name="presentReadingDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="billingAccountLoad" type="billingAccountLoad"/>
	<xs:complexType name="billingAccountLoad">
		<xs:annotation>
			<xs:documentation>This element is used to move customer load information from the customer billing system to the engineering analysis system.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Billing reference (account) number.  Depending on the system of record, this may be either the account.objectID or the account.objectName, but in either case must be unique.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eaLoc" type="eaLoc" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Engineering analysis location (line section or node number).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="substation" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Substation code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feeder" type="feeder" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Feeder code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phasing code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="kwhUse" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>kWh use for month of study.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="demand" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Demand for month of study.  in kW.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="hp" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Horsepower billed for month of study.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="kvarDemand" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>kVAr demand for month of study.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stLiteKwh" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Street light energy used for month of study.  in kWh.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter identifier for the meter at this service location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="servType" type="servType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service type (Rate code).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="revenueClass" type="revenueClass" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Revenue class.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="kwhAdj" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>KWh adjustment for month of study. This variable can carry a sign.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="kwAdj" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>KW adjustment for month of study. This variable can carry a sign.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="xfmrKva" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Transformer kVA for this billing reference.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="gLCode" type="gLCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>General ledger code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="zone" type="zone" minOccurs="0" maxOccurs="1"/>
					<xs:element name="GMLLocation" type="GMLLocation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="gridLocation" type="gridLocation" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="gLCode">
		<xs:annotation>
			<xs:documentation>General ledger code.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="zone">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="billingData" type="billingData"/>
	<xs:complexType name="billingData">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this service location.  Depending on the system of record, this may be either the account.objectID or the account.objectName.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The type of  utility service for this account (electric, water, gas, propane, etc.)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID for the serviceLocation which serves this meterBase location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ppmLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID of the meterBase in which the PPM meter is installed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the meter identifier of the meter currently installed at this location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CISBalanceAfterBilling" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="billingDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="billFromDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="billToDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="billingDetail" type="billingDetail"/>
	<xs:complexType name="billingDetail">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this service location.  Depending on the system of record, this may be either the account.objectID or the account.objectName.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The type of  utility service for this account (electric, water, gas, propane, etc.)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID for the serviceLocation which serves this meterBase location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the meter identifier of the meter currently installed at this location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ppmLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID of the meterBase in which the PPM meter is installed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="revenueMonth" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="revenueYear" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="cisBillDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="billingCycle" type="billingCycle" minOccurs="0" maxOccurs="1"/>
					<xs:element name="priorBalance" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="payment" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="creditCharge" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="debitCharge" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="chargeItemList" type="chargeItemList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of items for which a customer could pay on this account.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CISBalanceAfterBilling" type="money" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="chargeItemList" type="chargeItemList"/>
	<xs:complexType name="chargeItemList">
		<xs:sequence>
			<xs:element name="chargeItem" type="chargeItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="configuredReadingTypes" type="configuredReadingTypes"/>
	<xs:complexType name="configuredReadingTypes">
		<xs:annotation>
			<xs:documentation>This is the list of reading types that meters in this configuration group are programmed to read.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="configuredReadingType" type="configuredReadingType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="chargeItem" type="chargeItem"/>
	<xs:complexType name="chargeItem">
		<xs:sequence>
			<xs:element name="charge" type="money" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The amount of this charge, in defined units of currency.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This string field should carry a description of the type of charge.  Examples include:   
kWh
kW
kVAR
Power cost adjustment
Tax
Service charge 
Device</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ROWAttributes" type="ROWAttributes"/>
	<xs:complexType name="ROWAttributes">
		<xs:complexContent>
			<xs:extension base="mspElectricalDefinition">
				<xs:sequence>
					<xs:element name="circuitList" type="circuitList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This container groups circuits that share the right-of-way specified in this ROWAttributes instance.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="circuitList" type="circuitList"/>
	<xs:complexType name="circuitList">
		<xs:sequence>
			<xs:element name="circuit" type="circuit" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="circuit" type="circuit"/>
	<xs:complexType name="circuit">
		<xs:sequence>
			<xs:element name="electricLineID" type="objectRef" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element refers to any instance of an electrical line segment (any object that inherits from an mspElectricLine).  Examples of these are ohTransmissionLine, ohPrimaryLine, ohSecondaryLine, ugTransmissionLine, ugPrimaryLine, and ugSecondaryLine. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="lineConstructionType" type="eaEquipID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element is a pointer to the line contruction entry for this circuit.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hCoordinate" type="length" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the horizontal coordinate for this circuit.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ROWAttributesEntries" type="ROWAttributesEntries"/>
	<xs:complexType name="ROWAttributesEntries">
		<xs:sequence>
			<xs:element name="ROWAttributes" type="ROWAttributes" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="CDCustomer" type="CDCustomer"/>
	<xs:complexType name="CDCustomer">
		<xs:sequence>
			<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Customer identification number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>ObjectID of the service location affected.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Meter identifer for the meter affected.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="loadActionCode" type="loadActionCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Action to be taken with this event or state of this customer service (Actions = Connect, Disconnect, or InitiatePowerLimitation:  States = Open, Closed, or Armed).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="loadActionCode">
		<xs:annotation>
			<xs:documentation>This enumeration has codes for (i) actions to be taken at this customer connect/disconnect device and (ii) to return the state of this CDDevice. </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Connect"/>
			<xs:enumeration value="Disconnect"/>
			<xs:enumeration value="InitiatePowerLimitation"/>
			<xs:enumeration value="CancelPowerLimitation"/>
			<xs:enumeration value="Opened"/>
			<xs:enumeration value="Closed"/>
			<xs:enumeration value="Open"/>
			<xs:enumeration value="Close"/>
			<xs:enumeration value="Armed"/>
			<xs:enumeration value="Enabled"/>
			<xs:enumeration value="Disabled"/>
			<xs:enumeration value="Arm"/>
			<xs:enumeration value="Enable"/>
			<xs:enumeration value="Disable"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="CDList" type="CDList"/>
	<xs:complexType name="CDList">
		<xs:sequence>
			<xs:element name="CDCustomer" type="CDCustomer" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="CDState" type="CDState"/>
	<xs:complexType name="CDState">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="RCDState" type="RCDState" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The current state of this remote connect/disconnect device (CDDevice).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timestamp" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="RCDState">
		<xs:annotation>
			<xs:documentation>The current state of this remote connect/disconnect device (CDDevice).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Opened"/>
			<xs:enumeration value="Closed"/>
			<xs:enumeration value="Armed"/>
			<xs:enumeration value="Enabled"/>
			<xs:enumeration value="Disabled"/>
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="InTransition"/>
			<xs:enumeration value="PowerLimitation"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="meterEvent" type="meterEvent"/>
	<xs:complexType name="meterEvent">
		<xs:annotation>
			<xs:documentation>This is an object that carries
meter and/or headend event
codes. The numeric code
(e.g., "7.20.7.27") would be
carried in the meterEvent
complex type itself.  This is used as the mRID in IEC 61968-9 standard EndDeviceEvent instances. The domain, domainPart, type, index, value, and codeString representation
could optionally be sent in
attributes on the complex type.  </xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="domain" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This would carry the domain numeric value (e.g., 7)</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="domainPart" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This would carry the domain part numeric value (e.g., 20)</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="type" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This would carry the type part numeric value (e.g., 7)</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="index" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This would carry the index numeric value (e.g., 27)</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="value" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>The meterEventCode may also have an additional value here to differentiate event conditions of a type.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeString" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This would carry the string representation of the event code. For instance, the code string for event code7.20.7.27 is "Meter change-out" as defined in IEC 61968-9. This is included primarily for extensibility.)</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:anyAttribute namespace="##any" processContents="lax"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="CDStateChange" type="CDStateChange"/>
	<xs:complexType name="CDStateChange">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The meterIdentifier of the meter to which this CDStateChange is associated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stateChange" type="loadActionCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Action to be taken with this event or state of this customer service (Actions = Connect, Disconnect, Arm, Enable, Disable,InitiatePowerLimitation, Open, Close  States = Opened, Closed, Armed, Enabled, Disabled).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterEvent" type="meterEvent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is an object that carries
meter and/or headend event
codes. The numeric code
(e.g., "7.20.7.27") would be
carried in the meterEvent
complex type itself.  This is used as the mRID in IEC 61968-9 standard EndDeviceEvent instances. The domain, domainPart, type, index, value, and codeString representation
could optionally be sent in
attributes on the complex type.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timestamp" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="catalogEntries" type="catalogEntries"/>
	<xs:complexType name="catalogEntries">
		<xs:sequence>
			<xs:element name="equipmentType" type="equipmentType" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of electrical equipment catalog entry.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="entryNames" type="entryNames" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>A list of the names of specific entries in an electrical equipment catalog of the type listed in equipmentType.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="entryNames" type="entryNames"/>
	<xs:complexType name="entryNames">
		<xs:sequence>
			<xs:element name="entryName" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is the string name for an entry in the electrical equipment catalog.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="connectDisconnectEvent" type="connectDisconnectEvent"/>
	<xs:complexType name="connectDisconnectEvent">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Service location identifier (This number is unique for an account).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Customer identifier.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="gridLocation" type="gridLocation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Map location (grid number).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this service location.  Depending on the system of record, this may be either the account.objectID or the account.objectName, but in either case must be unique.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter Id (unique index number for each meter).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="loadActionCode" type="loadActionCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Action to be taken with this event or state of this customer service (Actions = Connect, Disconnect, Open, Close, Arm, Enable, Disable, or InitiatePowerLimitation:  States = Opened, Closed, Armed, Enabled, or Disabled).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="powerLimitationValue" type="powerLimitationValue" minOccurs="0" maxOccurs="1"/>
					<xs:element name="CDReasonCode" type="CDReasonCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Reason for event (see enumerations).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="amountDue" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If disconnected for non-paymnet, the amount that must be collected in order for the customer to be reconected.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="billingTerms" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Describes the way that the account is billed. Suggested enumeration is Prepay, Budget, Cycle, or Other.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="powerLimitationValue" type="powerLimitationValue"/>
	<xs:complexType name="powerLimitationValue">
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="powerLimitationUnits">
					<xs:annotation>
						<xs:documentation>Units in which powerLimitationValue is expressed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="powerLimitationUnits">
		<xs:annotation>
			<xs:documentation>Units for the powerLimitationValue.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="kWh"/>
			<xs:enumeration value="kW"/>
			<xs:enumeration value="A"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CDReasonCode">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="PPMBalanceNegative"/>
			<xs:enumeration value="PPMBalancePositive"/>
			<xs:enumeration value="NonPayment"/>
			<xs:enumeration value="ServiceInactive"/>
			<xs:enumeration value="PaymentAgreement"/>
			<xs:enumeration value="PaymentReceived"/>
			<xs:enumeration value="NewCustomer"/>
			<xs:enumeration value="ServiceRestored"/>
			<xs:enumeration value="ServiceReconnected"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="connectDisconnectList" type="connectDisconnectList"/>
	<xs:complexType name="connectDisconnectList">
		<xs:annotation>
			<xs:documentation>List of customers to be disconnected on a specific date.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="disconnectDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date of disconnect order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CDList" type="CDList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of customers to be disconnected on this date.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="breakerImpedances" type="breakerImpedances"/>
	<xs:complexType name="breakerImpedances">
		<xs:sequence>
			<xs:element name="r" type="resistance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="x" type="reactance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="r0" type="resistance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="x0" type="reactance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="b" type="susceptance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="b0" type="susceptance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="g" type="conductance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="g0" type="conductance" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ppmLocation" type="ppmLocation"/>
	<xs:complexType name="ppmLocation">
		<xs:annotation>
			<xs:documentation>This is the location at which the prepaid meter is installed.  ObjectID of ppmLocation (ppmLocationID) should be the objectID of the meterBase in which the prepaid meter is installed.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="rate" type="rate" minOccurs="0" maxOccurs="1"/>
					<xs:element name="taxDist" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="fuelCostAdjCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="fixedChargeCodeList" type="fixedChargeCodeList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID for the serviceLocation which serves this meterBase location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priorityBalance" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This arrears balance should receive priority in payment when customer payments are received.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sharedArrears" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This customer arrears balance is that which should be jointly managed by the PPM and CB functions.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="initialRead" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The inial meter reading when the prepaid meter is first installed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customer" type="customer" minOccurs="0" maxOccurs="1"/>
					<xs:element name="totalBalance" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="lastMeterRead" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the last billing meter reading.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lastReadingDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the date of the last billing meter reading.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="depositAmount" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="depositPaid" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="depositInterest" type="xs:float" minOccurs="0" maxOccurs="1"/>
					<xs:element name="connectDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="billingCycle" type="billingCycle" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterSetDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="fixedChargeCodeList" type="fixedChargeCodeList"/>
	<xs:complexType name="fixedChargeCodeList">
		<xs:sequence>
			<xs:element name="fixedChargeCode" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ppmBalanceAdjustment" type="ppmBalanceAdjustment"/>
	<xs:complexType name="ppmBalanceAdjustment">
		<xs:annotation>
			<xs:documentation>ObjectID is the transaction verification for this specific balance adjustment.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="1" maxOccurs="1"/>
					<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="ppmLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This contains the objectID of the meterBase at which the pre-paid meter is installed.  Note that the meterBase object contains links to both the serviceLocation from which this meter receives service and the customer's revenue meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="adjustmentItemList" type="adjustmentItemList" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="adjustmentItem" type="adjustmentItem"/>
	<xs:complexType name="adjustmentItem">
		<xs:sequence>
			<xs:element name="balanceType" type="balanceType" minOccurs="1" maxOccurs="1"/>
			<xs:element name="amount" type="money" minOccurs="1" maxOccurs="1"/>
			<xs:element name="adjustmentItemID" type="objectID" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="balanceType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="priorityBalance"/>
			<xs:enumeration value="totalBalance"/>
			<xs:enumeration value="arrearsBalance"/>
			<xs:enumeration value="prepaidBalance"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="electricMeterExchange" type="electricMeterExchange"/>
	<xs:complexType name="electricMeterExchange">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The serviceLocation at which this meter is being installed</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="electricServiceID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outMeterReading" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter that is being removed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="inMeterReading" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter bein installed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lastRead" type="meterReading" minOccurs="0" maxOccurs="1"/>
					<xs:element name="lastReadDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="averageConsumption" type="averageConsumption" minOccurs="0" maxOccurs="1"/>
					<xs:element name="timeStamp" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="electricMeterExchanges" type="electricMeterExchanges"/>
	<xs:complexType name="electricMeterExchanges">
		<xs:sequence>
			<xs:element name="electricMeterExchange" type="electricMeterExchange" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="gasMeterExchange" type="gasMeterExchange"/>
	<xs:complexType name="gasMeterExchange">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The serviceLocation at which this meter is being installed</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="gasServiceID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outMeterReading" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter that is being removed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="inMeterReading" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter bein installed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lastRead" type="meterReading" minOccurs="0" maxOccurs="1"/>
					<xs:element name="lastReadDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="averageConsumption" type="averageConsumption" minOccurs="0" maxOccurs="1"/>
					<xs:element name="timeStamp" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="gasMeterExchanges" type="gasMeterExchanges"/>
	<xs:complexType name="gasMeterExchanges">
		<xs:sequence>
			<xs:element name="gasMeterExchange" type="gasMeterExchange" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="readingStatusCodeEntry" type="readingStatusCodeEntry"/>
	<xs:complexType name="readingStatusCodeEntry">
		<xs:annotation>
			<xs:documentation>This is an entry that documents the status codes for meter readings and intervalData blocks along with their meanings.  For additional information about these reading statusCode definitions, see the definitions for QualityCodes in IEC 61968-9, Annex D. meanings. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="readingStatusCode" type="readingStatusCode" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a three-part code that describes the status or quality of a meter reading.  For additional information about these reading statusCode definitions, see the definitions for QualityCodes in IEC 61968-9, Annex D. meanings. The readingStatusCode that is included in the data field shall consist of a dotted notation where the readingStatusCode value = originatingSystemID.codeCategory.codeIndex.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="waterMeterExchange" type="waterMeterExchange"/>
	<xs:complexType name="waterMeterExchange">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The serviceLocation at which this meter is being installed</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="waterServiceID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outMeterReading" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter that is being removed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="inMeterReading" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter bein installed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lastRead" type="meterReading" minOccurs="0" maxOccurs="1"/>
					<xs:element name="lastReadDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="averageConsumption" type="averageConsumption" minOccurs="0" maxOccurs="1"/>
					<xs:element name="timeStamp" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="propaneMeterExchange" type="propaneMeterExchange"/>
	<xs:complexType name="propaneMeterExchange">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The serviceLocation at which this meter is being installed</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="propaneServiceID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outMeterReading" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter that is being removed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="inMeterReading" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter bein installed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lastRead" type="meterReading" minOccurs="0" maxOccurs="1"/>
					<xs:element name="lastReadDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="averageConsumption" type="averageConsumption" minOccurs="0" maxOccurs="1"/>
					<xs:element name="timeStamp" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="otherMeterExchange" type="otherMeterExchange"/>
	<xs:complexType name="otherMeterExchange">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The serviceLocation at which this meter is being installed</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="otherServiceID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outMeterReading" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter that is being removed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="inMeterReading" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter bein installed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lastRead" type="meterReading" minOccurs="0" maxOccurs="1"/>
					<xs:element name="lastReadDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="averageConsumption" type="averageConsumption" minOccurs="0" maxOccurs="1"/>
					<xs:element name="timeStamp" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="propaneMeterExchanges" type="propaneMeterExchanges"/>
	<xs:complexType name="propaneMeterExchanges">
		<xs:sequence>
			<xs:element name="propaneMeterExchange" type="propaneMeterExchange" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="otherMeterExchanges" type="otherMeterExchanges"/>
	<xs:complexType name="otherMeterExchanges">
		<xs:sequence>
			<xs:element name="otherMeterExchange" type="otherMeterExchange" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ppmMeterExchange" type="ppmMeterExchange"/>
	<xs:complexType name="ppmMeterExchange">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="ppmLocationID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outMeterRead" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter that is being removed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="inMeterRead" type="meterReading" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reading on the meter bein installed, if any.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="waterMeterExchanges" type="waterMeterExchanges"/>
	<xs:complexType name="waterMeterExchanges">
		<xs:sequence>
			<xs:element name="waterMeterExchange" type="waterMeterExchange" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ppmMeterExchanges" type="ppmMeterExchanges"/>
	<xs:complexType name="ppmMeterExchanges">
		<xs:sequence>
			<xs:element name="ppmMeterExchange" type="ppmMeterExchange" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ppmStatus" type="ppmStatus"/>
	<xs:complexType name="ppmStatus">
		<xs:sequence>
			<xs:element name="meterStatus" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Status of this meter. Suggested values for this element include: New, InInventory, Installed, Active, Inactive, Connected, Disconnected, ConnectedOverride, DisconnectedOverride, OnHold, InForRepair, InTesting, Retired, Other and Unknown.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="errorObject" type="errorObject" minOccurs="0" maxOccurs="1"/>
			<xs:element name="remainingBalance" type="remainingBalance" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="errorObject" type="errorObject"/>
	<xs:complexType name="errorObject">
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="objectID" use="required" type="xs:string">
					<xs:annotation>
						<xs:documentation>Identifier for object with error.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="errorString" use="required" type="xs:string">
					<xs:annotation>
						<xs:documentation>Text of the error itself.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="nounType" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>Type of noun for which this error is associated.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="eventTime" use="optional" type="mspDateTime"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="remainingBalance" type="remainingBalance"/>
	<xs:complexType name="remainingBalance">
		<xs:sequence>
			<xs:element name="priorityBalance" type="money" minOccurs="1" maxOccurs="1"/>
			<xs:element name="sharedArrears" type="money" minOccurs="1" maxOccurs="1"/>
			<xs:element name="balance" type="money" minOccurs="1" maxOccurs="1"/>
			<xs:element name="finalRead" type="meterReading" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ppmTransaction" type="ppmTransaction"/>
	<xs:complexType name="ppmTransaction">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="priorityBalance" type="money" minOccurs="1" maxOccurs="1"/>
					<xs:element name="sharedArrears" type="money" minOccurs="1" maxOccurs="1"/>
					<xs:element name="amount" type="money" minOccurs="1" maxOccurs="1"/>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="circuitElement" type="circuitElement"/>
	<xs:complexType name="circuitElement">
		<xs:annotation>
			<xs:documentation>This element is used to exchange information about a trace of the electrical connectivity tree.  It contains topology information, but does not include the engineering or asset information.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="elementName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of the electrical circuit element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="parentName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The name of the circuit element that feeds this element electrically.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="elementType" type="circuitElementType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="substationName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of substation that this feeder is in.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feederName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of substation feeder.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feederNo" type="feeder" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of substation feeder</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1"/>
					<xs:element name="circuitElementStatus" type="circuitElementStatus" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="circuitElementType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ohPrimaryLine"/>
			<xs:enumeration value="ohSecondaryLine"/>
			<xs:enumeration value="ohTransmissionLine"/>
			<xs:enumeration value="ugPrimaryLine"/>
			<xs:enumeration value="ugSecondaryLine"/>
			<xs:enumeration value="ugTransissionLine"/>
			<xs:enumeration value="capacitorBank"/>
			<xs:enumeration value="overcurrentDeviceBank"/>
			<xs:enumeration value="regulatorBank"/>
			<xs:enumeration value="switchingDeviceBank"/>
			<xs:enumeration value="transformerBank"/>
			<xs:enumeration value="equivalentSource"/>
			<xs:enumeration value="root"/>
			<xs:enumeration value="electricService"/>
			<xs:enumeration value="fakeNodeSection"/>
			<xs:enumeration value="inducationMachine"/>
			<xs:enumeration value="synchronousMachine"/>
			<xs:enumeration value="streetLight"/>
			<xs:enumeration value="securityLight"/>
			<xs:enumeration value="trafficLight"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="meterExchanges" type="meterExchanges"/>
	<xs:complexType name="meterExchanges">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="electricMeterExchanges" type="electricMeterExchanges" minOccurs="0" maxOccurs="1"/>
					<xs:element name="waterMeterExchanges" type="waterMeterExchanges" minOccurs="0" maxOccurs="1"/>
					<xs:element name="gasMeterExchanges" type="gasMeterExchanges" minOccurs="0" maxOccurs="1"/>
					<xs:element name="propaneMeterExchanges" type="propaneMeterExchanges" minOccurs="0" maxOccurs="1"/>
					<xs:element name="otherMeterExchanges" type="otherMeterExchanges" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="assessment" type="assessment"/>
	<xs:complexType name="assessment">
		<xs:annotation>
			<xs:documentation>This is a field damage assessment report.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="category" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A brief description of the problem or issue that led to the assessment.  For example: broken pole, down line, etc.  It is suggested that the scope of this element's possible contents be discoverable using GetDomainMembers.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="createdOn" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="createdBy" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="closedOn" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="closedBy" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="elementID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The objectID of the element  being assessed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="elementName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Element name if known.  For instance, poleNumber, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="elementType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Use valid MultiSpeak nouns when possible.  (ohPrimaryLine, pole)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="estimated" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Estimated time to repair in hours</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Event ID if part of an event or outage</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="jobNumber" type="jobNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The jobNumber associated with this assessment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="attachments" type="attachments" minOccurs="0" maxOccurs="1"/>
					<xs:element name="expiresOn" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="assessmentList" type="assessmentList"/>
	<xs:complexType name="assessmentList">
		<xs:sequence>
			<xs:element name="assessment" type="assessment" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="assessmentLocation" type="assessmentLocation"/>
	<xs:complexType name="assessmentLocation">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="address" type="address" minOccurs="0" maxOccurs="1"/>
					<xs:element name="locationOffset" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
Allows the collector to specify that the location is a offset of the collected location. Examples. 5 spans north, 2 houses east, or 1 tap north.
              </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assessmentList" type="assessmentList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="attachments" type="attachments" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="inspection" type="inspection"/>
	<xs:complexType name="inspection">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="elementInspected" type="objectRef" minOccurs="0" maxOccurs="1"/>
					<xs:element name="inspectionDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="inspectedBy" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="geometry" type="geometry" minOccurs="0" maxOccurs="1"/>
					<xs:element name="gpsPoint" type="gpsPoint" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The gpsPoint element has been deprecated as of the V4.1.2 Release. It will be replaced with the GPSLocation in V5.0. It is suggested that you use only the GPSLocation element for carrying locations expressed in latitude and longitude and the WGS84 datum.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="GPSLocation" type="GPSLocation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A geographical location as expressed in a geographic coordinate system. The GPSLocation SHALL be expressed using the WGS84 datum. This object SHOULD be used for expressing all types of GPS data and replaces the GPS, gpsPoint, and gpsLocation all of which have been deprecated in V4.1.3. The GPSLocation object will replace these other objects in V5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="elementStatus" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The status of the inspected item.  For instance: Okay, Needs Attention, Needs Immediate Attention, Not Functional, or Okay as Left.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="elementCondition" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Quality factor, expressed in percent.  For instance 100 might been new, 0 might mean no life remaining.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceOrderID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A pointer to the service order this inspection was done under.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="observationList" type="observationList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="attachments" type="attachments" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="observation" type="observation"/>
	<xs:complexType name="observation">
		<xs:sequence>
			<xs:element name="observationItemID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a pointer to the observationDefinition to which this observation refers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="itemStatus" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The status of the inspected item.  For instance: Okay, Needs Attention, Needs Immediate Attention, Not Functional, or Okay as Left.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="itemCondition" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Quality factor, expressed in percent.  For instance 100 might been new, 0 might mean no life remaining.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="comment" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="value" type="observedValue" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This value is not sent unless there is a measured value to report.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="observationList" type="observationList"/>
	<xs:complexType name="observationList">
		<xs:sequence>
			<xs:element name="observation" type="observation" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="observedValue" type="observedValue"/>
	<xs:complexType name="observedValue">
		<xs:annotation>
			<xs:documentation>This value is not sent unless there is a measured value to report.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="units" use="optional" type="uom">
					<xs:annotation>
						<xs:documentation>Units of measure for this measured value.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="bufferedPoint" type="bufferedPoint"/>
	<xs:complexType name="bufferedPoint">
		<xs:annotation>
			<xs:documentation>This is the location around which objects are to be located within the buffereing distance specified using the radius element.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="GMLLocation" type="GMLLocation" minOccurs="0" maxOccurs="1"/>
			<xs:element name="gpsPoint" type="gpsPoint" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The gpsPoint element has been deprecated as of the V4.1.2 Release. It will be replaced with the GPSLocation in V5.0. It is suggested that you use only the GPSLocation element for carrying locations expressed in latitude and longitude and the WGS84 datum.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GPSLocation" type="GPSLocation" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>A geographical location as expressed in a geographic coordinate system. The GPSLocation SHALL be expressed using the WGS84 datum. This object SHOULD be used for expressing all types of GPS data and replaces the GPS, gpsPoint, and gpsLocation all of which have been deprecated in V4.1.3. The GPSLocation object will replace these other objects in V5.0.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="radius" type="lengthUnitValue" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Buffer radius to contain search.  Absence of a radius indicates the server should use its default buffer radius.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="lengthUnitValue" type="lengthUnitValue"/>
	<xs:complexType name="lengthUnitValue">
		<xs:simpleContent>
			<xs:extension base="doubleType">
				<xs:attribute name="units" use="optional" type="lengthUnits"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="electricMeters" type="electricMeters"/>
	<xs:complexType name="electricMeters">
		<xs:sequence>
			<xs:element name="electricMeter" type="electricMeter" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="gasMeters" type="gasMeters"/>
	<xs:complexType name="gasMeters">
		<xs:sequence>
			<xs:element name="gasMeter" type="gasMeter" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="propaneMeters" type="propaneMeters"/>
	<xs:complexType name="propaneMeters">
		<xs:sequence>
			<xs:element name="propaneMeter" type="propaneMeter" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="waterMeters" type="waterMeters"/>
	<xs:complexType name="waterMeters">
		<xs:sequence>
			<xs:element name="waterMeter" type="waterMeter" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="otherMeters" type="otherMeters"/>
	<xs:complexType name="otherMeters">
		<xs:sequence>
			<xs:element name="otherMeter" type="otherMeter" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageEvent" type="outageEvent"/>
	<xs:complexType name="outageEvent">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="area" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of affected area.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="problemLocation" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of the location of the problem.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deviceID" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Unique identifier for a power system device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deviceType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Device type (fuse. switch, recloser, transformerBank, etc.)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outagedPhase" type="phaseCode" minOccurs="0" maxOccurs="1"/>
					<xs:element name="substationCode" type="substationType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Substation code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feeder" type="feeder" minOccurs="0" maxOccurs="1"/>
					<xs:element name="actualFault" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of the confirmed cause of the fault.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="faultType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>THIS ELEMENT HAS BEEN DEPRECATED STARTING WITH V4.1.1.Type of fault (for instance: major storm, power supplier, blown arrestor, etc.). Enumeration of this element is site-specific; hence no detail is provided, however, the domain values should be discoverable using the GetDomainMembers method.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isCustomerResponsible" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
					<xs:element name="isPlanned" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Is this a planned outage?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageDescription" type="outageDescription" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outageStatus" type="outageStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outage event status(see enumeration).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priority" type="priority" minOccurs="0" maxOccurs="1"/>
					<xs:element name="startTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time first outage call/notification received.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageDefined" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time outage defined by operator.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="firstDispatch" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time that a crew was first dispatched.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="firstETA" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Estimated time of arrival of first crew on site.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="firstArrival" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Actual time of first crew arrival on site.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ETOR" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Estimated time to restoration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="completed" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time the outage event was fully handled.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="message" minOccurs="0" maxOccurs="1"/>
					<xs:element name="crewsDispatched" type="crewsDispatched" minOccurs="0" maxOccurs="1"/>
					<xs:element name="customersAffected" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of customer affected by this outage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priorityCustomersCount" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of priority customers affected by this outage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ODEventCount" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of ODEvents received on this outage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customersRestored" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of customers restored on this outage event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageReasonCodeList" type="outageReasonCodeList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outageEventStatus" type="outageEventStatus" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outageCustomerList" type="outageCustomerList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="crewActionEvents" type="crewActionEvents" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="outageDescription">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="outageStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Assumed"/>
			<xs:enumeration value="Confirmed"/>
			<xs:enumeration value="Restored"/>
			<xs:enumeration value="Scheduled"/>
			<xs:enumeration value="StillOut"/>
			<xs:enumeration value="NonPay"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="priority">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="message" type="message"/>
	<xs:complexType name="message">
		<xs:annotation>
			<xs:documentation>A recorded voice message.  The objectID is the ID for this message.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="recordID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier (foreign key) to the record this record belongs to (callRecordID or outageRecordID).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time message was recorded.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="listenedOn" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time that the wav message was checked by a utility employee.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="listenedBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Employee who checked the recorded message.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transcription" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This would be the text used for a Text-To-Speech engine to generate a phonetically correct audio message.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="attachments" type="attachments" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="crewsDispatched" type="crewsDispatched"/>
	<xs:complexType name="crewsDispatched">
		<xs:sequence>
			<xs:element name="crewID" type="objectID" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Unique identifier for a crew.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageDetectionEvent" type="outageDetectionEvent"/>
	<xs:complexType name="outageDetectionEvent">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phasing code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time outage event detected.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageEventType" type="outageEventType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of outage event(see enumerations).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageDetectionDeviceID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Unique identifier for this outage detection device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageDetectionDeviceType" type="outageDetectDeviceType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outage detection device type. (See Enumeration list)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageLocation" type="outageLocation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="messageList" type="messageList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outageCustomer" type="outageCustomer" minOccurs="0" maxOccurs="1"/>
					<xs:element name="priority" type="priorityType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Designation of importance level of this event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="percentConfident" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A value ranging from 1 to 100% indicating the percent confidence level this device is out.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="problemCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Problem code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resolvedLevel" type="resolvedLevel" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Indicates if this call was resolved to a specific meter</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="outageEventType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Instantaneous"/>
			<xs:enumeration value="Outage"/>
			<xs:enumeration value="Restoration"/>
			<xs:enumeration value="NoResponse"/>
			<xs:enumeration value="Inferred"/>
			<xs:enumeration value="PowerOn"/>
			<xs:enumeration value="PowerOff"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="outageLocation" type="outageLocation"/>
	<xs:complexType name="outageLocation">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>ObjectID for serviceLocation.  
At least one of the following location identifiers is required: (i)meterId, (ii) serviceLocationID, (iii) telephoneNumber, or (iv)accountNumber.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter identifier for meter at service location exeriencing outage.
At least one of the following location identifiers is required: (i)meterId, (ii) serviceLocationID, (iii) telephoneNumber, or (iv)accountNumber.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for serviceLocation experiencing outage.
At least one of the following location identifiers is required: (i)meterId, (ii) serviceLocationID, (iii) telephoneNumber, or (iv)accountNumber.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="telephoneNumber" type="telephoneNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Telephone number for serviceLocation experiencing outage.
At least one of the following location identifiers is required: (i)meterId, (ii) serviceLocationID, (iii) telephoneNumber, or (iv)accountNumber.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="applicationPointList" type="applicationPointList"/>
	<xs:complexType name="applicationPointList">
		<xs:sequence>
			<xs:element name="applicationPoint" type="objectRef" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is the location atwhich the strategy is to be applied.  The applicationPoint could be a substation, a delivery point or any other point the tne power system.  The "name" attribute in the objectRef can be used alone to describe a substation by name, or an engineering line section  by name. Alternatively, it is possible that an application Point could be specified by noun and objectID.  For instance if the strategy is to be applied on the substation with objectID12345, then the objectID attribute would be populated with "12345" and the noun attribute would be populated with the value "substation".</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="deviceType">
		<xs:annotation>
			<xs:documentation>This enumeraation holds the type of equipment for which the requestor is interested in receiving the allowable names using the GetElectricalEquipment method.  Acceptable values for deviceType include: Overhead (for all overhead line types whether transmission, primary or secondary), Underground (for all underground conductor types, whethertransmission,  primary or secondary), ZsmConductor (for the specification of a generic self and mutual impedance, which may be used for source impedances among other uses), ZabcConductor (for the specification of a generic impedance, which may be used for source impedances among other uses), Transformer (used for all transformer banks), Regulator (used for all regulator banks), Device (used for switching banks and overcurrent device banks) and Other (for other unspecified equipment). </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Overhead"/>
			<xs:enumeration value="Underground"/>
			<xs:enumeration value="ZsmConductor"/>
			<xs:enumeration value="ZabcConductor"/>
			<xs:enumeration value="Transformer"/>
			<xs:enumeration value="Regulator"/>
			<xs:enumeration value="Device"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="messageList" type="messageList"/>
	<xs:complexType name="messageList">
		<xs:sequence>
			<xs:element name="message" type="message" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageCustomer" type="outageCustomer"/>
	<xs:complexType name="outageCustomer">
		<xs:sequence>
			<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Customer identification number (object ID for the customer object).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="callBackPhone" type="telephoneNumber" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Phone number at which to call back customer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="timeToCall" type="timeToCall" minOccurs="0" maxOccurs="1"/>
			<xs:element name="callBackFlag" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Flag that determines whether customer wants a call back.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="callBackContactFirstName" type="firstName" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>First name of person to call back about this outage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="callBackContactLastName" type="lastName" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Last name (family name or surname) of person to call back about this outage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="callBackContactMName" type="middleName" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Middle name of person to call back about this outage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="callBackStatus" type="callBackStatus" minOccurs="0" maxOccurs="1"/>
			<xs:element name="callBackCompletedTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="callBackType" type="callBackType" minOccurs="0" maxOccurs="1"/>
			<xs:element name="callRecordID" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Call back record that this call back is associated with.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="outageEventID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Outage ID this customer is associated with.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="callerID" type="telephoneNumber" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the telephone number received from callerID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The objectID of the serviceLocation at which the outage has been reported.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceID" type="serviceID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the identifier for the service and serviceType for which an outage has been reported.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The meterID for which the outage has been reported.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="timeToCall" type="timeToCall"/>
	<xs:complexType name="timeToCall">
		<xs:annotation>
			<xs:documentation>The permissible time period during which call backs can occur.  This is a complex variable consisting of a start time and end time.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="startTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Earliest time to call back.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="endTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Latest time to call back.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="firstName">
		<xs:annotation>
			<xs:documentation>First (or given name) of a person.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="lastName">
		<xs:annotation>
			<xs:documentation>Last name (family name or surname)of person.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="middleName">
		<xs:annotation>
			<xs:documentation>Middle name of a person.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="callBackStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="On"/>
			<xs:enumeration value="Off"/>
			<xs:enumeration value="StillOff"/>
			<xs:enumeration value="Undialable"/>
			<xs:enumeration value="MaxDial"/>
			<xs:enumeration value="NoResponse"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="callBackType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="IVR"/>
			<xs:enumeration value="Manual"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="priorityType">
		<xs:annotation>
			<xs:documentation>Designation of importance level of this event.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="NeedsAttention"/>
			<xs:enumeration value="Urgent"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="resolvedLevel">
		<xs:annotation>
			<xs:documentation>Indicates if this call was resolved to a specific meter</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Meter"/>
			<xs:enumeration value="Address"/>
			<xs:enumeration value="Unresolved"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="outageCustomerList" type="outageCustomerList"/>
	<xs:complexType name="outageCustomerList">
		<xs:sequence>
			<xs:element name="outageCustomer" type="outageCustomer" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageDetectionLog" type="outageDetectionLog"/>
	<xs:complexType name="outageDetectionLog">
		<xs:annotation>
			<xs:documentation>Contains the outage detection events that have been processed by the Outage Management System for a specific service location and outage.  The objectID is the unique outageDetectionRecordID for all outage detection events at a given service location.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phasing code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="loggedODEventList" type="loggedODEventList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outageLocation" type="outageLocation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="messageList" type="messageList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outageCustomer" type="outageCustomer" minOccurs="0" maxOccurs="1"/>
					<xs:element name="priority" type="priorityType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Designation of importance level of this event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resolvedLevel" type="resolvedLevel" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Indicates if this call was resolved to a specific meter</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timeTroubleBegan" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The approximate time the trouble began or was reported.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timeOfInitialEvent" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The initial event time. This is the initial time the event was logged. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timeOfLastEvent" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time last event was logged.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventsLogged" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of events logged.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="loggedODEventList" type="loggedODEventList"/>
	<xs:complexType name="loggedODEventList">
		<xs:sequence>
			<xs:element name="loggedOutageDetectionEvent" type="loggedOutageDetectionEvent" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="loggedOutageDetectionEvent" type="loggedOutageDetectionEvent"/>
	<xs:complexType name="loggedOutageDetectionEvent">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="outageDetectionRecordID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier (foreign key) to the record this record belongs to. For instance a call Record ID</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time outage event detected.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageDetectDeviceID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Unique identifier for this outage detection device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageDetectDeviceType" type="outageDetectDeviceType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outage detection device type. (See Enumeration list)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="problemCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Problem Code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageEventType" type="outageEventType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of outage event(see enumerations).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="takenBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Agent taking call.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="callType" type="callType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of call.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="description" type="description" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="callType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Call"/>
			<xs:enumeration value="CustomerServiceRep"/>
			<xs:enumeration value="InboundTelephoneDevice"/>
			<xs:enumeration value="Manual"/>
			<xs:enumeration value="IVR"/>
			<xs:enumeration value="Sensor"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="outageDetectionLogList" type="outageDetectionLogList"/>
	<xs:complexType name="outageDetectionLogList">
		<xs:sequence>
			<xs:element name="outageDetectionLog" type="outageDetectionLog" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageDurationEvent" type="outageDurationEvent"/>
	<xs:complexType name="outageDurationEvent">
		<xs:annotation>
			<xs:documentation>This object tracks the actual interruption in service. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="outageEventID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Index Number for outage incident.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageDescription" type="outageDescription" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the meter identifier of the meter associated with this outage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the ID of the serviceLocation with which this outage event is associated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceID" type="serviceID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the object identifier for the service associated with this outage event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Customer account number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timeOfInterruption" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="timeRestored" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="interruptionDuration" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the interruption durration in minutes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customerResponsible" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Set to true if the customer was responsible for the interruption in service.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="durationDisplay" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is an optional string representation of the interruption duration formated as X day X hour X min.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="outageDurationEventList" type="outageDurationEventList"/>
	<xs:complexType name="outageDurationEventList">
		<xs:sequence>
			<xs:element name="outageDurationEvent" type="outageDurationEvent" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageEventStatus" type="outageEventStatus"/>
	<xs:complexType name="outageEventStatus">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="outageStatus" type="outageStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The status of this outageEvent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crewDispatched" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Has the crew been dispatched to this outage?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crewOnSite" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Is the crew on site at this outage?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ETOR" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Estimated Time of Resoration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customerFound" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Has the customer been found in the OA database?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageAttachments" type="outageAttachments" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a list of messages that describe the outageEventStatus in either Text-to-Speech transcriptions or recorded voice files.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="action">
		<xs:restriction base="xs:string">
			<xs:enumeration value="New"/>
			<xs:enumeration value="Change"/>
			<xs:enumeration value="Delete"/>
			<xs:enumeration value="Replace"/>
			<xs:enumeration value="Link"/>
			<xs:enumeration value="Unlink"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="expirationTime" type="expirationTime"/>
	<xs:complexType name="expirationTime">
		<xs:complexContent>
			<xs:extension base="time">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="rateCode">
		<xs:annotation>
			<xs:documentation>This is the string identifier for this rate.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="domainNameChange" type="domainNameChange"/>
	<xs:complexType name="domainNameChange">
		<xs:annotation>
			<xs:documentation>This object is included as a means to publish changed domainName information to a client that previously had subscribed to such changes.  If new information is being published, the new information should be carried in the domainName element and the action element should be set to "Add".  If existing domain name information is to be deleted, then the existing domain name should be carried in the domainName element and the action element should be set to "Delete".  If existing information is to be replaced, then the new name should be carried in the domainName element, the old information should be carried in the oldDomainName elment and the action should be set to be"Modify".</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="domainName" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the new domainName.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="oldDomainName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>If an existing domainName is being replaced, this is the existing name that is to be replaced with the new information carried in the domainName elment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="action" type="domainNameAction" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the action that is to be taken using the domainName information that is received.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="meterBaseExchange" type="meterBaseExchange"/>
	<xs:complexType name="meterBaseExchange">
		<xs:annotation>
			<xs:documentation>This object facilitates the exchange of meter bases at a customer service. The objectID of this object is the objectID of the device being added; the replaceID attribute carries the objectID of the device being replaced.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspDeviceExchange">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="domainNameAction">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Add"/>
			<xs:enumeration value="Delete"/>
			<xs:enumeration value="Modify"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="mspAssetHistoryEvent" type="mspAssetHistoryEvent"/>
	<xs:complexType name="mspAssetHistoryEvent" abstract="true">
		<xs:annotation>
			<xs:documentation>This abstract class models an event where an asset is acted upon or moved.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="eventTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The time at which the recorded event happened.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="actionTaken" type="actionTaken" minOccurs="1" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The action taken on the device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="informationList" type="informationList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="meterHistoryEvent" type="meterHistoryEvent"/>
	<xs:complexType name="meterHistoryEvent">
		<xs:annotation>
			<xs:documentation>Actions taken on a meter asset.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspAssetHistoryEvent">
				<xs:sequence>
					<xs:element name="meterID" type="meterID" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter ID for the meter associated with this event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Customer associated with this meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account associated with this meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="serviceID" type="serviceID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="meterBaseID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>MeterBaseID, if this is an electric meter.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterStatusList" type="meterStatusList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of meter statuses.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="meterStatusList" type="meterStatusList"/>
	<xs:complexType name="meterStatusList">
		<xs:annotation>
			<xs:documentation>List of meter statuses.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="meterStatus" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Status of this meter. Suggested values for this element include: New, InInventory, Installed, Active, Inactive, Connected, Disconnected, ConnectedOverride, DisconnectedOverride, OnHold, InForRepair, InTesting, Retired, Other and Unknown.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="adjustmentItemList" type="adjustmentItemList"/>
	<xs:complexType name="adjustmentItemList">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="adjustmentItem" type="adjustmentItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="timePeriods" type="timePeriods"/>
	<xs:complexType name="timePeriods">
		<xs:sequence>
			<xs:element name="timePeriod" type="timePeriod" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="readingStatusCodeList" type="readingStatusCodeList"/>
	<xs:complexType name="readingStatusCodeList">
		<xs:annotation>
			<xs:documentation>List of the codes used to describe the status of meter readings and their meanings.  For additional details on these codes, see the definitions for QualityCode in IEC 61968-9, Annex D.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="readingStatusCodeEntry" type="readingStatusCodeEntry" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="informationList" type="informationList"/>
	<xs:complexType name="informationList">
		<xs:sequence>
			<xs:element name="informationItem" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="assetHistoryEvent" type="assetHistoryEvent"/>
	<xs:complexType name="assetHistoryEvent">
		<xs:complexContent>
			<xs:extension base="mspAssetHistoryEvent">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="dB" type="dB"/>
	<xs:complexType name="dB">
		<xs:annotation>
			<xs:documentation>This structure carries a series of records (values), each matching the syntax described.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="chs" type="chs" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Channel of interval data and status codes for use in an IntervalData object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cS" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Common status string.  This status field is for status information tor each interval that is common to all channels.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="chs" type="chs"/>
	<xs:complexType name="chs">
		<xs:annotation>
			<xs:documentation>Channel of interval data and status codes for use in an IntervalData object.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ch" type="ch" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Channel of interval data and status codes for use in an IntervalData object.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ch" type="ch"/>
	<xs:complexType name="ch">
		<xs:annotation>
			<xs:documentation>Channel of interval data and status codes for use in an IntervalData object.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="idx" type="xs:int" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The channel index. Relative position of the data item in a list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="d" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a data block for a channel.  The string includes interval data and interval status information.  If the interval delimiter is a semicolon and the status delimiter (for status information within an interval) is a comma, then the data block for three intervals might be: 1,2;5;6,4,8;
In this case the data for the first interval is 1 and the status for the first interval is 2.  The second interval has data = 5 and no status information; the third interval has data =6 and two status values of 4 and 8 respectively. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="bufferedObjectCollection" type="bufferedObjectCollection"/>
	<xs:complexType name="bufferedObjectCollection">
		<xs:annotation>
			<xs:documentation>This is the payload for the GetFeaturesNearLatLong method. It is possible to return features, object references or circuit elements depending on what is being requested by the client.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="bufferedPoint" type="bufferedPoint" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the location around which objects are to be located within the buffereing distance specified using the radius element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="physicalObjectList" type="physicalObjectList" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>These are the objects for features that are found within the buffer distance from the point identified in the buffered point.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bufferedReferenceList" type="bufferedReferenceList" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>These are references to objects for features that are found within the buffer distance from the point identified in the buffered point. The distance from the specified location can be identified using the distance element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bufferedCircuitElementList" type="bufferedCircuitElementList" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This optional container shall be used if it is desired to return a collection of circuit elements objects rather than the features to which these circuit elements point.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="callBackList" type="callBackList"/>
	<xs:complexType name="callBackList">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="outageEventID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Index Number for outage incident.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageStatus" type="outageStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Outage event status(see enumeration).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageDescription" type="outageDescription" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of outage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageCustomerList" type="outageCustomerList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>list of customers in the call back list.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="message" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A recorded voice message.  The objectID is the ID for this message.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="callBackListType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This callback list type describes the type of callbacks being performed.  For example: Restoration verification, changes in Estimated Time Of Restoration (ETOR), discovery of current power status, or other callback options for non-outage events. Use GetDomainNames and GetDomainMembers to acquire valid types from the IVR system.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="tender" type="tender"/>
	<xs:complexType name="tender">
		<xs:annotation>
			<xs:documentation>A payment in cash or equivalents.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="amount" type="money" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Payment amount, expressed in currency units.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="convenienceFee" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Financial transaction convenience fee</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="utilityFee" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Utility added transaction fee. May be fixed or a calculated value.  CB calculated method.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="total" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Total of payments and fees tendered.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="authorizationCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Bank or clearing house authorization code.  Blank until transaction committed</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="payableItemList" type="payableItemList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="paymentMode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Payment mode (ACH, eCheck, credit card, kiosk, IVR, etc.).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="responseCode" type="responseCode" minOccurs="0" maxOccurs="1"/>
					<xs:element name="financialTransactionID" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This ID cross references the transactionID returned from the credit card vendor (if supplied) for billing.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="payableItem" type="payableItem"/>
	<xs:complexType name="payableItem">
		<xs:annotation>
			<xs:documentation>An item to which a customer payment could be applied.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="pastDueAmount" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="currentAmount" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="chargeCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="dueDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="disconnectDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="lastPaymentAmount" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="lastPaymentDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="payableItemList" type="payableItemList"/>
	<xs:complexType name="payableItemList">
		<xs:annotation>
			<xs:documentation>List of items to which a customer payment could be applied.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="payableItem" type="payableItem" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Items to which a customer payment could be applied.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="allowableTransactionTypes" type="allowableTransactionTypes" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Transaction types are the valid payment transaction nouns allowed for this customer (Example: creditCardPayment, eCheckPayment, achPayment, cashPayment, or sendToOperator).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="allowableTransactionTypes" type="allowableTransactionTypes"/>
	<xs:complexType name="allowableTransactionTypes">
		<xs:sequence>
			<xs:element name="transactionType" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Transaction types are the valid payment transaction nouns allowed for this customer (Example: creditCardPayment, eCheckPayment, achPayment, cashPayment, or sendToOperator).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="responseCode">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Success"/>
			<xs:enumeration value="Failure"/>
			<xs:enumeration value="Error"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="paymentTransaction" type="paymentTransaction"/>
	<xs:complexType name="paymentTransaction">
		<xs:sequence>
			<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Account number for customer's utility account. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeService" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="paymentTransactionGroup" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="creditCardPayment" type="creditCardPayment"/>
	<xs:complexType name="creditCardPayment">
		<xs:sequence>
			<xs:element name="creditCardInfo" type="creditCardInfo" minOccurs="0" maxOccurs="1"/>
			<xs:element name="tender" type="tender" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="acctsReceivable" type="acctsReceivable"/>
	<xs:complexType name="acctsReceivable">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="receivableAmount" type="money" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Amount of money that is due for this receivable, expressed in default currency unless the currencyCode attribute is set to a different currency type.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="dueDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The date that the receivable is (or was) due.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of utility service(e.g., Electric, Gas, Water, etc.).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="receivableType" type="receivableType" minOccurs="1" maxOccurs="1"/>
			<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="domainMemberAction">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Add"/>
			<xs:enumeration value="Delete"/>
			<xs:enumeration value="Modify"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="readingStatusCode" type="readingStatusCode"/>
	<xs:complexType name="readingStatusCode">
		<xs:annotation>
			<xs:documentation>This is a three-part code that describes the status or quality of a meter reading.  For additional information about these reading statusCode definitions, see the definitions for QualityCodes in IEC 61968-9, Annex D. meanings. The readingStatusCode that is included in the data field shall consist of a dotted notation where the readingStatusCode value = originatingSystemID.codeCategory.codeIndex.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="originatingSystemID" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is a three digit code that identifies the system that is commenting on the quality or status of the meter reading. Values should be those given in IEC61968-9, Annex D, Table D.1.  For instance, 0 - Not applicable or unavailable, 1 - End device, 2 - Metering system, and 3- Meter data management system.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeCategory" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This string categorizes quality or status codes.  The values of this string should match those given in IEC61968-9, Annex D, Table D.2.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeIndex" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>These values are index numbers that further identify quality or status codes.  These values should match those included in IEC61968-9, Annex D, Table D.3.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:anyAttribute namespace="##any" processContents="lax"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="bufferedReferenceList" type="bufferedReferenceList"/>
	<xs:complexType name="bufferedReferenceList">
		<xs:annotation>
			<xs:documentation>These are references to objects for features that are found within the buffer distance from the point identified in the buffered point. The distance from the specified location can be identified using the distance element.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="bufferedObjectRef" type="bufferedObjectRef" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="supportedReadingTypes" type="supportedReadingTypes"/>
	<xs:complexType name="supportedReadingTypes">
		<xs:annotation>
			<xs:documentation>This list contains a list of the types of readings that this meter can read. Types of readings are expressed as fieldNames as listed in the latest version of the FormattedBlock Implementations Guidelines Document, published by the MultiSpeak Initiative.  Note, this list contains the types of readings that this meter can read; it might not necessarily be programmed currently to read all of these reading types. </xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="readingType" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eCheckPayment" type="eCheckPayment"/>
	<xs:complexType name="eCheckPayment">
		<xs:sequence>
			<xs:element name="checkInfo" type="checkInfo" minOccurs="0" maxOccurs="1"/>
			<xs:element name="tender" type="tender" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="achPayment" type="achPayment"/>
	<xs:complexType name="achPayment">
		<xs:sequence>
			<xs:element name="checkInfo" type="checkInfo" minOccurs="0" maxOccurs="1"/>
			<xs:element name="tender" type="tender" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="cashPayment" type="cashPayment"/>
	<xs:complexType name="cashPayment">
		<xs:sequence>
			<xs:element name="tender" type="tender" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="creditCardInfo" type="creditCardInfo"/>
	<xs:complexType name="creditCardInfo">
		<xs:sequence>
			<xs:element name="type" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Visa, MasterCard, AmEx...</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="creditCardNumber" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="creditCardExpDate" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>month/year.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cardVerificationValue" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Security value on card (cw2)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="firstName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>First (or given) name of the card holder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="lastName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Last (or family) name - surname.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mName" type="middleName" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Middle name of cardholder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="suffix" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Suffix to name (e.g., Jr, III, etc).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="address" type="address" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="checkInfo" type="checkInfo"/>
	<xs:complexType name="checkInfo">
		<xs:sequence>
			<xs:element name="checkingAccountNumber" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="bankRoutingNumber" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="nameOnCheck" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="checkNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="paymentTransactionGroup">
		<xs:sequence>
			<xs:element name="creditCardPayment" type="creditCardPayment" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="eCheckPayment" type="eCheckPayment" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="achPayment" type="achPayment" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="cashPayment" type="cashPayment" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:group>
	<xs:element name="chargeableDevice" type="chargeableDevice"/>
	<xs:complexType name="chargeableDevice">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="chargeableDeviceType" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="deviceDescription" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="quantity" type="xs:integer" minOccurs="0" maxOccurs="1"/>
					<xs:element name="actionFlag" type="actionFlag" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="actionFlag">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Enable"/>
			<xs:enumeration value="Disable"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="chargeableDeviceList" type="chargeableDeviceList"/>
	<xs:complexType name="chargeableDeviceList">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="1" maxOccurs="1"/>
					<xs:group ref="chargeableDeviceGroup" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:group name="chargeableDeviceGroup">
		<xs:sequence>
			<xs:element name="chargeableDevice" type="chargeableDevice" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:group>
	<xs:element name="customersAffectedByOutage" type="customersAffectedByOutage"/>
	<xs:complexType name="customersAffectedByOutage">
		<xs:annotation>
			<xs:documentation>This is a list of customer meters that are affected by a specific outage event.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="outageEventID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Index Number for outage incident.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="affectedMeters" type="affectedMeters" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Container to hold references to meters and/or service locations affected by this outage event.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="affectedMeter" type="affectedMeter"/>
	<xs:complexType name="affectedMeter">
		<xs:annotation>
			<xs:documentation>Meter or service location that is affected by an outage event.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The meter identifier of the affected meter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the objectID of the serviceLocation at which this meter is installed.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="affectedMeters" type="affectedMeters"/>
	<xs:complexType name="affectedMeters">
		<xs:annotation>
			<xs:documentation>Container to hold references to meters and/or service locations affected by this outage event.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="affectedMeter" type="affectedMeter" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="customersAttachedToDevice" type="customersAttachedToDevice"/>
	<xs:complexType name="customersAttachedToDevice">
		<xs:annotation>
			<xs:documentation>This is a list of customers that is electrically fed from a specific device.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="deviceID" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Unique identifier for a power system device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deviceDescription" type="description" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of a power system device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="affectedMeters" type="affectedMeters" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Container to hold references to meters and/or service locations electrically fed by this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="loadManagementEvent" type="loadManagementEvent"/>
	<xs:complexType name="loadManagementEvent">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="substationName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of the substation that normally feeds the service associated with this load management device.  If substation and/or feeder information is included in this load management event object, then load control should be spread only over this substation (and/or feeder) area.  If no substation or feeder is included in the load mangement event, then the load management system is free to spread the controlled load over the entire utility system.   ' THIS ELEMENT IS DEPRECATED AS OF V4.1.6 AND WILL BE REMOVED IN V5.0. IT IS SUGGESTED THAT IMPLEMENTERS DEFINE THE APPLICATION POINT FOR THIS LOAD MANAGEMENT EVENT USING THE loadManagementEvent.strategy.applicationPointList RATHER THAN USING THE SUBSTATION OR FEEDER AS AN APPLICATION POINT.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feederName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Name of the substation feeder that normally feeds the service associated with this load management device.  ' THIS ELEMENT IS DEPRECATED AS OF V4.1.6 AND WILL BE REMOVED IN V5.0. IT IS SUGGESTED THAT IMPLEMENTERS DEFINE THE APPLICATION POINT FOR THIS LOAD MANAGEMENT EVENT USING THE loadManagementEvent.strategy.applicationPointList RATHER THAN USING THE SUBSTATION OR FEEDER AS AN APPLICATION POINT.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="feederNumber" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of the substation feeder that normally feeds the service associated with this load management device.  ' THIS ELEMENT IS DEPRECATED AS OF V4.1.6 AND WILL BE REMOVED IN V5.0. IT IS SUGGESTED THAT IMPLEMENTERS DEFINE THE APPLICATION POINT FOR THIS LOAD MANAGEMENT EVENT USING THE loadManagementEvent.strategy.applicationPointList RATHER THAN USING THE SUBSTATION OR FEEDER AS AN APPLICATION POINT.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="groupName" type="xs:long" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This element is deprecated as of V4.1.6 and will be removed in V5.0. It is suggested that implementors use the defined strategy approach to control all switches in a named switchGroup.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="controlEventType" type="controlEventType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Event Type (see enumerations).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="applicationRate" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time in minutes over which to ramp in control action (0=SCRAM).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="duration" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time in minutes over which to control (0=continue until alternate instruction).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cycleTime" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time in minutes over which to cycle control on and off.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:group ref="LMEventGroup1" minOccurs="0" maxOccurs="1"/>
					<xs:group ref="LMEventGroup2" minOccurs="0" maxOccurs="1"/>
					<xs:element name="strategy" type="strategy" minOccurs="0" maxOccurs="1"/>
					<xs:element name="scheduleDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the date and time that the the loadManagementEvent should become effective.  If no date is specified, or the date/time is in the past, the loadManagementEvent should become effective immediately.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="controlEventType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Initiate"/>
			<xs:enumeration value="Restore"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:group name="LMEventGroup1">
		<xs:choice>
			<xs:element name="dutyCycle" type="xs:long" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Percent duty cycle.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="controlLoad" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Load in kW to be controlled at this location.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:group name="LMEventGroup2">
		<xs:annotation>
			<xs:documentation>This is an optional method to control load using a closed-loop feedback system.  The SCADA system sets a target on a specific analog point and requests the LM system maintain demand below this target level within its capability.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="pointID" type="objectID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="target" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Target to hold this analog point to by load control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="uom" type="uom" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Units of measure on this analog point</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:element name="strategy" type="strategy"/>
	<xs:complexType name="strategy">
		<xs:annotation>
			<xs:documentation>This is a description of a specific load management strategy to be employed.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="strategyName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the name of the strategy to be employed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="applicationPointList" type="applicationPointList" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="demandResponseEventDeprecated" type="demandResponseEventDeprecated"/>
	<xs:complexType name="demandResponseEventDeprecated">
		<xs:annotation>
			<xs:documentation>This element has been deprecated as of V4.1.4 and will be removed in V5.0. It should not be implemented, rather the demandResponseEvent shall be used.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="loadManagementID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="port" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="strategy" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="controlEventType" type="controlEventType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="duration" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time in minutes over which to control (0=continue until alternate instruction).</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="readingObject" type="readingObject"/>
	<xs:complexType name="readingObject">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="sourceList" type="sourceList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="readingList" type="readingList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="sourceList" type="sourceList"/>
	<xs:complexType name="sourceList">
		<xs:sequence>
			<xs:element name="source" type="source" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Source characterizes the type of data supplied by a meter for efficient reference by the readingObject/readingList/ meterReading/registers element or by the loadProfile/ channelList/channel elements.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="source" type="source"/>
	<xs:complexType name="source">
		<xs:annotation>
			<xs:documentation>Source characterizes the type of data supplied by a meter for efficient reference by the readingObject/readingList/ meterReading/registers element or by the loadProfile/ channelList/channel elements.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="sourceID" type="xs:unsignedInt" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Identifier used to associate quantities with their source information. This identifier is valid only to associate quantities and sources in the same file and should not be preserved between file transfer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="quantityType" type="quantityType" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Defines the type of quantity associated with this source. See the enumeration for a list of possible types (i.e., summation, demand, value or consumption).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="uom" type="uom" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Unit of measure. This list is based on ANSI C12.19-1997 standard.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountability" type="accountability" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Defines in which quadrant(s)  of the two-dimensional cartesian co-ordinate system the tagged quantity lies. This element is not present if not provided or does not apply.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="phase" type="phaseAssociation" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element defines the phase measurement associations. This element is not present if not provided or if this element doesn't apply.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="harmonic" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element denotes if the quantity given represents the entire unfiltered signal or is a harmonic component. This element may be omitted if the quantity represents the entire signal or if this element doesn't apply. Alternatively, the value of "All" could be used to denote that the entire unfiltered signal is intended. Value "0" represent unspecified harmonic components, value "1" represent the first harmonic (fundamental), value "2" represent the second harmonic, etc.  The value of "harmonics" indicates that the value represents the harmonics alone, with no fundamental component.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="transformerRatio" type="transformerRatio" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Transformer ratios used to convert associated quantities to real measurements.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="displayFormat" type="displayFormat" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Formating information required to format associated quantities transmitted in this file the same way as the meter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="multiplierApplied" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Defines whether the displayFormat/displayMultiplier has already been applied to the associated quanties.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="mspAlarm" type="mspAlarm"/>
	<xs:complexType name="mspAlarm" abstract="true">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="sourceIdentifier" type="objectRef" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier for the source of the alarm.  For instance, this might be a meter, in which case the objectID should be the concatenated string used in the meterID (that includes the noun and the objectID), or it could be a SCADA point, in which case the noun should be SCADAPoint and objectID would be the SCADAPointID.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventTime" type="mspDateTime" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The date and time that the event occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventCode" type="meterEvent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is an object that carries meter and/or headend event
codes. The numeric code (e.g., "7.20.7.27") would be
carried in the eventCode complex type itself.  This is used as the mRID in IEC 61968-9 standard EndDeviceEvent instances. The domain, domainPart, type, index, value, and codeString representation could optionally be sent in
attributes on the complex type.  </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="quantityType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="summation"/>
			<xs:enumeration value="demand"/>
			<xs:enumeration value="consumption"/>
			<xs:enumeration value="value"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="accountability">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Q1"/>
			<xs:enumeration value="Q2"/>
			<xs:enumeration value="Q3"/>
			<xs:enumeration value="Q4"/>
			<xs:enumeration value="Q1-2"/>
			<xs:enumeration value="Q1-3"/>
			<xs:enumeration value="Q1-4"/>
			<xs:enumeration value="Q2-3"/>
			<xs:enumeration value="Q2-4"/>
			<xs:enumeration value="Q3-4"/>
			<xs:enumeration value="Q1-2-3"/>
			<xs:enumeration value="Q1-2-4"/>
			<xs:enumeration value="Q1-3-4"/>
			<xs:enumeration value="Q2-3-4"/>
			<xs:enumeration value="Q1-2-3-4"/>
			<xs:enumeration value="Q1-2-netFlow"/>
			<xs:enumeration value="Q1-3-netFlow"/>
			<xs:enumeration value="Q1-4-netFlow"/>
			<xs:enumeration value="Q2-3-netFlow"/>
			<xs:enumeration value="Q2-4-netFlow"/>
			<xs:enumeration value="Q3-4-netFlow"/>
			<xs:enumeration value="Q1-2-3-netFlow"/>
			<xs:enumeration value="Q1-2-4-netFlow"/>
			<xs:enumeration value="Q1-3-4-netFlow"/>
			<xs:enumeration value="Q2-3-4-netFlow"/>
			<xs:enumeration value="Q1-2-3-4-netFlow"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="phaseAssociation">
		<xs:annotation>
			<xs:documentation>This element defines the phase measurement associations. </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="A-B"/>
			<xs:enumeration value="B-C"/>
			<xs:enumeration value="C-A"/>
			<xs:enumeration value="Neutral-Gnd"/>
			<xs:enumeration value="A-Neutral"/>
			<xs:enumeration value="B-Neutral"/>
			<xs:enumeration value="C-Neutral"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="transformerRatio" type="transformerRatio"/>
	<xs:complexType name="transformerRatio">
		<xs:sequence>
			<xs:element name="applied" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Defines if these ratios have been already applied to the associated quantities or not.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ct" type="xs:double" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Current transformer ratio used to convert quantities reported by the meter to real measurements.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="pt" type="xs:double" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Voltage transformer ratio used to convert quantities reported by the meter to real measurements.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="displayFormat" type="displayFormat"/>
	<xs:complexType name="displayFormat">
		<xs:annotation>
			<xs:documentation>Formating information required to format associated quantities transmitted in this file the same way as the meter.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="supressLeadingZero" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Defines if the leading zeros up to the numberOfDigit are supressed or not.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="numberOfDigits" type="xs:unsignedByte" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of digits before the decimal point</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="precision" type="xs:unsignedByte" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of digits after the decimal point.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="displayMultiplier" type="xs:double" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Constant by which this source is multiplied before been displayed by the meter.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="readingList" type="readingList"/>
	<xs:complexType name="readingList">
		<xs:sequence>
			<xs:element name="meterReading" type="meterReading" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="profileObject" type="profileObject"/>
	<xs:complexType name="profileObject">
		<xs:annotation>
			<xs:documentation>This is an object that is used to carry load profile data.  It is suggested that either the formattedBlock or intervalData objects be used instead for efficiency</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="sourceList" type="sourceList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="loadProfileList" type="loadProfileList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="loadProfileList" type="loadProfileList"/>
	<xs:complexType name="loadProfileList">
		<xs:sequence>
			<xs:element name="loadProfile" type="profileType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="profileType" type="profileType"/>
	<xs:complexType name="profileType">
		<xs:sequence>
			<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Meter identifier.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="dataSetNumber" type="xs:unsignedByte" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number associated with a profiler when a meter supports multiple profilers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="channelList" type="channelList" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element defines one channel of profiling information. Multiple channels can be transfered by including multiple 'channel' elements in the same file. It's also possible to transfer profiling information one block at a time by including only one 'block' element for each 'channel' element and repeating this operation for each block transferred.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="channelList" type="channelList"/>
	<xs:complexType name="channelList">
		<xs:annotation>
			<xs:documentation>This element defines one channel of profiling information. Multiple channels can be transfered by including multiple 'channel' elements in the same file. It's also possible to transfer profiling information one block at a time by including only one 'block' element for each 'channel' element and repeating this operation for each block transferred.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="channel" type="channel" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="channel" type="channel"/>
	<xs:complexType name="channel">
		<xs:sequence>
			<xs:element name="blockList" type="blockList" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
		<xs:attribute name="intervalSourceID" use="required" type="xs:unsignedInt"/>
		<xs:attribute name="endReadingSourceID" use="optional" type="xs:unsignedInt"/>
		<xs:attribute name="channelNumber" use="optional" default="0" type="xs:unsignedInt"/>
	</xs:complexType>
	<xs:element name="blockList" type="blockList"/>
	<xs:complexType name="blockList">
		<xs:sequence>
			<xs:element name="block" type="channelBlock" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This element contains a list of consecutive quantities recorded on a channel. 'block' elements are included in the file from the newest to the oldest. 'interval' elements in each 'block' are also included from the newest to the oldest. The 'endTime' attribute defines the date and time of the newest 'interval' in a 'block'. The 'intervalPeriod' attribute defines the period in minutes between two consecutive 'intervals'. The optional  "endReading" attribute returns the value of the reading associated with this channel and recorded at 'endTime'. The optional 'endPulse'  quantity represent the total number of pulse recorded for the duration of a 'block'.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="channelBlock" type="channelBlock"/>
	<xs:complexType name="channelBlock">
		<xs:annotation>
			<xs:documentation>This element contains a list of consecutive quantities recorded on a channel. 'block' elements are included in the file from the newest to the oldest. 'interval' elements in each 'block' are also included from the newest to the oldest. The 'endTime' attribute defines the date and time of the newest 'interval' in a 'block'. The 'intervalPeriod' attribute defines the period in minutes between two consecutive 'intervals'. The optional  "endReading" attribute returns the value of the reading associated with this channel and recorded at 'endTime'. The optional 'endPulse'  quantity represent the total number of pulse recorded for the duration of a 'block'.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="status" type="blockStatus" minOccurs="0" maxOccurs="1"/>
			<xs:element name="interval" type="interval" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This element defines one quantity recorded. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="endTime" use="required" type="xs:dateTime"/>
		<xs:attribute name="intervalPeriod" use="required" type="xs:unsignedInt"/>
		<xs:attribute name="endReading" use="optional" type="xs:double"/>
		<xs:attribute name="endPulse" use="optional" type="xs:unsignedInt"/>
		<xs:attribute name="sequenceNumber" use="optional" type="xs:unsignedInt"/>
	</xs:complexType>
	<xs:element name="blockStatus" type="blockStatus"/>
	<xs:complexType name="blockStatus">
		<xs:choice minOccurs="1" maxOccurs="unbounded">
			<xs:element name="DSTinEffect" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
			<xs:element name="clockForward" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
			<xs:element name="clockBackward" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
			<xs:element name="overflow" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
			<xs:element name="partialInterval" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
			<xs:element name="longInterval" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
			<xs:element name="testData" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
			<xs:element name="invalid" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
			<xs:element name="manuallyEntered" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
			<xs:element name="manuallyModified" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
			<xs:element name="recorderStopped" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
			<xs:element name="configChanged" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
		</xs:choice>
		<xs:attribute name="intervalIndex" use="required" type="xs:unsignedInt"/>
	</xs:complexType>
	<xs:element name="interval" type="interval"/>
	<xs:complexType name="interval">
		<xs:simpleContent>
			<xs:extension base="doubleType">
				<xs:attribute name="DSTinEffect" use="optional" default="false" type="xs:boolean"/>
				<xs:attribute name="clockForward" use="optional" default="false" type="xs:boolean"/>
				<xs:attribute name="clockBackward" use="optional" default="false" type="xs:boolean"/>
				<xs:attribute name="overflow" use="optional" default="false" type="xs:boolean"/>
				<xs:attribute name="partialInterval" use="optional" default="false" type="xs:boolean"/>
				<xs:attribute name="longInterval" use="optional" default="false" type="xs:boolean"/>
				<xs:attribute name="testData" use="optional" default="false" type="xs:boolean"/>
				<xs:attribute name="invalid" use="optional" default="false" type="xs:boolean"/>
				<xs:attribute name="manuallyEntered" use="optional" default="false" type="xs:boolean"/>
				<xs:attribute name="manuallyModified" use="optional" default="false" type="xs:boolean"/>
				<xs:attribute name="recorderStopped" use="optional" default="false" type="xs:boolean"/>
				<xs:attribute name="configChanged" use="optional" default="false" type="xs:boolean"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="historyLog" type="historyLog"/>
	<xs:complexType name="historyLog">
		<xs:annotation>
			<xs:documentation>This is a set of meter events.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter identifier. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventList" type="eventList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of events reported.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="eventList" type="eventList"/>
	<xs:complexType name="eventList">
		<xs:annotation>
			<xs:documentation>List of events reported.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="event" type="event" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="event" type="event"/>
	<xs:complexType name="event">
		<xs:sequence>
			<xs:element name="dateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Date and time of History Log entry.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="meterEvent" type="meterEvent" minOccurs="0" maxOccurs="1"/>
			<xs:element name="userID" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>User identifier associated with this History Log entry. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="argument" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Argument associated with each entry. The content of this field is specific to each 'eventCode'.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="sequenceNumber" use="optional" type="xs:unsignedInt"/>
	</xs:complexType>
	<xs:element name="contentReferenceList" type="contentReferenceList"/>
	<xs:complexType name="contentReferenceList">
		<xs:sequence>
			<xs:element name="contentReference" type="contentReference" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="conductorList" type="conductorList"/>
	<xs:complexType name="conductorList">
		<xs:annotation>
			<xs:documentation>This structure defines the phase conductors and thier arrangement on the pole/tower, including bundling if any.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="conductorItem" type="conductorItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="conductorItem" type="conductorItem"/>
	<xs:complexType name="conductorItem">
		<xs:sequence>
			<xs:element name="positionNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="hCoordinate" type="length" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the horizontal coordinate for this conductor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="vCoordinate" type="length" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the vertical coordinate for this conductor, measured from the surface of the earth.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bundleCount" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the number of subconductors in this bundle</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bundleSeparation" type="length" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the spacing between subconductors in a bundle</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="equipmentCatalogType" type="equipmentCatalogType"/>
	<xs:complexType name="equipmentCatalogType">
		<xs:annotation>
			<xs:documentation>This element is constructed to force Visual Studio to create the equipmentType simple type.  It is not to be used in MultiSpeak.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType"/>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="conductor" type="conductor"/>
	<xs:complexType name="conductor">
		<xs:sequence>
			<xs:element name="conductorType" type="eaEquipID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of conductor for use in engineering database (I.E., 4/0 ACSR).  This is a link to the conductor type catalog.  This information optionally can be exchanged using the conductorEntry object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="phase" type="mspPhase" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="GPSLocation" type="GPSLocation"/>
	<xs:complexType name="GPSLocation">
		<xs:annotation>
			<xs:documentation>A geographical location as expressed in a geographic coordinate system. The GPSLocation SHALL be expressed using the WGS84 datum. This object SHOULD be used for expressing all types of GPS data and replaces the GPS, gpsPoint, and gpsLocation all of which have been deprecated in V4.1.5. The GPSLocation object will replace these other objects in V5.0. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="latitude" type="xs:double" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The latitude portion of a geographical location.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="longitude" type="xs:double" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The longitude portion of a geographical location.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="altitude" type="xs:double" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The altitude above mean sea level for this geographical location, assuming the use of the WGS84 datum.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GPSMetadata" type="GPSMetadata" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>If it is desirable to send metadata about how this GPSLocation was collected, that data is documented in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="GPSValidity" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Validity of GPS location; false = invalid, true = valid.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="complexNum" type="complexNum"/>
	<xs:complexType name="complexNum">
		<xs:sequence>
			<xs:element name="r" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Real portion of the complex number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="x" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Imaginary part of the complex number.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="units" use="optional" type="xs:string"/>
	</xs:complexType>
	<xs:element name="sectionDrop" type="sectionDrop"/>
	<xs:complexType name="sectionDrop">
		<xs:annotation>
			<xs:documentation>Voltage drop in this section of the engineering model.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="voltage">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="cumulativeDrop" type="cumulativeDrop"/>
	<xs:complexType name="cumulativeDrop">
		<xs:annotation>
			<xs:documentation>Cumulative voltage drop from the source to this location.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="voltage">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="paymentTransactionList" type="paymentTransactionList"/>
	<xs:complexType name="paymentTransactionList">
		<xs:sequence>
			<xs:element name="paymentTransaction" type="paymentTransaction" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="paymentExtension" type="paymentExtension"/>
	<xs:complexType name="paymentExtension">
		<xs:sequence>
			<xs:element name="accountNumber" type="accountNumber" minOccurs="1" maxOccurs="1"/>
			<xs:element name="typeService" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Type of service (electric, water, gas, etc.) for which this payment extension should be processed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="payableItemID" type="objectID" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the ID of the payable item being extended.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="utilityFee" type="money" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extendedTo" type="xs:date" minOccurs="0" maxOccurs="1"/>
			<xs:element name="responseCode" type="responseCode" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="paymentExtensionList" type="paymentExtensionList"/>
	<xs:complexType name="paymentExtensionList">
		<xs:sequence>
			<xs:element name="paymentExtension" type="paymentExtension" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="materialItem" type="materialItem"/>
	<xs:complexType name="materialItem">
		<xs:annotation>
			<xs:documentation>This is an item of material that may be used in maintenance or construction of plant.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="stockNumber" type="stockNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Stocking number for a material item in invenstory.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stockDescr" type="stockDescr" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of this stock item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="item" type="item" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Designator for this stock item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="avgCost" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Average cost of stock item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="newCost" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>New cost of stock item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="laborFactor" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Labor factor for installation of item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="materialType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of material type (e.g.  L =line type material)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="materialUnits" type="materialUnits" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Units of measure for this stock item (e.g., feet, meters, each, pound).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="warehouseLocationList" type="warehouseLocationList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of warehouse locations that contain this material item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="effectiveDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The date the new cost was acquired from the vendor and placed into the catalog of inventory.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="materialClass" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Describes the accounting for this materialItem.  Suggested enumerations for this element are: Expensed, Special equipment, General inventory or For requisition.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="item">
		<xs:annotation>
			<xs:documentation>Designator for this stock item.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="stockDescr">
		<xs:annotation>
			<xs:documentation>Description of an inventory item.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="materialUnits">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Feet"/>
			<xs:enumeration value="Meters"/>
			<xs:enumeration value="Inches"/>
			<xs:enumeration value="Pounds"/>
			<xs:enumeration value="Kilograms"/>
			<xs:enumeration value="Miles"/>
			<xs:enumeration value="ThousandFeet"/>
			<xs:enumeration value="Kilometers"/>
			<xs:enumeration value="Pair"/>
			<xs:enumeration value="Each"/>
			<xs:enumeration value="Hour"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="DoNotChange"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="warehouseLocation" type="warehouseLocation"/>
	<xs:complexType name="warehouseLocation">
		<xs:annotation>
			<xs:documentation>Location in a warehouse for this item of material.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="warehouseID" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Designation for which warehouse(s) an item is stored in.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="aisle" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Designation for which aisle in the warehouse this item is tored in.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bin" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Designation for which bin within an aisle, this item is stored in.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="warehouseLocationList" type="warehouseLocationList"/>
	<xs:complexType name="warehouseLocationList">
		<xs:annotation>
			<xs:documentation>List of warehouse locations that contain this material item.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="warehouseLocation" type="warehouseLocation" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="laborCategory" type="laborCategory"/>
	<xs:complexType name="laborCategory">
		<xs:annotation>
			<xs:documentation>The labor category ID is contained in the object ID for each category.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="description" type="description" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of labor category (e.g.  Normal summer cold construction).|</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="installCost" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Cost of a man-hour for installation in this labor category.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="retireCost" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Cost of a man-hour to retire units under this labor category.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="salvageCost" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Cost of a man-hour to salvage units under this labor category.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transferCost" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Cost of a man-hour to transfer units under this labor category.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="laborComponent" type="laborComponent"/>
	<xs:complexType name="laborComponent">
		<xs:annotation>
			<xs:documentation>List of labor associated with a materialManagementAssembly.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="laborCategoryID" type="laborCategoryID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Identifier for this type of labor category.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="constMH" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of man-hours to install this assembly cold.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="retireMH" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of man-hours to retire this assembly cold.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="salvageMH" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of man-hours  to salvage this assembly cold.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="transferMH" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of man-hours  to transfer this assembly to another location cold.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hotConstMH" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of man-hours to install this assembly hot.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hotRetireMH" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of man-hours to retire this assembly hot.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hotSalvageMH" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of man-hours to salvage this assembly hot.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hotTransferMH" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of man-hours  to transfer this assembly to another location hot.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="laborCategoryID">
		<xs:annotation>
			<xs:documentation>Unique identifier for a laborCategory.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="msp:objectID"/>
	</xs:simpleType>
	<xs:element name="laborComponentList" type="laborComponentList"/>
	<xs:complexType name="laborComponentList">
		<xs:sequence>
			<xs:element name="laborComponent" type="laborComponent" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="materialComponent" type="materialComponent"/>
	<xs:complexType name="materialComponent">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="stockNumber" type="stockNumber" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Stock number for this item of material.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="itemCount" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Count for stock item (ie.  number of part #1234 in an A1 unit)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="poleVar" type="poleVar" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Reference code 1 (pole variant).  used in some systems. Note that only one of the xxxxVar values can be used in any  specific materialComponent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="wireVar" type="wireVar" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Reference code 2 (wire variant).  used in some systems. Note that only one of the xxxxVar values can be used in any  specific materialComponent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="neutVar" type="neutVar" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Reference code 3 (neutral wire variant).  used in some systems. Note that only one of the xxxxVar values can be used in any  specific materialComponent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="miscVar" type="miscVar" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Reference code 4 (misc. variant).  used in some systems. Note that only one of the xxxxVar values can be used in any  specific materialComponent.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="materialComponentList" type="materialComponentList"/>
	<xs:complexType name="materialComponentList">
		<xs:sequence>
			<xs:element name="materialComponent" type="materialComponent" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="materialManagementAssembly" type="materialManagementAssembly"/>
	<xs:complexType name="materialManagementAssembly">
		<xs:annotation>
			<xs:documentation>This is the list of material and labor that is required to construct a physical assembly of plant (that is to say, an assembly that will become a continuing property record (CPR) when put into plant.)</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="unitCode" type="unitCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The code for this materialManagementAssembly.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="unDescr" type="unDescr" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description for this materialmanagementAssembly.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="unMatCost" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Cost for the material in this material management assembly. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="unType" type="unType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Unit type . See enumeration list.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CPRList" type="CPRList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of CPR items for the assembly.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="materialComponentList" type="materialComponentList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of material component items for the assembly.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="laborComponentList" type="laborComponentList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of labore comonents for this assembly.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="unDescr">
		<xs:annotation>
			<xs:documentation>Description of a material mmanagement assembly.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="unType">
		<xs:annotation>
			<xs:documentation>Type of material management assembly.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Anc"/>
			<xs:enumeration value="Cnd"/>
			<xs:enumeration value="Guy"/>
			<xs:enumeration value="OhA"/>
			<xs:enumeration value="OhP"/>
			<xs:enumeration value="OhS"/>
			<xs:enumeration value="OhT"/>
			<xs:enumeration value="OH"/>
			<xs:enumeration value="Pol"/>
			<xs:enumeration value="Sub"/>
			<xs:enumeration value="UgA"/>
			<xs:enumeration value="UgP"/>
			<xs:enumeration value="UgS"/>
			<xs:enumeration value="UgT"/>
			<xs:enumeration value="UG"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="formattedBlock" type="formattedBlock"/>
	<xs:complexType name="formattedBlock">
		<xs:annotation>
			<xs:documentation>This structure is used to send  data in separated values blocks.  This means is more efficient than sending large amounts of data using XML tag sets.  For instance, if the separator chosen is a comma, this would be a CSV data block.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="separator" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The separator chosen.  For instance this would contain  comma for a CSV data block.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="contentModelGroup" minOccurs="0" maxOccurs="1"/>
			<xs:element name="comment" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="valSyntax" type="valSyntax" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This structure describes the format of the data block contained in the valueList.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="valueList" type="valueList" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This structure carries a series of records (values), each matching the syntax described in the vlSyntax structure.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="contentModelGroup">
		<xs:sequence>
			<xs:element name="contentNounType" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the noun type of the associated object (e.g. meter. SCADA analog, etc.).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contentID" type="objectID" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>For formatted blocks that contain data only about one meter, location, customer. SCADA analog, etc., this field will contain the objectID of the associated object.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:element name="syntaxItem" type="syntaxItem"/>
	<xs:complexType name="syntaxItem">
		<xs:annotation>
			<xs:documentation>This describes a single data field in the formatted data block.  For instance, fieldName might be accountNumber, position = 1 would indicate that the accountNumber was carried in the first data field position in each val record that follows, and uom is the units of measure for this item - for accountNumber uom could be omitted since it carries no units.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="fieldName" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="position" type="xs:integer" minOccurs="1" maxOccurs="1"/>
			<xs:element name="uom" type="uom" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="valSyntax" type="valSyntax"/>
	<xs:complexType name="valSyntax">
		<xs:annotation>
			<xs:documentation>This structure describes the format of the data block contained in the valueList.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="syntaxItem" type="syntaxItem" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This describes a single data field in the formatted data block.  For instance, fieldName might be accountNumber, position = 1 would indicate that the accountNumber was carried in the first data field position in each val record that follows, and uom is the units of measure for this item - for accountNumber uom could be omitted since it carries no units.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="valueList" type="valueList"/>
	<xs:complexType name="valueList">
		<xs:annotation>
			<xs:documentation>This structure carries a series of records (values), each matching the syntax described in the vlSyntax structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="val" type="xs:string" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Each individual data instance or record is carried in a single val instance.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="intervalBlock" type="intervalBlock"/>
	<xs:complexType name="intervalBlock">
		<xs:sequence>
			<xs:element name="profileID" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Identifier for the profile that describes this block of data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Identifier for the meter that made this measurement.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="endReadingList" type="endReadingList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="logTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>When the readings were received at the head end (logged to the database). </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="intervalStart" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The start time for the first interval.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="dB" type="dB" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This structure carries a series of records (values), each matching the syntax described.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="profiles" type="profiles"/>
	<xs:complexType name="profiles">
		<xs:sequence>
			<xs:element name="profile" type="intervalProfile" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="intervalProfile" type="intervalProfile"/>
	<xs:complexType name="intervalProfile">
		<xs:sequence>
			<xs:element name="name" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="intervalLength" type="duration" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Interval length, typically measured in minutes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="channels" type="channels" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
		<xs:attribute name="profileID" use="optional" type="xs:string"/>
	</xs:complexType>
	<xs:element name="intervalChannel" type="intervalChannel"/>
	<xs:complexType name="intervalChannel">
		<xs:annotation>
			<xs:documentation>There is one channel for each value being measured (e.g., kWh in, kWh out, kWh net would be three channels).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="index" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Relative position of the data item in a list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="fieldName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Unique identifier for the value type carried in this channel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="fieldDescription" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Description of the value being measured (e.g., kWh delivered).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="units" type="uom" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="channels" type="channels"/>
	<xs:complexType name="channels">
		<xs:annotation>
			<xs:documentation>There is one channel for each value being measured (e.g., kWh in, kWh out, kWh net would be three channels).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="channel" type="intervalChannel" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="endReading" type="endReading"/>
	<xs:complexType name="endReading">
		<xs:annotation>
			<xs:documentation>The register reading for a channel at the end of an interval. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="channelIndex" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The index for the channel for this reading.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="reading" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The end reading for this channel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="readingDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The date and time of the interval end.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="endReadingList" type="endReadingList"/>
	<xs:complexType name="endReadingList">
		<xs:sequence>
			<xs:element name="endReading" type="endReading" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The register reading for this channel at the end of the interval. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="intervalData" type="intervalData"/>
	<xs:complexType name="intervalData">
		<xs:sequence>
			<xs:element name="statusDelimiter" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the delimiter chosen to separate status information from data in this intervalData block.  The statusDelimiter and the intervalDelimiter MUST be different.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="intervalDelimiter" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The delimiter chose to separate data intervals.  The intervalDelimiter and the statusDelimiter MUST be different.  For instance this would contain  "," for a CSV data block.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="comment" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="profiles" type="profiles" minOccurs="0" maxOccurs="1"/>
			<xs:element name="blocks" type="blocks" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="blocks" type="blocks"/>
	<xs:complexType name="blocks">
		<xs:sequence>
			<xs:element name="block" type="intervalBlock" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="materialEntries" type="materialEntries"/>
	<xs:complexType name="materialEntries">
		<xs:sequence>
			<xs:element name="material" type="material" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="switchingOrder" type="switchingOrder"/>
	<xs:complexType name="switchingOrder">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="title" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Title for this switching order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="purpose" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="revision" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="requestedBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Person or organization that requested this switching order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requestedDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date the switching order was requested.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="createdBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Person or organization that created the switching order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="createdDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time that the switching order was created.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="checkedBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Person or organization that checked this switvhing order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="checkedDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time that the switching orderwas checked.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="releasedBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Person or organization that released the switching order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="releasedDateTime" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The date and time that the switching order was released for work.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lastModifiedDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time that the switching order was last modified.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="documentStatus" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Status of this order.  For instance, possible enumerations might include draft, proposed, reviewed, accepted, released, in progress, completed, abandoned.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="switchingSchedule" type="switchingSchedule" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="blinkAlarm" type="blinkAlarm"/>
	<xs:complexType name="blinkAlarm">
		<xs:complexContent>
			<xs:extension base="mspAlarm">
				<xs:sequence>
					<xs:element name="countedValue" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Accumulated value being reported.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ceilingValue" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the value beyond which the accumulator will roll over or latch at maximum.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="latchesAtMaximum" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is true for an accumulator that does not rollover upon reaching ceiling value.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="voltageAlarm" type="voltageAlarm"/>
	<xs:complexType name="voltageAlarm">
		<xs:complexContent>
			<xs:extension base="mspAlarm">
				<xs:sequence>
					<xs:element name="voltageAlarmList" type="voltageAlarmList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="switchingSchedule" type="switchingSchedule"/>
	<xs:complexType name="switchingSchedule">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="workID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to the work object that is to be associated with this switching schedule.  The schedule might be all one work item or each switching step could be a work item.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="resourceID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is apointer to the resource to which this switching schedule has been assigned.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="startDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="endDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="switchingSteps" type="switchingStepList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>A list of steps in a switching order.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="switchingScheduleList" type="switchingScheduleList"/>
	<xs:complexType name="switchingScheduleList">
		<xs:sequence>
			<xs:element name="switchingSchedule" type="switchingSchedule" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="switchingStepList" type="switchingStepList"/>
	<xs:complexType name="switchingStepList">
		<xs:annotation>
			<xs:documentation>A list of steps in a switching schedule.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="switchingStep" type="switchingStep" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="switchingStep" type="switchingStep"/>
	<xs:complexType name="switchingStep">
		<xs:sequence>
			<xs:element name="stepNumber" type="xs:integer" minOccurs="1" maxOccurs="1"/>
			<xs:element name="operation" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Operation to be taken on this device.  Sample operations are Open, Close, Tag open, Tag close, Set tags, Install ground, Remove ground, Check open, Check closed, etc. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="deviceDescription" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="deviceID" type="objectRef" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Device to be switched.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="workLocation" type="workLocation" minOccurs="0" maxOccurs="1"/>
			<xs:element name="desiredEndState" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The desired end state for this device after this step is completed.  Sample enumerations include Opened, Closed, Tagged open, Tagged closed, Grounded, Ungrounded, In service, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="resourceID" type="objectID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="workID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a pointer to the work object that is to be associated with this switching schedule.  The schedule might be all one work item or each switching stwp could be a work item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="instructedBy" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="instructedDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="completedBy" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="completedDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="stepStatus" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The status of this switching step.  Possible enumerations include: Proposed, Instructed, Confirmed, Aborted, Skipped, Other.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="clearanceList" type="clearanceList" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a set of safety clearances associated with a switching step.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="clearanceList" type="clearanceList"/>
	<xs:complexType name="clearanceList">
		<xs:sequence>
			<xs:element name="clearance" type="clearance" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="clearance" type="clearance"/>
	<xs:complexType name="clearance">
		<xs:annotation>
			<xs:documentation>This is a safety clearance issued to a worker or crew as part of a swtching order.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="purpose" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The reason the clearance has been issued.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="clearanceGivenTo" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If a clearance is issued as part of this step, then the name or identifier of the worker who is holding the clearance will be added here.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="issuedDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time that the clearance was issued.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="releasedDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The date and time that the clearance was released.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="convenienceFeeItem" type="convenienceFeeItem"/>
	<xs:complexType name="convenienceFeeItem">
		<xs:sequence>
			<xs:element name="transactionID" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="convenienceFee" type="money" minOccurs="0" maxOccurs="1"/>
			<xs:element name="utilityFee" type="money" minOccurs="0" maxOccurs="1"/>
			<xs:element name="responseCode" type="responseCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enumeration includes, "Success". "Failure" and "Error".</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="convenienceFeeList" type="convenienceFeeList"/>
	<xs:complexType name="convenienceFeeList">
		<xs:sequence>
			<xs:element name="convenienceFeeItem" type="convenienceFeeItem" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="circuitElementAndDistance" type="circuitElementAndDistance"/>
	<xs:complexType name="circuitElementAndDistance">
		<xs:sequence>
			<xs:element name="circuitElement" type="circuitElement" minOccurs="0" maxOccurs="1"/>
			<xs:element name="distance" type="lengthUnitValue" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="controlItem" type="controlItem"/>
	<xs:complexType name="controlItem">
		<xs:sequence>
			<xs:element name="numberOfItems" type="xs:integer" minOccurs="0" maxOccurs="1"/>
			<xs:element name="numberOfControlledItems" type="xs:integer" minOccurs="0" maxOccurs="1"/>
			<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="controlledItems" type="controlledItems"/>
	<xs:complexType name="controlledItems">
		<xs:sequence>
			<xs:element name="controlItem" type="controlItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="customerCall" type="customerCall"/>
	<xs:complexType name="customerCall">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Customer's identification number (Customer ID).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time call received.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="description" type="description" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time call received.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="problemCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Problem Code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="callType" type="callType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type of call.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="takenBy" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Agent taking call.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="callPriority" type="priorityType" minOccurs="0" maxOccurs="1"/>
					<xs:element name="location" type="outageLocation" minOccurs="0" maxOccurs="1"/>
					<xs:element name="messageList" type="messageList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="resolvedLevel" type="resolvedLevel" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Indicates if this call was resolved to a specific meter</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="crewActionEvent" type="crewActionEvent"/>
	<xs:complexType name="crewActionEvent">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="outageEventID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Index Number for outage incident.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="requestedCrewID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier for the crew requested by the ouatge analysis system.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="assignedCrewID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifier for crew assigned by work management system.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crewAction" type="crewAction" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Action taken with this message (See enumerations).</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="crewActionEvents" type="crewActionEvents"/>
	<xs:complexType name="crewActionEvents">
		<xs:sequence>
			<xs:element name="crewActionEvent" type="crewActionEvent" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="crewAction">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Request"/>
			<xs:enumeration value="Accepted"/>
			<xs:enumeration value="Declined"/>
			<xs:enumeration value="Released"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="commodityUsage" type="commodityUsage"/>
	<xs:complexType name="commodityUsage">
		<xs:simpleContent>
			<xs:extension base="floatType"/>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="crewMemberList" type="crewMemberList"/>
	<xs:complexType name="crewMemberList">
		<xs:sequence>
			<xs:element name="workerID" type="objectID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="domainMember" type="domainMember"/>
	<xs:complexType name="domainMember">
		<xs:annotation>
			<xs:documentation>This complex type is included so that the web service method GetDomainMembers can be called for a specific domainName, or list of codes.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the short identifier for an object or class.  For instance, service status code might be 01 for "In Service".  01 would be the code and "In Service" would be the description</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the description of this domainMember.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="action" type="domainMemberAction" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the action that should be taken on this domainMember information.  The enumerations are "Add", "Delete", and "Modify".</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="timesheet" type="timesheet"/>
	<xs:complexType name="timesheet">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="timePeriod" type="timePeriod" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Period of time the time sheet covers .  This is a complex  variable consisting of a  start date and stop date)| .</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="employeeTimeRecordList" type="employeeTimeRecordList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of employee time records in this timesheet.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="jobWorkedList" type="jobWorkedList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>List of ejobs worked in this timesheet.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="employeeTimeRecord" type="employeeTimeRecord"/>
	<xs:complexType name="employeeTimeRecord">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="employeeID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Unique identifier for an employee.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="employeeName" type="employeeName" minOccurs="0" maxOccurs="1"/>
					<xs:element name="hoursWorked" type="xs:float" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Total hours worked by the employee during this time period.(Exactly 1 per employee)|.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="employeeTimeRecordList" type="employeeTimeRecordList"/>
	<xs:complexType name="employeeTimeRecordList">
		<xs:sequence>
			<xs:element name="employeeTimeRecord" type="employeeTimeRecord" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A list of all employee time records.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="jobWorked" type="jobWorked"/>
	<xs:complexType name="jobWorked">
		<xs:sequence>
			<xs:element name="woNumber" type="woNumber" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Work order number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="jobNumber" type="jobNumber" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Job number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="jobDescr" type="jobDescr" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Description of job.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="jobHours" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Hours worked on a specific job.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="jobWorkedList" type="jobWorkedList"/>
	<xs:complexType name="jobWorkedList">
		<xs:sequence>
			<xs:element name="jobWorked" type="jobWorked" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A list of all jobs worked.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="employeeName">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="observationDefinition" type="observationDefinition"/>
	<xs:complexType name="observationDefinition">
		<xs:annotation>
			<xs:documentation>This is the definition of what procedures should be perfomed to accomplish a specific type of observation on an inspection. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="domain" type="xs:QName" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the domain (MultiSpeak object type) to which this condition definition pertains.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="conditionItem" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="itemStatus" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The status of the inspected item.  For instance: Okay, Needs Attention, Needs Immediate Attention, Not Functional, or Okay as Left.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="itemCondition" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Quality factor, expressed in percent.  For instance 100 might been new, 0 might mean no life remaining.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="comment" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="value" type="observedValue" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="meterConnectivity" type="meterConnectivity"/>
	<xs:complexType name="meterConnectivity">
		<xs:annotation>
			<xs:documentation>This class shows changes in the connectivity path for an electric meter that is due to a rephseing or backfeed operation.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="outageRecordID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The objectID of the outage that caused the rephasing or backfeed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date/time at which the switching even occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the objectID of the service location affected by this change.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the company number for the meter affected by this change</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="oldSubstation" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Substation name the meter was on before switching event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="oldFeederName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Feeder name the meter was on before switching event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="oldPhase" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phase the meter was on before switching event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="newSubstation" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Substation name that the meter is fed from after the switching event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="newFeederName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Feeder name that the meter is fed from after the switching event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="newPhase" type="phaseCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Phase that the meter is fed from after the switching event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="oldSubstationCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Substation code the meter was on before switching event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="oldFeederCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Feeder number the meter was on before switching event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="newSubstationCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Substation code the meter was on after the switching event.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="newFeederCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Feeder number that the meter is fed from after the switching event.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="inHomeDisplayBillingMessage" type="inHomeDisplayBillingMessage"/>
	<xs:complexType name="inHomeDisplayBillingMessage">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="inHomeDisplayID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to the display on which this message is to become active.THE USE OF THIS ELEMENT IS DEPRECATED BEGINNING WITH V4.1.4 AND WILL BE REMOVED FROM THE DATA MODEL IN 5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="currentBalance" type="money" minOccurs="0" maxOccurs="1"/>
					<xs:element name="currentRate" type="rateCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The string identifier for this rate. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="dateTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="priorityOrder" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Indicates priority individual messages should receive when sending an array. Multiple messages may have the same priority setting. 1 = highest.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="averageDailyUsage" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Average daily usage for last 30 days or current billing cycle, expressed as currency.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="usedYesterday" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Yesterday's usage, expressed as currency.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="usedThisMonth" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Usage thus far this billing cycle or month expressed as currency.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="usedLastMonth" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Usage last billing cycle or month expressed as currency.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="usedFourWeeksAgo" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Usage for one day, measured four weeks ago, expressed as currency.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="usedThisMonthLastYear" type="money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Usage for one month, measured one year ago, expressed as currency.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="usageOtherPeriodList" type="usageOtherPeriodList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="daysRemaining" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Estimated days remaining before zero balance is reached in a prepaid system.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="rateComponent" type="rateComponent"/>
	<xs:complexType name="rateComponent">
		<xs:annotation>
			<xs:documentation>This is the rate for sale of a commodity. For instance, if the current rate for electrical energy is $0.10/kWh, then the float value 0.10 is carried in the rate base element and the optional attributes currency code would carry "USD" for dollars, the commodityUnits would carry "kWh", and the rateDescription would carry "Current".</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="floatType">
				<xs:attribute name="currencyCode" use="optional" type="currencyCode">
					<xs:annotation>
						<xs:documentation>This attribute identifies the currency in which this rate is expressed, as defined in ISO 4217.  For instance, "USD" is United States Dollars.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="commodityUnits" use="optional" type="uom">
					<xs:annotation>
						<xs:documentation>This attribute identifes the units in which the commodity being sold is expressed.  For instance, for electrical energy sold at retail this might be "kWh".</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="rateComponentDescription" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This string attribute describes the type of rate component.  Examples are "Current" for the currently effective rate.                     "Peak" for the critical peak pricing rate. "AverageThisPeriod" for the average rate during the current billing period.       "AverageLastPeriod" for the average during the previous billing period.             "MinimumThisPeriod" "MaximumThisPeriod", etc. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="rateCode" use="optional" type="rateCode">
					<xs:annotation>
						<xs:documentation>The string identifier for this rate. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="usageOtherPeriod" type="usageOtherPeriod"/>
	<xs:complexType name="usageOtherPeriod">
		<xs:sequence>
			<xs:element name="usageThisPeriod" type="money" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Usage for this period, expressed as currency.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="startTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="endTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="periodDescription" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="usageOtherPeriodList" type="usageOtherPeriodList"/>
	<xs:complexType name="usageOtherPeriodList">
		<xs:sequence>
			<xs:element name="usageOtherPeriod" type="usageOtherPeriod" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="inHomeDisplayMessage" type="inHomeDisplayMessage"/>
	<xs:complexType name="inHomeDisplayMessage">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="inHomeDisplayID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a pointer to the display on which this message is to become active. If this message is being transmitted to an IHDGroup, this element shall be omitted. THE USE OF THIS ELEMENT IS DEPRECATED BEGINNING WITH V4.1.4 AND WILL BE REMOVED FROM THE DATA MODEL IN V5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="msgLineList" type="msgLineList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the text to display on this message.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="duration" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Duration for this message to be displayed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priorityOrder" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Indicates priority individual messages should receive when sending an array. Multiple messages may have the same priority setting. 1 = highest. THIS ELEMENT IS DEPRECATED AS OF V4.1.4, ITS USE WILL BE ELIMINATED IN V5.0. IT IS SUGGESTED THAT IMPLEMENTORS USE THE priority ELEMENT FOR THIS PURPOSE.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="isAlert" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Should this message trigger a visual or audible alert?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="alertLevel" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If multiple levels of alerts are supported, which level of alert is this. The definition of constitues and alert is vendor-specific, as are the supported alert levels. The use of GetDomainMembers is suggested to discover the values supported for this element. AlertLevel should be omitted is this is not an alert message.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="reason" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The class or reason for this message issuance, i.e. outage, notification, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priority" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>It is suggested that the SEP1.0 MessageControl values for "importance" be used here. This element will replace the priorityOrder element beginning in V5.0.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transmissionMode" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="confirmationRequired" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Does this message require a confirmation from the resident/customer? If the HAN Communications sever supports this field and has determined that confirmation is being required of a device that cannot support confirmations, then the response should contain an appropriate error. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="startTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the time that display of this message should begin. It should be displayed for the period of time set in the duration element. If the startTime is not included, then the message should be displayed beginning immediately. If the duration element is not included, then the message shall be displayed until it is replaced.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="msgLine" type="msgLine"/>
	<xs:complexType name="msgLine">
		<xs:sequence>
			<xs:element name="sequenceNumber" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This establishes the order of the lines to be displayed.  A sequence number is not necessary of only one line of text is to be displayed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="text" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the test to be displayed in this line.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="msgLineList" type="msgLineList"/>
	<xs:complexType name="msgLineList">
		<xs:sequence>
			<xs:element name="msgLine" type="msgLine" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="inHomeDisplayBillingMessageList" type="inHomeDisplayBillingMessageList"/>
	<xs:complexType name="inHomeDisplayBillingMessageList">
		<xs:sequence>
			<xs:element name="inHomeDisplayBillingMessage" type="inHomeDisplayBillingMessage" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="inHomeDisplayMessageList" type="inHomeDisplayMessageList"/>
	<xs:complexType name="inHomeDisplayMessageList">
		<xs:sequence>
			<xs:element name="inHomeDisplayMessage" type="inHomeDisplayMessage" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="inHomeDisplayGroup" type="inHomeDisplayGroup"/>
	<xs:complexType name="inHomeDisplayGroup">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="groupName" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="inHomeDisplayList" type="inHomeDisplayList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="inHomeDisplays" type="inHomeDisplays" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="maintenanceDataSet" type="maintenanceDataSet"/>
	<xs:complexType name="maintenanceDataSet">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="maintenanceDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="itemsMaintained" type="itemsMaintained" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="itemsMaintained" type="itemsMaintained"/>
	<xs:complexType name="itemsMaintained">
		<xs:sequence>
			<xs:element name="itemMaintained" type="itemMaintained" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="itemMaintained" type="itemMaintained"/>
	<xs:complexType name="itemMaintained">
		<xs:sequence>
			<xs:element name="itemIdentifier" type="objectRef" minOccurs="0" maxOccurs="1"/>
			<xs:element name="maintenanceCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="conditionBefore" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="conditionAfter" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="remarks" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="measurementList" type="measurementList" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="measurementList" type="measurementList"/>
	<xs:complexType name="measurementList">
		<xs:sequence>
			<xs:element name="measurement" type="measurement" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="measurement" type="measurement"/>
	<xs:complexType name="measurement">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="measurementDeviceID" type="objectRef" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Unique identifier for measurement device. (I.e.  meterId for revenue meter reading).|</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="measurementItems" type="measurementItems" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="measurementItems" type="measurementItems"/>
	<xs:complexType name="measurementItems">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="analog" type="scadaAnalog" minOccurs="0" maxOccurs="1"/>
			<xs:element name="accumulator" type="accumulatedValue" minOccurs="0" maxOccurs="1"/>
			<xs:element name="discrete" type="cpsm:Discrete" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="endDeviceShipment" type="endDeviceShipment"/>
	<xs:complexType name="endDeviceShipment">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="utility" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="manufacturer" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="poReferenceNumber" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Purchase order number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shippingTicketNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="recipient" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Party to whom the shipment is sent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shippedDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date this shipment was sent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="shippedToAddress" type="address" minOccurs="0" maxOccurs="1"/>
					<xs:element name="receivedDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date this shipment was received.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transponderIDRange" type="transponderIDRange" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Range of idnetifiers for communications modules (transponders).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="receivedElectricMeters" type="receivedElectricMeters" minOccurs="0" maxOccurs="1"/>
					<xs:element name="receivedModules" type="receivedModules" minOccurs="0" maxOccurs="1"/>
					<xs:element name="receivedLoadManagementDevices" type="receivedLoadManagementDevices" minOccurs="0" maxOccurs="1"/>
					<xs:element name="receivedCDDevices" type="receivedCDDevices" minOccurs="0" maxOccurs="1"/>
					<xs:element name="receivedGasMeters" type="receivedGasMeters" minOccurs="0" maxOccurs="1"/>
					<xs:element name="receivedWaterMeters" type="receivedWaterMeters" minOccurs="0" maxOccurs="1"/>
					<xs:element name="receivedPropaneMeters" type="receivedPropaneMeters" minOccurs="0" maxOccurs="1"/>
					<xs:element name="receivedIHDs" type="receivedIHDs" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="transponderIDRange" type="transponderIDRange"/>
	<xs:complexType name="transponderIDRange">
		<xs:sequence>
			<xs:element name="start" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="end" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="receivedElectricMeters" type="receivedElectricMeters"/>
	<xs:complexType name="receivedElectricMeters">
		<xs:sequence>
			<xs:element name="receivedElectricMeter" type="receivedElectricMeter" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="receivedModules" type="receivedModules"/>
	<xs:complexType name="receivedModules">
		<xs:sequence>
			<xs:element name="module" type="module" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="receivedLoadManagementDevices" type="receivedLoadManagementDevices"/>
	<xs:complexType name="receivedLoadManagementDevices">
		<xs:sequence>
			<xs:element name="loadManagementDevice" type="loadManagementDevice" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="receivedCDDevices" type="receivedCDDevices"/>
	<xs:complexType name="receivedCDDevices">
		<xs:sequence>
			<xs:element name="CDDevice" type="CDDevice" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="receivedGasMeters" type="receivedGasMeters"/>
	<xs:complexType name="receivedGasMeters">
		<xs:sequence>
			<xs:element name="receivedGasMeter" type="receivedGasMeter" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="receivedWaterMeters" type="receivedWaterMeters"/>
	<xs:complexType name="receivedWaterMeters">
		<xs:sequence>
			<xs:element name="receivedWaterMeter" type="receivedWaterMeter" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="receivedPropaneMeters" type="receivedPropaneMeters"/>
	<xs:complexType name="receivedPropaneMeters">
		<xs:sequence>
			<xs:element name="receivedPropaneMeter" type="receivedPropaneMeter" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="meterEventList" type="meterEventList"/>
	<xs:complexType name="meterEventList">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="eventInstances" type="eventInstances" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="eventInstance" type="eventInstance"/>
	<xs:complexType name="eventInstance">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="meterEvent" type="meterEvent" minOccurs="0" maxOccurs="1"/>
			<xs:element name="timeStamp" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eventInstances" type="eventInstances"/>
	<xs:complexType name="eventInstances">
		<xs:sequence>
			<xs:element name="eventInstance" type="eventInstance" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="fixedCharge" type="fixedCharge"/>
	<xs:complexType name="fixedCharge">
		<xs:sequence>
			<xs:element name="fixedChargeCode" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="historyComment" type="historyComment"/>
	<xs:complexType name="historyComment">
		<xs:sequence>
			<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1"/>
			<xs:element name="logTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
			<xs:element name="comment" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="overcurrentDeviceList" type="overcurrentDeviceList"/>
	<xs:complexType name="overcurrentDeviceList">
		<xs:sequence>
			<xs:element name="overcurrentDevice" type="overcurrentDevice" minOccurs="0" maxOccurs="3"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="switchingDeviceList" type="switchingDeviceList"/>
	<xs:complexType name="switchingDeviceList">
		<xs:sequence>
			<xs:element name="switchingDevice" type="switchingDevice" minOccurs="0" maxOccurs="3"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="meterTypeGroup" type="meterTypeGroup"/>
	<xs:complexType name="meterTypeGroup">
		<xs:sequence>
			<xs:element name="serviceType" type="serviceType" minOccurs="0" maxOccurs="1"/>
			<xs:element name="meterList" type="meterList" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="meterTypeList" type="meterTypeList"/>
	<xs:complexType name="meterTypeList">
		<xs:sequence>
			<xs:element name="meterTypeGroup" type="meterTypeGroup" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="linkedTransformer" type="linkedTransformer"/>
	<xs:complexType name="linkedTransformer">
		<xs:sequence>
			<xs:element name="bankID" type="objectID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the objectID of the transformer bank from which this serivce location receives service.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unitList" type="unitList" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the list of objectIDs for the transformer units in this trasformerBank.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="unitList" type="unitList"/>
	<xs:complexType name="unitList">
		<xs:annotation>
			<xs:documentation>These are the objectIDs of the transformer unit(s) from which this serivce location receives service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="unitID" type="objectID" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>These are the objectIDs of the transformer unit(s) from which this serivce location receives service.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="pointSubscriptionList" type="pointSubscriptionList"/>
	<xs:complexType name="pointSubscriptionList">
		<xs:annotation>
			<xs:documentation>This object is used to subscribe to changes in points in a SCADA or distribution automation system.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="listItem" type="listItem" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is the list of items to which this point subscription pertains.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="listItem" type="listItem"/>
	<xs:complexType name="listItem">
		<xs:sequence>
			<xs:element name="pointID" type="objectID" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the SCADA point ID.  This value is required for both status and analog points.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="deadband" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The client identifies the deadband within which he does not want to receive changes in analog values.  The deadband is expressed in percentage.  This element does not apply for status points.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="debounceTime" type="seconds" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>If a status point changes back to its original state within this time period, do not transmit the value.  Expressed in seconds.  This only applies to status points.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="load" type="load"/>
	<xs:complexType name="load">
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="locationOutageStatus">
		<xs:annotation>
			<xs:documentation>Outage status of this location.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Assumed"/>
			<xs:enumeration value="Confirmed"/>
			<xs:enumeration value="Restored"/>
			<xs:enumeration value="Scheduled"/>
			<xs:enumeration value="StillOut"/>
			<xs:enumeration value="NonPay"/>
			<xs:enumeration value="NoOutage"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="locationStatus" type="locationStatus"/>
	<xs:complexType name="locationStatus">
		<xs:annotation>
			<xs:documentation>The outage status of this service location.</xs:documentation>
		</xs:annotation>
		
		<xs:attribute name="status" use="optional" type="locationOutageStatus"/>
	</xs:complexType>
	<xs:element name="measurementTypeDeprecated" type="measurementTypeDeprecated"/>
	<xs:complexType name="measurementTypeDeprecated">
		<xs:annotation>
			<xs:documentation>This is the Version 3.0 measurementType object.  It has been deprecated in Version 4.0.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="dateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Date and time that the measurement was taken.  If a time duration is implied, this is the start time of the duration.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="value" type="valueFloat" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Value of the measurement. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="uom" type="uom" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Unit of measure.  See enumeration list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="quality" type="qualityDescription" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The context for the measurement.  See enumeration list. If quality is missing, the value is assumed to be measured. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="timeSpan" type="timeSpan" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The time over which the measurement was taken.  See enumeration list.  The default time span is instantaneous. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="stopTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>If the measurtement was taken over a time span, then this is the ending date and time of the measurement period.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="durationDescription" type="durationDescription" minOccurs="0" maxOccurs="1"/>
			<xs:element name="unitPrefix" type="unitPrefix" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The tyoe of reading taken.  See enumeration list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="quadrant" type="accountability" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Defines in which quadrant(s)  of the two-dimensional cartesian co-ordinate system the tagged quantity lies. This element is not present if not provided or does not apply.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="phase" type="phaseCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element defines the phase measurement associations. This element is not present if not provided or if this element doesn't apply.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="harmonic" type="xs:long" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element defines if the quantity represents the entire signal un-filtered or is a harmonic component. This element is not present if the quantity represent the entire signal or if this element doesn't apply. Value 0 represent unspecified harmonic components, value 1 represent the first harmonic (fundamental), value 2 represent the second harmonic, ...</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="timeSpan">
		<xs:restriction base="xs:string">
			<xs:enumeration value="specifiedStartStop"/>
			<xs:enumeration value="instantaneous"/>
			<xs:enumeration value="perCycle"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="durationDescription">
		<xs:restriction base="xs:string">
			<xs:enumeration value="cycle"/>
			<xs:enumeration value="second"/>
			<xs:enumeration value="minute"/>
			<xs:enumeration value="hour"/>
			<xs:enumeration value="day"/>
			<xs:enumeration value="week"/>
			<xs:enumeration value="month"/>
			<xs:enumeration value="year"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="valueFloat">
		<xs:restriction base="xs:float"/>
	</xs:simpleType>
	<xs:element name="meters" type="meters"/>
	<xs:complexType name="meters">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="electricMeters" type="electricMeters" minOccurs="0" maxOccurs="1"/>
					<xs:element name="waterMeters" type="waterMeters" minOccurs="0" maxOccurs="1"/>
					<xs:element name="gasMeters" type="gasMeters" minOccurs="0" maxOccurs="1"/>
					<xs:element name="propaneMeters" type="propaneMeters" minOccurs="0" maxOccurs="1"/>
					<xs:element name="otherMeters" type="otherMeters" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="methodsList" type="methodsList"/>
	<xs:complexType name="methodsList">
		<xs:annotation>
			<xs:documentation>This is the list of methods that this function will publish to, for all unsolicited  xNotification type methods.  It does not include Initiate type methods for which no unsolicited notification occurs).  </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="methodName" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is the string name of the MultiSpeak web service method supported.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="powerFactorManagementEvent" type="powerFactorManagementEvent"/>
	<xs:complexType name="powerFactorManagementEvent">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="switchID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Object ID for this switch.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="controlEventType" type="controlEventType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Event Type (see enumerations list).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="affectedRelay" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Suggested annotation is 1=relay1, 2=relay2, etc; 1and2 = relays 1 and 2, etc. </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="rate" type="rate"/>
	<xs:complexType name="rate">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="rateCode" type="rateCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the string identifier for this rate.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rateCodeDescription" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This string attribute descriibes the typ of rate.  Examples are "Current" for the currently effective rate.                     "Peak" for the critical peak pricing rate.                         "AverageThisPeriod" for the average rate during the current billing period. "AverageLastPeriod" for the average during the previous billing period.                       "MinimumThisPeriod" "MaximumThisPeriod", etc. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="startTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date and time that this rate goes into effect.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rateComponents" type="rateComponents" minOccurs="0" maxOccurs="1"/>
					<xs:element name="TOUSchedules" type="TOUSchedules" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="rateComponents" type="rateComponents"/>
	<xs:complexType name="rateComponents">
		<xs:sequence>
			<xs:element name="rateComponent" type="rateComponent" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is the rate for sale of a commodity.  For instance, if the current rate for electrical enrgy is $0.10/kWh, then the float value 0.10 is carried in the rate base element and the optional attributes currency code would carry "USD" for dollars, the commodityUnits would carry "kWh", and the rateDescription would carry "Current".</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="readingScheduleResult" type="readingScheduleResult"/>
	<xs:complexType name="readingScheduleResult">
		<xs:annotation>
			<xs:documentation>This object reports back to the requester on the success of or failure to establish a new meter readingSchedule as requested. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="readingScheduleID" type="objectID" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a pointer to the readingSchedule which has been requested.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="result" type="readingSchedulingResult" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element indicates whether the schedule request was accepted completely (Accepted), rejected completely (Rejected), or was partially accepted and partially rejected (RejectedInPart).  A schedule that was Rejected or RejectedInPart may also carry a "reason" element to give additional information on the reason that readingSchedule was unacceptable.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="reason" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Additional human-readable information as to why the schedule request was rejected.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="readingSchedulingResult">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Accepted"/>
			<xs:enumeration value="Rejected"/>
			<xs:enumeration value="RejectedInPart"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="readingTypeList" type="readingTypeList"/>
	<xs:complexType name="readingTypeList">
		<xs:annotation>
			<xs:documentation>The definition of readingType comes from Annex C of IEC 61968-9.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="readingType" type="readingType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="recloserImpedances" type="recloserImpedances"/>
	<xs:complexType name="recloserImpedances">
		<xs:sequence>
			<xs:element name="r" type="resistance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="x" type="reactance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="r0" type="resistance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="x0" type="reactance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="b" type="susceptance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="b0" type="susceptance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="g" type="conductance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="g0" type="conductance" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="sectionalizerImpedances" type="sectionalizerImpedances"/>
	<xs:complexType name="sectionalizerImpedances">
		<xs:sequence>
			<xs:element name="r" type="resistance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="x" type="reactance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="r0" type="resistance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="x0" type="reactance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="b" type="susceptance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="b0" type="susceptance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="g" type="conductance" minOccurs="0" maxOccurs="1"/>
			<xs:element name="g0" type="conductance" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="registrationInfo" type="registrationInfo"/>
	<xs:complexType name="registrationInfo">
		<xs:annotation>
			<xs:documentation>This object is exchanged between subscriber and publisher to establish a subscription.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="registrationID" type="registrationID" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a unique identifier for this specific subscription.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="responseURL" type="xs:anyURI" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the URL to which the publisher should publish data for this subscription.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="responseUserID" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This object is used for both the GetRegistrationInfoByID and RegisterForService methods.  For security purposes, the implementor should not return the security credentials in response to a GetRegistrationInfoByID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="responsePwd" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This object is used for both a GetRegistrationInfoByID and aRegisterForService method.  For security purposes, the implementor should not return the security credentials in response to a GetRegistrationInfoByID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MSFunction" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the MultiSpeak function name for the registrant.  For instance, CB, OA, GIS, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="methodsList" type="methodsList" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the list of methods that this function will publish to, for all unsolicited  xNotification type methods.  It does not include Initiate type methods for which no unsolicited notification occurs).  </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="registrationID">
		<xs:annotation>
			<xs:documentation>This is the identifier for a specific data subscription between a subscriber and a publisher.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="msp:objectID"/>
	</xs:simpleType>
	<xs:element name="requestedNumber" type="requestedNumber"/>
	<xs:complexType name="requestedNumber">
		<xs:annotation>
			<xs:documentation>This object enables the exchange of a multipart number like a work order number that might consist of a work order and job number. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="primaryNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="secondaryNumber" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="numberType" type="numberType" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="numberType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="returnedCatalogEntries" type="returnedCatalogEntries"/>
	<xs:complexType name="returnedCatalogEntries">
		<xs:annotation>
			<xs:documentation>This container is used to return engineering catalog entries using the GetCatalogEntries web service method.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="conductorEntries" type="conductorEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="concentricNeutralCableEntries" type="concentricNeutralCableEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="tapeShieldCableEntries" type="tapeShieldCableEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="lineConstructionEntries" type="lineConstructionEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="secondaryConductorEntries" type="secondaryConductorEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="materialAttributesEntries" type="materialAttributesEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="lineEnvironmentalAttributesEntries" type="lineEnvironmentalAttributesEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="ROWAttributesEntries" type="ROWAttributesEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="materialEntries" type="materialEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="transformerEntries" type="transformerEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="regulatorEntries" type="regulatorEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="breakerEntries" type="breakerEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="fuseEntries" type="fuseEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="recloserEntries" type="recloserEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="sectionalizerEntries" type="sectionalizerEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="switchEntries" type="switchEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="loadMixEntries" type="loadMixEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="ZsmImpedanceEntries" type="ZsmImpedanceEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="inductionMachineEntries" type="inductionMachineEntries" minOccurs="0" maxOccurs="1"/>
			<xs:element name="synchronousMachineEntries" type="synchronousMachineEntries" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="sealNumberList" type="sealNumberList"/>
	<xs:complexType name="sealNumberList">
		<xs:sequence>
			<xs:element name="sealNumber" type="sealNumber" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="sealNumber">
		<xs:annotation>
			<xs:documentation>Identifier for a seal applied to a revenue meter.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="substationLoadControlStatus" type="substationLoadControlStatus"/>
	<xs:complexType name="substationLoadControlStatus">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="substationName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the name of the substation for whish the status is being requested.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="status" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the load management status at the substation.  It is recommended that the status be either"Online" or "Offline".</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="mode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the load management mode being employed at theis substation.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="scadaAnalog" type="scadaAnalog" minOccurs="0" maxOccurs="1"/>
					<xs:element name="controlledItems" type="controlledItems" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This structure enables SCADA and load management systems to exchange information about load under control.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="usage" type="usage"/>
	<xs:complexType name="usage">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Customer's identitication number (Customer ID).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="gridLocation" type="gridLocation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Map location (grid number).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Account number for this service location. Depending on the system of record, this may be either the account.objectID or the account.objectName, but in any case, must be unique.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Meter Id (unique index number for each meter).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="usageList" type="usageList" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="usageList" type="usageList"/>
	<xs:complexType name="usageList">
		<xs:sequence>
			<xs:element name="usageInstance" type="usageInstance" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="usageInstance" type="usageInstance"/>
	<xs:complexType name="usageInstance">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="dateTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Date and time that this meter reading was taken.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="monthNumber" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of months prior to the current month that this reading was taken</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="value" type="valueFloat" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Value of this reading.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="uom" type="uom" minOccurs="0" maxOccurs="1"/>
			<xs:element name="useDays" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of days in billing cycle.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="quality" type="qualityDescription" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The context for the reading. See enumeration lsit.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unitPrefix" type="unitPrefix" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The type of reading taken.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="rate" type="rateCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is a string descriptor for the rate class for this usageInstance.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ZigBeeCancelLoadControlEvent" type="ZigBeeCancelLoadControlEvent"/>
	<xs:complexType name="ZigBeeCancelLoadControlEvent">
		<xs:annotation>
			<xs:documentation>This element has been deprecated as of the V4.1.4 release and will be removed at V5.0. It should not be implemented.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="issuerEventID" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the event identifier that has been passed on from the upstream system.  Alternatively, this field can carry a UTC time stamp.  This field is mandatory according to the ZigBee Smart Energy Profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deviceClass" type="xs:integer" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the device class that is expected to participate in this control event.  According to the ZiBee SE profile, the device class shall be:          0 - HVAC compressor or furnace; 1 - Strip heaters/Baseboard heaters; 2 - Water heater; 3 - pool pump/spa pump; 4- Smart appliances; 5- Irrigation pump; 6- Managed commercial and Industrial loads; 7- Simple miscellaneous (residential on/off) loads; 8- Exterior Lighting; 9 - Interior Lighting; 10 - Electric vehicle; 11 - Generation system; 12-15 Reserved.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="utilityEnrollmentGroup" type="xs:integer" minOccurs="1" maxOccurs="1"/>
					<xs:element name="cancelControl" type="xs:hexBinary" minOccurs="1" maxOccurs="1"/>
					<xs:element name="effectiveTime" type="mspDateTime" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ZigBeeCancelMessage" type="ZigBeeCancelMessage"/>
	<xs:complexType name="ZigBeeCancelMessage">
		<xs:annotation>
			<xs:documentation>This element has been deprecated as of the V4.1.4 release and will be removed at V5.0. It should not be implemented.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="messageID" type="xs:unsignedInt" minOccurs="0" maxOccurs="1"/>
					<xs:element name="messageControl" type="xs:hexBinary" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>See Table D.36 for more information on this field.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ZigBeeDisplayMessage" type="ZigBeeDisplayMessage"/>
	<xs:complexType name="ZigBeeDisplayMessage">
		<xs:annotation>
			<xs:documentation>This element has been deprecated as of the V4.1.4 release and will be removed at V5.0. It should not be implemented.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="messageID" type="xs:unsignedInt" minOccurs="0" maxOccurs="1"/>
					<xs:element name="messageControl" type="xs:hexBinary" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>See Table D.36 for more information on this field.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="startTime" type="mspDateTime" minOccurs="1" maxOccurs="1"/>
					<xs:element name="integerDuration" type="integerDuration" minOccurs="0" maxOccurs="1"/>
					<xs:element name="message" type="xs:string" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="integerDuration" type="integerDuration"/>
	<xs:complexType name="integerDuration">
		<xs:simpleContent>
			<xs:extension base="integerType">
				<xs:attribute name="timeUnits" use="optional" type="timeUnits"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="ZigBeeLoadControlEvent" type="ZigBeeLoadControlEvent"/>
	<xs:complexType name="ZigBeeLoadControlEvent">
		<xs:annotation>
			<xs:documentation>This element has been deprecated as of the V4.1.4 release and will be removed at V5.0. It should not be implemented.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="issuerEventID" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the event identifier that has been passed on from the upstream system.  Alternatively, this field can carry a UTC time stamp.  This field is mandatory according to the ZigBee Smart Energy Profile.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deviceClass" type="xs:integer" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the device class that is expected to participate in this control event.  According to the ZiBee SE profile, the device class shall be:          0 - HVAC compressor or furnace; 1 - Strip heaters/Baseboard heaters; 2 - Water heater; 3 - pool pump/spa pump; 4- Smart appliances; 5- Irrigation pump; 6- Managed commercial and Industrial loads; 7- Simple miscellaneous (residential on/off) loads; 8- Exterior Lighting; 9 - Interior Lighting; 10 - Electric vehicle; 11 - Generation system; 12-15 Reserved.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="utilityEnrollmentGroup" type="xs:integer" minOccurs="1" maxOccurs="1"/>
					<xs:element name="startTime" type="mspDateTime" minOccurs="1" maxOccurs="1"/>
					<xs:element name="integerDuration" type="integerDuration" minOccurs="0" maxOccurs="1"/>
					<xs:element name="criticalityLevel" type="xs:unsignedInt" minOccurs="1" maxOccurs="1"/>
					<xs:element name="coolingTemperatureOffset" type="xs:unsignedInt" minOccurs="0" maxOccurs="1"/>
					<xs:element name="heatingTemperatureOffset" type="xs:unsignedInt" minOccurs="0" maxOccurs="1"/>
					<xs:element name="coolingTemperatureSetPoint" type="xs:unsignedInt" minOccurs="0" maxOccurs="1"/>
					<xs:element name="heatingTemperatureSetPoint" type="xs:unsignedInt" minOccurs="0" maxOccurs="1"/>
					<xs:element name="avgLoadAdjustment" type="xs:unsignedInt" minOccurs="0" maxOccurs="1"/>
					<xs:element name="dutyCycle" type="xs:unsignedInt" minOccurs="0" maxOccurs="1"/>
					<xs:element name="eventControl" type="xs:hexBinary" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ZigBeePublishPrice" type="ZigBeePublishPrice"/>
	<xs:complexType name="ZigBeePublishPrice">
		<xs:annotation>
			<xs:documentation>This element has been deprecated as of the V4.1.4 release and will be removed at V5.0. It should not be implemented.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="currency" type="xs:integer" minOccurs="1" maxOccurs="1"/>
					<xs:element name="currentTime" type="mspDateTime" minOccurs="1" maxOccurs="1"/>
					<xs:element name="issuerEventID" type="xs:integer" minOccurs="1" maxOccurs="1"/>
					<xs:element name="providerID" type="xs:integer" minOccurs="1" maxOccurs="1"/>
					<xs:element name="rateLabel" type="xs:string" minOccurs="1" maxOccurs="1"/>
					<xs:element name="unitOfMeasure" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>See Table D.17 for enumeration of this element.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="workOrderSelection" type="workOrderSelection"/>
	<xs:complexType name="workOrderSelection">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="projectID" type="objectID" minOccurs="0" maxOccurs="1"/>
					<xs:element name="woNumber" type="woNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work order number.  Note that the concatenation of the woNumber and the jobNumber must be unique, but neither the woNumber, nor the jobNumber are ensured to be unique.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="jobNumber" type="jobNumber" minOccurs="0" maxOccurs="1"/>
					<xs:element name="jobDescr" type="jobDescr" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of this work order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="statusCode" type="statusCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Status of this work order.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="workTicket" type="workTicket"/>
	<xs:complexType name="workTicket">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="woNumber" type="woNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Work order number.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="jobNumber" type="jobNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Job number. Along with woNumber, the job number defines a unique identifer for a work order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="description" type="description" minOccurs="0" maxOccurs="1"/>
					<xs:element name="statusCode" type="statusCode" minOccurs="0" maxOccurs="1"/>
					<xs:element name="location" type="gridLocation" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Map location (grid number).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="county" type="county" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Code for county.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="taxDist" type="taxDist" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Taxation district code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="franchiseDist" type="franchiseDist" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Franchise tax district code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="schoolDist" type="schoolDist" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>School district code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="district" type="district" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>District office code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="systemVolts" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>System voltage.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="woType" type="woType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Type code for work order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cd740c" type="cd740c" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Form 740C code for type of contstruction (ie.  0101).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ext740c" type="ext740c" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Form 740C code extension (ie.  0101-111)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="loanNo" type="loanNo" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Loan designator.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cwpYr" type="cwpYr" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Construction work plan year.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cwpCd" type="cwpCd" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Construction work plan reference code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="budgetPur" type="budgetPur" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Budget purpose code (1-distribution. 2-transmission).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="acNo" type="acNo" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Accounting code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="budgetCode" type="budgetCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Budget code</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="actCode" type="actCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Activity code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deptCode" type="deptCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Department code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="warehouseID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Warehouse code for this work order.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="grpCode" type="grpCode" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Code for combining like work orders. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="crewID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Code for crew to construct job.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="startDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Start date for construction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="clsDate" type="xs:date" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Closing date for construction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="estDate" type="xs:date" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date staked.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="contCode" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Contract code (Y-contracted construction N-force construction).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="priority" type="priority" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Priority(1-10 1=emergency| 10=lowest priority).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="duration" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Anticipated duration of job in hours.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="voltageAlarmList" type="voltageAlarmList"/>
	<xs:complexType name="voltageAlarmList">
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="voltageAlarmItem" type="voltageAlarmItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="voltageAlarmItem" type="voltageAlarmItem"/>
	<xs:complexType name="voltageAlarmItem">
		<xs:sequence>
			<xs:element name="voltageValue" type="voltage" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the value of the voltage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unitPrefix" type="unitPrefix" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The type of reading taken (Maximum, Mimimum..).  See enumeration list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="quality" type="qualityDescription" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Quality qualifiers.  (See enumeration list for Measurement for values).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="analogCondition" type="analogCondition" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Range of analog value (Normal, L1, H1... See enumeration list).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="phaseCode" type="phaseCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This element defines the phase measurement associations. This element is not present if not provided or if this element doesn't apply.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eventTypes" type="eventTypes"/>
	<xs:complexType name="eventTypes">
		<xs:annotation>
			<xs:documentation>This is a list of types of meter events.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="meterEvent" type="meterEvent" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eventMonitoringItem" type="eventMonitoringItem"/>
	<xs:complexType name="eventMonitoringItem">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="eventTypes" type="eventTypes" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If the EventTypes is not provided then the AMI should monitor for all possible events on the provided list of meters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterGroupList" type="meterGroupList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If neither the meterGroupList nor the meterList is provided then the AMI should monitor the provided list of events on ALL meters.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meterList" type="meterList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>If neither the meterGroupList nor the meterList is provided then the AMI should monitor the provided list of events on ALL meters.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="IHDMessageStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="Accepted">
				<xs:annotation>
					<xs:documentation>Message has been accepted for display</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Cancelled">
				<xs:annotation>
					<xs:documentation>Message has been cancelled</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Displayed">
				<xs:annotation>
					<xs:documentation>Message has been displayed</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Off">
				<xs:annotation>
					<xs:documentation>Message has been removed from the display screen. This will usually indicate that some other message has been displayed.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Expired">
				<xs:annotation>
					<xs:documentation>Message duration has expired. The message (if displayed) is removed from the display screen. </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="GPSMetadata" type="GPSMetadata"/>
	<xs:complexType name="GPSMetadata">
		<xs:annotation>
			<xs:documentation>If it is desirable to send metadata about how this GPSLocation was collected, that data is documented in this element.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="easting" type="xs:double" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Easting for coordinate zone.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="northing" type="xs:double" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Northing for coordinate zone.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="source" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Source of data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="number" type="xs:long" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of readings that were averaged during the collection of this location.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="isRealTimeDiffCorrection" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Has this point been differentially corrected in real time?</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hdop" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Horizontal dilution of precision.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="vdop" type="xs:float" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Vertical dilution of precision.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="diffID" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The identifier for the source of differential correction signal.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="collected" type="xs:dateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The date and time that this location was taken.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="numSat" type="xs:long" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Number of satellites visible when this location was taken.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="subMeterList" type="subMeterList"/>
	<xs:complexType name="subMeterList">
		<xs:sequence>
			<xs:element name="meterID" type="meterID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="bufferedObjectRef" type="bufferedObjectRef"/>
	<xs:complexType name="bufferedObjectRef">
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="objectRef" type="objectRef" minOccurs="1" maxOccurs="1"/>
			<xs:element name="distance" type="length" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="domainMemberChange" type="domainMemberChange"/>
	<xs:complexType name="domainMemberChange">
		<xs:sequence>
			<xs:element name="domainName" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="code" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the short identifier for an object or class.  For instance, service status code might be 01 for "In Service".  01 would be the code and "In Service" would be the description</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the description of this domainMember.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="action" type="domainMemberAction" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the action that should be taken on this domainMember information.  The enumerations are "Add", "Delete", and "Modify".</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="consumptionItem" type="consumptionItem"/>
	<xs:complexType name="consumptionItem">
		<xs:sequence>
			<xs:element name="readingValue" type="readingValue" minOccurs="1" maxOccurs="1"/>
			<xs:element name="periodOfUse" type="timePeriod" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="averageConsumption" type="averageConsumption"/>
	<xs:complexType name="averageConsumption">
		<xs:sequence>
			<xs:element name="consumptionItem" type="consumptionItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageReportingCode" type="outageReportingCode"/>
	<xs:complexType name="outageReportingCode">
		<xs:annotation>
			<xs:documentation>Reporting code as defined by the reporting body or utility.  This may be extended as defined by the reporting standard or utility.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="reportingBody" use="required" type="xs:string">
					<xs:annotation>
						<xs:documentation>Reporting standard to which this code belongs. Recommended values are RUS 1730A-119, IEEE P1782, or Utility Defined.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="outageReportingCodeList" type="outageReportingCodeList"/>
	<xs:complexType name="outageReportingCodeList">
		<xs:sequence>
			<xs:element name="outageReportingCode" type="outageReportingCode" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Reporting code as defined by the reporting body or utility.  This may be extended as defined by the reporting standard or utility.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageReason" type="outageReason"/>
	<xs:complexType name="outageReason">
		<xs:sequence>
			<xs:element name="description" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Description of this type of outageReason.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="outageReportingCodeList" type="outageReportingCodeList" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageReasonItem" type="outageReasonItem"/>
	<xs:complexType name="outageReasonItem">
		<xs:sequence>
			<xs:element name="category" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Category for the outage reporting information.  Descriptions for the category should be: "Outage Cause - This is the primary cause of the outage ; "Equipment Failure" - This is the material or equipment that failed, producing the outage; "Voltage Level" - this is the phase-to-phase voltage of the system that failed; "Weather Condition" - The weather conditions at the site of the failure at the time the outage occurred (This is not to be used for reporting a weather condition that was the primary cause of the outage - that should be reported using Outage Cause; "System Characterization" The kind of customer density at the location of the outage; "Responsible System" - The portion of the electrical system that was responsible for the outage; "Outage Condition" - The condition that the system was subject to at the time of the fault (For example, was it a Major Event Day as defined by IEEE 1366); "Interrupting Device" - The kind of interrupting device that protected customers in response to the fault; "Interrupting Device Initiation" - The manner in which the interrupting device operated at the time of the fault; "Customer Restoration" - The manner in which the customer's service was restored.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="outageReason" type="outageReason" minOccurs="1" maxOccurs="1"/>
			<xs:element name="categoryGroup" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This optional element may be used to group like outage reason categories together. For instance, this element might be used to indicate that the RUS 1739-119A series 600 codes are "Animal-Related"</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageReasonList" type="outageReasonList"/>
	<xs:complexType name="outageReasonList">
		<xs:sequence>
			<xs:element name="outageReasonItem" type="outageReasonItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="outageReasonContainer" type="outageReasonContainer"/>
	<xs:complexType name="outageReasonContainer">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="outageReasonList" type="outageReasonList" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="circuitElementStatus" type="circuitElementStatus"/>
	<xs:complexType name="circuitElementStatus">
		<xs:annotation>
			<xs:documentation>The outage status for this circuitElement.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="outageEventID" type="objectID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="outagedPhase" type="phaseCode" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The phase(s) that are experiencing outage conditions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="circuitElementState" type="circuitElementState" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="circuitElementState">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="PossibleBreak"/>
			<xs:enumeration value="PossibleClosed"/>
			<xs:enumeration value="PossibleOpen"/>
			<xs:enumeration value="PredictedBreak"/>
			<xs:enumeration value="PredictedClosed"/>
			<xs:enumeration value="PredictedOpen"/>
			<xs:enumeration value="TempBreak"/>
			<xs:enumeration value="TempClosed"/>
			<xs:enumeration value="TempOpen"/>
			<xs:enumeration value="UplineTempBreak"/>
			<xs:enumeration value="UplineTempClosed"/>
			<xs:enumeration value="UplineTempOpen"/>
			<xs:enumeration value="UplineVerifiedClosedNoPower"/>
			<xs:enumeration value="VerifiedBreak"/>
			<xs:enumeration value="VerifiedClosedNoPower"/>
			<xs:enumeration value="VerifiedClosedWithPower"/>
			<xs:enumeration value="VerifiedOpen"/>
			<xs:enumeration value="NormalOrRestored"/>
			<xs:enumeration value="NoChange"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="outageReasonCodeList" type="outageReasonCodeList"/>
	<xs:complexType name="outageReasonCodeList">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="outageCause" type="outageReason" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>What was the primary cause of this outage?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="equipmentFailure" type="outageReason" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>What material or equipment failed, thus producing an outage?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="voltageLevel" type="outageReason" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>What was the phase to phase voltage level for this outage?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="weatherCondition" type="outageReason" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>What was the weather like at the failed device at the time of the outage?  This should not be used to report that the primary cause of the outage was weather-related; that should be done using the outageCause element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="systemCharacterization" type="outageReason" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>What kind of customer density is in the area effected by the outage?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="responsibleSystem" type="outageReason" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>What portion of the electric grid was reponsible the fault?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="outageCondition" type="outageReason" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Under what condition was the electric grid during the time of the outage?  For example, was it a Major Event Day as defined by IEEE 1366?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="interruptingDevice" type="outageReason" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>What kind of device was used to protect the customer as a result of the fault?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="interruptingDeviceInitiation" type="outageReason" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>In what manner was the Interrupting Device operated?</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customerResoration" type="outageReason" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>How was the customer restored after experiencing an interruption to power?</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="bin" type="bin"/>
	<xs:complexType name="bin">
		<xs:sequence>
			<xs:element name="binIndex" type="xs:integer" minOccurs="1" maxOccurs="1"/>
			<xs:element name="binName" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="timePeriods" type="timePeriods" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="TOUSchedules" type="TOUSchedules"/>
	<xs:complexType name="TOUSchedules">
		<xs:sequence>
			<xs:element name="TOUSchedule" type="TOUSchedule" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="bins" type="bins"/>
	<xs:complexType name="bins">
		<xs:sequence>
			<xs:element name="bin" type="bin" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="exceptionDay" type="exceptionDay"/>
	<xs:complexType name="exceptionDay">
		<xs:sequence>
			<xs:element name="date" type="xs:date" minOccurs="1" maxOccurs="1"/>
			<xs:element name="bins" type="bins" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="exceptionDays" type="exceptionDays"/>
	<xs:complexType name="exceptionDays">
		<xs:sequence>
			<xs:element name="exceptionDay" type="exceptionDay" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="daysOfWeek" type="daysOfWeek"/>
	<xs:complexType name="daysOfWeek">
		<xs:sequence>
			<xs:element name="dayOfWeek" type="dayOfWeek" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="dayOfWeek" type="dayOfWeek"/>
	<xs:complexType name="dayOfWeek">
		<xs:sequence>
			<xs:element name="dayLabel" type="dayLabel" minOccurs="1" maxOccurs="1"/>
			<xs:element name="bins" type="bins" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="capabilityActionCode" type="capabilityActionCode"/>
	<xs:complexType name="capabilityActionCode">
		<xs:annotation>
			<xs:documentation>These values are expected to be implementation specific. It is suggested that the values for these fields be discovered using the GetDomainValues method.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="capabilityActionCodeName" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="capabilityActionCodeValue" type="xs:string" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="capabilityAction" type="capabilityAction"/>
	<xs:complexType name="capabilityAction">
		<xs:annotation>
			<xs:documentation>This is a capability that the IHD has to respond to specific conditions. For instance, this can describe behavior like "For a High price tier, set the background color to white, the foreground color to red". It is suggested that the values for these fields be discovered using the GetDomainValues method.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="conditionIdentifier" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is an identifier for the condition for which the display would take on the associated capability actions. This string is interpreted based on the conditionCode. For instance, if the conditionCode is "Pricing", then hte conditionIdentifier corresponds to the rateIdentifier from the pricing tiers. It is suggested that the values for these fields be discovered using the GetDomainValues method.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="capabilityActionCodes" type="capabilityActionCodes" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="temperatureTiers" type="temperatureTiers"/>
	<xs:complexType name="temperatureTiers">
		<xs:sequence>
			<xs:element name="temperatureTier" type="temperatureTier" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="cycleTiers" type="cycleTiers"/>
	<xs:complexType name="cycleTiers">
		<xs:sequence>
			<xs:element name="cycleTier" type="loadCycleTier" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="HANDeviceID" type="HANDeviceID"/>
	<xs:complexType name="HANDeviceID">
		<xs:annotation>
			<xs:documentation>This is the identifier for a device that participates in a home area network. Such devices are usually consumer devices, such as in-home displays, programmable controllling thermostats, etc
However, in this context, the devices might also be utility-owned devices, such as meters, ESI, etc. The format of this identifier is left up to the implementing application, but it is suggested that the identifer should be of the form [utility].[deviceName].</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="deviceName" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the user-friendly name for the HANDevice.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="objectID" use="required" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the unique identifier for this device instance.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="utility" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is an identifier for the utility that owns this device.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="deviceType" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the type of device. It is suggested that the values for deviceType be: ESI, IHD, PCT, Meter, LMDevice, SmartAppliance, RangeExtender, PrepaymentTerminal, Other, Unknown, since these values closely match those identified in Table 5.11 of the SEP1.0 Specification.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="HANInterfaceID" type="HANInterfaceID"/>
	<xs:complexType name="HANInterfaceID">
		<xs:annotation>
			<xs:documentation>The HANInterfaceID is the identifier for the interface to the home area network. This identifier corresponds to the device that is variously called the energy services interface (ESI) or the energy services portal (ESP). If the HAN interface (ESI) is implemented as part of a meter or otherwise coupled with a meter, then the HANInterfaceID should be the same as the content of the meterID.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="deviceName" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the user-friendly name for the ESI. If the HAN interface is a meter then it the deviceName should bethe same as the meterNO.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="objectID" use="required" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the unique identifier for this device instance.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="utility" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is an identifier for the utility that owns this device.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="HANGroupID" type="HANGroupID"/>
	<xs:complexType name="HANGroupID">
		<xs:annotation>
			<xs:documentation>The HANGroupID is the identifier for a group of HANDevices. The group could be uniform (e.g., all IHD) or mixed. The HANGroup will correspond to a group of HANDeviceID and/or HANInterfaceID. The HANGroupID is a string, by extension. The value of the string is left up to the implementing organization, but it is recommended that it be of the form [utility].[groupName].</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="groupName" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the user-friendly name for the HAN device group.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="deviceType" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the type of HAN devices in this group (e.g., IHD, PCT, ESI, LoadControl, Thermostat, or "Mixed"</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="objectID" use="required" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the unique identifier for this device instance.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="utility" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is an identifier for the utility that owns this device.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="HANSecurityToken" type="HANSecurityToken"/>
	<xs:complexType name="HANSecurityToken">
		<xs:annotation>
			<xs:documentation>This is a security token which is a string built by extension with attributes to describe the token.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="stringType">
				<xs:attribute name="encoding" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the type of encoding for this value (e.g., "base64").</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="tokenType" use="optional" type="xs:string">
					<xs:annotation>
						<xs:documentation>This is the type of this security token (e.g., ZigBeeLinkKey, ZigBeeInstallCode, etc.).</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="HANRegistration" type="HANRegistration"/>
	<xs:complexType name="HANRegistration">
		<xs:annotation>
			<xs:documentation>The registration status of the device in the network corresponding with the HANInterfaceID.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="deviceID" type="HANDeviceID" minOccurs="1" maxOccurs="1"/>
			<xs:element name="interfaceID" type="HANInterfaceID" minOccurs="1" maxOccurs="1"/>
			<xs:element name="registrationStatus" type="HANRegistrationStatus" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="HANRegistrationStatus">
		<xs:annotation>
			<xs:documentation>The status of a device's registration in a Home Area Network. The set of states represent the progression of a device's pairing in the HAN. Note that the specific states supported is implementation dependent. For e.g. one implementation may only support "Registered" and "Disconnected" while another may support the full set of states.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="Joining">
				<xs:annotation>
					<xs:documentation>The device is in the process of joining the HAN. 
This usually indicates that the ESI has opened its joining window and is waiting for the device to respond.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Leaving">
				<xs:annotation>
					<xs:documentation>The device is in the process of leaving the HAN.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Connected">
				<xs:annotation>
					<xs:documentation>The communications between the device and ESI have been established. For an implementation that  supports the ?Registered? state, this indicates when the device is being heard by the ESI but has not yet been accepted into the HAN.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Disconnected">
				<xs:annotation>
					<xs:documentation>The communications between the device and HAN are not 
established.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Registered">
				<xs:annotation>
					<xs:documentation>The device has been accepted into the HAN. This usually
indicates that secured communications have been established with the ESI and the HAN device is ready for use.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="InitiateHANRegistrationStatus" type="InitiateHANRegistrationStatus"/>
	<xs:complexType name="InitiateHANRegistrationStatus">
		<xs:annotation>
			<xs:documentation>This object has been deprecated and will be removed as of Version 5.0. Its use in the InitiateHANRegistrationStatusRequest method has been superseded with the registrationStatus object</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="transactionID" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="interfaceID" type="HANInterfaceID" minOccurs="1" maxOccurs="1"/>
			<xs:element name="deviceID" type="HANDeviceID" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="thermostatCurrentConfiguration" type="thermostatCurrentConfiguration"/>
	<xs:complexType name="thermostatCurrentConfiguration">
		<xs:annotation>
			<xs:documentation>The current configuration for a programmable thermostat. This consists of all the configurations that can be set plus the current measurements.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="thermostatConfiguration">
				<xs:sequence minOccurs="1" maxOccurs="1">
					<xs:element name="rateLabel" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is the rate label of the price tier at which the thermostat is currently operating.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="insideTemperature" type="temperature" minOccurs="0" maxOccurs="1"/>
					<xs:element name="outsideTemperature" type="temperature" minOccurs="0" maxOccurs="1"/>
					<xs:element name="humidity" type="percent" minOccurs="0" maxOccurs="1"/>
					<xs:element name="occupancyMode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The occupancy for the facility that the thermostat is monitoing, for instance Home, Away, Night, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="currentTime" type="mspDateTime" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="bufferedCircuitElement" type="bufferedCircuitElement"/>
	<xs:complexType name="bufferedCircuitElement">
		<xs:sequence>
			<xs:element name="circuitElement" type="circuitElement" minOccurs="1" maxOccurs="1"/>
			<xs:element name="distance" type="length" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="bufferedCircuitElementList" type="bufferedCircuitElementList"/>
	<xs:complexType name="bufferedCircuitElementList">
		<xs:annotation>
			<xs:documentation>This optional container shall be used if it is desired to return a collection of circuit elements objects rather than the features to which these circuit elements point.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="bufferedCircuitElement" type="bufferedCircuitElement" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="dayLabel">
		<xs:restriction base="xs:string">
			<xs:enumeration value="M">
				<xs:annotation>
					<xs:documentation>Monday</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="T">
				<xs:annotation>
					<xs:documentation>Tuesday</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="W">
				<xs:annotation>
					<xs:documentation>Wednesday</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Th">
				<xs:annotation>
					<xs:documentation>Thursday</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="F">
				<xs:annotation>
					<xs:documentation>Friday</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Sa">
				<xs:annotation>
					<xs:documentation>Saturday</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Su">
				<xs:annotation>
					<xs:documentation>Sunday</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Weekdays"/>
			<xs:enumeration value="WeekendDays"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="dayNumber">
		<xs:annotation>
			<xs:documentation>Day number within a month.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
			<xs:enumeration value="5"/>
			<xs:enumeration value="6"/>
			<xs:enumeration value="7"/>
			<xs:enumeration value="8"/>
			<xs:enumeration value="9"/>
			<xs:enumeration value="10"/>
			<xs:enumeration value="11"/>
			<xs:enumeration value="12"/>
			<xs:enumeration value="13"/>
			<xs:enumeration value="14"/>
			<xs:enumeration value="15"/>
			<xs:enumeration value="16"/>
			<xs:enumeration value="17"/>
			<xs:enumeration value="18"/>
			<xs:enumeration value="19"/>
			<xs:enumeration value="20"/>
			<xs:enumeration value="21"/>
			<xs:enumeration value="22"/>
			<xs:enumeration value="23"/>
			<xs:enumeration value="24"/>
			<xs:enumeration value="25"/>
			<xs:enumeration value="26"/>
			<xs:enumeration value="27"/>
			<xs:enumeration value="28"/>
			<xs:enumeration value="29"/>
			<xs:enumeration value="30"/>
			<xs:enumeration value="31"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="monthNumber">
		<xs:annotation>
			<xs:documentation>Month number.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
			<xs:enumeration value="5"/>
			<xs:enumeration value="6"/>
			<xs:enumeration value="7"/>
			<xs:enumeration value="8"/>
			<xs:enumeration value="9"/>
			<xs:enumeration value="10"/>
			<xs:enumeration value="11"/>
			<xs:enumeration value="12"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="effectiveDate" type="effectiveDate"/>
	<xs:complexType name="effectiveDate">
		<xs:sequence>
			<xs:element name="effectiveMonth" type="monthNumber" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Month number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="effectiveDay" type="dayNumber" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Day number within a month.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="TOUSchedule" type="TOUSchedule"/>
	<xs:complexType name="TOUSchedule">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="TOUScheduleVersion" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="effectiveDate" type="effectiveDate" minOccurs="1" maxOccurs="1"/>
					<xs:element name="daysOfWeek" type="daysOfWeek" minOccurs="1" maxOccurs="1"/>
					<xs:element name="exceptionDays" type="exceptionDays" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="assetRef" type="assetRef"/>
	<xs:complexType name="assetRef">
		<xs:annotation>
			<xs:documentation>This is a reference to an asset that is tracked in an asset management system.</xs:documentation>
		</xs:annotation>
		
		<xs:attribute name="assetID" use="required" type="objectID">
			<xs:annotation>
				<xs:documentation>This is the identifier for this
instance of an asset as
stored in the asset
management system.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="noun" use="required" type="xs:QName">
			<xs:annotation>
				<xs:documentation>This is the noun type for this asset.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="objectID" use="required" type="objectID">
			<xs:annotation>
				<xs:documentation>This is the objectID for the instance of this object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="utility" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>A string identifier for the utility that owns the item being identified by this assetRef.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:anyAttribute namespace="##any" processContents="lax"/>
	</xs:complexType>
	<xs:element name="inHomeDisplayCapabilitySetting" type="inHomeDisplayCapabilitySetting"/>
	<xs:complexType name="inHomeDisplayCapabilitySetting">
		<xs:sequence>
			<xs:element name="capabilityCode" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is an identifier for the capability that the IHD has to respond to conditions. Capabilities might be color, sounds, messages, etc. It is suggested that the values for these fields be discovered using the GetDomainValues method.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="conditionCode" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is an identifier for the condition for which the capability setting reponds.For instance, Pricing, DemandResponse, Prepay, etc. It is suggested that the values for these fields be discovered using the GetDomainValues method.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="capabilityActions" type="capabilityActions" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="priceBin" type="priceBin"/>
	<xs:complexType name="priceBin">
		<xs:annotation>
			<xs:documentation>A price-bin is an association between a price tier and a TOU bin. This indicates how time consumed in different bins will be charged.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="binIdentifier" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="rateIdentifier" type="xs:string" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="priceTier" type="priceTier"/>
	<xs:complexType name="priceTier">
		<xs:annotation>
			<xs:documentation>A price tier represents the cost of energy consumption.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="rateIdentifier" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>An identifier for this price tier. This value may have significance on the HAN device. For example this may be mapped to the price tier values in table D.31 of SEP 1.0 for Zigbee Publish Price messages</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="rateLabel" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>User friendly descriptor for the rate e.g. Low, Medium, High, On-Peak Off-Shoulder etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="price" type="money" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Cost per unit of consumption recorded in this tier. The money type includes the currency.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="units" type="uom" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Units of energy consumption</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="register" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The physical register. The valid values will depend on the HAN device. For e.g. this may be mapped to the register tier values in table D.32 of SEP 1.0 for Zigbee device.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="priceTierStructure" type="priceTierStructure"/>
	<xs:complexType name="priceTierStructure">
		<xs:sequence>
			<xs:element name="startTime" type="mspDateTime" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Timestamp when this price structure is to be applied. If not specified then apply the price structure now.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="priceTiers" type="priceTiers" minOccurs="1" maxOccurs="1"/>
			<xs:element name="priceBins" type="priceBins" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="temperatureTierStructure" type="temperatureTierStructure"/>
	<xs:complexType name="temperatureTierStructure">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="thermostatID" type="HANDeviceID" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This identifies the thermostat that these temperature settings are for. If not specified then assumed to be all the thermostats on the HAN.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="temperatureTiers" type="temperatureTiers" minOccurs="1" maxOccurs="1"/>
			<xs:element name="fanOn" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Keep/turn the fan on event during off cycles.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="temperatureTier" type="temperatureTier"/>
	<xs:complexType name="temperatureTier">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="rateIdentifier" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="heatingOffset" type="temperature" minOccurs="1" maxOccurs="1"/>
			<xs:element name="coolingOffset" type="temperature" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="loadCycleTierStructure" type="loadCycleTierStructure"/>
	<xs:complexType name="loadCycleTierStructure">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="loadManagementDeviceID" type="HANDeviceID" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This identifies the load control device that these settings are for. If not specified then assumed to be all the LC devices on the HAN.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cycleTiers" type="cycleTiers" minOccurs="1" maxOccurs="1"/>
			<xs:element name="cyclePeriod" type="duration" minOccurs="0" maxOccurs="1"/>
			<xs:element name="randomizeStart" type="xs:boolean" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Randomize the start of the down cycle - see cycleRate in loadCycleTier</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="loadCycleTier" type="loadCycleTier"/>
	<xs:complexType name="loadCycleTier">
		<xs:sequence>
			<xs:element name="rateIdentifier" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This must correspond to a rateIdentifier for a price tier.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cycleRate" type="percent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The percentage of the cycle period that the relay is open for this tier.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="thermostatSchedule" type="thermostatSchedule"/>
	<xs:complexType name="thermostatSchedule">
		<xs:annotation>
			<xs:documentation>This contains the heating and cooling setpoints for all the days of the week</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="thermostatScheduleDay" type="thermostatScheduleDay" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="thermostatScheduleTime" type="thermostatScheduleTime"/>
	<xs:complexType name="thermostatScheduleTime">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="startTime" type="mspDateTime" minOccurs="1" maxOccurs="1"/>
			<xs:element name="coolingSetPoint" type="temperature" minOccurs="1" maxOccurs="1"/>
			<xs:element name="heatingSetPoint" type="temperature" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="thermostatScheduleDay" type="thermostatScheduleDay"/>
	<xs:complexType name="thermostatScheduleDay">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="days" type="days" minOccurs="1" maxOccurs="1"/>
			<xs:element name="setPoints" type="setPoints" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="thermostatConfiguration" type="thermostatConfiguration"/>
	<xs:complexType name="thermostatConfiguration">
		<xs:annotation>
			<xs:documentation>The settable configuration for a programmable thermostat</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="thermostatMode" type="thermostatMode" minOccurs="0" maxOccurs="1"/>
					<xs:element name="thermostatFan" type="thermostatFan" minOccurs="0" maxOccurs="1"/>
					<xs:element name="thermostatHold" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The current hold setting. Suggested enumerations are, Off, On, Vacation, Override, Other, Unknown.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="coolingSetPoint" type="temperature" minOccurs="0" maxOccurs="1"/>
					<xs:element name="heatingSetPoint" type="temperature" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="tunnelCommandContent" type="tunnelCommandContent"/>
	<xs:complexType name="tunnelCommandContent">
		<xs:annotation>
			<xs:documentation>This is a manufacturer-specific command that is to be tunnelled over the AMI network to a HANDevice.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="1">
			<xs:element name="commandContent" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the content of the command.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="commandEncoding" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The encoding for the command, for instance base64.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="priceBins" type="priceBins"/>
	<xs:complexType name="priceBins">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="priceBin" type="priceBin" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="priceTiers" type="priceTiers"/>
	<xs:complexType name="priceTiers">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="priceTier" type="priceTier" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="capabilityActions" type="capabilityActions"/>
	<xs:complexType name="capabilityActions">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="capabilityAction" type="capabilityAction" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This is a capability that the IHD has to respond to specific conditions. For instance, this can describe behavior like "For a High price tier, set the background color to white, the foreground color to red". It is suggested that the values for these fields be discovered using the GetDomainValues method.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="capabilityActionCodes" type="capabilityActionCodes"/>
	<xs:complexType name="capabilityActionCodes">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="capabilityActionCode" type="capabilityActionCode" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>These values are expected to be implementation specific. It is suggested that the values for these fields be discovered using the GetDomainValues method.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="thermostatFan">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Auto"/>
			<xs:enumeration value="On"/>
			<xs:enumeration value="Cycle"/>
			<xs:enumeration value="Unknown"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="thermostatMode">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Off"/>
			<xs:enumeration value="Heat"/>
			<xs:enumeration value="Cool"/>
			<xs:enumeration value="Auto"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="thermostat" type="thermostat"/>
	<xs:complexType name="thermostat">
		<xs:annotation>
			<xs:documentation>A thermostat for installation on a home area network. The objectID of the thermostat corresponds to the HANDevice@objectID when referenced in HAN operations that use HANDeviceID. The utility corresponds to the HANDeviceID@utility when referenced in HAN operations that use HANDeviceID. The ObjectName corresponds to the HANDeviceID@deviceName when referenced in HAN operations that use HANDeviceID.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspPointObject">
				<xs:sequence>
					<xs:element name="manufacturer" type="manufacturer" minOccurs="0" maxOccurs="1"/>
					<xs:element name="serialNumber" type="serialNumber" minOccurs="0" maxOccurs="1"/>
					<xs:element name="deviceType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Thermostat type. This field may be used by the HAN server to identify the capabilities of this device.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="moduleList" type="moduleList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The address for this HANDevice (e.g., the ZigBee MAC address, communications module identifier, etc,) which can be the objectID of a communications module.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="utilityInfo" type="utilityInfo" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="HANDeviceGroup" type="HANDeviceGroup"/>
	<xs:complexType name="HANDeviceGroup">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="groupName" type="xs:string" minOccurs="1" maxOccurs="1"/>
					<xs:element name="HANDeviceList" type="HANDeviceList" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="setPoints" type="setPoints"/>
	<xs:complexType name="setPoints">
		<xs:sequence>
			<xs:element name="setPoint" type="thermostatScheduleTime" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="HANDeviceList" type="HANDeviceList"/>
	<xs:complexType name="HANDeviceList">
		<xs:sequence minOccurs="1" maxOccurs="1">
			<xs:element name="HANDeviceID" type="HANDeviceID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="HANCommissionStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Commissioned">
				<xs:annotation>
					<xs:documentation>The HAN is commissioned and ready to use</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Decommissioned">
				<xs:annotation>
					<xs:documentation>The HAN has been decommissioned. This implies that this HAN was previously known to be commissioned.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Unknown">
				<xs:annotation>
					<xs:documentation>The commissioning state of the HAN is not known</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="HANCommission" type="HANCommission"/>
	<xs:complexType name="HANCommission">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="interfaceID" type="HANInterfaceID" minOccurs="1" maxOccurs="1"/>
					<xs:element name="commissionStatus" type="HANCommissionStatus" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="demandResponseParameters" type="demandResponseParameters"/>
	<xs:complexType name="demandResponseParameters">
		<xs:annotation>
			<xs:documentation>Parameters to setup/manage the response to a DR event</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="utilityEnrollmentCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The utilityEnrollmentCode provides a mechanism to arbitrarily group different sets of demand response devices for use as part of a larger utility program.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="startRandomizationDuration" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The maximum duration (usually in minutes) to be used when randomizing the start of an event</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stopRandomizationDuration" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The maximum duration (usually in minutes) to be used when randomizing the end of an event</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="demandResponseEvent" type="demandResponseEvent"/>
	<xs:complexType name="demandResponseEvent">
		<xs:annotation>
			<xs:documentation>This is the class representing the DR Event. The class is strongly influecend by the ZigBee SEP1.0 specification, but does not need to map one-to-one to a ZigBee Load Control message. The objectID of this object maps to the eventID .</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="utilityEnrollmentGroup" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Identifies which program this event targets. Only devices registered in that program are expected to react to this event</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deviceClasses" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>By convention, use the Device Classes defined in table D.2 in SEP 1.0</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventStartTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Start time for the DR event. If not specified then start time is now</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventDuration" type="duration" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Duration of the DR event. If not specified then duration is forever. An implementation may impose its own upper bound on "forever"</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="randomizeEventStart" type="xs:boolean" minOccurs="0" maxOccurs="1" default="true">
						<xs:annotation>
							<xs:documentation>Apply a random dither to the end of the DR event</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="randomizeEventEnd" type="xs:boolean" minOccurs="0" maxOccurs="1" default="true">
						<xs:annotation>
							<xs:documentation>Apply a random dither to the end of the DR event</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="heatingSetPoint" type="temperature" minOccurs="0" maxOccurs="1"/>
					<xs:element name="coolingSetPoint" type="temperature" minOccurs="0" maxOccurs="1"/>
					<xs:element name="heatingOffset" type="temperature" minOccurs="0" maxOccurs="1"/>
					<xs:element name="coolingOffset" type="temperature" minOccurs="0" maxOccurs="1"/>
					<xs:element name="averageLoadAdjustment" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This defines a maximum energy usage limit as a percentage of the target Load Control endpoint&#8217;s average energy usage</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="dutyCycle" type="percent" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Indicates what percentage of each cycle period the endpoint should operate (i.e. what percentage of each cycle period is the endpoint &#8220;on&#8221;)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="criticality" type="xs:integer" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This field provides a relative scale for indicating the criticality of a DR event. If multiple DR events are active at the same time then the one with the higher criticality should take precedence.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="demandResponseEventStatus" type="demandResponseEventStatus"/>
	<xs:complexType name="demandResponseEventStatus">
		<xs:annotation>
			<xs:documentation>This class represents a single instance of a status change for a DR event.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="eventID" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The eventID of the DR event for which this status object is being issued.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="deviceID" type="HANDeviceID" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The device on the HAN that this status is for. In order to report an event status for the entire HAN, this deviceID should be the ESI.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="eventStatus" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>By convention, use the Event Status values from Table D.9 in SEP 1.0</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="timestamp" type="mspDateTime" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Time when this status was recorded. For e.g. if the start time for the event is desired then it will be the timestamp associated with the &#8220;Event started&#8221; status.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="criticalPeakPriceEventStatus" type="criticalPeakPriceEventStatus"/>
	<xs:complexType name="criticalPeakPriceEventStatus">
		<xs:sequence>
			<xs:element name="eventID" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="deviceID" type="HANDeviceID" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The device on the HAN that this status is for. In order to report an event status for the entire HAN, this deviceID should be the ESI</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="eventStatus" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>By convention, use the Event Status values from Table D.9 in SEP 1.0</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="eventTime" type="mspDateTime" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="criticalPeakPriceEvent" type="criticalPeakPriceEvent"/>
	<xs:complexType name="criticalPeakPriceEvent">
		<xs:sequence>
			<xs:element name="eventID" type="xs:string" minOccurs="1" maxOccurs="1"/>
			<xs:element name="eventStartTime" type="mspDateTime" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Start time for the CPP event. If not specified then start time is now</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="eventDuration" type="duration" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Duration of the CPP event. If not specified then duration &amp;ldquo;until changed&amp;rdquo;. An implementation may impose its own upper bound on the CPP duration.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="assets" type="assets"/>
	<xs:complexType name="assets">
		<xs:annotation>
			<xs:documentation>This is a container for items that might be tracked in an Asset Management System (AMS). This is the same as the physicalObjectList, except that the cut and jumper have been removed since they are unlikely to be tracked in an AMS.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="anchor" type="anchor" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="breaker" type="breaker" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="capacitor" type="capacitor" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="capacitorBank" type="capacitorBank" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="CDDevice" type="CDDevice" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="elbow" type="elbow" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="electricMeter" type="electricMeter" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="fuse" type="fuse" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="gasMeter" type="gasMeter" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="guy" type="guy" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="inductionMachine" type="inductionMachine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="inHomeDisplay" type="inHomeDisplay" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="loadManagementDevice" type="loadManagementDevice" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="measurementDevice" type="measurementDevice" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="meterBase" type="meterBase" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="module" type="module" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ohPrimaryLine" type="ohPrimaryLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ohSecondaryLine" type="ohSecondaryLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ohTransmissionLine" type="ohTransmissionLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="outageDetectionDevice" type="outageDetectionDevice" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="overcurrentDeviceBank" type="overcurrentDeviceBank" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="parcel" type="parcel" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="pole" type="pole" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="powerMonitor" type="powerMonitor" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="powerSystemDevice" type="powerSystemDevice" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="premise" type="premise" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="primaryCabinet" type="primaryCabinet" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="propaneMeter" type="propaneMeter" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="recloser" type="recloser" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="regulator" type="regulator" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="regulatorBank" type="regulatorBank" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="riser" type="riser" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="secondaryJunctionBox" type="secondaryJunctionBox" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="sectionalizer" type="sectionalizer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="securityLight" type="securityLight" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="serviceLocation" type="serviceLocation" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="spanGuy" type="spanGuy" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="streetLight" type="streetLight" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="substation" type="substation" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="switch" type="switch" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="switchingDeviceBank" type="switchingDeviceBank" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="synchronousMachine" type="synchronousMachine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="trafficLight" type="trafficLight" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="transformer" type="transformer" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="transformerBank" type="transformerBank" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ugPrimaryLine" type="ugPrimaryLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ugSecondaryLine" type="ugSecondaryLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ugTransmissionLine" type="ugTransmissionLine" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="waterMeter" type="waterMeter" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="CIMObjectList" type="CIMObjectList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="surgeArrestor" type="surgeArrestor" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="days" type="days"/>
	<xs:complexType name="days">
		<xs:sequence>
			<xs:element name="day" type="dayLabel" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eventMonitoringList" type="eventMonitoringList"/>
	<xs:complexType name="eventMonitoringList">
		<xs:annotation>
			<xs:documentation>The eventMonitoringList is part of the payload of an InitiateMeterEventMonitoring method.  The eventMonitoringList is an array of eventMonitoingItem, which establishes a set of types of meter events for which monitoring is to be established and a set meters to be monitored for those meter events.  The set of meters can be provided in the form of a list of meterIDs, a list of meterGroupIDs, both or neither.  If no list of meters is provided, then it is assumed that monitoring is to be provided on all meters.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="eventMonitoringItem" type="eventMonitoringItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="thresholdMonitoringItem" type="thresholdMonitoringItem"/>
	<xs:complexType name="thresholdMonitoringItem">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="meterID" type="meterID" minOccurs="1" maxOccurs="1"/>
					<xs:element name="value" type="xs:float" minOccurs="1" maxOccurs="1"/>
					<xs:element name="readingTypeCode" type="readingTypeCode" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="thresholdNotificationItem" type="thresholdNotificationItem"/>
	<xs:complexType name="thresholdNotificationItem">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="meterID" type="meterID" minOccurs="1" maxOccurs="1"/>
					<xs:element name="readingValue" type="readingValue" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="thresholdMonitoringList" type="thresholdMonitoringList"/>
	<xs:complexType name="thresholdMonitoringList">
		<xs:sequence>
			<xs:element name="thresholdMonitoringItem" type="thresholdMonitoringItem" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The thresholdMonitotingItem is used to request the AMI system to monitor a meter until a specific reading is attained or exceeded.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="thresholdNotificationList" type="thresholdNotificationList"/>
	<xs:complexType name="thresholdNotificationList">
		<xs:sequence>
			<xs:element name="thresholdNotificationItem" type="thresholdNotificationItem" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The thresholdNotificationItem is used by the AMI system to notify a subscriber of the readingValue on a meter at the time that a previously-established threshold was reached.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="meterConfigurationStatus" type="meterConfigurationStatus"/>
	<xs:complexType name="meterConfigurationStatus">
		<xs:sequence>
			<xs:element name="extensions" type="extensions" minOccurs="0" maxOccurs="1"/>
			<xs:element name="extensionsList" type="extensionsList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="configurationGroupID" type="objectID" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The objectID of the configurationGroup.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="configurationStatusList" type="configurationStatusList" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="configurationStatusItem" type="configurationStatusItem"/>
	<xs:complexType name="configurationStatusItem">
		<xs:sequence>
			<xs:element name="meterID" type="meterID" minOccurs="1" maxOccurs="1"/>
			<xs:element name="configurationStatus" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The status of the configuration update on this meter.  Suggested annotations include: Applied, Failed, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="errorStringList" type="errorStringList" minOccurs="0" maxOccurs="1"/>
			<xs:element name="timeStamp" type="mspDateTime" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Time that the new configuration was completed.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="errorStringList" type="errorStringList"/>
	<xs:complexType name="errorStringList">
		<xs:sequence>
			<xs:element name="errorString" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="configurationStatusList" type="configurationStatusList"/>
	<xs:complexType name="configurationStatusList">
		<xs:sequence>
			<xs:element name="configurationStatusItem" type="configurationStatusItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="receivedIHDs" type="receivedIHDs"/>
	<xs:complexType name="receivedIHDs">
		<xs:sequence>
			<xs:element name="inHomeDisplay" type="inHomeDisplay" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="DRProgram" type="DRProgram"/>
	<xs:complexType name="DRProgram">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="DRProgramName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Demand Response Program identifier that is communicated between the DR program owner and the DR enrollment agent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DRProgramOwner" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The entity that is offering the DR program.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DRProgramDescription" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Description of this DR program.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DRProgramStartDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="DRProgramEndDate" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
					<xs:element name="isDRDeviceRequired" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>"True" if a DR device must be installed at the customer serviceLocation for participation in the program; "False" if no device is required. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HANDeviceType" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The type of HANDevice required for participation in this program (HANDeviceID.deviceType) if applicable.This is the type of device. It is suggested that the values for deviceType be: ESI, IHD, PCT, Meter, LMDevice, SmartAppliance, RangeExtender, PrepaymentTerminal, Other, Unknown, since these values closely match those identified in Table 5.11 of the SEP1.0 Specification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DRProgramStatus" type="DRProgramStatus" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The permissible values of DRProgramStatus are: "Active", "Suspended", "Rescinded", "Other" and "Unknown". Active status means that the DRProgram has an ending data in the future and customer enrollment is possible, even if control is not currently active. A status of Suspended implies that a customer can still be enrolled in the program but no load control or pricing signals will be sent. A status of Rescinded means that a customer cannot be enrolled in the DRProgram. The Other and Unknown statuses are included for extensibility, but their use is discouraged. If the DRProgramStatus is set to be Other, the DR Program Owner should populate the OtherDRProgramStatus element with the non-standard status value.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="otherDRProgramStatus" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="DRProgramType" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>This is a description of the type of DR programs, examples are TOU, LC,etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="DRProgramStatus">
		<xs:annotation>
			<xs:documentation>The status of this DRProgram.  Active means a program for which the end date is in the future and enrollments can be accepted (regardless of DR is currently in effect); Suspended means that a customer can be enrolled in the program, but no DR signals will be sent; Rescinded means new customers can no longer be enrolled in the program, but existing customers can continue to participate in the program until the end date of the program.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Active">
				<xs:annotation>
					<xs:documentation>Active means a program for which the end date is in the future and enrollments can be accepted (regardless of DR is currently in effect).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Suspended">
				<xs:annotation>
					<xs:documentation>Suspended means that a customer can be enrolled in the program, but no DR signals will be sent.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Rescinded">
				<xs:annotation>
					<xs:documentation>Rescinded means new customers can no longer be enrolled in the program, but existing customers can continue to participate in the program until the end date of the program.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="DRProgramEnrollment" type="DRProgramEnrollment"/>
	<xs:complexType name="DRProgramEnrollment">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="DRProgramID" type="objectID" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The objectID of the DRProgram with which this enrollment is associated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DRProgramName" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Demand Response Program identifier that is communicated between the DR program owner and the DR enrollment agent.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceID" type="serviceID" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The service identifier for the customer service (i.e., electricService, gasService, waterService, etc.) that is associated with this enrollment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serviceLocationID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The serviceLocation identifier for the service location that this enrollment is associated.  Note that there is a one-to-one association between a service/serviceLocation and an enrollment.  Therefore if a customer wishes to enroll several services or several serviceLocations in a DRProgram, there will be multiple enrollments.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customerID" type="objectID" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The customer identifier for the customer associated with this enrollment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountNumber" type="accountNumber" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The customer account number associated with this enrollment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HANDeviceList" type="HANDeviceList" minOccurs="0" maxOccurs="1"/>
					<xs:element name="DRProgramEnrollDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The date/time of customer enrollment in the DR program.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DRProgramParticStartDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date that participation in the DR program is to begin.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DRProgramParticEndDate" type="mspDateTime" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Date that participation in the DR program is to end.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DRProgramEnrollmentStatus" type="DRProgramEnrollmentStatus" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The permissible values of DRProgramEnrollmentStatus are: 'Active', 'Inactive', 'Pending', 'Other' and 'Unknown'. Active status means that the DRProgramEnrollment has a participation start date in the past and a participation end date in the future, even if control is not currently active. A status of Inactive implies that the DRProgramEnrollment has a participation start date in the future or a participation end date in the past. A status of Pending means that the DRProgramEnrollDate is in the past, but that the DRProgramEnrollment has a participation start date in the future. The Other and Unknown statuses are included for extensibility, but their use is discouraged. If the DRProgramEnrollmentStatus is set to be Other, the DR Program Enrollment Agent should populate the OtherDRProgramEnrollmentStatus element with the non-standard status value.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="otherDRProgramEnrollmentStatus" type="xs:string" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="meterConnectionStatus">
		<xs:annotation>
			<xs:documentation>The connection status of a meter. Connected means that the meter is in the circuit and can receive service, Disconnected means that the meter is out of the circuit and cannot receive service. DisconnectedNonPay means that the meter is disconnected, but the reason for the disconnection is that the account has been disconnected for non-payment.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Connected"/>
			<xs:enumeration value="Disconnected"/>
			<xs:enumeration value="DisconnectedNonPay"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="CDEnabledResponse" type="CDEnabledResponse"/>
	<xs:complexType name="CDEnabledResponse">
		<xs:sequence>
			<xs:element name="CDEnabledItem" type="CDEnabledItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="CDEnabledItem" type="CDEnabledItem"/>
	<xs:complexType name="CDEnabledItem">
		<xs:sequence>
			<xs:element name="meterID" type="meterID" minOccurs="1" maxOccurs="1"/>
			<xs:element name="isCDEnabled" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="surgeArrestor" type="surgeArrestor"/>
	<xs:complexType name="surgeArrestor">
		<xs:complexContent>
			<xs:extension base="mspObject">
				<xs:sequence>
					<xs:element name="assetFields" type="assetFields" minOccurs="0" maxOccurs="1"/>
					<xs:element name="ratedVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The maximum RMS value of the power frequency voltage that can be imposed between the terminals of the arrestor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="continuousOperatingVoltage" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The continuous RMS value of the power frequency voltage that can be imposed on the terminals of the arrestor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="nominalDischargeCurrent" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The peak value of a lightning current impulse that can be withstood by the arrestor. A measure of the energy
handling capability of an arrestor.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lineDischargeClass" type="lineDischargeClass" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The energy handling capability of the arrestor as
specified in IEC 60099-4.  Allowable values are 1,2,3,4, or 5.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="impulseWithstand" type="voltage" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Rated lightning impulse withstand voltage, also known as basic lightning impulse insulation level or BIL.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="creepageDistance" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The distance of an insulator between the metal end caps measured along the housing surface.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="flashOverDistance" type="length" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The distance of an insulator between the metal end caps measured along the housing surface.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="leakageCurrent" type="current" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The amount of current that leaks through the arrestor
when the rated system voltage is imposed on the
terminals of the arrestor.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="lineDischargeClass">
		<xs:restriction base="xs:string">
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
			<xs:enumeration value="5"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="surgeArrestorList" type="surgeArrestorList"/>
	<xs:complexType name="surgeArrestorList">
		
	</xs:complexType>
	<xs:element name="registrationStatus" type="registrationStatus"/>
	<xs:complexType name="registrationStatus">
		<xs:sequence>
			<xs:element name="interfaceID" type="HANInterfaceID" minOccurs="1" maxOccurs="1"/>
			<xs:element name="deviceID" type="HANDeviceID" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="locationAssociation" type="locationAssociation"/>
	<xs:complexType name="locationAssociation">
		<xs:sequence>
			<xs:element name="locationAssociationName" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The name by which this association is known, such as fireDistrict</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Additional information about this association.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="locationAssociationValue" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the information about this instance of the locationAssociation.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="locationAssociations" type="locationAssociations"/>
	<xs:complexType name="locationAssociations">
		<xs:sequence>
			<xs:element name="locationAssociation" type="locationAssociation" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="workHistoryEvent" type="workHistoryEvent"/>
	<xs:complexType name="workHistoryEvent">
		<xs:sequence>
			<xs:element name="workHistoryEventName" type="xs:string" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The name for this workHistoryEvent, such as "designReleased", "constructionCompleted", etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Additional Information about this event.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="workHistoryEventTime" type="mspDateTime" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The date/time at which this event occurred.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="responsibleParty" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The identifier (such as name, initials, employeedID, etc.) for the person responsible for this event.  For instance the engineer who released the design for construction.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="workHistoryEvents" type="workHistoryEvents"/>
	<xs:complexType name="workHistoryEvents">
		<xs:annotation>
			<xs:documentation>This is a set of events associated with this workOrder that include the name, responsible party and event time. Work history events might be things such as "DesignCompleted", "ReleasedToConstruction", "ConstructionCompleted", etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="workHistoryEvent" type="workHistoryEvent" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="serviceOrderNumber" type="serviceOrderNumber"/>
	<xs:complexType name="serviceOrderNumber">
		<xs:sequence>
			<xs:element name="soNumber" type="soNumber" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="serviceOrderNumbers" type="serviceOrderNumbers"/>
	<xs:complexType name="serviceOrderNumbers">
		<xs:sequence>
			<xs:element name="serviceOrderNumber" type="serviceOrderNumber" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="capacitorBankSwitch" type="capacitorBankSwitch"/>
	<xs:complexType name="capacitorBankSwitch">
		<xs:sequence>
			<xs:element name="switchID" type="objectID" minOccurs="1" maxOccurs="1"/>
			<xs:element name="capacitorBankID" type="objectID" minOccurs="0" maxOccurs="1"/>
			<xs:element name="capacitorSwitchStaus" type="capacitorSwitchStatus" minOccurs="1" maxOccurs="1"/>
			<xs:element name="lastControlDateTime" type="mspDateTime" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="capacitorBankSwitches" type="capacitorBankSwitches"/>
	<xs:complexType name="capacitorBankSwitches">
		<xs:sequence>
			<xs:element name="capacitorBankSwitch" type="capacitorBankSwitch" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="capacitorSwitchStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Connected"/>
			<xs:enumeration value="Disconnected"/>
			<xs:enumeration value="Failed"/>
			<xs:enumeration value="InTransition"/>
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="billingStatusItem" type="billingStatusItem"/>
	<xs:complexType name="billingStatusItem">
		<xs:sequence>
			<xs:element name="billingItemsType" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Class of billing terms.   Suggested enumerations for billingTermsType should include Cycle, Prepaid, BudgetBilled, AnnualOrSeasonal, Other, or Unknown.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountsReceivable" type="money" minOccurs="0" maxOccurs="1"/>
			<xs:element name="accountsReceivableThisPeriod" type="money" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="billingStatusInformation" type="billingStatusInformation"/>
	<xs:complexType name="billingStatusInformation">
		<xs:sequence minOccurs="0" maxOccurs="1">
			<xs:element name="billingStatusItem" type="billingStatusItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="remoteReconnectSetting">
		<xs:annotation>
			<xs:documentation>This is the setting in the CIS for the desired remote reconnection setting for this meter. The allowable values are: Connect, which means that the meter shall be reconnected remotely without requiring additional action when a connect/reconnect signal is received; Arm, which means that the the meter shall be armed for reconnection and the utility's process followed for reconnection with arming prior to connecting/reconnecting the meter; PowerLimitation, which means that the meter shall be reconnected but immediately placed into power limitation mode; CISAuthRequired, which means that when payment is received, Connect or Arm does not occur automatically. Authorization from the CIS application is required before the meter may be connected or armed; None, which means that no remote connection/reconnection should be completed on this meter even if the meter is so configured and enabled; Other, which means that there is some other setting that is not included in this list; or Unknown, which means that the remoteReconnectSetting is not known or not set by the CIS, in which case the AMI head-end system should follow its own business rules in determining whether or not to connect/reconnect a meter.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Connect"/>
			<xs:enumeration value="Arm"/>
			<xs:enumeration value="PowerLimitation"/>
			<xs:enumeration value="CISAuthRequired"/>
			<xs:enumeration value="None"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="alternateContactList" type="alternateContactList"/>
	<xs:complexType name="alternateContactList">
		<xs:sequence>
			<xs:element name="alternateContact" type="alternateContact" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="alternateContact" type="alternateContact"/>
	<xs:complexType name="alternateContact">
		<xs:sequence>
			<xs:element name="lastName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Last name of person.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="firstName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>First name of person.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mName" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Middle name of person.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="prefix" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="suffix" type="xs:string" minOccurs="0" maxOccurs="1"/>
			<xs:element name="contactInfo" type="contactInfo" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="connectorStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="OutOfService"/>
			<xs:enumeration value="Wired"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="loadManagementDeviceRelay" type="loadManagementDeviceRelay"/>
	<xs:complexType name="loadManagementDeviceRelay">
		<xs:sequence>
			<xs:element name="relayNumber" type="xs:integer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>This is the index number for the specific relay.  The index number is zero-based (i.e., 0,1,2 for three relays).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="connectorStatus" type="connectorStatus" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Indication if an external controllable load is connected to the relay in the field.   Some devices deploy with multiple relays but not all relays are connected to equipment in the field.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="demandResponseDeviceClass" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>A name that categorizes the type of load this relay controls.   Examples are:  AC, Water Heater, Pool Pump, and ETS.   This name is used to identify characteristics of the load and may be used for control.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="loadManagementDeviceRelays" type="loadManagementDeviceRelays"/>
	<xs:complexType name="loadManagementDeviceRelays">
		<xs:sequence>
			<xs:element name="loadManagementDeviceRelay" type="loadManagementDeviceRelay" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="IHDMessageType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="BillingMessage"/>
			<xs:enumeration value="Message"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DRProgramEnrollmentStatus">
		<xs:annotation>
			<xs:documentation>The permissible values of DRProgramEnrollmentStatus are: 'Active', 'Inactive', 'Pending', 'Other' and 'Unknown'. Active status means that the DRProgramEnrollment has a participation start date in the past and a participation end date in the future, even if control is not currently active. A status of Inactive implies that the DRProgramEnrollment has a participation start date in the future or a participation end date in the past. A status of Pending means that the DRProgramEnrollDate is in the past, but that the DRProgramEnrollment has a participation start date in the future. The Other and Unknown statuses are included for extensibility, but their use is discouraged. If the DRProgramEnrollmentStatus is set to be Other, the DR Program Enrollment Agent should populate the OtherDRProgramEnrollmentStatus element with the non-standard status value.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Other"/>
			<xs:enumeration value="Active"/>
			<xs:enumeration value="Inactive"/>
			<xs:enumeration value="Pending"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>


