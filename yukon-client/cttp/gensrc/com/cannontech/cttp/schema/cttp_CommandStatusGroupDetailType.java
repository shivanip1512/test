/**
 * cttp_CommandStatusGroupDetailType.java
 *
 * This file was generated by XMLSPY 2004 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSPY Documentation for further details.
 * http://www.altova.com/xmlspy
 */


package com.cannontech.cttp.schema;

import com.altova.xml.types.SchemaString;

public class cttp_CommandStatusGroupDetailType extends com.altova.xml.Node {
	public cttp_CommandStatusGroupDetailType() {
		super();
	}

	public cttp_CommandStatusGroupDetailType(cttp_CommandStatusGroupDetailType node) {
		super(node);
	}

	public cttp_CommandStatusGroupDetailType(org.w3c.dom.Node node) {
		super(node);
	}

	public cttp_CommandStatusGroupDetailType(org.w3c.dom.Document doc) {
		super(doc);
	}
	public void adjustPrefix() {
		int count;
		count = getDomChildCount(Attribute, null, "groupID");
		for (int i = 0; i < count; i++) {
			org.w3c.dom.Node tmpNode = getDomChildAt(Attribute, null, "groupID", i);
			internalAdjustPrefix(tmpNode, false);
		}
		count = getDomChildCount(Attribute, null, "groupName");
		for (int i = 0; i < count; i++) {
			org.w3c.dom.Node tmpNode = getDomChildAt(Attribute, null, "groupName", i);
			internalAdjustPrefix(tmpNode, false);
		}
		count = getDomChildCount(Attribute, null, "statusUpdateTime");
		for (int i = 0; i < count; i++) {
			org.w3c.dom.Node tmpNode = getDomChildAt(Attribute, null, "statusUpdateTime", i);
			internalAdjustPrefix(tmpNode, false);
		}
		count = getDomChildCount(Attribute, null, "groupCommandStatus");
		for (int i = 0; i < count; i++) {
			org.w3c.dom.Node tmpNode = getDomChildAt(Attribute, null, "groupCommandStatus", i);
			internalAdjustPrefix(tmpNode, false);
		}
	}

	public int getgroupIDMinCount() {
		return 1;
	}

	public int getgroupIDMaxCount() {
		return 1;
	}

	public int getgroupIDCount() {
		return getDomChildCount(Attribute, null, "groupID");
	}

	public boolean hasgroupID() {
		return hasDomChild(Attribute, null, "groupID");
	}

	public SchemaString getgroupIDAt(int index) throws Exception {
		return new SchemaString(getDomNodeValue(getDomChildAt(Attribute, null, "groupID", index)));
	}

	public SchemaString getgroupID() throws Exception {
		return getgroupIDAt(0);
	}

	public void removegroupIDAt(int index) {
		removeDomChildAt(Attribute, null, "groupID", index);
	}

	public void removegroupID() {
		while (hasgroupID())
			removegroupIDAt(0);
	}

	public void addgroupID(SchemaString value) {
		setDomChild(Attribute, null, "groupID", value.toString());
	}

	public void addgroupID(String value) throws Exception {
		addgroupID(new SchemaString(value));
	}

	public void insertgroupIDAt(SchemaString value, int index) {
		insertDomChildAt(Attribute, null, "groupID", index, value.toString());
	}

	public void insertgroupIDAt(String value, int index) throws Exception {
		insertgroupIDAt(new SchemaString(value), index);
	}

	public void replacegroupIDAt(SchemaString value, int index) {
		replaceDomChildAt(Attribute, null, "groupID", index, value.toString());
	}

	public void replacegroupIDAt(String value, int index) throws Exception {
		replacegroupIDAt(new SchemaString(value), index);
	}

	public int getgroupNameMinCount() {
		return 1;
	}

	public int getgroupNameMaxCount() {
		return 1;
	}

	public int getgroupNameCount() {
		return getDomChildCount(Attribute, null, "groupName");
	}

	public boolean hasgroupName() {
		return hasDomChild(Attribute, null, "groupName");
	}

	public SchemaString getgroupNameAt(int index) throws Exception {
		return new SchemaString(getDomNodeValue(getDomChildAt(Attribute, null, "groupName", index)));
	}

	public SchemaString getgroupName() throws Exception {
		return getgroupNameAt(0);
	}

	public void removegroupNameAt(int index) {
		removeDomChildAt(Attribute, null, "groupName", index);
	}

	public void removegroupName() {
		while (hasgroupName())
			removegroupNameAt(0);
	}

	public void addgroupName(SchemaString value) {
		setDomChild(Attribute, null, "groupName", value.toString());
	}

	public void addgroupName(String value) throws Exception {
		addgroupName(new SchemaString(value));
	}

	public void insertgroupNameAt(SchemaString value, int index) {
		insertDomChildAt(Attribute, null, "groupName", index, value.toString());
	}

	public void insertgroupNameAt(String value, int index) throws Exception {
		insertgroupNameAt(new SchemaString(value), index);
	}

	public void replacegroupNameAt(SchemaString value, int index) {
		replaceDomChildAt(Attribute, null, "groupName", index, value.toString());
	}

	public void replacegroupNameAt(String value, int index) throws Exception {
		replacegroupNameAt(new SchemaString(value), index);
	}

	public int getstatusUpdateTimeMinCount() {
		return 1;
	}

	public int getstatusUpdateTimeMaxCount() {
		return 1;
	}

	public int getstatusUpdateTimeCount() {
		return getDomChildCount(Attribute, null, "statusUpdateTime");
	}

	public boolean hasstatusUpdateTime() {
		return hasDomChild(Attribute, null, "statusUpdateTime");
	}

	public SchemaString getstatusUpdateTimeAt(int index) throws Exception {
		return new SchemaString(getDomNodeValue(getDomChildAt(Attribute, null, "statusUpdateTime", index)));
	}

	public SchemaString getstatusUpdateTime() throws Exception {
		return getstatusUpdateTimeAt(0);
	}

	public void removestatusUpdateTimeAt(int index) {
		removeDomChildAt(Attribute, null, "statusUpdateTime", index);
	}

	public void removestatusUpdateTime() {
		while (hasstatusUpdateTime())
			removestatusUpdateTimeAt(0);
	}

	public void addstatusUpdateTime(SchemaString value) {
		setDomChild(Attribute, null, "statusUpdateTime", value.toString());
	}

	public void addstatusUpdateTime(String value) throws Exception {
		addstatusUpdateTime(new SchemaString(value));
	}

	public void insertstatusUpdateTimeAt(SchemaString value, int index) {
		insertDomChildAt(Attribute, null, "statusUpdateTime", index, value.toString());
	}

	public void insertstatusUpdateTimeAt(String value, int index) throws Exception {
		insertstatusUpdateTimeAt(new SchemaString(value), index);
	}

	public void replacestatusUpdateTimeAt(SchemaString value, int index) {
		replaceDomChildAt(Attribute, null, "statusUpdateTime", index, value.toString());
	}

	public void replacestatusUpdateTimeAt(String value, int index) throws Exception {
		replacestatusUpdateTimeAt(new SchemaString(value), index);
	}

	public int getgroupCommandStatusMinCount() {
		return 1;
	}

	public int getgroupCommandStatusMaxCount() {
		return 1;
	}

	public int getgroupCommandStatusCount() {
		return getDomChildCount(Attribute, null, "groupCommandStatus");
	}

	public boolean hasgroupCommandStatus() {
		return hasDomChild(Attribute, null, "groupCommandStatus");
	}

	public SchemaString getgroupCommandStatusAt(int index) throws Exception {
		return new SchemaString(getDomNodeValue(getDomChildAt(Attribute, null, "groupCommandStatus", index)));
	}

	public SchemaString getgroupCommandStatus() throws Exception {
		return getgroupCommandStatusAt(0);
	}

	public void removegroupCommandStatusAt(int index) {
		removeDomChildAt(Attribute, null, "groupCommandStatus", index);
	}

	public void removegroupCommandStatus() {
		while (hasgroupCommandStatus())
			removegroupCommandStatusAt(0);
	}

	public void addgroupCommandStatus(SchemaString value) {
		setDomChild(Attribute, null, "groupCommandStatus", value.toString());
	}

	public void addgroupCommandStatus(String value) throws Exception {
		addgroupCommandStatus(new SchemaString(value));
	}

	public void insertgroupCommandStatusAt(SchemaString value, int index) {
		insertDomChildAt(Attribute, null, "groupCommandStatus", index, value.toString());
	}

	public void insertgroupCommandStatusAt(String value, int index) throws Exception {
		insertgroupCommandStatusAt(new SchemaString(value), index);
	}

	public void replacegroupCommandStatusAt(SchemaString value, int index) {
		replaceDomChildAt(Attribute, null, "groupCommandStatus", index, value.toString());
	}

	public void replacegroupCommandStatusAt(String value, int index) throws Exception {
		replacegroupCommandStatusAt(new SchemaString(value), index);
	}
}
