package com.amdswireless.messages.rx;

import java.util.BitSet;

/**
 Alarm Messages are generated by endpoints either asynchronously as a result
 of some abnormal condition, or as a result of an over-the-air request for
 an alarm message (i.e. an Alarm Ping).  

 @author johng
*/
public abstract class AlarmMessage extends DataMessage {

	private int bitHash;
	
    public AlarmMessage(char[] c) {
        super(c);
        this.bitHash = generateBitHash();
    }

    public abstract int getTimeSinceEvent();

    public abstract int getExtendedTimeSinceEvent();

    public abstract java.util.Date getTimestampOfEvent();

    public abstract int getClickCount();

    public abstract int getCurrentReading();

    public abstract int getDeviceTemperature();
    
    public int getBitHash() {
        return this.bitHash;
    }
        
    private int generateBitHash() {
        BitSet bs = new BitSet();
        bs.set(0,this.isPowerFailed());
        bs.set(1,this.isPowerRestored());
        bs.set(2,this.isHistoryOverflow());
        bs.set(3,this.isCutWire());
        bs.set(4,this.isTamper());
        bs.set(5,this.isBrownOut());
        bs.set(6,this.isMeterReadFailure());
        bs.set(7,this.isRamTestFailed());
        bs.set(8,this.isRomTestFailed());
        bs.set(9,this.isMeterUnprogrammed());
        bs.set(10,this.isConfigurationError());
        bs.set(11,this.isSelfCheckError());
        bs.set(12,this.isRamFailureError());
        bs.set(13,this.isRomFailureError());
        bs.set(14,this.isNonvolError());
        bs.set(15,this.isClockError());
        bs.set(16,this.isMeasurementError());
        bs.set(17,this.isLowBatteryError());
        bs.set(18,this.isLowLossPotential());
        bs.set(19,this.isDemandOverload());
        bs.set(20,this.isPowerFailure());
        bs.set(21,this.isCalibrationError());
        bs.set(22,this.isRegisterCheckError());
        bs.set(23,this.isResetError());
        bs.set(24,this.isHardEepromError());
        bs.set(25,this.isHardKwhError());
        bs.set(26,this.isRamBitError());
        bs.set(27,this.isGeneralCrcError());
        bs.set(28,this.isSoftEepromError());
        bs.set(29,this.isWatchdogRestart());
        bs.set(30,this.isBitChecksumError());
        bs.set(31,this.isSoftKwhError());
        bs.set(32,this.isLowAcVoltage());
        bs.set(33,this.isCurrentTooHigh());
        bs.set(34,this.isReversePower());
        return bs.hashCode();
    }    
    
    // Alarm accessors.  These should be overridden by message-specific
    // classes which implement the specific alarm bits.

    public boolean isBitChecksumError() {
        return false;
    }
    public boolean isCalibrationError() {
        return false;
    }
    public boolean isConfigurationError() {
        return false;
    }
    public boolean isCurrentTooHigh() {
        return false;
    }
    public boolean isGeneralCrcError() {
        return false;
    }
    public boolean isHardEepromError() {
        return false;
    }
    public boolean isHardKwhError() {
        return false;
    }
    public boolean isLowAcVoltage() {
        return false;
    }
    public boolean isPowerFailure() {
        return false;
    }
    public boolean isRamBitError() {
        return false;
    }
    public boolean isRegisterCheckError() {
        return false;
    }
    public boolean isResetError() {
        return false;
    }
    public boolean isReversePower() {
        return false;
    }
    public boolean isSoftEepromError() {
        return false;
    }
    public boolean isSoftKwhError() {
        return false;
    }
    public boolean isWatchdogRestart() {
        return false;
    }
    public boolean isMeasurementError() {
        return false;
    }
    public boolean isMeterUnprogrammed() {
        return false;
    }
    public boolean isNonvolError() {
        return false;
    }
    public boolean isRamFailureError() {
        return false;
    }
    public boolean isRamTestFailed() {
        return false;
    }
    public boolean isRomFailureError() {
        return false;
    }
    public boolean isRomTestFailed() {
        return false;
    }
    public boolean isSelfCheckError() {
        return false;
    }    
    public boolean isLowBatteryError() {
        return false;
    }
    public boolean isLowLossPotential() {
        return false;
    }
    public boolean isClockError() {
        return false;
    }
    public boolean isDemandOverload() {
        return false;
    }
}
