<%@ page import="com.cannontech.core.dao.DaoFactory"%>
<%@ page import="com.cannontech.database.data.lite.LiteDeviceTypeCommand"%> 
<%@ page import="com.cannontech.database.data.lite.LiteCommand"%> 
<%@ page import="com.cannontech.database.db.command.CommandCategory"%>
<%@ page import="com.cannontech.database.data.lite.LiteYukonPAObject" %>
<%@ page import="org.apache.commons.lang.StringEscapeUtils" %>

<style type="text/css">
div.scroll { font-size: 12px; 
			 height: 350px;  
			 width: 550px; 
			 overflow: scroll; 
			 border: 1px solid #CCCCCC; 
			 text-align:left; 
			 padding: 8px;}
</style>

<%
	//set the deviceID of the YC_BEAN
	YC_BEAN.setDeviceID(deviceID);
	
	if( serialType.equals("xcom"))
	{
	    YC_BEAN.setDeviceType(CommandCategory.STRING_CMD_EXPRESSCOM_SERIAL);
	    YC_BEAN.setSerialNumber(YC_BEAN.getDeviceType(), serialNum);
	} else if( serialType.equals("vcom")) {
	    YC_BEAN.setDeviceType(CommandCategory.STRING_CMD_VERSACOM_SERIAL);
	    YC_BEAN.setSerialNumber(YC_BEAN.getDeviceType(), serialNum);
	} else if( serialType.equals("sa205") ) {
	    YC_BEAN.setDeviceType(CommandCategory.STRING_CMD_SA205_SERIAL);
	    YC_BEAN.setSerialNumber(YC_BEAN.getDeviceType(), serialNum);
	} else if( serialType.equals("sa305")) {
	    YC_BEAN.setDeviceType(CommandCategory.STRING_CMD_SA305_SERIAL);
	    YC_BEAN.setSerialNumber(YC_BEAN.getDeviceType(), serialNum);
	} else {
	    YC_BEAN.setDeviceType(deviceID);    //default to the type of the deviceID selected
	}
%>     
     
<SCRIPT language="JavaScript">
    function disableButton(x) {
        x.disabled = true;
        document.commandForm.submit();
    }
    function loadCommand() {
        
        var originalCmd = document.commandForm.commonCommand.value;
        
        var replacementCmd = replaceCommandParams(originalCmd);
        
        replacementCmd != null ? document.commandForm.command.value = replacementCmd : document.commandForm.command.value = originalCmd;
    }
    
    function replaceCommandParams(cmd) {
    
        var params = new Array();
        var replacements = new Array();
    
        var cmdIdx = 0;
        while(cmdIdx < cmd.length) {
        
            // search for ?' or ?" to that indicates the beginning of a prompt replacement
            if (cmd[cmdIdx] == '?') {
                
                var startIdx = cmdIdx;
                var endIdx = null;
                
                // quoted prompt string if quote immediately follows ?
                if ((cmd[cmdIdx + 1] == "'" || cmd[cmdIdx + 1] == '"')) {
                    for (j = cmdIdx + 2; j < cmd.length; j++) {
                        if (cmd[j] == "'" || cmd[j] == '"') {
                            endIdx = j;
                            break;    
                        }
                    }
                }
                
                // unquoted prompt string
                // ends at space or quote that is to be preserved, or eol
                else {
                    for (j = cmdIdx + 1; j < cmd.length; j++) {
                        if (cmd[j] == ' ' || cmd[j] == "'" || cmd[j] == '"') {
                            endIdx = j - 1;
                            break;    
                        }
                    }
                    if (endIdx == null) {
                        endIdx = cmd.length;
                    }
                }
                
                // pull the parameter prompt from the command
                var param = cmd.substring(startIdx, endIdx + 1)
                
                // clean it up for display and prompt user for replacement
                var displayParam = param.replace(/'/g, '').replace(/"/g, '').replace('?', '');
                var replacement = prompt("Enter value for command parameter:\n\n " + displayParam, "");
                
                if (replacement == null) {
                    return null;
                }
                
                // save original prompt string and replacement
                params.push(param);
                replacements.push(replacement);
            
                // move index forward past this prompt to continue parsing command
                cmdIdx = endIdx;
                continue;
            }
            
            cmdIdx++;
        }
    
        // do replacements
        for(paramIdx = 0; paramIdx < params.length; paramIdx++) {
            cmd = cmd.replace(params[paramIdx], replacements[paramIdx])
        }
    
        return cmd;
    }
    
    
</SCRIPT>
    
<% 
	String name = null;
    if( serialType.equals("xcom")) {
    	name = "Expresscom";
 	} else if( serialType.equals("vcom")) {
    	name = "Versacom";
	} else if( serialType.equals("sa205")) {
		name = "DCU-205";
	} else if( serialType.equals("sa305")) {
		name = "DCU-305";
	} else {
		name = liteYukonPao.getPaoName();
    }
%>


<h3>Control Commands:&nbsp;&nbsp;<%=name%></h3>

	<form name="commandForm" method="POST" action="<%= request.getContextPath() %>/servlet/CommanderServlet">
		<input type="hidden" name="deviceID" value="<%=deviceID%>">
	    <input type="hidden" name="timeOut" value="8000">
	    <%--The jsp wrapping this page needs to tell us "redirect"s value --%>
	    <input id="redirect" type="hidden" name="REDIRECT" value="<%= redirect %>">
	    <input id="referrer" type="hidden" name="REFERRER" value="<%= redirect %>">
					
		<table class="nameValueTable">
	    	<tr> 
	          	<td class="name">Type:</td>
	            <td class="value"><%=YC_BEAN.getDeviceType()%></td>
	        </tr>
		
<% 
	if( serialType.length() > 0) {
%>
			<tr> 
               	<td class="name">Serial Number:</td>
               	<td class="value">
                	<input type="text" name="serialNumber" size="20" value="<%=serialNum%>">
               	</td>
			</tr>
            <tr> 
                <td class="name">Route:</td>
                <td class="value"> 
                	<select id="routeID" name="routeID">
                   		<option VALUE="-1">Select a Route
<%
		LiteYukonPAObject[] validRoutes = YC_BEAN.getValidRoutes();
		for (int i = 0; i < validRoutes.length; i++) {
%>
						<option VALUE="<%=((LiteYukonPAObject)validRoutes[i]).getYukonID()%>" <%=YC_BEAN.getRouteID()==((LiteYukonPAObject)validRoutes[i]).getYukonID() ? "selected" : ""%>><%=((LiteYukonPAObject)validRoutes[i]).getPaoName()%>
<%
		}
%>
					</select>
               	</td>
			</tr>
<%
	}
%>
			<tr> 
	        	<td class="name">Common Commands:</td>
	            <td class="value">
	            	<select name="commonCommand" onChange="loadCommand()" onInit="loadCommand()">
	                	<option value="">Select a Command</option>                
<%
	Object commandObject = liteYukonPao;
	if(serialType.length() > 0){
		commandObject = serialType;
	}


	String tempCommand = YC_BEAN.getCommandString().replaceAll("noqueue", "").trim();
    for (int i = 0; i < YC_BEAN.getLiteDeviceTypeCommandsVector().size(); i++) {
		LiteDeviceTypeCommand ldtc = (LiteDeviceTypeCommand)YC_BEAN.getLiteDeviceTypeCommandsVector().get(i);
		LiteCommand lc = DaoFactory.getCommandDao().getCommand(ldtc.getCommandID());
		String commandString = StringEscapeUtils.escapeHtml(lc.getCommand());
        if( ldtc.isVisible() && YC_BEAN.isAllowCommand(commandString, lYukonUser, commandObject)) {
%>
						<option value="<%=commandString%>" <%=(commandString.equalsIgnoreCase(tempCommand))? "selected":""%> ><%=lc.getLabel()%></option>
<%
		}
	}
%>
					</select>
				</td>
			</tr>
	        <tr> 
	        	<td class="name">Execute Command:</td>
	            <td class="value">
	            	<input type="text" name="command" <cti:isPropertyFalse property="CommanderRole.EXECUTE_MANUAL_COMMAND">readonly</cti:isPropertyFalse> size="40" value="<%=YC_BEAN.getCommandString()%>">
	            </td>
	        </tr>
	        <tr>
	            <td></td>
	            <td>
	            	<input type="submit" name="execute" value="Execute" onClick="disableButton(this)">
	            </td>
			</tr>
			<tr>
				<td colspan="3">
	    		<div class="scroll">
    	    		<c:out value="${YC_BEAN.resultText}" escapeXml="false"/>
	        	</div>
	    		<input type="submit" name="clearText" value="Clear Results">
        		<input type="reset" name="refresh" value="Refresh" onClick="window.location.reload()">
				</td>
			</tr>
		</table>
