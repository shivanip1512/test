LM_METER_DISCONNECT_PROGRAM:
  title: LM_METER_DISCONNECT_PROGRAM
  required:
    - type
    - name
    - operationalState
    - constraint
    - gears
    - assignedGroups
  type: object
  properties:
    name:
      type: string
      maxLength: 60
      description: 'Name for the load program.'
    type:
      type: string
      enum: 
        - LM_METER_DISCONNECT_PROGRAM
      description: 'Type of load program.'
    operationalState:
      type: string
      enum: 
        - Automatic
        - ManualOnly
        - Timed
      description: 'Operational state of the load program.
                    Automatic – The program controls when the trigger threshold is exceeded or when the program is manually started.
                    Manual Only – The program must be manually started to perform control.
                    Timed – The program controls during the specified control windows.'
    triggerOffset:
      type: number
      minimum: 0.0
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the trigger offset is added to the control area 
                    trigger threshold. The trigger point defined in the control area must exceed the control area trigger 
                    threshold plus the trigger offset before the load program can start control.'
    restoreOffset:
      type: number
      minimum: -9999.9999
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the restore offset is subtracted from the control
                    area trigger threshold. The trigger point defined in the control area must go below the control area
                    trigger threshold minus the trigger offset before the load program can stop control. 
                    A restore offset with a positive value causes the trigger threshold to be lowered; 
                    a restore offset with a negative value causes the trigger threshold to be raised.'
    constraint:
      $ref: '#/constraint'
    
    gears:
      type: array
      items:
        $ref: '#/MeterDisconnect'
      
    controlWindow:
      $ref: '#/controlWindow'
    assignedGroups:
      $ref: '#/assignedGroups'
    notification:
      $ref: '#/notification'
    memberControl:
      $ref: '#/memberControl'

LM_SEP_PROGRAM:
  title: LM_SEP_PROGRAM
  required:
    - type
    - name
    - operationalState
    - constraint
    - gears
    - assignedGroups
  type: object
  properties:
    name:
      type: string
      maxLength: 60
      description: 'Name for the load program.'
    type:
      type: string
      enum: 
        - LM_SEP_PROGRAM
      description: 'Type of load program.'
    operationalState:
      type: string
      enum: 
        - Automatic
        - ManualOnly
        - Timed
      description: 'Operational state of the load program.
                    Automatic – The program controls when the trigger threshold is exceeded or when the program is manually started.
                    Manual Only – The program must be manually started to perform control.
                    Timed – The program controls during the specified control windows.'
    triggerOffset:
      type: number
      minimum: 0.0
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the trigger offset is added to the control area 
                    trigger threshold. The trigger point defined in the control area must exceed the control area trigger 
                    threshold plus the trigger offset before the load program can start control.'
    restoreOffset:
      type: number
      minimum: -9999.9999
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the restore offset is subtracted from the control
                    area trigger threshold. The trigger point defined in the control area must go below the control area
                    trigger threshold minus the trigger offset before the load program can stop control. 
                    A restore offset with a positive value causes the trigger threshold to be lowered; 
                    a restore offset with a negative value causes the trigger threshold to be raised.'
    constraint:
      $ref: '#/constraint'
    gears:
      type: array
      items:
        $ref: '#/NoControl'
    controlWindow:
      $ref: '#/controlWindow'
    assignedGroups:
      $ref: '#/assignedGroups'
    notification:
      $ref: '#/notification'
    memberControl:
      $ref: '#/memberControl'
 
LM_ECOBEE_PROGRAM:
  title: LM_ECOBEE_PROGRAM
  required:
    - type
    - name
    - operationalState
    - constraint
    - gears
    - assignedGroups
  type: object
  properties:
    name:
      type: string
      maxLength: 60
      description: 'Name for the load program.'
    type:
      type: string
      enum: 
        - LM_ECOBEE_PROGRAM
      description: 'Type of load program.'
    operationalState:
      type: string
      enum: 
        - Automatic
        - ManualOnly
        - Timed
      description: 'Operational state of the load program.
                    Automatic – The program controls when the trigger threshold is exceeded or when the program is manually started.
                    Manual Only – The program must be manually started to perform control.
                    Timed – The program controls during the specified control windows.'
    triggerOffset:
      type: number
      minimum: 0.0
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the trigger offset is added to the control area 
                    trigger threshold. The trigger point defined in the control area must exceed the control area trigger 
                    threshold plus the trigger offset before the load program can start control.'
    restoreOffset:
      type: number
      minimum: -9999.9999
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the restore offset is subtracted from the control
                    area trigger threshold. The trigger point defined in the control area must go below the control area
                    trigger threshold minus the trigger offset before the load program can stop control. 
                    A restore offset with a positive value causes the trigger threshold to be lowered; 
                    a restore offset with a negative value causes the trigger threshold to be raised.'
    constraint:
      $ref: '#/constraint'
    
    gears:
      type: array
      items:
        $ref: '#/EcobeeCycle'
    controlWindow:
      $ref: '#/controlWindow'
    assignedGroups:
      $ref: '#/assignedGroups'
    notification:
      $ref: '#/notification'
    memberControl:
      $ref: '#/memberControl'
      
LM_HONEYWELL_PROGRAM:
  title: LM_HONEYWELL_PROGRAM
  required:
    - type
    - name
    - operationalState
    - constraint
    - gears
    - assignedGroups
  type: object
  properties:
    name:
      type: string
      maxLength: 60
      description: 'Name for the load program.'
    type:
      type: string
      enum: 
        - LM_HONEYWELL_PROGRAM
      description: 'Type of load program.'
    operationalState:
      type: string
      enum: 
        - Automatic
        - ManualOnly
        - Timed
      description: 'Operational state of the load program.
                    Automatic – The program controls when the trigger threshold is exceeded or when the program is manually started.
                    Manual Only – The program must be manually started to perform control.
                    Timed – The program controls during the specified control windows.'
    triggerOffset:
      type: number
      minimum: 0.0
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the trigger offset is added to the control area 
                    trigger threshold. The trigger point defined in the control area must exceed the control area trigger 
                    threshold plus the trigger offset before the load program can start control.'
    restoreOffset:
      type: number
      minimum: -9999.9999
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the restore offset is subtracted from the control
                    area trigger threshold. The trigger point defined in the control area must go below the control area
                    trigger threshold minus the trigger offset before the load program can stop control. 
                    A restore offset with a positive value causes the trigger threshold to be lowered; 
                    a restore offset with a negative value causes the trigger threshold to be raised.'
    constraint:
      $ref: '#/constraint'
    gears:
      type: array
      items:
        $ref: '#/HoneywellCycle'
    controlWindow:
      $ref: '#/controlWindow'
    assignedGroups:
      $ref: '#/assignedGroups'
    notification:
      $ref: '#/notification'
    memberControl:
      $ref: '#/memberControl'
      
LM_ITRON_PROGRAM:
  title: LM_ITRON_PROGRAM
  required:
    - type
    - name
    - operationalState
    - constraint
    - gears
    - assignedGroups
  type: object
  properties:
    name:
      type: string
      maxLength: 60
      description: 'Name for the load program.'
    type:
      type: string
      enum: 
        - LM_ITRON_PROGRAM
      description: 'Type of load program.'
    operationalState:
      type: string
      enum: 
        - Automatic
        - ManualOnly
        - Timed
      description: 'Operational state of the load program.
                    Automatic – The program controls when the trigger threshold is exceeded or when the program is manually started.
                    Manual Only – The program must be manually started to perform control.
                    Timed – The program controls during the specified control windows.'
    triggerOffset:
      type: number
      minimum: 0.0
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the trigger offset is added to the control area 
                    trigger threshold. The trigger point defined in the control area must exceed the control area trigger 
                    threshold plus the trigger offset before the load program can start control.'
    restoreOffset:
      type: number
      minimum: -9999.9999
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the restore offset is subtracted from the control
                    area trigger threshold. The trigger point defined in the control area must go below the control area
                    trigger threshold minus the trigger offset before the load program can stop control. 
                    A restore offset with a positive value causes the trigger threshold to be lowered; 
                    a restore offset with a negative value causes the trigger threshold to be raised.'
    constraint:
      $ref: '#/constraint'
    gears:
      type: array
      items:
        $ref: '#/ItronCycle'
    controlWindow:
      $ref: '#/controlWindow'
    assignedGroups:
      $ref: '#/assignedGroups'
    notification:
      $ref: '#/notification'
    memberControl:
      $ref: '#/memberControl'
      
LM_DIRECT_PROGRAM:
  title: LM_DIRECT_PROGRAM
  required:
    - type
    - name
    - operationalState
    - constraint
    - gears
    - assignedGroups
  type: object
  properties:
    name:
      type: string
      maxLength: 60
      description: 'Name for the load program.'
    type:
      type: string
      enum: 
        - LM_DIRECT_PROGRAM
      description: 'Type of load program.'
    operationalState:
      type: string
      enum: 
        - Automatic
        - ManualOnly
        - Timed
      description: 'Operational state of the load program.
                    Automatic – The program controls when the trigger threshold is exceeded or when the program is manually started.
                    Manual Only – The program must be manually started to perform control.
                    Timed – The program controls during the specified control windows.'
    triggerOffset:
      type: number
      minimum: 0.0
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the trigger offset is added to the control area 
                    trigger threshold. The trigger point defined in the control area must exceed the control area trigger 
                    threshold plus the trigger offset before the load program can start control.'
    restoreOffset:
      type: number
      minimum: -9999.9999
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the restore offset is subtracted from the control
                    area trigger threshold. The trigger point defined in the control area must go below the control area
                    trigger threshold minus the trigger offset before the load program can stop control. 
                    A restore offset with a positive value causes the trigger threshold to be lowered; 
                    a restore offset with a negative value causes the trigger threshold to be raised.'
    constraint:
      $ref: '#/constraint'
    gears:
      type: array
      items:
        $ref: '#/NoControl'
    controlWindow:
      $ref: '#/controlWindow'
    assignedGroups:
      $ref: '#/assignedGroups'
    notification:
      $ref: '#/notification'
    memberControl:
      $ref: '#/memberControl'

LM_EATON_CLOUD_PROGRAM:
  title: LM_EATON_CLOUD_PROGRAM
  required:
    - type
    - name
    - operationalState
    - constraint
    - gears
    - assignedGroups
  type: object
  properties:
    name:
      type: string
      maxLength: 60
      description: 'Name for the load program.'
    type:
      type: string
      enum: 
        - LM_DIRECT_PROGRAM
      description: 'Type of load program.'
    operationalState:
      type: string
      enum: 
        - Automatic
        - ManualOnly
        - Timed
      description: 'Operational state of the load program.
                    Automatic – The program controls when the trigger threshold is exceeded or when the program is manually started.
                    Manual Only – The program must be manually started to perform control.
                    Timed – The program controls during the specified control windows.'
    triggerOffset:
      type: number
      minimum: 0.0
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the trigger offset is added to the control area 
                    trigger threshold. The trigger point defined in the control area must exceed the control area trigger 
                    threshold plus the trigger offset before the load program can start control.'
    restoreOffset:
      type: number
      minimum: -9999.9999
      maximum: 99999.9999
      default: 0.0
      description: 'When the load program is assigned to a control area, the restore offset is subtracted from the control
                    area trigger threshold. The trigger point defined in the control area must go below the control area
                    trigger threshold minus the trigger offset before the load program can stop control. 
                    A restore offset with a positive value causes the trigger threshold to be lowered; 
                    a restore offset with a negative value causes the trigger threshold to be raised.'
    constraint:
      $ref: '#/constraint'
    gears:
      type: array
      items:
        anyOf:
          - $ref: '#/EatonCloudCycle'
          - $ref: '#/NoControl'
    controlWindow:
      $ref: '#/controlWindow'
    assignedGroups:
      $ref: '#/assignedGroups'
    notification:
      $ref: '#/notification'
    memberControl:
      $ref: '#/memberControl'
      
constraint:
  required:
    - constraintId
  type: object
  properties:
    constraintId:
      type: integer
      description: 'Unique id of program constraint. Program constraint that controls when the load program can run.'
    constraintName:
      type: string
      description: 'Name of the program constraint. Program constraint that controls when the load program can run.'
     
controlWindow:
  type: object
  properties:
    controlWindowOne:
      type: object
      properties:
        availableStartTimeInMinutes:
          type: integer
          minimum: 0
          maximum: 1439
          description: 'Start time of the first control window.'
        availableStopTimeInMinutes:
          type: integer
          minimum: 0
          maximum: 1440
          description: 'End time of the first control window.'
    controlWindowTwo:
      type: object
      properties:
        availableStartTimeInMinutes:
          type: integer
          minimum: 0
          maximum: 1439
          description: 'Start time of the second control window.'
        availableStopTimeInMinutes:
          type: integer
          minimum: 0
          maximum: 1440
          description: 'End time of the second control window.'
      
assignedGroups:
  type: array
  items:
    required:
      - groupId
      - groupOrder
    type: object
    properties:
      groupId:
        type: integer
        description: 'Unique identifier of load group which can be assigned to load program.'
      groupName:
        type: string
        description: 'Name of the load group.'
      groupOrder:
        type: integer
        description: 'Load group order. If more than 1 groupId is there in object then groupOrder is required field.' 
      type:
        type: string
        enum:
          - LM_GROUP_METER_DISCONNECT
          - LM_GROUP_HONEYWELL
          - LM_GROUP_ECOBEE
          - LM_GROUP_DIGI_SEP
          - LM_GROUP_VERSACOM
          - LM_GROUP_EXPRESSCOMM
          - LM_GROUP_ITRON
          - LM_GROUP_EMETCON
          - LM_GROUP_RFN_EXPRESSCOMM
          - LM_GROUP_POINT
          - LM_GROUP_RIPPLE
          - MACRO_GROUP
        description: 'Type of load group.'
            
notification:       
  type: object
  properties:
    programStartInMinutes:
      type: integer
      minimum: 0
      maximum: 99999
      default: 0
      description: 'Program start time in minutes.To send out a notification message before control starts, add this object and enter how many 
                    minutes before control starts to send the message. If this object is not added in request, a notification 
                    message is not sent out when the control starts.'
    programStopInMinutes:
      type: integer
      minimum: 0
      maximum: 99999
      default: 0
      description: 'Program stop time in minutes. To send out a notification message after control stops, add this object  and enter how many
                    minutes after control stops to send the message. If this object is not added in request, 
                    a notification message is not sent out when the control stops.'
    notifyOnAdjust:
      type: boolean
      default: false
      description: 'Notify on adjustment.'
    enableOnSchedule:
      type: boolean
      default: false
      description: 'Enable on schedule.'
    assignedNotificationGroups:
      type: array
      items:
        required:
          - notificationGrpID
        type: object
        properties:
          notificationGrpID:
            type: integer
            description: 'Unique identifier of Notification group. Notification groups that can be assigned to the load program.'
          notificationGrpName:
            type: string
            description: 'Notification group name.'

memberControl: 
  required:
    - subordinateProgId
  type: object
  properties:
    subordinateProgId:
      type: integer
      description: 'Unique identifier of subordinateProgId. The Member control allows a load program to be configured as
                    a master program. Subordinate programs are then assigned to the master program. When a master 
                    load program is running, subordinate program cannot be started. When a subordinate program is 
                    running and the master program is started, the master program takes over control for the 
                    subordinate program.'
    subordinateProgName:
      type: string
      description: 'Subordinate program name.' 

TimeRefresh:
  title: TimeRefresh
  required:
    - gearName
    - gearNumber
    - controlMethod
    - fields
  type: object
  properties:
    gearName:
      type: string
      maxLength: 30
      description: 'Name for the gear.'
    gearNumber:
      type: integer
      description: 'Gear number.'
    controlMethod:
      type: string
      enum:
        - SmartCycle
      description: 'Type of gear.'
    fields:
      required:
        - refreshShedType
        - shedTime
        - groupSelectionMethod
        - numberOfGroups
        - sendRate
        - howToStopControl
        - stopOrder
        - rampOutPercent
        - rampOutIntervalInSeconds
        - rampInPercent
        - rampInIntervalInSeconds
        - capacityReduction
        - whenToChangeFields
      type: object
      properties:
        refreshShedType:
          type: string
          enum: 
            - FixedShedTime
            - DynamicShedTime
          description: 'Fixed Shed Time – Shed time is specified in the gear.
                        Dynamic Shed Time – Shed time is dynamically calculated.'
        shedTime:
          type: integer
          minimum: 0
          maximum: 162000
          description: 'Shed time interval. Valid values are (in sec)- 0, 60, 120, 300, 480, 600, 900, 1200, 1800, 2700, 3600, 7200, 18000,
                      28800, 36000, 54000, 72000, 108000, 162000.'
        sendRate:
          type: integer
          minimum: 0
          maximum: 162000
          description: 'Command Resend Rate - Rate at which the shed command is resent.
                      Valid values are (in sec)- 0, 60, 120, 300, 480, 600, 900, 1200, 1800, 2700, 3600, 7200, 18000,
                      28800, 36000, 54000, 72000, 108000, 162000.'
        numberOfGroups:
          type: integer
          minimum: 0
          maximum: 25
          description: 'Number of load groups that are shed for each refresh.'
        groupSelectionMethod:
          type: string
          enum: 
            - LastControlled
            - AlwaysFirstGroup
            - LeastControlTime
          description: 'Last Controlled – Selects the next load group in the list 
                        based on the last load group controlled.
                        Always First Group – Always selects the first load group 
                        in the list.
                        Least Control Time – Selects the load group whose seasonal 
                        control time is the least.'
        rampInPercent: 
          type: integer
          minimum: 0
          maximum: 100
          description: 'Percentage of the load groups to ramp in at each interval.
                        This is required field when rampInPercent is not null.'
        rampInIntervalInSeconds:
          type: integer
          minimum: -99999
          maximum: 99999
          description: 'Interval in seconds over which to ramp in a percentage
                        of the load groups.
                        This is required field when rampInIntervalInSeconds is not null.'
        rampOutPercent:
          type: integer
          minimum: 0
          maximum: 100
          description: 'Percentage of the load groups to ramp out at each interval.
                        When type of howToStopControl is RampOutTimeIn or 
                        RampOutRestore then this field is required.'
        rampOutIntervalInSeconds:
          type: integer
          minimum: -99999
          maximum: 99999
          description: 'Interval in seconds over which to ramp out a percentage of
                        the load groups.
                        When type of howToStopControl is RampOutTimeIn or 
                        RampOutRestore then this field is required.'
        stopOrder:
          type: string
          enum:
            - FIRSTINFIRSTOUT
            - RANDOM
          description: 'Random – The system selects a random load group to stop.
                        First In First Out – The first group that was controlled 
                        is the first group to stop. The second group that was 
                        controlled is the second group to stop, etc.
                        When type of howToStopControl is RampOutTimeIn or 
                        RampOutRestore then this field is required.'
        stopCommandRepeat:
          type: integer
          minimum: 0
          maximum: 5
          description: 'Stop Command Repeat.'
        howToStopControl:
          type: string
          enum:
            - TimeIn
            - Restore
            - RampOutTimeIn
            - RampOutRestore
          description: 'TimeIn - The control stops when the cycle period is over.
                        Restore – A restore command is sent to the device.
                        RampOutTimeIn - The control ramps out when the cycle period is over.
                        RampOutRestore - The control ramps out when a restore command is 
                        sent to the device.'
        capacityReduction:
          $ref: '#capacityReduction'
        whenToChangeFields:
          $ref: '#whenToChangeFields'

SmartCycle:
  title: SmartCycle
  required:
    - gearName
    - gearNumber
    - controlMethod
    - fields
  type: object
  properties:
    gearName:
      type: string
      maxLength: 30
      description: 'Name for the gear.'
    gearNumber:
      type: integer
      description: 'Gear number.'
    controlMethod:
      type: string
      enum:
        - SmartCycle
      description: 'Type of gear.'
    fields:
      required:
        - stopCommandRepeat
      allOf:
        - $ref: '#SmartCycle_TrueCycle_MagnitudeCycle_TargetCycle_Fields'
        - type: object
          properties:
            stopCommandRepeat:
              type: integer
              minimum: 0
              maximum: 5
              description: 'Stop Command Repeat.'
TrueCycle:
  title: TrueCycle
  required:
    - gearName
    - gearNumber
    - controlMethod
    - fields
  type: object
  properties:
    gearName:
      type: string
      maxLength: 30
      description: 'Name for the gear.'
    gearNumber:
      type: integer
      description: 'Gear number.'
    controlMethod:
      type: string
      enum:
        - TrueCycle
      description: 'Type of gear.'
    
    fields:
      required:
        - stopCommandRepeat
      allOf:
        - $ref: '#SmartCycle_TrueCycle_MagnitudeCycle_TargetCycle_Fields'
        - type: object
          properties:
            stopCommandRepeat:
              type: integer
              minimum: 0
              maximum: 5
              description: 'Stop Command Repeat.'

MagnitudeCycle:
  title: MagnitudeCycle
  required:
    - gearName
    - gearNumber
    - controlMethod
    - fields
  type: object
  properties:
    gearName:
      type: string
      maxLength: 30
      description: 'Name for the gear.'
    gearNumber:
      type: integer
      description: 'Gear number.'
    controlMethod:
      type: string
      enum:
        - MagnitudeCycle
      description: 'Type of gear.'
    fields:
      $ref: '#SmartCycle_TrueCycle_MagnitudeCycle_TargetCycle_Fields'

TargetCycle:  
  title: TargetCycle
  type: array
  items:
    required:
      - gearName
      - gearNumber
      - controlMethod
      - fields
    type: object
    properties:
      gearName:
        type: string
        maxLength: 30
        description: 'Name for the gear.'
      gearNumber:
        type: integer
        description: 'Gear number.'
      controlMethod:
        type: string
        enum:
          - TargetCycle
        description: 'Type of gear.'
      
      fields:
        required:
          - kWReduction
        allOf:
          - $ref: '#SmartCycle_TrueCycle_MagnitudeCycle_TargetCycle_Fields'
          - type: object
            properties:
              kWReduction:
                type: number
                minimum: 0.0
                maximum: 99999.999
                description: 'Targeted amount of kW reduction.'      
                
SmartCycle_TrueCycle_MagnitudeCycle_TargetCycle_Fields:           
  required:
    - noRamp
    - controlPercent
    - cyclePeriodInMinutes
    - cycleCountSendType
    - maxCycleCount
    - startingPeriodCount
    - sendRate
    - howToStopControl
    - capacityReduction
    - whenToChangeFields
  type: object
  properties:
    controlPercent:
      minimum: 5
      maximum: 100
      description: 'Cycle percentage.'
    cyclePeriodInMinutes:
      type: integer
      minimum: 1
      maximum: 945
      description: 'Cycle period in minutes.'
    cycleCountSendType:
      type: string
      enum:
        - FixedCount
        - CountDown
        - LimitedCountDown 
      description: 'Fixed Count – The same number of cycle counts are sent 
                    to the switch.
                    Count Down – The number of cycle counts sent decreases at
                    each resend.
                    Limited Count Down – Used with LCR 2000s, which do not 
                    allow cycle counts to be sent to them. The cycle count is 
                    hard coded in switch.
                    The purpose of Count Down and Limited Count Down is to end
                    up with zero cycle counts at the end of control.'
    maxCycleCount: 
      type: integer
      minimum: 0
      maximum: 63
      description: 'Maximum number of cycles that can be sent.'
    startingPeriodCount:
      type: integer
      minimum: 1
      maximum: 63
      description: 'Count that is used when automatic control starts.'
    sendRate:
      type: integer
      minimum: 0
      maximum: 162000
      description: 'Command Resend Rate - Rate at which the shed command is resent.
                    Valid values are (in sec)- 0, 60, 120, 300, 480, 600, 900, 1200, 1800, 2700, 3600, 7200, 18000,
                    28800, 36000, 54000, 72000, 108000, 162000.'
    noRamp:
      type: boolean
      description: 'To disable the ExpressCom ramping feature. When true it will
                    disable the ExpressCom ramping feature.'
    
    howToStopControl:
      type: string
      enum:
        - Restore
        - StopCycle
      description: 'Restore – A restore command is sent to the device.
                    StopCycle - The period count is set to 0, so the cycle 
                    stops the next period.'
    capacityReduction:
      $ref: '#capacityReduction'
    whenToChangeFields:
      $ref: '#whenToChangeFields'            

EcobeeCycle:
  title: EcobeeCycle
  required:
    - gearName
    - gearNumber
    - controlMethod
    - fields
  type: object
  properties:
    gearName:
      type: string
      maxLength: 30
      description: 'Name for the gear.'
    gearNumber:
      type: integer
      description: 'Gear number.'
    controlMethod:
      type: string
      enum:
        - EcobeeCycle
      description: 'Type of gear.'
    fields:
      required:
        - mandatory
        - rampIn
        - rampOut
        - controlPercent
        - howToStopControl
        - capacityReduction
        - whenToChangeFields
      type: object
      properties:
        mandatory:
          type: boolean
          description: 'Mandatory field.'
        rampIn:
          type: boolean
          description: 'Ramp in.'
        rampOut:
          type: boolean
          description: 'Ramp out.'
        controlPercent: 
          type: integer
          minimum: 5
          maximum: 100
          description: 'Control percentage.'
        howToStopControl:
          type: string
          enum:
            - Restore
          description: 'Restore – A restore command is sent to the device.'
        capacityReduction:
          $ref: '#capacityReduction'
        whenToChangeFields:
          $ref: '#whenToChangeFields'

ItronCycle:
  title: ItronCycle
  required:
    - gearName
    - gearNumber
    - controlMethod
    - fields
  type: object
  properties:
    gearName:
      type: string
      maxLength: 30
      description: 'Name for the gear.'
    gearNumber:
      type: integer
      description: 'Gear number.'
    controlMethod:
      type: string
      enum:
        - ItronCycle
      description: 'Type of gear.'
    fields:
      required:
        - dutyCycleType
        - dutyCyclePercent
        - dutyCyclePeriodInMinutes
        - criticality
        - rampIn
        - rampOut
        - howToStopControl
        - capacityReduction
        - whenToChangeFields
      type: object
      properties:
        dutyCycleType:
          type: string
          enum:
            - STANDARD
            - TRUE_CYCLE
            - SMART_CYCLE
          description: 'SMART_CYCLE - The LCR hardware performs the cycling.
                        TRUE_CYCLE - Uses an algorithm to perform cycling, which targets 
                        a percentage of the time a field device is operating.'
        dutyCyclePercent:
          type: integer
          minimum: 0
          maximum: 100
          description: 'Duty cycle in percentage.'
        dutyCyclePeriodInMinutes:
          type: integer
          description: 'Duty cycle period in minutes. 
                        Valid range of Duty cycle period is 15, 30 and 60 (in minutes).'
        criticality:
          type: integer
          minimum: 0
          maximum: 255    
          description: 'Criticality.'
        howToStopControl:
          type: string
          enum:
            - Restore
          description: 'Restore – A restore command is sent to the device.'
        rampIn:
          type: boolean
          description: 'Ramp in.'
        rampOut:
          type: boolean
          description: 'Ramp out.'
        capacityReduction:
          $ref: '#capacityReduction'
        whenToChangeFields:
          $ref: '#whenToChangeFields'  
    
EatonCloudCycle:
  title: EatonCloudCycle
  required:
    - gearName
    - gearNumber
    - controlMethod
    - fields
  type: object
  properties:
    gearName:
      type: string
      maxLength: 30
      description: 'Name for the gear.'
    gearNumber:
      type: integer
      description: 'Gear number.'
    controlMethod:
      type: string
      enum:
        - EatonCloudCycle
      description: 'Type of gear.'
    fields:
      required:
        - dutyCycleType
        - dutyCyclePercent
        - dutyCyclePeriodInMinutes
        - criticality
        - rampIn
        - rampOut
        - howToStopControl
        - capacityReduction
        - whenToChangeFields
      type: object
      properties:
        dutyCycleType:
          type: string
          enum:
            - STANDARD
            - TRUE_CYCLE
            - SMART_CYCLE
          description: 'SMART_CYCLE - The LCR hardware performs the cycling.
                        TRUE_CYCLE - Uses an algorithm to perform cycling, which targets 
                        a percentage of the time a field device is operating.'
        dutyCyclePercent:
          type: integer
          minimum: 0
          maximum: 100
          description: 'Duty cycle in percentage.'
        dutyCyclePeriodInMinutes:
          type: integer
          description: 'Duty cycle period in minutes. 
                        Valid range of Duty cycle period is 15, 30 and 60 (in minutes).'
        criticality:
          type: integer
          minimum: 0
          maximum: 255    
          description: 'Criticality.'
        howToStopControl:
          type: string
          enum:
            - Restore
          description: 'Restore – A restore command is sent to the device.'
        rampIn:
          type: boolean
          description: 'Ramp in.'
        rampOut:
          type: boolean
          description: 'Ramp out.'
        capacityReduction:
          $ref: '#capacityReduction'
        whenToChangeFields:
          $ref: '#whenToChangeFields'  

MeterDisconnect:
  title: MeterDisconnect
  required:
    - gearName
    - gearNumber
    - controlMethod
  type: object
  properties:
    gearName:
      type: string
      maxLength: 30
      description: 'Name for the gear.'
    gearNumber:
      type: integer
      description: 'Gear number.'
    controlMethod:
      type: string
      enum:
        - MeterDisconnect
      description: 'Type of gear.'
        
NoControl:
  title: NoControl
  required:
    - gearName
    - gearNumber
    - controlMethod
    - fields
  type: object
  properties:
    gearName:
      type: string
      maxLength: 30
      description: 'Name for the gear.'
    gearNumber:
      type: integer
      description: 'Gear number.'
    controlMethod:
      type: string
      enum:
        - NoControl
      description: 'Type of gear.'
    fields:
      required:
        - whenToChangeFields
      type: object
      properties:
        whenToChangeFields:
          $ref: '#whenToChangeFields'
                              
HoneywellCycle:
  title: HoneywellCycle
  required:
    - gearName
    - gearNumber
    - controlMethod
    - fields
  type: object
  properties:
    gearName:
      type: string
      maxLength: 30
      description: 'Name for the gear.'
    gearNumber:
      type: integer
      description: 'Gear number.'
    controlMethod:
      type: string
      enum:
        - HoneywellCycle
      description: 'Type of gear.'
    fields:
      required:
        - mandatory
        - rampInOut
        - controlPercent
        - cyclePeriodInMinutes
        - howToStopControl
        - capacityReduction
        - whenToChangeFields
      type: object
      properties:
        mandatory:
          type: boolean
          description: 'Mandatory field.'
        rampInOut:
          type: boolean
          description: 'Ramp in a percentage of the load groups over an interval of time.'
        controlPercent: 
          type: integer
          minimum: 0
          maximum: 100
          description: 'Control percentage.'
        cyclePeriodInMinutes:
          type: integer
          description: 'Cycle period in minutes. Allowed value for cycle period is 30 (in mins).'
        howToStopControl:
          type: string
          enum:
            - Restore
          description: 'Restore – A restore command is sent to the device.'
        capacityReduction:
          $ref: '#capacityReduction'
        whenToChangeFields:
          $ref: '#whenToChangeFields'

Latching:
  title: Latching
  required:
    - gearName
    - gearNumber
    - controlMethod
    - fields
  type: object
  properties:
    gearName:
      type: string
      maxLength: 30
      description: 'Name for the gear.'
    gearNumber:
      type: integer
      description: 'Gear number.'
    controlMethod:
      type: string
      enum:
        - Latching
      description: 'Type of gear.'
    fields:
      required:
        - startControlState
        - capacityReduction
      type: object
      properties:
        startControlState:
          type: string
          enum:
            - Open
            - Close
          description: 'Controls whether an open or close command is sent at the beginning of control..'
        capacityReduction:
          $ref: '#capacityReduction'
         
howToStopControl:
  type: string
  enum:
    - TimeIn
    - Restore
    - StopCycle
    - RampOutTimeIn
    - RampOutRestore
  description: 'TimeIn - The control stops when the cycle period is over.
                Restore – A restore command is sent to the device.
                StopCycle - The period count is set to 0, so the cycle stops the next period.
                RampOutTimeIn - The control ramps out when the cycle period is over.
                RampOutRestore - The control ramps out when a restore command is 
                sent to the device.'            
capacityReduction:
  type: integer
  minimum: 0
  maximum: 100
  description: 'Percentage of each load group’s kW capacity (if specified), 
               which determines the amount of kW reduction that must occur 
               before control can stop.'  
whenToChangeFields:
  required:
    - whenToChange
    - triggerNumber
    - triggerOffset
    - changePriority
    - changeDurationInMinutes
  type: object
  properties:
    whenToChange:
      type: string
      enum:
        - None
        - Duration
        - Priority
        - TriggerOffset
      description: 'None – The gear switches only when it is manually switched.
                    Duration – The gear switches when the duration ends.
                    Priority – The gear switches when the priority of the control area reaches the change priority.
                    TriggerOffset – Triggers are defined in Control Areas. 
                    The gear changes when the Control Area threshold value reaches the
                    trigger plus the offset value in the Trigger Offset.'
    changeDurationInMinutes:
      type: integer
      minimum: 0
      maximum: 99999
      description: 'Change duration (in minutes). When whenToChange type is Duration then 
                     this field is required.' 
    changePriority:
      type: integer
      minimum: 0
      maximum: 9999
      description: 'Change priority. When whenToChange type is Priority then 
                     this field is required.'
    triggerNumber:
      type: integer
      minimum: 1
      maximum: 99999
      description: 'Trigger number. When whenToChange type is TriggerOffset then 
                     this field is required.'
    triggerOffset:
      type: number
      minimum: -99999.9999
      maximum: 99999.9999
      description: 'Trigger offset. When whenToChange type is TriggerOffset then 
                     this field is required.'        
           
id:
  title: id
  type: object
  properties:
    id:
      type: integer
      description: 'Unique identifier of the load program.'

components:
  examples:
    SEP Program: 
      value:
        name: Test SEP Program
        type: LM_SEP_PROGRAM
        operationalState: Automatic
        constraint:
          constraintId: 0
          constraintName: Default Constraint
        triggerOffset: 0
        restoreOffset: 0
        gears:
          - gearId: 0
            gearName: SEP Cycle
            gearNumber: 1
            controlMethod: SepCycle
            fields:
              rampIn: true
              rampOut: true
              trueCycle: true
              controlPercent: 50
              criticality: 6
              howToStopControl: TimeIn
              capacityReduction: 100
              whenToChangeFields:
                whenToChange: None
        assignedGroups:
          - groupId: 54
            groupName: DigiSEP
            groupOrder: 1
            type: LM_GROUP_DIGI_SEP
            
    ecobee Program:
      value:
        name: TestEcobee
        type: LM_ECOBEE_PROGRAM
        operationalState: Automatic
        constraint:
          constraintId: 0
        triggerOffset: 1
        restoreOffset: 2
        gears:
          - gearName: EcobeeSetpoint Gear1
            gearNumber: 1
            controlMethod: EcobeeSetpoint
            fields:
              mandatory: true
              setpointOffset: -9
              mode: HEAT
              howToStopControl: Restore
              capacityReduction: 100
              whenToChangeFields:
                whenToChange: None
          - gearName: EcobeeSetpoint Gear2
            gearNumber: 2
            controlMethod: EcobeeSetpoint
            fields:
              mandatory: true
              setpointOffset: 7
              mode: HEAT
              howToStopControl: Restore
              capacityReduction: 100
              whenToChangeFields:
                whenToChange: None
        controlWindow:
          controlWindowOne:
            availableStartTimeInMinutes: 120
            availableStopTimeInMinutes: 300
        assignedGroups:
          - groupId: 17588
            groupName: ecobeeLoadGroup
            type: LM_GROUP_ECOBEE
        notification:
          notifyOnAdjust: false
          enableOnSchedule: false
          assignedNotificationGroups:
            - notificationGrpID: 2
              notificationGrpName: Jess Notification

    
    Direct Program:
      value:  
        name: LMDirectTest001
        type: LM_DIRECT_PROGRAM
        operationalState: Automatic
        constraint:
          constraintId: 2
          constraintName: '123444'
        triggerOffset: 12
        restoreOffset: 21
        gears:
          - gearName: GearSmartCycle
            gearNumber: 2
            controlMethod: SmartCycle
            fields:
              noRamp: false
              controlPercent: 50
              cyclePeriodInMinutes: 30
              cycleCountSendType: FixedCount
              maxCycleCount: 0
              startingPeriodCount: 8
              sendRate: 3600
              stopCommandRepeat: 0
              howToStopControl: StopCycle
              capacityReduction: 100
              whenToChangeFields:
                whenToChange: None
          - gearName: GearMasterCycle
            gearNumber: 3
            controlMethod: MasterCycle
            fields:
              controlPercent: 50
              cyclePeriodInMinutes: 30
              groupSelectionMethod: LastControlled
              howToStopControl: TimeIn
              capacityReduction: 100
              whenToChangeFields:
                whenToChange: None
          - gearName: GearRotation
            gearNumber: 4
            controlMethod: Rotation
            fields:
              shedTime: 300
              numberOfGroups: 0
              sendRate: 1800
              groupSelectionMethod: LastControlled
              howToStopControl: TimeIn
              capacityReduction: 100
              whenToChangeFields:
                whenToChange: None
          - gearName: GearTrueCycle
            gearNumber: 5
            controlMethod: TrueCycle
            fields:
              noRamp: false
              controlPercent: 50
              cyclePeriodInMinutes: 30
              cycleCountSendType: FixedCount
              maxCycleCount: 0
              startingPeriodCount: 8
              sendRate: 3600
              stopCommandRepeat: 0
              howToStopControl: StopCycle
              capacityReduction: 100
              whenToChangeFields:
                whenToChange: None
          - gearName: GearMagnitude
            gearNumber: 6
            controlMethod: MagnitudeCycle
            fields:
              noRamp: false
              controlPercent: 50
              cyclePeriodInMinutes: 30
              cycleCountSendType: FixedCount
              maxCycleCount: 0
              startingPeriodCount: 8
              sendRate: 3600
              stopCommandRepeat: 0
              howToStopControl: StopCycle
              capacityReduction: 100
              whenToChangeFields:
                whenToChange: None
          - gearName: GearTargetCycle
            gearNumber: 7
            controlMethod: TargetCycle
            fields:
              noRamp: false
              controlPercent: 50
              cycleCountSendType: FixedCount
              maxCycleCount: 0
              startingPeriodCount: 8
              sendRate: 3600
              stopCommandRepeat: 0
              howToStopControl: StopCycle
              capacityReduction: 100
              kWReduction: 0
              whenToChangeFields:
                whenToChange: None
              cyclePeriodInMinutes: 30
          - gearName: GearSimpleThermo
            gearNumber: 9
            controlMethod: SimpleThermostatRamping
            fields:
              mode: COOL
              randomStartTimeInMinutes: 60
              preOpTemp: 4
              preOpTimeInMinutes: 120
              preOpHoldInMinutes: 120
              rampPerHour: 0.4
              max: 4
              rampOutTimeInMinutes: 120
              maxRuntimeInMinutes: 480
              howToStopControl: TimeIn
              whenToChangeFields:
                whenToChange: None
          - gearName: GearBeatThePeak
            gearNumber: 10
            controlMethod: BeatThePeak
            fields:
              indicator: Yellow
              timeoutInMinutes: 0
              resendInMinutes: 0
              whenToChangeFields:
                whenToChange: None
          - gearName: GearNoControl
            gearNumber: 11
            controlMethod: NoControl
            fields:
              whenToChangeFields:
                whenToChange: None
        assignedGroups:
          - groupId: 11705
            groupName: E1
            type: LM_GROUP_EMETCON
        notification:
          programStartInMinutes: 34
          programStopInMinutes: 56
          notifyOnAdjust: true
          enableOnSchedule: true
          assignedNotificationGroups:
            - notificationGrpID: 2
              notificationGrpName: Jess Notification

      
    Meter Disconnect Program:
      value:    
        name: Test Meter Disconnect
        type: LM_METER_DISCONNECT_PROGRAM
        operationalState: Automatic
        constraint:
          constraintId: 2
          constraintName: constraint1
        triggerOffset: 11
        restoreOffset: 0
        gears:
          - gearName: gear001
            gearNumber: 1
            controlMethod: MeterDisconnect
        assignedGroups:
          - groupId: 15006
            groupName: testmd01
            groupOrder: 1
            type: LM_GROUP_METER_DISCONNECT
          - groupId: 14949
            groupName: testmd02
            groupOrder: 2
            type: LM_GROUP_METER_DISCONNECT
        controlWindow:
          controlWindowOne:
            availableStartTimeInMinutes: 540
            availableStopTimeInMinutes: 360
          controlWindowTwo:
            availableStartTimeInMinutes: 8
            availableStopTimeInMinutes: 8
    
    Itron Program:
      value:       
        name: ItronProgramTest
        type: LM_ITRON_PROGRAM
        operationalState: Automatic
        constraint:
          constraintId: 95
        triggerOffset: 1
        restoreOffset: 2
        gears:
          - gearName: TestGear1
            gearNumber: 1
            controlMethod: ItronCycle
            fields:
              dutyCycleType: STANDARD
              rampIn: true
              rampOut: true
              dutyCyclePercent: 95
              dutyCyclePeriodInMinutes: 30
              criticality: 97
              capacityReduction: 93
              howToStopControl: Restore
              whenToChangeFields:
                whenToChange: None
        controlWindow:
          controlWindowOne:
            availableStartTimeInMinutes: 0
            availableStopTimeInMinutes: 0
          controlWindowTwo:
            availableStartTimeInMinutes: 1
            availableStopTimeInMinutes: 5
        assignedGroups:
          - groupId: 48207
            groupName: ItronTest
            type: LM_GROUP_ITRON
        notification:
          notifyOnAdjust: false
          enableOnSchedule: false
          assignedNotificationGroups:
            - notificationGrpID: 2
              notificationGrpName: Jess Notification

    Eaton Cloud Program:
      value:       
        name: EatonCloudProgramTest
        type: LM_EATON_CLOUD_PROGRAM
        operationalState: Automatic
        constraint:
          constraintId: 95
        triggerOffset: 1
        restoreOffset: 2
        gears:
          - gearName: TestGear1
            gearNumber: 1
            controlMethod: EatonCycle
            fields:
              dutyCycleType: STANDARD
              rampIn: true
              rampOut: true
              dutyCyclePercent: 95
              dutyCyclePeriodInMinutes: 30
              criticality: 97
              capacityReduction: 93
              howToStopControl: Restore
              whenToChangeFields:
                whenToChange: None
          - gearName: GearNoControl
            gearNumber: 11
            controlMethod: NoControl
            fields:
              whenToChangeFields:
                whenToChange: None
        controlWindow:
          controlWindowOne:
            availableStartTimeInMinutes: 0
            availableStopTimeInMinutes: 0
          controlWindowTwo:
            availableStartTimeInMinutes: 1
            availableStopTimeInMinutes: 5
        assignedGroups:
          - groupId: 49236
            groupName: EatonCloudTest
            type: LM_GROUP_EATON_CLOUD
        notification:
          notifyOnAdjust: false
          enableOnSchedule: false
          assignedNotificationGroups:
            - notificationGrpID: 2
              notificationGrpName: Jess Notification

    HoneyWell Program:
      value:     
        name: Honeywell Program001
        type: LM_HONEYWELL_PROGRAM
        operationalState: Timed
        constraint:
          constraintId: 0
          constraintName: Default Constraint
        triggerOffset: 0
        restoreOffset: 0
        gears:
          - gearName: HW Cycle
            gearNumber: 1
            controlMethod: HoneywellCycle
            fields:
              mandatory: true
              rampInOut: true
              controlPercent: 50
              cyclePeriodInMinutes: 30
              howToStopControl: Restore
              capacityReduction: 100
              whenToChangeFields:
                whenToChange: None
          - gearName: HW Setpoint
            gearNumber: 2
            controlMethod: HoneywellSetpoint
            fields:
              mandatory: true
              setpointOffset: 3
              mode: COOL
              howToStopControl: Restore
              capacityReduction: 100
              whenToChangeFields:
                whenToChange: None
        controlWindow:
          controlWindowOne:
            availableStartTimeInMinutes: 540
            availableStopTimeInMinutes: 360
          controlWindowTwo:
            availableStartTimeInMinutes: 660
            availableStopTimeInMinutes: 22
        assignedGroups:
          - groupId: 15851
            groupName: LM_GROUP_HONEYWELL_Name
            groupOrder: 1
            type: LM_GROUP_HONEYWELL

    id:
      value:
        id: 39223
    