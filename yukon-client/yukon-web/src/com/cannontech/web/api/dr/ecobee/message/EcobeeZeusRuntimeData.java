// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ecobee_message.proto

package com.cannontech.web.api.dr.ecobee.message;

public final class EcobeeZeusRuntimeData {
  private EcobeeZeusRuntimeData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ecp_thermostat_messageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_message)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
     * @return Whether the messageTimeUtc field is set.
     */
    boolean hasMessageTimeUtc();
    /**
     * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
     * @return The messageTimeUtc.
     */
    com.google.protobuf.Timestamp getMessageTimeUtc();
    /**
     * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
     */
    com.google.protobuf.TimestampOrBuilder getMessageTimeUtcOrBuilder();

    /**
     * <code>int64 message_sequence_number_annual = 2;</code>
     * @return The messageSequenceNumberAnnual.
     */
    long getMessageSequenceNumberAnnual();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
     * @return Whether the thermostatInfo field is set.
     */
    boolean hasThermostatInfo();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
     * @return The thermostatInfo.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info getThermostatInfo();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_infoOrBuilder getThermostatInfoOrBuilder();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
     * @return Whether the thermostatSettings field is set.
     */
    boolean hasThermostatSettings();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
     * @return The thermostatSettings.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings getThermostatSettings();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settingsOrBuilder getThermostatSettingsOrBuilder();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
     * @return Whether the thermostatState field is set.
     */
    boolean hasThermostatState();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
     * @return The thermostatState.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state getThermostatState();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_stateOrBuilder getThermostatStateOrBuilder();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
     * @return Whether the thermostatProgram field is set.
     */
    boolean hasThermostatProgram();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
     * @return The thermostatProgram.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program getThermostatProgram();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_programOrBuilder getThermostatProgramOrBuilder();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
     * @return Whether the thermostatRuntime field is set.
     */
    boolean hasThermostatRuntime();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
     * @return The thermostatRuntime.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime getThermostatRuntime();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtimeOrBuilder getThermostatRuntimeOrBuilder();
  }
  /**
   * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_message}
   */
  public static final class ecp_thermostat_message extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_message)
      ecp_thermostat_messageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ecp_thermostat_message.newBuilder() to construct.
    private ecp_thermostat_message(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ecp_thermostat_message() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ecp_thermostat_message();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ecp_thermostat_message(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (messageTimeUtc_ != null) {
                subBuilder = messageTimeUtc_.toBuilder();
              }
              messageTimeUtc_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(messageTimeUtc_);
                messageTimeUtc_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              messageSequenceNumberAnnual_ = input.readInt64();
              break;
            }
            case 26: {
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.Builder subBuilder = null;
              if (thermostatInfo_ != null) {
                subBuilder = thermostatInfo_.toBuilder();
              }
              thermostatInfo_ = input.readMessage(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(thermostatInfo_);
                thermostatInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.Builder subBuilder = null;
              if (thermostatSettings_ != null) {
                subBuilder = thermostatSettings_.toBuilder();
              }
              thermostatSettings_ = input.readMessage(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(thermostatSettings_);
                thermostatSettings_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.Builder subBuilder = null;
              if (thermostatState_ != null) {
                subBuilder = thermostatState_.toBuilder();
              }
              thermostatState_ = input.readMessage(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(thermostatState_);
                thermostatState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.Builder subBuilder = null;
              if (thermostatProgram_ != null) {
                subBuilder = thermostatProgram_.toBuilder();
              }
              thermostatProgram_ = input.readMessage(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(thermostatProgram_);
                thermostatProgram_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.Builder subBuilder = null;
              if (thermostatRuntime_ != null) {
                subBuilder = thermostatRuntime_.toBuilder();
              }
              thermostatRuntime_ = input.readMessage(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(thermostatRuntime_);
                thermostatRuntime_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_message_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message.Builder.class);
    }

    public static final int MESSAGE_TIME_UTC_FIELD_NUMBER = 1;
    private com.google.protobuf.Timestamp messageTimeUtc_;
    /**
     * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
     * @return Whether the messageTimeUtc field is set.
     */
    @java.lang.Override
    public boolean hasMessageTimeUtc() {
      return messageTimeUtc_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
     * @return The messageTimeUtc.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getMessageTimeUtc() {
      return messageTimeUtc_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : messageTimeUtc_;
    }
    /**
     * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getMessageTimeUtcOrBuilder() {
      return getMessageTimeUtc();
    }

    public static final int MESSAGE_SEQUENCE_NUMBER_ANNUAL_FIELD_NUMBER = 2;
    private long messageSequenceNumberAnnual_;
    /**
     * <code>int64 message_sequence_number_annual = 2;</code>
     * @return The messageSequenceNumberAnnual.
     */
    @java.lang.Override
    public long getMessageSequenceNumberAnnual() {
      return messageSequenceNumberAnnual_;
    }

    public static final int THERMOSTAT_INFO_FIELD_NUMBER = 3;
    private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info thermostatInfo_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
     * @return Whether the thermostatInfo field is set.
     */
    @java.lang.Override
    public boolean hasThermostatInfo() {
      return thermostatInfo_ != null;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
     * @return The thermostatInfo.
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info getThermostatInfo() {
      return thermostatInfo_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.getDefaultInstance() : thermostatInfo_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_infoOrBuilder getThermostatInfoOrBuilder() {
      return getThermostatInfo();
    }

    public static final int THERMOSTAT_SETTINGS_FIELD_NUMBER = 4;
    private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings thermostatSettings_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
     * @return Whether the thermostatSettings field is set.
     */
    @java.lang.Override
    public boolean hasThermostatSettings() {
      return thermostatSettings_ != null;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
     * @return The thermostatSettings.
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings getThermostatSettings() {
      return thermostatSettings_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.getDefaultInstance() : thermostatSettings_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settingsOrBuilder getThermostatSettingsOrBuilder() {
      return getThermostatSettings();
    }

    public static final int THERMOSTAT_STATE_FIELD_NUMBER = 5;
    private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state thermostatState_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
     * @return Whether the thermostatState field is set.
     */
    @java.lang.Override
    public boolean hasThermostatState() {
      return thermostatState_ != null;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
     * @return The thermostatState.
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state getThermostatState() {
      return thermostatState_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.getDefaultInstance() : thermostatState_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_stateOrBuilder getThermostatStateOrBuilder() {
      return getThermostatState();
    }

    public static final int THERMOSTAT_PROGRAM_FIELD_NUMBER = 6;
    private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program thermostatProgram_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
     * @return Whether the thermostatProgram field is set.
     */
    @java.lang.Override
    public boolean hasThermostatProgram() {
      return thermostatProgram_ != null;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
     * @return The thermostatProgram.
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program getThermostatProgram() {
      return thermostatProgram_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.getDefaultInstance() : thermostatProgram_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_programOrBuilder getThermostatProgramOrBuilder() {
      return getThermostatProgram();
    }

    public static final int THERMOSTAT_RUNTIME_FIELD_NUMBER = 7;
    private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime thermostatRuntime_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
     * @return Whether the thermostatRuntime field is set.
     */
    @java.lang.Override
    public boolean hasThermostatRuntime() {
      return thermostatRuntime_ != null;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
     * @return The thermostatRuntime.
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime getThermostatRuntime() {
      return thermostatRuntime_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.getDefaultInstance() : thermostatRuntime_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtimeOrBuilder getThermostatRuntimeOrBuilder() {
      return getThermostatRuntime();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (messageTimeUtc_ != null) {
        output.writeMessage(1, getMessageTimeUtc());
      }
      if (messageSequenceNumberAnnual_ != 0L) {
        output.writeInt64(2, messageSequenceNumberAnnual_);
      }
      if (thermostatInfo_ != null) {
        output.writeMessage(3, getThermostatInfo());
      }
      if (thermostatSettings_ != null) {
        output.writeMessage(4, getThermostatSettings());
      }
      if (thermostatState_ != null) {
        output.writeMessage(5, getThermostatState());
      }
      if (thermostatProgram_ != null) {
        output.writeMessage(6, getThermostatProgram());
      }
      if (thermostatRuntime_ != null) {
        output.writeMessage(7, getThermostatRuntime());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (messageTimeUtc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMessageTimeUtc());
      }
      if (messageSequenceNumberAnnual_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, messageSequenceNumberAnnual_);
      }
      if (thermostatInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getThermostatInfo());
      }
      if (thermostatSettings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getThermostatSettings());
      }
      if (thermostatState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getThermostatState());
      }
      if (thermostatProgram_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getThermostatProgram());
      }
      if (thermostatRuntime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getThermostatRuntime());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message)) {
        return super.equals(obj);
      }
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message other = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message) obj;

      if (hasMessageTimeUtc() != other.hasMessageTimeUtc()) return false;
      if (hasMessageTimeUtc()) {
        if (!getMessageTimeUtc()
            .equals(other.getMessageTimeUtc())) return false;
      }
      if (getMessageSequenceNumberAnnual()
          != other.getMessageSequenceNumberAnnual()) return false;
      if (hasThermostatInfo() != other.hasThermostatInfo()) return false;
      if (hasThermostatInfo()) {
        if (!getThermostatInfo()
            .equals(other.getThermostatInfo())) return false;
      }
      if (hasThermostatSettings() != other.hasThermostatSettings()) return false;
      if (hasThermostatSettings()) {
        if (!getThermostatSettings()
            .equals(other.getThermostatSettings())) return false;
      }
      if (hasThermostatState() != other.hasThermostatState()) return false;
      if (hasThermostatState()) {
        if (!getThermostatState()
            .equals(other.getThermostatState())) return false;
      }
      if (hasThermostatProgram() != other.hasThermostatProgram()) return false;
      if (hasThermostatProgram()) {
        if (!getThermostatProgram()
            .equals(other.getThermostatProgram())) return false;
      }
      if (hasThermostatRuntime() != other.hasThermostatRuntime()) return false;
      if (hasThermostatRuntime()) {
        if (!getThermostatRuntime()
            .equals(other.getThermostatRuntime())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMessageTimeUtc()) {
        hash = (37 * hash) + MESSAGE_TIME_UTC_FIELD_NUMBER;
        hash = (53 * hash) + getMessageTimeUtc().hashCode();
      }
      hash = (37 * hash) + MESSAGE_SEQUENCE_NUMBER_ANNUAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMessageSequenceNumberAnnual());
      if (hasThermostatInfo()) {
        hash = (37 * hash) + THERMOSTAT_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getThermostatInfo().hashCode();
      }
      if (hasThermostatSettings()) {
        hash = (37 * hash) + THERMOSTAT_SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getThermostatSettings().hashCode();
      }
      if (hasThermostatState()) {
        hash = (37 * hash) + THERMOSTAT_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getThermostatState().hashCode();
      }
      if (hasThermostatProgram()) {
        hash = (37 * hash) + THERMOSTAT_PROGRAM_FIELD_NUMBER;
        hash = (53 * hash) + getThermostatProgram().hashCode();
      }
      if (hasThermostatRuntime()) {
        hash = (37 * hash) + THERMOSTAT_RUNTIME_FIELD_NUMBER;
        hash = (53 * hash) + getThermostatRuntime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_message}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_message)
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_messageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_message_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message.Builder.class);
      }

      // Construct using com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (messageTimeUtcBuilder_ == null) {
          messageTimeUtc_ = null;
        } else {
          messageTimeUtc_ = null;
          messageTimeUtcBuilder_ = null;
        }
        messageSequenceNumberAnnual_ = 0L;

        if (thermostatInfoBuilder_ == null) {
          thermostatInfo_ = null;
        } else {
          thermostatInfo_ = null;
          thermostatInfoBuilder_ = null;
        }
        if (thermostatSettingsBuilder_ == null) {
          thermostatSettings_ = null;
        } else {
          thermostatSettings_ = null;
          thermostatSettingsBuilder_ = null;
        }
        if (thermostatStateBuilder_ == null) {
          thermostatState_ = null;
        } else {
          thermostatState_ = null;
          thermostatStateBuilder_ = null;
        }
        if (thermostatProgramBuilder_ == null) {
          thermostatProgram_ = null;
        } else {
          thermostatProgram_ = null;
          thermostatProgramBuilder_ = null;
        }
        if (thermostatRuntimeBuilder_ == null) {
          thermostatRuntime_ = null;
        } else {
          thermostatRuntime_ = null;
          thermostatRuntimeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_message_descriptor;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message getDefaultInstanceForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message.getDefaultInstance();
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message build() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message buildPartial() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message result = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message(this);
        if (messageTimeUtcBuilder_ == null) {
          result.messageTimeUtc_ = messageTimeUtc_;
        } else {
          result.messageTimeUtc_ = messageTimeUtcBuilder_.build();
        }
        result.messageSequenceNumberAnnual_ = messageSequenceNumberAnnual_;
        if (thermostatInfoBuilder_ == null) {
          result.thermostatInfo_ = thermostatInfo_;
        } else {
          result.thermostatInfo_ = thermostatInfoBuilder_.build();
        }
        if (thermostatSettingsBuilder_ == null) {
          result.thermostatSettings_ = thermostatSettings_;
        } else {
          result.thermostatSettings_ = thermostatSettingsBuilder_.build();
        }
        if (thermostatStateBuilder_ == null) {
          result.thermostatState_ = thermostatState_;
        } else {
          result.thermostatState_ = thermostatStateBuilder_.build();
        }
        if (thermostatProgramBuilder_ == null) {
          result.thermostatProgram_ = thermostatProgram_;
        } else {
          result.thermostatProgram_ = thermostatProgramBuilder_.build();
        }
        if (thermostatRuntimeBuilder_ == null) {
          result.thermostatRuntime_ = thermostatRuntime_;
        } else {
          result.thermostatRuntime_ = thermostatRuntimeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message) {
          return mergeFrom((com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message other) {
        if (other == com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message.getDefaultInstance()) return this;
        if (other.hasMessageTimeUtc()) {
          mergeMessageTimeUtc(other.getMessageTimeUtc());
        }
        if (other.getMessageSequenceNumberAnnual() != 0L) {
          setMessageSequenceNumberAnnual(other.getMessageSequenceNumberAnnual());
        }
        if (other.hasThermostatInfo()) {
          mergeThermostatInfo(other.getThermostatInfo());
        }
        if (other.hasThermostatSettings()) {
          mergeThermostatSettings(other.getThermostatSettings());
        }
        if (other.hasThermostatState()) {
          mergeThermostatState(other.getThermostatState());
        }
        if (other.hasThermostatProgram()) {
          mergeThermostatProgram(other.getThermostatProgram());
        }
        if (other.hasThermostatRuntime()) {
          mergeThermostatRuntime(other.getThermostatRuntime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Timestamp messageTimeUtc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> messageTimeUtcBuilder_;
      /**
       * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
       * @return Whether the messageTimeUtc field is set.
       */
      public boolean hasMessageTimeUtc() {
        return messageTimeUtcBuilder_ != null || messageTimeUtc_ != null;
      }
      /**
       * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
       * @return The messageTimeUtc.
       */
      public com.google.protobuf.Timestamp getMessageTimeUtc() {
        if (messageTimeUtcBuilder_ == null) {
          return messageTimeUtc_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : messageTimeUtc_;
        } else {
          return messageTimeUtcBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
       */
      public Builder setMessageTimeUtc(com.google.protobuf.Timestamp value) {
        if (messageTimeUtcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageTimeUtc_ = value;
          onChanged();
        } else {
          messageTimeUtcBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
       */
      public Builder setMessageTimeUtc(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (messageTimeUtcBuilder_ == null) {
          messageTimeUtc_ = builderForValue.build();
          onChanged();
        } else {
          messageTimeUtcBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
       */
      public Builder mergeMessageTimeUtc(com.google.protobuf.Timestamp value) {
        if (messageTimeUtcBuilder_ == null) {
          if (messageTimeUtc_ != null) {
            messageTimeUtc_ =
              com.google.protobuf.Timestamp.newBuilder(messageTimeUtc_).mergeFrom(value).buildPartial();
          } else {
            messageTimeUtc_ = value;
          }
          onChanged();
        } else {
          messageTimeUtcBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
       */
      public Builder clearMessageTimeUtc() {
        if (messageTimeUtcBuilder_ == null) {
          messageTimeUtc_ = null;
          onChanged();
        } else {
          messageTimeUtc_ = null;
          messageTimeUtcBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getMessageTimeUtcBuilder() {
        
        onChanged();
        return getMessageTimeUtcFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getMessageTimeUtcOrBuilder() {
        if (messageTimeUtcBuilder_ != null) {
          return messageTimeUtcBuilder_.getMessageOrBuilder();
        } else {
          return messageTimeUtc_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : messageTimeUtc_;
        }
      }
      /**
       * <code>.google.protobuf.Timestamp message_time_utc = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getMessageTimeUtcFieldBuilder() {
        if (messageTimeUtcBuilder_ == null) {
          messageTimeUtcBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getMessageTimeUtc(),
                  getParentForChildren(),
                  isClean());
          messageTimeUtc_ = null;
        }
        return messageTimeUtcBuilder_;
      }

      private long messageSequenceNumberAnnual_ ;
      /**
       * <code>int64 message_sequence_number_annual = 2;</code>
       * @return The messageSequenceNumberAnnual.
       */
      @java.lang.Override
      public long getMessageSequenceNumberAnnual() {
        return messageSequenceNumberAnnual_;
      }
      /**
       * <code>int64 message_sequence_number_annual = 2;</code>
       * @param value The messageSequenceNumberAnnual to set.
       * @return This builder for chaining.
       */
      public Builder setMessageSequenceNumberAnnual(long value) {
        
        messageSequenceNumberAnnual_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 message_sequence_number_annual = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageSequenceNumberAnnual() {
        
        messageSequenceNumberAnnual_ = 0L;
        onChanged();
        return this;
      }

      private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info thermostatInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_infoOrBuilder> thermostatInfoBuilder_;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
       * @return Whether the thermostatInfo field is set.
       */
      public boolean hasThermostatInfo() {
        return thermostatInfoBuilder_ != null || thermostatInfo_ != null;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
       * @return The thermostatInfo.
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info getThermostatInfo() {
        if (thermostatInfoBuilder_ == null) {
          return thermostatInfo_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.getDefaultInstance() : thermostatInfo_;
        } else {
          return thermostatInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
       */
      public Builder setThermostatInfo(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info value) {
        if (thermostatInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          thermostatInfo_ = value;
          onChanged();
        } else {
          thermostatInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
       */
      public Builder setThermostatInfo(
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.Builder builderForValue) {
        if (thermostatInfoBuilder_ == null) {
          thermostatInfo_ = builderForValue.build();
          onChanged();
        } else {
          thermostatInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
       */
      public Builder mergeThermostatInfo(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info value) {
        if (thermostatInfoBuilder_ == null) {
          if (thermostatInfo_ != null) {
            thermostatInfo_ =
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.newBuilder(thermostatInfo_).mergeFrom(value).buildPartial();
          } else {
            thermostatInfo_ = value;
          }
          onChanged();
        } else {
          thermostatInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
       */
      public Builder clearThermostatInfo() {
        if (thermostatInfoBuilder_ == null) {
          thermostatInfo_ = null;
          onChanged();
        } else {
          thermostatInfo_ = null;
          thermostatInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.Builder getThermostatInfoBuilder() {
        
        onChanged();
        return getThermostatInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_infoOrBuilder getThermostatInfoOrBuilder() {
        if (thermostatInfoBuilder_ != null) {
          return thermostatInfoBuilder_.getMessageOrBuilder();
        } else {
          return thermostatInfo_ == null ?
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.getDefaultInstance() : thermostatInfo_;
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info thermostat_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_infoOrBuilder> 
          getThermostatInfoFieldBuilder() {
        if (thermostatInfoBuilder_ == null) {
          thermostatInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_infoOrBuilder>(
                  getThermostatInfo(),
                  getParentForChildren(),
                  isClean());
          thermostatInfo_ = null;
        }
        return thermostatInfoBuilder_;
      }

      private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings thermostatSettings_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settingsOrBuilder> thermostatSettingsBuilder_;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
       * @return Whether the thermostatSettings field is set.
       */
      public boolean hasThermostatSettings() {
        return thermostatSettingsBuilder_ != null || thermostatSettings_ != null;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
       * @return The thermostatSettings.
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings getThermostatSettings() {
        if (thermostatSettingsBuilder_ == null) {
          return thermostatSettings_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.getDefaultInstance() : thermostatSettings_;
        } else {
          return thermostatSettingsBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
       */
      public Builder setThermostatSettings(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings value) {
        if (thermostatSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          thermostatSettings_ = value;
          onChanged();
        } else {
          thermostatSettingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
       */
      public Builder setThermostatSettings(
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.Builder builderForValue) {
        if (thermostatSettingsBuilder_ == null) {
          thermostatSettings_ = builderForValue.build();
          onChanged();
        } else {
          thermostatSettingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
       */
      public Builder mergeThermostatSettings(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings value) {
        if (thermostatSettingsBuilder_ == null) {
          if (thermostatSettings_ != null) {
            thermostatSettings_ =
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.newBuilder(thermostatSettings_).mergeFrom(value).buildPartial();
          } else {
            thermostatSettings_ = value;
          }
          onChanged();
        } else {
          thermostatSettingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
       */
      public Builder clearThermostatSettings() {
        if (thermostatSettingsBuilder_ == null) {
          thermostatSettings_ = null;
          onChanged();
        } else {
          thermostatSettings_ = null;
          thermostatSettingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.Builder getThermostatSettingsBuilder() {
        
        onChanged();
        return getThermostatSettingsFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settingsOrBuilder getThermostatSettingsOrBuilder() {
        if (thermostatSettingsBuilder_ != null) {
          return thermostatSettingsBuilder_.getMessageOrBuilder();
        } else {
          return thermostatSettings_ == null ?
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.getDefaultInstance() : thermostatSettings_;
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings thermostat_settings = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settingsOrBuilder> 
          getThermostatSettingsFieldBuilder() {
        if (thermostatSettingsBuilder_ == null) {
          thermostatSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settingsOrBuilder>(
                  getThermostatSettings(),
                  getParentForChildren(),
                  isClean());
          thermostatSettings_ = null;
        }
        return thermostatSettingsBuilder_;
      }

      private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state thermostatState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_stateOrBuilder> thermostatStateBuilder_;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
       * @return Whether the thermostatState field is set.
       */
      public boolean hasThermostatState() {
        return thermostatStateBuilder_ != null || thermostatState_ != null;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
       * @return The thermostatState.
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state getThermostatState() {
        if (thermostatStateBuilder_ == null) {
          return thermostatState_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.getDefaultInstance() : thermostatState_;
        } else {
          return thermostatStateBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
       */
      public Builder setThermostatState(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state value) {
        if (thermostatStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          thermostatState_ = value;
          onChanged();
        } else {
          thermostatStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
       */
      public Builder setThermostatState(
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.Builder builderForValue) {
        if (thermostatStateBuilder_ == null) {
          thermostatState_ = builderForValue.build();
          onChanged();
        } else {
          thermostatStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
       */
      public Builder mergeThermostatState(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state value) {
        if (thermostatStateBuilder_ == null) {
          if (thermostatState_ != null) {
            thermostatState_ =
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.newBuilder(thermostatState_).mergeFrom(value).buildPartial();
          } else {
            thermostatState_ = value;
          }
          onChanged();
        } else {
          thermostatStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
       */
      public Builder clearThermostatState() {
        if (thermostatStateBuilder_ == null) {
          thermostatState_ = null;
          onChanged();
        } else {
          thermostatState_ = null;
          thermostatStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.Builder getThermostatStateBuilder() {
        
        onChanged();
        return getThermostatStateFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_stateOrBuilder getThermostatStateOrBuilder() {
        if (thermostatStateBuilder_ != null) {
          return thermostatStateBuilder_.getMessageOrBuilder();
        } else {
          return thermostatState_ == null ?
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.getDefaultInstance() : thermostatState_;
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state thermostat_state = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_stateOrBuilder> 
          getThermostatStateFieldBuilder() {
        if (thermostatStateBuilder_ == null) {
          thermostatStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_stateOrBuilder>(
                  getThermostatState(),
                  getParentForChildren(),
                  isClean());
          thermostatState_ = null;
        }
        return thermostatStateBuilder_;
      }

      private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program thermostatProgram_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_programOrBuilder> thermostatProgramBuilder_;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
       * @return Whether the thermostatProgram field is set.
       */
      public boolean hasThermostatProgram() {
        return thermostatProgramBuilder_ != null || thermostatProgram_ != null;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
       * @return The thermostatProgram.
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program getThermostatProgram() {
        if (thermostatProgramBuilder_ == null) {
          return thermostatProgram_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.getDefaultInstance() : thermostatProgram_;
        } else {
          return thermostatProgramBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
       */
      public Builder setThermostatProgram(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program value) {
        if (thermostatProgramBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          thermostatProgram_ = value;
          onChanged();
        } else {
          thermostatProgramBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
       */
      public Builder setThermostatProgram(
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.Builder builderForValue) {
        if (thermostatProgramBuilder_ == null) {
          thermostatProgram_ = builderForValue.build();
          onChanged();
        } else {
          thermostatProgramBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
       */
      public Builder mergeThermostatProgram(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program value) {
        if (thermostatProgramBuilder_ == null) {
          if (thermostatProgram_ != null) {
            thermostatProgram_ =
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.newBuilder(thermostatProgram_).mergeFrom(value).buildPartial();
          } else {
            thermostatProgram_ = value;
          }
          onChanged();
        } else {
          thermostatProgramBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
       */
      public Builder clearThermostatProgram() {
        if (thermostatProgramBuilder_ == null) {
          thermostatProgram_ = null;
          onChanged();
        } else {
          thermostatProgram_ = null;
          thermostatProgramBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.Builder getThermostatProgramBuilder() {
        
        onChanged();
        return getThermostatProgramFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_programOrBuilder getThermostatProgramOrBuilder() {
        if (thermostatProgramBuilder_ != null) {
          return thermostatProgramBuilder_.getMessageOrBuilder();
        } else {
          return thermostatProgram_ == null ?
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.getDefaultInstance() : thermostatProgram_;
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program thermostat_program = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_programOrBuilder> 
          getThermostatProgramFieldBuilder() {
        if (thermostatProgramBuilder_ == null) {
          thermostatProgramBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_programOrBuilder>(
                  getThermostatProgram(),
                  getParentForChildren(),
                  isClean());
          thermostatProgram_ = null;
        }
        return thermostatProgramBuilder_;
      }

      private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime thermostatRuntime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtimeOrBuilder> thermostatRuntimeBuilder_;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
       * @return Whether the thermostatRuntime field is set.
       */
      public boolean hasThermostatRuntime() {
        return thermostatRuntimeBuilder_ != null || thermostatRuntime_ != null;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
       * @return The thermostatRuntime.
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime getThermostatRuntime() {
        if (thermostatRuntimeBuilder_ == null) {
          return thermostatRuntime_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.getDefaultInstance() : thermostatRuntime_;
        } else {
          return thermostatRuntimeBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
       */
      public Builder setThermostatRuntime(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime value) {
        if (thermostatRuntimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          thermostatRuntime_ = value;
          onChanged();
        } else {
          thermostatRuntimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
       */
      public Builder setThermostatRuntime(
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.Builder builderForValue) {
        if (thermostatRuntimeBuilder_ == null) {
          thermostatRuntime_ = builderForValue.build();
          onChanged();
        } else {
          thermostatRuntimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
       */
      public Builder mergeThermostatRuntime(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime value) {
        if (thermostatRuntimeBuilder_ == null) {
          if (thermostatRuntime_ != null) {
            thermostatRuntime_ =
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.newBuilder(thermostatRuntime_).mergeFrom(value).buildPartial();
          } else {
            thermostatRuntime_ = value;
          }
          onChanged();
        } else {
          thermostatRuntimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
       */
      public Builder clearThermostatRuntime() {
        if (thermostatRuntimeBuilder_ == null) {
          thermostatRuntime_ = null;
          onChanged();
        } else {
          thermostatRuntime_ = null;
          thermostatRuntimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.Builder getThermostatRuntimeBuilder() {
        
        onChanged();
        return getThermostatRuntimeFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtimeOrBuilder getThermostatRuntimeOrBuilder() {
        if (thermostatRuntimeBuilder_ != null) {
          return thermostatRuntimeBuilder_.getMessageOrBuilder();
        } else {
          return thermostatRuntime_ == null ?
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.getDefaultInstance() : thermostatRuntime_;
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime thermostat_runtime = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtimeOrBuilder> 
          getThermostatRuntimeFieldBuilder() {
        if (thermostatRuntimeBuilder_ == null) {
          thermostatRuntimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtimeOrBuilder>(
                  getThermostatRuntime(),
                  getParentForChildren(),
                  isClean());
          thermostatRuntime_ = null;
        }
        return thermostatRuntimeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_message)
    }

    // @@protoc_insertion_point(class_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_message)
    private static final com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message();
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ecp_thermostat_message>
        PARSER = new com.google.protobuf.AbstractParser<ecp_thermostat_message>() {
      @java.lang.Override
      public ecp_thermostat_message parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ecp_thermostat_message(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ecp_thermostat_message> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ecp_thermostat_message> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_message getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ecp_thermostat_infoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string thermostat_id = 1;</code>
     * @return The thermostatId.
     */
    java.lang.String getThermostatId();
    /**
     * <code>string thermostat_id = 1;</code>
     * @return The bytes for thermostatId.
     */
    com.google.protobuf.ByteString
        getThermostatIdBytes();
  }
  /**
   * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info}
   */
  public static final class ecp_thermostat_info extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info)
      ecp_thermostat_infoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ecp_thermostat_info.newBuilder() to construct.
    private ecp_thermostat_info(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ecp_thermostat_info() {
      thermostatId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ecp_thermostat_info();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ecp_thermostat_info(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              thermostatId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_info_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_info_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.Builder.class);
    }

    public static final int THERMOSTAT_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object thermostatId_;
    /**
     * <code>string thermostat_id = 1;</code>
     * @return The thermostatId.
     */
    @java.lang.Override
    public java.lang.String getThermostatId() {
      java.lang.Object ref = thermostatId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        thermostatId_ = s;
        return s;
      }
    }
    /**
     * <code>string thermostat_id = 1;</code>
     * @return The bytes for thermostatId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getThermostatIdBytes() {
      java.lang.Object ref = thermostatId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        thermostatId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getThermostatIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, thermostatId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getThermostatIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, thermostatId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info)) {
        return super.equals(obj);
      }
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info other = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info) obj;

      if (!getThermostatId()
          .equals(other.getThermostatId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + THERMOSTAT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getThermostatId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info)
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_infoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_info_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.Builder.class);
      }

      // Construct using com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        thermostatId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_info_descriptor;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info getDefaultInstanceForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.getDefaultInstance();
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info build() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info buildPartial() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info result = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info(this);
        result.thermostatId_ = thermostatId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info) {
          return mergeFrom((com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info other) {
        if (other == com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info.getDefaultInstance()) return this;
        if (!other.getThermostatId().isEmpty()) {
          thermostatId_ = other.thermostatId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object thermostatId_ = "";
      /**
       * <code>string thermostat_id = 1;</code>
       * @return The thermostatId.
       */
      public java.lang.String getThermostatId() {
        java.lang.Object ref = thermostatId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          thermostatId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string thermostat_id = 1;</code>
       * @return The bytes for thermostatId.
       */
      public com.google.protobuf.ByteString
          getThermostatIdBytes() {
        java.lang.Object ref = thermostatId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          thermostatId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string thermostat_id = 1;</code>
       * @param value The thermostatId to set.
       * @return This builder for chaining.
       */
      public Builder setThermostatId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        thermostatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string thermostat_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearThermostatId() {
        
        thermostatId_ = getDefaultInstance().getThermostatId();
        onChanged();
        return this;
      }
      /**
       * <code>string thermostat_id = 1;</code>
       * @param value The bytes for thermostatId to set.
       * @return This builder for chaining.
       */
      public Builder setThermostatIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        thermostatId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info)
    }

    // @@protoc_insertion_point(class_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_info)
    private static final com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info();
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ecp_thermostat_info>
        PARSER = new com.google.protobuf.AbstractParser<ecp_thermostat_info>() {
      @java.lang.Override
      public ecp_thermostat_info parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ecp_thermostat_info(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ecp_thermostat_info> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ecp_thermostat_info> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_info getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ecp_thermostat_settingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings.ecp_thermostat_hvac_mode hvac_mode = 1;</code>
     * @return The enum numeric value on the wire for hvacMode.
     */
    int getHvacModeValue();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings.ecp_thermostat_hvac_mode hvac_mode = 1;</code>
     * @return The hvacMode.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode getHvacMode();

    /**
     * <pre>
     * a value of zero indicates a non-eco+ device
     * </pre>
     *
     * <code>int32 comfort_preference = 2;</code>
     * @return The comfortPreference.
     */
    int getComfortPreference();
  }
  /**
   * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings}
   */
  public static final class ecp_thermostat_settings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings)
      ecp_thermostat_settingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ecp_thermostat_settings.newBuilder() to construct.
    private ecp_thermostat_settings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ecp_thermostat_settings() {
      hvacMode_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ecp_thermostat_settings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ecp_thermostat_settings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              hvacMode_ = rawValue;
              break;
            }
            case 16: {

              comfortPreference_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_settings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_settings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.Builder.class);
    }

    /**
     * Protobuf enum {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings.ecp_thermostat_hvac_mode}
     */
    public enum ecp_thermostat_hvac_mode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>off = 0;</code>
       */
      off(0),
      /**
       * <code>auto = 1;</code>
       */
      auto(1),
      /**
       * <code>cool = 2;</code>
       */
      cool(2),
      /**
       * <code>heat = 3;</code>
       */
      heat(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>off = 0;</code>
       */
      public static final int off_VALUE = 0;
      /**
       * <code>auto = 1;</code>
       */
      public static final int auto_VALUE = 1;
      /**
       * <code>cool = 2;</code>
       */
      public static final int cool_VALUE = 2;
      /**
       * <code>heat = 3;</code>
       */
      public static final int heat_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ecp_thermostat_hvac_mode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ecp_thermostat_hvac_mode forNumber(int value) {
        switch (value) {
          case 0: return off;
          case 1: return auto;
          case 2: return cool;
          case 3: return heat;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ecp_thermostat_hvac_mode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ecp_thermostat_hvac_mode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ecp_thermostat_hvac_mode>() {
              public ecp_thermostat_hvac_mode findValueByNumber(int number) {
                return ecp_thermostat_hvac_mode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.getDescriptor().getEnumTypes().get(0);
      }

      private static final ecp_thermostat_hvac_mode[] VALUES = values();

      public static ecp_thermostat_hvac_mode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ecp_thermostat_hvac_mode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings.ecp_thermostat_hvac_mode)
    }

    public static final int HVAC_MODE_FIELD_NUMBER = 1;
    private int hvacMode_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings.ecp_thermostat_hvac_mode hvac_mode = 1;</code>
     * @return The enum numeric value on the wire for hvacMode.
     */
    @java.lang.Override public int getHvacModeValue() {
      return hvacMode_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings.ecp_thermostat_hvac_mode hvac_mode = 1;</code>
     * @return The hvacMode.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode getHvacMode() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode.valueOf(hvacMode_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode.UNRECOGNIZED : result;
    }

    public static final int COMFORT_PREFERENCE_FIELD_NUMBER = 2;
    private int comfortPreference_;
    /**
     * <pre>
     * a value of zero indicates a non-eco+ device
     * </pre>
     *
     * <code>int32 comfort_preference = 2;</code>
     * @return The comfortPreference.
     */
    @java.lang.Override
    public int getComfortPreference() {
      return comfortPreference_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hvacMode_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode.off.getNumber()) {
        output.writeEnum(1, hvacMode_);
      }
      if (comfortPreference_ != 0) {
        output.writeInt32(2, comfortPreference_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (hvacMode_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode.off.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, hvacMode_);
      }
      if (comfortPreference_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, comfortPreference_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings)) {
        return super.equals(obj);
      }
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings other = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings) obj;

      if (hvacMode_ != other.hvacMode_) return false;
      if (getComfortPreference()
          != other.getComfortPreference()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HVAC_MODE_FIELD_NUMBER;
      hash = (53 * hash) + hvacMode_;
      hash = (37 * hash) + COMFORT_PREFERENCE_FIELD_NUMBER;
      hash = (53 * hash) + getComfortPreference();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings)
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_settings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_settings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.Builder.class);
      }

      // Construct using com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        hvacMode_ = 0;

        comfortPreference_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_settings_descriptor;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings getDefaultInstanceForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.getDefaultInstance();
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings build() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings buildPartial() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings result = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings(this);
        result.hvacMode_ = hvacMode_;
        result.comfortPreference_ = comfortPreference_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings) {
          return mergeFrom((com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings other) {
        if (other == com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.getDefaultInstance()) return this;
        if (other.hvacMode_ != 0) {
          setHvacModeValue(other.getHvacModeValue());
        }
        if (other.getComfortPreference() != 0) {
          setComfortPreference(other.getComfortPreference());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int hvacMode_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings.ecp_thermostat_hvac_mode hvac_mode = 1;</code>
       * @return The enum numeric value on the wire for hvacMode.
       */
      @java.lang.Override public int getHvacModeValue() {
        return hvacMode_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings.ecp_thermostat_hvac_mode hvac_mode = 1;</code>
       * @param value The enum numeric value on the wire for hvacMode to set.
       * @return This builder for chaining.
       */
      public Builder setHvacModeValue(int value) {
        
        hvacMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings.ecp_thermostat_hvac_mode hvac_mode = 1;</code>
       * @return The hvacMode.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode getHvacMode() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode.valueOf(hvacMode_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings.ecp_thermostat_hvac_mode hvac_mode = 1;</code>
       * @param value The hvacMode to set.
       * @return This builder for chaining.
       */
      public Builder setHvacMode(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings.ecp_thermostat_hvac_mode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        hvacMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings.ecp_thermostat_hvac_mode hvac_mode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHvacMode() {
        
        hvacMode_ = 0;
        onChanged();
        return this;
      }

      private int comfortPreference_ ;
      /**
       * <pre>
       * a value of zero indicates a non-eco+ device
       * </pre>
       *
       * <code>int32 comfort_preference = 2;</code>
       * @return The comfortPreference.
       */
      @java.lang.Override
      public int getComfortPreference() {
        return comfortPreference_;
      }
      /**
       * <pre>
       * a value of zero indicates a non-eco+ device
       * </pre>
       *
       * <code>int32 comfort_preference = 2;</code>
       * @param value The comfortPreference to set.
       * @return This builder for chaining.
       */
      public Builder setComfortPreference(int value) {
        
        comfortPreference_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a value of zero indicates a non-eco+ device
       * </pre>
       *
       * <code>int32 comfort_preference = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearComfortPreference() {
        
        comfortPreference_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings)
    }

    // @@protoc_insertion_point(class_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_settings)
    private static final com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings();
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ecp_thermostat_settings>
        PARSER = new com.google.protobuf.AbstractParser<ecp_thermostat_settings>() {
      @java.lang.Override
      public ecp_thermostat_settings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ecp_thermostat_settings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ecp_thermostat_settings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ecp_thermostat_settings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_settings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ecp_thermostat_stateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state.ecp_thermostat_connection_state connection_state = 1;</code>
     * @return The enum numeric value on the wire for connectionState.
     */
    int getConnectionStateValue();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state.ecp_thermostat_connection_state connection_state = 1;</code>
     * @return The connectionState.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state getConnectionState();

    /**
     * <code>float temperature_heat_setpoint_deg_f = 2;</code>
     * @return The temperatureHeatSetpointDegF.
     */
    float getTemperatureHeatSetpointDegF();

    /**
     * <code>float temperature_cool_setpoint_deg_f = 3;</code>
     * @return The temperatureCoolSetpointDegF.
     */
    float getTemperatureCoolSetpointDegF();

    /**
     * <code>float temperature_indoor_deg_f = 4;</code>
     * @return The temperatureIndoorDegF.
     */
    float getTemperatureIndoorDegF();

    /**
     * <code>float temperature_outdoor_deg_f = 5;</code>
     * @return The temperatureOutdoorDegF.
     */
    float getTemperatureOutdoorDegF();
  }
  /**
   * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state}
   */
  public static final class ecp_thermostat_state extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state)
      ecp_thermostat_stateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ecp_thermostat_state.newBuilder() to construct.
    private ecp_thermostat_state(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ecp_thermostat_state() {
      connectionState_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ecp_thermostat_state();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ecp_thermostat_state(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              connectionState_ = rawValue;
              break;
            }
            case 21: {

              temperatureHeatSetpointDegF_ = input.readFloat();
              break;
            }
            case 29: {

              temperatureCoolSetpointDegF_ = input.readFloat();
              break;
            }
            case 37: {

              temperatureIndoorDegF_ = input.readFloat();
              break;
            }
            case 45: {

              temperatureOutdoorDegF_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_state_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_state_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.Builder.class);
    }

    /**
     * Protobuf enum {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state.ecp_thermostat_connection_state}
     */
    public enum ecp_thermostat_connection_state
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>disconnected = 0;</code>
       */
      disconnected(0),
      /**
       * <code>connected = 1;</code>
       */
      connected(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>disconnected = 0;</code>
       */
      public static final int disconnected_VALUE = 0;
      /**
       * <code>connected = 1;</code>
       */
      public static final int connected_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ecp_thermostat_connection_state valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ecp_thermostat_connection_state forNumber(int value) {
        switch (value) {
          case 0: return disconnected;
          case 1: return connected;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ecp_thermostat_connection_state>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ecp_thermostat_connection_state> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ecp_thermostat_connection_state>() {
              public ecp_thermostat_connection_state findValueByNumber(int number) {
                return ecp_thermostat_connection_state.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.getDescriptor().getEnumTypes().get(0);
      }

      private static final ecp_thermostat_connection_state[] VALUES = values();

      public static ecp_thermostat_connection_state valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ecp_thermostat_connection_state(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state.ecp_thermostat_connection_state)
    }

    public static final int CONNECTION_STATE_FIELD_NUMBER = 1;
    private int connectionState_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state.ecp_thermostat_connection_state connection_state = 1;</code>
     * @return The enum numeric value on the wire for connectionState.
     */
    @java.lang.Override public int getConnectionStateValue() {
      return connectionState_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state.ecp_thermostat_connection_state connection_state = 1;</code>
     * @return The connectionState.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state getConnectionState() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state.valueOf(connectionState_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state.UNRECOGNIZED : result;
    }

    public static final int TEMPERATURE_HEAT_SETPOINT_DEG_F_FIELD_NUMBER = 2;
    private float temperatureHeatSetpointDegF_;
    /**
     * <code>float temperature_heat_setpoint_deg_f = 2;</code>
     * @return The temperatureHeatSetpointDegF.
     */
    @java.lang.Override
    public float getTemperatureHeatSetpointDegF() {
      return temperatureHeatSetpointDegF_;
    }

    public static final int TEMPERATURE_COOL_SETPOINT_DEG_F_FIELD_NUMBER = 3;
    private float temperatureCoolSetpointDegF_;
    /**
     * <code>float temperature_cool_setpoint_deg_f = 3;</code>
     * @return The temperatureCoolSetpointDegF.
     */
    @java.lang.Override
    public float getTemperatureCoolSetpointDegF() {
      return temperatureCoolSetpointDegF_;
    }

    public static final int TEMPERATURE_INDOOR_DEG_F_FIELD_NUMBER = 4;
    private float temperatureIndoorDegF_;
    /**
     * <code>float temperature_indoor_deg_f = 4;</code>
     * @return The temperatureIndoorDegF.
     */
    @java.lang.Override
    public float getTemperatureIndoorDegF() {
      return temperatureIndoorDegF_;
    }

    public static final int TEMPERATURE_OUTDOOR_DEG_F_FIELD_NUMBER = 5;
    private float temperatureOutdoorDegF_;
    /**
     * <code>float temperature_outdoor_deg_f = 5;</code>
     * @return The temperatureOutdoorDegF.
     */
    @java.lang.Override
    public float getTemperatureOutdoorDegF() {
      return temperatureOutdoorDegF_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (connectionState_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state.disconnected.getNumber()) {
        output.writeEnum(1, connectionState_);
      }
      if (temperatureHeatSetpointDegF_ != 0F) {
        output.writeFloat(2, temperatureHeatSetpointDegF_);
      }
      if (temperatureCoolSetpointDegF_ != 0F) {
        output.writeFloat(3, temperatureCoolSetpointDegF_);
      }
      if (temperatureIndoorDegF_ != 0F) {
        output.writeFloat(4, temperatureIndoorDegF_);
      }
      if (temperatureOutdoorDegF_ != 0F) {
        output.writeFloat(5, temperatureOutdoorDegF_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (connectionState_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state.disconnected.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, connectionState_);
      }
      if (temperatureHeatSetpointDegF_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, temperatureHeatSetpointDegF_);
      }
      if (temperatureCoolSetpointDegF_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, temperatureCoolSetpointDegF_);
      }
      if (temperatureIndoorDegF_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, temperatureIndoorDegF_);
      }
      if (temperatureOutdoorDegF_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, temperatureOutdoorDegF_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state)) {
        return super.equals(obj);
      }
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state other = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state) obj;

      if (connectionState_ != other.connectionState_) return false;
      if (java.lang.Float.floatToIntBits(getTemperatureHeatSetpointDegF())
          != java.lang.Float.floatToIntBits(
              other.getTemperatureHeatSetpointDegF())) return false;
      if (java.lang.Float.floatToIntBits(getTemperatureCoolSetpointDegF())
          != java.lang.Float.floatToIntBits(
              other.getTemperatureCoolSetpointDegF())) return false;
      if (java.lang.Float.floatToIntBits(getTemperatureIndoorDegF())
          != java.lang.Float.floatToIntBits(
              other.getTemperatureIndoorDegF())) return false;
      if (java.lang.Float.floatToIntBits(getTemperatureOutdoorDegF())
          != java.lang.Float.floatToIntBits(
              other.getTemperatureOutdoorDegF())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONNECTION_STATE_FIELD_NUMBER;
      hash = (53 * hash) + connectionState_;
      hash = (37 * hash) + TEMPERATURE_HEAT_SETPOINT_DEG_F_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTemperatureHeatSetpointDegF());
      hash = (37 * hash) + TEMPERATURE_COOL_SETPOINT_DEG_F_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTemperatureCoolSetpointDegF());
      hash = (37 * hash) + TEMPERATURE_INDOOR_DEG_F_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTemperatureIndoorDegF());
      hash = (37 * hash) + TEMPERATURE_OUTDOOR_DEG_F_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTemperatureOutdoorDegF());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state)
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_stateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_state_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_state_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.Builder.class);
      }

      // Construct using com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        connectionState_ = 0;

        temperatureHeatSetpointDegF_ = 0F;

        temperatureCoolSetpointDegF_ = 0F;

        temperatureIndoorDegF_ = 0F;

        temperatureOutdoorDegF_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_state_descriptor;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state getDefaultInstanceForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.getDefaultInstance();
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state build() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state buildPartial() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state result = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state(this);
        result.connectionState_ = connectionState_;
        result.temperatureHeatSetpointDegF_ = temperatureHeatSetpointDegF_;
        result.temperatureCoolSetpointDegF_ = temperatureCoolSetpointDegF_;
        result.temperatureIndoorDegF_ = temperatureIndoorDegF_;
        result.temperatureOutdoorDegF_ = temperatureOutdoorDegF_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state) {
          return mergeFrom((com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state other) {
        if (other == com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.getDefaultInstance()) return this;
        if (other.connectionState_ != 0) {
          setConnectionStateValue(other.getConnectionStateValue());
        }
        if (other.getTemperatureHeatSetpointDegF() != 0F) {
          setTemperatureHeatSetpointDegF(other.getTemperatureHeatSetpointDegF());
        }
        if (other.getTemperatureCoolSetpointDegF() != 0F) {
          setTemperatureCoolSetpointDegF(other.getTemperatureCoolSetpointDegF());
        }
        if (other.getTemperatureIndoorDegF() != 0F) {
          setTemperatureIndoorDegF(other.getTemperatureIndoorDegF());
        }
        if (other.getTemperatureOutdoorDegF() != 0F) {
          setTemperatureOutdoorDegF(other.getTemperatureOutdoorDegF());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int connectionState_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state.ecp_thermostat_connection_state connection_state = 1;</code>
       * @return The enum numeric value on the wire for connectionState.
       */
      @java.lang.Override public int getConnectionStateValue() {
        return connectionState_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state.ecp_thermostat_connection_state connection_state = 1;</code>
       * @param value The enum numeric value on the wire for connectionState to set.
       * @return This builder for chaining.
       */
      public Builder setConnectionStateValue(int value) {
        
        connectionState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state.ecp_thermostat_connection_state connection_state = 1;</code>
       * @return The connectionState.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state getConnectionState() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state.valueOf(connectionState_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state.ecp_thermostat_connection_state connection_state = 1;</code>
       * @param value The connectionState to set.
       * @return This builder for chaining.
       */
      public Builder setConnectionState(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state.ecp_thermostat_connection_state value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        connectionState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state.ecp_thermostat_connection_state connection_state = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearConnectionState() {
        
        connectionState_ = 0;
        onChanged();
        return this;
      }

      private float temperatureHeatSetpointDegF_ ;
      /**
       * <code>float temperature_heat_setpoint_deg_f = 2;</code>
       * @return The temperatureHeatSetpointDegF.
       */
      @java.lang.Override
      public float getTemperatureHeatSetpointDegF() {
        return temperatureHeatSetpointDegF_;
      }
      /**
       * <code>float temperature_heat_setpoint_deg_f = 2;</code>
       * @param value The temperatureHeatSetpointDegF to set.
       * @return This builder for chaining.
       */
      public Builder setTemperatureHeatSetpointDegF(float value) {
        
        temperatureHeatSetpointDegF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float temperature_heat_setpoint_deg_f = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperatureHeatSetpointDegF() {
        
        temperatureHeatSetpointDegF_ = 0F;
        onChanged();
        return this;
      }

      private float temperatureCoolSetpointDegF_ ;
      /**
       * <code>float temperature_cool_setpoint_deg_f = 3;</code>
       * @return The temperatureCoolSetpointDegF.
       */
      @java.lang.Override
      public float getTemperatureCoolSetpointDegF() {
        return temperatureCoolSetpointDegF_;
      }
      /**
       * <code>float temperature_cool_setpoint_deg_f = 3;</code>
       * @param value The temperatureCoolSetpointDegF to set.
       * @return This builder for chaining.
       */
      public Builder setTemperatureCoolSetpointDegF(float value) {
        
        temperatureCoolSetpointDegF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float temperature_cool_setpoint_deg_f = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperatureCoolSetpointDegF() {
        
        temperatureCoolSetpointDegF_ = 0F;
        onChanged();
        return this;
      }

      private float temperatureIndoorDegF_ ;
      /**
       * <code>float temperature_indoor_deg_f = 4;</code>
       * @return The temperatureIndoorDegF.
       */
      @java.lang.Override
      public float getTemperatureIndoorDegF() {
        return temperatureIndoorDegF_;
      }
      /**
       * <code>float temperature_indoor_deg_f = 4;</code>
       * @param value The temperatureIndoorDegF to set.
       * @return This builder for chaining.
       */
      public Builder setTemperatureIndoorDegF(float value) {
        
        temperatureIndoorDegF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float temperature_indoor_deg_f = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperatureIndoorDegF() {
        
        temperatureIndoorDegF_ = 0F;
        onChanged();
        return this;
      }

      private float temperatureOutdoorDegF_ ;
      /**
       * <code>float temperature_outdoor_deg_f = 5;</code>
       * @return The temperatureOutdoorDegF.
       */
      @java.lang.Override
      public float getTemperatureOutdoorDegF() {
        return temperatureOutdoorDegF_;
      }
      /**
       * <code>float temperature_outdoor_deg_f = 5;</code>
       * @param value The temperatureOutdoorDegF to set.
       * @return This builder for chaining.
       */
      public Builder setTemperatureOutdoorDegF(float value) {
        
        temperatureOutdoorDegF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float temperature_outdoor_deg_f = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperatureOutdoorDegF() {
        
        temperatureOutdoorDegF_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state)
    }

    // @@protoc_insertion_point(class_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_state)
    private static final com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state();
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ecp_thermostat_state>
        PARSER = new com.google.protobuf.AbstractParser<ecp_thermostat_state>() {
      @java.lang.Override
      public ecp_thermostat_state parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ecp_thermostat_state(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ecp_thermostat_state> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ecp_thermostat_state> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_state getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ecp_thermostat_dr_eventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string dr_ref = 1;</code>
     * @return The drRef.
     */
    java.lang.String getDrRef();
    /**
     * <code>string dr_ref = 1;</code>
     * @return The bytes for drRef.
     */
    com.google.protobuf.ByteString
        getDrRefBytes();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event.dr_event_state event_state = 2;</code>
     * @return The enum numeric value on the wire for eventState.
     */
    int getEventStateValue();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event.dr_event_state event_state = 2;</code>
     * @return The eventState.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state getEventState();
  }
  /**
   * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event}
   */
  public static final class ecp_thermostat_dr_event extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event)
      ecp_thermostat_dr_eventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ecp_thermostat_dr_event.newBuilder() to construct.
    private ecp_thermostat_dr_event(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ecp_thermostat_dr_event() {
      drRef_ = "";
      eventState_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ecp_thermostat_dr_event();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ecp_thermostat_dr_event(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              drRef_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              eventState_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_dr_event_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_dr_event_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.Builder.class);
    }

    /**
     * Protobuf enum {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event.dr_event_state}
     */
    public enum dr_event_state
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>none = 0;</code>
       */
      none(0),
      /**
       * <code>dr_precool = 1;</code>
       */
      dr_precool(1),
      /**
       * <code>dr_setback = 2;</code>
       */
      dr_setback(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>none = 0;</code>
       */
      public static final int none_VALUE = 0;
      /**
       * <code>dr_precool = 1;</code>
       */
      public static final int dr_precool_VALUE = 1;
      /**
       * <code>dr_setback = 2;</code>
       */
      public static final int dr_setback_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static dr_event_state valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static dr_event_state forNumber(int value) {
        switch (value) {
          case 0: return none;
          case 1: return dr_precool;
          case 2: return dr_setback;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<dr_event_state>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          dr_event_state> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<dr_event_state>() {
              public dr_event_state findValueByNumber(int number) {
                return dr_event_state.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.getDescriptor().getEnumTypes().get(0);
      }

      private static final dr_event_state[] VALUES = values();

      public static dr_event_state valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private dr_event_state(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event.dr_event_state)
    }

    public static final int DR_REF_FIELD_NUMBER = 1;
    private volatile java.lang.Object drRef_;
    /**
     * <code>string dr_ref = 1;</code>
     * @return The drRef.
     */
    @java.lang.Override
    public java.lang.String getDrRef() {
      java.lang.Object ref = drRef_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        drRef_ = s;
        return s;
      }
    }
    /**
     * <code>string dr_ref = 1;</code>
     * @return The bytes for drRef.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDrRefBytes() {
      java.lang.Object ref = drRef_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        drRef_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_STATE_FIELD_NUMBER = 2;
    private int eventState_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event.dr_event_state event_state = 2;</code>
     * @return The enum numeric value on the wire for eventState.
     */
    @java.lang.Override public int getEventStateValue() {
      return eventState_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event.dr_event_state event_state = 2;</code>
     * @return The eventState.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state getEventState() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state.valueOf(eventState_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDrRefBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, drRef_);
      }
      if (eventState_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state.none.getNumber()) {
        output.writeEnum(2, eventState_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDrRefBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, drRef_);
      }
      if (eventState_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state.none.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, eventState_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event)) {
        return super.equals(obj);
      }
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event other = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event) obj;

      if (!getDrRef()
          .equals(other.getDrRef())) return false;
      if (eventState_ != other.eventState_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DR_REF_FIELD_NUMBER;
      hash = (53 * hash) + getDrRef().hashCode();
      hash = (37 * hash) + EVENT_STATE_FIELD_NUMBER;
      hash = (53 * hash) + eventState_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event)
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_eventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_dr_event_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_dr_event_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.Builder.class);
      }

      // Construct using com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        drRef_ = "";

        eventState_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_dr_event_descriptor;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event getDefaultInstanceForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.getDefaultInstance();
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event build() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event buildPartial() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event result = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event(this);
        result.drRef_ = drRef_;
        result.eventState_ = eventState_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event) {
          return mergeFrom((com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event other) {
        if (other == com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.getDefaultInstance()) return this;
        if (!other.getDrRef().isEmpty()) {
          drRef_ = other.drRef_;
          onChanged();
        }
        if (other.eventState_ != 0) {
          setEventStateValue(other.getEventStateValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object drRef_ = "";
      /**
       * <code>string dr_ref = 1;</code>
       * @return The drRef.
       */
      public java.lang.String getDrRef() {
        java.lang.Object ref = drRef_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          drRef_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string dr_ref = 1;</code>
       * @return The bytes for drRef.
       */
      public com.google.protobuf.ByteString
          getDrRefBytes() {
        java.lang.Object ref = drRef_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          drRef_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string dr_ref = 1;</code>
       * @param value The drRef to set.
       * @return This builder for chaining.
       */
      public Builder setDrRef(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        drRef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string dr_ref = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDrRef() {
        
        drRef_ = getDefaultInstance().getDrRef();
        onChanged();
        return this;
      }
      /**
       * <code>string dr_ref = 1;</code>
       * @param value The bytes for drRef to set.
       * @return This builder for chaining.
       */
      public Builder setDrRefBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        drRef_ = value;
        onChanged();
        return this;
      }

      private int eventState_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event.dr_event_state event_state = 2;</code>
       * @return The enum numeric value on the wire for eventState.
       */
      @java.lang.Override public int getEventStateValue() {
        return eventState_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event.dr_event_state event_state = 2;</code>
       * @param value The enum numeric value on the wire for eventState to set.
       * @return This builder for chaining.
       */
      public Builder setEventStateValue(int value) {
        
        eventState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event.dr_event_state event_state = 2;</code>
       * @return The eventState.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state getEventState() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state.valueOf(eventState_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event.dr_event_state event_state = 2;</code>
       * @param value The eventState to set.
       * @return This builder for chaining.
       */
      public Builder setEventState(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.dr_event_state value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        eventState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event.dr_event_state event_state = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventState() {
        
        eventState_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event)
    }

    // @@protoc_insertion_point(class_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event)
    private static final com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event();
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ecp_thermostat_dr_event>
        PARSER = new com.google.protobuf.AbstractParser<ecp_thermostat_dr_event>() {
      @java.lang.Override
      public ecp_thermostat_dr_event parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ecp_thermostat_dr_event(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ecp_thermostat_dr_event> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ecp_thermostat_dr_event> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ecp_thermostat_tou_eventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event.tou_event_state event_state = 1;</code>
     * @return The enum numeric value on the wire for eventState.
     */
    int getEventStateValue();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event.tou_event_state event_state = 1;</code>
     * @return The eventState.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state getEventState();
  }
  /**
   * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event}
   */
  public static final class ecp_thermostat_tou_event extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event)
      ecp_thermostat_tou_eventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ecp_thermostat_tou_event.newBuilder() to construct.
    private ecp_thermostat_tou_event(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ecp_thermostat_tou_event() {
      eventState_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ecp_thermostat_tou_event();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ecp_thermostat_tou_event(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              eventState_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_tou_event_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_tou_event_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.Builder.class);
    }

    /**
     * Protobuf enum {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event.tou_event_state}
     */
    public enum tou_event_state
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>none = 0;</code>
       */
      none(0),
      /**
       * <code>tou_precool = 1;</code>
       */
      tou_precool(1),
      /**
       * <code>tou_setback = 2;</code>
       */
      tou_setback(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>none = 0;</code>
       */
      public static final int none_VALUE = 0;
      /**
       * <code>tou_precool = 1;</code>
       */
      public static final int tou_precool_VALUE = 1;
      /**
       * <code>tou_setback = 2;</code>
       */
      public static final int tou_setback_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static tou_event_state valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static tou_event_state forNumber(int value) {
        switch (value) {
          case 0: return none;
          case 1: return tou_precool;
          case 2: return tou_setback;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<tou_event_state>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          tou_event_state> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<tou_event_state>() {
              public tou_event_state findValueByNumber(int number) {
                return tou_event_state.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.getDescriptor().getEnumTypes().get(0);
      }

      private static final tou_event_state[] VALUES = values();

      public static tou_event_state valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private tou_event_state(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event.tou_event_state)
    }

    public static final int EVENT_STATE_FIELD_NUMBER = 1;
    private int eventState_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event.tou_event_state event_state = 1;</code>
     * @return The enum numeric value on the wire for eventState.
     */
    @java.lang.Override public int getEventStateValue() {
      return eventState_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event.tou_event_state event_state = 1;</code>
     * @return The eventState.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state getEventState() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state.valueOf(eventState_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (eventState_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state.none.getNumber()) {
        output.writeEnum(1, eventState_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (eventState_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state.none.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, eventState_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event)) {
        return super.equals(obj);
      }
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event other = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event) obj;

      if (eventState_ != other.eventState_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + EVENT_STATE_FIELD_NUMBER;
      hash = (53 * hash) + eventState_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event)
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_eventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_tou_event_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_tou_event_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.Builder.class);
      }

      // Construct using com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        eventState_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_tou_event_descriptor;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event getDefaultInstanceForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.getDefaultInstance();
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event build() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event buildPartial() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event result = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event(this);
        result.eventState_ = eventState_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event) {
          return mergeFrom((com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event other) {
        if (other == com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.getDefaultInstance()) return this;
        if (other.eventState_ != 0) {
          setEventStateValue(other.getEventStateValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int eventState_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event.tou_event_state event_state = 1;</code>
       * @return The enum numeric value on the wire for eventState.
       */
      @java.lang.Override public int getEventStateValue() {
        return eventState_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event.tou_event_state event_state = 1;</code>
       * @param value The enum numeric value on the wire for eventState to set.
       * @return This builder for chaining.
       */
      public Builder setEventStateValue(int value) {
        
        eventState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event.tou_event_state event_state = 1;</code>
       * @return The eventState.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state getEventState() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state.valueOf(eventState_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event.tou_event_state event_state = 1;</code>
       * @param value The eventState to set.
       * @return This builder for chaining.
       */
      public Builder setEventState(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.tou_event_state value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        eventState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event.tou_event_state event_state = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventState() {
        
        eventState_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event)
    }

    // @@protoc_insertion_point(class_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event)
    private static final com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event();
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ecp_thermostat_tou_event>
        PARSER = new com.google.protobuf.AbstractParser<ecp_thermostat_tou_event>() {
      @java.lang.Override
      public ecp_thermostat_tou_event parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ecp_thermostat_tou_event(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ecp_thermostat_tou_event> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ecp_thermostat_tou_event> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ecp_thermostat_programOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
     * @return Whether the eventDr field is set.
     */
    boolean hasEventDr();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
     * @return The eventDr.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event getEventDr();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_eventOrBuilder getEventDrOrBuilder();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
     * @return Whether the eventTou field is set.
     */
    boolean hasEventTou();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
     * @return The eventTou.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event getEventTou();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_eventOrBuilder getEventTouOrBuilder();
  }
  /**
   * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program}
   */
  public static final class ecp_thermostat_program extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program)
      ecp_thermostat_programOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ecp_thermostat_program.newBuilder() to construct.
    private ecp_thermostat_program(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ecp_thermostat_program() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ecp_thermostat_program();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ecp_thermostat_program(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.Builder subBuilder = null;
              if (eventDr_ != null) {
                subBuilder = eventDr_.toBuilder();
              }
              eventDr_ = input.readMessage(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(eventDr_);
                eventDr_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.Builder subBuilder = null;
              if (eventTou_ != null) {
                subBuilder = eventTou_.toBuilder();
              }
              eventTou_ = input.readMessage(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(eventTou_);
                eventTou_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_program_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_program_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.Builder.class);
    }

    public static final int EVENT_DR_FIELD_NUMBER = 1;
    private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event eventDr_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
     * @return Whether the eventDr field is set.
     */
    @java.lang.Override
    public boolean hasEventDr() {
      return eventDr_ != null;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
     * @return The eventDr.
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event getEventDr() {
      return eventDr_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.getDefaultInstance() : eventDr_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_eventOrBuilder getEventDrOrBuilder() {
      return getEventDr();
    }

    public static final int EVENT_TOU_FIELD_NUMBER = 2;
    private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event eventTou_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
     * @return Whether the eventTou field is set.
     */
    @java.lang.Override
    public boolean hasEventTou() {
      return eventTou_ != null;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
     * @return The eventTou.
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event getEventTou() {
      return eventTou_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.getDefaultInstance() : eventTou_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
     */
    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_eventOrBuilder getEventTouOrBuilder() {
      return getEventTou();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (eventDr_ != null) {
        output.writeMessage(1, getEventDr());
      }
      if (eventTou_ != null) {
        output.writeMessage(2, getEventTou());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (eventDr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEventDr());
      }
      if (eventTou_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEventTou());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program)) {
        return super.equals(obj);
      }
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program other = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program) obj;

      if (hasEventDr() != other.hasEventDr()) return false;
      if (hasEventDr()) {
        if (!getEventDr()
            .equals(other.getEventDr())) return false;
      }
      if (hasEventTou() != other.hasEventTou()) return false;
      if (hasEventTou()) {
        if (!getEventTou()
            .equals(other.getEventTou())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEventDr()) {
        hash = (37 * hash) + EVENT_DR_FIELD_NUMBER;
        hash = (53 * hash) + getEventDr().hashCode();
      }
      if (hasEventTou()) {
        hash = (37 * hash) + EVENT_TOU_FIELD_NUMBER;
        hash = (53 * hash) + getEventTou().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program)
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_programOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_program_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_program_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.Builder.class);
      }

      // Construct using com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (eventDrBuilder_ == null) {
          eventDr_ = null;
        } else {
          eventDr_ = null;
          eventDrBuilder_ = null;
        }
        if (eventTouBuilder_ == null) {
          eventTou_ = null;
        } else {
          eventTou_ = null;
          eventTouBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_program_descriptor;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program getDefaultInstanceForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.getDefaultInstance();
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program build() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program buildPartial() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program result = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program(this);
        if (eventDrBuilder_ == null) {
          result.eventDr_ = eventDr_;
        } else {
          result.eventDr_ = eventDrBuilder_.build();
        }
        if (eventTouBuilder_ == null) {
          result.eventTou_ = eventTou_;
        } else {
          result.eventTou_ = eventTouBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program) {
          return mergeFrom((com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program other) {
        if (other == com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program.getDefaultInstance()) return this;
        if (other.hasEventDr()) {
          mergeEventDr(other.getEventDr());
        }
        if (other.hasEventTou()) {
          mergeEventTou(other.getEventTou());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event eventDr_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_eventOrBuilder> eventDrBuilder_;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
       * @return Whether the eventDr field is set.
       */
      public boolean hasEventDr() {
        return eventDrBuilder_ != null || eventDr_ != null;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
       * @return The eventDr.
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event getEventDr() {
        if (eventDrBuilder_ == null) {
          return eventDr_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.getDefaultInstance() : eventDr_;
        } else {
          return eventDrBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
       */
      public Builder setEventDr(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event value) {
        if (eventDrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventDr_ = value;
          onChanged();
        } else {
          eventDrBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
       */
      public Builder setEventDr(
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.Builder builderForValue) {
        if (eventDrBuilder_ == null) {
          eventDr_ = builderForValue.build();
          onChanged();
        } else {
          eventDrBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
       */
      public Builder mergeEventDr(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event value) {
        if (eventDrBuilder_ == null) {
          if (eventDr_ != null) {
            eventDr_ =
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.newBuilder(eventDr_).mergeFrom(value).buildPartial();
          } else {
            eventDr_ = value;
          }
          onChanged();
        } else {
          eventDrBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
       */
      public Builder clearEventDr() {
        if (eventDrBuilder_ == null) {
          eventDr_ = null;
          onChanged();
        } else {
          eventDr_ = null;
          eventDrBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.Builder getEventDrBuilder() {
        
        onChanged();
        return getEventDrFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_eventOrBuilder getEventDrOrBuilder() {
        if (eventDrBuilder_ != null) {
          return eventDrBuilder_.getMessageOrBuilder();
        } else {
          return eventDr_ == null ?
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.getDefaultInstance() : eventDr_;
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_dr_event event_dr = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_eventOrBuilder> 
          getEventDrFieldBuilder() {
        if (eventDrBuilder_ == null) {
          eventDrBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_event.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_dr_eventOrBuilder>(
                  getEventDr(),
                  getParentForChildren(),
                  isClean());
          eventDr_ = null;
        }
        return eventDrBuilder_;
      }

      private com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event eventTou_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_eventOrBuilder> eventTouBuilder_;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
       * @return Whether the eventTou field is set.
       */
      public boolean hasEventTou() {
        return eventTouBuilder_ != null || eventTou_ != null;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
       * @return The eventTou.
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event getEventTou() {
        if (eventTouBuilder_ == null) {
          return eventTou_ == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.getDefaultInstance() : eventTou_;
        } else {
          return eventTouBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
       */
      public Builder setEventTou(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event value) {
        if (eventTouBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventTou_ = value;
          onChanged();
        } else {
          eventTouBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
       */
      public Builder setEventTou(
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.Builder builderForValue) {
        if (eventTouBuilder_ == null) {
          eventTou_ = builderForValue.build();
          onChanged();
        } else {
          eventTouBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
       */
      public Builder mergeEventTou(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event value) {
        if (eventTouBuilder_ == null) {
          if (eventTou_ != null) {
            eventTou_ =
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.newBuilder(eventTou_).mergeFrom(value).buildPartial();
          } else {
            eventTou_ = value;
          }
          onChanged();
        } else {
          eventTouBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
       */
      public Builder clearEventTou() {
        if (eventTouBuilder_ == null) {
          eventTou_ = null;
          onChanged();
        } else {
          eventTou_ = null;
          eventTouBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.Builder getEventTouBuilder() {
        
        onChanged();
        return getEventTouFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
       */
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_eventOrBuilder getEventTouOrBuilder() {
        if (eventTouBuilder_ != null) {
          return eventTouBuilder_.getMessageOrBuilder();
        } else {
          return eventTou_ == null ?
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.getDefaultInstance() : eventTou_;
        }
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_tou_event event_tou = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_eventOrBuilder> 
          getEventTouFieldBuilder() {
        if (eventTouBuilder_ == null) {
          eventTouBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_event.Builder, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_tou_eventOrBuilder>(
                  getEventTou(),
                  getParentForChildren(),
                  isClean());
          eventTou_ = null;
        }
        return eventTouBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program)
    }

    // @@protoc_insertion_point(class_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_program)
    private static final com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program();
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ecp_thermostat_program>
        PARSER = new com.google.protobuf.AbstractParser<ecp_thermostat_program>() {
      @java.lang.Override
      public ecp_thermostat_program parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ecp_thermostat_program(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ecp_thermostat_program> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ecp_thermostat_program> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_program getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ecp_thermostat_runtimeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage1_on = 1;</code>
     * @return The enum numeric value on the wire for coolStage1On.
     */
    int getCoolStage1OnValue();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage1_on = 1;</code>
     * @return The coolStage1On.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getCoolStage1On();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage2_on = 2;</code>
     * @return The enum numeric value on the wire for coolStage2On.
     */
    int getCoolStage2OnValue();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage2_on = 2;</code>
     * @return The coolStage2On.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getCoolStage2On();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage1_on = 3;</code>
     * @return The enum numeric value on the wire for heatStage1On.
     */
    int getHeatStage1OnValue();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage1_on = 3;</code>
     * @return The heatStage1On.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getHeatStage1On();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage2_on = 4;</code>
     * @return The enum numeric value on the wire for heatStage2On.
     */
    int getHeatStage2OnValue();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage2_on = 4;</code>
     * @return The heatStage2On.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getHeatStage2On();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage3_on = 5;</code>
     * @return The enum numeric value on the wire for heatStage3On.
     */
    int getHeatStage3OnValue();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage3_on = 5;</code>
     * @return The heatStage3On.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getHeatStage3On();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage1 = 6;</code>
     * @return The enum numeric value on the wire for auxHeatStage1.
     */
    int getAuxHeatStage1Value();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage1 = 6;</code>
     * @return The auxHeatStage1.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getAuxHeatStage1();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage2 = 7;</code>
     * @return The enum numeric value on the wire for auxHeatStage2.
     */
    int getAuxHeatStage2Value();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage2 = 7;</code>
     * @return The auxHeatStage2.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getAuxHeatStage2();

    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage3 = 8;</code>
     * @return The enum numeric value on the wire for auxHeatStage3.
     */
    int getAuxHeatStage3Value();
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage3 = 8;</code>
     * @return The auxHeatStage3.
     */
    com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getAuxHeatStage3();
  }
  /**
   * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime}
   */
  public static final class ecp_thermostat_runtime extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime)
      ecp_thermostat_runtimeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ecp_thermostat_runtime.newBuilder() to construct.
    private ecp_thermostat_runtime(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ecp_thermostat_runtime() {
      coolStage1On_ = 0;
      coolStage2On_ = 0;
      heatStage1On_ = 0;
      heatStage2On_ = 0;
      heatStage3On_ = 0;
      auxHeatStage1_ = 0;
      auxHeatStage2_ = 0;
      auxHeatStage3_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ecp_thermostat_runtime();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ecp_thermostat_runtime(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              coolStage1On_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              coolStage2On_ = rawValue;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              heatStage1On_ = rawValue;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              heatStage2On_ = rawValue;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              heatStage3On_ = rawValue;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              auxHeatStage1_ = rawValue;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              auxHeatStage2_ = rawValue;
              break;
            }
            case 64: {
              int rawValue = input.readEnum();

              auxHeatStage3_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_runtime_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_runtime_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.Builder.class);
    }

    /**
     * Protobuf enum {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime}
     */
    public enum state_runtime
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>non_applicable = 0;</code>
       */
      non_applicable(0),
      /**
       * <code>on = 1;</code>
       */
      on(1),
      /**
       * <code>off = 2;</code>
       */
      off(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>non_applicable = 0;</code>
       */
      public static final int non_applicable_VALUE = 0;
      /**
       * <code>on = 1;</code>
       */
      public static final int on_VALUE = 1;
      /**
       * <code>off = 2;</code>
       */
      public static final int off_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static state_runtime valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static state_runtime forNumber(int value) {
        switch (value) {
          case 0: return non_applicable;
          case 1: return on;
          case 2: return off;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<state_runtime>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          state_runtime> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<state_runtime>() {
              public state_runtime findValueByNumber(int number) {
                return state_runtime.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.getDescriptor().getEnumTypes().get(0);
      }

      private static final state_runtime[] VALUES = values();

      public static state_runtime valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private state_runtime(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime)
    }

    public static final int COOL_STAGE1_ON_FIELD_NUMBER = 1;
    private int coolStage1On_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage1_on = 1;</code>
     * @return The enum numeric value on the wire for coolStage1On.
     */
    @java.lang.Override public int getCoolStage1OnValue() {
      return coolStage1On_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage1_on = 1;</code>
     * @return The coolStage1On.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getCoolStage1On() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(coolStage1On_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
    }

    public static final int COOL_STAGE2_ON_FIELD_NUMBER = 2;
    private int coolStage2On_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage2_on = 2;</code>
     * @return The enum numeric value on the wire for coolStage2On.
     */
    @java.lang.Override public int getCoolStage2OnValue() {
      return coolStage2On_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage2_on = 2;</code>
     * @return The coolStage2On.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getCoolStage2On() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(coolStage2On_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
    }

    public static final int HEAT_STAGE1_ON_FIELD_NUMBER = 3;
    private int heatStage1On_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage1_on = 3;</code>
     * @return The enum numeric value on the wire for heatStage1On.
     */
    @java.lang.Override public int getHeatStage1OnValue() {
      return heatStage1On_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage1_on = 3;</code>
     * @return The heatStage1On.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getHeatStage1On() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(heatStage1On_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
    }

    public static final int HEAT_STAGE2_ON_FIELD_NUMBER = 4;
    private int heatStage2On_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage2_on = 4;</code>
     * @return The enum numeric value on the wire for heatStage2On.
     */
    @java.lang.Override public int getHeatStage2OnValue() {
      return heatStage2On_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage2_on = 4;</code>
     * @return The heatStage2On.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getHeatStage2On() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(heatStage2On_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
    }

    public static final int HEAT_STAGE3_ON_FIELD_NUMBER = 5;
    private int heatStage3On_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage3_on = 5;</code>
     * @return The enum numeric value on the wire for heatStage3On.
     */
    @java.lang.Override public int getHeatStage3OnValue() {
      return heatStage3On_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage3_on = 5;</code>
     * @return The heatStage3On.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getHeatStage3On() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(heatStage3On_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
    }

    public static final int AUX_HEAT_STAGE1_FIELD_NUMBER = 6;
    private int auxHeatStage1_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage1 = 6;</code>
     * @return The enum numeric value on the wire for auxHeatStage1.
     */
    @java.lang.Override public int getAuxHeatStage1Value() {
      return auxHeatStage1_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage1 = 6;</code>
     * @return The auxHeatStage1.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getAuxHeatStage1() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(auxHeatStage1_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
    }

    public static final int AUX_HEAT_STAGE2_FIELD_NUMBER = 7;
    private int auxHeatStage2_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage2 = 7;</code>
     * @return The enum numeric value on the wire for auxHeatStage2.
     */
    @java.lang.Override public int getAuxHeatStage2Value() {
      return auxHeatStage2_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage2 = 7;</code>
     * @return The auxHeatStage2.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getAuxHeatStage2() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(auxHeatStage2_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
    }

    public static final int AUX_HEAT_STAGE3_FIELD_NUMBER = 8;
    private int auxHeatStage3_;
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage3 = 8;</code>
     * @return The enum numeric value on the wire for auxHeatStage3.
     */
    @java.lang.Override public int getAuxHeatStage3Value() {
      return auxHeatStage3_;
    }
    /**
     * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage3 = 8;</code>
     * @return The auxHeatStage3.
     */
    @java.lang.Override public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getAuxHeatStage3() {
      @SuppressWarnings("deprecation")
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(auxHeatStage3_);
      return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (coolStage1On_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        output.writeEnum(1, coolStage1On_);
      }
      if (coolStage2On_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        output.writeEnum(2, coolStage2On_);
      }
      if (heatStage1On_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        output.writeEnum(3, heatStage1On_);
      }
      if (heatStage2On_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        output.writeEnum(4, heatStage2On_);
      }
      if (heatStage3On_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        output.writeEnum(5, heatStage3On_);
      }
      if (auxHeatStage1_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        output.writeEnum(6, auxHeatStage1_);
      }
      if (auxHeatStage2_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        output.writeEnum(7, auxHeatStage2_);
      }
      if (auxHeatStage3_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        output.writeEnum(8, auxHeatStage3_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (coolStage1On_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, coolStage1On_);
      }
      if (coolStage2On_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, coolStage2On_);
      }
      if (heatStage1On_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, heatStage1On_);
      }
      if (heatStage2On_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, heatStage2On_);
      }
      if (heatStage3On_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, heatStage3On_);
      }
      if (auxHeatStage1_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, auxHeatStage1_);
      }
      if (auxHeatStage2_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, auxHeatStage2_);
      }
      if (auxHeatStage3_ != com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.non_applicable.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, auxHeatStage3_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime)) {
        return super.equals(obj);
      }
      com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime other = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime) obj;

      if (coolStage1On_ != other.coolStage1On_) return false;
      if (coolStage2On_ != other.coolStage2On_) return false;
      if (heatStage1On_ != other.heatStage1On_) return false;
      if (heatStage2On_ != other.heatStage2On_) return false;
      if (heatStage3On_ != other.heatStage3On_) return false;
      if (auxHeatStage1_ != other.auxHeatStage1_) return false;
      if (auxHeatStage2_ != other.auxHeatStage2_) return false;
      if (auxHeatStage3_ != other.auxHeatStage3_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COOL_STAGE1_ON_FIELD_NUMBER;
      hash = (53 * hash) + coolStage1On_;
      hash = (37 * hash) + COOL_STAGE2_ON_FIELD_NUMBER;
      hash = (53 * hash) + coolStage2On_;
      hash = (37 * hash) + HEAT_STAGE1_ON_FIELD_NUMBER;
      hash = (53 * hash) + heatStage1On_;
      hash = (37 * hash) + HEAT_STAGE2_ON_FIELD_NUMBER;
      hash = (53 * hash) + heatStage2On_;
      hash = (37 * hash) + HEAT_STAGE3_ON_FIELD_NUMBER;
      hash = (53 * hash) + heatStage3On_;
      hash = (37 * hash) + AUX_HEAT_STAGE1_FIELD_NUMBER;
      hash = (53 * hash) + auxHeatStage1_;
      hash = (37 * hash) + AUX_HEAT_STAGE2_FIELD_NUMBER;
      hash = (53 * hash) + auxHeatStage2_;
      hash = (37 * hash) + AUX_HEAT_STAGE3_FIELD_NUMBER;
      hash = (53 * hash) + auxHeatStage3_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime)
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtimeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_runtime_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_runtime_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.class, com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.Builder.class);
      }

      // Construct using com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        coolStage1On_ = 0;

        coolStage2On_ = 0;

        heatStage1On_ = 0;

        heatStage2On_ = 0;

        heatStage3On_ = 0;

        auxHeatStage1_ = 0;

        auxHeatStage2_ = 0;

        auxHeatStage3_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_runtime_descriptor;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime getDefaultInstanceForType() {
        return com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.getDefaultInstance();
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime build() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime buildPartial() {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime result = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime(this);
        result.coolStage1On_ = coolStage1On_;
        result.coolStage2On_ = coolStage2On_;
        result.heatStage1On_ = heatStage1On_;
        result.heatStage2On_ = heatStage2On_;
        result.heatStage3On_ = heatStage3On_;
        result.auxHeatStage1_ = auxHeatStage1_;
        result.auxHeatStage2_ = auxHeatStage2_;
        result.auxHeatStage3_ = auxHeatStage3_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime) {
          return mergeFrom((com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime other) {
        if (other == com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.getDefaultInstance()) return this;
        if (other.coolStage1On_ != 0) {
          setCoolStage1OnValue(other.getCoolStage1OnValue());
        }
        if (other.coolStage2On_ != 0) {
          setCoolStage2OnValue(other.getCoolStage2OnValue());
        }
        if (other.heatStage1On_ != 0) {
          setHeatStage1OnValue(other.getHeatStage1OnValue());
        }
        if (other.heatStage2On_ != 0) {
          setHeatStage2OnValue(other.getHeatStage2OnValue());
        }
        if (other.heatStage3On_ != 0) {
          setHeatStage3OnValue(other.getHeatStage3OnValue());
        }
        if (other.auxHeatStage1_ != 0) {
          setAuxHeatStage1Value(other.getAuxHeatStage1Value());
        }
        if (other.auxHeatStage2_ != 0) {
          setAuxHeatStage2Value(other.getAuxHeatStage2Value());
        }
        if (other.auxHeatStage3_ != 0) {
          setAuxHeatStage3Value(other.getAuxHeatStage3Value());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int coolStage1On_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage1_on = 1;</code>
       * @return The enum numeric value on the wire for coolStage1On.
       */
      @java.lang.Override public int getCoolStage1OnValue() {
        return coolStage1On_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage1_on = 1;</code>
       * @param value The enum numeric value on the wire for coolStage1On to set.
       * @return This builder for chaining.
       */
      public Builder setCoolStage1OnValue(int value) {
        
        coolStage1On_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage1_on = 1;</code>
       * @return The coolStage1On.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getCoolStage1On() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(coolStage1On_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage1_on = 1;</code>
       * @param value The coolStage1On to set.
       * @return This builder for chaining.
       */
      public Builder setCoolStage1On(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        coolStage1On_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage1_on = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoolStage1On() {
        
        coolStage1On_ = 0;
        onChanged();
        return this;
      }

      private int coolStage2On_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage2_on = 2;</code>
       * @return The enum numeric value on the wire for coolStage2On.
       */
      @java.lang.Override public int getCoolStage2OnValue() {
        return coolStage2On_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage2_on = 2;</code>
       * @param value The enum numeric value on the wire for coolStage2On to set.
       * @return This builder for chaining.
       */
      public Builder setCoolStage2OnValue(int value) {
        
        coolStage2On_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage2_on = 2;</code>
       * @return The coolStage2On.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getCoolStage2On() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(coolStage2On_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage2_on = 2;</code>
       * @param value The coolStage2On to set.
       * @return This builder for chaining.
       */
      public Builder setCoolStage2On(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        coolStage2On_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime cool_stage2_on = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoolStage2On() {
        
        coolStage2On_ = 0;
        onChanged();
        return this;
      }

      private int heatStage1On_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage1_on = 3;</code>
       * @return The enum numeric value on the wire for heatStage1On.
       */
      @java.lang.Override public int getHeatStage1OnValue() {
        return heatStage1On_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage1_on = 3;</code>
       * @param value The enum numeric value on the wire for heatStage1On to set.
       * @return This builder for chaining.
       */
      public Builder setHeatStage1OnValue(int value) {
        
        heatStage1On_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage1_on = 3;</code>
       * @return The heatStage1On.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getHeatStage1On() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(heatStage1On_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage1_on = 3;</code>
       * @param value The heatStage1On to set.
       * @return This builder for chaining.
       */
      public Builder setHeatStage1On(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        heatStage1On_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage1_on = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeatStage1On() {
        
        heatStage1On_ = 0;
        onChanged();
        return this;
      }

      private int heatStage2On_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage2_on = 4;</code>
       * @return The enum numeric value on the wire for heatStage2On.
       */
      @java.lang.Override public int getHeatStage2OnValue() {
        return heatStage2On_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage2_on = 4;</code>
       * @param value The enum numeric value on the wire for heatStage2On to set.
       * @return This builder for chaining.
       */
      public Builder setHeatStage2OnValue(int value) {
        
        heatStage2On_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage2_on = 4;</code>
       * @return The heatStage2On.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getHeatStage2On() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(heatStage2On_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage2_on = 4;</code>
       * @param value The heatStage2On to set.
       * @return This builder for chaining.
       */
      public Builder setHeatStage2On(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        heatStage2On_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage2_on = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeatStage2On() {
        
        heatStage2On_ = 0;
        onChanged();
        return this;
      }

      private int heatStage3On_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage3_on = 5;</code>
       * @return The enum numeric value on the wire for heatStage3On.
       */
      @java.lang.Override public int getHeatStage3OnValue() {
        return heatStage3On_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage3_on = 5;</code>
       * @param value The enum numeric value on the wire for heatStage3On to set.
       * @return This builder for chaining.
       */
      public Builder setHeatStage3OnValue(int value) {
        
        heatStage3On_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage3_on = 5;</code>
       * @return The heatStage3On.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getHeatStage3On() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(heatStage3On_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage3_on = 5;</code>
       * @param value The heatStage3On to set.
       * @return This builder for chaining.
       */
      public Builder setHeatStage3On(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        heatStage3On_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime heat_stage3_on = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeatStage3On() {
        
        heatStage3On_ = 0;
        onChanged();
        return this;
      }

      private int auxHeatStage1_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage1 = 6;</code>
       * @return The enum numeric value on the wire for auxHeatStage1.
       */
      @java.lang.Override public int getAuxHeatStage1Value() {
        return auxHeatStage1_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage1 = 6;</code>
       * @param value The enum numeric value on the wire for auxHeatStage1 to set.
       * @return This builder for chaining.
       */
      public Builder setAuxHeatStage1Value(int value) {
        
        auxHeatStage1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage1 = 6;</code>
       * @return The auxHeatStage1.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getAuxHeatStage1() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(auxHeatStage1_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage1 = 6;</code>
       * @param value The auxHeatStage1 to set.
       * @return This builder for chaining.
       */
      public Builder setAuxHeatStage1(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        auxHeatStage1_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage1 = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuxHeatStage1() {
        
        auxHeatStage1_ = 0;
        onChanged();
        return this;
      }

      private int auxHeatStage2_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage2 = 7;</code>
       * @return The enum numeric value on the wire for auxHeatStage2.
       */
      @java.lang.Override public int getAuxHeatStage2Value() {
        return auxHeatStage2_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage2 = 7;</code>
       * @param value The enum numeric value on the wire for auxHeatStage2 to set.
       * @return This builder for chaining.
       */
      public Builder setAuxHeatStage2Value(int value) {
        
        auxHeatStage2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage2 = 7;</code>
       * @return The auxHeatStage2.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getAuxHeatStage2() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(auxHeatStage2_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage2 = 7;</code>
       * @param value The auxHeatStage2 to set.
       * @return This builder for chaining.
       */
      public Builder setAuxHeatStage2(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        auxHeatStage2_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage2 = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuxHeatStage2() {
        
        auxHeatStage2_ = 0;
        onChanged();
        return this;
      }

      private int auxHeatStage3_ = 0;
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage3 = 8;</code>
       * @return The enum numeric value on the wire for auxHeatStage3.
       */
      @java.lang.Override public int getAuxHeatStage3Value() {
        return auxHeatStage3_;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage3 = 8;</code>
       * @param value The enum numeric value on the wire for auxHeatStage3 to set.
       * @return This builder for chaining.
       */
      public Builder setAuxHeatStage3Value(int value) {
        
        auxHeatStage3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage3 = 8;</code>
       * @return The auxHeatStage3.
       */
      @java.lang.Override
      public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime getAuxHeatStage3() {
        @SuppressWarnings("deprecation")
        com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime result = com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.valueOf(auxHeatStage3_);
        return result == null ? com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage3 = 8;</code>
       * @param value The auxHeatStage3 to set.
       * @return This builder for chaining.
       */
      public Builder setAuxHeatStage3(com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime.state_runtime value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        auxHeatStage3_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime.state_runtime aux_heat_stage3 = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuxHeatStage3() {
        
        auxHeatStage3_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime)
    }

    // @@protoc_insertion_point(class_scope:com.cannontech.web.api.dr.ecobee.message.ecp_thermostat_runtime)
    private static final com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime();
    }

    public static com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ecp_thermostat_runtime>
        PARSER = new com.google.protobuf.AbstractParser<ecp_thermostat_runtime>() {
      @java.lang.Override
      public ecp_thermostat_runtime parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ecp_thermostat_runtime(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ecp_thermostat_runtime> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ecp_thermostat_runtime> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.cannontech.web.api.dr.ecobee.message.EcobeeZeusRuntimeData.ecp_thermostat_runtime getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_message_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_message_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_info_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_info_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_settings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_settings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_state_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_state_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_dr_event_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_dr_event_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_tou_event_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_tou_event_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_program_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_program_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_runtime_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_runtime_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024ecobee_message.proto\022(com.cannontech.w" +
      "eb.api.dr.ecobee.message\032\037google/protobu" +
      "f/timestamp.proto\"\304\004\n\026ecp_thermostat_mes" +
      "sage\0224\n\020message_time_utc\030\001 \001(\0132\032.google." +
      "protobuf.Timestamp\022&\n\036message_sequence_n" +
      "umber_annual\030\002 \001(\003\022V\n\017thermostat_info\030\003 " +
      "\001(\0132=.com.cannontech.web.api.dr.ecobee.m" +
      "essage.ecp_thermostat_info\022^\n\023thermostat" +
      "_settings\030\004 \001(\0132A.com.cannontech.web.api" +
      ".dr.ecobee.message.ecp_thermostat_settin" +
      "gs\022X\n\020thermostat_state\030\005 \001(\0132>.com.canno" +
      "ntech.web.api.dr.ecobee.message.ecp_ther" +
      "mostat_state\022\\\n\022thermostat_program\030\006 \001(\013" +
      "2@.com.cannontech.web.api.dr.ecobee.mess" +
      "age.ecp_thermostat_program\022\\\n\022thermostat" +
      "_runtime\030\007 \001(\0132@.com.cannontech.web.api." +
      "dr.ecobee.message.ecp_thermostat_runtime" +
      "\",\n\023ecp_thermostat_info\022\025\n\rthermostat_id" +
      "\030\001 \001(\t\"\347\001\n\027ecp_thermostat_settings\022m\n\thv" +
      "ac_mode\030\001 \001(\0162Z.com.cannontech.web.api.d" +
      "r.ecobee.message.ecp_thermostat_settings" +
      ".ecp_thermostat_hvac_mode\022\032\n\022comfort_pre" +
      "ference\030\002 \001(\005\"A\n\030ecp_thermostat_hvac_mod" +
      "e\022\007\n\003off\020\000\022\010\n\004auto\020\001\022\010\n\004cool\020\002\022\010\n\004heat\020\003" +
      "\"\353\002\n\024ecp_thermostat_state\022x\n\020connection_" +
      "state\030\001 \001(\0162^.com.cannontech.web.api.dr." +
      "ecobee.message.ecp_thermostat_state.ecp_" +
      "thermostat_connection_state\022\'\n\037temperatu" +
      "re_heat_setpoint_deg_f\030\002 \001(\002\022\'\n\037temperat" +
      "ure_cool_setpoint_deg_f\030\003 \001(\002\022 \n\030tempera" +
      "ture_indoor_deg_f\030\004 \001(\002\022!\n\031temperature_o" +
      "utdoor_deg_f\030\005 \001(\002\"B\n\037ecp_thermostat_con" +
      "nection_state\022\020\n\014disconnected\020\000\022\r\n\tconne" +
      "cted\020\001\"\314\001\n\027ecp_thermostat_dr_event\022\016\n\006dr" +
      "_ref\030\001 \001(\t\022e\n\013event_state\030\002 \001(\0162P.com.ca" +
      "nnontech.web.api.dr.ecobee.message.ecp_t" +
      "hermostat_dr_event.dr_event_state\":\n\016dr_" +
      "event_state\022\010\n\004none\020\000\022\016\n\ndr_precool\020\001\022\016\n" +
      "\ndr_setback\020\002\"\302\001\n\030ecp_thermostat_tou_eve" +
      "nt\022g\n\013event_state\030\001 \001(\0162R.com.cannontech" +
      ".web.api.dr.ecobee.message.ecp_thermosta" +
      "t_tou_event.tou_event_state\"=\n\017tou_event" +
      "_state\022\010\n\004none\020\000\022\017\n\013tou_precool\020\001\022\017\n\013tou" +
      "_setback\020\002\"\304\001\n\026ecp_thermostat_program\022S\n" +
      "\010event_dr\030\001 \001(\0132A.com.cannontech.web.api" +
      ".dr.ecobee.message.ecp_thermostat_dr_eve" +
      "nt\022U\n\tevent_tou\030\002 \001(\0132B.com.cannontech.w" +
      "eb.api.dr.ecobee.message.ecp_thermostat_" +
      "tou_event\"\221\007\n\026ecp_thermostat_runtime\022f\n\016" +
      "cool_stage1_on\030\001 \001(\0162N.com.cannontech.we" +
      "b.api.dr.ecobee.message.ecp_thermostat_r" +
      "untime.state_runtime\022f\n\016cool_stage2_on\030\002" +
      " \001(\0162N.com.cannontech.web.api.dr.ecobee." +
      "message.ecp_thermostat_runtime.state_run" +
      "time\022f\n\016heat_stage1_on\030\003 \001(\0162N.com.canno" +
      "ntech.web.api.dr.ecobee.message.ecp_ther" +
      "mostat_runtime.state_runtime\022f\n\016heat_sta" +
      "ge2_on\030\004 \001(\0162N.com.cannontech.web.api.dr" +
      ".ecobee.message.ecp_thermostat_runtime.s" +
      "tate_runtime\022f\n\016heat_stage3_on\030\005 \001(\0162N.c" +
      "om.cannontech.web.api.dr.ecobee.message." +
      "ecp_thermostat_runtime.state_runtime\022g\n\017" +
      "aux_heat_stage1\030\006 \001(\0162N.com.cannontech.w" +
      "eb.api.dr.ecobee.message.ecp_thermostat_" +
      "runtime.state_runtime\022g\n\017aux_heat_stage2" +
      "\030\007 \001(\0162N.com.cannontech.web.api.dr.ecobe" +
      "e.message.ecp_thermostat_runtime.state_r" +
      "untime\022g\n\017aux_heat_stage3\030\010 \001(\0162N.com.ca" +
      "nnontech.web.api.dr.ecobee.message.ecp_t" +
      "hermostat_runtime.state_runtime\"4\n\rstate" +
      "_runtime\022\022\n\016non_applicable\020\000\022\006\n\002on\020\001\022\007\n\003" +
      "off\020\002B\027B\025EcobeeZeusRuntimeDatab\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_message_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_message_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_message_descriptor,
        new java.lang.String[] { "MessageTimeUtc", "MessageSequenceNumberAnnual", "ThermostatInfo", "ThermostatSettings", "ThermostatState", "ThermostatProgram", "ThermostatRuntime", });
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_info_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_info_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_info_descriptor,
        new java.lang.String[] { "ThermostatId", });
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_settings_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_settings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_settings_descriptor,
        new java.lang.String[] { "HvacMode", "ComfortPreference", });
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_state_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_state_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_state_descriptor,
        new java.lang.String[] { "ConnectionState", "TemperatureHeatSetpointDegF", "TemperatureCoolSetpointDegF", "TemperatureIndoorDegF", "TemperatureOutdoorDegF", });
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_dr_event_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_dr_event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_dr_event_descriptor,
        new java.lang.String[] { "DrRef", "EventState", });
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_tou_event_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_tou_event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_tou_event_descriptor,
        new java.lang.String[] { "EventState", });
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_program_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_program_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_program_descriptor,
        new java.lang.String[] { "EventDr", "EventTou", });
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_runtime_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_runtime_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_cannontech_web_api_dr_ecobee_message_ecp_thermostat_runtime_descriptor,
        new java.lang.String[] { "CoolStage1On", "CoolStage2On", "HeatStage1On", "HeatStage2On", "HeatStage3On", "AuxHeatStage1", "AuxHeatStage2", "AuxHeatStage3", });
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
