package com.cannontech.macs.schedule.editor;

import com.cannontech.clientutils.CTILogger;
import com.cannontech.common.editor.IMultiPanelEditor;
import com.cannontech.common.editor.PropertyPanel;
import com.cannontech.common.gui.util.DataInputPanel;
import com.cannontech.macs.schedule.wizard.ScheduleBasePanel;
import com.cannontech.macs.schedule.wizard.ScriptScheduleSetupPanel;
import com.cannontech.macs.schedule.wizard.SimpleSchedulePanel;
import com.cannontech.message.macs.message.Schedule;

/**
 * This type was created in VisualAge.
 */
public class ScheduleEditorPanel extends PropertyPanel implements IMultiPanelEditor
{
	//an attempt the synchronize this panel better
	private boolean isNotified = false;
	
	private DataInputPanel[] inputPanels;
	private String[] inputPanelTabNames;
	
	private String type = Schedule.SIMPLE_TYPE;
	private String scriptFileName = null;

	private static final String[][] EDITOR_TYPES =
	{
		{  //0 - ScheduleBasePanel
			Schedule.SCRIPT_TYPE, Schedule.SIMPLE_TYPE
		},
		{	//1	- ScriptScheduleSetupPanel
			Schedule.SCRIPT_TYPE
		},
		{ 	//2 - SimpleSchedulePanel
			Schedule.SIMPLE_TYPE
		}
	};

	private javax.swing.JTabbedPane ivjStateEditorTabbedPane = null;
public ScheduleEditorPanel() {
	super();
	initialize();
}
/**
 * Insert the method's description here.
 * Creation date: (3/15/2002 1:17:24 PM)
 * @return Object[]
 * 
 *  This method should return an object array with 3 elements,
 *   Object[0] is a DataInputPanel
 *   Object[1] is a String (Tab Name)
 */
public Object[] createNewPanel(int panelIndex)
{
	Object[] objs = new Object[2];
	
	switch( panelIndex )
	{
		case 0: 
			objs[0] = new ScheduleBasePanel(true);
			objs[1] = "General";
			break;

		case 1:
			objs[0] = new ScriptScheduleSetupPanel();
			objs[1] = "Script";
			break;

		case 2:
			objs[0] = new SimpleSchedulePanel();
			objs[1] = "Commands";
			break;

	}
		
	return objs;
}
/**
 * This method was created in VisualAge.
 * @return DataInputPanel[]
 */
public DataInputPanel[] getInputPanels() {
	//At least guarantee a non-null array if not a meaningful one
	if( this.inputPanels == null )
		this.inputPanels = new DataInputPanel[0];
		
	return this.inputPanels;
}
/**
 * This method was created in VisualAge.
 * @return java.awt.Dimension
 */
public java.awt.Dimension getPreferredSize() {
	return new java.awt.Dimension( 400, 450 );
}
/**
 * Return the RouteEditorTabbedPane property value.
 * @return javax.swing.JTabbedPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTabbedPane getStateEditorTabbedPane() {
	if (ivjStateEditorTabbedPane == null) {
		try {
			ivjStateEditorTabbedPane = new javax.swing.JTabbedPane();
			ivjStateEditorTabbedPane.setName("StateEditorTabbedPane");
			ivjStateEditorTabbedPane.setPreferredSize(new java.awt.Dimension(400, 350));
			ivjStateEditorTabbedPane.setFont(new java.awt.Font("dialog", 0, 14));
			ivjStateEditorTabbedPane.setBounds(0, 0, 400, 350);
			ivjStateEditorTabbedPane.setMaximumSize(new java.awt.Dimension(400, 350));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjStateEditorTabbedPane;
}
/**
 * This method was created in VisualAge.
 * @return java.lang.String[]
 */
public String[] getTabNames() {
	if( this.inputPanelTabNames == null )
		this.inputPanelTabNames = new String[0];
		
	return this.inputPanelTabNames;
}

/**
 * Insert the method's description here.
 * Creation date: (3/12/2001 2:13:58 PM)
 * @return java.lang.String
 */
private java.lang.String getType() {
	return type;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	CTILogger.info("--------- UNCAUGHT EXCEPTION ---------");
	CTILogger.error( exception.getMessage(), exception );;
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("RouteEditorPanel");
		setPreferredSize(new java.awt.Dimension(400, 350));
		setLayout(null);
		setSize(400, 350);
		setMaximumSize(new java.awt.Dimension(400, 350));
		add(getStateEditorTabbedPane(), getStateEditorTabbedPane().getName());
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}

	// user code end
}
/**
 * This method was created in VisualAge.
 * @param val java.lang.Object
 */
public void setValue(Object val) 
{
	//Vector to hold the panels temporarily
	java.util.Vector panels = new java.util.Vector();
	java.util.Vector tabs = new java.util.Vector();
	
	DataInputPanel tempPanel;

	//We must assume that val is an instance of Schedule
	Schedule schedule = (Schedule) val;
	type = schedule.getType();

	if( getType().equalsIgnoreCase(Schedule.SCRIPT_TYPE) )
	{
		scriptFileName = schedule.getScriptFileName();
	}


 	for( int i = 0; i < EDITOR_TYPES.length; i++ )
 	{
	 	for( int j = 0; j < EDITOR_TYPES[i].length; j++ )
	 	{
		 	if( type.equalsIgnoreCase(EDITOR_TYPES[i][j]) )
			{
				Object[] panelTabs = createNewPanel(i);

				tempPanel = (DataInputPanel)panelTabs[0];
				panels.addElement( tempPanel );
				tabs.addElement( panelTabs[1] );
				break;				
			}
	 	}

 	}


	this.inputPanels = new DataInputPanel[panels.size()];
	panels.copyInto( this.inputPanels );

	this.inputPanelTabNames = new String[tabs.size()];
	tabs.copyInto( this.inputPanelTabNames );
	
	//Allow super to do whatever it needs to
	super.setValue( val );		
}

/**
 * This method was created in VisualAge.
 * @return java.lang.String
 */
public String toString() {
	return "Schedule Editor";
}
/**
 * Insert the method's description here.
 * Creation date: (3/12/2001 2:11:45 PM)
 * @param text java.lang.String
 */
public void updateScriptText(final com.cannontech.message.macs.message.ScriptFile file)
{
	if( getType().equalsIgnoreCase(Schedule.SCRIPT_TYPE) )
	{
		CTILogger.info("		** RECEIVED AN updateScriptText() msg");

		//be sure we have panels before we try to set them
		if( inputPanels == null ) 
		{
			CTILogger.info("		** Should not have NULL inputPanels");
		}

		for( int i = 0; inputPanels != null && i < inputPanels.length; i++ )
		{
			if( inputPanels[i] instanceof ScriptScheduleSetupPanel && 
				 (file.getFileName() != null && file.getFileName().equalsIgnoreCase(scriptFileName)) )
			{
				CTILogger.info("		** UPDATE SCRIPT SETUP TEXT SET");
				((ScriptScheduleSetupPanel)inputPanels[i]).setScriptValues(file);
				((ScriptScheduleSetupPanel)inputPanels[i]).repaint();
			}
		}
	}
}

/**
 * 
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private static void getBuilderData() {
/*V1.1
**start of data**
	D0CB838494G88G88GB6F954ACGGGGGGGGGGGG8CGGGE2F5E9ECE4E5F2A0E4E1F4E135998BF0D4559507A8CE450AD318D20D1DE841269DDA3145992635B31831D3343425B60CBF2626D347E1DAF4680CBA54DAFB3379100404ACC9A841FCD882D1A2F173C553081510908D241A1298D3BF68CB766E66A5EF5FFB3C77B63B8BA9741CFB5FFD3BD9F7C12CB2F3F25FBD675EFB3E771CF397D235B723A057D5C5C8EE81317F3D1ACBC875DEC22E3E4F5DA1F073E8D6A1097B378FE0A7E9BA118F63
	A2202D191FD568A6DB5FA80279B2186B73328AF743F7A5796B9BEB1E070F94FC16822DE26C8FBF38B81FBB0A841FEDEC3E383394469DG19004371C90A7CD7F4D65B78F5B6DEC02E0B1035FEDC73334EDA9B578573A100F400157E587AE246794A6EAEFB7E6175996449FBDFF41561B9F1E78AF087785ECEFB74105BF2B786105796A6A76ED1E03E8CG154FA3B71DFA9D46A3C35301FFCEE8C16F04242A1AEA5109C9EFD01AB03D6644A47505946A25BE59520C6E6EE19BF11C4D07A415AA30FFEC92F9F49DAEE2
	E782DF18BF4AF0BBBB10EFBAFC2F82D88740F5FA7D45A3364CE367EEA32B6ED7734AD368F4D0663A8C49B11D96071E593607597F29E23473C2202D84389BE093C051D4D661C1009A6677E70BDE0231E75C6A5502C1CD6D5175E30A4F781766238AFCF7F78345461D22931A61A3047B76694E66A472DC8C783E7C43173B0F5BA433C378F94529DB49469F1EF4EDCBE2130D192D2E23D35C96E3D3B11BF05E2F27649D191A9B07F3F93FC762F9AF3BCA4BABC842FB5506A657C27B1C0CB85E6B275057D7B2DF2F016F
	DCBB8EB87EBA062F1A0E61F9CC6EE6F81C9FG5A5553A2B646F688D98673EFA06E364124F6D81A55635ABC4DE548D7E2327038F8EEBB5E2DD6408F8278GE6815281D6832CD3C4EC9CAFEE790C31B1A4995631102C7828C1785E670A7F8EA30DD806B4201A1624CE50D1491025F1051A44DE332D84E59F1F332F3484E3F682F83CC9D5EAC8162C29F03A942496B5CC3EE6D749CEDCE3D0C69D1103949884F5A24E2DAB29443BAC19563B3ACF32E8EC8527B71620ADE724D1B8918E00EFEE17C3E5E8734D20FFFEB0
	2B30AAA86C10414EBBC98D38505D5D031AB69D52C7D093628B222FC6585DBE885FC78178D9AF6EC0DCA64C57B8675CDFD291F7CE1FBC0162CBC6D45C0DEBBAB0FFE687052F1F98933E6EABDBCE1AB71CC86AEB04ADC16E63A2B5B1661730B3D1AEBE2F6B98CB32BFBB18BC7EAF97B80FD71272487B824E5F6178EAC9B97A2A95749D84D0D4E1630A6D9E9E3347A4130AA8FD4700G233E1845795A22D24C2BF4062AD69F55296A038F530E11725262D87C7AB5A736F6B13C8E715E8B81E6BA781AD20CC949328CF9
	BCE451E1EAD9329A085177B3DEE6E8DC0FDD95416B25D24CA7DA98625DD95FD2DA416E012AD2A6343345263731D8258A8D02503DDAC835B87E55B27477B40D5AF7653532C2966BCA886F9D2FEBAB256D2803A1874194F8F549A69563F87A30284B88E900437AFCA70C6BD59113617DA2A68F1C3D192C79385115AC97AEDD5E67EA55F8CC75E9311864B2B56FC8AEFBBB3BB3B65E6432F6153AE1BC2501CD634AAA0F01DF3A719C9F1C9F81D8240998787E0EBDF1774CF6FE2F26A85C140E0DEFAC4733CDFAA6C4A1
	BD6105BE69586D16720A845A28EDC3CE7FEEB95AD0094B85DC5E739FB41164BD036892068CCD2706951D5B9FECE0B984ED1C29097E20B2027A6540FCAB00DB97BE78F519688F96CFE7101CEFBD1F3267B928F35B8F6AB19FF8660B7E203A82F9AE84DA3AAEEC57680E4FF5BD2629CD48AC4D5AFAE73B63FD44F18F3ACBE0744B06E98D40A50A889BBD62C6F9B18F5BE8BBBFBC6454611536DCF76B317C73GFCEF566766A3DEAB97B0FB10B309B574FA06F71FC92C21FBA22206FA0016F6C66466F7ABB14EB741BC
	5F48AA2C8568849881308CE107404E8EF2095AB7GFEB5D4C9991EF329C58D2A486377501E6F2BA8907790E316550DBFB11FAF821EABGB80E56A0EE8D4C339D5C31BA44ED05395B943809FA44F542FC5094397D5A885E7DCF1C795759BC4D196F0DA44B4B7F8FA02F39393F6B8B6791DFB738ADCFD7264E5B34B2F95E1E2ECC1E374FD46E64F8B8A33E0B9174E86545737A95154972FA9E23953D0277D2B7281F9A1001066533687B9C937D376F95569F4077AAG3EFE3626105D17A8E4BBF897D8ACC6EAC4CEBE
	G73A3GBAC01A45FB8D1EF3EE8FE3AE72C31384228D6BF402C4C23877BFF5E26F2330FEABC0B5603BG46C2026759FA5C9B14A2F2B094E492F2795E5A4B6290562DF356F6C5F741B8ECC9A297C3629B27BECCE4F81FD88DD99B092FA1DBC3DC4E83B34097E0E8865F0D33785234ED74FE0D87C61506BDD3520C64154216378F5AB5959B33031D2D2D4D1E0E432DCDBC6FE504635FFADDA52FA62DBDACAF4E70384C3447BB976C97B921D63C75F200D69D96B68CB4B412383CAD0F873D211920D79A37D8626E6EFE
	BB24A80336EB6C1CAD559659E78D05C54E3E0E1DFFB54CB3GD607C54E0E3CA0F2760ADBEFA00373CEA64D59B9A36D2E75E17B2D9C0E656CCCF853F11E976A844F56C8D661E484F15F2B2BCA38AFBF01F73497C6CEFFE48E9D6399EBD40C3E33BE1E0E726E4B0B27774E2197446D673A7D3CD168766C4FB309F247BFD2562315912ED336BD8E0D6EA7873E7217EDBCAE3EDD9B0B0B27431FA5AE386F8E9555895F616208578C43C5686EBEB1A7BE397DC8D454595228705969F674D99F4CBF84302242E73F7AA0BE
	5E5CB76CF3652650EBE1146B33B41A78567A867357BA40EF0A0A5AF2577307E09C15266C2A42AF93ABAB00947D8147322E434E2DFBEBBF5F1B7B654F394FFF597BF8BD4E2BC3FB961D6575B8574117B2FCD59C1E5F49A54E1D74GAD6D2C2853775633BA8D737CF3D02781BA81C6G74F34216A5B52D6492F5FAC4538721D8A8F1691D6B17D67779FE0B38EB1B0877D5BF3A052C3E6A4F395BD344C55AB99E8F4B6CF15348FE06677AFD64C17D3201368520EAB62B309960A840582C506F231AE62E9F06C30FE5C9
	93132C73924A0D4AB49CC3E372673A95C405EE8A1CB5EFF6EEBF359866193349FA2C7B58DD38F3B651F78FB37C5A59C45F795A056F32015675DF613BF9781320DDA37FD85B18AA5EC10393F0E55F991F025EFCC48AB8FB3ED907B2B9F517DF831B361C65B3D915ADD9D264332CBD9D0605EA006BDE0C69400E610A386F9BEB3F685E6453F7E655174A036B7F1B7A547D4FC375497B1F1C7A647D4FE375976FEF1E28CF7DEEFD2ABE7E5D4A7DFEED837AA69D62E0B540C600ADG7967C5BC4F5F5B4063B9C9AC9F77
	85E82F46FEAD3284FF3FA7352EC14F25FFE31A71605BE4DC33ACAD08678B7C2C877DE5E9BAC35A3D1C87EDE44801C90BAF35718BBC1843956AE7E85EFF57C6C56F6EB9AFFA7223815613433C4F41D54922F79FF3F00727C46FBEFBDE74668F34476274F7F15FD36DDFFE4C4E7FD2F9F09BAEE9C86D477406CB7BF1F983FBF7027DC722BA355F608D58AFEBFE3FC91DF8392D416D60864CA14D14B1BB701E76B8779958BC7D3C68E95F8B609B498FEFF43EA648FC38966859G3C0FBEA40B1EB67F82740CGDDGE3
	G91G3E6FB47369D218AF3BA07ADC4F8174A367F3B860A1176EE778BEDFD3ECDF115C10382F9F04BD5860035C27859A1ABD30352D33C974B77F16C5FF387E02688FAF48976F8FEF17937BC35C9F237FDE3EF8FF38EBAA31BF947B39BE8BDE0A6973F06BE731830F4BD179F26BB37F3F2C5DEF758133950F138253A0951F66537355876FDF71F1DF150B3886C861A4458BBFC08A42324F1A0C68A07DE900C56699F29E65CEBAB3C8599CFF7C7466430F2D7B6D2819C78A87489E8C27E1EA306AC4FDFD12A5FEEA6E
	A7453AA683917083A45FE4C301E9C595BAC82A7C277067A653223E9E110FCD0B6C9AC4CEADA1CBD6DA5E124CC98B6F45EB03A4DF459F45C985A7AB129AE861C570B554016476FC0272B23390103712490B27F81DD3AAFFDC5E386F44232B73082B1F14A81A646B17A620B48F10E2EB522066242678A27A9BC759C1C5E10CAC6CF47260389AC7FDD456BB82375791FABAF2534232CDE57D90E4910334301596AC70BAABFC3D1312812C28B1E0610F7C1AF14021DDD1EF3D700BB7F7FF68A2393612E87A4208EE11C2
	BFBCF115A8FC7068E7CEA931C0DAC3D2CD3FE684C1B2CF02E40264B070FE6D1E56A55FF966FD46A03655A2FB39A9E1EBCB00EA41169E3FDFD629F3G58950E2FF30E47B55E04B595116BF71D587037F10803BE1297ECEDE5FF5B585FF67C5B46B0ED8C53568E465DC2AE7AAF119E91BA336081F94A19BC68FEEFBFF850FA6871FBEEF97848164D20DDBFA9E0BFB801935C31D5EF0702635438EA45123A6D0BF32EC19F6998AA91BCF7C7E4EE1C73FE3769C27CBBE86B1555A95F5D79E93C272CCECBFC879DBA0951
	B382F8BDCD748267CE3CCCD2770543C1C9D1ACC9196ED1FD58A39E0BDAB45617341E4473CD3146A65A3F011FC4392762767C8FD0CB8788302DC71A098CGGC09FGGD0CB818294G94G88G88GB6F954AC302DC71A098CGGC09FGG8CGGGGGGGGGGGGGGGGGE2F5E9ECE4E5F2A0E4E1F4E1D0CB8586GGGG81G81GBAGGG438CGGGG
**end of data**/
}
}
