//////////////////////////////////////////////////////////////
//These are constants required for Windows API broadcast calls
#define WM_SETTINGCHANGE 0x001A 
//////////////////////////////////////////////////////////////

//constants
#define SCANNER_DESC	"Collects real-time and interval data from a list of devices."
#define PORTER_DESC		"Controls communication channel and field hardware communications."
#define MACS_DESC		"Runs scheduled meter data collection and basic control operation."
#define LM_DESC			"Runs Demand Response operations based on data gathered by the Yukon system."
#define	FDR_DESC		"Transmits and receives data to and from other systems outside of Yukon.\""
#define	DISPATCH_DESC	"Transmits and receives real-time data to and from the Yukon server and client application"
#define	CC_DESC			"Runs Distribution Automation operations based on data gathered by the system."
#define	CALC_DESC		"Processes real-time and historical calculations on data gathered by the system."
#define PORTER_NAME		"Yukon Port Control Service"
#define SCANNER_NAME	"Yukon Real-Time Scan Service"
#define MACS_NAME		"Yukon MAC Scheduler Service"
#define LM_NAME			"Yukon Load Management Service"
#define FDR_NAME		"Yukon Foreign Data Service"
#define DISPATCH_NAME	"Yukon Dispatch Service"
#define CC_NAME			"Yukon Cap Control Service"
#define CALC_NAME		"Yukon Calc-Logic Service"
#define WEB_NAME        "YukonWebApplicationService"
#define NOTIF_NAME      "YukonNotificationServer"
#define SM_NAME         "YukonServiceMgr"
#define BROKER_NAME     "YukonMessageBroker"
#define WATCHDOG_NAME   "YukonWatchdogService"

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Notification Server
// is installed.
//---------------------------------------------------------------------------  
export prototype NotificationServer_Installed();
function NotificationServer_Installed()
string sProg , sCMD , svDir;
begin
	sProg = "cmd.exe";
	sCMD = "/c java -jar "+ TARGETDIR ^ "\\Client\\bin\\wrapper.jar" + " -i " + TARGETDIR ^ "\\Client\\bin\\notifserver.conf";
	svDir = TARGETDIR + "\\Runtime\\bin";
	LaunchApplication(sProg, sCMD, svDir, SW_HIDE, 0, LAAW_OPTION_HIDDEN | LAAW_OPTION_WAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature Notification Server 
// is uninstalled.
//--------------------------------------------------------------------------- 
export prototype NotificationServer_UnInstalling();
function NotificationServer_UnInstalling()
begin   
    //remove the Yukon Notification Server
    ServiceRemoveService(NOTIF_NAME);
end;

//----------------------------------------------------------------------------
// The Installing event is sent just before files for the feature Web Server
// are transferred. 
//---------------------------------------------------------------------------- 
export prototype Tomcat_Installing();
function Tomcat_Installing()
string sName, sKey, sEnv, sCMD, sArgs;
pointer pEnv;
begin
	//set the system environment variable JRE_HOME for use by the Tomcat service
	sName = "JRE_HOME";         
	RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
	sKey = "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment";
	RegDBSetKeyValueEx(sKey, sName, REGDB_STRING, TARGETDIR + "\\Runtime", -1);
	//broadcast notification of env variable change
	sEnv = "Environment";
	pEnv = &sEnv;
	SendMessage(HWND_BROADCAST, WM_SETTINGCHANGE, 0, pEnv);
end;

//----------------------------------------------------------------------------
// Installed event is sent just after files for the feature Web Server 
// are transferred. 
//---------------------------------------------------------------------------- 
export prototype Tomcat_Installed();
function Tomcat_Installed()
string sName, sKey, sTomcatPath, sJavaPath, sCmdLine, sDate, sServPath, sTargetDir, sEnv, sProg, sCMD;
number nFoundVal;
pointer pEnv;
begin
	//set the system environment variables JRE_HOME...
	sName = "JRE_HOME";
	sJavaPath = TARGETDIR + "\\Runtime";         
	sKey = "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment";
	RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
	RegDBSetKeyValueEx(sKey, sName, REGDB_STRING, sJavaPath, -1);
	//...and CATALINA_HOME
	sTomcatPath = TARGETDIR + "\\Server\\web";
	sName = "CATALINA_HOME";         
	RegDBSetKeyValueEx(sKey, sName, REGDB_STRING, sTomcatPath, -1);
	//make sure that Tomcat will be aware of new environment variables
	sEnv = "Environment";
	pEnv = &sEnv;
	SendMessage(HWND_BROADCAST, WM_SETTINGCHANGE, 0, pEnv);
	//cleanup
	DeleteDir (sTomcatPath + "\\webapps\\lib", ALLCONTENTS );
	//install tomcat as a service
	sServPath = sTomcatPath + "\\bin\\";
	TextSubGetValue("<TARGETDIR>", sTargetDir, FALSE, FALSE);
	sCmdLine = "install \"" + sTargetDir + "\\Runtime\""; 
	LaunchAppAndWait(sServPath + "yukonservice.bat", sCmdLine, WAIT);
	//Add this service to the YUKON GROUP so it shows up in TDC
	sKey = "\\SYSTEM\\CurrentControlSet\\Services\\YukonWebApplicationService"; 
	RegDBSetKeyValueEx(sKey, "Group", REGDB_STRING, "YUKON GROUP", -1);
	SendMessage(HWND_BROADCAST, WM_SETTINGCHANGE, 0, pEnv);
	Delay(2);
	sProg = "cmd.exe";
	sCMD = "/c sc config "+ "\"" + WEB_NAME + "\"" + " start=delayed-auto";
	LaunchApplication(sProg, sCMD, "", SW_HIDE, 0, LAAW_OPTION_NOWAIT);
end;

//----------------------------------------------------------------------------
// Uninstalling event is sent just before files for the feature Web Server 
// are removed during uninstallation. 
//---------------------------------------------------------------------------- 
export prototype Tomcat_UnInstalling();
function Tomcat_UnInstalling()
begin
    //remove the Tomcat service
    ServiceRemoveService(WEB_NAME);
end;


//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Message Broker
// is installed.
//--------------------------------------------------------------------------- 
export prototype YukonMessageBroker_Installed();
function YukonMessageBroker_Installed()
string sProg, sCMD, svDir;
begin
	//Install as a service
	sProg = "cmd.exe";
	sCMD = "/c java -jar " + TARGETDIR ^ "\\Client\\bin\\wrapper.jar" + " -i " + TARGETDIR ^ "\\Client\\bin\\yukonmessagebroker.conf";
	svDir = TARGETDIR + "\\Runtime\\bin";
	LaunchApplication(sProg, sCMD, svDir, SW_HIDE, 0, LAAW_OPTION_HIDDEN | LAAW_OPTION_WAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature Yukon Message Broker 
// is uninstalled.
//--------------------------------------------------------------------------- 
export prototype YukonMessageBroker_UnInstalling();
function YukonMessageBroker_UnInstalling()
begin
    //remove the Yukon Message Broker Service
    ServiceRemoveService(BROKER_NAME);
end;


//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Service Manager
// is installed.
//--------------------------------------------------------------------------- 
export prototype YukonServiceManager_Installed();
function YukonServiceManager_Installed()
string sProg, sCMD, svDir;
begin
	//Install as a service
	sProg = "cmd.exe";
	sCMD = "/c java -jar " + TARGETDIR ^ "\\Client\\bin\\wrapper.jar" + " -i " + TARGETDIR ^ "\\Client\\bin\\appserver.conf";
	svDir = TARGETDIR + "\\Runtime\\bin";
	LaunchApplication(sProg, sCMD, svDir, SW_HIDE, 0, LAAW_OPTION_HIDDEN | LAAW_OPTION_WAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature Yukon Service Manager 
// is uninstalled.
//--------------------------------------------------------------------------- 
export prototype YukonServiceManager_UnInstalling();
function YukonServiceManager_UnInstalling()
begin
    //remove the Yukon Service Manager
    ServiceRemoveService(SM_NAME);
end;

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Watchdog Service
// is installed.
//--------------------------------------------------------------------------- 
export prototype YukonWatchdogService_Installed();
function YukonWatchdogService_Installed()
string sProg, sCMD, svDir;
begin
    //Install as a service
    sProg = "cmd.exe";
    sCMD = "/c java -jar " + TARGETDIR ^ "\\Client\\bin\\wrapper.jar" + " -i " + TARGETDIR ^ "\\Client\\bin\\watchdog.conf";
    svDir = TARGETDIR + "\\Runtime\\bin";
    LaunchApplication(sProg, sCMD, svDir, SW_HIDE, 0, LAAW_OPTION_HIDDEN | LAAW_OPTION_WAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature Yukon Watchdog Service 
// is uninstalled.
//--------------------------------------------------------------------------- 
export prototype YukonWatchdogService_UnInstalling();
function YukonWatchdogService_UnInstalling()
begin
    //remove the Yukon Watchdog Service
    ServiceRemoveService(WATCHDOG_NAME);
end;

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Server\Port Control
// is installed.
//---------------------------------------------------------------------------
export prototype PortControl_Installed();
function PortControl_Installed()
string sServicePathFile, sProg, sCMD;
begin
	//Install Porter service
	sServicePathFile = TARGETDIR + "\\Server\\bin\\porter.exe";
	ServiceAddService(PORTER_NAME, PORTER_NAME, PORTER_DESC, sServicePathFile, FALSE, "");
	sProg = "cmd.exe";
	sCMD = "/c sc config "+ "\"" + PORTER_NAME + "\"" + " start=delayed-auto obj= "+ "\"" + "NT AUTHORITY\\Local Service" + "\"" + " password= " + "\"" + " "+ "\"";
	LaunchApplication(sProg, sCMD, "", SW_HIDE, 0, LAAW_OPTION_NOWAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature 
// Yukon Server\Port Control is uninstalled.
//---------------------------------------------------------------------------
export prototype PortControl_UnInstalling();
function PortControl_UnInstalling()
begin
	ServiceRemoveService(PORTER_NAME);
end;

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Server\Dispatch
// is installed.
//---------------------------------------------------------------------------
export prototype Dispatch_Installed();
function Dispatch_Installed()
string sServicePathFile, sProg, sCMD;
begin
	sServicePathFile = TARGETDIR + "\\Server\\bin\\dispatch.exe";
	ServiceAddService(DISPATCH_NAME, DISPATCH_NAME, DISPATCH_DESC, sServicePathFile, FALSE, "");
	sProg = "cmd.exe";
	sCMD = "/c sc config "+ "\"" + DISPATCH_NAME + "\"" + " start=delayed-auto obj= "+ "\"" + "NT AUTHORITY\\Local Service" + "\"" + " password= " + "\"" + " "+ "\"";
	LaunchApplication(sProg, sCMD, "", SW_HIDE, 0, LAAW_OPTION_NOWAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature 
// Yukon Server\Dispatch is uninstalled.
//---------------------------------------------------------------------------
export prototype Dispatch_UnInstalling();
function Dispatch_UnInstalling()
begin
	ServiceRemoveService(DISPATCH_NAME);
end;

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Server\Real-Time Scanner
// is installed.
//---------------------------------------------------------------------------
export prototype RealTimeScanner_Installed();
function RealTimeScanner_Installed()
string sServicePathFile, sProg, sCMD;
begin
	sServicePathFile = TARGETDIR + "\\Server\\bin\\scanner.exe";
	ServiceAddService(SCANNER_NAME, SCANNER_NAME, SCANNER_DESC, sServicePathFile, FALSE, "");
	sProg = "cmd.exe";
	sCMD = "/c sc config "+ "\"" + SCANNER_NAME + "\"" + " start=delayed-auto obj= "+ "\"" + "NT AUTHORITY\\Local Service" + "\"" + " password= " + "\"" + " "+ "\"";
	LaunchApplication(sProg, sCMD, "", SW_HIDE, 0, LAAW_OPTION_NOWAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature 
// Yukon Server\Real-Time Scanner is uninstalled.
//---------------------------------------------------------------------------
export prototype RealTimeScanner_UnInstalling();
function RealTimeScanner_UnInstalling()
begin
	ServiceRemoveService(SCANNER_NAME);
end;

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Server\MAC Scheduler
// is installed.
//---------------------------------------------------------------------------
export prototype MACScheduler_Installed();
function MACScheduler_Installed()
string sServicePathFile, sProg, sCMD;
begin
	sServicePathFile = TARGETDIR + "\\Server\\bin\\macs.exe";	
	ServiceAddService(MACS_NAME, MACS_NAME, MACS_DESC, sServicePathFile, FALSE, "");
	sProg = "cmd.exe";
	sCMD = "/c sc config "+ "\"" + MACS_NAME + "\"" + " start=delayed-auto obj= "+ "\"" + "NT AUTHORITY\\Local Service" + "\"" + " password= " + "\"" + " "+ "\"";
	LaunchApplication(sProg, sCMD, "", SW_HIDE, 0, LAAW_OPTION_NOWAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature 
// Yukon Server\MAC Scheduler is uninstalled.
//---------------------------------------------------------------------------
export prototype MACScheduler_UnInstalling();
function MACScheduler_UnInstalling()
begin
	ServiceRemoveService(MACS_NAME);
end;

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Server\Capacitor Control
// is installed.
//---------------------------------------------------------------------------
export prototype CapacitorControl_Installed();
function CapacitorControl_Installed()
string sServicePathFile, sProg, sCMD;
begin
	sServicePathFile = TARGETDIR + "\\Server\\bin\\capcontrol.exe";
	ServiceAddService(CC_NAME, CC_NAME, CC_DESC, sServicePathFile, FALSE, "");
	sProg = "cmd.exe";
	sCMD = "/c sc config "+ "\"" + CC_NAME + "\"" + " start=delayed-auto obj= "+ "\"" + "NT AUTHORITY\\Local Service" + "\"" + " password= " + "\"" + " "+ "\"";
	LaunchApplication(sProg, sCMD, "", SW_HIDE, 0, LAAW_OPTION_NOWAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature 
// Yukon Server\Capacitor Control is uninstalled.
//---------------------------------------------------------------------------
export prototype CapacitorControl_UnInstalling();
function CapacitorControl_UnInstalling()
begin
	ServiceRemoveService(CC_NAME);
end;

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Server\Foreign Data Router
// is installed.
//---------------------------------------------------------------------------
export prototype ForeignDataRouter_Installed();
function ForeignDataRouter_Installed()
string sServicePathFile, sProg, sCMD;
begin
	sServicePathFile = TARGETDIR + "\\Server\\bin\\fdr.exe";
	ServiceAddService(FDR_NAME, FDR_NAME, FDR_DESC, sServicePathFile, FALSE, "");
	sProg = "cmd.exe";
	sCMD = "/c sc config "+ "\"" + FDR_NAME + "\"" + " start=delayed-auto obj= "+ "\"" + "NT AUTHORITY\\Local Service" + "\"" + " password= " + "\"" + " "+ "\"";
	LaunchApplication(sProg, sCMD, "", SW_HIDE, 0, LAAW_OPTION_NOWAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature 
// Yukon Server\Foreign Data Router is uninstalled.
//---------------------------------------------------------------------------
export prototype ForeignDataRouter_UnInstalling();
function ForeignDataRouter_UnInstalling()
begin
	ServiceRemoveService(FDR_NAME);
end;

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Server\Calc-Logic
// is installed.
//---------------------------------------------------------------------------
export prototype CalcLogic_Installed();
function CalcLogic_Installed()
string sServicePathFile, sProg, sCMD;
begin
	sServicePathFile = TARGETDIR + "\\Server\\bin\\calc_logic.exe";
	ServiceAddService(CALC_NAME, CALC_NAME, CALC_DESC, sServicePathFile, FALSE, "");
	sProg = "cmd.exe";
	sCMD = "/c sc config "+ "\"" + CALC_NAME + "\"" + " start=delayed-auto obj= "+ "\"" + "NT AUTHORITY\\Local Service" + "\"" + " password= " + "\"" + " "+ "\"";
	LaunchApplication(sProg, sCMD, "", SW_HIDE, 0, LAAW_OPTION_NOWAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature 
// Yukon Server\Calc-Logic is uninstalled.
//---------------------------------------------------------------------------
export prototype CalcLogic_UnInstalling();
function CalcLogic_UnInstalling()
begin
	ServiceRemoveService(CALC_NAME);
end;

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Server\Load Management
// is installed.
//---------------------------------------------------------------------------
export prototype LoadManagement_Installed();
function LoadManagement_Installed()
string sServicePathFile, sProg, sCMD;
begin
	sServicePathFile = TARGETDIR + "\\Server\\bin\\loadmanagement.exe";
	ServiceAddService(LM_NAME, LM_NAME, LM_DESC, sServicePathFile, FALSE, "");
	sProg = "cmd.exe";
	sCMD = "/c sc config "+ "\"" + LM_NAME + "\"" + " start=delayed-auto obj= "+ "\"" + "NT AUTHORITY\\Local Service" + "\"" + " password= " + "\"" + " "+ "\"";
	LaunchApplication(sProg, sCMD, "", SW_HIDE, 0, LAAW_OPTION_NOWAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature 
// Yukon Server\Load Management is uninstalled.
//---------------------------------------------------------------------------
export prototype LoadManagement_UnInstalling();
function LoadManagement_UnInstalling()
begin
	ServiceRemoveService(LM_NAME);
end;
