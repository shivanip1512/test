//////////////////////////////////////////////////////////////
//These are constants required for Windows API broadcast calls
#define WM_SETTINGCHANGE 0x001A 
//////////////////////////////////////////////////////////////
#define SYS32			"C:\\WINDOWS\\System32\\"

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Notification Server
// is installed.
//---------------------------------------------------------------------------  
export prototype NotificationServer_Installed();
function NotificationServer_Installed()
string sPathAndFile, sCMD, sKey;
begin
	sPathAndFile = TARGETDIR + "\\client\\bin\\wrapper.exe";
	sCMD = "-i notifserver.conf";
	LaunchApplication(sPathAndFile, sCMD, "", SW_HIDE, 0, LAAW_OPTION_HIDDEN | LAAW_OPTION_WAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature Notification Server 
// is uninstalled.
//--------------------------------------------------------------------------- 
export prototype NotificationServer_UnInstalling();
function NotificationServer_UnInstalling()
string sPathAndFile, sCMD;
begin   
	//remove the Yukon Notification Server
	sPathAndFile = TARGETDIR + "\\client\\bin\\wrapper.exe";
	sCMD = "-r notifserver.conf";
	LaunchApplication(sPathAndFile, sCMD, "", SW_HIDE, 0, LAAW_OPTION_HIDDEN | LAAW_OPTION_WAIT);
end;

//----------------------------------------------------------------------------
// The Installing event is sent just before files for the feature Web Server
// are transferred. 
//---------------------------------------------------------------------------- 
export prototype Tomcat_Installing();
function Tomcat_Installing()
string sName, sKey, sEnv, sCMD, sArgs;
pointer pEnv;
begin
	//remove the YukonWebApplicationService, if it exists (i.e. upgrade install)
	sCMD = SYS32 ^ "sc.exe";
	sArgs = "delete \"YukonWebApplicationService\"";
	LaunchApplication(sCMD, "", "", SW_HIDE, 0, LAAW_OPTION_HIDDEN | LAAW_OPTION_WAIT);
	//get out of "hidden" app-launch mode
	LaunchApplication("", "", "", SW_NORMAL, 0, LAAW_OPTION_WAIT);
	
	//set the system environment variable JRE_HOME for use by the Tomcat service
	sName = "JRE_HOME";         
	RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
	sKey = "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment";
	RegDBSetKeyValueEx(sKey, sName, REGDB_STRING, TARGETDIR + "\\Runtime", -1);
	//broadcast notification of env variable change
	sEnv = "Environment";
	pEnv = &sEnv;
	SendMessage(HWND_BROADCAST, WM_SETTINGCHANGE, 0, pEnv);
end;

//----------------------------------------------------------------------------
// Installed event is sent just after files for the feature Web Server 
// are transferred. 
//---------------------------------------------------------------------------- 
export prototype Tomcat_Installed();
function Tomcat_Installed()
string sName, sKey, sTomcatPath, sJavaPath, sCmdLine, sDate, sServPath, sTargetDir, sEnv;
number nFoundVal;
pointer pEnv;
begin
	//set the system environment variables JRE_HOME...
	sName = "JRE_HOME";
	sJavaPath = TARGETDIR + "\\Runtime";         
	sKey = "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment";
	RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE);
	RegDBSetKeyValueEx(sKey, sName, REGDB_STRING, sJavaPath, -1);
	//...and CATALINA_HOME
	sTomcatPath = TARGETDIR + "\\Server\\web";
	sName = "CATALINA_HOME";         
	RegDBSetKeyValueEx(sKey, sName, REGDB_STRING, sTomcatPath, -1);
	//make sure that Tomcat will be aware of new environment variables
	sEnv = "Environment";
	pEnv = &sEnv;
	SendMessage(HWND_BROADCAST, WM_SETTINGCHANGE, 0, pEnv);
	//cleanup
	DeleteDir (sTomcatPath + "\\webapps\\lib", ALLCONTENTS );
	//install tomcat as a service
	sServPath = sTomcatPath + "\\bin\\";
	TextSubGetValue("<TARGETDIR>", sTargetDir, FALSE, FALSE);
	sCmdLine = "install \"" + sTargetDir + "\\Runtime\""; 
	LaunchAppAndWait(sServPath + "yukonservice.bat", sCmdLine, WAIT);
	//Add this service to the YUKON GROUP so it shows up in TDC
	sKey = "\\SYSTEM\\CurrentControlSet\\Services\\YukonWebApplicationService"; 
	RegDBSetKeyValueEx(sKey, "Group", REGDB_STRING, "YUKON GROUP", -1);
	SendMessage(HWND_BROADCAST, WM_SETTINGCHANGE, 0, pEnv);
end;

//----------------------------------------------------------------------------
// Uninstalling event is sent just before files for the feature Web Server 
// are removed during uninstallation. 
//---------------------------------------------------------------------------- 
export prototype Tomcat_UnInstalling();
function Tomcat_UnInstalling()
string sServPath;
begin
   	//remove the Tomcat service
	sServPath = TARGETDIR + "\\Server\\web\\bin\\";
	LaunchAppAndWait(sServPath + "yukonservice.bat", "remove", WAIT);
end;

//---------------------------------------------------------------------------
// The Installed event is sent after the feature Yukon Service Manager
// is installed.
//--------------------------------------------------------------------------- 
export prototype YukonServiceManager_Installed();
function YukonServiceManager_Installed()
string sPathAndFile, sCMD, sKey;
begin
	//Install as a service
	sPathAndFile = TARGETDIR + "\\client\\bin\\wrapper.exe";
	sCMD = "-i appserver.conf";
	LaunchApplication(sPathAndFile, sCMD, "", SW_HIDE, 0, LAAW_OPTION_HIDDEN | LAAW_OPTION_WAIT);
end;

//---------------------------------------------------------------------------
// The UnInstalling event is sent just before the feature Yukon Service Manager 
// is uninstalled.
//--------------------------------------------------------------------------- 
export prototype YukonServiceManager_UnInstalling();
function YukonServiceManager_UnInstalling()
string sPathAndFile, sCMD;
begin
	//remove the Yukon Service Manager
	sPathAndFile = TARGETDIR + "\\client\\bin\\wrapper.exe";
	sCMD = "-r appserver.conf";
	LaunchApplication(sPathAndFile, sCMD, "", SW_HIDE, 0, LAAW_OPTION_HIDDEN | LAAW_OPTION_WAIT);	
end;