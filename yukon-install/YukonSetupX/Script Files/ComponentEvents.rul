//////////////////////////////////////////////////////////////
//These are constants required for Windows API broadcast calls
#define WM_SETTINGCHANGE 0x001A 
//////////////////////////////////////////////////////////////

BOOL setupIsNeeded;

///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Installing event is sent just before files for the component:
//              Yukon Server are transferred.
///////////////////////////////////////////////////////////////////////////////

export prototype YukonServer_Installing();
function YukonServer_Installing()
number dirSearch;
string szPath;
string szSrcFile , szTargetFile;
string szCmdLine;

begin

szPath = TARGETDIR ^ "\\Server\\Config";

dirSearch = ExistsDir ( szPath );
if(dirSearch = 0) then
    szSrcFile = szPath ^ "\\master.cfg";
    szTargetFile = szPath ^ "\\OldMaster.cfg";
    DeleteFile ( szTargetFile );
    CopyFile ( szSrcFile , szTargetFile );
    // RenameFile ( szSrcFile , szTargetFile );
endif;

end;

///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Installed event is sent just after files for the component:
//              Yukon Server are transferred.
///////////////////////////////////////////////////////////////////////////////

export prototype YukonServer_Installed();
function YukonServer_Installed()
string szCmdLine, szServPath;
string szAppPath;
number nvResult;

begin
    Disable(STATUSEX);

    szAppPath = TARGETDIR ^ "\\server\\bin";

    if( RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE) < 0 ) then
        MessageBox("Call to RegDBSetDefaultRoot failed", SEVERE);
    endif;

    if( RegDBCreateKeyEx("SOFTWARE\\Cannon Technologies\\CParms", "") < 0 ) then
        MessageBox("Call to REgDBCreateEx failed", SEVERE );
    endif;

    if( RegDBSetKeyValueEx("SOFTWARE\\Cannon Technologies\\CParms","Config",REGDB_STRING, TARGETDIR ^ "\\server\\config\\master.cfg", -1 ) < 0 ) then
        MessageBox("Call to RegDBSetKeyValueEx failed", SEVERE);
    endif;

    return 0;
end;

///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Installing event is sent just before files for the component: 
//              Yukon Server\Tomcat are transferred. 
///////////////////////////////////////////////////////////////////////////////
 
export prototype Tomcat_Installing();
function Tomcat_Installing()
number nvSize, nvType, nvResult, foundVal, backupVer, stSize, verCon, dirSearch;
string szKey, szSubKey, szName, keyValue, minVersion, szCmdLine, szPath, szServPath;
STRING szTitle, szFormat, szString, szSrcFile, szTargetFile;
number fileExists;

begin

//stop the Tomcat service if it is present and running
szCmdLine = 'stop "Yukon Web Application Service"';
LaunchAppAndWait ("net.exe" , szCmdLine, WAIT ); 

Delay(4);

//remove the Tomcat service
szServPath = TARGETDIR ^ "\\Server\\web\\bin\\";
szCmdLine = 'remove';
LaunchAppAndWait ( szServPath ^ "service.bat" , szCmdLine, WAIT );

//make sure any legacy files are gone so that Tomcat avoids confusion
//however, spare the esub directory and the webconfig\custom folder
szPath = TARGETDIR + "\\Server\\web\\webapps\\ROOT";
dirSearch =  ExistsDir (szPath);
if(dirSearch = 0) then
   	DeleteDir ( szPath + "\\analysis" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\apps" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\bulk" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\capcontrol" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\cttp" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\demos" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\editor" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\include" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\install" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\JavaScript" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\loadmgmt" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\META-INF" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\operator" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\readmeter" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\template" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\test" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\user" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\voice" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\WEB-INF" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\analysis" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\WebConfig\\yukon", ALLCONTENTS );
   	DeleteDir ( szPath + "\\WebConfig\\CILC", ALLCONTENTS ); 
endif;

DeleteFile(TARGETDIR + "\\Server\\web\\log.properties");
RenameFile(TARGETDIR + "\\Server\\web\\db.properties", TARGETDIR + "\\Server\\web\\ARCHIVED db.properties"); 

//set a system environment variable JRE_HOME for use by the Tomcat service
szName = "JRE_HOME";         
RegDBSetDefaultRoot ( HKEY_LOCAL_MACHINE );
szKey = "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment";
foundVal = RegDBSetKeyValueEx ( szKey , szName , REGDB_STRING , TARGETDIR + "\\Runtime" , -1 );
//SprintfBox (SEVERE, "Did I find the key?", "%d", foundVal);

szSubKey = "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment";
RegDBDeleteValue ( szSubKey , "JAVA_HOME" );

end;
///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Installed event is sent just after files for the component: 
//              Yukon Server\Tomcat are transferred. 
///////////////////////////////////////////////////////////////////////////////
 
export prototype Tomcat_Installed();
function Tomcat_Installed()
STRING szCmdLine;     
STRING configMsg1, configMsg2, configMsg3, configMsg4, configMsg5;
string szServPath, szPath, TomcatPath, JavaPath;
string szAppPath, szName, szKey, szEnv, szTargetFile, szSrcFile, szValue, dateString, targetString;
number nvResult, nvType, nvSize, foundVal, dirSearch, nSize;
pointer pEnv;
        
begin

TomcatPath = TARGETDIR ^ "\\Server\\web";
JavaPath = TARGETDIR ^ "\\Runtime";

//set a system environment variable CATALINA_HOME for use by the Tomcat service
szName = "CATALINA_HOME";         
RegDBSetDefaultRoot ( HKEY_LOCAL_MACHINE );
szKey = "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment";
foundVal = RegDBSetKeyValueEx ( szKey , szName , REGDB_STRING , TomcatPath , -1 );
//SprintfBox (SEVERE, "Did I find the key?", "%d", foundVal);

//make sure that Tomcat will be aware of any new environment variables
szEnv = "Environment";
pEnv = &szEnv;
SendMessage ( HWND_BROADCAST , WM_SETTINGCHANGE , 0 , pEnv );

//unpack the war file
foundVal = ChangeDirectory(TomcatPath + "\\webapps\\bin");
szCmdLine = '-xfv yukon.war';
LaunchAppAndWait ('jar.exe' , szCmdLine, WAIT | LAAW_OPTION_NO_CHANGEDIRECTORY);

//some cleanup to take care of after unpacking the war
//get rid of this copy of jar.exe and rename bin to ROOT for deployment
DeleteFile(TomcatPath + "\\webapps\\bin\\yukon.war");
DeleteFile(TomcatPath + "\\webapps\\bin\\jar.exe");
DeleteFile(TomcatPath + "\\webapps\\bin\\hpi.dll");
DeleteFile(TomcatPath + "\\webapps\\bin\\java.dll");
DeleteFile(TomcatPath + "\\webapps\\bin\\verify.dll");
DeleteFile(TomcatPath + "\\webapps\\bin\\zip.dll");
DeleteDir (TomcatPath + "\\webapps\\bin\\client", ALLCONTENTS );
DeleteDir (TomcatPath + "\\webapps\\lib", ALLCONTENTS );
/*****/
foundVal = ChangeDirectory(TomcatPath + "\\webapps");
GetSystemInfo ( DATE, foundVal, dateString );
RenameFile(TomcatPath + "\\webapps\\ROOT", TomcatPath + "\\webapps\\ArchivedROOT" + dateString);
DeleteDir (TomcatPath + "\\webapps\\ROOT", ALLCONTENTS );
RenameFile(TomcatPath + "\\webapps\\bin", TomcatPath + "\\webapps\\ROOT"); 
/*****/

//make sure that Tomcat will be aware of the presence of the new environment variables
szEnv = "Environment";
pEnv = &szEnv;
SendMessage ( HWND_BROADCAST , WM_SETTINGCHANGE , 0 , pEnv );

szServPath = TomcatPath ^ "\\bin\\";
TextSubGetValue ( "<TARGETDIR>", targetString, FALSE, FALSE );
szCmdLine = 'install ' + targetString ^ "\\Runtime"; 

//LaunchAppAndWait ( szServPath ^ "service.bat" , szCmdLine, WAIT );
LaunchAppAndWait ( szServPath ^ "yukonservice.bat" , szCmdLine, WAIT );

//Add this service to the YUKON GROUP so it shows up in TDC
RegDBSetDefaultRoot ( HKEY_LOCAL_MACHINE );
szKey = "\\SYSTEM\\CurrentControlSet\\Services\\YukonWebApplicationService";
szName = "Group";
szValue = "YUKON GROUP";
nSize = -1; 
RegDBSetKeyValueEx ( szKey , szName , REGDB_STRING , szValue , nSize );

//we no longer want the web application service to start right away
/*szCmdLine = 'start "Yukon Web Application Service"';
LaunchAppAndWait ("net.exe" , szCmdLine, WAIT );  */

configMsg1 = "To configure Yukon, please verify the following:";
configMsg2 = "\n  1.) That master.cfg file contains the correct database connection information.";
configMsg3 = "\n  2.) That the Yukon Web Application Service has been started. \n   ** (Changes to master.cfg will require a restart of this service.)";
configMsg4 = "\n  3.) That setup.jsp has been visited with a browser and all settings are correct (see desktop shortcut).";
configMsg5 = "\n\nWould you like to open the master.cfg file for editing at this time?";
nvResult = AskYesNo ( configMsg1 + configMsg2 + configMsg3 + configMsg4 + configMsg5, YES );
if(nvResult = 1) then
	LaunchApp("notepad.exe", TARGETDIR ^ "\\server\\config\\master.cfg");
endif;

end;
///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Uninstalled event is sent just after files for the component:
//              Yukon Server\Tomcat are removed during uninstallation.
///////////////////////////////////////////////////////////////////////////////
 
export prototype Tomcat_UnInstalled();
function Tomcat_UnInstalled()
begin
end;
///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Uninstalling event is sent just before files for the component:
//              Yukon Server\Tomcat are removed during uninstallation. 
///////////////////////////////////////////////////////////////////////////////
 
export prototype Tomcat_UnInstalling();
function Tomcat_UnInstalling()
string szCmdLine, szServPath;
string szAppPath, szPath;
number nvResult, dirSearch;

begin

//stop the Tomcat service
szCmdLine = 'stop "Yukon Web Application Service"';
LaunchAppAndWait ("net.exe" , szCmdLine, WAIT );

Delay(4);
     
//remove the Tomcat service
szServPath = TARGETDIR ^ "\\Server\\web\\bin\\";
szCmdLine = 'remove';
LaunchAppAndWait ( szServPath ^ "service.bat" , szCmdLine, WAIT );

//make sure any legacy files are gone so that Tomcat avoids confusion
//however, spare the esub directory and the webconfig\custom folder
szPath = TARGETDIR + "\\Server\\web\\webapps\\ROOT";
dirSearch =  ExistsDir (szPath);
if(dirSearch = 0) then
   	DeleteDir ( szPath + "\\analysis" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\apps" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\bulk" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\capcontrol" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\cttp" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\demos" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\editor" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\include" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\install" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\JavaScript" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\loadmgmt" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\META-INF" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\operator" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\readmeter" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\template" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\test" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\user" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\voice" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\WEB-INF" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\analysis" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\WebConfig\\yukon", ALLCONTENTS );
   	DeleteDir ( szPath + "\\WebConfig\\CILC", ALLCONTENTS ); 
   	DeleteFile ( szPath + "\\*.*" );
endif;


end;














