//////////////////////////////////////////////////////////////
//These are constants required for Windows API broadcast calls
#define WM_SETTINGCHANGE 0x001A 
//////////////////////////////////////////////////////////////

BOOL setupIsNeeded;

///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Installing event is sent just before files for the component:
//              Yukon Server are transferred.
///////////////////////////////////////////////////////////////////////////////

export prototype YukonServer_Installing();
function YukonServer_Installing()
number dirSearch;
string szPath;
string szSrcFile , szTargetFile;
string szCmdLine;

begin

szPath = TARGETDIR ^ "\\Server\\Config";

dirSearch = ExistsDir ( szPath );
if(dirSearch = 0) then
    szSrcFile = szPath ^ "\\master.cfg";
    szTargetFile = szPath ^ "\\OldMaster.cfg";
    DeleteFile ( szTargetFile );
    CopyFile ( szSrcFile , szTargetFile );
    // RenameFile ( szSrcFile , szTargetFile );
endif;

end;

///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Installed event is sent just after files for the component:
//              Yukon Server are transferred.
///////////////////////////////////////////////////////////////////////////////

export prototype YukonServer_Installed();
function YukonServer_Installed()
string szCmdLine, szServPath;
string szAppPath;
number nvResult;

begin
    Disable(STATUSEX);

    nvResult = AskYesNo ( "Would you like to open the server master.cfg file for editing?" , YES );
    if(nvResult = 1) then
        LaunchApp("notepad.exe", TARGETDIR ^ "\\server\\config\\master.cfg");
    endif;

    szAppPath = TARGETDIR ^ "\\server\\bin";

    if( RegDBSetDefaultRoot(HKEY_LOCAL_MACHINE) < 0 ) then
        MessageBox("Call to RegDBSetDefaultRoot failed", SEVERE);
    endif;

    if( RegDBCreateKeyEx("SOFTWARE\\Cannon Technologies\\CParms", "") < 0 ) then
        MessageBox("Call to REgDBCreateEx failed", SEVERE );
    endif;

    if( RegDBSetKeyValueEx("SOFTWARE\\Cannon Technologies\\CParms","Config",REGDB_STRING, TARGETDIR ^ "\\server\\config\\master.cfg", -1 ) < 0 ) then
        MessageBox("Call to RegDBSetKeyValueEx failed", SEVERE);
    endif;

    return 0;
end;

///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Installing event is sent just before files for the component: 
//              Yukon Server\Tomcat are transferred. 
///////////////////////////////////////////////////////////////////////////////
 
export prototype Tomcat_Installing();
function Tomcat_Installing()
number nvSize, nvType, nvResult, foundVal, backupVer, stSize, verCon, dirSearch;
string szKey, szName, keyValue, minVersion, szCmdLine, szPath, szServPath;
STRING szTitle, szFormat, szString, szSrcFile, szTargetFile;
number fileExists;

begin

//stop the Tomcat service if it is present and running
szCmdLine = 'stop "Yukon Web Applications Service"';
LaunchAppAndWait ("net.exe" , szCmdLine, WAIT ); 

Delay(4);

//remove the Tomcat service
szServPath = TARGETDIR ^ "\\Server\\web\\bin\\";
szCmdLine = '-uninstall "Yukon Web Applications Service"';
LaunchAppAndWait ( szServPath ^ "tomcat.exe" , szCmdLine, WAIT );

//make sure any legacy files are gone so that Tomcat avoids confusion
//however, spare the esub directory and the webconfig\custom folder
szPath = TARGETDIR + "\\Server\\web\\webapps\\yukon";
dirSearch =  ExistsDir (szPath);
if(dirSearch = 0) then
   	DeleteDir ( szPath + "\\analysis" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\apps" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\bulk" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\capcontrol" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\cttp" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\demos" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\editor" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\include" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\install" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\JavaScript" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\loadmgmt" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\META-INF" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\operator" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\readmeter" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\template" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\test" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\user" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\voice" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\WEB-INF" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\analysis" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\WebConfig\\yukon", ALLCONTENTS );
   	DeleteDir ( szPath + "\\WebConfig\\CILC", ALLCONTENTS ); 
endif;

//set a system environment variable JRE_HOME for use by the Tomcat service
szName = "JRE_HOME";         
RegDBSetDefaultRoot ( HKEY_LOCAL_MACHINE );
szKey = "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment";
foundVal = RegDBSetKeyValueEx ( szKey , szName , REGDB_STRING , TARGETDIR + "\\Runtime" , -1 );
//SprintfBox (SEVERE, "Did I find the key?", "%d", foundVal);

end;
///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Installed event is sent just after files for the component: 
//              Yukon Server\Tomcat are transferred. 
///////////////////////////////////////////////////////////////////////////////
 
export prototype Tomcat_Installed();
function Tomcat_Installed()
STRING szCmdLine;
string szServPath, szPath, TomcatPath, JavaPath, WarPath;
string szAppPath, szName, szKey, szEnv, szTargetFile, szSrcFile, szValue;
number nvResult, nvType, nvSize, foundVal, dirSearch, nSize;
pointer pEnv;
        
begin

TomcatPath = TARGETDIR ^ "\\Server\\web";
JavaPath = TARGETDIR ^ "\\Runtime";

//make sure that Tomcat will be aware of any new environment variables
szEnv = "Environment";
pEnv = &szEnv;
SendMessage ( HWND_BROADCAST , WM_SETTINGCHANGE , 0 , pEnv );

//set a system environment variable CATALINA_HOME for use by the Tomcat service
szName = "CATALINA_HOME";         
RegDBSetDefaultRoot ( HKEY_LOCAL_MACHINE );
szKey = "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment";
foundVal = RegDBSetKeyValueEx ( szKey , szName , REGDB_STRING , TomcatPath , -1 );
//SprintfBox (SEVERE, "Did I find the key?", "%d", foundVal);

//unpack the war file
foundVal = ChangeDirectory(TomcatPath + "\\webapps\\yukon");
WarPath = TomcatPath + '\\webapps\\yukon\\yukon.war';
szCmdLine = '-xfv ' + WarPath;
//LaunchAppAndWait (JavaPath+"\\bin\\jar.exe" , szCmdLine, WAIT | LAAW_OPTION_NO_CHANGEDIRECTORY);
DeleteFile(TomcatPath + "\\webapps\\yukon\\yukon.war");

//make sure that Tomcat will be aware of the presence of the new environment variables
szEnv = "Environment";
pEnv = &szEnv;
SendMessage ( HWND_BROADCAST , WM_SETTINGCHANGE , 0 , pEnv );

//install Tomcat as a service (behold this lumbering behemoth of a command line)
szServPath = TomcatPath ^ "\\bin\\";
szCmdLine = 'install';
/*nvResult = AskYesNo ( "Would you like to install Tomcat as a service?" , NO );
if(nvResult = 1) then */
LaunchAppAndWait ( szServPath ^ "service.bat" , szCmdLine, WAIT );
	//SprintfBox (SEVERE, "DEBUG: Command Line Contents", "%s", szCmdLine + szCmdLine2 + szCmdLine3);     
//endif;
  
//Add this service to the YUKON GROUP so it shows up in TDC
RegDBSetDefaultRoot ( HKEY_LOCAL_MACHINE );
szKey = "\\SYSTEM\\CurrentControlSet\\Services\\Yukon Web Applications Service";
szName = "Group";
szValue = "YUKON GROUP";
nSize = -1; 
RegDBSetKeyValueEx ( szKey , szName , REGDB_STRING , szValue , nSize );  
  
//start the Tomcat service
szCmdLine = 'start "Yukon Web Applications Service"';
LaunchAppAndWait ("net.exe" , szCmdLine, WAIT );

setupIsNeeded = 1;

end;
///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Uninstalled event is sent just after files for the component:
//              Yukon Server\Tomcat are removed during uninstallation.
///////////////////////////////////////////////////////////////////////////////
 
export prototype Tomcat_UnInstalled();
function Tomcat_UnInstalled()
begin
end;
///////////////////////////////////////////////////////////////////////////////
//  EVENT:      Uninstalling event is sent just before files for the component:
//              Yukon Server\Tomcat are removed during uninstallation. 
///////////////////////////////////////////////////////////////////////////////
 
export prototype Tomcat_UnInstalling();
function Tomcat_UnInstalling()
string szCmdLine, szServPath;
string szAppPath, szPath;
number nvResult, dirSearch;

begin

//stop the Tomcat service
szCmdLine = 'stop "Yukon Web Applications Service"';
LaunchAppAndWait ("net.exe" , szCmdLine, WAIT );

Delay(4);
     
//remove the Tomcat service
szServPath = TARGETDIR ^ "\\Server\\web\\bin\\";
szCmdLine = 'remove';
LaunchAppAndWait ( szServPath ^ "service.bat" , szCmdLine, WAIT );

//make sure any legacy files are gone so that Tomcat avoids confusion
//however, spare the esub directory and the webconfig\custom folder
szPath = TARGETDIR + "\\Server\\web\\webapps\\yukon";
dirSearch =  ExistsDir (szPath);
if(dirSearch = 0) then
   	DeleteDir ( szPath + "\\analysis" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\apps" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\bulk" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\capcontrol" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\cttp" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\demos" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\editor" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\include" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\install" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\JavaScript" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\loadmgmt" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\META-INF" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\operator" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\readmeter" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\template" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\test" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\user" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\voice" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\WEB-INF" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\analysis" , ALLCONTENTS );
   	DeleteDir ( szPath + "\\WebConfig\\yukon", ALLCONTENTS );
   	DeleteDir ( szPath + "\\WebConfig\\CILC", ALLCONTENTS ); 
   	DeleteFile ( szPath + "\\*.*" );
endif;


end;














