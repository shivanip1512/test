project(service) {
  sharedname=service


  macros += BOOST_ALL_DYN_LINK
  macros += BOOST_ENABLE_ASSERT_HANDLER
  macros += BUILD_VERSION=6.5\ (build\ 0)
  macros += BUILD_VERSION_DETAILS=6.5.0
  macros += NOMINMAX
  macros += WIN32
  macros += WINDOWS
  macros += _CONSOLE
  specific {
    Debug::macros += _DEBUG
  }
  macros += _DLL_SERVICE
  macros += _REENTRANT
  macros += _WINDOWS
  macros += _X86_=1
  macros += __DLL__
  macros += D_FILE_NAME=service
  macros += D_FILE_VERSION=6,5,0,0
  macros += D_FILE_VERSION_STR=6.5.0.0
  macros += D_PRODUCT_VERSION=6,5,0,0
  macros += D_PRODUCT_VERSION_STR=6.5
  includes += .
  includes += ../common/include
  includes += ../service/include
  includes += ./include
  includes += /include
  includes += $(BOOST)\include
  lit_libs += advapi32
  lit_libs += User32
  pch_header = precompiled.h
  pch_source = ../precompiled.cpp

  Source_Files {
    ../precompiled.cpp
    
    cservice.cpp
    cserviceconfig.cpp
    eventlog.cpp
  }


  Header_Files {
    include/cservice.h
    include/CServiceConfig.h
    include/EventLog.h
    include/Monitor.h
    include/precomp.h
  }

  Resource_Files {
    ../versioninfo.rc
  }

  specific {
    postbuild= \ns {
if not exist $(SolutionDir)bin mkdir $(SolutionDir)bin
xcopy /d/y/f $(OutDir)$(TargetFileName) $(SolutionDir)bin
if not exist $(SolutionDir)lib mkdir $(SolutionDir)lib
if exist $(OutDir)$(TargetName).lib xcopy /d/y/f $(OutDir)$(TargetName).lib $(SolutionDir)lib
if exist $(OutDir)$(TargetName).lib xcopy /d/y/f $(OutDir)$(TargetName).lib $(SolutionDir)bin
    }
  }

  specific {
    Release::lib_modifier =
    Debug::lib_modifier =
  }

}

