project(ctiprot) {
  sharedname=ctiprot

  after += ctibase
  after += ctimsg

  macros += BOOST_ALL_DYN_LINK
  macros += BOOST_ENABLE_ASSERT_HANDLER
  macros += BUILD_VERSION=6.5\ (build\ 0)
  macros += BUILD_VERSION_DETAILS=6.5.0
  macros += NOMINMAX
  macros += WIN32
  macros += _CONSOLE
  specific {
    Debug::macros += _DEBUG
  }
  macros += _DLL_PROT
  macros += _REENTRANT
  macros += _WINDOWS
  macros += _X86_=1
  macros += __DLL__
  macros += D_FILE_NAME=ctiprot
  macros += D_FILE_VERSION=6,5,0,0
  macros += D_FILE_VERSION_STR=6.5.0.0
  macros += D_PRODUCT_VERSION=6,5,0,0
  macros += D_PRODUCT_VERSION_STR=6.5
  includes += $(BOOST)/include
  includes += $(LIBCOAP)/include
  includes += $(SQLAPI)/include
  includes += $(XERCES)/include
  includes += .
  includes += ../common/include
  includes += ../database/include
  includes += ../deviceconfiguration/include
  includes += ../message/include
  includes += ../protocol/include
  includes += ../rtdb/include
  includes += ./include
  includes += $(BOOST)\include
  lit_libs += ..\lib\ctibase
  lit_libs += ..\Protocol\3rdParty\saprotocol
  lit_libs += ..\lib\ctimsg
  specific {
    Debug::lit_libs   += $(LIBCOAP)\$(CONFIGURATION)\lib\libcoapd
    Release::lit_libs += $(LIBCOAP)\$(CONFIGURATION)\lib\libcoap
  }
  lit_libs += Ws2_32
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_chrono-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_chrono-vc120-mt-1_58
  }
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_date_time-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_date_time-vc120-mt-1_58
  }
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_thread-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_thread-vc120-mt-1_58
  }
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_regex-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_regex-vc120-mt-1_58
  }
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_filesystem-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_filesystem-vc120-mt-1_58
  }
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_system-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_system-vc120-mt-1_58
  }
  pch_header = precompiled.h
  pch_source = ../precompiled.cpp

  Source_Files {
    ../precompiled.cpp
    
    expresscom.cpp
    prot_emetcon.cpp
    prot_versacom.cpp
    prot_711.cpp
    prot_fpcbc.cpp
    prot_sa3rdparty.cpp
    prot_sa305.cpp
    prot_sixnet.cpp
    prot_base.cpp
    prot_e2eDataTransfer.cpp
    prot_modbus.cpp
    prot_dnp.cpp
    prot_dnpSlave.cpp
    dnp_application.cpp
    dnp_transport.cpp
    dnp_datalink.cpp
    dnp_datalink_packet.cpp
    dnp_objects.cpp
    dnp_object_analoginput.cpp
    dnp_object_analogoutput.cpp
    dnp_object_binaryinput.cpp
    dnp_object_binaryoutput.cpp
    dnp_object_internalindications.cpp
    dnp_object_class.cpp
    dnp_object_counter.cpp
    dnp_object_time.cpp
    prot_ion.cpp
    ion_datastream.cpp
    ion_net_application.cpp
    ion_net_network.cpp
    ion_net_datalink.cpp
    ion_value.cpp
    ion_value_fixed.cpp
    ion_value_fixed_char.cpp
    ion_value_fixed_float.cpp
    ion_value_fixed_intsigned.cpp
    ion_value_fixed_intunsigned.cpp
    ion_value_fixed_time.cpp
    ion_value_struct.cpp
    ion_value_struct_types.cpp
    ion_value_structarray.cpp
    ion_value_variable.cpp
    ion_value_variable_boolean.cpp
    ion_value_variable_program.cpp
    ion_value_variable_fixedarray.cpp
    prot_seriesv.cpp
    prot_lmi.cpp
    prot_idlc.cpp
    prot_klondike.cpp
    prot_ansi_kv2.cpp
    prot_ansi_sentinel.cpp
    prot_ansi_focus.cpp
    prot_ansi.cpp
    ansi_application.cpp
    ansi_datalink.cpp
    std_ansi_tbl_base.cpp
    ansi_billing_table.cpp
    std_ansi_tbl_00.cpp
    std_ansi_tbl_01.cpp
    std_ansi_tbl_08.cpp
    std_ansi_tbl_10.cpp
    std_ansi_tbl_11.cpp
    std_ansi_tbl_12.cpp
    std_ansi_tbl_13.cpp
    std_ansi_tbl_14.cpp
    std_ansi_tbl_15.cpp
    std_ansi_tbl_16.cpp
    std_ansi_tbl_21.cpp
    std_ansi_tbl_22.cpp
    std_ansi_tbl_23.cpp
    std_ansi_tbl_25.cpp
    std_ansi_tbl_27.cpp
    std_ansi_tbl_28.cpp
    std_ansi_tbl_31.cpp
    std_ansi_tbl_32.cpp
    std_ansi_tbl_33.cpp
    std_ansi_tbl_51.cpp
    std_ansi_tbl_52.cpp
    std_ansi_tbl_61.cpp
    std_ansi_tbl_62.cpp
    std_ansi_tbl_63.cpp
    std_ansi_tbl_64.cpp
    ansi_kv2_mtable_000.cpp
    ansi_kv2_mtable_070.cpp
    ansi_kv2_mtable_110.cpp
    ansi_focus_mtable_004.cpp
    ansi_focus_mtable_013.cpp
    ansi_focus_mtable_024.cpp
    prot_transdata.cpp
    transdata_application.cpp
    transdata_tracker.cpp
    transdata_datalink.cpp
    transdata_data.cpp
    prot_ymodem.cpp
    prot_gpuff.cpp
    dll_prot.cpp
    id_ctiprot.cpp
  }


  Header_Files {
    protocol/include/ansi_application.h
    protocol/include/ansi_billing_table.h
    protocol/include/ansi_datalink.h
    protocol/include/ansi_focus_mtable_004.h
    protocol/include/ansi_focus_mtable_013.h
    protocol/include/ansi_focus_mtable_024.h
    protocol/include/ansi_kv2_mtable_000.h
    protocol/include/ansi_kv2_mtable_070.h
    protocol/include/ansi_kv2_mtable_110.h
    protocol/include/dnp_application.h
    protocol/include/dnp_configuration.h
    protocol/include/dnp_datalink.h
    protocol/include/dnp_datalink_packet.h
    protocol/include/dnp_object_analoginput.h
    protocol/include/dnp_object_analogoutput.h
    protocol/include/dnp_object_binaryinput.h
    protocol/include/dnp_object_binaryoutput.h
    protocol/include/dnp_object_class.h
    protocol/include/dnp_object_counter.h
    protocol/include/dnp_object_internalindications.h
    protocol/include/dnp_object_time.h
    protocol/include/dnp_objects.h
    protocol/include/dnp_transport.h
    protocol/include/expresscom.h
    protocol/include/id_ctiprot.h
    protocol/include/ion_datastream.h
    protocol/include/ion_net_application.h
    protocol/include/ion_net_datalink.h
    protocol/include/ion_net_network.h
    protocol/include/ion_serializable.h
    protocol/include/ion_value.h
    protocol/include/ion_value_fixed.h
    protocol/include/ion_value_fixed_char.h
    protocol/include/ion_value_fixed_float.h
    protocol/include/ion_value_fixed_intsigned.h
    protocol/include/ion_value_fixed_intunsigned.h
    protocol/include/ion_value_fixed_time.h
    protocol/include/ion_value_numeric.h
    protocol/include/ion_value_struct.h
    protocol/include/ion_value_struct_types.h
    protocol/include/ion_value_structarray.h
    protocol/include/ion_value_variable.h
    protocol/include/ion_value_variable_boolean.h
    protocol/include/ion_value_variable_fixedarray.h
    protocol/include/ion_value_variable_fixedarray_element.h
    protocol/include/ion_value_variable_program.h
    protocol/include/packet_finder.h
    protocol/include/prot_711.h
    protocol/include/prot_ansi.h
    protocol/include/prot_ansi_focus.h
    protocol/include/prot_ansi_kv2.h
    protocol/include/prot_ansi_sentinel.h
    protocol/include/prot_base.h
    protocol/include/prot_dnp.h
    protocol/include/prot_dnpSlave.h
    protocol/include/prot_e2eDataTransfer.h
    protocol/include/prot_emetcon.h
    protocol/include/prot_fpcbc.h
    protocol/include/prot_gpuff.h
    protocol/include/prot_idlc.h
    protocol/include/prot_ion.h
    protocol/include/prot_klondike.h
    protocol/include/prot_lmi.h
    protocol/include/prot_modbus.h
    protocol/include/prot_sa305.h
    protocol/include/prot_sa3rdparty.h
    protocol/include/prot_seriesv.h
    protocol/include/prot_sixnet.h
    protocol/include/prot_transdata.h
    protocol/include/prot_versacom.h
    protocol/include/prot_welco.h
    protocol/include/prot_wrap.h
    protocol/include/prot_ymodem.h
    protocol/include/protocol_sa.h
    protocol/include/std_ansi_tbl_00.h
    protocol/include/std_ansi_tbl_01.h
    protocol/include/std_ansi_tbl_08.h
    protocol/include/std_ansi_tbl_10.h
    protocol/include/std_ansi_tbl_11.h
    protocol/include/std_ansi_tbl_12.h
    protocol/include/std_ansi_tbl_13.h
    protocol/include/std_ansi_tbl_14.h
    protocol/include/std_ansi_tbl_15.h
    protocol/include/std_ansi_tbl_16.h
    protocol/include/std_ansi_tbl_21.h
    protocol/include/std_ansi_tbl_22.h
    protocol/include/std_ansi_tbl_23.h
    protocol/include/std_ansi_tbl_25.h
    protocol/include/std_ansi_tbl_27.h
    protocol/include/std_ansi_tbl_28.h
    protocol/include/std_ansi_tbl_31.h
    protocol/include/std_ansi_tbl_32.h
    protocol/include/std_ansi_tbl_33.h
    protocol/include/std_ansi_tbl_51.h
    protocol/include/std_ansi_tbl_52.h
    protocol/include/std_ansi_tbl_61.h
    protocol/include/std_ansi_tbl_62.h
    protocol/include/std_ansi_tbl_63.h
    protocol/include/std_ansi_tbl_64.h
    protocol/include/std_ansi_tbl_91.h
    protocol/include/std_ansi_tbl_92.h
    protocol/include/std_ansi_tbl_base.h
    protocol/include/transdata_application.h
    protocol/include/transdata_data.h
    protocol/include/transdata_datalink.h
    protocol/include/transdata_tracker.h
  }

  Resource_Files {
    ../versioninfo.rc
  }

  specific {
    postbuild= \ns {
if not exist $(SolutionDir)bin mkdir $(SolutionDir)bin
xcopy /d/y/f $(OutDir)$(TargetFileName) $(SolutionDir)bin
if not exist $(SolutionDir)lib mkdir $(SolutionDir)lib
if exist $(OutDir)$(TargetName).lib xcopy /d/y/f $(OutDir)$(TargetName).lib $(SolutionDir)lib
if exist $(OutDir)$(TargetName).lib xcopy /d/y/f $(OutDir)$(TargetName).lib $(SolutionDir)bin
if not exist $(SolutionDir)bin mkdir $(SolutionDir)bin
xcopy /d/y/f $(SolutionDir)Protocol\3rdParty\SAprotocol.dll $(SolutionDir)bin
    }
  }

  specific {
    Release::lib_modifier =
    Debug::lib_modifier =
  }

}

