#pragma once

#include "dlldefs.h"
#include <string>

#include "intsafe.h"  //  for INT, CHAR, etc

enum IM_EX_CTIBASE ErrorTypes
{
    ERRTYPENONE = 0,
    ERRTYPEUNKNOWN = 0,
    ERRTYPESYSTEM = 1,
    ERRTYPEPROTOCOL,
    ERRTYPECOMM,
};


IM_EX_CTIBASE ErrorTypes  GetErrorType  (int errorNumber);
IM_EX_CTIBASE std::string GetErrorString(int errorNumber);


enum Dsm2Errors
{
    //NORMAL = 0,
    NOTNORMAL = 1,
    NODWORD,
    BADTYPE,
    DLENGTH,
    BADLOAD,
    BADTIME,
    BADLEVEL,
    BADID,
    BADRANGE,
    MISPARAM,
    SYNTAX,
    BADLATCH,
    FNI,
    BADSTATE,
    BADPARITY,
    BADCCU,
    NACK1,
    NACK2,
    NACK3,
    NACKPAD1,
    NACKPAD2,
    NACKPAD3,
    BADCCUTYPE,
    BADCOUNT,
    BADPAUSE,
    BADPARAM,
    BADROUTE,
    BADBUSS,
    BADAMP,
    READERR,
    READTIMEOUT,
    BADSEQUENCE,
    FRAMEERR,
    BADCRC,
    BADLENGTH,
    BADUA,
    ERRUNKNOWN,
    BADADDRESS,
    BADROLE,
    INVALIDFIX,
    INVALIDVOU,
    INVALIDVIN,
    INVALIDSTG,

    BADFILE = 45,
    REQACK,
    RTFERR,
    NOTR,
    RTNF,
    FNO,
    RONF,
    ROFERR,
    DBFERR,
    IDNF,
    TYFERR,
    TYNF,
    EWORDRCV,
    BADFILL,
    SYSTEM,
    BADPORT,
    QUEUE_READ,
    QUEUE_WRITE,
    MEMORY,
    SEMAPHORE,
    NODCD,
    WRITETIMEOUT,
    PORTREAD,
    PORTWRITE,
    PIPEWRITE,
    PIPEREAD,
    QUEUEEXEC,
    DLCTIMEOUT,
    NOATTEMPT,
    ROUTEFAILED,
    TRANSFAILED,
    JWORDRCV,
    NOREMOTEPORTER,
    REMOTEINHIBITED,
    QUEUEFLUSHED,
    PIPEBROKEN,
    PIPEWASBROKEN,
    PIPEOPEN,
    PORTINHIBITED,
    ACCUMSNOTSUPPORTED,
    DEVICEINHIBITED,
    POINTINHIBITED,
    DIALUPERROR,
    WRONGADDRESS,
    TCPCONNECTERROR,
    TCPWRITEERROR,
    TCPREADERROR,
    ADDRESSERROR,
    ALPHABUFFERERROR,
    MISCONFIG,

    BADSOCK = 98,
    SOCKWRITE,
    BADBCH,
};

