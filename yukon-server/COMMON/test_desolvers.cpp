#include <boost/test/unit_test.hpp>

#include "desolvers.h"
#include "devicetypes.h"
#include "boostutil.h"

#include <boost/assign/list_of.hpp>

using namespace std;

BOOST_AUTO_TEST_SUITE( test_desolvers )

BOOST_AUTO_TEST_CASE(test_desolveDeviceType)
{
    const std::string empty;

    const std::vector<std::string> expected = boost::assign::list_of
        (empty)
            .repeat(1, empty)
        ("LMT-2")
            .repeat(1, empty)
        ("DCT-501")
        ("REPEATER")
        ("REPEATER 800")
        ("REPEATER 850")
            .repeat(2, empty)
        ("MCT-210")
        ("MCT-212")
        ("MCT-213")
            .repeat(7, empty)
        ("MCT-224")
        ("MCT-226")
            .repeat(8, empty)
        ("MCT-240")
        ("MCT-242")
        ("MCT-248")
            .repeat(7, empty)
        ("MCT-250")
            .repeat(19, empty)
        ("MCT-310")
            .repeat(3, empty)
        ("MCT-310ID")
            .repeat(3, empty)
        ("MCT-318")
        ("MCT-310IL")
            .repeat(1, empty)
        ("MCT-310IDL")
            .repeat(3, empty)
        ("MCT-360")
            .repeat(4, empty)
        ("MCT-370")
            .repeat(1, empty)
        ("MCT-410CL")
        ("MCT-410FL")
        ("MCT-410GL")
        ("MCT-410IL")
        ("MCT-420CL")
        ("MCT-420CD")
        ("MCT-420FL")
        ("MCT-420FD")
        ("MCT-470")
        ("MCT-430A")
        ("MCT-430A3")
        ("MCT-430S4")
        ("MCT-430SL")
            .repeat(25, empty)
        ("LCR-3102")
            .repeat(29, empty)
        ("LOAD TAP CHANGER")
            .repeat(69, empty)
        ("CAP BANK")
        ("CBC VERSACOM")
        ("CBC EXPRESSCOM")
            .repeat(7, empty)
        ("CBC FP-2800")
            .repeat(9, empty)
        ("CBC 6510")
            .repeat(9, empty)
        ("CBC 7010")
            .repeat(9, empty)
        ("CBC 7020")
        ("CBC DNP")
            .repeat(8, empty)
        ("CBC 8020")
            .repeat(29, empty)
        ("RFN-430A3")
        ("RFN-430ELO")
        ("RFN-430KV")
            .repeat(7, empty)
        ("RFN-410FL")
        ("RFN-410FX")
        ("RFN-410FD")
            .repeat(7, empty)
        ("RFN-420ELO")
            .repeat(679, empty)
        ("CCU-700")
        ("CCU-710A")
            .repeat(1, empty)
        ("CCU-711")
            .repeat(6, empty)
        ("CCU-721")
            .repeat(89, empty)
        ("RTU-ILEX")
        ("RTU-WELCO")
        ("RTU-SES92")
        ("RTU-DNP")
            .repeat(6, empty)
        ("RTU-DART")
            .repeat(39, empty)
        ("ION-7330")
        ("ION-7700")
        ("ION-8300")
            .repeat(47, empty)
        ("LCU-415")
            .repeat(4, empty)
        ("LCU-LG")
            .repeat(4, empty)
        ("LCU-EASTRIVER")
            .repeat(4, empty)
        ("LCU-T026")
            .repeat(34, empty)
        ("TCU-5000")
            .repeat(4, empty)
        ("TCU-5500")
            .repeat(244, empty)
        ("TRANSDATA MARK-V")
            .repeat(99, empty)
        ("DAVISWEATHER")
            .repeat(199, empty)
        ("ALPHA POWER PLUS")
            .repeat(4, empty)
        ("FULCRUM")
            .repeat(4, empty)
        ("LANDIS-GYR S4")
            .repeat(4, empty)
        ("VECTRON")
            .repeat(4, empty)
        ("ALPHA A1")
            .repeat(4, empty)
        ("DR-87")
            .repeat(4, empty)
        ("QUANTUM")
            .repeat(4, empty)
        ("KV2")
            .repeat(4, empty)
        ("SENTINEL")
        ("FOCUS")
            .repeat(3, empty)
        ("ALPHA A3")
            .repeat(4, empty)
        ("SIXNET")
            .repeat(9, empty)
        ("IPC-410FL")
        ("IPC-420FD")
        ("IPC-430S4E")
        ("IPC-430SL")
            .repeat(36, empty)
        ("TAP TERMINAL")
            .repeat(4, empty)
        ("WCTP TERMINAL")
        ("RDS TERMINAL")
        ("SNPP TERMINAL")
        ("PAGE RECEIVER")
        ("TNPP TERMINAL")
        ("RTC")
        ("RTM")
        ("FMU")
            .repeat(17, empty)
        ("RTU-MODBUS")
            .repeat(9, empty)
        ("FAULTED CIRCUIT INDICATOR")
        ("CAPACITOR BANK NEUTRAL MONITOR")
            .repeat(58, empty)
        ("EMETCON GROUP")
        ("VERSACOM GROUP")
            .repeat(3, empty)
        ("RIPPLE GROUP")
            .repeat(4, empty)
        ("POINT GROUP")
            .repeat(4, empty)
        ("EXPRESSCOM GROUP")
        ("RFN EXPRESSCOM GROUP")
        ("DIGI SEP GROUP")
            .repeat(2, empty)
        ("MCT GROUP")
            .repeat(9, empty)
        ("GOLAY GROUP")
        ("SA-DIGITAL GROUP")
        ("SA-105 GROUP")
        ("SA-205 GROUP")
        ("SA-305 GROUP")
            .repeat(65, empty)
        ("LM DIRECT PROGRAM")
        ("LM CURTAIL PROGRAM")
        ("LM CONTROL AREA")
        ("LM ENERGY EXCHANGE")
            .repeat(96, empty)
        ("CI CUSTOMER")
            .repeat(699, empty)
        ("MACRO GROUP")
            .repeat(99, empty)
        ("SYSTEM")
        ("VIRTUAL SYSTEM")
            .repeat(6998, empty);

    std::vector<std::string> results;

    //  Currently, device types run to 3000
    //    nonexistent indexes default to a blank string
    for( int i = 0; i < 10000; ++i )
    {
        results.push_back(desolveDeviceType(i));
    }

    BOOST_CHECK_EQUAL_COLLECTIONS(
       expected.begin(), expected.end(),
       results.begin(), results.end());
}

BOOST_AUTO_TEST_SUITE_END()
