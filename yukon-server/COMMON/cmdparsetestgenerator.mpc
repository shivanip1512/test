project(cmdparsetestgenerator) {
  exename=cmdparsetestgenerator

  after += yukon-prebuild
  after += ctibase

  macros += BOOST_ALL_DYN_LINK
  macros += BOOST_ENABLE_ASSERT_HANDLER
  macros += NOMINMAX
  macros += WIN32
  macros += _CONSOLE
  specific {
    Debug::macros += _DEBUG
  }
  macros += _REENTRANT
  macros += _WINDOWS
  macros += _X86_=1
  macros += __DLL__
  includes += $(ACTIVEMQ)/include
  includes += $(BOOST)/include
  includes += $(OPENSSL)/include
  includes += $(SQLAPI)/include
  includes += .
  includes += ../common/include
  includes += ./include
  lit_libs += ..\lib\ctibase

  Source_Files {
    cmdparsetestgenerator.cpp
  }


  Header_Files {
    include/AttributeService.h
    include/BeatThePeakAlertLevel.h
    include/boost_test_helpers.h
    include/boost_time.h
    include/boostutil.h
    include/cmdparse.h
    include/collectable.h
    include/COLOR.H
    include/ConfigKey.h
    include/ConfigVal.h
    include/constants.h
    include/counter.h
    include/CParms.h
    include/critical_section.h
    include/ctdpcptrq.h
    include/CTI_ASMC.H
    include/ctibase.h
    include/CTICALLS.H
    include/ctidate.h
    include/ctidbgmem.h
    include/ctipcptrqueue.h
    include/ctiqueues.h
    include/ctitime.h
    include/ctitokenizer.h
    include/database_connection.h
    include/database_exceptions.h
    include/database_reader.h
    include/database_transaction.h
    include/database_util.h
    include/database_writer.h
    include/date_utility.h
    include/db_entry_defines.h
    include/dbaccess.h
    include/debug_timer.h
    include/desolvers.h
    include/DeviceAttributeLookup.h
    include/DeviceConfigDescription.h
    include/devicetypes.h
    include/dllbase.h
    include/dlldefs.h
    include/dsm2.h
    include/DSM2ERR.H
    include/Elogger.h
    include/encryption.h
    include/exception_helper.h
    include/Exceptions.h
    include/fileint.h
    include/guard.h
    include/id_ctibase.h
    include/immutable.h
    include/json.h
    include/LitePoint.h
    include/logFileAppender.h
    include/loggable.h
    include/logger.h
    include/logLayout.h
    include/logManager.h
    include/macro_offset.h
    include/MASTER.H
    include/MetricIdLookup.h
    include/millisecond_timer.h
    include/module_util.h
    include/mutex.h
    include/netports.h
    include/numstr.h
    include/observe.h
    include/optional.h
    include/OS2_2W32.H
    include/parsevalue.h
    include/PointAttribute.h
    include/pointdefs.h
    include/pointtypes.h
    include/PORTER.H
    include/precompiled.h
    include/queue.h
    include/QUEUES.H
    include/random_generator.h
    include/readers_writer_lock.h
    include/regression.h
    include/repeaterrole.h
    include/resolvers.h
    include/resource_helper.h
    include/rfn_identifier.h
    include/row_reader.h
    include/row_writer.h
    include/rtdb.h
    include/sema.h
    include/smartmap.h
    include/socket_helper.h
    include/sorted_vector.h
    include/std_helper.h
    include/stdexcepthdlr.h
    include/streamBuffer.h
    include/streamConnection.h
    include/streamLocalConnection.h
    include/streamSocketConnection.h
    include/streamSocketListener.h
    include/string_util.h
    include/test_cmdparse_input.h
    include/test_cmdparse_output.h
    include/test_reader.h
    include/thread.h
    include/thread_listener.h
    include/thread_monitor.h
    include/thread_register_data.h
    include/ThreadStatusKeeper.h
    include/timeperiod.h
    include/timing_util.h
    include/truncatingConsoleAppender.h
    include/types.h
    include/utility.h
    include/vcomdefs.h
    include/verification_objects.h
    include/version.h
    include/win_helper.h
    include/words.h
    include/worker_thread.h
    include/xfer.h
    include/xml.h
    include/yukon.h
  }

  Resource_Files {
  }

  specific {
    postbuild= \ns {
if not exist $(SolutionDir)bin mkdir $(SolutionDir)bin
xcopy /d/y/f $(OutDir)$(TargetFileName) $(SolutionDir)bin
    }
  }

  specific {
    Release::lib_modifier =
    Debug::lib_modifier =
  }

}

