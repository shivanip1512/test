project(ccu_simulator) {
  exename=ccu_simulator

  after += ctibase
  after += ctiprtdb
  after += ctisvr
  after += ctimsg
  after += ctidevdb
  after += ctidbsrc
  after += service

  macros += BOOST_ALL_DYN_LINK
  macros += BOOST_ENABLE_ASSERT_HANDLER
  macros += BUILD_VERSION=6.5\ (build\ 0)
  macros += BUILD_VERSION_DETAILS=6.5.0
  macros += NOMINMAX
  macros += WIN32
  macros += _CONSOLE
  specific {
    Debug::macros += _DEBUG
  }
  macros += _REENTRANT
  macros += _WINDOWS
  macros += _X86_=1
  macros += __DLL__
  macros += D_FILE_NAME=ccu_simulator
  macros += D_FILE_VERSION=6,5,0,0
  macros += D_FILE_VERSION_STR=6.5.0.0
  macros += D_PRODUCT_VERSION=6,5,0,0
  macros += D_PRODUCT_VERSION_STR=6.5
  includes += $(BOOST)/include
  includes += $(SQLAPI)/include
  includes += .
  includes += ../common/include
  includes += ../database/include
  includes += ../deviceconfiguration/include
  includes += ../message/include
  includes += ../protocol/include
  includes += ../rtdb/include
  includes += ../server/include
  includes += ../service/include
  includes += ./include
  includes += $(BOOST)\include
  lit_libs += advapi32
  lit_libs += ..\lib\ctibase
  lit_libs += ..\lib\ctiprtdb
  lit_libs += ..\lib\ctisvr
  lit_libs += ..\lib\ctimsg
  lit_libs += ..\lib\ctidevdb
  lit_libs += ..\lib\ctidbsrc
  lit_libs += ..\lib\service
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_chrono-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_chrono-vc120-mt-1_58
  }
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_date_time-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_date_time-vc120-mt-1_58
  }
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_thread-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_thread-vc120-mt-1_58
  }
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_regex-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_regex-vc120-mt-1_58
  }
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_filesystem-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_filesystem-vc120-mt-1_58
  }
  specific {
    Debug::lit_libs   += $(BOOST)\lib\boost_system-vc120-mt-gd-1_58
    Release::lit_libs += $(BOOST)\lib\boost_system-vc120-mt-1_58
  }
  pch_header = precompiled.h
  pch_source = ../precompiled.cpp

  Source_Files {
    ../precompiled.cpp
    
    SimulatorUtils.cpp
    Simulator.cpp
    ccu_simulator.cpp
    CommInterface.cpp
    SimulatorLogger.cpp
    PortLogger.cpp
    ScopedLogger.cpp
    PlcInfrastructure.cpp
    DeviceMemoryManager.cpp
    FrozenReadParityBehavior.cpp
    FrozenPeakTimestampBehavior.cpp
    RandomConsumptionBehavior.cpp
    InvalidUsageReadingBehavior.cpp
    EmetconWords.cpp
    PlcTransmitter.cpp
    Ccu710.cpp
    Ccu711.cpp
    Ccu721.cpp
    CcuIDLC.cpp
    Mct410.cpp
    DelayBehavior.cpp
    BchBehavior.cpp
    NackBehavior.cpp
    simulator_main.cpp
    ccusimsvc.cpp
  }


  Header_Files {
    simulator/include/BchBehavior.h
    simulator/include/Behavior.h
    simulator/include/BehaviorCollection.h
    simulator/include/Ccu710.h
    simulator/include/Ccu711.h
    simulator/include/Ccu721.h
    simulator/include/CcuIDLC.h
    simulator/include/ccusimsvc.h
    simulator/include/CommInterface.h
    simulator/include/CommsBehavior.h
    simulator/include/DelayBehavior.h
    simulator/include/DeviceMemoryManager.h
    simulator/include/EmetconWords.h
    simulator/include/FrozenPeakTimestampBehavior.h
    simulator/include/FrozenReadParityBehavior.h
    simulator/include/InvalidUsageReadingBehavior.h
    simulator/include/Mct410.h
    simulator/include/MctBehavior.h
    simulator/include/NackBehavior.h
    simulator/include/PlcBehavior.h
    simulator/include/PlcInfrastructure.h
    simulator/include/PlcTransmitter.h
    simulator/include/PortLogger.h
    simulator/include/RandomConsumptionBehavior.h
    simulator/include/ScopedLogger.h
    simulator/include/Simulator.h
    simulator/include/SimulatorLogger.h
    simulator/include/SimulatorUtils.h
    simulator/include/Types.h
  }

  Resource_Files {
    ../versioninfo.rc
  }

  specific {
    postbuild= \ns {
if not exist $(SolutionDir)bin mkdir $(SolutionDir)bin
xcopy /d/y/f $(OutDir)$(TargetFileName) $(SolutionDir)bin
    }
  }

  specific {
    Release::lib_modifier =
    Debug::lib_modifier =
  }

}

