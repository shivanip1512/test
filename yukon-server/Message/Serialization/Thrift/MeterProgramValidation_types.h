/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef MeterProgramValidation_TYPES_H
#define MeterProgramValidation_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/TBase.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <functional>
#include <memory>


namespace Cti { namespace Messaging { namespace Serialization { namespace Thrift { namespace Porter {

class MeterProgramValidationRequest;

class MeterProgramValidationResponse;


class MeterProgramValidationRequest : public virtual ::apache::thrift::TBase {
 public:

  MeterProgramValidationRequest(const MeterProgramValidationRequest&);
  MeterProgramValidationRequest& operator=(const MeterProgramValidationRequest&);
  MeterProgramValidationRequest() noexcept
                                : _meterProgramGuid() {
  }

  virtual ~MeterProgramValidationRequest() noexcept;
  std::string _meterProgramGuid;

  void __set__meterProgramGuid(const std::string& val);

  bool operator == (const MeterProgramValidationRequest & rhs) const
  {
    if (!(_meterProgramGuid == rhs._meterProgramGuid))
      return false;
    return true;
  }
  bool operator != (const MeterProgramValidationRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MeterProgramValidationRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot) override;
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const override;

  virtual void printTo(std::ostream& out) const;
};

void swap(MeterProgramValidationRequest &a, MeterProgramValidationRequest &b);

std::ostream& operator<<(std::ostream& out, const MeterProgramValidationRequest& obj);


class MeterProgramValidationResponse : public virtual ::apache::thrift::TBase {
 public:

  MeterProgramValidationResponse(const MeterProgramValidationResponse&);
  MeterProgramValidationResponse& operator=(const MeterProgramValidationResponse&);
  MeterProgramValidationResponse() noexcept
                                 : _meterProgramGuid(),
                                   _status(0) {
  }

  virtual ~MeterProgramValidationResponse() noexcept;
  std::string _meterProgramGuid;
  int32_t _status;

  void __set__meterProgramGuid(const std::string& val);

  void __set__status(const int32_t val);

  bool operator == (const MeterProgramValidationResponse & rhs) const
  {
    if (!(_meterProgramGuid == rhs._meterProgramGuid))
      return false;
    if (!(_status == rhs._status))
      return false;
    return true;
  }
  bool operator != (const MeterProgramValidationResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MeterProgramValidationResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot) override;
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const override;

  virtual void printTo(std::ostream& out) const;
};

void swap(MeterProgramValidationResponse &a, MeterProgramValidationResponse &b);

std::ostream& operator<<(std::ostream& out, const MeterProgramValidationResponse& obj);

}}}}} // namespace

#endif
