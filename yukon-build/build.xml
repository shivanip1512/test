<?xml version="1.0" ?>
<project name="Yukon Ant Build Script" default="targets" basedir="..">
    
    <property environment="env" />
    <tstamp/>
    <tstamp>
        <format property="currenttime" pattern="yyyy-MM-dd HH:mm:ss z" locale="en,US"/>
    </tstamp>
    <property name="module.name" value="yukon" />
    <property name="log.dir" value="../logs" />
    <property name="dist.dir" value="../dist" />
    <property name="temp.dir" value="../temp" />

    <target name="targets">
        <echo message="The following targets are available" />
        <echo message="" />
        <echo message=" clean           - delete everything and start over clean" />
        <echo message=" clean-dist      - delete old packages and zip files" />
        <echo message="" />
        <echo message=" build           - clean, compile, and package everything" />
        <echo message=" build-release   - clean, compile, and package everything and store symbols"/>
        <echo message="" />
        <echo message=" build-client    - compile yukon-client module" />
        <echo message=" build-server    - compile yukon-server module" />
        <echo message=" build-install   - InstallShield"/>
        <echo message=" build-dist      - packages and zips everything up for distribution " />
        <echo message=" jsdoctoolkit    - generates documentation from commented JavaScript source code" />
   </target>

    <target name="svn-info-build">
        <mkdir dir="${log.dir}"/>
        <exec failonerror="false"
              dir="${basedir}"
              output="${basedir}/yukon-client/common/src/com/cannontech/build-info.xml"
              resultproperty="errorcode"
              executable="svn.exe" >
            <arg value="info"/>
            <arg value="--xml"/>
        </exec>
    </target>

    <target name="init">
        <property file="yukon-build/build_version.properties" />

        <condition property="internal.label" value="${version.internal}-${label}" else="${version.internal}">
            <isset property="label"/>
        </condition>
    
        <property name="yukon.build.label" value="${version.internal}"/>
        <property name="yukon.build.details" value="BUILD ${internal.label} ${currenttime} ${env.COMPUTERNAME}"/>
        
        <exec failonerror="false" dir="${basedir}/yukon-client/build" executable="cmd.exe">
            <arg line="/c set" />
        </exec>
    </target>

    <!-- build-release is now the only way to store symbols -->
    <target name="build" depends="init,clean,svn-info-build,buildTarget,build-dist-pdb" />
    <target name="build-release" depends="init,clean,svn-info-build,buildTarget,symstore,build-dist" />

    <target name="buildTarget" depends="build-client,build-server,build-install" />
    
    <target name="build-dbSnapshots" depends="init, updatedbscripts">
        <echo message="Creating database snapshot" />

        <ant dir="${basedir}/yukon-client/build" >
            <target name="createDatabaseSnapshots"/>
        </ant>
    </target>
    
    <target name="build-client" depends="init,clean,svn-info-build">
        <echo message="building module yukon-client" />
        <mkdir dir="${log.dir}" />
        
        <ant dir="${basedir}/yukon-client/build" >
            <target name="clean"/>
            <target name="build"/>
            <property name="yukon.build.version" value="${yukon.build.label}"/>
            <property name="yukon.build.details" value="${yukon.build.details}"/>
        </ant>
        
        <!-- yukon-help.jar -->
        <ant dir="${basedir}/yukon-client/build"
             target="help"
             inheritAll="true"/>
        <antcall target="runUnitTests" />
    </target>
    
    <target name="build-server" depends="init,clean,svn-info-build">
        <echo message="building module yukon-server" />
        <mkdir dir="${log.dir}" />

        <!-- build it -->
        <exec failonerror="true" 
              dir="${basedir}/yukon-server/"
              resultproperty="serverbuilderrorcode"
              executable="cmd.exe" >
            <arg value="/c" />
            <arg value="${basedir}\yukon-server\b.cmd" />
            <arg value="--exit" />
            <arg value="--basedir" />
            <arg value="${basedir}" />
            <arg value="--labels" />
            <arg value="${yukon.build.label}" />
            <arg value="${yukon.build.details}" />
        </exec>

        <fail message="yukon-server build FAILED">
            <condition>
                <isfailure code="${serverbuilderrorcode}" />
            </condition>
        </fail>

        <!-- <antcall target="server-unit-tests"/>  this has been breaking the build, removed for now. -->
    </target>

    <target name="build-install">
        <echo message="building module yukon-install" />
        <mkdir dir="${log.dir}" />
        
        <property name="client.bag" value="${basedir}/yukon-client/lib" />
        <property name="webcontent.bag" value="${basedir}/yukon-client/lib/WebContent" />
        <property name="install.bag" value="${basedir}/yukon-install/build" />
        <property name="server.bag" value="${basedir}/yukon-server/bin" />
        
        <!-- Yukon Base Component -->
        <delete dir="${install.bag}"/>
        <mkdir dir="${install.bag}/Yukon Base"/>
        
        <!-- Yukon Base Component (Client) -->
        <property name="client.dir" value="${install.bag}/Yukon Base/Client"/>
        <property name="client.bin" value="${client.dir}/bin"/>
        <property name="yukon.exampleXml" value="${basedir}/yukon-client/lib/exampleXml"/>
        <mkdir dir="${client.dir}"/>
           <mkdir dir="${client.dir}/Export"/>
           <mkdir dir="${client.dir}/Log"/>
        
        <copy todir="${client.bag}" preservelastmodified="yes">
            <fileset dir="${basedir}/yukon-client/build/lib" excludes="*.jar"/>
            <fileset dir="${basedir}/yukon-client/sensus-jms/lib"/>
            <fileset dir="${basedir}/yukon-client/multispeak/lib" excludes="*source*.jar,fart.exe"/>
         </copy>

        <copy todir="${client.bag}" preservelastmodified="yes">
            <fileset dir="${basedir}/yukon-client/third-party">
                <include name="**/*.jar"/>
                <exclude name="easymock-3.0.jar"/>
                <exclude name="h2-1.4.178.jar"/>
                <exclude name="objenesis-1.2.jar"/>
              </fileset>
        </copy>
        
        <copy todir="${client.bin}" preservelastmodified="true">
            <fileset dir="${basedir}/yukon-install/resources/client_common_dlls" />
            <fileset dir="${client.bag}" excludes="*.txt,*.xml,*.properties,*.debug,images/**,commands/**,easymock-3.0.jar,h2-1.4.178.jar,objenesis-1.2.jar"/>
            <fileset file="${basedir}/yukon-client/billing/src/main/resources" includes="*.bat"/>
            <fileset file="${basedir}/yukon-client/commander/src/main/resources/CommanderIcon.ico"/>
            <fileset file="${basedir}/yukon-client/dbeditor/resource/dbEditorIcon.ico"/>
            <fileset dir="${basedir}/yukon-client/export/conf" />
            <fileset dir="${basedir}/yukon-client/notification/conf" />
            <fileset dir="${basedir}/yukon-client/simulators/conf"/>
            <fileset dir="${basedir}/yukon-client/tools/src/main/resources" includes="*.bat" />
            <fileset file="${basedir}/yukon-client/trending/resource/GraphIcon.ico"/>
            <fileset file="${basedir}/yukon-client/tdc/resource/tdcIcon.ico"/>
            <fileset file="${basedir}/yukon-install/resources/shortcut_icons/YukonSetup.ico"/>
            <fileset file="${basedir}/yukon-install/resources/shortcut_icons/YukonLogin.ico"/>
            <fileset dir="${basedir}/yukon-client/services/conf"/>
            <fileset dir="${basedir}/yukon-client/yukon-message-broker/conf"/>
            <fileset dir="${basedir}/yukon-client/yukon-watchdog-service/conf"/>
            <fileset dir="${basedir}/yukon-client/sensus-jms/conf"/>
        </copy>
        
        <antcall target="copy_web_content"/>
        
        <mkdir dir="${yukon.exampleXml}"/>
        <copy file="${basedir}/yukon-client/common/src/com/cannontech/amr/rfn/service/pointmapping/rfnPointMapping.xml" 
            tofile="${yukon.exampleXml}/rfnPointMapping_Example.xml"/>

        <signjar alias="cannon5" storepass="cti123" keystore="${basedir}/yukon-client/build/keys/jarKeyStore">
            <fileset dir="${client.bin}">
                <include name="*.jar"/>
                <exclude name="activation.jar"/>
                <exclude name="azure-core-0.9.7.jar"/>
                <exclude name="azure-servicebus-0.9.7.jar"/>
                <exclude name="sqljdbc42.jar"/>
            </fileset>
        </signjar>

        <!-- Yukon Base Component (Server) -->      
        <property name="server.dir" value="${install.bag}/Yukon Base/Server"/>
        <property name="server.bin" value="${server.dir}/bin"/>
        <mkdir dir="${server.dir}"/>
        
        <copy todir="${server.bin}" preservelastmodified="true">
            <fileset dir="${server.bag}" excludes="unittests/**"/>
            <fileset dir="${basedir}/yukon-install/resources/common_dlls"/>
            <fileset dir="${basedir}/yukon-install/resources/scripts"/>
        </copy>
        
        <copy todir="${server.dir}/MACSscripts" file="${server.bag}/init.tcl" preservelastmodified="true"/>
        <mkdir dir="${server.dir}/MACSftp"/>
        <mkdir dir="${server.dir}/Export"/>
        <mkdir dir="${server.dir}/Import"/>
        <mkdir dir="${server.dir}/Log"/>
        
        <!-- Initial Server Config Component -->
        <copy todir="${install.bag}/Initial Server Config/Config" file="${basedir}/yukon-install/resources/master.cfg" preservelastmodified="true"/>

        <!-- Config Properties Component -->
        <copy todir="${install.bag}/Config Properties" preservelastmodified="true">
            <fileset dir="${basedir}/yukon-install/resources" includes="*Logging.xml," casesensitive="false">
            </fileset>
        </copy>
        
        <!-- Common Directories Component -->
        <copy todir="${install.bag}/Common Directories/Config/Example" preservelastmodified="true">
            <fileset file="${basedir}/yukon-install/resources/master.cfg"/>
            <fileset file="${basedir}/yukon-install/resources/configuration.properties"/>
            <fileset file="${basedir}/yukon-install/resources/deviceDefinition_Example.xml"/>
            <fileset dir="${client.bag}/exampleXml"/>
        </copy>
        
        <!-- JRE Component -->
        <copy todir="${install.bag}/JRE" preservelastmodified="true">
            <fileset dir="${basedir}/yukon-install/JRE" />
        </copy>

        <!-- Tomcat Component -->
        <copy todir="${install.bag}/Tomcat" preservelastmodified="true">
            <fileset dir="${basedir}/yukon-install/Tomcat85" />
        </copy>
        <copy file="${basedir}/yukon-build/yukonservice.bat"
            todir="${install.bag}/Tomcat/bin" preservelastmodified="true"/>

        <!-- WebStart Component -->
        <copy todir="${install.bag}/WebStartJRE" preservelastmodified="true">
            <fileset dir="${basedir}/yukon-install/WebStartJRE" />
        </copy>

        <!-- Yukon Web Deployment Component -->
        <copy todir="${install.bag}/Yukon Web Deployment/ROOT" preservelastmodified="true">
            <fileset dir="${basedir}/yukon-install/JRE/bin" includes="jar.exe,hpi.dll,java.dll,verify.dll,zip.dll,jli.dll,msvcr71.dll" />
            <fileset dir="${webcontent.bag}" />
        </copy>
        <copy todir="${install.bag}/Yukon Web Deployment/ROOT/client" file="${basedir}/yukon-install/JRE/bin/server/jvm.dll" preservelastmodified="true"/>
        <copy todir="${install.bag}/Yukon Web Deployment/lib" file="${basedir}/yukon-install/JRE/lib/rt.jar" preservelastmodified="true"/>
        <copy todir="${install.bag}/Yukon Web Deployment/lib/i386" file="${basedir}/yukon-install/JRE/lib/amd64/jvm.cfg" preservelastmodified="true"/>

        <!-- Wrapper files -->
        <copy todir="${install.bag}/Wrapper/Client/bin" preservelastmodified="true">
            <fileset dir="${install.bag}/Yukon Base/Client/bin" includes="*.exe,*.conf,*.dll"/>
        </copy>
        
        <exec executable="svnversion" outputproperty="svnversion" />
        <echo message="SVN Version: ${svnversion}"/>
        <echo message="SVN Version: ${svnversion}" file="${install.bag}/svnversion.txt"/>

        <!-- Location of the stand-alone build module -->
        <property name="isshield" location="C:\Program Files (x86)\InstallShield\2012Spring SAB\System\IsCmdBld.exe" />
        <!-- Location of the installer data file -->
        <property name="isfile" location='${basedir}\yukon-install\YukonSetupX\Yukon Installer.ism' />
        
        <!-- Build the installer -->
        <exec failonerror="false" executable="${isshield}" resultproperty="installererrorcode">
            <arg line="-p '${isfile}'" />
            <!-- Populate the YukonBuildVersion environment variable so installer version matches yukon version -->
            <env key="YukonBuildVersion" value="${version.internal}" />
        </exec>

        <condition property="out" value="${erroroutput}" else="">
            <length file="${log.dir}/install-error.log" when="ne" length="0" />
        </condition>

        <length file="${log.dir}/install-error.log" property="file.length" />

        <echo message="${out}" />

        <fail message="${errormessage}">
            <condition>
                <isfailure code="${installererrorcode}" />
            </condition>
        </fail>
    </target>

    <target name="copy_web_content" >
        <property name="yukon.lib" value="${basedir}/yukon-client/lib" />
        <property name="yukon-web" value="${basedir}/yukon-client/yukon-web" />

        <mkdir dir="${yukon-web}/WebContent_merged"  />
                
        <!-- Copy all of the necessary web application files into the deploy directory -->   
        <copy todir="${yukon-web}/WebContent_merged" includeemptydirs="false">
            <fileset dir="${yukon-web}/WebContent">
                <exclude name="**/CVS" />
                <exclude name="WEB-INF/web.xml" />
                <exclude name="WEB-INF/classes/**" />
                <exclude name="**/.*" />
                <exclude name="**/build.xml" />
                <exclude name="**/*.jsp" />
                <exclude name="**/*.jspf" />
                <exclude name="**/*.tag" />
            </fileset>
        </copy>

        <!--
            Copy all jars from the yukon lib directory into the WebContent_merged/WEB-INF/lib.
            Skip jars that are part of Tomcat and jars we use for testing.
        -->
        <copy todir="${yukon-web}/WebContent_merged/WEB-INF/lib" flatten="true">
           <fileset dir="${yukon.lib}" >
              <include name="**/*.jar" />
              <exclude name="catalina.jar"/>
              <exclude name="easymock-3.0.jar"/>
              <exclude name="h2-1.4.178.jar"/>
              <exclude name="jsp-api.jar"/>
              <exclude name="servlet-api.jar"/>
              <exclude name="tomcat-api.jar"/>
              <exclude name="tomcat-util.jar"/>
           </fileset>
        </copy>

        <!-- Copy the dummy login.jsp file into the deploy directory -->   
        <copy todir="${yukon-web}/WebContent_merged" flatten="true" file="${yukon-web}/resources/login.jsp" overwrite="true"/>

        <!-- Copy everything to yukon-client dir -->   
        <mkdir dir="${yukon.lib}/WebContent" />
        <copy todir="${yukon.lib}/WebContent">
            <fileset dir="${yukon-web}/WebContent_merged" />
        </copy>
        <copy tofile="${yukon.lib}/WebContent/WEB-INF/web.xml" file="${yukon.lib}/generated_web.xml" />
        
    </target>

    <target name="build-dist" depends="updatedbscripts">
        <mkdir dir="${temp.dir}" />
        <copy todir="${temp.dir}/YukonInstall">
            <fileset dir="${basedir}/yukon-install/YukonSetupX/Media/Release 1/Package" />
        </copy>
        <copy todir="${temp.dir}/YukonMisc/YukonDatabase/DatabaseValidation">
            <fileset dir="${basedir}/yukon-client/common/src/com/cannontech/database/snapshot" />
        </copy>
        <copy todir="${temp.dir}/YukonMisc/YukonDatabase/DatabaseCreation">
            <fileset dir="${basedir}/yukon-database/CreationScripts" />
        </copy>
        <copy todir="${temp.dir}/YukonMisc/YukonDatabase/DatabaseUpdates/Oracle">
            <fileset dir="${basedir}/yukon-database/DBUpdates/oracle" />
        </copy>
        <copy todir="${temp.dir}/YukonMisc/YukonDatabase/DatabaseUpdates/SqlServer">
            <fileset dir="${basedir}/yukon-database/DBUpdates/sqlserver" />
        </copy>
        
        <mkdir dir="${dist.dir}" />
        
        <zip destfile="${dist.dir}/yukon_${DSTAMP}_${TSTAMP}_${version.external.filenameSafe}.zip">
            <fileset dir="${temp.dir}" />
        </zip>

        <delete dir="${temp.dir}" />
    </target>

    <target name="build-dist-pdb" depends="build-dist">
        <mkdir dir="${temp.dir}" />

        <zip destfile="${temp.dir}/YukonInstall/yukon-pdb.zip" update="true">
          <fileset dir="${basedir}/yukon-server/pdb" />
        </zip>
        <zip destfile="${dist.dir}/yukon_${DSTAMP}_${TSTAMP}_${version.external.filenameSafe}.zip" update="true">
            <fileset dir="${temp.dir}" />
        </zip>

        <delete dir="${temp.dir}" />
    </target>

    <target name="clean-dist">
        <delete dir="${dist.dir}" />
    </target>

    <target name="clean">
       <delete dir="${dist.dir}" />
        <delete dir="${log.dir}" />
    </target>

    <target name="runUnitTests">
        <exec failonerror="true" dir="${basedir}/yukon-client/build" executable="cmd.exe">
            <arg line="/c antExit.bat -Dyukon.build.version='${yukon.build.label}' runUnitTests"/>
        </exec>
    </target>

    <target name="signclient">
        <exec failonerror="true" dir="${basedir}/yukon-client/build" executable="cmd.exe">
            <arg line="/c antExit.bat sign" />
        </exec>
    </target>
    
    <target name="symstore">
        <!-- Push a command to retreive the matching source code from svn into the pdb -->
        <exec failonerror="true" dir="yukon-build/srcsrv/" executable="cmd.exe">
        <arg line='/c svnindex.cmd /debug /symbols=${basedir}\yukon-server /source=${basedir}\yukon-server'/>
        </exec>   

        <!-- Now put these PDB files into the Symbol Store -->
        <property name="symbol_server" value="\\localhost\SYMBOLS" />
        <exec failonerror="true" dir="yukon-build/symbolserver/" executable="cmd.exe">
        <arg line='/c symstore.exe add /r /f ${basedir}\yukon-server\*.* /s ${symbol_server} /t "Yukon Server" /v "${yukon.build.details}"'/>
        </exec>   
    </target>
        
    <target name="updatedbscripts">
        <echo message="version: ${version.major}.${version.minor}.${version.revision}" />
        <ant dir="${basedir}/yukon-database"
             target="build"
             inheritAll="false"
             inheritRefs="false">
            <property name="version.major" value="${version.major}"/>
            <property name="version.minor" value="${version.minor}"/>
            <property name="version.revision" value="${version.revision}"/>
        </ant>
        
    </target>
    
    <target name="jsdoctoolkit">
        <taskdef name= "jsdoctoolkit" classname="uk.co.darrenhurley.ant.tasks.JsDocToolkit" classpath="yukon-build/jsdoc-toolkit/jsdoc-toolkit-ant-task-1.1.2.jar;yukon-build/jsdoc-toolkit/java/classes/js.jar"/>
        <jsdoctoolkit jsdochome="${basedir}/yukon-build/jsdoc-toolkit/" template="/jsdoc" outputdir="${basedir}/yukon-build/jsdoc" includeundocumented="true" >
            <source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript" />
            <source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/stars" />
            <source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/yukon/ui" />
            <source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/yukon/util" />
            <source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/lib/jQuery/plugins/dynatree/treeHelper.js" />
            <source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/lib/jQueryUI/plugins/dialog-helper.js" />
            <source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/lib/jQuery/plugins/jqGrid/jqGridHelper.js" />
        </jsdoctoolkit>
    </target>

</project>
