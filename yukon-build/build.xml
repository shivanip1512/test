<?xml version="1.0" ?>
<project name="Yukon CruiseControl Ant Build Script" default="targets" basedir="..">

    <property environment="env" />
    <tstamp />
    <property name="tag.date" value="${DSTAMP}" />
    <property name="tag.time" value="${TSTAMP}" />
    <property name="yukon.build.version" value="${tag.date}_${yukon.tag}_${tag.time}" />
    <property name="build.label" value="3_5_0_cc" />
    <property name="module.name" value="yukon" />
    <property name="log.dir" value="./logs" />
    <property name="dist.dir" value="./dist" />
    <property name="temp.dir" value="./temp" />


    <target name="targets">
        <echo message="The following targets are available" />
        <echo message="                  		For all the build targets:" />
        <echo message="                  		define build.label to embed a label or version into the software" />
        <echo message=" tag            			- tag the current sandbox, define yukon.tag" />
        <echo message="                  		I.e. build.label=3_3_3 will create a tag like TG20061003_3_3_3_103043" />
        <echo message=" branch         			- branch the current sandbox, define yukon.tag" />
        <echo message="                  		I.e. build.label=3_3_3 will result in a branch tag like BR20061003_3_3_3_103043" />
        <echo message="" />
        <echo message=" checkout				- cvs checkout the entire Yukon project" />
        <echo message="                  		  define yukon.tag to checkout a specific tag or branch" />
        <echo message="" />
        <echo message=" update					- cvs update the entire Yukon project" />
        <echo message="                  		  define yukon.tag to update a specific tag or branch" />
        <echo message=" update-client			- cvs update yukon-client module" />
        <echo message=" update-server			- cvs update yukon-server module" />
        <echo message="" />
        <echo message=" clean					- delete everything and start over clean" />
        <echo message=" cleandist				- delete old packages and zip files" />
        <echo message="" />
        <echo message=" build					- clean, checkout, compile, and package everything" />
        <echo message=" build-client				- cvs update, and compile yukon-client module" />
        <echo message=" build-server				- cvs update, and compile yukon-server module" />
        <echo message=" build-install				- InstallShield"/>
        <echo message=" builddist				- packages and zips everything up for distribution " />
        <echo message="" />
    </target>

    <target name="init_date">
        <tstamp>
            <format property="cvstimestamp" pattern="yyyy-MM-dd HH:mm:ss" locale="en,US"/>
        </tstamp>
    </target>

    <target name="init_tag">
        <condition property="yukon.tag" value="${yukon.tag}" else="HEAD">
            <isset property="yukon.tag"/>
        </condition>
    </target>

    <target name="init_cvs" depends="init_date,init_tag"/>

    <target name="checkout" depends="init_cvs">
        <echo message="checking out module yukon by tag or branch: ${yukon.tag}" />
        <cvs tag="${yukon.tag}"
             package="${module.name}"
             reallyquiet="false"/>
    </target>

    <target name="update" depends="init_cvs">
        <echo message="updating module yukon by timestamp: ${cvstimestamp}" />
        <cvs dest="${module.name}" 
             command="update -A -d" 
             reallyquiet="false"
             date="${cvstimestamp}"/>
    </target>

    <target name="update-client" depends="init_cvs">
        <echo message="updating module yukon-client by timestamp: ${cvstimestamp}" />
        <cvs dest="${module.name}/yukon-client" 
             command="update -A -d" 
             reallyquiet="false"
        	 date="${cvstimestamp}"/>
    </target>

    <target name="update-server" depends="init_cvs">
        <echo message="updating module yukon-server by timestamp: ${cvstimestamp}" />
        <cvs dest="${module.name}/yukon-server" 
             command="update -A -d"
             reallyquiet="false"
             date="${cvstimestamp}"/>
    </target>

    <target name="build" depends="clean,checkout,buildTarget,builddist" />
    <target name="buildTarget" depends="build-clientTarget,build-serverTarget,build-installTarget" />

    <target name="build-client" depends="update-client,build-clientTarget" />
    <target name="build-clientTarget">
        <echo message="building module yukon-client" />
        <mkdir dir="${log.dir}" />

        <exec failonerror="false" dir="${module.name}/yukon-client/build" executable="cmd.exe" error="${log.dir}/client-error.log" output="${log.dir}/client-output.log" resultproperty="errorcode">
            <arg line="/c antExit.bat -Dyukon.build.version=${build.label} build" />
        </exec>

        <loadfile property="errormessage" srcFile="${log.dir}/client-error.log" />
        <loadfile property="erroroutput" srcFile="${log.dir}/client-output.log" />

        <condition property="out" value="${erroroutput}" else="">
            <isfailure code="${errorcode}"/>
        </condition>

        <echo message="${out}" />

        <fail message="${errormessage}">
            <condition>
                <isfailure code="${errorcode}" />
            </condition>
        </fail>

        <antcall target="runUnitTests" />

        <antcall target="signclient" />

    </target>


    <target name="build-server" depends="update-server,build-serverTarget" />
    <target name="build-serverTarget">
        <echo message="building module yukon-server" />
        <mkdir dir="${log.dir}" />
        <!--
        <replace file="${module.name}/yukon-server/COMMON/include/id_build.h" token="BUILDLABEL" value="${build.label}"/>
-->
        <exec failonerror="false" dir="${module.name}/yukon-server/" executable="cmd.exe" error="${log.dir}/server-error.log" output="${log.dir}/server-output.log" resultproperty="errorcode">
            <arg line="/c buildhereexit.cmd '${build.label}'" />
        </exec>

        <loadfile property="errormessage" srcFile="${log.dir}/server-error.log" />
        <loadfile property="erroroutput" srcFile="${log.dir}/server-output.log" />

        <condition property="out" value="${erroroutput}" else="">
            <isfailure code="${errorcode}"/>
        </condition>

        <echo message="${out}" />

        <fail message="${errormessage}">
            <condition>
                <isfailure code="${errorcode}" />
            </condition>
        </fail>

        <!-- C++ Unit Tests -->
        <mkdir dir="${module.name}/yukon-server/bin/unittests"/>
        <exec failonerror="false" dir="${module.name}/yukon-server/bin/" executable="cmd.exe" error="${log.dir}/servertests-error.log" output="${log.dir}/servertests-output.log" resultproperty="testserrorcode">
            <arg line="/c runalltestsexit.cmd unittests/"/>
        </exec>

        <loadfile property="testserrormessage" srcFile="${log.dir}/servertests-error.log" />
        <loadfile property="testserroroutput" srcFile="${log.dir}/servertests-output.log" />

        <condition property="testsout" value="${erroroutput}" else="">
            <isfailure code="${testserrorcode}"/>
        </condition>

        <echo message="${testsout}" />

        <fail message="${testserrormessage}">
            <condition>
                <isfailure code="${testserrorcode}" />
            </condition>
        </fail>
    </target>

    <target name="build-install" depends="build-installTarget"/>
    <target name="build-installTarget">
        <echo message="building module yukon-install" />
        <mkdir dir="${log.dir}" />
		
        <property name="client.bag" value="${module.name}/yukon-client/lib" />
        <property name="install.bag" value="${module.name}/yukon-install/build" />
        <property name="server.bag" value="${module.name}/yukon-server/bin" />
        
        <!-- Yukon Base Component -->
        <delete dir="${install.bag}"/>
        <mkdir dir="${install.bag}/Yukon Base"/>
        
        <!-- Yukon Base Component (Client) -->
        <property name="client.dir" value="${install.bag}/Yukon Base/Client"/>
        <property name="client.bin" value="${client.dir}/bin"/>
        <mkdir dir="${client.dir}"/>
       	<mkdir dir="${client.dir}/Export"/>
       	<mkdir dir="${client.dir}/Log"/>
        
        <copy todir="${client.bin}" preservelastmodified="true">
            <fileset dir="${client.bag}" excludes="*.txt,*.xml,*.properties,*.debug,images/**,commands/**"/>
            <fileset file="${module.name}/yukon-client/monitor/resource/YukonNoAlarm.ico" />
            <fileset file="${module.name}/yukon-client/monitor/resource/AlarmMonitor.ico" />
            <fileset file="${module.name}/yukon-client/trending/resource/GraphIcon.ico"/>
            <fileset file="${module.name}/yukon-client/dbeditor/resource/dbEditorIcon.ico"/>
            <fileset file="${module.name}/yukon-client/tdc/resource/tdcIcon.ico"/>
            <fileset file="${module.name}/yukon-client/commander/resource/CommanderIcon.ico"/>
        </copy>
       	    
        <!-- Yukon Base Component (Server) -->      
        <property name="server.dir" value="${install.bag}/Yukon Base/Server"/>
        <property name="server.bin" value="${server.dir}/bin"/>
        <mkdir dir="${server.dir}"/>
		
        <copy todir="${server.bin}" preservelastmodified="true">
			<fileset dir="${server.bag}" excludes="unittests/**"/>
            <fileset dir="${module.name}/yukon-install/resources/common_dlls" />
		</copy>
        
        <copy todir="${server.dir}/MACSscripts" file="${server.bag}/init.tcl" preservelastmodified="true"/>
        <mkdir dir="${server.dir}/MACSftp"/>
        <mkdir dir="${server.dir}/Export"/>
        <mkdir dir="${server.dir}/Import"/>
        <mkdir dir="${server.dir}/Log"/>
        
        <!-- Initial Server Config Component -->
        <copy todir="${install.bag}/Initial Server Config/Config" file="${module.name}/yukon-install/resources/master.cfg" preservelastmodified="true"/>

        <!-- Config Properties Component -->
        <copy todir="${install.bag}/Config Properties" preservelastmodified="true">
            <fileset dir="${module.name}/yukon-install/resources" includes="*Logging.xml," casesensitive="false">
            </fileset>
        </copy>
        
        <!-- Common Directories Component -->
        <copy todir="${install.bag}/Common Directories/Config/Example" file="${module.name}/yukon-install/resources/master.cfg" preservelastmodified="true"/>
        
        <!-- Help Component -->
        <copy todir="${install.bag}/Help" preservelastmodified="true">
            <fileset file="${module.name}/yukon-help/tdc/out/Tabular_Data_Console_Help.chm" />
            <fileset file="${module.name}/yukon-help/commander/out/Yukon_Commander_Help.chm" />
            <fileset file="${module.name}/yukon-help/dbeditor/out/Yukon_Database_Editor_Help.chm" />
            <fileset file="${module.name}/yukon-help/trending/out/Yukon_Trending_Help.chm" />
        </copy>

        <!-- JRE 1.5 Component -->
        <copy todir="${install.bag}/JRE 1.5" preservelastmodified="true">
            <fileset dir="${module.name}/yukon-install/JRE" />
        </copy>

        <!-- Tomcat Component -->
        <copy todir="${install.bag}/Tomcat" preservelastmodified="true">
            <fileset dir="${module.name}/yukon-install/Tomcat5" />
        </copy>

        <!-- WebStart Component -->
        <copy todir="${install.bag}/WebStartJRE" preservelastmodified="true">
            <fileset dir="${module.name}/yukon-install/WebStartJRE" />
        </copy>

        <!-- Yukon Web Deployment Component -->
        <copy todir="${install.bag}/Yukon Web Deployment/bin" preservelastmodified="true">
            <fileset dir="${module.name}/yukon-install/JRE/bin" includes="jar.exe,hpi.dll,java.dll,verify.dll,zip.dll" />
            <fileset file="${client.bag}/yukon.war" />
        </copy>
        <copy todir="${install.bag}/Yukon Web Deployment/bin/client" file="${module.name}/yukon-install/JRE/bin/client/jvm.dll" preservelastmodified="true"/>
        <copy todir="${install.bag}/Yukon Web Deployment/lib" file="${module.name}/yukon-install/JRE/lib/rt.jar" preservelastmodified="true"/>
        <copy todir="${install.bag}/Yukon Web Deployment/lib/i386" file="${module.name}/yukon-install/JRE/lib/i386/jvm.cfg" preservelastmodified="true"/>

        <!-- This will be pointing to the install engine in yukon-install module -->
        <!--  <property name="isshield" location="C:\Program Files\Macrovision\IS12\System\IsCmdBld.exe" /> -->
        <property name="isshield" value="IsSABld.exe" />
        <!-- <property name="isfile" location="yukon-build/Yukon Installer/Yukon Installer.ism" /> -->
        <property name="isfile" location='${module.name}\yukon-install\YukonSetupX\Yukon Installer.ism' />

        <exec failonerror="false" executable="${isshield}" error="${log.dir}/install-error.log" output="${log.dir}/install-output.log" resultproperty="errorcode">
            <arg line="-p '${isfile}'" />
        </exec>

        <!-- NOT YET <delete dir="${install.lib}"/> NOT YET -->

        <loadfile property="errormessage" srcFile="${log.dir}/install-error.log" />
        <loadfile property="erroroutput" srcFile="${log.dir}/install-output.log" />

        <condition property="out" value="${erroroutput}" else="">
            <length file="${log.dir}/install-error.log" when="ne" length="0" />
        </condition>

        <length file="${log.dir}/install-error.log" property="file.length" />

        <echo message="${out}" />

        <fail message="${errormessage}">
            <condition>
                <isfailure code="${errorcode}" />
            </condition>
        </fail>
    </target>



    <target name="builddist">
        <mkdir dir="${temp.dir}" />
        <copy todir="${temp.dir}/installer">
            <fileset dir="${module.name}/yukon-install/YukonSetupX/Media/CD/Disk Images/Disk1" />
        </copy>
        <copy todir="${temp.dir}/eSubImages">
            <fileset dir="${module.name}/yukon-client/esub/images" />
        </copy>
        <copy todir="${temp.dir}/YukonDatabase/DatabaseCreation">
            <fileset dir="${module.name}/yukon-database/CreationScripts" />
        </copy>
        <copy todir="${temp.dir}/YukonDatabase/DatabaseUpdates/Oracle">
            <fileset dir="${module.name}/yukon-database/DBUpdates/oracle" />
        </copy>
        <copy todir="${temp.dir}/YukonDatabase/DatabaseUpdates/SqlServer">
            <fileset dir="${module.name}/yukon-database/DBUpdates/sqlserver" />
        </copy>
        <mkdir dir="${dist.dir}" />
        <zip destfile="${dist.dir}/yukon_${tag.date}_${build.label}_${tag.time}.zip">
            <fileset dir="${temp.dir}" />
        </zip>
        <delete dir="${temp.dir}" />
    </target>

    <target name="cleandist">
        <delete dir="${dist.dir}" />
    </target>

    <target name="clean">
        <delete dir="${module.name}" />
        <delete dir="${dist.dir}" />
        <delete dir="${log.dir}" />
    </target>

    <target name="runUnitTests">
        <exec failonerror="true" dir="${module.name}/yukon-client/build" executable="cmd.exe">
            <arg line="/c antExit.bat -Dyukon.build.version=${build.label} runUnitTests" />
        </exec>
    </target>

    <target name="signclient">
        <exec failonerror="true" dir="${module.name}/yukon-client/build" executable="cmd.exe">
            <arg line="/c antExit.bat sign" />
        </exec>
    </target>

    <!--	
    <target name="buildquick" depends="update,build,runUnitTests,cleandist,builddist">
    </target>

    <target name="buildclean" depends="clean,checkout,build,signclient,runUnitTests,tag,cleandist,builddist">
    </target>



    <target name="checkout" depends="init,checktagdefined,checkouthead,checkouttag">
    </target>



    <target name="update" depends="init,checktagdefined,updatehead,updatetag">        
    </target>

    <target name="updatehead" unless="isyukontagdefined">
        <cvs dest="./yukon" command="update -A -d"/>        
    </target>

    <target name="updatetag" if="isyukontagdefined">
        <cvs dest="./yukon" command="update" tag="${yukon.tag}"/>
    </target>

    <target name="clean">
       <delete dir="./yukon"/>
    </target>

    
    <target name="build" depends="buildclient,buildserver,buildinstaller">
    </target>

    <target name="buildserver">
       <exec failonerror="true" dir="./yukon/yukon-server/" executable="cmd.exe">
           <arg line="/c buildhereexitAntBuild.cmd ${build.label}"/>
       </exec>               
    </target>

    <target name="buildclient">
       <exec failonerror="true" dir="./yukon/yukon-client/build" executable="cmd.exe">
           <arg line="/c antExit.bat -Dyukon.build.version=${build.label} build"/>
       </exec>       
    </target>

    <target name="signclient">
        <exec failonerror="true" dir="./yukon/yukon-client/build" executable="cmd.exe">
	   <arg line="/c antExit.bat sign"/>
       </exec>
    </target>

    <target name="runUnitTests">
       <exec failonerror="true" dir="./yukon/yukon-client/build" executable="cmd.exe">
           <arg line="/c antExit.bat -Dyukon.build.version=${build.label} runUnitTests"/>
       </exec>               
    </target>

    <target name="buildinstaller">
	<copy todir="c:/software/install/lib/server">
            <fileset dir="./yukon/yukon-server/bin" includes="*.exe,*.dll"/>
        </copy>

	<copy todir="c:/software/install/lib/client">
            <fileset dir="./yukon/yukon-client/lib"/>
        </copy>

        <property name="isshield" location="C:\Program Files\Macrovision\IS12\System\IsCmdBld.exe"/>
        <property name="isfile" location='.\yukon\yukon-install\YukonSetupX\Yukon Installer.ism'/>
        <exec failonerror="true" executable="${isshield}">
            <arg line="-p '${isfile}'"/>
        </exec>    
    </target>



    <target name="tag" depends="init">
        <cvs command="tag TG${tag.date}_${build.label}_${tag.time} ./yukon"/> 
    </target>

    <target name="branch" depends="init">
        <cvs command="tag -b BR${tag.date}_${build.label}_${tag.time} ./yukon"/>
    </target>

    <target name="fail">
      <fail/>
    </target>
 -->
</project>
