<?xml version="1.0" ?>
<project name="Yukon Ant Build Script" default="targets" basedir="..">
    
    <property environment="env" />
    <tstamp/>
	<tstamp>
	    <format property="currenttime" pattern="yyyy-MM-dd HH:mm:ss z" locale="en,US"/>
    </tstamp>
    <property name="module.name" value="yukon" />
    <property name="log.dir" value="../logs" />
    <property name="dist.dir" value="../dist" />
    <property name="temp.dir" value="../temp" />

    <target name="targets">
        <echo message="The following targets are available" />
        <echo message="" />
        <echo message=" clean           - delete everything and start over clean" />
        <echo message=" clean-dist      - delete old packages and zip files" />
        <echo message="" />
        <echo message=" build           - clean, compile, and package everything" />
        <echo message=" build-release   - clean, compile, and package everything and store symbols"/>
        <echo message="" />
        <echo message=" build-client    - compile yukon-client module" />
        <echo message=" build-server    - compile yukon-server module" />
        <echo message=" build-install   - InstallShield"/>
        <echo message=" build-dist      - packages and zips everything up for distribution " />
        <echo message=" jsdoctoolkit    - generates documentation from commented JavaScript source code" />
   </target>


    <target name="svn-info-build">
        <mkdir dir="${log.dir}"/>
        <exec failonerror="false"
              dir="${basedir}"
              output="${basedir}/yukon-client/common/src/com/cannontech/build-info.xml"
              resultproperty="errorcode"
              executable="svn.exe" >
            <arg value="info"/>
            <arg value="--xml"/>
        </exec>
    </target>

    <target name="init" depends="check-setupcustomtasks,setupcustomtasks,loadpropertiesfile,cleanlabels">
	
	    <condition property="internal.label" value="${internal}-${label}" else="${internal}">
    	    <isset property="label"/>
	    </condition>
    
    	<property name="yukon.build.label" value="${external}"/>
    	<property name="yukon.build.details" value="BUILD ${internal.label} ${currenttime} ${env.COMPUTERNAME}"/>
		
		<exec failonerror="false" dir="${basedir}/yukon-client/build" executable="cmd.exe">
            <arg line="/c set" />
        </exec>

	</target>
    
    <target name="setupcustomtasks" unless="setupExists">
        <delete dir="yukon-build/build"/>
        
        <mkdir dir="yukon-build/build"/>
        
        <mkdir dir="yukon-build/build/classes"/>
    	<javac srcdir="yukon-build/src"
        	   destdir="yukon-build/build/classes"
               fork="true"
        	   debug="on">
    	    <classpath>
    	    	<fileset dir="yukon-build/lib">
    	        	<include name="**/*.jar"/>
    	        </fileset>
    	    </classpath> 
    	</javac>
        
        <mkdir dir="yukon-build/build/dist"/>
        <jar destfile="yukon-build/build/dist/customtasks.jar"
        	 basedir="yukon-build/build/classes"
        	 includes="**/*.class"/>
    </target>
    
    <target name="check-setupcustomtasks">
        <condition property="setupExists">
            <available file="yukon-build/build/dist/customtasks.jar"/>
        </condition>
    </target>
    
    <target name="loadpropertiesfile">
        <property file="yukon-build/build_version.properties" />
    </target>
        
    <target name="cleanlabels">
        <taskdef name="regexprop"
                 classname="com.cannontech.customtasks.RegexReplaceProperty">
            <classpath>
                <fileset dir="yukon-build/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset file="yukon-build/build/dist/customtasks.jar"/>
            </classpath>
        </taskdef>

        <regexprop name="cleaninternal"
                   value="${internal}"
                   match = "[^a-zA-Z0-9]"
                   replace="_"/>

        <regexprop name="cleanexternal"
                   value="${external}"
                   match="[^a-zA-Z0-9]"
                   replace="_"/>
    </target>
    
    <!-- build-release is now the only way to store symbols -->
    <target name="build" depends="init,clean,svn-info-build,buildTarget,build-dist" />
    <target name="build-release" depends="init,clean,svn-info-build,buildTarget,symstore,build-dist" />

    <target name="buildTarget" depends="build-client,build-server,build-install" />
    
    <target name="build-dbSnapshots" depends="init, updatedbscripts">
        <echo message="Creating database snapshot" />

    	<ant dir="${basedir}/yukon-client/build" >
            <target name="createDatabaseSnapshots"/>
        </ant>
    </target>
    
    <target name="build-client" depends="init,clean,svn-info-build">
        <echo message="building module yukon-client" />
        <mkdir dir="${log.dir}" />
		
		<ant dir="${basedir}/yukon-client/build" >
			<target name="clean"/>
			<target name="build"/>
			<property name="yukon.build.version" value="${yukon.build.label}"/>
			<property name="yukon.build.details" value="${yukon.build.details}"/>
		</ant>
		
        <!-- yukon-help.jar -->
        <ant dir="${basedir}/yukon-client/build"
        	 target="help"
        	 inheritAll="true"/>
        
        <antcall target="runUnitTests" />


    </target>
    
    <target name="build-server" depends="init,clean,svn-info-build">
        <echo message="building module yukon-server" />
        <mkdir dir="${log.dir}" />

        <!-- build it -->
        <exec failonerror="true" 
              dir="${basedir}/yukon-server/"
              resultproperty="serverbuilderrorcode"
              executable="cmd.exe" >
            <arg value="/c" />
            <arg value="${basedir}\yukon-server\b.cmd" />
            <arg value="--exit" />
            <arg value="--basedir" />
            <arg value="${basedir}" />
            <arg value="--labels" />
            <arg value="${yukon.build.label}" />
            <arg value="${yukon.build.details}" />
        </exec>

        <fail message="yukon-server build FAILED">
            <condition>
                <isfailure code="${serverbuilderrorcode}" />
            </condition>
        </fail>

        <!-- <antcall target="server-unit-tests"/>  this has been breaking the build, removed for now. -->
    </target>

    <target name="server-unit-tests">
        <mkdir dir="${basedir}/yukon-server/bin/unittests"/>
        <taskdef name="customexec" 
                 classname="com.cannontech.customtasks.ExecServerUnitTests">
            <classpath>
                <fileset dir="yukon-build/lib">
                        <include name="**/*.jar"/>
                </fileset>
                <fileset file="yukon-build/build/dist/customtasks.jar"/>
            </classpath>
        </taskdef>

        <customexec failonerror="true" dir="${basedir}/yukon-server/bin" todir="${basedir}/yukon-server/bin/unittests"/>
    </target>

    <target name="build-install">
        <echo message="building module yukon-install" />
        <mkdir dir="${log.dir}" />
		
        <property name="client.bag" value="${basedir}/yukon-client/lib" />
        <property name="webcontent.bag" value="${basedir}/yukon-client/lib/WebContent" />
        <property name="install.bag" value="${basedir}/yukon-install/build" />
        <property name="server.bag" value="${basedir}/yukon-server/bin" />
        
        <!-- Yukon Base Component -->
        <delete dir="${install.bag}"/>
        <mkdir dir="${install.bag}/Yukon Base"/>
        
        <!-- Yukon Base Component (Client) -->
        <property name="client.dir" value="${install.bag}/Yukon Base/Client"/>
        <property name="client.bin" value="${client.dir}/bin"/>
        <mkdir dir="${client.dir}"/>
       	<mkdir dir="${client.dir}/Export"/>
       	<mkdir dir="${client.dir}/Log"/>
        
        <copy todir="${client.bin}" preservelastmodified="true">
        	<fileset dir="${basedir}/yukon-install/resources/client_common_dlls" />
            <fileset dir="${client.bag}" excludes="*.txt,*.xml,*.properties,*.debug,images/**,commands/**"/>
            <fileset file="${basedir}/yukon-client/monitor/src/main/resources/YukonNoAlarm.ico" />
            <fileset file="${basedir}/yukon-client/monitor/src/main/resources/AlarmMonitor.ico" />
            <fileset file="${basedir}/yukon-client/trending/resource/GraphIcon.ico"/>
            <fileset file="${basedir}/yukon-client/dbeditor/resource/dbEditorIcon.ico"/>
            <fileset file="${basedir}/yukon-client/tdc/resource/tdcIcon.ico"/>
            <fileset file="${basedir}/yukon-client/commander/resource/CommanderIcon.ico"/>
            <fileset file="${basedir}/yukon-client/esub-editor/resource/esubEditorIcon.ico"/>
            <fileset file="${basedir}/yukon-install/resources/shortcut_icons/YukonSetup.ico"/>
            <fileset file="${basedir}/yukon-install/resources/shortcut_icons/YukonLogin.ico"/>       	
        </copy>

        <signjar alias="cannon4" storepass="cti123" keystore="${basedir}/yukon-client/build/keys/jarKeyStore">
			<fileset dir="${client.bin}">
				<include name="*.jar"/>
				<exclude name="activation.jar"/>
				<exclude name="bcpkix-jdk15on-149.jar"/>
				<exclude name="bcprov-jdk15on-149.jar"/>
			</fileset>
		</signjar>

    	<!-- The bouncy castle jars are signed with SHA1 and Java doesn't like jars signed with two different
    		 digest algorithms so we have to also sign the bouncy castle jars with SHA1.  We need to sign them
    		 ourselves because their cert isn't official enough but we can't remove their signature because
    		 we get errors. -->
        <signjar alias="cannon4" storepass="cti123" keystore="${basedir}/yukon-client/build/keys/jarKeyStore"
        		digestalg="SHA1">
			<fileset dir="${client.bin}">
				<include name="bcpkix-jdk15on-149.jar"/>
				<include name="bcprov-jdk15on-149.jar"/>
			</fileset>
		</signjar>

        <!-- Yukon Base Component (Server) -->      
        <property name="server.dir" value="${install.bag}/Yukon Base/Server"/>
        <property name="server.bin" value="${server.dir}/bin"/>
        <mkdir dir="${server.dir}"/>
		
        <copy todir="${server.bin}" preservelastmodified="true">
			<fileset dir="${server.bag}" excludes="unittests/**"/>
            <fileset dir="${basedir}/yukon-install/resources/common_dlls" />
		</copy>
        
        <copy todir="${server.dir}/MACSscripts" file="${server.bag}/init.tcl" preservelastmodified="true"/>
        <mkdir dir="${server.dir}/MACSftp"/>
        <mkdir dir="${server.dir}/Export"/>
        <mkdir dir="${server.dir}/Import"/>
        <mkdir dir="${server.dir}/Log"/>
		
        <!-- Initial Server Config Component -->
        <copy todir="${install.bag}/Initial Server Config/Config" file="${basedir}/yukon-install/resources/master.cfg" preservelastmodified="true"/>

        <!-- Config Properties Component -->
        <copy todir="${install.bag}/Config Properties" preservelastmodified="true">
            <fileset dir="${basedir}/yukon-install/resources" includes="*Logging.xml," casesensitive="false">
            </fileset>
        </copy>
        
        <!-- Common Directories Component -->
		<copy todir="${install.bag}/Common Directories/Config/Example" preservelastmodified="true">
			<fileset file="${basedir}/yukon-install/resources/master.cfg"/>
			<fileset dir="${client.bag}/exampleXml"/>
		</copy>
		
        <!-- JRE Component -->
        <copy todir="${install.bag}/JRE" preservelastmodified="true">
            <fileset dir="${basedir}/yukon-install/JRE" />
        </copy>

        <!-- Tomcat Component -->
        <copy todir="${install.bag}/Tomcat" preservelastmodified="true">
            <fileset dir="${basedir}/yukon-install/Tomcat7" />
        </copy>
        <copy file="${basedir}/yukon-build/yukonservice.bat"
        	todir="${install.bag}/Tomcat/bin" preservelastmodified="true"/>

        <!-- WebStart Component -->
        <copy todir="${install.bag}/WebStartJRE" preservelastmodified="true">
            <fileset dir="${basedir}/yukon-install/WebStartJRE" />
        </copy>

        <!-- Yukon Web Deployment Component -->
        <copy todir="${install.bag}/Yukon Web Deployment/ROOT" preservelastmodified="true">
            <fileset dir="${basedir}/yukon-install/JRE/bin" includes="jar.exe,hpi.dll,java.dll,verify.dll,zip.dll,jli.dll,msvcr71.dll" />
            <fileset dir="${webcontent.bag}" />
        </copy>
        <copy todir="${install.bag}/Yukon Web Deployment/ROOT/client" file="${basedir}/yukon-install/JRE/bin/client/jvm.dll" preservelastmodified="true"/>
        <copy todir="${install.bag}/Yukon Web Deployment/lib" file="${basedir}/yukon-install/JRE/lib/rt.jar" preservelastmodified="true"/>
        <copy todir="${install.bag}/Yukon Web Deployment/lib/i386" file="${basedir}/yukon-install/JRE/lib/i386/jvm.cfg" preservelastmodified="true"/>

        <!-- Wrapper files -->
        <copy todir="${install.bag}/Wrapper/Client/bin" preservelastmodified="true">
            <fileset dir="${install.bag}/Yukon Base/Client/bin" includes="*.exe,*.conf,*.dll"/>
        </copy>
        
        <!-- Location of the stand-alone build module -->
        <property name="isshield" location="C:\Program Files (x86)\InstallShield\2012Spring SAB\System\IsCmdBld.exe" />
        <!-- Location of the installer data file -->
        <property name="isfile" location='${basedir}\yukon-install\YukonSetupX\Yukon Installer.ism' />
		
		<!-- Build the installer -->
        <exec failonerror="false" executable="${isshield}" resultproperty="installererrorcode">
            <arg line="-p '${isfile}'" />
            <!-- Populate the YukonBuildVersion environment variable so installer version matches yukon version -->
            <env key="YukonBuildVersion" value="${internal}" />
        </exec>

        <condition property="out" value="${erroroutput}" else="">
            <length file="${log.dir}/install-error.log" when="ne" length="0" />
        </condition>

        <length file="${log.dir}/install-error.log" property="file.length" />

        <echo message="${out}" />

        <fail message="${errormessage}">
            <condition>
                <isfailure code="${installererrorcode}" />
            </condition>
        </fail>
    </target>

    <target name="build-dist" depends="updatedbscripts">
        <mkdir dir="${temp.dir}" />
        <copy todir="${temp.dir}/YukonInstall">
            <fileset dir="${basedir}/yukon-install/YukonSetupX/Media/Release 1/Package" />
        </copy>
        <copy todir="${temp.dir}/YukonMisc/YukonImages">
            <fileset dir="${basedir}/yukon-client/esub/images" />
        </copy>
		<copy todir="${temp.dir}/YukonMisc/YukonDatabase/DatabaseValidation">
			<fileset dir="${basedir}/yukon-client/common/src/com/cannontech/database/snapshot" />
		</copy>
        <copy todir="${temp.dir}/YukonMisc/YukonDatabase/DatabaseCreation">
            <fileset dir="${basedir}/yukon-database/CreationScripts" />
        </copy>
        <copy todir="${temp.dir}/YukonMisc/YukonDatabase/DatabaseUpdates/Oracle">
            <fileset dir="${basedir}/yukon-database/DBUpdates/oracle" />
        </copy>
        <copy todir="${temp.dir}/YukonMisc/YukonDatabase/DatabaseUpdates/SqlServer">
            <fileset dir="${basedir}/yukon-database/DBUpdates/sqlserver" />
        </copy>
        
        <mkdir dir="${dist.dir}" />
        
        <zip destfile="${dist.dir}/yukon_${DSTAMP}_${TSTAMP}_${cleanexternal}.zip">
            <fileset dir="${temp.dir}" />
        </zip>

        <delete dir="${temp.dir}" />
    </target>

    <target name="clean-dist">
        <delete dir="${dist.dir}" />
    </target>

    <target name="clean">
       <delete dir="${dist.dir}" />
        <delete dir="${log.dir}" />
    </target>

    <target name="runUnitTests">
        <exec failonerror="true" dir="${basedir}/yukon-client/build" executable="cmd.exe">
            <arg line="/c antExit.bat -Dyukon.build.version='${yukon.build.label}' runUnitTests"/>
        </exec>
    </target>

    <target name="signclient">
        <exec failonerror="true" dir="${basedir}/yukon-client/build" executable="cmd.exe">
            <arg line="/c antExit.bat sign" />
        </exec>
    </target>
    
    <target name="symstore">
        <exec failonerror="true" dir="yukon-build/symbolserver/" executable="cmd.exe">
            <arg line='/c symstore add /r /f ${basedir}\yukon-server\*.* /s \\localhost\SYMBOLS /t "Yukon Server" /v "${yukon.build.details}"'/>
        </exec>   
    </target>
        
    <target name="updatedbscripts">
    	<taskdef name="createdbversions" 
                 classname="com.cannontech.customtasks.CreateDBVersions"
                 classpath="yukon-build/build/dist/customtasks.jar"/>
        
        <createdbversions buildlabel="${internal}"/>
        
        <ant dir="${basedir}/yukon-database"
             target="build"
             inheritAll="false"
             inheritRefs="false">
        	<property name="yukon.major" value="${yukon.major}"/>
        	<property name="yukon.minor" value="${yukon.minor}"/>
        	<property name="yukon.revision" value="${yukon.revision}"/>
        </ant>
        
    </target>
    
    <target name="jsdoctoolkit">
    	<taskdef name= "jsdoctoolkit" classname="uk.co.darrenhurley.ant.tasks.JsDocToolkit" classpath="yukon-build/jsdoc-toolkit/jsdoc-toolkit-ant-task-1.1.2.jar;yukon-build/jsdoc-toolkit/java/classes/js.jar"/>
    	<jsdoctoolkit jsdochome="${basedir}/yukon-build/jsdoc-toolkit/" template="/jsdoc" outputdir="${basedir}/yukon-build/jsdoc" includeundocumented="true" >
        	<source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript" />
        	<source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/stars" />
        	<source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/yukon/ui" />
        	<source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/yukon/util" />
        	<source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/lib/jQuery/plugins/dynatree/treeHelper.js" />
        	<source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/lib/jQueryUI/plugins/dialog-helper.js" />
        	<source file="${basedir}/yukon-client/yukon-web/WebContent/JavaScript/lib/jQuery/plugins/jqGrid/jqGridHelper.js" />
    	</jsdoctoolkit>
    </target>

    
</project>
